diff --git a/typings.d.ts b/typings.d.ts
index 06a7073028de16b769626188879c0e35777bf917..4bb6d01a0a72742543ce28f059f98a3d299755c3 100644
--- a/typings.d.ts
+++ b/typings.d.ts
@@ -1,133 +1,120 @@
 // This file is generated automatically by `scripts/build/typings.js`. Please, don't change it.
 
 // FP Interfaces
-
-interface CurriedFn1<A, R> {
-  (a: A): R
-}
-
-interface CurriedFn2<A, B, R> {
-  (a: A): CurriedFn1<B, R>
-  (a: A, b: B): R
-}
-
-interface CurriedFn3<A, B, C, R> {
-  (a: A): CurriedFn2<B, C, R>
-  (a: A, b: B): CurriedFn1<C, R>
-  (a: A, b: B, c: C): R
-}
-
-interface CurriedFn4<A, B, C, D, R> {
-  (a: A): CurriedFn3<B, C, D, R>
-  (a: A, b: B): CurriedFn2<C, D, R>
-  (a: A, b: B, c: C): CurriedFn1<D, R>
-  (a: A, b: B, c: C, d: D): R
-}
-
-// Type Aliases
-
-type Interval = {
-  start: Date | number
-  end: Date | number
-}
-type IntervalAliased = Interval
-
-type Locale = {
-  code?: string
-  formatDistance?: (...args: Array<any>) => any
-  formatRelative?: (...args: Array<any>) => any
-  localize?: {
-    ordinalNumber: (...args: Array<any>) => any
-    era: (...args: Array<any>) => any
-    quarter: (...args: Array<any>) => any
-    month: (...args: Array<any>) => any
-    day: (...args: Array<any>) => any
-    dayPeriod: (...args: Array<any>) => any
-  }
-  formatLong?: {
-    date: (...args: Array<any>) => any
-    time: (...args: Array<any>) => any
-    dateTime: (...args: Array<any>) => any
+declare module 'date-fns' {
+  interface CurriedFn1<A, R> {
+    (a: A): R
   }
-  match?: {
-    ordinalNumber: (...args: Array<any>) => any
-    era: (...args: Array<any>) => any
-    quarter: (...args: Array<any>) => any
-    month: (...args: Array<any>) => any
-    day: (...args: Array<any>) => any
-    dayPeriod: (...args: Array<any>) => any
+
+  interface CurriedFn2<A, B, R> {
+    (a: A): CurriedFn1<B, R>
+    (a: A, b: B): R
   }
-  options?: {
-    weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-    firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
+
+  interface CurriedFn3<A, B, C, R> {
+    (a: A): CurriedFn2<B, C, R>
+    (a: A, b: B): CurriedFn1<C, R>
+    (a: A, b: B, c: C): R
   }
-}
-type LocaleAliased = Locale
 
-type Duration = {
-  years?: number
-  months?: number
-  weeks?: number
-  days?: number
-  hours?: number
-  minutes?: number
-  seconds?: number
+  interface CurriedFn4<A, B, C, D, R> {
+    (a: A): CurriedFn3<B, C, D, R>
+    (a: A, b: B): CurriedFn2<C, D, R>
+    (a: A, b: B, c: C): CurriedFn1<D, R>
+    (a: A, b: B, c: C, d: D): R
+  }
 }
-type DurationAliased = Duration
 
-type Day = 0 | 1 | 2 | 3 | 4 | 5 | 6
-type DayAliased = Day
-
-// Exported Type Aliases
+// Type Aliases
 
 declare module 'date-fns' {
-  export type Interval = IntervalAliased
+  export type Interval = {
+    start: Date | number
+    end: Date | number
+  }
 
-  export type Locale = LocaleAliased
+  export type Locale = {
+    code?: string
+    formatDistance?: (...args: Array<any>) => any
+    formatRelative?: (...args: Array<any>) => any
+    localize?: {
+      ordinalNumber: (...args: Array<any>) => any
+      era: (...args: Array<any>) => any
+      quarter: (...args: Array<any>) => any
+      month: (...args: Array<any>) => any
+      day: (...args: Array<any>) => any
+      dayPeriod: (...args: Array<any>) => any
+    }
+    formatLong?: {
+      date: (...args: Array<any>) => any
+      time: (...args: Array<any>) => any
+      dateTime: (...args: Array<any>) => any
+    }
+    match?: {
+      ordinalNumber: (...args: Array<any>) => any
+      era: (...args: Array<any>) => any
+      quarter: (...args: Array<any>) => any
+      month: (...args: Array<any>) => any
+      day: (...args: Array<any>) => any
+      dayPeriod: (...args: Array<any>) => any
+    }
+    options?: {
+      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+      firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
+    }
+  }
 
-  export type Duration = DurationAliased
+  export type Duration = {
+    years?: number
+    months?: number
+    weeks?: number
+    days?: number
+    hours?: number
+    minutes?: number
+    seconds?: number
+  }
 
-  export type Day = DayAliased
+  export type Day = 0 | 1 | 2 | 3 | 4 | 5 | 6
 }
 
 // Regular Functions
 
 declare module 'date-fns' {
   function add(date: Date | number, duration: Duration): Date
-  namespace add {}
+  namespace add { }
 
   function addBusinessDays(date: Date | number, amount: number): Date
-  namespace addBusinessDays {}
+  namespace addBusinessDays { }
 
   function addDays(date: Date | number, amount: number): Date
-  namespace addDays {}
+  namespace addDays { }
 
   function addHours(date: Date | number, amount: number): Date
-  namespace addHours {}
+  namespace addHours { }
 
   function addISOWeekYears(date: Date | number, amount: number): Date
-  namespace addISOWeekYears {}
+  namespace addISOWeekYears { }
 
   function addMilliseconds(date: Date | number, amount: number): Date
-  namespace addMilliseconds {}
+  namespace addMilliseconds { }
 
   function addMinutes(date: Date | number, amount: number): Date
-  namespace addMinutes {}
+  namespace addMinutes { }
 
   function addMonths(date: Date | number, amount: number): Date
-  namespace addMonths {}
+  namespace addMonths { }
 
   function addQuarters(date: Date | number, amount: number): Date
-  namespace addQuarters {}
+  namespace addQuarters { }
 
   function addSeconds(date: Date | number, amount: number): Date
-  namespace addSeconds {}
+  namespace addSeconds { }
 
   function addWeeks(date: Date | number, amount: number): Date
-  namespace addWeeks {}
+  namespace addWeeks { }
 
   function addYears(date: Date | number, amount: number): Date
-  namespace addYears {}
+  namespace addYears { }
 
   function areIntervalsOverlapping(
     intervalLeft: Interval,
@@ -136,70 +123,70 @@ declare module 'date-fns' {
       inclusive?: boolean
     }
   ): boolean
-  namespace areIntervalsOverlapping {}
+  namespace areIntervalsOverlapping { }
 
   function clamp(date: Date | number, interval: Interval): Date
-  namespace clamp {}
+  namespace clamp { }
 
   function closestIndexTo(
     dateToCompare: Date | number,
     datesArray: (Date | number)[]
   ): number | undefined
-  namespace closestIndexTo {}
+  namespace closestIndexTo { }
 
   function closestTo(
     dateToCompare: Date | number,
     datesArray: (Date | number)[]
   ): Date | undefined
-  namespace closestTo {}
+  namespace closestTo { }
 
   function compareAsc(dateLeft: Date | number, dateRight: Date | number): number
-  namespace compareAsc {}
+  namespace compareAsc { }
 
   function compareDesc(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace compareDesc {}
+  namespace compareDesc { }
 
   function daysToWeeks(days: number): number
-  namespace daysToWeeks {}
+  namespace daysToWeeks { }
 
   function differenceInBusinessDays(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInBusinessDays {}
+  namespace differenceInBusinessDays { }
 
   function differenceInCalendarDays(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInCalendarDays {}
+  namespace differenceInCalendarDays { }
 
   function differenceInCalendarISOWeeks(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInCalendarISOWeeks {}
+  namespace differenceInCalendarISOWeeks { }
 
   function differenceInCalendarISOWeekYears(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInCalendarISOWeekYears {}
+  namespace differenceInCalendarISOWeekYears { }
 
   function differenceInCalendarMonths(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInCalendarMonths {}
+  namespace differenceInCalendarMonths { }
 
   function differenceInCalendarQuarters(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInCalendarQuarters {}
+  namespace differenceInCalendarQuarters { }
 
   function differenceInCalendarWeeks(
     dateLeft: Date | number,
@@ -209,19 +196,19 @@ declare module 'date-fns' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): number
-  namespace differenceInCalendarWeeks {}
+  namespace differenceInCalendarWeeks { }
 
   function differenceInCalendarYears(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInCalendarYears {}
+  namespace differenceInCalendarYears { }
 
   function differenceInDays(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInDays {}
+  namespace differenceInDays { }
 
   function differenceInHours(
     dateLeft: Date | number,
@@ -230,19 +217,19 @@ declare module 'date-fns' {
       roundingMethod?: string
     }
   ): number
-  namespace differenceInHours {}
+  namespace differenceInHours { }
 
   function differenceInISOWeekYears(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInISOWeekYears {}
+  namespace differenceInISOWeekYears { }
 
   function differenceInMilliseconds(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInMilliseconds {}
+  namespace differenceInMilliseconds { }
 
   function differenceInMinutes(
     dateLeft: Date | number,
@@ -251,13 +238,13 @@ declare module 'date-fns' {
       roundingMethod?: string
     }
   ): number
-  namespace differenceInMinutes {}
+  namespace differenceInMinutes { }
 
   function differenceInMonths(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInMonths {}
+  namespace differenceInMonths { }
 
   function differenceInQuarters(
     dateLeft: Date | number,
@@ -266,7 +253,7 @@ declare module 'date-fns' {
       roundingMethod?: string
     }
   ): number
-  namespace differenceInQuarters {}
+  namespace differenceInQuarters { }
 
   function differenceInSeconds(
     dateLeft: Date | number,
@@ -275,7 +262,7 @@ declare module 'date-fns' {
       roundingMethod?: string
     }
   ): number
-  namespace differenceInSeconds {}
+  namespace differenceInSeconds { }
 
   function differenceInWeeks(
     dateLeft: Date | number,
@@ -284,13 +271,13 @@ declare module 'date-fns' {
       roundingMethod?: string
     }
   ): number
-  namespace differenceInWeeks {}
+  namespace differenceInWeeks { }
 
   function differenceInYears(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInYears {}
+  namespace differenceInYears { }
 
   function eachDayOfInterval(
     interval: Interval,
@@ -298,7 +285,7 @@ declare module 'date-fns' {
       step?: number
     }
   ): Date[]
-  namespace eachDayOfInterval {}
+  namespace eachDayOfInterval { }
 
   function eachHourOfInterval(
     interval: Interval,
@@ -306,7 +293,7 @@ declare module 'date-fns' {
       step?: number
     }
   ): Date[]
-  namespace eachHourOfInterval {}
+  namespace eachHourOfInterval { }
 
   function eachMinuteOfInterval(
     interval: Interval,
@@ -314,22 +301,22 @@ declare module 'date-fns' {
       step?: number
     }
   ): Date[]
-  namespace eachMinuteOfInterval {}
+  namespace eachMinuteOfInterval { }
 
   function eachMonthOfInterval(interval: Interval): Date[]
-  namespace eachMonthOfInterval {}
+  namespace eachMonthOfInterval { }
 
   function eachQuarterOfInterval(interval: Interval): Date[]
-  namespace eachQuarterOfInterval {}
+  namespace eachQuarterOfInterval { }
 
   function eachWeekendOfInterval(interval: Interval): Date[]
-  namespace eachWeekendOfInterval {}
+  namespace eachWeekendOfInterval { }
 
   function eachWeekendOfMonth(date: Date | number): Date[]
-  namespace eachWeekendOfMonth {}
+  namespace eachWeekendOfMonth { }
 
   function eachWeekendOfYear(date: Date | number): Date[]
-  namespace eachWeekendOfYear {}
+  namespace eachWeekendOfYear { }
 
   function eachWeekOfInterval(
     interval: Interval,
@@ -338,13 +325,13 @@ declare module 'date-fns' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): Date[]
-  namespace eachWeekOfInterval {}
+  namespace eachWeekOfInterval { }
 
   function eachYearOfInterval(interval: Interval): Date[]
-  namespace eachYearOfInterval {}
+  namespace eachYearOfInterval { }
 
   function endOfDay(date: Date | number): Date
-  namespace endOfDay {}
+  namespace endOfDay { }
 
   function endOfDecade(
     date: Date | number,
@@ -352,34 +339,34 @@ declare module 'date-fns' {
       additionalDigits?: 0 | 1 | 2
     }
   ): Date
-  namespace endOfDecade {}
+  namespace endOfDecade { }
 
   function endOfHour(date: Date | number): Date
-  namespace endOfHour {}
+  namespace endOfHour { }
 
   function endOfISOWeek(date: Date | number): Date
-  namespace endOfISOWeek {}
+  namespace endOfISOWeek { }
 
   function endOfISOWeekYear(date: Date | number): Date
-  namespace endOfISOWeekYear {}
+  namespace endOfISOWeekYear { }
 
   function endOfMinute(date: Date | number): Date
-  namespace endOfMinute {}
+  namespace endOfMinute { }
 
   function endOfMonth(date: Date | number): Date
-  namespace endOfMonth {}
+  namespace endOfMonth { }
 
   function endOfQuarter(date: Date | number): Date
-  namespace endOfQuarter {}
+  namespace endOfQuarter { }
 
   function endOfSecond(date: Date | number): Date
-  namespace endOfSecond {}
+  namespace endOfSecond { }
 
   function endOfToday(): Date
-  namespace endOfToday {}
+  namespace endOfToday { }
 
   function endOfTomorrow(): Date
-  namespace endOfTomorrow {}
+  namespace endOfTomorrow { }
 
   function endOfWeek(
     date: Date | number,
@@ -388,13 +375,13 @@ declare module 'date-fns' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): Date
-  namespace endOfWeek {}
+  namespace endOfWeek { }
 
   function endOfYear(date: Date | number): Date
-  namespace endOfYear {}
+  namespace endOfYear { }
 
   function endOfYesterday(): Date
-  namespace endOfYesterday {}
+  namespace endOfYesterday { }
 
   function format(
     date: Date | number,
@@ -407,7 +394,7 @@ declare module 'date-fns' {
       useAdditionalDayOfYearTokens?: boolean
     }
   ): string
-  namespace format {}
+  namespace format { }
 
   function formatDistance(
     date: Date | number,
@@ -418,7 +405,7 @@ declare module 'date-fns' {
       locale?: Locale
     }
   ): string
-  namespace formatDistance {}
+  namespace formatDistance { }
 
   function formatDistanceStrict(
     date: Date | number,
@@ -430,7 +417,7 @@ declare module 'date-fns' {
       locale?: Locale
     }
   ): string
-  namespace formatDistanceStrict {}
+  namespace formatDistanceStrict { }
 
   function formatDistanceToNow(
     date: Date | number,
@@ -440,7 +427,7 @@ declare module 'date-fns' {
       locale?: Locale
     }
   ): string
-  namespace formatDistanceToNow {}
+  namespace formatDistanceToNow { }
 
   function formatDistanceToNowStrict(
     date: Date | number,
@@ -451,7 +438,7 @@ declare module 'date-fns' {
       locale?: Locale
     }
   ): string
-  namespace formatDistanceToNowStrict {}
+  namespace formatDistanceToNowStrict { }
 
   function formatDuration(
     duration: Duration,
@@ -462,7 +449,7 @@ declare module 'date-fns' {
       locale?: Locale
     }
   ): string
-  namespace formatDuration {}
+  namespace formatDuration { }
 
   function formatISO(
     date: Date | number,
@@ -471,7 +458,7 @@ declare module 'date-fns' {
       representation?: 'complete' | 'date' | 'time'
     }
   ): string
-  namespace formatISO {}
+  namespace formatISO { }
 
   function formatISO9075(
     date: Date | number,
@@ -480,10 +467,10 @@ declare module 'date-fns' {
       representation?: 'complete' | 'date' | 'time'
     }
   ): string
-  namespace formatISO9075 {}
+  namespace formatISO9075 { }
 
   function formatISODuration(duration: Duration): string
-  namespace formatISODuration {}
+  namespace formatISODuration { }
 
   function formatRelative(
     date: Date | number,
@@ -493,7 +480,7 @@ declare module 'date-fns' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): string
-  namespace formatRelative {}
+  namespace formatRelative { }
 
   function formatRFC3339(
     date: Date | number,
@@ -501,76 +488,76 @@ declare module 'date-fns' {
       fractionDigits?: 0 | 1 | 2 | 3
     }
   ): string
-  namespace formatRFC3339 {}
+  namespace formatRFC3339 { }
 
   function formatRFC7231(date: Date | number): string
-  namespace formatRFC7231 {}
+  namespace formatRFC7231 { }
 
   function fromUnixTime(unixTime: number): Date
-  namespace fromUnixTime {}
+  namespace fromUnixTime { }
 
   function getDate(date: Date | number): number
-  namespace getDate {}
+  namespace getDate { }
 
   function getDay(date: Date | number): 0 | 1 | 2 | 3 | 4 | 5 | 6
-  namespace getDay {}
+  namespace getDay { }
 
   function getDayOfYear(date: Date | number): number
-  namespace getDayOfYear {}
+  namespace getDayOfYear { }
 
   function getDaysInMonth(date: Date | number): number
-  namespace getDaysInMonth {}
+  namespace getDaysInMonth { }
 
   function getDaysInYear(date: Date | number): number
-  namespace getDaysInYear {}
+  namespace getDaysInYear { }
 
   function getDecade(date: Date | number): number
-  namespace getDecade {}
+  namespace getDecade { }
 
   function getDefaultOptions(): Object
-  namespace getDefaultOptions {}
+  namespace getDefaultOptions { }
 
   function getHours(date: Date | number): number
-  namespace getHours {}
+  namespace getHours { }
 
   function getISODay(date: Date | number): number
-  namespace getISODay {}
+  namespace getISODay { }
 
   function getISOWeek(date: Date | number): number
-  namespace getISOWeek {}
+  namespace getISOWeek { }
 
   function getISOWeeksInYear(date: Date | number): number
-  namespace getISOWeeksInYear {}
+  namespace getISOWeeksInYear { }
 
   function getISOWeekYear(date: Date | number): number
-  namespace getISOWeekYear {}
+  namespace getISOWeekYear { }
 
   function getMilliseconds(date: Date | number): number
-  namespace getMilliseconds {}
+  namespace getMilliseconds { }
 
   function getMinutes(date: Date | number): number
-  namespace getMinutes {}
+  namespace getMinutes { }
 
   function getMonth(date: Date | number): number
-  namespace getMonth {}
+  namespace getMonth { }
 
   function getOverlappingDaysInIntervals(
     intervalLeft: Interval,
     intervalRight: Interval
   ): number
-  namespace getOverlappingDaysInIntervals {}
+  namespace getOverlappingDaysInIntervals { }
 
   function getQuarter(date: Date | number): number
-  namespace getQuarter {}
+  namespace getQuarter { }
 
   function getSeconds(date: Date | number): number
-  namespace getSeconds {}
+  namespace getSeconds { }
 
   function getTime(date: Date | number): number
-  namespace getTime {}
+  namespace getTime { }
 
   function getUnixTime(date: Date | number): number
-  namespace getUnixTime {}
+  namespace getUnixTime { }
 
   function getWeek(
     date: Date | number,
@@ -580,7 +567,7 @@ declare module 'date-fns' {
       firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
     }
   ): number
-  namespace getWeek {}
+  namespace getWeek { }
 
   function getWeekOfMonth(
     date: Date | number,
@@ -589,7 +576,7 @@ declare module 'date-fns' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): number
-  namespace getWeekOfMonth {}
+  namespace getWeekOfMonth { }
 
   function getWeeksInMonth(
     date: Date | number,
@@ -598,7 +585,7 @@ declare module 'date-fns' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): number
-  namespace getWeeksInMonth {}
+  namespace getWeeksInMonth { }
 
   function getWeekYear(
     date: Date | number,
@@ -608,22 +595,22 @@ declare module 'date-fns' {
       firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
     }
   ): number
-  namespace getWeekYear {}
+  namespace getWeekYear { }
 
   function getYear(date: Date | number): number
-  namespace getYear {}
+  namespace getYear { }
 
   function hoursToMilliseconds(hours: number): number
-  namespace hoursToMilliseconds {}
+  namespace hoursToMilliseconds { }
 
   function hoursToMinutes(hours: number): number
-  namespace hoursToMinutes {}
+  namespace hoursToMinutes { }
 
   function hoursToSeconds(hours: number): number
-  namespace hoursToSeconds {}
+  namespace hoursToSeconds { }
 
   function intervalToDuration(interval: Interval): Duration
-  namespace intervalToDuration {}
+  namespace intervalToDuration { }
 
   function intlFormat(
     argument: Date | number,
@@ -646,7 +633,7 @@ declare module 'date-fns' {
       locale?: string | string[]
     }
   ): string
-  namespace intlFormat {}
+  namespace intlFormat { }
 
   function intlFormatDistance(
     date: Date | number,
@@ -659,37 +646,37 @@ declare module 'date-fns' {
       style?: string
     }
   ): string
-  namespace intlFormatDistance {}
+  namespace intlFormatDistance { }
 
   function isAfter(date: Date | number, dateToCompare: Date | number): boolean
-  namespace isAfter {}
+  namespace isAfter { }
 
   function isBefore(date: Date | number, dateToCompare: Date | number): boolean
-  namespace isBefore {}
+  namespace isBefore { }
 
   function isDate(value: any): boolean
-  namespace isDate {}
+  namespace isDate { }
 
   function isEqual(dateLeft: Date | number, dateRight: Date | number): boolean
-  namespace isEqual {}
+  namespace isEqual { }
 
   function isExists(year: number, month: number, day: number): boolean
-  namespace isExists {}
+  namespace isExists { }
 
   function isFirstDayOfMonth(date: Date | number): boolean
-  namespace isFirstDayOfMonth {}
+  namespace isFirstDayOfMonth { }
 
   function isFriday(date: Date | number): boolean
-  namespace isFriday {}
+  namespace isFriday { }
 
   function isFuture(date: Date | number): boolean
-  namespace isFuture {}
+  namespace isFuture { }
 
   function isLastDayOfMonth(date: Date | number): boolean
-  namespace isLastDayOfMonth {}
+  namespace isLastDayOfMonth { }
 
   function isLeapYear(date: Date | number): boolean
-  namespace isLeapYear {}
+  namespace isLeapYear { }
 
   function isMatch(
     dateString: string,
@@ -702,58 +689,58 @@ declare module 'date-fns' {
       useAdditionalDayOfYearTokens?: boolean
     }
   ): boolean
-  namespace isMatch {}
+  namespace isMatch { }
 
   function isMonday(date: Date | number): boolean
-  namespace isMonday {}
+  namespace isMonday { }
 
   function isPast(date: Date | number): boolean
-  namespace isPast {}
+  namespace isPast { }
 
   function isSameDay(dateLeft: Date | number, dateRight: Date | number): boolean
-  namespace isSameDay {}
+  namespace isSameDay { }
 
   function isSameHour(
     dateLeft: Date | number,
     dateRight: Date | number
   ): boolean
-  namespace isSameHour {}
+  namespace isSameHour { }
 
   function isSameISOWeek(
     dateLeft: Date | number,
     dateRight: Date | number
   ): boolean
-  namespace isSameISOWeek {}
+  namespace isSameISOWeek { }
 
   function isSameISOWeekYear(
     dateLeft: Date | number,
     dateRight: Date | number
   ): boolean
-  namespace isSameISOWeekYear {}
+  namespace isSameISOWeekYear { }
 
   function isSameMinute(
     dateLeft: Date | number,
     dateRight: Date | number
   ): boolean
-  namespace isSameMinute {}
+  namespace isSameMinute { }
 
   function isSameMonth(
     dateLeft: Date | number,
     dateRight: Date | number
   ): boolean
-  namespace isSameMonth {}
+  namespace isSameMonth { }
 
   function isSameQuarter(
     dateLeft: Date | number,
     dateRight: Date | number
   ): boolean
-  namespace isSameQuarter {}
+  namespace isSameQuarter { }
 
   function isSameSecond(
     dateLeft: Date | number,
     dateRight: Date | number
   ): boolean
-  namespace isSameSecond {}
+  namespace isSameSecond { }
 
   function isSameWeek(
     dateLeft: Date | number,
@@ -763,37 +750,37 @@ declare module 'date-fns' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): boolean
-  namespace isSameWeek {}
+  namespace isSameWeek { }
 
   function isSameYear(
     dateLeft: Date | number,
     dateRight: Date | number
   ): boolean
-  namespace isSameYear {}
+  namespace isSameYear { }
 
   function isSaturday(date: Date | number): boolean
-  namespace isSaturday {}
+  namespace isSaturday { }
 
   function isSunday(date: Date | number): boolean
-  namespace isSunday {}
+  namespace isSunday { }
 
   function isThisHour(date: Date | number): boolean
-  namespace isThisHour {}
+  namespace isThisHour { }
 
   function isThisISOWeek(date: Date | number): boolean
-  namespace isThisISOWeek {}
+  namespace isThisISOWeek { }
 
   function isThisMinute(date: Date | number): boolean
-  namespace isThisMinute {}
+  namespace isThisMinute { }
 
   function isThisMonth(date: Date | number): boolean
-  namespace isThisMonth {}
+  namespace isThisMonth { }
 
   function isThisQuarter(date: Date | number): boolean
-  namespace isThisQuarter {}
+  namespace isThisQuarter { }
 
   function isThisSecond(date: Date | number): boolean
-  namespace isThisSecond {}
+  namespace isThisSecond { }
 
   function isThisWeek(
     date: Date | number,
@@ -802,49 +789,49 @@ declare module 'date-fns' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): boolean
-  namespace isThisWeek {}
+  namespace isThisWeek { }
 
   function isThisYear(date: Date | number): boolean
-  namespace isThisYear {}
+  namespace isThisYear { }
 
   function isThursday(date: Date | number): boolean
-  namespace isThursday {}
+  namespace isThursday { }
 
   function isToday(date: Date | number): boolean
-  namespace isToday {}
+  namespace isToday { }
 
   function isTomorrow(date: Date | number): boolean
-  namespace isTomorrow {}
+  namespace isTomorrow { }
 
   function isTuesday(date: Date | number): boolean
-  namespace isTuesday {}
+  namespace isTuesday { }
 
   function isValid(date: any): boolean
-  namespace isValid {}
+  namespace isValid { }
 
   function isWednesday(date: Date | number): boolean
-  namespace isWednesday {}
+  namespace isWednesday { }
 
   function isWeekend(date: Date | number): boolean
-  namespace isWeekend {}
+  namespace isWeekend { }
 
   function isWithinInterval(date: Date | number, interval: Interval): boolean
-  namespace isWithinInterval {}
+  namespace isWithinInterval { }
 
   function isYesterday(date: Date | number): boolean
-  namespace isYesterday {}
+  namespace isYesterday { }
 
   function lastDayOfDecade(date: Date | number): Date
-  namespace lastDayOfDecade {}
+  namespace lastDayOfDecade { }
 
   function lastDayOfISOWeek(date: Date | number): Date
-  namespace lastDayOfISOWeek {}
+  namespace lastDayOfISOWeek { }
 
   function lastDayOfISOWeekYear(date: Date | number): Date
-  namespace lastDayOfISOWeekYear {}
+  namespace lastDayOfISOWeekYear { }
 
   function lastDayOfMonth(date: Date | number): Date
-  namespace lastDayOfMonth {}
+  namespace lastDayOfMonth { }
 
   function lastDayOfQuarter(
     date: Date | number,
@@ -852,7 +839,7 @@ declare module 'date-fns' {
       additionalDigits?: 0 | 1 | 2
     }
   ): Date
-  namespace lastDayOfQuarter {}
+  namespace lastDayOfQuarter { }
 
   function lastDayOfWeek(
     date: Date | number,
@@ -861,70 +848,70 @@ declare module 'date-fns' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): Date
-  namespace lastDayOfWeek {}
+  namespace lastDayOfWeek { }
 
   function lastDayOfYear(date: Date | number): Date
-  namespace lastDayOfYear {}
+  namespace lastDayOfYear { }
 
   function lightFormat(date: Date | number, format: string): string
-  namespace lightFormat {}
+  namespace lightFormat { }
 
   function max(datesArray: (Date | number)[]): Date
-  namespace max {}
+  namespace max { }
 
   function milliseconds(duration: Duration): number
-  namespace milliseconds {}
+  namespace milliseconds { }
 
   function millisecondsToHours(milliseconds: number): number
-  namespace millisecondsToHours {}
+  namespace millisecondsToHours { }
 
   function millisecondsToMinutes(milliseconds: number): number
-  namespace millisecondsToMinutes {}
+  namespace millisecondsToMinutes { }
 
   function millisecondsToSeconds(milliseconds: number): number
-  namespace millisecondsToSeconds {}
+  namespace millisecondsToSeconds { }
 
   function min(datesArray: (Date | number)[]): Date
-  namespace min {}
+  namespace min { }
 
   function minutesToHours(minutes: number): number
-  namespace minutesToHours {}
+  namespace minutesToHours { }
 
   function minutesToMilliseconds(minutes: number): number
-  namespace minutesToMilliseconds {}
+  namespace minutesToMilliseconds { }
 
   function minutesToSeconds(minutes: number): number
-  namespace minutesToSeconds {}
+  namespace minutesToSeconds { }
 
   function monthsToQuarters(months: number): number
-  namespace monthsToQuarters {}
+  namespace monthsToQuarters { }
 
   function monthsToYears(months: number): number
-  namespace monthsToYears {}
+  namespace monthsToYears { }
 
   function nextDay(date: Date | number, day: Day): Date
-  namespace nextDay {}
+  namespace nextDay { }
 
   function nextFriday(date: Date | number): Date
-  namespace nextFriday {}
+  namespace nextFriday { }
 
   function nextMonday(date: Date | number): Date
-  namespace nextMonday {}
+  namespace nextMonday { }
 
   function nextSaturday(date: Date | number): Date
-  namespace nextSaturday {}
+  namespace nextSaturday { }
 
   function nextSunday(date: Date | number): Date
-  namespace nextSunday {}
+  namespace nextSunday { }
 
   function nextThursday(date: Date | number): Date
-  namespace nextThursday {}
+  namespace nextThursday { }
 
   function nextTuesday(date: Date | number): Date
-  namespace nextTuesday {}
+  namespace nextTuesday { }
 
   function nextWednesday(date: Date | number): Date
-  namespace nextWednesday {}
+  namespace nextWednesday { }
 
   function parse(
     dateString: string,
@@ -938,7 +925,7 @@ declare module 'date-fns' {
       useAdditionalDayOfYearTokens?: boolean
     }
   ): Date
-  namespace parse {}
+  namespace parse { }
 
   function parseISO(
     argument: string,
@@ -946,40 +933,40 @@ declare module 'date-fns' {
       additionalDigits?: 0 | 1 | 2
     }
   ): Date
-  namespace parseISO {}
+  namespace parseISO { }
 
   function parseJSON(argument: string | number | Date): Date
-  namespace parseJSON {}
+  namespace parseJSON { }
 
   function previousDay(date: Date | number, day: number): Date
-  namespace previousDay {}
+  namespace previousDay { }
 
   function previousFriday(date: Date | number): Date
-  namespace previousFriday {}
+  namespace previousFriday { }
 
   function previousMonday(date: Date | number): Date
-  namespace previousMonday {}
+  namespace previousMonday { }
 
   function previousSaturday(date: Date | number): Date
-  namespace previousSaturday {}
+  namespace previousSaturday { }
 
   function previousSunday(date: Date | number): Date
-  namespace previousSunday {}
+  namespace previousSunday { }
 
   function previousThursday(date: Date | number): Date
-  namespace previousThursday {}
+  namespace previousThursday { }
 
   function previousTuesday(date: Date | number): Date
-  namespace previousTuesday {}
+  namespace previousTuesday { }
 
   function previousWednesday(date: Date | number): Date
-  namespace previousWednesday {}
+  namespace previousWednesday { }
 
   function quartersToMonths(quarters: number): number
-  namespace quartersToMonths {}
+  namespace quartersToMonths { }
 
   function quartersToYears(quarters: number): number
-  namespace quartersToYears {}
+  namespace quartersToYears { }
 
   function roundToNearestMinutes(
     date: Date | number,
@@ -988,16 +975,16 @@ declare module 'date-fns' {
       roundingMethod?: string
     }
   ): Date
-  namespace roundToNearestMinutes {}
+  namespace roundToNearestMinutes { }
 
   function secondsToHours(seconds: number): number
-  namespace secondsToHours {}
+  namespace secondsToHours { }
 
   function secondsToMilliseconds(seconds: number): number
-  namespace secondsToMilliseconds {}
+  namespace secondsToMilliseconds { }
 
   function secondsToMinutes(seconds: number): number
-  namespace secondsToMinutes {}
+  namespace secondsToMinutes { }
 
   function set(
     date: Date | number,
@@ -1011,10 +998,10 @@ declare module 'date-fns' {
       milliseconds?: number
     }
   ): Date
-  namespace set {}
+  namespace set { }
 
   function setDate(date: Date | number, dayOfMonth: number): Date
-  namespace setDate {}
+  namespace setDate { }
 
   function setDay(
     date: Date | number,
@@ -1024,44 +1011,44 @@ declare module 'date-fns' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): Date
-  namespace setDay {}
+  namespace setDay { }
 
   function setDayOfYear(date: Date | number, dayOfYear: number): Date
-  namespace setDayOfYear {}
+  namespace setDayOfYear { }
 
   function setDefaultOptions(newOptions: {
     locale?: Locale
     weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
   }): void
-  namespace setDefaultOptions {}
+  namespace setDefaultOptions { }
 
   function setHours(date: Date | number, hours: number): Date
-  namespace setHours {}
+  namespace setHours { }
 
   function setISODay(date: Date | number, day: number): Date
-  namespace setISODay {}
+  namespace setISODay { }
 
   function setISOWeek(date: Date | number, isoWeek: number): Date
-  namespace setISOWeek {}
+  namespace setISOWeek { }
 
   function setISOWeekYear(date: Date | number, isoWeekYear: number): Date
-  namespace setISOWeekYear {}
+  namespace setISOWeekYear { }
 
   function setMilliseconds(date: Date | number, milliseconds: number): Date
-  namespace setMilliseconds {}
+  namespace setMilliseconds { }
 
   function setMinutes(date: Date | number, minutes: number): Date
-  namespace setMinutes {}
+  namespace setMinutes { }
 
   function setMonth(date: Date | number, month: number): Date
-  namespace setMonth {}
+  namespace setMonth { }
 
   function setQuarter(date: Date | number, quarter: number): Date
-  namespace setQuarter {}
+  namespace setQuarter { }
 
   function setSeconds(date: Date | number, seconds: number): Date
-  namespace setSeconds {}
+  namespace setSeconds { }
 
   function setWeek(
     date: Date | number,
@@ -1072,7 +1059,7 @@ declare module 'date-fns' {
       firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
     }
   ): Date
-  namespace setWeek {}
+  namespace setWeek { }
 
   function setWeekYear(
     date: Date | number,
@@ -1083,43 +1070,43 @@ declare module 'date-fns' {
       firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
     }
   ): Date
-  namespace setWeekYear {}
+  namespace setWeekYear { }
 
   function setYear(date: Date | number, year: number): Date
-  namespace setYear {}
+  namespace setYear { }
 
   function startOfDay(date: Date | number): Date
-  namespace startOfDay {}
+  namespace startOfDay { }
 
   function startOfDecade(date: Date | number): Date
-  namespace startOfDecade {}
+  namespace startOfDecade { }
 
   function startOfHour(date: Date | number): Date
-  namespace startOfHour {}
+  namespace startOfHour { }
 
   function startOfISOWeek(date: Date | number): Date
-  namespace startOfISOWeek {}
+  namespace startOfISOWeek { }
 
   function startOfISOWeekYear(date: Date | number): Date
-  namespace startOfISOWeekYear {}
+  namespace startOfISOWeekYear { }
 
   function startOfMinute(date: Date | number): Date
-  namespace startOfMinute {}
+  namespace startOfMinute { }
 
   function startOfMonth(date: Date | number): Date
-  namespace startOfMonth {}
+  namespace startOfMonth { }
 
   function startOfQuarter(date: Date | number): Date
-  namespace startOfQuarter {}
+  namespace startOfQuarter { }
 
   function startOfSecond(date: Date | number): Date
-  namespace startOfSecond {}
+  namespace startOfSecond { }
 
   function startOfToday(): Date
-  namespace startOfToday {}
+  namespace startOfToday { }
 
   function startOfTomorrow(): Date
-  namespace startOfTomorrow {}
+  namespace startOfTomorrow { }
 
   function startOfWeek(
     date: Date | number,
@@ -1128,7 +1115,7 @@ declare module 'date-fns' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): Date
-  namespace startOfWeek {}
+  namespace startOfWeek { }
 
   function startOfWeekYear(
     date: Date | number,
@@ -1138,61 +1125,61 @@ declare module 'date-fns' {
       firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
     }
   ): Date
-  namespace startOfWeekYear {}
+  namespace startOfWeekYear { }
 
   function startOfYear(date: Date | number): Date
-  namespace startOfYear {}
+  namespace startOfYear { }
 
   function startOfYesterday(): Date
-  namespace startOfYesterday {}
+  namespace startOfYesterday { }
 
   function sub(date: Date | number, duration: Duration): Date
-  namespace sub {}
+  namespace sub { }
 
   function subBusinessDays(date: Date | number, amount: number): Date
-  namespace subBusinessDays {}
+  namespace subBusinessDays { }
 
   function subDays(date: Date | number, amount: number): Date
-  namespace subDays {}
+  namespace subDays { }
 
   function subHours(date: Date | number, amount: number): Date
-  namespace subHours {}
+  namespace subHours { }
 
   function subISOWeekYears(date: Date | number, amount: number): Date
-  namespace subISOWeekYears {}
+  namespace subISOWeekYears { }
 
   function subMilliseconds(date: Date | number, amount: number): Date
-  namespace subMilliseconds {}
+  namespace subMilliseconds { }
 
   function subMinutes(date: Date | number, amount: number): Date
-  namespace subMinutes {}
+  namespace subMinutes { }
 
   function subMonths(date: Date | number, amount: number): Date
-  namespace subMonths {}
+  namespace subMonths { }
 
   function subQuarters(date: Date | number, amount: number): Date
-  namespace subQuarters {}
+  namespace subQuarters { }
 
   function subSeconds(date: Date | number, amount: number): Date
-  namespace subSeconds {}
+  namespace subSeconds { }
 
   function subWeeks(date: Date | number, amount: number): Date
-  namespace subWeeks {}
+  namespace subWeeks { }
 
   function subYears(date: Date | number, amount: number): Date
-  namespace subYears {}
+  namespace subYears { }
 
   function toDate(argument: Date | number): Date
-  namespace toDate {}
+  namespace toDate { }
 
   function weeksToDays(weeks: number): number
-  namespace weeksToDays {}
+  namespace weeksToDays { }
 
   function yearsToMonths(years: number): number
-  namespace yearsToMonths {}
+  namespace yearsToMonths { }
 
   function yearsToQuarters(years: number): number
-  namespace yearsToQuarters {}
+  namespace yearsToQuarters { }
 
   const daysInWeek: number
 
@@ -4882,44 +4869,54 @@ declare module 'date-fns/yearsToQuarters/index.js' {
 // FP Functions
 
 declare module 'date-fns/fp' {
+  import {
+    CurriedFn1,
+    CurriedFn2,
+    CurriedFn3,
+    CurriedFn4,
+    Day,
+    Duration,
+    Interval,
+    Locale,
+  } from 'date-fns'
   const add: CurriedFn2<Duration, Date | number, Date>
-  namespace add {}
+  namespace add { }
 
   const addBusinessDays: CurriedFn2<number, Date | number, Date>
-  namespace addBusinessDays {}
+  namespace addBusinessDays { }
 
   const addDays: CurriedFn2<number, Date | number, Date>
-  namespace addDays {}
+  namespace addDays { }
 
   const addHours: CurriedFn2<number, Date | number, Date>
-  namespace addHours {}
+  namespace addHours { }
 
   const addISOWeekYears: CurriedFn2<number, Date | number, Date>
-  namespace addISOWeekYears {}
+  namespace addISOWeekYears { }
 
   const addMilliseconds: CurriedFn2<number, Date | number, Date>
-  namespace addMilliseconds {}
+  namespace addMilliseconds { }
 
   const addMinutes: CurriedFn2<number, Date | number, Date>
-  namespace addMinutes {}
+  namespace addMinutes { }
 
   const addMonths: CurriedFn2<number, Date | number, Date>
-  namespace addMonths {}
+  namespace addMonths { }
 
   const addQuarters: CurriedFn2<number, Date | number, Date>
-  namespace addQuarters {}
+  namespace addQuarters { }
 
   const addSeconds: CurriedFn2<number, Date | number, Date>
-  namespace addSeconds {}
+  namespace addSeconds { }
 
   const addWeeks: CurriedFn2<number, Date | number, Date>
-  namespace addWeeks {}
+  namespace addWeeks { }
 
   const addYears: CurriedFn2<number, Date | number, Date>
-  namespace addYears {}
+  namespace addYears { }
 
   const areIntervalsOverlapping: CurriedFn2<Interval, Interval, boolean>
-  namespace areIntervalsOverlapping {}
+  namespace areIntervalsOverlapping { }
 
   const areIntervalsOverlappingWithOptions: CurriedFn3<
     {
@@ -4929,82 +4926,82 @@ declare module 'date-fns/fp' {
     Interval,
     boolean
   >
-  namespace areIntervalsOverlappingWithOptions {}
+  namespace areIntervalsOverlappingWithOptions { }
 
   const clamp: CurriedFn2<Interval, Date | number, Date>
-  namespace clamp {}
+  namespace clamp { }
 
   const closestIndexTo: CurriedFn2<
     (Date | number)[],
     Date | number,
     number | undefined
   >
-  namespace closestIndexTo {}
+  namespace closestIndexTo { }
 
   const closestTo: CurriedFn2<
     (Date | number)[],
     Date | number,
     Date | undefined
   >
-  namespace closestTo {}
+  namespace closestTo { }
 
   const compareAsc: CurriedFn2<Date | number, Date | number, number>
-  namespace compareAsc {}
+  namespace compareAsc { }
 
   const compareDesc: CurriedFn2<Date | number, Date | number, number>
-  namespace compareDesc {}
+  namespace compareDesc { }
 
   const daysToWeeks: CurriedFn1<number, number>
-  namespace daysToWeeks {}
+  namespace daysToWeeks { }
 
   const differenceInBusinessDays: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInBusinessDays {}
+  namespace differenceInBusinessDays { }
 
   const differenceInCalendarDays: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInCalendarDays {}
+  namespace differenceInCalendarDays { }
 
   const differenceInCalendarISOWeeks: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInCalendarISOWeeks {}
+  namespace differenceInCalendarISOWeeks { }
 
   const differenceInCalendarISOWeekYears: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInCalendarISOWeekYears {}
+  namespace differenceInCalendarISOWeekYears { }
 
   const differenceInCalendarMonths: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInCalendarMonths {}
+  namespace differenceInCalendarMonths { }
 
   const differenceInCalendarQuarters: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInCalendarQuarters {}
+  namespace differenceInCalendarQuarters { }
 
   const differenceInCalendarWeeks: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInCalendarWeeks {}
+  namespace differenceInCalendarWeeks { }
 
   const differenceInCalendarWeeksWithOptions: CurriedFn3<
     {
@@ -5015,20 +5012,20 @@ declare module 'date-fns/fp' {
     Date | number,
     number
   >
-  namespace differenceInCalendarWeeksWithOptions {}
+  namespace differenceInCalendarWeeksWithOptions { }
 
   const differenceInCalendarYears: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInCalendarYears {}
+  namespace differenceInCalendarYears { }
 
   const differenceInDays: CurriedFn2<Date | number, Date | number, number>
-  namespace differenceInDays {}
+  namespace differenceInDays { }
 
   const differenceInHours: CurriedFn2<Date | number, Date | number, number>
-  namespace differenceInHours {}
+  namespace differenceInHours { }
 
   const differenceInHoursWithOptions: CurriedFn3<
     {
@@ -5038,24 +5035,24 @@ declare module 'date-fns/fp' {
     Date | number,
     number
   >
-  namespace differenceInHoursWithOptions {}
+  namespace differenceInHoursWithOptions { }
 
   const differenceInISOWeekYears: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInISOWeekYears {}
+  namespace differenceInISOWeekYears { }
 
   const differenceInMilliseconds: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInMilliseconds {}
+  namespace differenceInMilliseconds { }
 
   const differenceInMinutes: CurriedFn2<Date | number, Date | number, number>
-  namespace differenceInMinutes {}
+  namespace differenceInMinutes { }
 
   const differenceInMinutesWithOptions: CurriedFn3<
     {
@@ -5065,13 +5062,13 @@ declare module 'date-fns/fp' {
     Date | number,
     number
   >
-  namespace differenceInMinutesWithOptions {}
+  namespace differenceInMinutesWithOptions { }
 
   const differenceInMonths: CurriedFn2<Date | number, Date | number, number>
-  namespace differenceInMonths {}
+  namespace differenceInMonths { }
 
   const differenceInQuarters: CurriedFn2<Date | number, Date | number, number>
-  namespace differenceInQuarters {}
+  namespace differenceInQuarters { }
 
   const differenceInQuartersWithOptions: CurriedFn3<
     {
@@ -5081,10 +5078,10 @@ declare module 'date-fns/fp' {
     Date | number,
     number
   >
-  namespace differenceInQuartersWithOptions {}
+  namespace differenceInQuartersWithOptions { }
 
   const differenceInSeconds: CurriedFn2<Date | number, Date | number, number>
-  namespace differenceInSeconds {}
+  namespace differenceInSeconds { }
 
   const differenceInSecondsWithOptions: CurriedFn3<
     {
@@ -5094,10 +5091,10 @@ declare module 'date-fns/fp' {
     Date | number,
     number
   >
-  namespace differenceInSecondsWithOptions {}
+  namespace differenceInSecondsWithOptions { }
 
   const differenceInWeeks: CurriedFn2<Date | number, Date | number, number>
-  namespace differenceInWeeks {}
+  namespace differenceInWeeks { }
 
   const differenceInWeeksWithOptions: CurriedFn3<
     {
@@ -5107,13 +5104,13 @@ declare module 'date-fns/fp' {
     Date | number,
     number
   >
-  namespace differenceInWeeksWithOptions {}
+  namespace differenceInWeeksWithOptions { }
 
   const differenceInYears: CurriedFn2<Date | number, Date | number, number>
-  namespace differenceInYears {}
+  namespace differenceInYears { }
 
   const eachDayOfInterval: CurriedFn1<Interval, Date[]>
-  namespace eachDayOfInterval {}
+  namespace eachDayOfInterval { }
 
   const eachDayOfIntervalWithOptions: CurriedFn2<
     {
@@ -5122,10 +5119,10 @@ declare module 'date-fns/fp' {
     Interval,
     Date[]
   >
-  namespace eachDayOfIntervalWithOptions {}
+  namespace eachDayOfIntervalWithOptions { }
 
   const eachHourOfInterval: CurriedFn1<Interval, Date[]>
-  namespace eachHourOfInterval {}
+  namespace eachHourOfInterval { }
 
   const eachHourOfIntervalWithOptions: CurriedFn2<
     {
@@ -5134,10 +5131,10 @@ declare module 'date-fns/fp' {
     Interval,
     Date[]
   >
-  namespace eachHourOfIntervalWithOptions {}
+  namespace eachHourOfIntervalWithOptions { }
 
   const eachMinuteOfInterval: CurriedFn1<Interval, Date[]>
-  namespace eachMinuteOfInterval {}
+  namespace eachMinuteOfInterval { }
 
   const eachMinuteOfIntervalWithOptions: CurriedFn2<
     {
@@ -5146,25 +5143,25 @@ declare module 'date-fns/fp' {
     Interval,
     Date[]
   >
-  namespace eachMinuteOfIntervalWithOptions {}
+  namespace eachMinuteOfIntervalWithOptions { }
 
   const eachMonthOfInterval: CurriedFn1<Interval, Date[]>
-  namespace eachMonthOfInterval {}
+  namespace eachMonthOfInterval { }
 
   const eachQuarterOfInterval: CurriedFn1<Interval, Date[]>
-  namespace eachQuarterOfInterval {}
+  namespace eachQuarterOfInterval { }
 
   const eachWeekendOfInterval: CurriedFn1<Interval, Date[]>
-  namespace eachWeekendOfInterval {}
+  namespace eachWeekendOfInterval { }
 
   const eachWeekendOfMonth: CurriedFn1<Date | number, Date[]>
-  namespace eachWeekendOfMonth {}
+  namespace eachWeekendOfMonth { }
 
   const eachWeekendOfYear: CurriedFn1<Date | number, Date[]>
-  namespace eachWeekendOfYear {}
+  namespace eachWeekendOfYear { }
 
   const eachWeekOfInterval: CurriedFn1<Interval, Date[]>
-  namespace eachWeekOfInterval {}
+  namespace eachWeekOfInterval { }
 
   const eachWeekOfIntervalWithOptions: CurriedFn2<
     {
@@ -5174,16 +5171,16 @@ declare module 'date-fns/fp' {
     Interval,
     Date[]
   >
-  namespace eachWeekOfIntervalWithOptions {}
+  namespace eachWeekOfIntervalWithOptions { }
 
   const eachYearOfInterval: CurriedFn1<Interval, Date[]>
-  namespace eachYearOfInterval {}
+  namespace eachYearOfInterval { }
 
   const endOfDay: CurriedFn1<Date | number, Date>
-  namespace endOfDay {}
+  namespace endOfDay { }
 
   const endOfDecade: CurriedFn1<Date | number, Date>
-  namespace endOfDecade {}
+  namespace endOfDecade { }
 
   const endOfDecadeWithOptions: CurriedFn2<
     {
@@ -5192,31 +5189,31 @@ declare module 'date-fns/fp' {
     Date | number,
     Date
   >
-  namespace endOfDecadeWithOptions {}
+  namespace endOfDecadeWithOptions { }
 
   const endOfHour: CurriedFn1<Date | number, Date>
-  namespace endOfHour {}
+  namespace endOfHour { }
 
   const endOfISOWeek: CurriedFn1<Date | number, Date>
-  namespace endOfISOWeek {}
+  namespace endOfISOWeek { }
 
   const endOfISOWeekYear: CurriedFn1<Date | number, Date>
-  namespace endOfISOWeekYear {}
+  namespace endOfISOWeekYear { }
 
   const endOfMinute: CurriedFn1<Date | number, Date>
-  namespace endOfMinute {}
+  namespace endOfMinute { }
 
   const endOfMonth: CurriedFn1<Date | number, Date>
-  namespace endOfMonth {}
+  namespace endOfMonth { }
 
   const endOfQuarter: CurriedFn1<Date | number, Date>
-  namespace endOfQuarter {}
+  namespace endOfQuarter { }
 
   const endOfSecond: CurriedFn1<Date | number, Date>
-  namespace endOfSecond {}
+  namespace endOfSecond { }
 
   const endOfWeek: CurriedFn1<Date | number, Date>
-  namespace endOfWeek {}
+  namespace endOfWeek { }
 
   const endOfWeekWithOptions: CurriedFn2<
     {
@@ -5226,19 +5223,19 @@ declare module 'date-fns/fp' {
     Date | number,
     Date
   >
-  namespace endOfWeekWithOptions {}
+  namespace endOfWeekWithOptions { }
 
   const endOfYear: CurriedFn1<Date | number, Date>
-  namespace endOfYear {}
+  namespace endOfYear { }
 
   const format: CurriedFn2<string, Date | number, string>
-  namespace format {}
+  namespace format { }
 
   const formatDistance: CurriedFn2<Date | number, Date | number, string>
-  namespace formatDistance {}
+  namespace formatDistance { }
 
   const formatDistanceStrict: CurriedFn2<Date | number, Date | number, string>
-  namespace formatDistanceStrict {}
+  namespace formatDistanceStrict { }
 
   const formatDistanceStrictWithOptions: CurriedFn3<
     {
@@ -5251,7 +5248,7 @@ declare module 'date-fns/fp' {
     Date | number,
     string
   >
-  namespace formatDistanceStrictWithOptions {}
+  namespace formatDistanceStrictWithOptions { }
 
   const formatDistanceWithOptions: CurriedFn3<
     {
@@ -5263,10 +5260,10 @@ declare module 'date-fns/fp' {
     Date | number,
     string
   >
-  namespace formatDistanceWithOptions {}
+  namespace formatDistanceWithOptions { }
 
   const formatDuration: CurriedFn1<Duration, string>
-  namespace formatDuration {}
+  namespace formatDuration { }
 
   const formatDurationWithOptions: CurriedFn2<
     {
@@ -5278,13 +5275,13 @@ declare module 'date-fns/fp' {
     Duration,
     string
   >
-  namespace formatDurationWithOptions {}
+  namespace formatDurationWithOptions { }
 
   const formatISO: CurriedFn1<Date | number, string>
-  namespace formatISO {}
+  namespace formatISO { }
 
   const formatISO9075: CurriedFn1<Date | number, string>
-  namespace formatISO9075 {}
+  namespace formatISO9075 { }
 
   const formatISO9075WithOptions: CurriedFn2<
     {
@@ -5294,10 +5291,10 @@ declare module 'date-fns/fp' {
     Date | number,
     string
   >
-  namespace formatISO9075WithOptions {}
+  namespace formatISO9075WithOptions { }
 
   const formatISODuration: CurriedFn1<Duration, string>
-  namespace formatISODuration {}
+  namespace formatISODuration { }
 
   const formatISOWithOptions: CurriedFn2<
     {
@@ -5307,10 +5304,10 @@ declare module 'date-fns/fp' {
     Date | number,
     string
   >
-  namespace formatISOWithOptions {}
+  namespace formatISOWithOptions { }
 
   const formatRelative: CurriedFn2<Date | number, Date | number, string>
-  namespace formatRelative {}
+  namespace formatRelative { }
 
   const formatRelativeWithOptions: CurriedFn3<
     {
@@ -5321,10 +5318,10 @@ declare module 'date-fns/fp' {
     Date | number,
     string
   >
-  namespace formatRelativeWithOptions {}
+  namespace formatRelativeWithOptions { }
 
   const formatRFC3339: CurriedFn1<Date | number, string>
-  namespace formatRFC3339 {}
+  namespace formatRFC3339 { }
 
   const formatRFC3339WithOptions: CurriedFn2<
     {
@@ -5333,10 +5330,10 @@ declare module 'date-fns/fp' {
     Date | number,
     string
   >
-  namespace formatRFC3339WithOptions {}
+  namespace formatRFC3339WithOptions { }
 
   const formatRFC7231: CurriedFn1<Date | number, string>
-  namespace formatRFC7231 {}
+  namespace formatRFC7231 { }
 
   const formatWithOptions: CurriedFn3<
     {
@@ -5350,73 +5347,73 @@ declare module 'date-fns/fp' {
     Date | number,
     string
   >
-  namespace formatWithOptions {}
+  namespace formatWithOptions { }
 
   const fromUnixTime: CurriedFn1<number, Date>
-  namespace fromUnixTime {}
+  namespace fromUnixTime { }
 
   const getDate: CurriedFn1<Date | number, number>
-  namespace getDate {}
+  namespace getDate { }
 
   const getDay: CurriedFn1<Date | number, 0 | 1 | 2 | 3 | 4 | 5 | 6>
-  namespace getDay {}
+  namespace getDay { }
 
   const getDayOfYear: CurriedFn1<Date | number, number>
-  namespace getDayOfYear {}
+  namespace getDayOfYear { }
 
   const getDaysInMonth: CurriedFn1<Date | number, number>
-  namespace getDaysInMonth {}
+  namespace getDaysInMonth { }
 
   const getDaysInYear: CurriedFn1<Date | number, number>
-  namespace getDaysInYear {}
+  namespace getDaysInYear { }
 
   const getDecade: CurriedFn1<Date | number, number>
-  namespace getDecade {}
+  namespace getDecade { }
 
   const getHours: CurriedFn1<Date | number, number>
-  namespace getHours {}
+  namespace getHours { }
 
   const getISODay: CurriedFn1<Date | number, number>
-  namespace getISODay {}
+  namespace getISODay { }
 
   const getISOWeek: CurriedFn1<Date | number, number>
-  namespace getISOWeek {}
+  namespace getISOWeek { }
 
   const getISOWeeksInYear: CurriedFn1<Date | number, number>
-  namespace getISOWeeksInYear {}
+  namespace getISOWeeksInYear { }
 
   const getISOWeekYear: CurriedFn1<Date | number, number>
-  namespace getISOWeekYear {}
+  namespace getISOWeekYear { }
 
   const getMilliseconds: CurriedFn1<Date | number, number>
-  namespace getMilliseconds {}
+  namespace getMilliseconds { }
 
   const getMinutes: CurriedFn1<Date | number, number>
-  namespace getMinutes {}
+  namespace getMinutes { }
 
   const getMonth: CurriedFn1<Date | number, number>
-  namespace getMonth {}
+  namespace getMonth { }
 
   const getOverlappingDaysInIntervals: CurriedFn2<Interval, Interval, number>
-  namespace getOverlappingDaysInIntervals {}
+  namespace getOverlappingDaysInIntervals { }
 
   const getQuarter: CurriedFn1<Date | number, number>
-  namespace getQuarter {}
+  namespace getQuarter { }
 
   const getSeconds: CurriedFn1<Date | number, number>
-  namespace getSeconds {}
+  namespace getSeconds { }
 
   const getTime: CurriedFn1<Date | number, number>
-  namespace getTime {}
+  namespace getTime { }
 
   const getUnixTime: CurriedFn1<Date | number, number>
-  namespace getUnixTime {}
+  namespace getUnixTime { }
 
   const getWeek: CurriedFn1<Date | number, number>
-  namespace getWeek {}
+  namespace getWeek { }
 
   const getWeekOfMonth: CurriedFn1<Date | number, number>
-  namespace getWeekOfMonth {}
+  namespace getWeekOfMonth { }
 
   const getWeekOfMonthWithOptions: CurriedFn2<
     {
@@ -5426,10 +5423,10 @@ declare module 'date-fns/fp' {
     Date | number,
     number
   >
-  namespace getWeekOfMonthWithOptions {}
+  namespace getWeekOfMonthWithOptions { }
 
   const getWeeksInMonth: CurriedFn1<Date | number, number>
-  namespace getWeeksInMonth {}
+  namespace getWeeksInMonth { }
 
   const getWeeksInMonthWithOptions: CurriedFn2<
     {
@@ -5439,7 +5436,7 @@ declare module 'date-fns/fp' {
     Date | number,
     number
   >
-  namespace getWeeksInMonthWithOptions {}
+  namespace getWeeksInMonthWithOptions { }
 
   const getWeekWithOptions: CurriedFn2<
     {
@@ -5450,10 +5447,10 @@ declare module 'date-fns/fp' {
     Date | number,
     number
   >
-  namespace getWeekWithOptions {}
+  namespace getWeekWithOptions { }
 
   const getWeekYear: CurriedFn1<Date | number, number>
-  namespace getWeekYear {}
+  namespace getWeekYear { }
 
   const getWeekYearWithOptions: CurriedFn2<
     {
@@ -5464,22 +5461,22 @@ declare module 'date-fns/fp' {
     Date | number,
     number
   >
-  namespace getWeekYearWithOptions {}
+  namespace getWeekYearWithOptions { }
 
   const getYear: CurriedFn1<Date | number, number>
-  namespace getYear {}
+  namespace getYear { }
 
   const hoursToMilliseconds: CurriedFn1<number, number>
-  namespace hoursToMilliseconds {}
+  namespace hoursToMilliseconds { }
 
   const hoursToMinutes: CurriedFn1<number, number>
-  namespace hoursToMinutes {}
+  namespace hoursToMinutes { }
 
   const hoursToSeconds: CurriedFn1<number, number>
-  namespace hoursToSeconds {}
+  namespace hoursToSeconds { }
 
   const intervalToDuration: CurriedFn1<Interval, Duration>
-  namespace intervalToDuration {}
+  namespace intervalToDuration { }
 
   const intlFormat: CurriedFn3<
     {
@@ -5503,10 +5500,10 @@ declare module 'date-fns/fp' {
     Date | number,
     string
   >
-  namespace intlFormat {}
+  namespace intlFormat { }
 
   const intlFormatDistance: CurriedFn2<Date | number, Date | number, string>
-  namespace intlFormatDistance {}
+  namespace intlFormatDistance { }
 
   const intlFormatDistanceWithOptions: CurriedFn3<
     {
@@ -5520,37 +5517,37 @@ declare module 'date-fns/fp' {
     Date | number,
     string
   >
-  namespace intlFormatDistanceWithOptions {}
+  namespace intlFormatDistanceWithOptions { }
 
   const isAfter: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isAfter {}
+  namespace isAfter { }
 
   const isBefore: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isBefore {}
+  namespace isBefore { }
 
   const isDate: CurriedFn1<any, boolean>
-  namespace isDate {}
+  namespace isDate { }
 
   const isEqual: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isEqual {}
+  namespace isEqual { }
 
   const isExists: CurriedFn3<number, number, number, boolean>
-  namespace isExists {}
+  namespace isExists { }
 
   const isFirstDayOfMonth: CurriedFn1<Date | number, boolean>
-  namespace isFirstDayOfMonth {}
+  namespace isFirstDayOfMonth { }
 
   const isFriday: CurriedFn1<Date | number, boolean>
-  namespace isFriday {}
+  namespace isFriday { }
 
   const isLastDayOfMonth: CurriedFn1<Date | number, boolean>
-  namespace isLastDayOfMonth {}
+  namespace isLastDayOfMonth { }
 
   const isLeapYear: CurriedFn1<Date | number, boolean>
-  namespace isLeapYear {}
+  namespace isLeapYear { }
 
   const isMatch: CurriedFn2<string, string, boolean>
-  namespace isMatch {}
+  namespace isMatch { }
 
   const isMatchWithOptions: CurriedFn3<
     {
@@ -5564,37 +5561,37 @@ declare module 'date-fns/fp' {
     string,
     boolean
   >
-  namespace isMatchWithOptions {}
+  namespace isMatchWithOptions { }
 
   const isMonday: CurriedFn1<Date | number, boolean>
-  namespace isMonday {}
+  namespace isMonday { }
 
   const isSameDay: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameDay {}
+  namespace isSameDay { }
 
   const isSameHour: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameHour {}
+  namespace isSameHour { }
 
   const isSameISOWeek: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameISOWeek {}
+  namespace isSameISOWeek { }
 
   const isSameISOWeekYear: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameISOWeekYear {}
+  namespace isSameISOWeekYear { }
 
   const isSameMinute: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameMinute {}
+  namespace isSameMinute { }
 
   const isSameMonth: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameMonth {}
+  namespace isSameMonth { }
 
   const isSameQuarter: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameQuarter {}
+  namespace isSameQuarter { }
 
   const isSameSecond: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameSecond {}
+  namespace isSameSecond { }
 
   const isSameWeek: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameWeek {}
+  namespace isSameWeek { }
 
   const isSameWeekWithOptions: CurriedFn3<
     {
@@ -5605,49 +5602,49 @@ declare module 'date-fns/fp' {
     Date | number,
     boolean
   >
-  namespace isSameWeekWithOptions {}
+  namespace isSameWeekWithOptions { }
 
   const isSameYear: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameYear {}
+  namespace isSameYear { }
 
   const isSaturday: CurriedFn1<Date | number, boolean>
-  namespace isSaturday {}
+  namespace isSaturday { }
 
   const isSunday: CurriedFn1<Date | number, boolean>
-  namespace isSunday {}
+  namespace isSunday { }
 
   const isThursday: CurriedFn1<Date | number, boolean>
-  namespace isThursday {}
+  namespace isThursday { }
 
   const isTuesday: CurriedFn1<Date | number, boolean>
-  namespace isTuesday {}
+  namespace isTuesday { }
 
   const isValid: CurriedFn1<any, boolean>
-  namespace isValid {}
+  namespace isValid { }
 
   const isWednesday: CurriedFn1<Date | number, boolean>
-  namespace isWednesday {}
+  namespace isWednesday { }
 
   const isWeekend: CurriedFn1<Date | number, boolean>
-  namespace isWeekend {}
+  namespace isWeekend { }
 
   const isWithinInterval: CurriedFn2<Interval, Date | number, boolean>
-  namespace isWithinInterval {}
+  namespace isWithinInterval { }
 
   const lastDayOfDecade: CurriedFn1<Date | number, Date>
-  namespace lastDayOfDecade {}
+  namespace lastDayOfDecade { }
 
   const lastDayOfISOWeek: CurriedFn1<Date | number, Date>
-  namespace lastDayOfISOWeek {}
+  namespace lastDayOfISOWeek { }
 
   const lastDayOfISOWeekYear: CurriedFn1<Date | number, Date>
-  namespace lastDayOfISOWeekYear {}
+  namespace lastDayOfISOWeekYear { }
 
   const lastDayOfMonth: CurriedFn1<Date | number, Date>
-  namespace lastDayOfMonth {}
+  namespace lastDayOfMonth { }
 
   const lastDayOfQuarter: CurriedFn1<Date | number, Date>
-  namespace lastDayOfQuarter {}
+  namespace lastDayOfQuarter { }
 
   const lastDayOfQuarterWithOptions: CurriedFn2<
     {
@@ -5656,10 +5653,10 @@ declare module 'date-fns/fp' {
     Date | number,
     Date
   >
-  namespace lastDayOfQuarterWithOptions {}
+  namespace lastDayOfQuarterWithOptions { }
 
   const lastDayOfWeek: CurriedFn1<Date | number, Date>
-  namespace lastDayOfWeek {}
+  namespace lastDayOfWeek { }
 
   const lastDayOfWeekWithOptions: CurriedFn2<
     {
@@ -5669,76 +5666,76 @@ declare module 'date-fns/fp' {
     Date | number,
     Date
   >
-  namespace lastDayOfWeekWithOptions {}
+  namespace lastDayOfWeekWithOptions { }
 
   const lastDayOfYear: CurriedFn1<Date | number, Date>
-  namespace lastDayOfYear {}
+  namespace lastDayOfYear { }
 
   const lightFormat: CurriedFn2<string, Date | number, string>
-  namespace lightFormat {}
+  namespace lightFormat { }
 
   const max: CurriedFn1<(Date | number)[], Date>
-  namespace max {}
+  namespace max { }
 
   const milliseconds: CurriedFn1<Duration, number>
-  namespace milliseconds {}
+  namespace milliseconds { }
 
   const millisecondsToHours: CurriedFn1<number, number>
-  namespace millisecondsToHours {}
+  namespace millisecondsToHours { }
 
   const millisecondsToMinutes: CurriedFn1<number, number>
-  namespace millisecondsToMinutes {}
+  namespace millisecondsToMinutes { }
 
   const millisecondsToSeconds: CurriedFn1<number, number>
-  namespace millisecondsToSeconds {}
+  namespace millisecondsToSeconds { }
 
   const min: CurriedFn1<(Date | number)[], Date>
-  namespace min {}
+  namespace min { }
 
   const minutesToHours: CurriedFn1<number, number>
-  namespace minutesToHours {}
+  namespace minutesToHours { }
 
   const minutesToMilliseconds: CurriedFn1<number, number>
-  namespace minutesToMilliseconds {}
+  namespace minutesToMilliseconds { }
 
   const minutesToSeconds: CurriedFn1<number, number>
-  namespace minutesToSeconds {}
+  namespace minutesToSeconds { }
 
   const monthsToQuarters: CurriedFn1<number, number>
-  namespace monthsToQuarters {}
+  namespace monthsToQuarters { }
 
   const monthsToYears: CurriedFn1<number, number>
-  namespace monthsToYears {}
+  namespace monthsToYears { }
 
   const nextDay: CurriedFn2<Day, Date | number, Date>
-  namespace nextDay {}
+  namespace nextDay { }
 
   const nextFriday: CurriedFn1<Date | number, Date>
-  namespace nextFriday {}
+  namespace nextFriday { }
 
   const nextMonday: CurriedFn1<Date | number, Date>
-  namespace nextMonday {}
+  namespace nextMonday { }
 
   const nextSaturday: CurriedFn1<Date | number, Date>
-  namespace nextSaturday {}
+  namespace nextSaturday { }
 
   const nextSunday: CurriedFn1<Date | number, Date>
-  namespace nextSunday {}
+  namespace nextSunday { }
 
   const nextThursday: CurriedFn1<Date | number, Date>
-  namespace nextThursday {}
+  namespace nextThursday { }
 
   const nextTuesday: CurriedFn1<Date | number, Date>
-  namespace nextTuesday {}
+  namespace nextTuesday { }
 
   const nextWednesday: CurriedFn1<Date | number, Date>
-  namespace nextWednesday {}
+  namespace nextWednesday { }
 
   const parse: CurriedFn3<Date | number, string, string, Date>
-  namespace parse {}
+  namespace parse { }
 
   const parseISO: CurriedFn1<string, Date>
-  namespace parseISO {}
+  namespace parseISO { }
 
   const parseISOWithOptions: CurriedFn2<
     {
@@ -5747,10 +5744,10 @@ declare module 'date-fns/fp' {
     string,
     Date
   >
-  namespace parseISOWithOptions {}
+  namespace parseISOWithOptions { }
 
   const parseJSON: CurriedFn1<string | number | Date, Date>
-  namespace parseJSON {}
+  namespace parseJSON { }
 
   const parseWithOptions: CurriedFn4<
     {
@@ -5765,40 +5762,40 @@ declare module 'date-fns/fp' {
     string,
     Date
   >
-  namespace parseWithOptions {}
+  namespace parseWithOptions { }
 
   const previousDay: CurriedFn2<number, Date | number, Date>
-  namespace previousDay {}
+  namespace previousDay { }
 
   const previousFriday: CurriedFn1<Date | number, Date>
-  namespace previousFriday {}
+  namespace previousFriday { }
 
   const previousMonday: CurriedFn1<Date | number, Date>
-  namespace previousMonday {}
+  namespace previousMonday { }
 
   const previousSaturday: CurriedFn1<Date | number, Date>
-  namespace previousSaturday {}
+  namespace previousSaturday { }
 
   const previousSunday: CurriedFn1<Date | number, Date>
-  namespace previousSunday {}
+  namespace previousSunday { }
 
   const previousThursday: CurriedFn1<Date | number, Date>
-  namespace previousThursday {}
+  namespace previousThursday { }
 
   const previousTuesday: CurriedFn1<Date | number, Date>
-  namespace previousTuesday {}
+  namespace previousTuesday { }
 
   const previousWednesday: CurriedFn1<Date | number, Date>
-  namespace previousWednesday {}
+  namespace previousWednesday { }
 
   const quartersToMonths: CurriedFn1<number, number>
-  namespace quartersToMonths {}
+  namespace quartersToMonths { }
 
   const quartersToYears: CurriedFn1<number, number>
-  namespace quartersToYears {}
+  namespace quartersToYears { }
 
   const roundToNearestMinutes: CurriedFn1<Date | number, Date>
-  namespace roundToNearestMinutes {}
+  namespace roundToNearestMinutes { }
 
   const roundToNearestMinutesWithOptions: CurriedFn2<
     {
@@ -5808,16 +5805,16 @@ declare module 'date-fns/fp' {
     Date | number,
     Date
   >
-  namespace roundToNearestMinutesWithOptions {}
+  namespace roundToNearestMinutesWithOptions { }
 
   const secondsToHours: CurriedFn1<number, number>
-  namespace secondsToHours {}
+  namespace secondsToHours { }
 
   const secondsToMilliseconds: CurriedFn1<number, number>
-  namespace secondsToMilliseconds {}
+  namespace secondsToMilliseconds { }
 
   const secondsToMinutes: CurriedFn1<number, number>
-  namespace secondsToMinutes {}
+  namespace secondsToMinutes { }
 
   const set: CurriedFn2<
     {
@@ -5832,16 +5829,16 @@ declare module 'date-fns/fp' {
     Date | number,
     Date
   >
-  namespace set {}
+  namespace set { }
 
   const setDate: CurriedFn2<number, Date | number, Date>
-  namespace setDate {}
+  namespace setDate { }
 
   const setDay: CurriedFn2<number, Date | number, Date>
-  namespace setDay {}
+  namespace setDay { }
 
   const setDayOfYear: CurriedFn2<number, Date | number, Date>
-  namespace setDayOfYear {}
+  namespace setDayOfYear { }
 
   const setDayWithOptions: CurriedFn3<
     {
@@ -5852,37 +5849,37 @@ declare module 'date-fns/fp' {
     Date | number,
     Date
   >
-  namespace setDayWithOptions {}
+  namespace setDayWithOptions { }
 
   const setHours: CurriedFn2<number, Date | number, Date>
-  namespace setHours {}
+  namespace setHours { }
 
   const setISODay: CurriedFn2<number, Date | number, Date>
-  namespace setISODay {}
+  namespace setISODay { }
 
   const setISOWeek: CurriedFn2<number, Date | number, Date>
-  namespace setISOWeek {}
+  namespace setISOWeek { }
 
   const setISOWeekYear: CurriedFn2<number, Date | number, Date>
-  namespace setISOWeekYear {}
+  namespace setISOWeekYear { }
 
   const setMilliseconds: CurriedFn2<number, Date | number, Date>
-  namespace setMilliseconds {}
+  namespace setMilliseconds { }
 
   const setMinutes: CurriedFn2<number, Date | number, Date>
-  namespace setMinutes {}
+  namespace setMinutes { }
 
   const setMonth: CurriedFn2<number, Date | number, Date>
-  namespace setMonth {}
+  namespace setMonth { }
 
   const setQuarter: CurriedFn2<number, Date | number, Date>
-  namespace setQuarter {}
+  namespace setQuarter { }
 
   const setSeconds: CurriedFn2<number, Date | number, Date>
-  namespace setSeconds {}
+  namespace setSeconds { }
 
   const setWeek: CurriedFn2<number, Date | number, Date>
-  namespace setWeek {}
+  namespace setWeek { }
 
   const setWeekWithOptions: CurriedFn3<
     {
@@ -5894,10 +5891,10 @@ declare module 'date-fns/fp' {
     Date | number,
     Date
   >
-  namespace setWeekWithOptions {}
+  namespace setWeekWithOptions { }
 
   const setWeekYear: CurriedFn2<number, Date | number, Date>
-  namespace setWeekYear {}
+  namespace setWeekYear { }
 
   const setWeekYearWithOptions: CurriedFn3<
     {
@@ -5909,40 +5906,40 @@ declare module 'date-fns/fp' {
     Date | number,
     Date
   >
-  namespace setWeekYearWithOptions {}
+  namespace setWeekYearWithOptions { }
 
   const setYear: CurriedFn2<number, Date | number, Date>
-  namespace setYear {}
+  namespace setYear { }
 
   const startOfDay: CurriedFn1<Date | number, Date>
-  namespace startOfDay {}
+  namespace startOfDay { }
 
   const startOfDecade: CurriedFn1<Date | number, Date>
-  namespace startOfDecade {}
+  namespace startOfDecade { }
 
   const startOfHour: CurriedFn1<Date | number, Date>
-  namespace startOfHour {}
+  namespace startOfHour { }
 
   const startOfISOWeek: CurriedFn1<Date | number, Date>
-  namespace startOfISOWeek {}
+  namespace startOfISOWeek { }
 
   const startOfISOWeekYear: CurriedFn1<Date | number, Date>
-  namespace startOfISOWeekYear {}
+  namespace startOfISOWeekYear { }
 
   const startOfMinute: CurriedFn1<Date | number, Date>
-  namespace startOfMinute {}
+  namespace startOfMinute { }
 
   const startOfMonth: CurriedFn1<Date | number, Date>
-  namespace startOfMonth {}
+  namespace startOfMonth { }
 
   const startOfQuarter: CurriedFn1<Date | number, Date>
-  namespace startOfQuarter {}
+  namespace startOfQuarter { }
 
   const startOfSecond: CurriedFn1<Date | number, Date>
-  namespace startOfSecond {}
+  namespace startOfSecond { }
 
   const startOfWeek: CurriedFn1<Date | number, Date>
-  namespace startOfWeek {}
+  namespace startOfWeek { }
 
   const startOfWeekWithOptions: CurriedFn2<
     {
@@ -5952,10 +5949,10 @@ declare module 'date-fns/fp' {
     Date | number,
     Date
   >
-  namespace startOfWeekWithOptions {}
+  namespace startOfWeekWithOptions { }
 
   const startOfWeekYear: CurriedFn1<Date | number, Date>
-  namespace startOfWeekYear {}
+  namespace startOfWeekYear { }
 
   const startOfWeekYearWithOptions: CurriedFn2<
     {
@@ -5966,58 +5963,58 @@ declare module 'date-fns/fp' {
     Date | number,
     Date
   >
-  namespace startOfWeekYearWithOptions {}
+  namespace startOfWeekYearWithOptions { }
 
   const startOfYear: CurriedFn1<Date | number, Date>
-  namespace startOfYear {}
+  namespace startOfYear { }
 
   const sub: CurriedFn2<Duration, Date | number, Date>
-  namespace sub {}
+  namespace sub { }
 
   const subBusinessDays: CurriedFn2<number, Date | number, Date>
-  namespace subBusinessDays {}
+  namespace subBusinessDays { }
 
   const subDays: CurriedFn2<number, Date | number, Date>
-  namespace subDays {}
+  namespace subDays { }
 
   const subHours: CurriedFn2<number, Date | number, Date>
-  namespace subHours {}
+  namespace subHours { }
 
   const subISOWeekYears: CurriedFn2<number, Date | number, Date>
-  namespace subISOWeekYears {}
+  namespace subISOWeekYears { }
 
   const subMilliseconds: CurriedFn2<number, Date | number, Date>
-  namespace subMilliseconds {}
+  namespace subMilliseconds { }
 
   const subMinutes: CurriedFn2<number, Date | number, Date>
-  namespace subMinutes {}
+  namespace subMinutes { }
 
   const subMonths: CurriedFn2<number, Date | number, Date>
-  namespace subMonths {}
+  namespace subMonths { }
 
   const subQuarters: CurriedFn2<number, Date | number, Date>
-  namespace subQuarters {}
+  namespace subQuarters { }
 
   const subSeconds: CurriedFn2<number, Date | number, Date>
-  namespace subSeconds {}
+  namespace subSeconds { }
 
   const subWeeks: CurriedFn2<number, Date | number, Date>
-  namespace subWeeks {}
+  namespace subWeeks { }
 
   const subYears: CurriedFn2<number, Date | number, Date>
-  namespace subYears {}
+  namespace subYears { }
 
   const toDate: CurriedFn1<Date | number, Date>
-  namespace toDate {}
+  namespace toDate { }
 
   const weeksToDays: CurriedFn1<number, number>
-  namespace weeksToDays {}
+  namespace weeksToDays { }
 
   const yearsToMonths: CurriedFn1<number, number>
-  namespace yearsToMonths {}
+  namespace yearsToMonths { }
 
   const yearsToQuarters: CurriedFn1<number, number>
-  namespace yearsToQuarters {}
+  namespace yearsToQuarters { }
 
   const daysInWeek: number
 
@@ -9869,41 +9866,42 @@ declare module 'date-fns/fp/yearsToQuarters/index.js' {
 // ECMAScript Module Functions
 
 declare module 'date-fns/esm' {
+  import { Day, Duration, Interval, Locale } from 'date-fns'
   function add(date: Date | number, duration: Duration): Date
-  namespace add {}
+  namespace add { }
 
   function addBusinessDays(date: Date | number, amount: number): Date
-  namespace addBusinessDays {}
+  namespace addBusinessDays { }
 
   function addDays(date: Date | number, amount: number): Date
-  namespace addDays {}
+  namespace addDays { }
 
   function addHours(date: Date | number, amount: number): Date
-  namespace addHours {}
+  namespace addHours { }
 
   function addISOWeekYears(date: Date | number, amount: number): Date
-  namespace addISOWeekYears {}
+  namespace addISOWeekYears { }
 
   function addMilliseconds(date: Date | number, amount: number): Date
-  namespace addMilliseconds {}
+  namespace addMilliseconds { }
 
   function addMinutes(date: Date | number, amount: number): Date
-  namespace addMinutes {}
+  namespace addMinutes { }
 
   function addMonths(date: Date | number, amount: number): Date
-  namespace addMonths {}
+  namespace addMonths { }
 
   function addQuarters(date: Date | number, amount: number): Date
-  namespace addQuarters {}
+  namespace addQuarters { }
 
   function addSeconds(date: Date | number, amount: number): Date
-  namespace addSeconds {}
+  namespace addSeconds { }
 
   function addWeeks(date: Date | number, amount: number): Date
-  namespace addWeeks {}
+  namespace addWeeks { }
 
   function addYears(date: Date | number, amount: number): Date
-  namespace addYears {}
+  namespace addYears { }
 
   function areIntervalsOverlapping(
     intervalLeft: Interval,
@@ -9912,70 +9910,70 @@ declare module 'date-fns/esm' {
       inclusive?: boolean
     }
   ): boolean
-  namespace areIntervalsOverlapping {}
+  namespace areIntervalsOverlapping { }
 
   function clamp(date: Date | number, interval: Interval): Date
-  namespace clamp {}
+  namespace clamp { }
 
   function closestIndexTo(
     dateToCompare: Date | number,
     datesArray: (Date | number)[]
   ): number | undefined
-  namespace closestIndexTo {}
+  namespace closestIndexTo { }
 
   function closestTo(
     dateToCompare: Date | number,
     datesArray: (Date | number)[]
   ): Date | undefined
-  namespace closestTo {}
+  namespace closestTo { }
 
   function compareAsc(dateLeft: Date | number, dateRight: Date | number): number
-  namespace compareAsc {}
+  namespace compareAsc { }
 
   function compareDesc(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace compareDesc {}
+  namespace compareDesc { }
 
   function daysToWeeks(days: number): number
-  namespace daysToWeeks {}
+  namespace daysToWeeks { }
 
   function differenceInBusinessDays(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInBusinessDays {}
+  namespace differenceInBusinessDays { }
 
   function differenceInCalendarDays(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInCalendarDays {}
+  namespace differenceInCalendarDays { }
 
   function differenceInCalendarISOWeeks(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInCalendarISOWeeks {}
+  namespace differenceInCalendarISOWeeks { }
 
   function differenceInCalendarISOWeekYears(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInCalendarISOWeekYears {}
+  namespace differenceInCalendarISOWeekYears { }
 
   function differenceInCalendarMonths(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInCalendarMonths {}
+  namespace differenceInCalendarMonths { }
 
   function differenceInCalendarQuarters(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInCalendarQuarters {}
+  namespace differenceInCalendarQuarters { }
 
   function differenceInCalendarWeeks(
     dateLeft: Date | number,
@@ -9985,19 +9983,19 @@ declare module 'date-fns/esm' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): number
-  namespace differenceInCalendarWeeks {}
+  namespace differenceInCalendarWeeks { }
 
   function differenceInCalendarYears(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInCalendarYears {}
+  namespace differenceInCalendarYears { }
 
   function differenceInDays(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInDays {}
+  namespace differenceInDays { }
 
   function differenceInHours(
     dateLeft: Date | number,
@@ -10006,19 +10004,19 @@ declare module 'date-fns/esm' {
       roundingMethod?: string
     }
   ): number
-  namespace differenceInHours {}
+  namespace differenceInHours { }
 
   function differenceInISOWeekYears(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInISOWeekYears {}
+  namespace differenceInISOWeekYears { }
 
   function differenceInMilliseconds(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInMilliseconds {}
+  namespace differenceInMilliseconds { }
 
   function differenceInMinutes(
     dateLeft: Date | number,
@@ -10027,13 +10025,13 @@ declare module 'date-fns/esm' {
       roundingMethod?: string
     }
   ): number
-  namespace differenceInMinutes {}
+  namespace differenceInMinutes { }
 
   function differenceInMonths(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInMonths {}
+  namespace differenceInMonths { }
 
   function differenceInQuarters(
     dateLeft: Date | number,
@@ -10042,7 +10040,7 @@ declare module 'date-fns/esm' {
       roundingMethod?: string
     }
   ): number
-  namespace differenceInQuarters {}
+  namespace differenceInQuarters { }
 
   function differenceInSeconds(
     dateLeft: Date | number,
@@ -10051,7 +10049,7 @@ declare module 'date-fns/esm' {
       roundingMethod?: string
     }
   ): number
-  namespace differenceInSeconds {}
+  namespace differenceInSeconds { }
 
   function differenceInWeeks(
     dateLeft: Date | number,
@@ -10060,13 +10058,13 @@ declare module 'date-fns/esm' {
       roundingMethod?: string
     }
   ): number
-  namespace differenceInWeeks {}
+  namespace differenceInWeeks { }
 
   function differenceInYears(
     dateLeft: Date | number,
     dateRight: Date | number
   ): number
-  namespace differenceInYears {}
+  namespace differenceInYears { }
 
   function eachDayOfInterval(
     interval: Interval,
@@ -10074,7 +10072,7 @@ declare module 'date-fns/esm' {
       step?: number
     }
   ): Date[]
-  namespace eachDayOfInterval {}
+  namespace eachDayOfInterval { }
 
   function eachHourOfInterval(
     interval: Interval,
@@ -10082,7 +10080,7 @@ declare module 'date-fns/esm' {
       step?: number
     }
   ): Date[]
-  namespace eachHourOfInterval {}
+  namespace eachHourOfInterval { }
 
   function eachMinuteOfInterval(
     interval: Interval,
@@ -10090,22 +10088,22 @@ declare module 'date-fns/esm' {
       step?: number
     }
   ): Date[]
-  namespace eachMinuteOfInterval {}
+  namespace eachMinuteOfInterval { }
 
   function eachMonthOfInterval(interval: Interval): Date[]
-  namespace eachMonthOfInterval {}
+  namespace eachMonthOfInterval { }
 
   function eachQuarterOfInterval(interval: Interval): Date[]
-  namespace eachQuarterOfInterval {}
+  namespace eachQuarterOfInterval { }
 
   function eachWeekendOfInterval(interval: Interval): Date[]
-  namespace eachWeekendOfInterval {}
+  namespace eachWeekendOfInterval { }
 
   function eachWeekendOfMonth(date: Date | number): Date[]
-  namespace eachWeekendOfMonth {}
+  namespace eachWeekendOfMonth { }
 
   function eachWeekendOfYear(date: Date | number): Date[]
-  namespace eachWeekendOfYear {}
+  namespace eachWeekendOfYear { }
 
   function eachWeekOfInterval(
     interval: Interval,
@@ -10114,13 +10112,13 @@ declare module 'date-fns/esm' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): Date[]
-  namespace eachWeekOfInterval {}
+  namespace eachWeekOfInterval { }
 
   function eachYearOfInterval(interval: Interval): Date[]
-  namespace eachYearOfInterval {}
+  namespace eachYearOfInterval { }
 
   function endOfDay(date: Date | number): Date
-  namespace endOfDay {}
+  namespace endOfDay { }
 
   function endOfDecade(
     date: Date | number,
@@ -10128,34 +10126,34 @@ declare module 'date-fns/esm' {
       additionalDigits?: 0 | 1 | 2
     }
   ): Date
-  namespace endOfDecade {}
+  namespace endOfDecade { }
 
   function endOfHour(date: Date | number): Date
-  namespace endOfHour {}
+  namespace endOfHour { }
 
   function endOfISOWeek(date: Date | number): Date
-  namespace endOfISOWeek {}
+  namespace endOfISOWeek { }
 
   function endOfISOWeekYear(date: Date | number): Date
-  namespace endOfISOWeekYear {}
+  namespace endOfISOWeekYear { }
 
   function endOfMinute(date: Date | number): Date
-  namespace endOfMinute {}
+  namespace endOfMinute { }
 
   function endOfMonth(date: Date | number): Date
-  namespace endOfMonth {}
+  namespace endOfMonth { }
 
   function endOfQuarter(date: Date | number): Date
-  namespace endOfQuarter {}
+  namespace endOfQuarter { }
 
   function endOfSecond(date: Date | number): Date
-  namespace endOfSecond {}
+  namespace endOfSecond { }
 
   function endOfToday(): Date
-  namespace endOfToday {}
+  namespace endOfToday { }
 
   function endOfTomorrow(): Date
-  namespace endOfTomorrow {}
+  namespace endOfTomorrow { }
 
   function endOfWeek(
     date: Date | number,
@@ -10164,13 +10162,13 @@ declare module 'date-fns/esm' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): Date
-  namespace endOfWeek {}
+  namespace endOfWeek { }
 
   function endOfYear(date: Date | number): Date
-  namespace endOfYear {}
+  namespace endOfYear { }
 
   function endOfYesterday(): Date
-  namespace endOfYesterday {}
+  namespace endOfYesterday { }
 
   function format(
     date: Date | number,
@@ -10183,7 +10181,7 @@ declare module 'date-fns/esm' {
       useAdditionalDayOfYearTokens?: boolean
     }
   ): string
-  namespace format {}
+  namespace format { }
 
   function formatDistance(
     date: Date | number,
@@ -10194,7 +10192,7 @@ declare module 'date-fns/esm' {
       locale?: Locale
     }
   ): string
-  namespace formatDistance {}
+  namespace formatDistance { }
 
   function formatDistanceStrict(
     date: Date | number,
@@ -10206,7 +10204,7 @@ declare module 'date-fns/esm' {
       locale?: Locale
     }
   ): string
-  namespace formatDistanceStrict {}
+  namespace formatDistanceStrict { }
 
   function formatDistanceToNow(
     date: Date | number,
@@ -10216,7 +10214,7 @@ declare module 'date-fns/esm' {
       locale?: Locale
     }
   ): string
-  namespace formatDistanceToNow {}
+  namespace formatDistanceToNow { }
 
   function formatDistanceToNowStrict(
     date: Date | number,
@@ -10227,7 +10225,7 @@ declare module 'date-fns/esm' {
       locale?: Locale
     }
   ): string
-  namespace formatDistanceToNowStrict {}
+  namespace formatDistanceToNowStrict { }
 
   function formatDuration(
     duration: Duration,
@@ -10238,7 +10236,7 @@ declare module 'date-fns/esm' {
       locale?: Locale
     }
   ): string
-  namespace formatDuration {}
+  namespace formatDuration { }
 
   function formatISO(
     date: Date | number,
@@ -10247,7 +10245,7 @@ declare module 'date-fns/esm' {
       representation?: 'complete' | 'date' | 'time'
     }
   ): string
-  namespace formatISO {}
+  namespace formatISO { }
 
   function formatISO9075(
     date: Date | number,
@@ -10256,10 +10254,10 @@ declare module 'date-fns/esm' {
       representation?: 'complete' | 'date' | 'time'
     }
   ): string
-  namespace formatISO9075 {}
+  namespace formatISO9075 { }
 
   function formatISODuration(duration: Duration): string
-  namespace formatISODuration {}
+  namespace formatISODuration { }
 
   function formatRelative(
     date: Date | number,
@@ -10269,7 +10267,7 @@ declare module 'date-fns/esm' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): string
-  namespace formatRelative {}
+  namespace formatRelative { }
 
   function formatRFC3339(
     date: Date | number,
@@ -10277,76 +10275,76 @@ declare module 'date-fns/esm' {
       fractionDigits?: 0 | 1 | 2 | 3
     }
   ): string
-  namespace formatRFC3339 {}
+  namespace formatRFC3339 { }
 
   function formatRFC7231(date: Date | number): string
-  namespace formatRFC7231 {}
+  namespace formatRFC7231 { }
 
   function fromUnixTime(unixTime: number): Date
-  namespace fromUnixTime {}
+  namespace fromUnixTime { }
 
   function getDate(date: Date | number): number
-  namespace getDate {}
+  namespace getDate { }
 
   function getDay(date: Date | number): 0 | 1 | 2 | 3 | 4 | 5 | 6
-  namespace getDay {}
+  namespace getDay { }
 
   function getDayOfYear(date: Date | number): number
-  namespace getDayOfYear {}
+  namespace getDayOfYear { }
 
   function getDaysInMonth(date: Date | number): number
-  namespace getDaysInMonth {}
+  namespace getDaysInMonth { }
 
   function getDaysInYear(date: Date | number): number
-  namespace getDaysInYear {}
+  namespace getDaysInYear { }
 
   function getDecade(date: Date | number): number
-  namespace getDecade {}
+  namespace getDecade { }
 
   function getDefaultOptions(): Object
-  namespace getDefaultOptions {}
+  namespace getDefaultOptions { }
 
   function getHours(date: Date | number): number
-  namespace getHours {}
+  namespace getHours { }
 
   function getISODay(date: Date | number): number
-  namespace getISODay {}
+  namespace getISODay { }
 
   function getISOWeek(date: Date | number): number
-  namespace getISOWeek {}
+  namespace getISOWeek { }
 
   function getISOWeeksInYear(date: Date | number): number
-  namespace getISOWeeksInYear {}
+  namespace getISOWeeksInYear { }
 
   function getISOWeekYear(date: Date | number): number
-  namespace getISOWeekYear {}
+  namespace getISOWeekYear { }
 
   function getMilliseconds(date: Date | number): number
-  namespace getMilliseconds {}
+  namespace getMilliseconds { }
 
   function getMinutes(date: Date | number): number
-  namespace getMinutes {}
+  namespace getMinutes { }
 
   function getMonth(date: Date | number): number
-  namespace getMonth {}
+  namespace getMonth { }
 
   function getOverlappingDaysInIntervals(
     intervalLeft: Interval,
     intervalRight: Interval
   ): number
-  namespace getOverlappingDaysInIntervals {}
+  namespace getOverlappingDaysInIntervals { }
 
   function getQuarter(date: Date | number): number
-  namespace getQuarter {}
+  namespace getQuarter { }
 
   function getSeconds(date: Date | number): number
-  namespace getSeconds {}
+  namespace getSeconds { }
 
   function getTime(date: Date | number): number
-  namespace getTime {}
+  namespace getTime { }
 
   function getUnixTime(date: Date | number): number
-  namespace getUnixTime {}
+  namespace getUnixTime { }
 
   function getWeek(
     date: Date | number,
@@ -10356,7 +10354,7 @@ declare module 'date-fns/esm' {
       firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
     }
   ): number
-  namespace getWeek {}
+  namespace getWeek { }
 
   function getWeekOfMonth(
     date: Date | number,
@@ -10365,7 +10363,7 @@ declare module 'date-fns/esm' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): number
-  namespace getWeekOfMonth {}
+  namespace getWeekOfMonth { }
 
   function getWeeksInMonth(
     date: Date | number,
@@ -10374,7 +10372,7 @@ declare module 'date-fns/esm' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): number
-  namespace getWeeksInMonth {}
+  namespace getWeeksInMonth { }
 
   function getWeekYear(
     date: Date | number,
@@ -10384,22 +10382,22 @@ declare module 'date-fns/esm' {
       firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
     }
   ): number
-  namespace getWeekYear {}
+  namespace getWeekYear { }
 
   function getYear(date: Date | number): number
-  namespace getYear {}
+  namespace getYear { }
 
   function hoursToMilliseconds(hours: number): number
-  namespace hoursToMilliseconds {}
+  namespace hoursToMilliseconds { }
 
   function hoursToMinutes(hours: number): number
-  namespace hoursToMinutes {}
+  namespace hoursToMinutes { }
 
   function hoursToSeconds(hours: number): number
-  namespace hoursToSeconds {}
+  namespace hoursToSeconds { }
 
   function intervalToDuration(interval: Interval): Duration
-  namespace intervalToDuration {}
+  namespace intervalToDuration { }
 
   function intlFormat(
     argument: Date | number,
@@ -10422,7 +10420,7 @@ declare module 'date-fns/esm' {
       locale?: string | string[]
     }
   ): string
-  namespace intlFormat {}
+  namespace intlFormat { }
 
   function intlFormatDistance(
     date: Date | number,
@@ -10435,37 +10433,37 @@ declare module 'date-fns/esm' {
       style?: string
     }
   ): string
-  namespace intlFormatDistance {}
+  namespace intlFormatDistance { }
 
   function isAfter(date: Date | number, dateToCompare: Date | number): boolean
-  namespace isAfter {}
+  namespace isAfter { }
 
   function isBefore(date: Date | number, dateToCompare: Date | number): boolean
-  namespace isBefore {}
+  namespace isBefore { }
 
   function isDate(value: any): boolean
-  namespace isDate {}
+  namespace isDate { }
 
   function isEqual(dateLeft: Date | number, dateRight: Date | number): boolean
-  namespace isEqual {}
+  namespace isEqual { }
 
   function isExists(year: number, month: number, day: number): boolean
-  namespace isExists {}
+  namespace isExists { }
 
   function isFirstDayOfMonth(date: Date | number): boolean
-  namespace isFirstDayOfMonth {}
+  namespace isFirstDayOfMonth { }
 
   function isFriday(date: Date | number): boolean
-  namespace isFriday {}
+  namespace isFriday { }
 
   function isFuture(date: Date | number): boolean
-  namespace isFuture {}
+  namespace isFuture { }
 
   function isLastDayOfMonth(date: Date | number): boolean
-  namespace isLastDayOfMonth {}
+  namespace isLastDayOfMonth { }
 
   function isLeapYear(date: Date | number): boolean
-  namespace isLeapYear {}
+  namespace isLeapYear { }
 
   function isMatch(
     dateString: string,
@@ -10478,58 +10476,58 @@ declare module 'date-fns/esm' {
       useAdditionalDayOfYearTokens?: boolean
     }
   ): boolean
-  namespace isMatch {}
+  namespace isMatch { }
 
   function isMonday(date: Date | number): boolean
-  namespace isMonday {}
+  namespace isMonday { }
 
   function isPast(date: Date | number): boolean
-  namespace isPast {}
+  namespace isPast { }
 
   function isSameDay(dateLeft: Date | number, dateRight: Date | number): boolean
-  namespace isSameDay {}
+  namespace isSameDay { }
 
   function isSameHour(
     dateLeft: Date | number,
     dateRight: Date | number
   ): boolean
-  namespace isSameHour {}
+  namespace isSameHour { }
 
   function isSameISOWeek(
     dateLeft: Date | number,
     dateRight: Date | number
   ): boolean
-  namespace isSameISOWeek {}
+  namespace isSameISOWeek { }
 
   function isSameISOWeekYear(
     dateLeft: Date | number,
     dateRight: Date | number
   ): boolean
-  namespace isSameISOWeekYear {}
+  namespace isSameISOWeekYear { }
 
   function isSameMinute(
     dateLeft: Date | number,
     dateRight: Date | number
   ): boolean
-  namespace isSameMinute {}
+  namespace isSameMinute { }
 
   function isSameMonth(
     dateLeft: Date | number,
     dateRight: Date | number
   ): boolean
-  namespace isSameMonth {}
+  namespace isSameMonth { }
 
   function isSameQuarter(
     dateLeft: Date | number,
     dateRight: Date | number
   ): boolean
-  namespace isSameQuarter {}
+  namespace isSameQuarter { }
 
   function isSameSecond(
     dateLeft: Date | number,
     dateRight: Date | number
   ): boolean
-  namespace isSameSecond {}
+  namespace isSameSecond { }
 
   function isSameWeek(
     dateLeft: Date | number,
@@ -10539,37 +10537,37 @@ declare module 'date-fns/esm' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): boolean
-  namespace isSameWeek {}
+  namespace isSameWeek { }
 
   function isSameYear(
     dateLeft: Date | number,
     dateRight: Date | number
   ): boolean
-  namespace isSameYear {}
+  namespace isSameYear { }
 
   function isSaturday(date: Date | number): boolean
-  namespace isSaturday {}
+  namespace isSaturday { }
 
   function isSunday(date: Date | number): boolean
-  namespace isSunday {}
+  namespace isSunday { }
 
   function isThisHour(date: Date | number): boolean
-  namespace isThisHour {}
+  namespace isThisHour { }
 
   function isThisISOWeek(date: Date | number): boolean
-  namespace isThisISOWeek {}
+  namespace isThisISOWeek { }
 
   function isThisMinute(date: Date | number): boolean
-  namespace isThisMinute {}
+  namespace isThisMinute { }
 
   function isThisMonth(date: Date | number): boolean
-  namespace isThisMonth {}
+  namespace isThisMonth { }
 
   function isThisQuarter(date: Date | number): boolean
-  namespace isThisQuarter {}
+  namespace isThisQuarter { }
 
   function isThisSecond(date: Date | number): boolean
-  namespace isThisSecond {}
+  namespace isThisSecond { }
 
   function isThisWeek(
     date: Date | number,
@@ -10578,49 +10576,49 @@ declare module 'date-fns/esm' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): boolean
-  namespace isThisWeek {}
+  namespace isThisWeek { }
 
   function isThisYear(date: Date | number): boolean
-  namespace isThisYear {}
+  namespace isThisYear { }
 
   function isThursday(date: Date | number): boolean
-  namespace isThursday {}
+  namespace isThursday { }
 
   function isToday(date: Date | number): boolean
-  namespace isToday {}
+  namespace isToday { }
 
   function isTomorrow(date: Date | number): boolean
-  namespace isTomorrow {}
+  namespace isTomorrow { }
 
   function isTuesday(date: Date | number): boolean
-  namespace isTuesday {}
+  namespace isTuesday { }
 
   function isValid(date: any): boolean
-  namespace isValid {}
+  namespace isValid { }
 
   function isWednesday(date: Date | number): boolean
-  namespace isWednesday {}
+  namespace isWednesday { }
 
   function isWeekend(date: Date | number): boolean
-  namespace isWeekend {}
+  namespace isWeekend { }
 
   function isWithinInterval(date: Date | number, interval: Interval): boolean
-  namespace isWithinInterval {}
+  namespace isWithinInterval { }
 
   function isYesterday(date: Date | number): boolean
-  namespace isYesterday {}
+  namespace isYesterday { }
 
   function lastDayOfDecade(date: Date | number): Date
-  namespace lastDayOfDecade {}
+  namespace lastDayOfDecade { }
 
   function lastDayOfISOWeek(date: Date | number): Date
-  namespace lastDayOfISOWeek {}
+  namespace lastDayOfISOWeek { }
 
   function lastDayOfISOWeekYear(date: Date | number): Date
-  namespace lastDayOfISOWeekYear {}
+  namespace lastDayOfISOWeekYear { }
 
   function lastDayOfMonth(date: Date | number): Date
-  namespace lastDayOfMonth {}
+  namespace lastDayOfMonth { }
 
   function lastDayOfQuarter(
     date: Date | number,
@@ -10628,7 +10626,7 @@ declare module 'date-fns/esm' {
       additionalDigits?: 0 | 1 | 2
     }
   ): Date
-  namespace lastDayOfQuarter {}
+  namespace lastDayOfQuarter { }
 
   function lastDayOfWeek(
     date: Date | number,
@@ -10637,70 +10635,70 @@ declare module 'date-fns/esm' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): Date
-  namespace lastDayOfWeek {}
+  namespace lastDayOfWeek { }
 
   function lastDayOfYear(date: Date | number): Date
-  namespace lastDayOfYear {}
+  namespace lastDayOfYear { }
 
   function lightFormat(date: Date | number, format: string): string
-  namespace lightFormat {}
+  namespace lightFormat { }
 
   function max(datesArray: (Date | number)[]): Date
-  namespace max {}
+  namespace max { }
 
   function milliseconds(duration: Duration): number
-  namespace milliseconds {}
+  namespace milliseconds { }
 
   function millisecondsToHours(milliseconds: number): number
-  namespace millisecondsToHours {}
+  namespace millisecondsToHours { }
 
   function millisecondsToMinutes(milliseconds: number): number
-  namespace millisecondsToMinutes {}
+  namespace millisecondsToMinutes { }
 
   function millisecondsToSeconds(milliseconds: number): number
-  namespace millisecondsToSeconds {}
+  namespace millisecondsToSeconds { }
 
   function min(datesArray: (Date | number)[]): Date
-  namespace min {}
+  namespace min { }
 
   function minutesToHours(minutes: number): number
-  namespace minutesToHours {}
+  namespace minutesToHours { }
 
   function minutesToMilliseconds(minutes: number): number
-  namespace minutesToMilliseconds {}
+  namespace minutesToMilliseconds { }
 
   function minutesToSeconds(minutes: number): number
-  namespace minutesToSeconds {}
+  namespace minutesToSeconds { }
 
   function monthsToQuarters(months: number): number
-  namespace monthsToQuarters {}
+  namespace monthsToQuarters { }
 
   function monthsToYears(months: number): number
-  namespace monthsToYears {}
+  namespace monthsToYears { }
 
   function nextDay(date: Date | number, day: Day): Date
-  namespace nextDay {}
+  namespace nextDay { }
 
   function nextFriday(date: Date | number): Date
-  namespace nextFriday {}
+  namespace nextFriday { }
 
   function nextMonday(date: Date | number): Date
-  namespace nextMonday {}
+  namespace nextMonday { }
 
   function nextSaturday(date: Date | number): Date
-  namespace nextSaturday {}
+  namespace nextSaturday { }
 
   function nextSunday(date: Date | number): Date
-  namespace nextSunday {}
+  namespace nextSunday { }
 
   function nextThursday(date: Date | number): Date
-  namespace nextThursday {}
+  namespace nextThursday { }
 
   function nextTuesday(date: Date | number): Date
-  namespace nextTuesday {}
+  namespace nextTuesday { }
 
   function nextWednesday(date: Date | number): Date
-  namespace nextWednesday {}
+  namespace nextWednesday { }
 
   function parse(
     dateString: string,
@@ -10714,7 +10712,7 @@ declare module 'date-fns/esm' {
       useAdditionalDayOfYearTokens?: boolean
     }
   ): Date
-  namespace parse {}
+  namespace parse { }
 
   function parseISO(
     argument: string,
@@ -10722,40 +10720,40 @@ declare module 'date-fns/esm' {
       additionalDigits?: 0 | 1 | 2
     }
   ): Date
-  namespace parseISO {}
+  namespace parseISO { }
 
   function parseJSON(argument: string | number | Date): Date
-  namespace parseJSON {}
+  namespace parseJSON { }
 
   function previousDay(date: Date | number, day: number): Date
-  namespace previousDay {}
+  namespace previousDay { }
 
   function previousFriday(date: Date | number): Date
-  namespace previousFriday {}
+  namespace previousFriday { }
 
   function previousMonday(date: Date | number): Date
-  namespace previousMonday {}
+  namespace previousMonday { }
 
   function previousSaturday(date: Date | number): Date
-  namespace previousSaturday {}
+  namespace previousSaturday { }
 
   function previousSunday(date: Date | number): Date
-  namespace previousSunday {}
+  namespace previousSunday { }
 
   function previousThursday(date: Date | number): Date
-  namespace previousThursday {}
+  namespace previousThursday { }
 
   function previousTuesday(date: Date | number): Date
-  namespace previousTuesday {}
+  namespace previousTuesday { }
 
   function previousWednesday(date: Date | number): Date
-  namespace previousWednesday {}
+  namespace previousWednesday { }
 
   function quartersToMonths(quarters: number): number
-  namespace quartersToMonths {}
+  namespace quartersToMonths { }
 
   function quartersToYears(quarters: number): number
-  namespace quartersToYears {}
+  namespace quartersToYears { }
 
   function roundToNearestMinutes(
     date: Date | number,
@@ -10764,16 +10762,16 @@ declare module 'date-fns/esm' {
       roundingMethod?: string
     }
   ): Date
-  namespace roundToNearestMinutes {}
+  namespace roundToNearestMinutes { }
 
   function secondsToHours(seconds: number): number
-  namespace secondsToHours {}
+  namespace secondsToHours { }
 
   function secondsToMilliseconds(seconds: number): number
-  namespace secondsToMilliseconds {}
+  namespace secondsToMilliseconds { }
 
   function secondsToMinutes(seconds: number): number
-  namespace secondsToMinutes {}
+  namespace secondsToMinutes { }
 
   function set(
     date: Date | number,
@@ -10787,10 +10785,10 @@ declare module 'date-fns/esm' {
       milliseconds?: number
     }
   ): Date
-  namespace set {}
+  namespace set { }
 
   function setDate(date: Date | number, dayOfMonth: number): Date
-  namespace setDate {}
+  namespace setDate { }
 
   function setDay(
     date: Date | number,
@@ -10800,44 +10798,44 @@ declare module 'date-fns/esm' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): Date
-  namespace setDay {}
+  namespace setDay { }
 
   function setDayOfYear(date: Date | number, dayOfYear: number): Date
-  namespace setDayOfYear {}
+  namespace setDayOfYear { }
 
   function setDefaultOptions(newOptions: {
     locale?: Locale
     weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
   }): void
-  namespace setDefaultOptions {}
+  namespace setDefaultOptions { }
 
   function setHours(date: Date | number, hours: number): Date
-  namespace setHours {}
+  namespace setHours { }
 
   function setISODay(date: Date | number, day: number): Date
-  namespace setISODay {}
+  namespace setISODay { }
 
   function setISOWeek(date: Date | number, isoWeek: number): Date
-  namespace setISOWeek {}
+  namespace setISOWeek { }
 
   function setISOWeekYear(date: Date | number, isoWeekYear: number): Date
-  namespace setISOWeekYear {}
+  namespace setISOWeekYear { }
 
   function setMilliseconds(date: Date | number, milliseconds: number): Date
-  namespace setMilliseconds {}
+  namespace setMilliseconds { }
 
   function setMinutes(date: Date | number, minutes: number): Date
-  namespace setMinutes {}
+  namespace setMinutes { }
 
   function setMonth(date: Date | number, month: number): Date
-  namespace setMonth {}
+  namespace setMonth { }
 
   function setQuarter(date: Date | number, quarter: number): Date
-  namespace setQuarter {}
+  namespace setQuarter { }
 
   function setSeconds(date: Date | number, seconds: number): Date
-  namespace setSeconds {}
+  namespace setSeconds { }
 
   function setWeek(
     date: Date | number,
@@ -10848,7 +10846,7 @@ declare module 'date-fns/esm' {
       firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
     }
   ): Date
-  namespace setWeek {}
+  namespace setWeek { }
 
   function setWeekYear(
     date: Date | number,
@@ -10859,43 +10857,43 @@ declare module 'date-fns/esm' {
       firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
     }
   ): Date
-  namespace setWeekYear {}
+  namespace setWeekYear { }
 
   function setYear(date: Date | number, year: number): Date
-  namespace setYear {}
+  namespace setYear { }
 
   function startOfDay(date: Date | number): Date
-  namespace startOfDay {}
+  namespace startOfDay { }
 
   function startOfDecade(date: Date | number): Date
-  namespace startOfDecade {}
+  namespace startOfDecade { }
 
   function startOfHour(date: Date | number): Date
-  namespace startOfHour {}
+  namespace startOfHour { }
 
   function startOfISOWeek(date: Date | number): Date
-  namespace startOfISOWeek {}
+  namespace startOfISOWeek { }
 
   function startOfISOWeekYear(date: Date | number): Date
-  namespace startOfISOWeekYear {}
+  namespace startOfISOWeekYear { }
 
   function startOfMinute(date: Date | number): Date
-  namespace startOfMinute {}
+  namespace startOfMinute { }
 
   function startOfMonth(date: Date | number): Date
-  namespace startOfMonth {}
+  namespace startOfMonth { }
 
   function startOfQuarter(date: Date | number): Date
-  namespace startOfQuarter {}
+  namespace startOfQuarter { }
 
   function startOfSecond(date: Date | number): Date
-  namespace startOfSecond {}
+  namespace startOfSecond { }
 
   function startOfToday(): Date
-  namespace startOfToday {}
+  namespace startOfToday { }
 
   function startOfTomorrow(): Date
-  namespace startOfTomorrow {}
+  namespace startOfTomorrow { }
 
   function startOfWeek(
     date: Date | number,
@@ -10904,7 +10902,7 @@ declare module 'date-fns/esm' {
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
     }
   ): Date
-  namespace startOfWeek {}
+  namespace startOfWeek { }
 
   function startOfWeekYear(
     date: Date | number,
@@ -10914,61 +10912,61 @@ declare module 'date-fns/esm' {
       firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
     }
   ): Date
-  namespace startOfWeekYear {}
+  namespace startOfWeekYear { }
 
   function startOfYear(date: Date | number): Date
-  namespace startOfYear {}
+  namespace startOfYear { }
 
   function startOfYesterday(): Date
-  namespace startOfYesterday {}
+  namespace startOfYesterday { }
 
   function sub(date: Date | number, duration: Duration): Date
-  namespace sub {}
+  namespace sub { }
 
   function subBusinessDays(date: Date | number, amount: number): Date
-  namespace subBusinessDays {}
+  namespace subBusinessDays { }
 
   function subDays(date: Date | number, amount: number): Date
-  namespace subDays {}
+  namespace subDays { }
 
   function subHours(date: Date | number, amount: number): Date
-  namespace subHours {}
+  namespace subHours { }
 
   function subISOWeekYears(date: Date | number, amount: number): Date
-  namespace subISOWeekYears {}
+  namespace subISOWeekYears { }
 
   function subMilliseconds(date: Date | number, amount: number): Date
-  namespace subMilliseconds {}
+  namespace subMilliseconds { }
 
   function subMinutes(date: Date | number, amount: number): Date
-  namespace subMinutes {}
+  namespace subMinutes { }
 
   function subMonths(date: Date | number, amount: number): Date
-  namespace subMonths {}
+  namespace subMonths { }
 
   function subQuarters(date: Date | number, amount: number): Date
-  namespace subQuarters {}
+  namespace subQuarters { }
 
   function subSeconds(date: Date | number, amount: number): Date
-  namespace subSeconds {}
+  namespace subSeconds { }
 
   function subWeeks(date: Date | number, amount: number): Date
-  namespace subWeeks {}
+  namespace subWeeks { }
 
   function subYears(date: Date | number, amount: number): Date
-  namespace subYears {}
+  namespace subYears { }
 
   function toDate(argument: Date | number): Date
-  namespace toDate {}
+  namespace toDate { }
 
   function weeksToDays(weeks: number): number
-  namespace weeksToDays {}
+  namespace weeksToDays { }
 
   function yearsToMonths(years: number): number
-  namespace yearsToMonths {}
+  namespace yearsToMonths { }
 
   function yearsToQuarters(years: number): number
-  namespace yearsToQuarters {}
+  namespace yearsToQuarters { }
 
   const daysInWeek: number
 
@@ -14595,44 +14593,54 @@ declare module 'date-fns/esm/yearsToQuarters/index.js' {
 // ECMAScript Module FP Functions
 
 declare module 'date-fns/esm/fp' {
+  import {
+    CurriedFn1,
+    CurriedFn2,
+    CurriedFn3,
+    CurriedFn4,
+    Day,
+    Duration,
+    Interval,
+    Locale,
+  } from 'date-fns'
   const add: CurriedFn2<Duration, Date | number, Date>
-  namespace add {}
+  namespace add { }
 
   const addBusinessDays: CurriedFn2<number, Date | number, Date>
-  namespace addBusinessDays {}
+  namespace addBusinessDays { }
 
   const addDays: CurriedFn2<number, Date | number, Date>
-  namespace addDays {}
+  namespace addDays { }
 
   const addHours: CurriedFn2<number, Date | number, Date>
-  namespace addHours {}
+  namespace addHours { }
 
   const addISOWeekYears: CurriedFn2<number, Date | number, Date>
-  namespace addISOWeekYears {}
+  namespace addISOWeekYears { }
 
   const addMilliseconds: CurriedFn2<number, Date | number, Date>
-  namespace addMilliseconds {}
+  namespace addMilliseconds { }
 
   const addMinutes: CurriedFn2<number, Date | number, Date>
-  namespace addMinutes {}
+  namespace addMinutes { }
 
   const addMonths: CurriedFn2<number, Date | number, Date>
-  namespace addMonths {}
+  namespace addMonths { }
 
   const addQuarters: CurriedFn2<number, Date | number, Date>
-  namespace addQuarters {}
+  namespace addQuarters { }
 
   const addSeconds: CurriedFn2<number, Date | number, Date>
-  namespace addSeconds {}
+  namespace addSeconds { }
 
   const addWeeks: CurriedFn2<number, Date | number, Date>
-  namespace addWeeks {}
+  namespace addWeeks { }
 
   const addYears: CurriedFn2<number, Date | number, Date>
-  namespace addYears {}
+  namespace addYears { }
 
   const areIntervalsOverlapping: CurriedFn2<Interval, Interval, boolean>
-  namespace areIntervalsOverlapping {}
+  namespace areIntervalsOverlapping { }
 
   const areIntervalsOverlappingWithOptions: CurriedFn3<
     {
@@ -14642,82 +14650,82 @@ declare module 'date-fns/esm/fp' {
     Interval,
     boolean
   >
-  namespace areIntervalsOverlappingWithOptions {}
+  namespace areIntervalsOverlappingWithOptions { }
 
   const clamp: CurriedFn2<Interval, Date | number, Date>
-  namespace clamp {}
+  namespace clamp { }
 
   const closestIndexTo: CurriedFn2<
     (Date | number)[],
     Date | number,
     number | undefined
   >
-  namespace closestIndexTo {}
+  namespace closestIndexTo { }
 
   const closestTo: CurriedFn2<
     (Date | number)[],
     Date | number,
     Date | undefined
   >
-  namespace closestTo {}
+  namespace closestTo { }
 
   const compareAsc: CurriedFn2<Date | number, Date | number, number>
-  namespace compareAsc {}
+  namespace compareAsc { }
 
   const compareDesc: CurriedFn2<Date | number, Date | number, number>
-  namespace compareDesc {}
+  namespace compareDesc { }
 
   const daysToWeeks: CurriedFn1<number, number>
-  namespace daysToWeeks {}
+  namespace daysToWeeks { }
 
   const differenceInBusinessDays: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInBusinessDays {}
+  namespace differenceInBusinessDays { }
 
   const differenceInCalendarDays: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInCalendarDays {}
+  namespace differenceInCalendarDays { }
 
   const differenceInCalendarISOWeeks: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInCalendarISOWeeks {}
+  namespace differenceInCalendarISOWeeks { }
 
   const differenceInCalendarISOWeekYears: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInCalendarISOWeekYears {}
+  namespace differenceInCalendarISOWeekYears { }
 
   const differenceInCalendarMonths: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInCalendarMonths {}
+  namespace differenceInCalendarMonths { }
 
   const differenceInCalendarQuarters: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInCalendarQuarters {}
+  namespace differenceInCalendarQuarters { }
 
   const differenceInCalendarWeeks: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInCalendarWeeks {}
+  namespace differenceInCalendarWeeks { }
 
   const differenceInCalendarWeeksWithOptions: CurriedFn3<
     {
@@ -14728,20 +14736,20 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     number
   >
-  namespace differenceInCalendarWeeksWithOptions {}
+  namespace differenceInCalendarWeeksWithOptions { }
 
   const differenceInCalendarYears: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInCalendarYears {}
+  namespace differenceInCalendarYears { }
 
   const differenceInDays: CurriedFn2<Date | number, Date | number, number>
-  namespace differenceInDays {}
+  namespace differenceInDays { }
 
   const differenceInHours: CurriedFn2<Date | number, Date | number, number>
-  namespace differenceInHours {}
+  namespace differenceInHours { }
 
   const differenceInHoursWithOptions: CurriedFn3<
     {
@@ -14751,24 +14759,24 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     number
   >
-  namespace differenceInHoursWithOptions {}
+  namespace differenceInHoursWithOptions { }
 
   const differenceInISOWeekYears: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInISOWeekYears {}
+  namespace differenceInISOWeekYears { }
 
   const differenceInMilliseconds: CurriedFn2<
     Date | number,
     Date | number,
     number
   >
-  namespace differenceInMilliseconds {}
+  namespace differenceInMilliseconds { }
 
   const differenceInMinutes: CurriedFn2<Date | number, Date | number, number>
-  namespace differenceInMinutes {}
+  namespace differenceInMinutes { }
 
   const differenceInMinutesWithOptions: CurriedFn3<
     {
@@ -14778,13 +14786,13 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     number
   >
-  namespace differenceInMinutesWithOptions {}
+  namespace differenceInMinutesWithOptions { }
 
   const differenceInMonths: CurriedFn2<Date | number, Date | number, number>
-  namespace differenceInMonths {}
+  namespace differenceInMonths { }
 
   const differenceInQuarters: CurriedFn2<Date | number, Date | number, number>
-  namespace differenceInQuarters {}
+  namespace differenceInQuarters { }
 
   const differenceInQuartersWithOptions: CurriedFn3<
     {
@@ -14794,10 +14802,10 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     number
   >
-  namespace differenceInQuartersWithOptions {}
+  namespace differenceInQuartersWithOptions { }
 
   const differenceInSeconds: CurriedFn2<Date | number, Date | number, number>
-  namespace differenceInSeconds {}
+  namespace differenceInSeconds { }
 
   const differenceInSecondsWithOptions: CurriedFn3<
     {
@@ -14807,10 +14815,10 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     number
   >
-  namespace differenceInSecondsWithOptions {}
+  namespace differenceInSecondsWithOptions { }
 
   const differenceInWeeks: CurriedFn2<Date | number, Date | number, number>
-  namespace differenceInWeeks {}
+  namespace differenceInWeeks { }
 
   const differenceInWeeksWithOptions: CurriedFn3<
     {
@@ -14820,13 +14828,13 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     number
   >
-  namespace differenceInWeeksWithOptions {}
+  namespace differenceInWeeksWithOptions { }
 
   const differenceInYears: CurriedFn2<Date | number, Date | number, number>
-  namespace differenceInYears {}
+  namespace differenceInYears { }
 
   const eachDayOfInterval: CurriedFn1<Interval, Date[]>
-  namespace eachDayOfInterval {}
+  namespace eachDayOfInterval { }
 
   const eachDayOfIntervalWithOptions: CurriedFn2<
     {
@@ -14835,10 +14843,10 @@ declare module 'date-fns/esm/fp' {
     Interval,
     Date[]
   >
-  namespace eachDayOfIntervalWithOptions {}
+  namespace eachDayOfIntervalWithOptions { }
 
   const eachHourOfInterval: CurriedFn1<Interval, Date[]>
-  namespace eachHourOfInterval {}
+  namespace eachHourOfInterval { }
 
   const eachHourOfIntervalWithOptions: CurriedFn2<
     {
@@ -14847,10 +14855,10 @@ declare module 'date-fns/esm/fp' {
     Interval,
     Date[]
   >
-  namespace eachHourOfIntervalWithOptions {}
+  namespace eachHourOfIntervalWithOptions { }
 
   const eachMinuteOfInterval: CurriedFn1<Interval, Date[]>
-  namespace eachMinuteOfInterval {}
+  namespace eachMinuteOfInterval { }
 
   const eachMinuteOfIntervalWithOptions: CurriedFn2<
     {
@@ -14859,25 +14867,25 @@ declare module 'date-fns/esm/fp' {
     Interval,
     Date[]
   >
-  namespace eachMinuteOfIntervalWithOptions {}
+  namespace eachMinuteOfIntervalWithOptions { }
 
   const eachMonthOfInterval: CurriedFn1<Interval, Date[]>
-  namespace eachMonthOfInterval {}
+  namespace eachMonthOfInterval { }
 
   const eachQuarterOfInterval: CurriedFn1<Interval, Date[]>
-  namespace eachQuarterOfInterval {}
+  namespace eachQuarterOfInterval { }
 
   const eachWeekendOfInterval: CurriedFn1<Interval, Date[]>
-  namespace eachWeekendOfInterval {}
+  namespace eachWeekendOfInterval { }
 
   const eachWeekendOfMonth: CurriedFn1<Date | number, Date[]>
-  namespace eachWeekendOfMonth {}
+  namespace eachWeekendOfMonth { }
 
   const eachWeekendOfYear: CurriedFn1<Date | number, Date[]>
-  namespace eachWeekendOfYear {}
+  namespace eachWeekendOfYear { }
 
   const eachWeekOfInterval: CurriedFn1<Interval, Date[]>
-  namespace eachWeekOfInterval {}
+  namespace eachWeekOfInterval { }
 
   const eachWeekOfIntervalWithOptions: CurriedFn2<
     {
@@ -14887,16 +14895,16 @@ declare module 'date-fns/esm/fp' {
     Interval,
     Date[]
   >
-  namespace eachWeekOfIntervalWithOptions {}
+  namespace eachWeekOfIntervalWithOptions { }
 
   const eachYearOfInterval: CurriedFn1<Interval, Date[]>
-  namespace eachYearOfInterval {}
+  namespace eachYearOfInterval { }
 
   const endOfDay: CurriedFn1<Date | number, Date>
-  namespace endOfDay {}
+  namespace endOfDay { }
 
   const endOfDecade: CurriedFn1<Date | number, Date>
-  namespace endOfDecade {}
+  namespace endOfDecade { }
 
   const endOfDecadeWithOptions: CurriedFn2<
     {
@@ -14905,31 +14913,31 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     Date
   >
-  namespace endOfDecadeWithOptions {}
+  namespace endOfDecadeWithOptions { }
 
   const endOfHour: CurriedFn1<Date | number, Date>
-  namespace endOfHour {}
+  namespace endOfHour { }
 
   const endOfISOWeek: CurriedFn1<Date | number, Date>
-  namespace endOfISOWeek {}
+  namespace endOfISOWeek { }
 
   const endOfISOWeekYear: CurriedFn1<Date | number, Date>
-  namespace endOfISOWeekYear {}
+  namespace endOfISOWeekYear { }
 
   const endOfMinute: CurriedFn1<Date | number, Date>
-  namespace endOfMinute {}
+  namespace endOfMinute { }
 
   const endOfMonth: CurriedFn1<Date | number, Date>
-  namespace endOfMonth {}
+  namespace endOfMonth { }
 
   const endOfQuarter: CurriedFn1<Date | number, Date>
-  namespace endOfQuarter {}
+  namespace endOfQuarter { }
 
   const endOfSecond: CurriedFn1<Date | number, Date>
-  namespace endOfSecond {}
+  namespace endOfSecond { }
 
   const endOfWeek: CurriedFn1<Date | number, Date>
-  namespace endOfWeek {}
+  namespace endOfWeek { }
 
   const endOfWeekWithOptions: CurriedFn2<
     {
@@ -14939,19 +14947,19 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     Date
   >
-  namespace endOfWeekWithOptions {}
+  namespace endOfWeekWithOptions { }
 
   const endOfYear: CurriedFn1<Date | number, Date>
-  namespace endOfYear {}
+  namespace endOfYear { }
 
   const format: CurriedFn2<string, Date | number, string>
-  namespace format {}
+  namespace format { }
 
   const formatDistance: CurriedFn2<Date | number, Date | number, string>
-  namespace formatDistance {}
+  namespace formatDistance { }
 
   const formatDistanceStrict: CurriedFn2<Date | number, Date | number, string>
-  namespace formatDistanceStrict {}
+  namespace formatDistanceStrict { }
 
   const formatDistanceStrictWithOptions: CurriedFn3<
     {
@@ -14964,7 +14972,7 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     string
   >
-  namespace formatDistanceStrictWithOptions {}
+  namespace formatDistanceStrictWithOptions { }
 
   const formatDistanceWithOptions: CurriedFn3<
     {
@@ -14976,10 +14984,10 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     string
   >
-  namespace formatDistanceWithOptions {}
+  namespace formatDistanceWithOptions { }
 
   const formatDuration: CurriedFn1<Duration, string>
-  namespace formatDuration {}
+  namespace formatDuration { }
 
   const formatDurationWithOptions: CurriedFn2<
     {
@@ -14991,13 +14999,13 @@ declare module 'date-fns/esm/fp' {
     Duration,
     string
   >
-  namespace formatDurationWithOptions {}
+  namespace formatDurationWithOptions { }
 
   const formatISO: CurriedFn1<Date | number, string>
-  namespace formatISO {}
+  namespace formatISO { }
 
   const formatISO9075: CurriedFn1<Date | number, string>
-  namespace formatISO9075 {}
+  namespace formatISO9075 { }
 
   const formatISO9075WithOptions: CurriedFn2<
     {
@@ -15007,10 +15015,10 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     string
   >
-  namespace formatISO9075WithOptions {}
+  namespace formatISO9075WithOptions { }
 
   const formatISODuration: CurriedFn1<Duration, string>
-  namespace formatISODuration {}
+  namespace formatISODuration { }
 
   const formatISOWithOptions: CurriedFn2<
     {
@@ -15020,10 +15028,10 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     string
   >
-  namespace formatISOWithOptions {}
+  namespace formatISOWithOptions { }
 
   const formatRelative: CurriedFn2<Date | number, Date | number, string>
-  namespace formatRelative {}
+  namespace formatRelative { }
 
   const formatRelativeWithOptions: CurriedFn3<
     {
@@ -15034,10 +15042,10 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     string
   >
-  namespace formatRelativeWithOptions {}
+  namespace formatRelativeWithOptions { }
 
   const formatRFC3339: CurriedFn1<Date | number, string>
-  namespace formatRFC3339 {}
+  namespace formatRFC3339 { }
 
   const formatRFC3339WithOptions: CurriedFn2<
     {
@@ -15046,10 +15054,10 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     string
   >
-  namespace formatRFC3339WithOptions {}
+  namespace formatRFC3339WithOptions { }
 
   const formatRFC7231: CurriedFn1<Date | number, string>
-  namespace formatRFC7231 {}
+  namespace formatRFC7231 { }
 
   const formatWithOptions: CurriedFn3<
     {
@@ -15063,73 +15071,73 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     string
   >
-  namespace formatWithOptions {}
+  namespace formatWithOptions { }
 
   const fromUnixTime: CurriedFn1<number, Date>
-  namespace fromUnixTime {}
+  namespace fromUnixTime { }
 
   const getDate: CurriedFn1<Date | number, number>
-  namespace getDate {}
+  namespace getDate { }
 
   const getDay: CurriedFn1<Date | number, 0 | 1 | 2 | 3 | 4 | 5 | 6>
-  namespace getDay {}
+  namespace getDay { }
 
   const getDayOfYear: CurriedFn1<Date | number, number>
-  namespace getDayOfYear {}
+  namespace getDayOfYear { }
 
   const getDaysInMonth: CurriedFn1<Date | number, number>
-  namespace getDaysInMonth {}
+  namespace getDaysInMonth { }
 
   const getDaysInYear: CurriedFn1<Date | number, number>
-  namespace getDaysInYear {}
+  namespace getDaysInYear { }
 
   const getDecade: CurriedFn1<Date | number, number>
-  namespace getDecade {}
+  namespace getDecade { }
 
   const getHours: CurriedFn1<Date | number, number>
-  namespace getHours {}
+  namespace getHours { }
 
   const getISODay: CurriedFn1<Date | number, number>
-  namespace getISODay {}
+  namespace getISODay { }
 
   const getISOWeek: CurriedFn1<Date | number, number>
-  namespace getISOWeek {}
+  namespace getISOWeek { }
 
   const getISOWeeksInYear: CurriedFn1<Date | number, number>
-  namespace getISOWeeksInYear {}
+  namespace getISOWeeksInYear { }
 
   const getISOWeekYear: CurriedFn1<Date | number, number>
-  namespace getISOWeekYear {}
+  namespace getISOWeekYear { }
 
   const getMilliseconds: CurriedFn1<Date | number, number>
-  namespace getMilliseconds {}
+  namespace getMilliseconds { }
 
   const getMinutes: CurriedFn1<Date | number, number>
-  namespace getMinutes {}
+  namespace getMinutes { }
 
   const getMonth: CurriedFn1<Date | number, number>
-  namespace getMonth {}
+  namespace getMonth { }
 
   const getOverlappingDaysInIntervals: CurriedFn2<Interval, Interval, number>
-  namespace getOverlappingDaysInIntervals {}
+  namespace getOverlappingDaysInIntervals { }
 
   const getQuarter: CurriedFn1<Date | number, number>
-  namespace getQuarter {}
+  namespace getQuarter { }
 
   const getSeconds: CurriedFn1<Date | number, number>
-  namespace getSeconds {}
+  namespace getSeconds { }
 
   const getTime: CurriedFn1<Date | number, number>
-  namespace getTime {}
+  namespace getTime { }
 
   const getUnixTime: CurriedFn1<Date | number, number>
-  namespace getUnixTime {}
+  namespace getUnixTime { }
 
   const getWeek: CurriedFn1<Date | number, number>
-  namespace getWeek {}
+  namespace getWeek { }
 
   const getWeekOfMonth: CurriedFn1<Date | number, number>
-  namespace getWeekOfMonth {}
+  namespace getWeekOfMonth { }
 
   const getWeekOfMonthWithOptions: CurriedFn2<
     {
@@ -15139,10 +15147,10 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     number
   >
-  namespace getWeekOfMonthWithOptions {}
+  namespace getWeekOfMonthWithOptions { }
 
   const getWeeksInMonth: CurriedFn1<Date | number, number>
-  namespace getWeeksInMonth {}
+  namespace getWeeksInMonth { }
 
   const getWeeksInMonthWithOptions: CurriedFn2<
     {
@@ -15152,7 +15160,7 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     number
   >
-  namespace getWeeksInMonthWithOptions {}
+  namespace getWeeksInMonthWithOptions { }
 
   const getWeekWithOptions: CurriedFn2<
     {
@@ -15163,10 +15171,10 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     number
   >
-  namespace getWeekWithOptions {}
+  namespace getWeekWithOptions { }
 
   const getWeekYear: CurriedFn1<Date | number, number>
-  namespace getWeekYear {}
+  namespace getWeekYear { }
 
   const getWeekYearWithOptions: CurriedFn2<
     {
@@ -15177,22 +15185,22 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     number
   >
-  namespace getWeekYearWithOptions {}
+  namespace getWeekYearWithOptions { }
 
   const getYear: CurriedFn1<Date | number, number>
-  namespace getYear {}
+  namespace getYear { }
 
   const hoursToMilliseconds: CurriedFn1<number, number>
-  namespace hoursToMilliseconds {}
+  namespace hoursToMilliseconds { }
 
   const hoursToMinutes: CurriedFn1<number, number>
-  namespace hoursToMinutes {}
+  namespace hoursToMinutes { }
 
   const hoursToSeconds: CurriedFn1<number, number>
-  namespace hoursToSeconds {}
+  namespace hoursToSeconds { }
 
   const intervalToDuration: CurriedFn1<Interval, Duration>
-  namespace intervalToDuration {}
+  namespace intervalToDuration { }
 
   const intlFormat: CurriedFn3<
     {
@@ -15216,10 +15224,10 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     string
   >
-  namespace intlFormat {}
+  namespace intlFormat { }
 
   const intlFormatDistance: CurriedFn2<Date | number, Date | number, string>
-  namespace intlFormatDistance {}
+  namespace intlFormatDistance { }
 
   const intlFormatDistanceWithOptions: CurriedFn3<
     {
@@ -15233,37 +15241,37 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     string
   >
-  namespace intlFormatDistanceWithOptions {}
+  namespace intlFormatDistanceWithOptions { }
 
   const isAfter: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isAfter {}
+  namespace isAfter { }
 
   const isBefore: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isBefore {}
+  namespace isBefore { }
 
   const isDate: CurriedFn1<any, boolean>
-  namespace isDate {}
+  namespace isDate { }
 
   const isEqual: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isEqual {}
+  namespace isEqual { }
 
   const isExists: CurriedFn3<number, number, number, boolean>
-  namespace isExists {}
+  namespace isExists { }
 
   const isFirstDayOfMonth: CurriedFn1<Date | number, boolean>
-  namespace isFirstDayOfMonth {}
+  namespace isFirstDayOfMonth { }
 
   const isFriday: CurriedFn1<Date | number, boolean>
-  namespace isFriday {}
+  namespace isFriday { }
 
   const isLastDayOfMonth: CurriedFn1<Date | number, boolean>
-  namespace isLastDayOfMonth {}
+  namespace isLastDayOfMonth { }
 
   const isLeapYear: CurriedFn1<Date | number, boolean>
-  namespace isLeapYear {}
+  namespace isLeapYear { }
 
   const isMatch: CurriedFn2<string, string, boolean>
-  namespace isMatch {}
+  namespace isMatch { }
 
   const isMatchWithOptions: CurriedFn3<
     {
@@ -15277,37 +15285,37 @@ declare module 'date-fns/esm/fp' {
     string,
     boolean
   >
-  namespace isMatchWithOptions {}
+  namespace isMatchWithOptions { }
 
   const isMonday: CurriedFn1<Date | number, boolean>
-  namespace isMonday {}
+  namespace isMonday { }
 
   const isSameDay: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameDay {}
+  namespace isSameDay { }
 
   const isSameHour: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameHour {}
+  namespace isSameHour { }
 
   const isSameISOWeek: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameISOWeek {}
+  namespace isSameISOWeek { }
 
   const isSameISOWeekYear: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameISOWeekYear {}
+  namespace isSameISOWeekYear { }
 
   const isSameMinute: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameMinute {}
+  namespace isSameMinute { }
 
   const isSameMonth: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameMonth {}
+  namespace isSameMonth { }
 
   const isSameQuarter: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameQuarter {}
+  namespace isSameQuarter { }
 
   const isSameSecond: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameSecond {}
+  namespace isSameSecond { }
 
   const isSameWeek: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameWeek {}
+  namespace isSameWeek { }
 
   const isSameWeekWithOptions: CurriedFn3<
     {
@@ -15318,49 +15326,49 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     boolean
   >
-  namespace isSameWeekWithOptions {}
+  namespace isSameWeekWithOptions { }
 
   const isSameYear: CurriedFn2<Date | number, Date | number, boolean>
-  namespace isSameYear {}
+  namespace isSameYear { }
 
   const isSaturday: CurriedFn1<Date | number, boolean>
-  namespace isSaturday {}
+  namespace isSaturday { }
 
   const isSunday: CurriedFn1<Date | number, boolean>
-  namespace isSunday {}
+  namespace isSunday { }
 
   const isThursday: CurriedFn1<Date | number, boolean>
-  namespace isThursday {}
+  namespace isThursday { }
 
   const isTuesday: CurriedFn1<Date | number, boolean>
-  namespace isTuesday {}
+  namespace isTuesday { }
 
   const isValid: CurriedFn1<any, boolean>
-  namespace isValid {}
+  namespace isValid { }
 
   const isWednesday: CurriedFn1<Date | number, boolean>
-  namespace isWednesday {}
+  namespace isWednesday { }
 
   const isWeekend: CurriedFn1<Date | number, boolean>
-  namespace isWeekend {}
+  namespace isWeekend { }
 
   const isWithinInterval: CurriedFn2<Interval, Date | number, boolean>
-  namespace isWithinInterval {}
+  namespace isWithinInterval { }
 
   const lastDayOfDecade: CurriedFn1<Date | number, Date>
-  namespace lastDayOfDecade {}
+  namespace lastDayOfDecade { }
 
   const lastDayOfISOWeek: CurriedFn1<Date | number, Date>
-  namespace lastDayOfISOWeek {}
+  namespace lastDayOfISOWeek { }
 
   const lastDayOfISOWeekYear: CurriedFn1<Date | number, Date>
-  namespace lastDayOfISOWeekYear {}
+  namespace lastDayOfISOWeekYear { }
 
   const lastDayOfMonth: CurriedFn1<Date | number, Date>
-  namespace lastDayOfMonth {}
+  namespace lastDayOfMonth { }
 
   const lastDayOfQuarter: CurriedFn1<Date | number, Date>
-  namespace lastDayOfQuarter {}
+  namespace lastDayOfQuarter { }
 
   const lastDayOfQuarterWithOptions: CurriedFn2<
     {
@@ -15369,10 +15377,10 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     Date
   >
-  namespace lastDayOfQuarterWithOptions {}
+  namespace lastDayOfQuarterWithOptions { }
 
   const lastDayOfWeek: CurriedFn1<Date | number, Date>
-  namespace lastDayOfWeek {}
+  namespace lastDayOfWeek { }
 
   const lastDayOfWeekWithOptions: CurriedFn2<
     {
@@ -15382,76 +15390,76 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     Date
   >
-  namespace lastDayOfWeekWithOptions {}
+  namespace lastDayOfWeekWithOptions { }
 
   const lastDayOfYear: CurriedFn1<Date | number, Date>
-  namespace lastDayOfYear {}
+  namespace lastDayOfYear { }
 
   const lightFormat: CurriedFn2<string, Date | number, string>
-  namespace lightFormat {}
+  namespace lightFormat { }
 
   const max: CurriedFn1<(Date | number)[], Date>
-  namespace max {}
+  namespace max { }
 
   const milliseconds: CurriedFn1<Duration, number>
-  namespace milliseconds {}
+  namespace milliseconds { }
 
   const millisecondsToHours: CurriedFn1<number, number>
-  namespace millisecondsToHours {}
+  namespace millisecondsToHours { }
 
   const millisecondsToMinutes: CurriedFn1<number, number>
-  namespace millisecondsToMinutes {}
+  namespace millisecondsToMinutes { }
 
   const millisecondsToSeconds: CurriedFn1<number, number>
-  namespace millisecondsToSeconds {}
+  namespace millisecondsToSeconds { }
 
   const min: CurriedFn1<(Date | number)[], Date>
-  namespace min {}
+  namespace min { }
 
   const minutesToHours: CurriedFn1<number, number>
-  namespace minutesToHours {}
+  namespace minutesToHours { }
 
   const minutesToMilliseconds: CurriedFn1<number, number>
-  namespace minutesToMilliseconds {}
+  namespace minutesToMilliseconds { }
 
   const minutesToSeconds: CurriedFn1<number, number>
-  namespace minutesToSeconds {}
+  namespace minutesToSeconds { }
 
   const monthsToQuarters: CurriedFn1<number, number>
-  namespace monthsToQuarters {}
+  namespace monthsToQuarters { }
 
   const monthsToYears: CurriedFn1<number, number>
-  namespace monthsToYears {}
+  namespace monthsToYears { }
 
   const nextDay: CurriedFn2<Day, Date | number, Date>
-  namespace nextDay {}
+  namespace nextDay { }
 
   const nextFriday: CurriedFn1<Date | number, Date>
-  namespace nextFriday {}
+  namespace nextFriday { }
 
   const nextMonday: CurriedFn1<Date | number, Date>
-  namespace nextMonday {}
+  namespace nextMonday { }
 
   const nextSaturday: CurriedFn1<Date | number, Date>
-  namespace nextSaturday {}
+  namespace nextSaturday { }
 
   const nextSunday: CurriedFn1<Date | number, Date>
-  namespace nextSunday {}
+  namespace nextSunday { }
 
   const nextThursday: CurriedFn1<Date | number, Date>
-  namespace nextThursday {}
+  namespace nextThursday { }
 
   const nextTuesday: CurriedFn1<Date | number, Date>
-  namespace nextTuesday {}
+  namespace nextTuesday { }
 
   const nextWednesday: CurriedFn1<Date | number, Date>
-  namespace nextWednesday {}
+  namespace nextWednesday { }
 
   const parse: CurriedFn3<Date | number, string, string, Date>
-  namespace parse {}
+  namespace parse { }
 
   const parseISO: CurriedFn1<string, Date>
-  namespace parseISO {}
+  namespace parseISO { }
 
   const parseISOWithOptions: CurriedFn2<
     {
@@ -15460,10 +15468,10 @@ declare module 'date-fns/esm/fp' {
     string,
     Date
   >
-  namespace parseISOWithOptions {}
+  namespace parseISOWithOptions { }
 
   const parseJSON: CurriedFn1<string | number | Date, Date>
-  namespace parseJSON {}
+  namespace parseJSON { }
 
   const parseWithOptions: CurriedFn4<
     {
@@ -15478,40 +15486,40 @@ declare module 'date-fns/esm/fp' {
     string,
     Date
   >
-  namespace parseWithOptions {}
+  namespace parseWithOptions { }
 
   const previousDay: CurriedFn2<number, Date | number, Date>
-  namespace previousDay {}
+  namespace previousDay { }
 
   const previousFriday: CurriedFn1<Date | number, Date>
-  namespace previousFriday {}
+  namespace previousFriday { }
 
   const previousMonday: CurriedFn1<Date | number, Date>
-  namespace previousMonday {}
+  namespace previousMonday { }
 
   const previousSaturday: CurriedFn1<Date | number, Date>
-  namespace previousSaturday {}
+  namespace previousSaturday { }
 
   const previousSunday: CurriedFn1<Date | number, Date>
-  namespace previousSunday {}
+  namespace previousSunday { }
 
   const previousThursday: CurriedFn1<Date | number, Date>
-  namespace previousThursday {}
+  namespace previousThursday { }
 
   const previousTuesday: CurriedFn1<Date | number, Date>
-  namespace previousTuesday {}
+  namespace previousTuesday { }
 
   const previousWednesday: CurriedFn1<Date | number, Date>
-  namespace previousWednesday {}
+  namespace previousWednesday { }
 
   const quartersToMonths: CurriedFn1<number, number>
-  namespace quartersToMonths {}
+  namespace quartersToMonths { }
 
   const quartersToYears: CurriedFn1<number, number>
-  namespace quartersToYears {}
+  namespace quartersToYears { }
 
   const roundToNearestMinutes: CurriedFn1<Date | number, Date>
-  namespace roundToNearestMinutes {}
+  namespace roundToNearestMinutes { }
 
   const roundToNearestMinutesWithOptions: CurriedFn2<
     {
@@ -15521,16 +15529,16 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     Date
   >
-  namespace roundToNearestMinutesWithOptions {}
+  namespace roundToNearestMinutesWithOptions { }
 
   const secondsToHours: CurriedFn1<number, number>
-  namespace secondsToHours {}
+  namespace secondsToHours { }
 
   const secondsToMilliseconds: CurriedFn1<number, number>
-  namespace secondsToMilliseconds {}
+  namespace secondsToMilliseconds { }
 
   const secondsToMinutes: CurriedFn1<number, number>
-  namespace secondsToMinutes {}
+  namespace secondsToMinutes { }
 
   const set: CurriedFn2<
     {
@@ -15545,16 +15553,16 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     Date
   >
-  namespace set {}
+  namespace set { }
 
   const setDate: CurriedFn2<number, Date | number, Date>
-  namespace setDate {}
+  namespace setDate { }
 
   const setDay: CurriedFn2<number, Date | number, Date>
-  namespace setDay {}
+  namespace setDay { }
 
   const setDayOfYear: CurriedFn2<number, Date | number, Date>
-  namespace setDayOfYear {}
+  namespace setDayOfYear { }
 
   const setDayWithOptions: CurriedFn3<
     {
@@ -15565,37 +15573,37 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     Date
   >
-  namespace setDayWithOptions {}
+  namespace setDayWithOptions { }
 
   const setHours: CurriedFn2<number, Date | number, Date>
-  namespace setHours {}
+  namespace setHours { }
 
   const setISODay: CurriedFn2<number, Date | number, Date>
-  namespace setISODay {}
+  namespace setISODay { }
 
   const setISOWeek: CurriedFn2<number, Date | number, Date>
-  namespace setISOWeek {}
+  namespace setISOWeek { }
 
   const setISOWeekYear: CurriedFn2<number, Date | number, Date>
-  namespace setISOWeekYear {}
+  namespace setISOWeekYear { }
 
   const setMilliseconds: CurriedFn2<number, Date | number, Date>
-  namespace setMilliseconds {}
+  namespace setMilliseconds { }
 
   const setMinutes: CurriedFn2<number, Date | number, Date>
-  namespace setMinutes {}
+  namespace setMinutes { }
 
   const setMonth: CurriedFn2<number, Date | number, Date>
-  namespace setMonth {}
+  namespace setMonth { }
 
   const setQuarter: CurriedFn2<number, Date | number, Date>
-  namespace setQuarter {}
+  namespace setQuarter { }
 
   const setSeconds: CurriedFn2<number, Date | number, Date>
-  namespace setSeconds {}
+  namespace setSeconds { }
 
   const setWeek: CurriedFn2<number, Date | number, Date>
-  namespace setWeek {}
+  namespace setWeek { }
 
   const setWeekWithOptions: CurriedFn3<
     {
@@ -15607,10 +15615,10 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     Date
   >
-  namespace setWeekWithOptions {}
+  namespace setWeekWithOptions { }
 
   const setWeekYear: CurriedFn2<number, Date | number, Date>
-  namespace setWeekYear {}
+  namespace setWeekYear { }
 
   const setWeekYearWithOptions: CurriedFn3<
     {
@@ -15622,40 +15630,40 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     Date
   >
-  namespace setWeekYearWithOptions {}
+  namespace setWeekYearWithOptions { }
 
   const setYear: CurriedFn2<number, Date | number, Date>
-  namespace setYear {}
+  namespace setYear { }
 
   const startOfDay: CurriedFn1<Date | number, Date>
-  namespace startOfDay {}
+  namespace startOfDay { }
 
   const startOfDecade: CurriedFn1<Date | number, Date>
-  namespace startOfDecade {}
+  namespace startOfDecade { }
 
   const startOfHour: CurriedFn1<Date | number, Date>
-  namespace startOfHour {}
+  namespace startOfHour { }
 
   const startOfISOWeek: CurriedFn1<Date | number, Date>
-  namespace startOfISOWeek {}
+  namespace startOfISOWeek { }
 
   const startOfISOWeekYear: CurriedFn1<Date | number, Date>
-  namespace startOfISOWeekYear {}
+  namespace startOfISOWeekYear { }
 
   const startOfMinute: CurriedFn1<Date | number, Date>
-  namespace startOfMinute {}
+  namespace startOfMinute { }
 
   const startOfMonth: CurriedFn1<Date | number, Date>
-  namespace startOfMonth {}
+  namespace startOfMonth { }
 
   const startOfQuarter: CurriedFn1<Date | number, Date>
-  namespace startOfQuarter {}
+  namespace startOfQuarter { }
 
   const startOfSecond: CurriedFn1<Date | number, Date>
-  namespace startOfSecond {}
+  namespace startOfSecond { }
 
   const startOfWeek: CurriedFn1<Date | number, Date>
-  namespace startOfWeek {}
+  namespace startOfWeek { }
 
   const startOfWeekWithOptions: CurriedFn2<
     {
@@ -15665,10 +15673,10 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     Date
   >
-  namespace startOfWeekWithOptions {}
+  namespace startOfWeekWithOptions { }
 
   const startOfWeekYear: CurriedFn1<Date | number, Date>
-  namespace startOfWeekYear {}
+  namespace startOfWeekYear { }
 
   const startOfWeekYearWithOptions: CurriedFn2<
     {
@@ -15679,58 +15687,58 @@ declare module 'date-fns/esm/fp' {
     Date | number,
     Date
   >
-  namespace startOfWeekYearWithOptions {}
+  namespace startOfWeekYearWithOptions { }
 
   const startOfYear: CurriedFn1<Date | number, Date>
-  namespace startOfYear {}
+  namespace startOfYear { }
 
   const sub: CurriedFn2<Duration, Date | number, Date>
-  namespace sub {}
+  namespace sub { }
 
   const subBusinessDays: CurriedFn2<number, Date | number, Date>
-  namespace subBusinessDays {}
+  namespace subBusinessDays { }
 
   const subDays: CurriedFn2<number, Date | number, Date>
-  namespace subDays {}
+  namespace subDays { }
 
   const subHours: CurriedFn2<number, Date | number, Date>
-  namespace subHours {}
+  namespace subHours { }
 
   const subISOWeekYears: CurriedFn2<number, Date | number, Date>
-  namespace subISOWeekYears {}
+  namespace subISOWeekYears { }
 
   const subMilliseconds: CurriedFn2<number, Date | number, Date>
-  namespace subMilliseconds {}
+  namespace subMilliseconds { }
 
   const subMinutes: CurriedFn2<number, Date | number, Date>
-  namespace subMinutes {}
+  namespace subMinutes { }
 
   const subMonths: CurriedFn2<number, Date | number, Date>
-  namespace subMonths {}
+  namespace subMonths { }
 
   const subQuarters: CurriedFn2<number, Date | number, Date>
-  namespace subQuarters {}
+  namespace subQuarters { }
 
   const subSeconds: CurriedFn2<number, Date | number, Date>
-  namespace subSeconds {}
+  namespace subSeconds { }
 
   const subWeeks: CurriedFn2<number, Date | number, Date>
-  namespace subWeeks {}
+  namespace subWeeks { }
 
   const subYears: CurriedFn2<number, Date | number, Date>
-  namespace subYears {}
+  namespace subYears { }
 
   const toDate: CurriedFn1<Date | number, Date>
-  namespace toDate {}
+  namespace toDate { }
 
   const weeksToDays: CurriedFn1<number, number>
-  namespace weeksToDays {}
+  namespace weeksToDays { }
 
   const yearsToMonths: CurriedFn1<number, number>
-  namespace yearsToMonths {}
+  namespace yearsToMonths { }
 
   const yearsToQuarters: CurriedFn1<number, number>
-  namespace yearsToQuarters {}
+  namespace yearsToQuarters { }
 
   const daysInWeek: number
 
@@ -19582,284 +19590,285 @@ declare module 'date-fns/esm/fp/yearsToQuarters/index.js' {
 // Regular Locales
 
 declare module 'date-fns/locale' {
+  import { Locale } from 'date-fns'
   const af: Locale
-  namespace af {}
+  namespace af { }
 
   const ar: Locale
-  namespace ar {}
+  namespace ar { }
 
   const arDZ: Locale
-  namespace arDZ {}
+  namespace arDZ { }
 
   const arEG: Locale
-  namespace arEG {}
+  namespace arEG { }
 
   const arMA: Locale
-  namespace arMA {}
+  namespace arMA { }
 
   const arSA: Locale
-  namespace arSA {}
+  namespace arSA { }
 
   const arTN: Locale
-  namespace arTN {}
+  namespace arTN { }
 
   const az: Locale
-  namespace az {}
+  namespace az { }
 
   const be: Locale
-  namespace be {}
+  namespace be { }
 
   const beTarask: Locale
-  namespace beTarask {}
+  namespace beTarask { }
 
   const bg: Locale
-  namespace bg {}
+  namespace bg { }
 
   const bn: Locale
-  namespace bn {}
+  namespace bn { }
 
   const bs: Locale
-  namespace bs {}
+  namespace bs { }
 
   const ca: Locale
-  namespace ca {}
+  namespace ca { }
 
   const cs: Locale
-  namespace cs {}
+  namespace cs { }
 
   const cy: Locale
-  namespace cy {}
+  namespace cy { }
 
   const da: Locale
-  namespace da {}
+  namespace da { }
 
   const de: Locale
-  namespace de {}
+  namespace de { }
 
   const deAT: Locale
-  namespace deAT {}
+  namespace deAT { }
 
   const el: Locale
-  namespace el {}
+  namespace el { }
 
   const enAU: Locale
-  namespace enAU {}
+  namespace enAU { }
 
   const enCA: Locale
-  namespace enCA {}
+  namespace enCA { }
 
   const enGB: Locale
-  namespace enGB {}
+  namespace enGB { }
 
   const enIE: Locale
-  namespace enIE {}
+  namespace enIE { }
 
   const enIN: Locale
-  namespace enIN {}
+  namespace enIN { }
 
   const enNZ: Locale
-  namespace enNZ {}
+  namespace enNZ { }
 
   const enUS: Locale
-  namespace enUS {}
+  namespace enUS { }
 
   const enZA: Locale
-  namespace enZA {}
+  namespace enZA { }
 
   const eo: Locale
-  namespace eo {}
+  namespace eo { }
 
   const es: Locale
-  namespace es {}
+  namespace es { }
 
   const et: Locale
-  namespace et {}
+  namespace et { }
 
   const eu: Locale
-  namespace eu {}
+  namespace eu { }
 
   const faIR: Locale
-  namespace faIR {}
+  namespace faIR { }
 
   const fi: Locale
-  namespace fi {}
+  namespace fi { }
 
   const fr: Locale
-  namespace fr {}
+  namespace fr { }
 
   const frCA: Locale
-  namespace frCA {}
+  namespace frCA { }
 
   const frCH: Locale
-  namespace frCH {}
+  namespace frCH { }
 
   const fy: Locale
-  namespace fy {}
+  namespace fy { }
 
   const gd: Locale
-  namespace gd {}
+  namespace gd { }
 
   const gl: Locale
-  namespace gl {}
+  namespace gl { }
 
   const gu: Locale
-  namespace gu {}
+  namespace gu { }
 
   const he: Locale
-  namespace he {}
+  namespace he { }
 
   const hi: Locale
-  namespace hi {}
+  namespace hi { }
 
   const hr: Locale
-  namespace hr {}
+  namespace hr { }
 
   const ht: Locale
-  namespace ht {}
+  namespace ht { }
 
   const hu: Locale
-  namespace hu {}
+  namespace hu { }
 
   const hy: Locale
-  namespace hy {}
+  namespace hy { }
 
   const id: Locale
-  namespace id {}
+  namespace id { }
 
   const is: Locale
-  namespace is {}
+  namespace is { }
 
   const it: Locale
-  namespace it {}
+  namespace it { }
 
   const itCH: Locale
-  namespace itCH {}
+  namespace itCH { }
 
   const ja: Locale
-  namespace ja {}
+  namespace ja { }
 
   const jaHira: Locale
-  namespace jaHira {}
+  namespace jaHira { }
 
   const ka: Locale
-  namespace ka {}
+  namespace ka { }
 
   const kk: Locale
-  namespace kk {}
+  namespace kk { }
 
   const km: Locale
-  namespace km {}
+  namespace km { }
 
   const kn: Locale
-  namespace kn {}
+  namespace kn { }
 
   const ko: Locale
-  namespace ko {}
+  namespace ko { }
 
   const lb: Locale
-  namespace lb {}
+  namespace lb { }
 
   const lt: Locale
-  namespace lt {}
+  namespace lt { }
 
   const lv: Locale
-  namespace lv {}
+  namespace lv { }
 
   const mk: Locale
-  namespace mk {}
+  namespace mk { }
 
   const mn: Locale
-  namespace mn {}
+  namespace mn { }
 
   const ms: Locale
-  namespace ms {}
+  namespace ms { }
 
   const mt: Locale
-  namespace mt {}
+  namespace mt { }
 
   const nb: Locale
-  namespace nb {}
+  namespace nb { }
 
   const nl: Locale
-  namespace nl {}
+  namespace nl { }
 
   const nlBE: Locale
-  namespace nlBE {}
+  namespace nlBE { }
 
   const nn: Locale
-  namespace nn {}
+  namespace nn { }
 
   const oc: Locale
-  namespace oc {}
+  namespace oc { }
 
   const pl: Locale
-  namespace pl {}
+  namespace pl { }
 
   const pt: Locale
-  namespace pt {}
+  namespace pt { }
 
   const ptBR: Locale
-  namespace ptBR {}
+  namespace ptBR { }
 
   const ro: Locale
-  namespace ro {}
+  namespace ro { }
 
   const ru: Locale
-  namespace ru {}
+  namespace ru { }
 
   const sk: Locale
-  namespace sk {}
+  namespace sk { }
 
   const sl: Locale
-  namespace sl {}
+  namespace sl { }
 
   const sq: Locale
-  namespace sq {}
+  namespace sq { }
 
   const sr: Locale
-  namespace sr {}
+  namespace sr { }
 
   const srLatn: Locale
-  namespace srLatn {}
+  namespace srLatn { }
 
   const sv: Locale
-  namespace sv {}
+  namespace sv { }
 
   const ta: Locale
-  namespace ta {}
+  namespace ta { }
 
   const te: Locale
-  namespace te {}
+  namespace te { }
 
   const th: Locale
-  namespace th {}
+  namespace th { }
 
   const tr: Locale
-  namespace tr {}
+  namespace tr { }
 
   const ug: Locale
-  namespace ug {}
+  namespace ug { }
 
   const uk: Locale
-  namespace uk {}
+  namespace uk { }
 
   const uz: Locale
-  namespace uz {}
+  namespace uz { }
 
   const uzCyrl: Locale
-  namespace uzCyrl {}
+  namespace uzCyrl { }
 
   const vi: Locale
-  namespace vi {}
+  namespace vi { }
 
   const zhCN: Locale
-  namespace zhCN {}
+  namespace zhCN { }
 
   const zhHK: Locale
-  namespace zhHK {}
+  namespace zhHK { }
 
   const zhTW: Locale
-  namespace zhTW {}
+  namespace zhTW { }
 }
 
 declare module 'date-fns/locale/af' {
@@ -21260,284 +21269,285 @@ declare module 'date-fns/locale/zh-TW/index.js' {
 // ECMAScript Module Locales
 
 declare module 'date-fns/esm/locale' {
+  import { Locale } from 'date-fns'
   const af: Locale
-  namespace af {}
+  namespace af { }
 
   const ar: Locale
-  namespace ar {}
+  namespace ar { }
 
   const arDZ: Locale
-  namespace arDZ {}
+  namespace arDZ { }
 
   const arEG: Locale
-  namespace arEG {}
+  namespace arEG { }
 
   const arMA: Locale
-  namespace arMA {}
+  namespace arMA { }
 
   const arSA: Locale
-  namespace arSA {}
+  namespace arSA { }
 
   const arTN: Locale
-  namespace arTN {}
+  namespace arTN { }
 
   const az: Locale
-  namespace az {}
+  namespace az { }
 
   const be: Locale
-  namespace be {}
+  namespace be { }
 
   const beTarask: Locale
-  namespace beTarask {}
+  namespace beTarask { }
 
   const bg: Locale
-  namespace bg {}
+  namespace bg { }
 
   const bn: Locale
-  namespace bn {}
+  namespace bn { }
 
   const bs: Locale
-  namespace bs {}
+  namespace bs { }
 
   const ca: Locale
-  namespace ca {}
+  namespace ca { }
 
   const cs: Locale
-  namespace cs {}
+  namespace cs { }
 
   const cy: Locale
-  namespace cy {}
+  namespace cy { }
 
   const da: Locale
-  namespace da {}
+  namespace da { }
 
   const de: Locale
-  namespace de {}
+  namespace de { }
 
   const deAT: Locale
-  namespace deAT {}
+  namespace deAT { }
 
   const el: Locale
-  namespace el {}
+  namespace el { }
 
   const enAU: Locale
-  namespace enAU {}
+  namespace enAU { }
 
   const enCA: Locale
-  namespace enCA {}
+  namespace enCA { }
 
   const enGB: Locale
-  namespace enGB {}
+  namespace enGB { }
 
   const enIE: Locale
-  namespace enIE {}
+  namespace enIE { }
 
   const enIN: Locale
-  namespace enIN {}
+  namespace enIN { }
 
   const enNZ: Locale
-  namespace enNZ {}
+  namespace enNZ { }
 
   const enUS: Locale
-  namespace enUS {}
+  namespace enUS { }
 
   const enZA: Locale
-  namespace enZA {}
+  namespace enZA { }
 
   const eo: Locale
-  namespace eo {}
+  namespace eo { }
 
   const es: Locale
-  namespace es {}
+  namespace es { }
 
   const et: Locale
-  namespace et {}
+  namespace et { }
 
   const eu: Locale
-  namespace eu {}
+  namespace eu { }
 
   const faIR: Locale
-  namespace faIR {}
+  namespace faIR { }
 
   const fi: Locale
-  namespace fi {}
+  namespace fi { }
 
   const fr: Locale
-  namespace fr {}
+  namespace fr { }
 
   const frCA: Locale
-  namespace frCA {}
+  namespace frCA { }
 
   const frCH: Locale
-  namespace frCH {}
+  namespace frCH { }
 
   const fy: Locale
-  namespace fy {}
+  namespace fy { }
 
   const gd: Locale
-  namespace gd {}
+  namespace gd { }
 
   const gl: Locale
-  namespace gl {}
+  namespace gl { }
 
   const gu: Locale
-  namespace gu {}
+  namespace gu { }
 
   const he: Locale
-  namespace he {}
+  namespace he { }
 
   const hi: Locale
-  namespace hi {}
+  namespace hi { }
 
   const hr: Locale
-  namespace hr {}
+  namespace hr { }
 
   const ht: Locale
-  namespace ht {}
+  namespace ht { }
 
   const hu: Locale
-  namespace hu {}
+  namespace hu { }
 
   const hy: Locale
-  namespace hy {}
+  namespace hy { }
 
   const id: Locale
-  namespace id {}
+  namespace id { }
 
   const is: Locale
-  namespace is {}
+  namespace is { }
 
   const it: Locale
-  namespace it {}
+  namespace it { }
 
   const itCH: Locale
-  namespace itCH {}
+  namespace itCH { }
 
   const ja: Locale
-  namespace ja {}
+  namespace ja { }
 
   const jaHira: Locale
-  namespace jaHira {}
+  namespace jaHira { }
 
   const ka: Locale
-  namespace ka {}
+  namespace ka { }
 
   const kk: Locale
-  namespace kk {}
+  namespace kk { }
 
   const km: Locale
-  namespace km {}
+  namespace km { }
 
   const kn: Locale
-  namespace kn {}
+  namespace kn { }
 
   const ko: Locale
-  namespace ko {}
+  namespace ko { }
 
   const lb: Locale
-  namespace lb {}
+  namespace lb { }
 
   const lt: Locale
-  namespace lt {}
+  namespace lt { }
 
   const lv: Locale
-  namespace lv {}
+  namespace lv { }
 
   const mk: Locale
-  namespace mk {}
+  namespace mk { }
 
   const mn: Locale
-  namespace mn {}
+  namespace mn { }
 
   const ms: Locale
-  namespace ms {}
+  namespace ms { }
 
   const mt: Locale
-  namespace mt {}
+  namespace mt { }
 
   const nb: Locale
-  namespace nb {}
+  namespace nb { }
 
   const nl: Locale
-  namespace nl {}
+  namespace nl { }
 
   const nlBE: Locale
-  namespace nlBE {}
+  namespace nlBE { }
 
   const nn: Locale
-  namespace nn {}
+  namespace nn { }
 
   const oc: Locale
-  namespace oc {}
+  namespace oc { }
 
   const pl: Locale
-  namespace pl {}
+  namespace pl { }
 
   const pt: Locale
-  namespace pt {}
+  namespace pt { }
 
   const ptBR: Locale
-  namespace ptBR {}
+  namespace ptBR { }
 
   const ro: Locale
-  namespace ro {}
+  namespace ro { }
 
   const ru: Locale
-  namespace ru {}
+  namespace ru { }
 
   const sk: Locale
-  namespace sk {}
+  namespace sk { }
 
   const sl: Locale
-  namespace sl {}
+  namespace sl { }
 
   const sq: Locale
-  namespace sq {}
+  namespace sq { }
 
   const sr: Locale
-  namespace sr {}
+  namespace sr { }
 
   const srLatn: Locale
-  namespace srLatn {}
+  namespace srLatn { }
 
   const sv: Locale
-  namespace sv {}
+  namespace sv { }
 
   const ta: Locale
-  namespace ta {}
+  namespace ta { }
 
   const te: Locale
-  namespace te {}
+  namespace te { }
 
   const th: Locale
-  namespace th {}
+  namespace th { }
 
   const tr: Locale
-  namespace tr {}
+  namespace tr { }
 
   const ug: Locale
-  namespace ug {}
+  namespace ug { }
 
   const uk: Locale
-  namespace uk {}
+  namespace uk { }
 
   const uz: Locale
-  namespace uz {}
+  namespace uz { }
 
   const uzCyrl: Locale
-  namespace uzCyrl {}
+  namespace uzCyrl { }
 
   const vi: Locale
-  namespace vi {}
+  namespace vi { }
 
   const zhCN: Locale
-  namespace zhCN {}
+  namespace zhCN { }
 
   const zhHK: Locale
-  namespace zhHK {}
+  namespace zhHK { }
 
   const zhTW: Locale
-  namespace zhTW {}
+  namespace zhTW { }
 }
 
 declare module 'date-fns/esm/locale/af' {
@@ -22937,866 +22947,874 @@ declare module 'date-fns/esm/locale/zh-TW/index.js' {
 
 // dateFns Global Interface
 
-interface dateFns {
-  add(date: Date | number, duration: Duration): Date
-
-  addBusinessDays(date: Date | number, amount: number): Date
-
-  addDays(date: Date | number, amount: number): Date
-
-  addHours(date: Date | number, amount: number): Date
-
-  addISOWeekYears(date: Date | number, amount: number): Date
-
-  addMilliseconds(date: Date | number, amount: number): Date
-
-  addMinutes(date: Date | number, amount: number): Date
-
-  addMonths(date: Date | number, amount: number): Date
-
-  addQuarters(date: Date | number, amount: number): Date
-
-  addSeconds(date: Date | number, amount: number): Date
-
-  addWeeks(date: Date | number, amount: number): Date
-
-  addYears(date: Date | number, amount: number): Date
-
-  areIntervalsOverlapping(
-    intervalLeft: Interval,
-    intervalRight: Interval,
-    options?: {
-      inclusive?: boolean
-    }
-  ): boolean
-
-  clamp(date: Date | number, interval: Interval): Date
-
-  closestIndexTo(
-    dateToCompare: Date | number,
-    datesArray: (Date | number)[]
-  ): number | undefined
-
-  closestTo(
-    dateToCompare: Date | number,
-    datesArray: (Date | number)[]
-  ): Date | undefined
-
-  compareAsc(dateLeft: Date | number, dateRight: Date | number): number
-
-  compareDesc(dateLeft: Date | number, dateRight: Date | number): number
-
-  daysToWeeks(days: number): number
-
-  differenceInBusinessDays(
-    dateLeft: Date | number,
-    dateRight: Date | number
-  ): number
-
-  differenceInCalendarDays(
-    dateLeft: Date | number,
-    dateRight: Date | number
-  ): number
-
-  differenceInCalendarISOWeeks(
-    dateLeft: Date | number,
-    dateRight: Date | number
-  ): number
-
-  differenceInCalendarISOWeekYears(
-    dateLeft: Date | number,
-    dateRight: Date | number
-  ): number
-
-  differenceInCalendarMonths(
-    dateLeft: Date | number,
-    dateRight: Date | number
-  ): number
-
-  differenceInCalendarQuarters(
-    dateLeft: Date | number,
-    dateRight: Date | number
-  ): number
-
-  differenceInCalendarWeeks(
-    dateLeft: Date | number,
-    dateRight: Date | number,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-    }
-  ): number
-
-  differenceInCalendarYears(
-    dateLeft: Date | number,
-    dateRight: Date | number
-  ): number
-
-  differenceInDays(dateLeft: Date | number, dateRight: Date | number): number
-
-  differenceInHours(
-    dateLeft: Date | number,
-    dateRight: Date | number,
-    options?: {
-      roundingMethod?: string
-    }
-  ): number
-
-  differenceInISOWeekYears(
-    dateLeft: Date | number,
-    dateRight: Date | number
-  ): number
-
-  differenceInMilliseconds(
-    dateLeft: Date | number,
-    dateRight: Date | number
-  ): number
-
-  differenceInMinutes(
-    dateLeft: Date | number,
-    dateRight: Date | number,
-    options?: {
-      roundingMethod?: string
-    }
-  ): number
-
-  differenceInMonths(dateLeft: Date | number, dateRight: Date | number): number
-
-  differenceInQuarters(
-    dateLeft: Date | number,
-    dateRight: Date | number,
-    options?: {
-      roundingMethod?: string
-    }
-  ): number
-
-  differenceInSeconds(
-    dateLeft: Date | number,
-    dateRight: Date | number,
-    options?: {
-      roundingMethod?: string
-    }
-  ): number
-
-  differenceInWeeks(
-    dateLeft: Date | number,
-    dateRight: Date | number,
-    options?: {
-      roundingMethod?: string
-    }
-  ): number
-
-  differenceInYears(dateLeft: Date | number, dateRight: Date | number): number
-
-  eachDayOfInterval(
-    interval: Interval,
-    options?: {
-      step?: number
-    }
-  ): Date[]
-
-  eachHourOfInterval(
-    interval: Interval,
-    options?: {
-      step?: number
-    }
-  ): Date[]
-
-  eachMinuteOfInterval(
-    interval: Interval,
-    options?: {
-      step?: number
-    }
-  ): Date[]
-
-  eachMonthOfInterval(interval: Interval): Date[]
-
-  eachQuarterOfInterval(interval: Interval): Date[]
-
-  eachWeekendOfInterval(interval: Interval): Date[]
-
-  eachWeekendOfMonth(date: Date | number): Date[]
-
-  eachWeekendOfYear(date: Date | number): Date[]
-
-  eachWeekOfInterval(
-    interval: Interval,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-    }
-  ): Date[]
-
-  eachYearOfInterval(interval: Interval): Date[]
-
-  endOfDay(date: Date | number): Date
-
-  endOfDecade(
-    date: Date | number,
-    options?: {
-      additionalDigits?: 0 | 1 | 2
-    }
-  ): Date
-
-  endOfHour(date: Date | number): Date
-
-  endOfISOWeek(date: Date | number): Date
+declare module 'date-fns' {
+  interface dateFns {
+    add(date: Date | number, duration: Duration): Date
 
-  endOfISOWeekYear(date: Date | number): Date
+    addBusinessDays(date: Date | number, amount: number): Date
 
-  endOfMinute(date: Date | number): Date
+    addDays(date: Date | number, amount: number): Date
 
-  endOfMonth(date: Date | number): Date
+    addHours(date: Date | number, amount: number): Date
 
-  endOfQuarter(date: Date | number): Date
+    addISOWeekYears(date: Date | number, amount: number): Date
 
-  endOfSecond(date: Date | number): Date
+    addMilliseconds(date: Date | number, amount: number): Date
 
-  endOfToday(): Date
+    addMinutes(date: Date | number, amount: number): Date
 
-  endOfTomorrow(): Date
+    addMonths(date: Date | number, amount: number): Date
 
-  endOfWeek(
-    date: Date | number,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-    }
-  ): Date
+    addQuarters(date: Date | number, amount: number): Date
 
-  endOfYear(date: Date | number): Date
+    addSeconds(date: Date | number, amount: number): Date
 
-  endOfYesterday(): Date
+    addWeeks(date: Date | number, amount: number): Date
 
-  format(
-    date: Date | number,
-    format: string,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-      firstWeekContainsDate?: number
-      useAdditionalWeekYearTokens?: boolean
-      useAdditionalDayOfYearTokens?: boolean
-    }
-  ): string
-
-  formatDistance(
-    date: Date | number,
-    baseDate: Date | number,
-    options?: {
-      includeSeconds?: boolean
-      addSuffix?: boolean
-      locale?: Locale
-    }
-  ): string
-
-  formatDistanceStrict(
-    date: Date | number,
-    baseDate: Date | number,
-    options?: {
-      addSuffix?: boolean
-      unit?: 'second' | 'minute' | 'hour' | 'day' | 'month' | 'year'
-      roundingMethod?: 'floor' | 'ceil' | 'round'
-      locale?: Locale
-    }
-  ): string
-
-  formatDistanceToNow(
-    date: Date | number,
-    options?: {
-      includeSeconds?: boolean
-      addSuffix?: boolean
-      locale?: Locale
-    }
-  ): string
+    addYears(date: Date | number, amount: number): Date
 
-  formatDistanceToNowStrict(
-    date: Date | number,
-    options?: {
-      addSuffix?: boolean
-      unit?: 'second' | 'minute' | 'hour' | 'day' | 'month' | 'year'
-      roundingMethod?: 'floor' | 'ceil' | 'round'
-      locale?: Locale
-    }
-  ): string
+    areIntervalsOverlapping(
+      intervalLeft: Interval,
+      intervalRight: Interval,
+      options?: {
+        inclusive?: boolean
+      }
+    ): boolean
 
-  formatDuration(
-    duration: Duration,
-    options?: {
-      format?: string[]
-      zero?: boolean
-      delimiter?: string
-      locale?: Locale
-    }
-  ): string
+    clamp(date: Date | number, interval: Interval): Date
 
-  formatISO(
-    date: Date | number,
-    options?: {
-      format?: 'extended' | 'basic'
-      representation?: 'complete' | 'date' | 'time'
-    }
-  ): string
+    closestIndexTo(
+      dateToCompare: Date | number,
+      datesArray: (Date | number)[]
+    ): number | undefined
+
+    closestTo(
+      dateToCompare: Date | number,
+      datesArray: (Date | number)[]
+    ): Date | undefined
+
+    compareAsc(dateLeft: Date | number, dateRight: Date | number): number
+
+    compareDesc(dateLeft: Date | number, dateRight: Date | number): number
+
+    daysToWeeks(days: number): number
+
+    differenceInBusinessDays(
+      dateLeft: Date | number,
+      dateRight: Date | number
+    ): number
+
+    differenceInCalendarDays(
+      dateLeft: Date | number,
+      dateRight: Date | number
+    ): number
+
+    differenceInCalendarISOWeeks(
+      dateLeft: Date | number,
+      dateRight: Date | number
+    ): number
+
+    differenceInCalendarISOWeekYears(
+      dateLeft: Date | number,
+      dateRight: Date | number
+    ): number
+
+    differenceInCalendarMonths(
+      dateLeft: Date | number,
+      dateRight: Date | number
+    ): number
+
+    differenceInCalendarQuarters(
+      dateLeft: Date | number,
+      dateRight: Date | number
+    ): number
+
+    differenceInCalendarWeeks(
+      dateLeft: Date | number,
+      dateRight: Date | number,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+      }
+    ): number
+
+    differenceInCalendarYears(
+      dateLeft: Date | number,
+      dateRight: Date | number
+    ): number
+
+    differenceInDays(dateLeft: Date | number, dateRight: Date | number): number
+
+    differenceInHours(
+      dateLeft: Date | number,
+      dateRight: Date | number,
+      options?: {
+        roundingMethod?: string
+      }
+    ): number
+
+    differenceInISOWeekYears(
+      dateLeft: Date | number,
+      dateRight: Date | number
+    ): number
+
+    differenceInMilliseconds(
+      dateLeft: Date | number,
+      dateRight: Date | number
+    ): number
+
+    differenceInMinutes(
+      dateLeft: Date | number,
+      dateRight: Date | number,
+      options?: {
+        roundingMethod?: string
+      }
+    ): number
+
+    differenceInMonths(
+      dateLeft: Date | number,
+      dateRight: Date | number
+    ): number
+
+    differenceInQuarters(
+      dateLeft: Date | number,
+      dateRight: Date | number,
+      options?: {
+        roundingMethod?: string
+      }
+    ): number
+
+    differenceInSeconds(
+      dateLeft: Date | number,
+      dateRight: Date | number,
+      options?: {
+        roundingMethod?: string
+      }
+    ): number
+
+    differenceInWeeks(
+      dateLeft: Date | number,
+      dateRight: Date | number,
+      options?: {
+        roundingMethod?: string
+      }
+    ): number
+
+    differenceInYears(dateLeft: Date | number, dateRight: Date | number): number
+
+    eachDayOfInterval(
+      interval: Interval,
+      options?: {
+        step?: number
+      }
+    ): Date[]
+
+    eachHourOfInterval(
+      interval: Interval,
+      options?: {
+        step?: number
+      }
+    ): Date[]
+
+    eachMinuteOfInterval(
+      interval: Interval,
+      options?: {
+        step?: number
+      }
+    ): Date[]
+
+    eachMonthOfInterval(interval: Interval): Date[]
+
+    eachQuarterOfInterval(interval: Interval): Date[]
+
+    eachWeekendOfInterval(interval: Interval): Date[]
+
+    eachWeekendOfMonth(date: Date | number): Date[]
+
+    eachWeekendOfYear(date: Date | number): Date[]
+
+    eachWeekOfInterval(
+      interval: Interval,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+      }
+    ): Date[]
+
+    eachYearOfInterval(interval: Interval): Date[]
+
+    endOfDay(date: Date | number): Date
+
+    endOfDecade(
+      date: Date | number,
+      options?: {
+        additionalDigits?: 0 | 1 | 2
+      }
+    ): Date
+
+    endOfHour(date: Date | number): Date
+
+    endOfISOWeek(date: Date | number): Date
+
+    endOfISOWeekYear(date: Date | number): Date
+
+    endOfMinute(date: Date | number): Date
+
+    endOfMonth(date: Date | number): Date
+
+    endOfQuarter(date: Date | number): Date
+
+    endOfSecond(date: Date | number): Date
+
+    endOfToday(): Date
+
+    endOfTomorrow(): Date
+
+    endOfWeek(
+      date: Date | number,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+      }
+    ): Date
+
+    endOfYear(date: Date | number): Date
+
+    endOfYesterday(): Date
+
+    format(
+      date: Date | number,
+      format: string,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+        firstWeekContainsDate?: number
+        useAdditionalWeekYearTokens?: boolean
+        useAdditionalDayOfYearTokens?: boolean
+      }
+    ): string
+
+    formatDistance(
+      date: Date | number,
+      baseDate: Date | number,
+      options?: {
+        includeSeconds?: boolean
+        addSuffix?: boolean
+        locale?: Locale
+      }
+    ): string
+
+    formatDistanceStrict(
+      date: Date | number,
+      baseDate: Date | number,
+      options?: {
+        addSuffix?: boolean
+        unit?: 'second' | 'minute' | 'hour' | 'day' | 'month' | 'year'
+        roundingMethod?: 'floor' | 'ceil' | 'round'
+        locale?: Locale
+      }
+    ): string
 
-  formatISO9075(
-    date: Date | number,
-    options?: {
-      format?: 'extended' | 'basic'
-      representation?: 'complete' | 'date' | 'time'
-    }
-  ): string
+    formatDistanceToNow(
+      date: Date | number,
+      options?: {
+        includeSeconds?: boolean
+        addSuffix?: boolean
+        locale?: Locale
+      }
+    ): string
 
-  formatISODuration(duration: Duration): string
+    formatDistanceToNowStrict(
+      date: Date | number,
+      options?: {
+        addSuffix?: boolean
+        unit?: 'second' | 'minute' | 'hour' | 'day' | 'month' | 'year'
+        roundingMethod?: 'floor' | 'ceil' | 'round'
+        locale?: Locale
+      }
+    ): string
 
-  formatRelative(
-    date: Date | number,
-    baseDate: Date | number,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-    }
-  ): string
+    formatDuration(
+      duration: Duration,
+      options?: {
+        format?: string[]
+        zero?: boolean
+        delimiter?: string
+        locale?: Locale
+      }
+    ): string
+
+    formatISO(
+      date: Date | number,
+      options?: {
+        format?: 'extended' | 'basic'
+        representation?: 'complete' | 'date' | 'time'
+      }
+    ): string
+
+    formatISO9075(
+      date: Date | number,
+      options?: {
+        format?: 'extended' | 'basic'
+        representation?: 'complete' | 'date' | 'time'
+      }
+    ): string
+
+    formatISODuration(duration: Duration): string
+
+    formatRelative(
+      date: Date | number,
+      baseDate: Date | number,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+      }
+    ): string
+
+    formatRFC3339(
+      date: Date | number,
+      options?: {
+        fractionDigits?: 0 | 1 | 2 | 3
+      }
+    ): string
+
+    formatRFC7231(date: Date | number): string
+
+    fromUnixTime(unixTime: number): Date
+
+    getDate(date: Date | number): number
+
+    getDay(date: Date | number): 0 | 1 | 2 | 3 | 4 | 5 | 6
+
+    getDayOfYear(date: Date | number): number
+
+    getDaysInMonth(date: Date | number): number
+
+    getDaysInYear(date: Date | number): number
+
+    getDecade(date: Date | number): number
+
+    getDefaultOptions(): Object
+
+    getHours(date: Date | number): number
+
+    getISODay(date: Date | number): number
+
+    getISOWeek(date: Date | number): number
+
+    getISOWeeksInYear(date: Date | number): number
+
+    getISOWeekYear(date: Date | number): number
+
+    getMilliseconds(date: Date | number): number
+
+    getMinutes(date: Date | number): number
+
+    getMonth(date: Date | number): number
+
+    getOverlappingDaysInIntervals(
+      intervalLeft: Interval,
+      intervalRight: Interval
+    ): number
+
+    getQuarter(date: Date | number): number
+
+    getSeconds(date: Date | number): number
 
-  formatRFC3339(
-    date: Date | number,
-    options?: {
-      fractionDigits?: 0 | 1 | 2 | 3
-    }
-  ): string
+    getTime(date: Date | number): number
 
-  formatRFC7231(date: Date | number): string
+    getUnixTime(date: Date | number): number
 
-  fromUnixTime(unixTime: number): Date
+    getWeek(
+      date: Date | number,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+        firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
+      }
+    ): number
 
-  getDate(date: Date | number): number
+    getWeekOfMonth(
+      date: Date | number,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+      }
+    ): number
 
-  getDay(date: Date | number): 0 | 1 | 2 | 3 | 4 | 5 | 6
+    getWeeksInMonth(
+      date: Date | number,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+      }
+    ): number
 
-  getDayOfYear(date: Date | number): number
+    getWeekYear(
+      date: Date | number,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+        firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
+      }
+    ): number
 
-  getDaysInMonth(date: Date | number): number
+    getYear(date: Date | number): number
 
-  getDaysInYear(date: Date | number): number
+    hoursToMilliseconds(hours: number): number
 
-  getDecade(date: Date | number): number
+    hoursToMinutes(hours: number): number
 
-  getDefaultOptions(): Object
+    hoursToSeconds(hours: number): number
 
-  getHours(date: Date | number): number
+    intervalToDuration(interval: Interval): Duration
 
-  getISODay(date: Date | number): number
+    intlFormat(
+      argument: Date | number,
+      formatOptions?: {
+        localeMatcher?: 'lookup' | 'best fit'
+        weekday?: 'narrow' | 'short' | 'long'
+        era?: 'narrow' | 'short' | 'long'
+        year?: 'numeric' | '2-digit'
+        month?: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long'
+        day?: 'numeric' | '2-digit'
+        hour?: 'numeric' | '2-digit'
+        minute?: 'numeric' | '2-digit'
+        second?: 'numeric' | '2-digit'
+        timeZoneName?: 'short' | 'long'
+        formatMatcher?: 'basic' | 'best fit'
+        hour12?: boolean
+        timeZone?: string
+      },
+      localeOptions?: {
+        locale?: string | string[]
+      }
+    ): string
 
-  getISOWeek(date: Date | number): number
+    intlFormatDistance(
+      date: Date | number,
+      baseDate: Date | number,
+      options?: {
+        unit?: string
+        locale?: string | string[]
+        localeMatcher?: string
+        numeric?: string
+        style?: string
+      }
+    ): string
 
-  getISOWeeksInYear(date: Date | number): number
+    isAfter(date: Date | number, dateToCompare: Date | number): boolean
 
-  getISOWeekYear(date: Date | number): number
+    isBefore(date: Date | number, dateToCompare: Date | number): boolean
 
-  getMilliseconds(date: Date | number): number
+    isDate(value: any): boolean
 
-  getMinutes(date: Date | number): number
+    isEqual(dateLeft: Date | number, dateRight: Date | number): boolean
 
-  getMonth(date: Date | number): number
+    isExists(year: number, month: number, day: number): boolean
 
-  getOverlappingDaysInIntervals(
-    intervalLeft: Interval,
-    intervalRight: Interval
-  ): number
+    isFirstDayOfMonth(date: Date | number): boolean
 
-  getQuarter(date: Date | number): number
+    isFriday(date: Date | number): boolean
 
-  getSeconds(date: Date | number): number
+    isFuture(date: Date | number): boolean
 
-  getTime(date: Date | number): number
+    isLastDayOfMonth(date: Date | number): boolean
 
-  getUnixTime(date: Date | number): number
+    isLeapYear(date: Date | number): boolean
 
-  getWeek(
-    date: Date | number,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-      firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
-    }
-  ): number
+    isMatch(
+      dateString: string,
+      formatString: string,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+        firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
+        useAdditionalWeekYearTokens?: boolean
+        useAdditionalDayOfYearTokens?: boolean
+      }
+    ): boolean
 
-  getWeekOfMonth(
-    date: Date | number,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-    }
-  ): number
+    isMonday(date: Date | number): boolean
 
-  getWeeksInMonth(
-    date: Date | number,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-    }
-  ): number
+    isPast(date: Date | number): boolean
 
-  getWeekYear(
-    date: Date | number,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-      firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
-    }
-  ): number
+    isSameDay(dateLeft: Date | number, dateRight: Date | number): boolean
 
-  getYear(date: Date | number): number
+    isSameHour(dateLeft: Date | number, dateRight: Date | number): boolean
 
-  hoursToMilliseconds(hours: number): number
+    isSameISOWeek(dateLeft: Date | number, dateRight: Date | number): boolean
 
-  hoursToMinutes(hours: number): number
+    isSameISOWeekYear(
+      dateLeft: Date | number,
+      dateRight: Date | number
+    ): boolean
 
-  hoursToSeconds(hours: number): number
+    isSameMinute(dateLeft: Date | number, dateRight: Date | number): boolean
 
-  intervalToDuration(interval: Interval): Duration
+    isSameMonth(dateLeft: Date | number, dateRight: Date | number): boolean
 
-  intlFormat(
-    argument: Date | number,
-    formatOptions?: {
-      localeMatcher?: 'lookup' | 'best fit'
-      weekday?: 'narrow' | 'short' | 'long'
-      era?: 'narrow' | 'short' | 'long'
-      year?: 'numeric' | '2-digit'
-      month?: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long'
-      day?: 'numeric' | '2-digit'
-      hour?: 'numeric' | '2-digit'
-      minute?: 'numeric' | '2-digit'
-      second?: 'numeric' | '2-digit'
-      timeZoneName?: 'short' | 'long'
-      formatMatcher?: 'basic' | 'best fit'
-      hour12?: boolean
-      timeZone?: string
-    },
-    localeOptions?: {
-      locale?: string | string[]
-    }
-  ): string
+    isSameQuarter(dateLeft: Date | number, dateRight: Date | number): boolean
 
-  intlFormatDistance(
-    date: Date | number,
-    baseDate: Date | number,
-    options?: {
-      unit?: string
-      locale?: string | string[]
-      localeMatcher?: string
-      numeric?: string
-      style?: string
-    }
-  ): string
+    isSameSecond(dateLeft: Date | number, dateRight: Date | number): boolean
 
-  isAfter(date: Date | number, dateToCompare: Date | number): boolean
+    isSameWeek(
+      dateLeft: Date | number,
+      dateRight: Date | number,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+      }
+    ): boolean
 
-  isBefore(date: Date | number, dateToCompare: Date | number): boolean
+    isSameYear(dateLeft: Date | number, dateRight: Date | number): boolean
 
-  isDate(value: any): boolean
+    isSaturday(date: Date | number): boolean
 
-  isEqual(dateLeft: Date | number, dateRight: Date | number): boolean
+    isSunday(date: Date | number): boolean
 
-  isExists(year: number, month: number, day: number): boolean
+    isThisHour(date: Date | number): boolean
 
-  isFirstDayOfMonth(date: Date | number): boolean
+    isThisISOWeek(date: Date | number): boolean
 
-  isFriday(date: Date | number): boolean
+    isThisMinute(date: Date | number): boolean
 
-  isFuture(date: Date | number): boolean
+    isThisMonth(date: Date | number): boolean
 
-  isLastDayOfMonth(date: Date | number): boolean
+    isThisQuarter(date: Date | number): boolean
 
-  isLeapYear(date: Date | number): boolean
+    isThisSecond(date: Date | number): boolean
 
-  isMatch(
-    dateString: string,
-    formatString: string,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-      firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
-      useAdditionalWeekYearTokens?: boolean
-      useAdditionalDayOfYearTokens?: boolean
-    }
-  ): boolean
+    isThisWeek(
+      date: Date | number,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+      }
+    ): boolean
 
-  isMonday(date: Date | number): boolean
+    isThisYear(date: Date | number): boolean
 
-  isPast(date: Date | number): boolean
+    isThursday(date: Date | number): boolean
 
-  isSameDay(dateLeft: Date | number, dateRight: Date | number): boolean
+    isToday(date: Date | number): boolean
 
-  isSameHour(dateLeft: Date | number, dateRight: Date | number): boolean
+    isTomorrow(date: Date | number): boolean
 
-  isSameISOWeek(dateLeft: Date | number, dateRight: Date | number): boolean
+    isTuesday(date: Date | number): boolean
 
-  isSameISOWeekYear(dateLeft: Date | number, dateRight: Date | number): boolean
+    isValid(date: any): boolean
 
-  isSameMinute(dateLeft: Date | number, dateRight: Date | number): boolean
+    isWednesday(date: Date | number): boolean
 
-  isSameMonth(dateLeft: Date | number, dateRight: Date | number): boolean
+    isWeekend(date: Date | number): boolean
 
-  isSameQuarter(dateLeft: Date | number, dateRight: Date | number): boolean
+    isWithinInterval(date: Date | number, interval: Interval): boolean
 
-  isSameSecond(dateLeft: Date | number, dateRight: Date | number): boolean
+    isYesterday(date: Date | number): boolean
 
-  isSameWeek(
-    dateLeft: Date | number,
-    dateRight: Date | number,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-    }
-  ): boolean
+    lastDayOfDecade(date: Date | number): Date
 
-  isSameYear(dateLeft: Date | number, dateRight: Date | number): boolean
+    lastDayOfISOWeek(date: Date | number): Date
 
-  isSaturday(date: Date | number): boolean
+    lastDayOfISOWeekYear(date: Date | number): Date
 
-  isSunday(date: Date | number): boolean
+    lastDayOfMonth(date: Date | number): Date
 
-  isThisHour(date: Date | number): boolean
+    lastDayOfQuarter(
+      date: Date | number,
+      options?: {
+        additionalDigits?: 0 | 1 | 2
+      }
+    ): Date
 
-  isThisISOWeek(date: Date | number): boolean
+    lastDayOfWeek(
+      date: Date | number,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+      }
+    ): Date
 
-  isThisMinute(date: Date | number): boolean
+    lastDayOfYear(date: Date | number): Date
 
-  isThisMonth(date: Date | number): boolean
+    lightFormat(date: Date | number, format: string): string
 
-  isThisQuarter(date: Date | number): boolean
+    max(datesArray: (Date | number)[]): Date
 
-  isThisSecond(date: Date | number): boolean
+    milliseconds(duration: Duration): number
 
-  isThisWeek(
-    date: Date | number,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-    }
-  ): boolean
+    millisecondsToHours(milliseconds: number): number
 
-  isThisYear(date: Date | number): boolean
+    millisecondsToMinutes(milliseconds: number): number
 
-  isThursday(date: Date | number): boolean
+    millisecondsToSeconds(milliseconds: number): number
 
-  isToday(date: Date | number): boolean
+    min(datesArray: (Date | number)[]): Date
 
-  isTomorrow(date: Date | number): boolean
+    minutesToHours(minutes: number): number
 
-  isTuesday(date: Date | number): boolean
+    minutesToMilliseconds(minutes: number): number
 
-  isValid(date: any): boolean
+    minutesToSeconds(minutes: number): number
 
-  isWednesday(date: Date | number): boolean
+    monthsToQuarters(months: number): number
 
-  isWeekend(date: Date | number): boolean
+    monthsToYears(months: number): number
 
-  isWithinInterval(date: Date | number, interval: Interval): boolean
+    nextDay(date: Date | number, day: Day): Date
 
-  isYesterday(date: Date | number): boolean
+    nextFriday(date: Date | number): Date
 
-  lastDayOfDecade(date: Date | number): Date
+    nextMonday(date: Date | number): Date
 
-  lastDayOfISOWeek(date: Date | number): Date
+    nextSaturday(date: Date | number): Date
 
-  lastDayOfISOWeekYear(date: Date | number): Date
+    nextSunday(date: Date | number): Date
 
-  lastDayOfMonth(date: Date | number): Date
+    nextThursday(date: Date | number): Date
 
-  lastDayOfQuarter(
-    date: Date | number,
-    options?: {
-      additionalDigits?: 0 | 1 | 2
-    }
-  ): Date
+    nextTuesday(date: Date | number): Date
 
-  lastDayOfWeek(
-    date: Date | number,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-    }
-  ): Date
+    nextWednesday(date: Date | number): Date
 
-  lastDayOfYear(date: Date | number): Date
+    parse(
+      dateString: string,
+      formatString: string,
+      referenceDate: Date | number,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+        firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
+        useAdditionalWeekYearTokens?: boolean
+        useAdditionalDayOfYearTokens?: boolean
+      }
+    ): Date
 
-  lightFormat(date: Date | number, format: string): string
+    parseISO(
+      argument: string,
+      options?: {
+        additionalDigits?: 0 | 1 | 2
+      }
+    ): Date
 
-  max(datesArray: (Date | number)[]): Date
+    parseJSON(argument: string | number | Date): Date
 
-  milliseconds(duration: Duration): number
+    previousDay(date: Date | number, day: number): Date
 
-  millisecondsToHours(milliseconds: number): number
+    previousFriday(date: Date | number): Date
 
-  millisecondsToMinutes(milliseconds: number): number
+    previousMonday(date: Date | number): Date
 
-  millisecondsToSeconds(milliseconds: number): number
+    previousSaturday(date: Date | number): Date
 
-  min(datesArray: (Date | number)[]): Date
+    previousSunday(date: Date | number): Date
 
-  minutesToHours(minutes: number): number
+    previousThursday(date: Date | number): Date
 
-  minutesToMilliseconds(minutes: number): number
+    previousTuesday(date: Date | number): Date
 
-  minutesToSeconds(minutes: number): number
+    previousWednesday(date: Date | number): Date
 
-  monthsToQuarters(months: number): number
+    quartersToMonths(quarters: number): number
 
-  monthsToYears(months: number): number
+    quartersToYears(quarters: number): number
 
-  nextDay(date: Date | number, day: Day): Date
+    roundToNearestMinutes(
+      date: Date | number,
+      options?: {
+        nearestTo?: number
+        roundingMethod?: string
+      }
+    ): Date
 
-  nextFriday(date: Date | number): Date
+    secondsToHours(seconds: number): number
 
-  nextMonday(date: Date | number): Date
+    secondsToMilliseconds(seconds: number): number
 
-  nextSaturday(date: Date | number): Date
+    secondsToMinutes(seconds: number): number
 
-  nextSunday(date: Date | number): Date
+    set(
+      date: Date | number,
+      values: {
+        year?: number
+        month?: number
+        date?: number
+        hours?: number
+        minutes?: number
+        seconds?: number
+        milliseconds?: number
+      }
+    ): Date
 
-  nextThursday(date: Date | number): Date
+    setDate(date: Date | number, dayOfMonth: number): Date
 
-  nextTuesday(date: Date | number): Date
+    setDay(
+      date: Date | number,
+      day: number,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+      }
+    ): Date
 
-  nextWednesday(date: Date | number): Date
+    setDayOfYear(date: Date | number, dayOfYear: number): Date
 
-  parse(
-    dateString: string,
-    formatString: string,
-    referenceDate: Date | number,
-    options?: {
+    setDefaultOptions(newOptions: {
       locale?: Locale
       weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
       firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
-      useAdditionalWeekYearTokens?: boolean
-      useAdditionalDayOfYearTokens?: boolean
-    }
-  ): Date
-
-  parseISO(
-    argument: string,
-    options?: {
-      additionalDigits?: 0 | 1 | 2
-    }
-  ): Date
-
-  parseJSON(argument: string | number | Date): Date
-
-  previousDay(date: Date | number, day: number): Date
-
-  previousFriday(date: Date | number): Date
-
-  previousMonday(date: Date | number): Date
-
-  previousSaturday(date: Date | number): Date
-
-  previousSunday(date: Date | number): Date
-
-  previousThursday(date: Date | number): Date
-
-  previousTuesday(date: Date | number): Date
-
-  previousWednesday(date: Date | number): Date
-
-  quartersToMonths(quarters: number): number
-
-  quartersToYears(quarters: number): number
-
-  roundToNearestMinutes(
-    date: Date | number,
-    options?: {
-      nearestTo?: number
-      roundingMethod?: string
-    }
-  ): Date
-
-  secondsToHours(seconds: number): number
-
-  secondsToMilliseconds(seconds: number): number
-
-  secondsToMinutes(seconds: number): number
+    }): void
 
-  set(
-    date: Date | number,
-    values: {
-      year?: number
-      month?: number
-      date?: number
-      hours?: number
-      minutes?: number
-      seconds?: number
-      milliseconds?: number
-    }
-  ): Date
+    setHours(date: Date | number, hours: number): Date
 
-  setDate(date: Date | number, dayOfMonth: number): Date
+    setISODay(date: Date | number, day: number): Date
 
-  setDay(
-    date: Date | number,
-    day: number,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-    }
-  ): Date
+    setISOWeek(date: Date | number, isoWeek: number): Date
 
-  setDayOfYear(date: Date | number, dayOfYear: number): Date
+    setISOWeekYear(date: Date | number, isoWeekYear: number): Date
 
-  setDefaultOptions(newOptions: {
-    locale?: Locale
-    weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-    firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
-  }): void
+    setMilliseconds(date: Date | number, milliseconds: number): Date
 
-  setHours(date: Date | number, hours: number): Date
+    setMinutes(date: Date | number, minutes: number): Date
 
-  setISODay(date: Date | number, day: number): Date
+    setMonth(date: Date | number, month: number): Date
 
-  setISOWeek(date: Date | number, isoWeek: number): Date
+    setQuarter(date: Date | number, quarter: number): Date
 
-  setISOWeekYear(date: Date | number, isoWeekYear: number): Date
+    setSeconds(date: Date | number, seconds: number): Date
 
-  setMilliseconds(date: Date | number, milliseconds: number): Date
+    setWeek(
+      date: Date | number,
+      week: number,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+        firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
+      }
+    ): Date
 
-  setMinutes(date: Date | number, minutes: number): Date
+    setWeekYear(
+      date: Date | number,
+      weekYear: number,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+        firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
+      }
+    ): Date
 
-  setMonth(date: Date | number, month: number): Date
+    setYear(date: Date | number, year: number): Date
 
-  setQuarter(date: Date | number, quarter: number): Date
+    startOfDay(date: Date | number): Date
 
-  setSeconds(date: Date | number, seconds: number): Date
+    startOfDecade(date: Date | number): Date
 
-  setWeek(
-    date: Date | number,
-    week: number,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-      firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
-    }
-  ): Date
-
-  setWeekYear(
-    date: Date | number,
-    weekYear: number,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-      firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
-    }
-  ): Date
-
-  setYear(date: Date | number, year: number): Date
-
-  startOfDay(date: Date | number): Date
-
-  startOfDecade(date: Date | number): Date
-
-  startOfHour(date: Date | number): Date
+    startOfHour(date: Date | number): Date
 
-  startOfISOWeek(date: Date | number): Date
+    startOfISOWeek(date: Date | number): Date
 
-  startOfISOWeekYear(date: Date | number): Date
+    startOfISOWeekYear(date: Date | number): Date
 
-  startOfMinute(date: Date | number): Date
+    startOfMinute(date: Date | number): Date
 
-  startOfMonth(date: Date | number): Date
+    startOfMonth(date: Date | number): Date
 
-  startOfQuarter(date: Date | number): Date
+    startOfQuarter(date: Date | number): Date
 
-  startOfSecond(date: Date | number): Date
+    startOfSecond(date: Date | number): Date
 
-  startOfToday(): Date
+    startOfToday(): Date
 
-  startOfTomorrow(): Date
+    startOfTomorrow(): Date
 
-  startOfWeek(
-    date: Date | number,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-    }
-  ): Date
+    startOfWeek(
+      date: Date | number,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+      }
+    ): Date
 
-  startOfWeekYear(
-    date: Date | number,
-    options?: {
-      locale?: Locale
-      weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
-      firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
-    }
-  ): Date
+    startOfWeekYear(
+      date: Date | number,
+      options?: {
+        locale?: Locale
+        weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6
+        firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7
+      }
+    ): Date
 
-  startOfYear(date: Date | number): Date
+    startOfYear(date: Date | number): Date
 
-  startOfYesterday(): Date
+    startOfYesterday(): Date
 
-  sub(date: Date | number, duration: Duration): Date
+    sub(date: Date | number, duration: Duration): Date
 
-  subBusinessDays(date: Date | number, amount: number): Date
+    subBusinessDays(date: Date | number, amount: number): Date
 
-  subDays(date: Date | number, amount: number): Date
+    subDays(date: Date | number, amount: number): Date
 
-  subHours(date: Date | number, amount: number): Date
+    subHours(date: Date | number, amount: number): Date
 
-  subISOWeekYears(date: Date | number, amount: number): Date
+    subISOWeekYears(date: Date | number, amount: number): Date
 
-  subMilliseconds(date: Date | number, amount: number): Date
+    subMilliseconds(date: Date | number, amount: number): Date
 
-  subMinutes(date: Date | number, amount: number): Date
+    subMinutes(date: Date | number, amount: number): Date
 
-  subMonths(date: Date | number, amount: number): Date
+    subMonths(date: Date | number, amount: number): Date
 
-  subQuarters(date: Date | number, amount: number): Date
+    subQuarters(date: Date | number, amount: number): Date
 
-  subSeconds(date: Date | number, amount: number): Date
+    subSeconds(date: Date | number, amount: number): Date
 
-  subWeeks(date: Date | number, amount: number): Date
+    subWeeks(date: Date | number, amount: number): Date
 
-  subYears(date: Date | number, amount: number): Date
+    subYears(date: Date | number, amount: number): Date
 
-  toDate(argument: Date | number): Date
+    toDate(argument: Date | number): Date
 
-  weeksToDays(weeks: number): number
+    weeksToDays(weeks: number): number
 
-  yearsToMonths(years: number): number
+    yearsToMonths(years: number): number
 
-  yearsToQuarters(years: number): number
+    yearsToQuarters(years: number): number
 
-  daysInWeek: number
+    daysInWeek: number
 
-  daysInYear: number
+    daysInYear: number
 
-  maxTime: number
+    maxTime: number
 
-  millisecondsInMinute: number
+    millisecondsInMinute: number
 
-  millisecondsInHour: number
+    millisecondsInHour: number
 
-  millisecondsInSecond: number
+    millisecondsInSecond: number
 
-  minTime: number
+    minTime: number
 
-  minutesInHour: number
+    minutesInHour: number
 
-  monthsInQuarter: number
+    monthsInQuarter: number
 
-  monthsInYear: number
+    monthsInYear: number
 
-  quartersInYear: number
+    quartersInYear: number
 
-  secondsInHour: number
+    secondsInHour: number
 
-  secondsInMinute: number
+    secondsInMinute: number
 
-  secondsInDay: number
+    secondsInDay: number
 
-  secondsInWeek: number
+    secondsInWeek: number
 
-  secondsInYear: number
+    secondsInYear: number
 
-  secondsInMonth: number
+    secondsInMonth: number
 
-  secondsInQuarter: number
+    secondsInQuarter: number
+  }
 }