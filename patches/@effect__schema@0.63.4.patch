diff --git a/README.md b/README.md
index 8dab95c11d4f8c75678303c1a6c52ef2d3d8d3a6..ab5b105b0aa86e69d5035d9c773a202214f9a59d 100644
--- a/README.md
+++ b/README.md
@@ -106,19 +106,19 @@ Let's delve into this with an example.
 ```ts
 import * as S from "@effect/schema/Schema";
 
-/*
-const schema: S.Schema<{
-    readonly myfield?: string; // the type is strict
-}, {
-    readonly myfield?: string; // the type is strict
-}, never>
-*/
 const schema = S.struct({
   myfield: S.optional(S.string.pipe(S.nonEmpty()), {
     exact: true,
   }),
 });
 
+/*
+type Type = {
+    readonly myfield?: string; // the type is strict (no `| undefined`)
+}
+*/
+type Type = S.Schema.Type<typeof schema>;
+
 S.decodeSync(schema)({ myfield: undefined });
 /*
 TypeScript Error:
@@ -137,19 +137,19 @@ If, for some reason, you can't enable the `exactOptionalPropertyTypes` option (p
 ```ts
 import * as S from "@effect/schema/Schema";
 
-/*
-const schema: S.Schema<{
-    readonly myfield?: string | undefined; // the type is widened to string | undefined
-}, {
-    readonly myfield?: string | undefined; // the type is widened to string | undefined
-}, never>
-*/
 const schema = S.struct({
   myfield: S.optional(S.string.pipe(S.nonEmpty()), {
     exact: true,
   }),
 });
 
+/*
+type Type = {
+    readonly myfield?: string | undefined; // the type is widened to string | undefined
+}
+*/
+type Type = S.Schema.Type<typeof schema>;
+
 S.decodeSync(schema)({ myfield: undefined }); // No type error, but a decoding failure occurs
 /*
 Error: { myfield?: a non empty string }
@@ -209,7 +209,7 @@ In addition to the provided `struct` and `union` functions, `@effect/schema/Sche
 
 ## Extracting Inferred Types
 
-After you've defined a `Schema<A, I, R>`, you can extract the inferred type `A` that represents the data described by the schema using the `Schema.To` type.
+After you've defined a `Schema<A, I, R>`, you can extract the inferred type `A` that represents the data described by the schema using the `Schema.Type` type.
 
 For instance, with the `Person` schema we defined earlier, you can extract the inferred type of a `Person` object as demonstrated below:
 
@@ -221,7 +221,7 @@ const Person = S.struct({
   age: S.number,
 });
 
-interface Person extends S.Schema.To<typeof Person> {}
+interface Person extends S.Schema.Type<typeof Person> {}
 /*
 Equivalent to:
 interface Person {
@@ -234,7 +234,7 @@ interface Person {
 Alternatively you can also extract a `type` instead of an `interface`:
 
 ```ts
-type Person = S.Schema.To<typeof Person>;
+type Person = S.Schema.Type<typeof Person>;
 /*
 Equivalent to:
 type Person {
@@ -253,16 +253,16 @@ type Context = S.Schema.Context<typeof Person>;
 
 ### Advanced extracting Inferred Types
 
-In cases where `I` differs from `A`, you can also extract the inferred `I` type using `Schema.From`.
+In cases where `I` differs from `A`, you can also extract the inferred `I` type using `Schema.Encoded`.
 
 ```ts
 import type * as S from "@effect/schema/Schema";
 
-// type To = number
-type To = S.Schema.To<typeof S.NumberFromString>;
+// type Type = number
+type Type = S.Schema.Type<typeof S.NumberFromString>;
 
-// type From = string
-type From = S.Schema.From<typeof S.NumberFromString>;
+// type Encoded = string
+type Encoded = S.Schema.Encoded<typeof S.NumberFromString>;
 ```
 
 To create a schema with an opaque type, you can use the following technique that re-declares the schema:
@@ -275,7 +275,7 @@ const _Person = S.struct({
   age: S.number,
 });
 
-interface Person extends S.Schema.To<typeof _Person> {}
+interface Person extends S.Schema.Type<typeof _Person> {}
 
 // Re-declare the schema to create a schema with an opaque type
 const Person: S.Schema<Person> = _Person;
@@ -289,28 +289,25 @@ Note that the technique shown above becomes more complex when the schema is defi
 import * as S from "@effect/schema/Schema";
 
 /*
-const _Person: S.Schema<{
-    readonly name: string;
-    readonly age: number;
-}, {
-    readonly name: string;
-    readonly age: string;
-}, never>
+const _Person: S.struct<{
+    name: S.$string;
+    age: S.NumberFromString;
+}>
 */
 const _Person = S.struct({
   name: S.string,
   age: S.NumberFromString,
 });
 
-interface Person extends S.Schema.To<typeof _Person> {}
+interface Person extends S.Schema.Type<typeof _Person> {}
 
-interface PersonFrom extends S.Schema.From<typeof _Person> {}
+interface PersonEncoded extends S.Schema.Encoded<typeof _Person> {}
 
 // Re-declare the schema to create a schema with an opaque type
-const Person: S.Schema<Person, PersonFrom> = _Person;
+const Person: S.Schema<Person, PersonEncoded> = _Person;
 ```
 
-In this case, the field `"age"` is of type `string` in the `From` type of the schema and is of type `number` in the `To` type of the schema. Therefore, we need to define **two** interfaces (`PersonFrom` and `Person`) and use both to redeclare our final schema `Person`.
+In this case, the field `"age"` is of type `string` in the `Encoded` type of the schema and is of type `number` in the `Type` type of the schema. Therefore, we need to define **two** interfaces (`PersonEncoded` and `Person`) and use both to redeclare our final schema `Person`.
 
 ## Decoding From Unknown
 
@@ -733,7 +730,7 @@ assertsPerson({ name: "Alice", age: 30 });
 
 ## [fast-check](https://github.com/dubzzz/fast-check) arbitraries
 
-The `arbitrary` function provided by the `@effect/schema/Arbitrary` module represents a way of generating random values that conform to a given `Schema`. This can be useful for testing purposes, as it allows you to generate random test data that is guaranteed to be valid according to the `Schema`.
+The `make` function provided by the `@effect/schema/Arbitrary` module represents a way of generating random values that conform to a given `Schema`. This can be useful for testing purposes, as it allows you to generate random test data that is guaranteed to be valid according to the `Schema`.
 
 ```ts
 import * as Arbitrary from "@effect/schema/Arbitrary";
@@ -816,7 +813,7 @@ This patch helps resolve the issue caused by the declaration of a private proper
 
 ## Pretty print
 
-The `to` function provided by the `@effect/schema/Pretty` module represents a way of pretty-printing values that conform to a given `Schema`.
+The `make` function provided by the `@effect/schema/Pretty` module represents a way of pretty-printing values that conform to a given `Schema`.
 
 You can use the `to` function to create a human-readable string representation of a value that conforms to a `Schema`. This can be useful for debugging or logging purposes, as it allows you to easily inspect the structure and data types of the value.
 
@@ -839,6 +836,19 @@ Output:
 */
 ```
 
+### Customizations
+
+```ts
+import * as Pretty from "@effect/schema/Pretty";
+import * as S from "@effect/schema/Schema";
+
+const schema = S.number.annotations({
+  pretty: () => (n: number) => `my format: ${n}`,
+});
+
+console.log(Pretty.make(schema)(1)); // my format: 1
+```
+
 ## Generating JSON Schemas
 
 The `to` / `from` functions, which are part of the `@effect/schema/JSONSchema` module, allow you to generate a JSON Schema based on a schema definition:
@@ -1233,7 +1243,7 @@ const schema = S.struct({ a: S.string, b: S.string }).pipe(
     o.b === o.a
       ? Option.none()
       : Option.some(
-          ParseResult.type(
+          new ParseResult.Type(
             S.literal(o.a).ast,
             o.b,
             `b ("${o.b}") should be equal to a ("${o.a}")`
@@ -1403,7 +1413,7 @@ To define a schema for a branded type from scratch, you can use the `brand` comb
 import * as S from "@effect/schema/Schema";
 
 const UserId = S.string.pipe(S.brand("UserId"));
-type UserId = S.Schema.To<typeof UserId>; // string & Brand<"UserId">
+type UserId = S.Schema.Type<typeof UserId>; // string & Brand<"UserId">
 ```
 
 Note that you can use `unique symbol`s as brands to ensure uniqueness across modules / packages:
@@ -1413,7 +1423,7 @@ import * as S from "@effect/schema/Schema";
 
 const UserIdBrand = Symbol.for("UserId");
 const UserId = S.string.pipe(S.brand(UserIdBrand));
-type UserId = S.Schema.To<typeof UserId>; // string & Brand<typeof UserIdBrand>
+type UserId = S.Schema.Type<typeof UserId>; // string & Brand<typeof UserIdBrand>
 ```
 
 ### Reusing an existing branded type
@@ -1443,7 +1453,7 @@ enum Fruits {
   Banana,
 }
 
-// Schema<Fruits>
+// S.enums<typeof Fruits>
 S.enums(Fruits);
 ```
 
@@ -1452,11 +1462,14 @@ S.enums(Fruits);
 ```ts
 import * as S from "@effect/schema/Schema";
 
-// Schema<string | null>
+// S.Schema<string | null>
 S.nullable(S.string);
 
 // Schema<string | null | undefined>
 S.nullish(S.string);
+
+// Schema<string | undefined>
+S.orUndefined(S.string);
 ```
 
 ## Unions
@@ -1650,7 +1663,7 @@ assert.deepStrictEqual(
 import * as S from "@effect/schema/Schema";
 
 // Schema<readonly [string, number]>
-S.tuple(S.string, S.number);
+const tuple1 = S.tuple(S.string, S.number);
 ```
 
 ### Append a required element
@@ -1658,8 +1671,11 @@ S.tuple(S.string, S.number);
 ```ts
 import * as S from "@effect/schema/Schema";
 
+// Schema<readonly [string, number]>
+const tuple1 = S.tuple(S.string, S.number);
+
 // Schema<readonly [string, number, boolean]>
-S.tuple(S.string, S.number).pipe(S.element(S.boolean));
+const tuple2 = S.tuple(...tuple1.elements, S.boolean);
 ```
 
 ### Append an optional element
@@ -1667,8 +1683,11 @@ S.tuple(S.string, S.number).pipe(S.element(S.boolean));
 ```ts
 import * as S from "@effect/schema/Schema";
 
+// Schema<readonly [string, number]>
+const tuple1 = S.tuple(S.string, S.number);
+
 // Schema<readonly [string, number, boolean?]>
-S.tuple(S.string, S.number).pipe(S.optionalElement(S.boolean));
+const tuple2 = S.tuple(...tuple1.elements, S.optionalElement(S.boolean));
 ```
 
 ### Append a rest element
@@ -1676,8 +1695,11 @@ S.tuple(S.string, S.number).pipe(S.optionalElement(S.boolean));
 ```ts
 import * as S from "@effect/schema/Schema";
 
+// Schema<readonly [string, number]>
+const tuple1 = S.tuple(S.string, S.number);
+
 // Schema<readonly [string, number, ...boolean[]]>
-S.tuple(S.string, S.number).pipe(S.rest(S.boolean));
+const tuple2 = S.tuple(tuple1.elements, S.boolean);
 ```
 
 ## Arrays
@@ -1733,10 +1755,12 @@ S.mutable(S.struct({ a: S.string, b: S.number }));
 
 **Cheatsheet**
 
-| Combinator | From                                 | To                                                                 |
-| ---------- | ------------------------------------ | ------------------------------------------------------------------ |
-| `optional` | `Schema<A, I, R>`                    | `PropertySignature<I \| undefined, true, A \| undefined, true, R>` |
-| `optional` | `Schema<A, I, R>`, `{ exact: true }` | `PropertySignature<I, true, A, true, R>`                           |
+| Combinator | From                                                 | To                                                                                                      |
+| ---------- | ---------------------------------------------------- | ------------------------------------------------------------------------------------------------------- |
+| `optional` | `Schema<A, I, R>`                                    | `PropertySignature<"?:", string \| undefined, never, "?:", string \| undefined, never>`                 |
+| `optional` | `Schema<A, I, R>`, `{ nullable: true }`              | `PropertySignature<"?:", string \| null \| undefined, never, "?:", string \| null \| undefined, never>` |
+| `optional` | `Schema<A, I, R>`, `{ exact: true }`                 | `PropertySignature<"?:", string, never, "?:", string, never>`                                           |
+| `optional` | `Schema<A, I, R>`, `{ exact: true, nullable: true }` | `PropertySignature<"?:", string \| null, never, "?:", string \| null, never>`                           |
 
 #### optional(schema)
 
@@ -1749,6 +1773,18 @@ S.mutable(S.struct({ a: S.string, b: S.number }));
   - `undefined` -> `undefined`
   - `a` -> `i`
 
+#### optional(schema, { nullable: true })
+
+- decoding
+  - `<missing value>` -> `<missing value>`
+  - `undefined` -> `undefined`
+  - `null` -> `<missing value>`
+  - `i` -> `a`
+- encoding
+  - `<missing value>` -> `<missing value>`
+  - `undefined` -> `undefined`
+  - `a` -> `i`
+
 #### optional(schema, { exact: true })
 
 - decoding
@@ -1758,14 +1794,24 @@ S.mutable(S.struct({ a: S.string, b: S.number }));
   - `<missing value>` -> `<missing value>`
   - `a` -> `i`
 
+#### optional(schema, { exact: true, nullable: true })
+
+- decoding
+  - `<missing value>` -> `<missing value>`
+  - `null` -> `<missing value>`
+  - `i` -> `a`
+- encoding
+  - `<missing value>` -> `<missing value>`
+  - `a` -> `i`
+
 ### Default values
 
-| Combinator | From                                                                   | To                                                             |
-| ---------- | ---------------------------------------------------------------------- | -------------------------------------------------------------- |
-| `optional` | `Schema<A, I, R>`, `{ default: () => A }`                              | `PropertySignature<I \| undefined, true, A, false, R>`         |
-| `optional` | `Schema<A, I, R>`, `{ exact: true, default: () => A }`                 | `PropertySignature<I, true, A, false, R>`                      |
-| `optional` | `Schema<A, I, R>`, `{ nullable: true, default: () => A }`              | `PropertySignature<I \| null \| undefined, true, A, false, R>` |
-| `optional` | `Schema<A, I, R>`, `{ exact: true, nullable: true, default: () => A }` | `PropertySignature<I \| null, true, A, false, R>`              |
+| Combinator | From                                                                   | To                                                                                |
+| ---------- | ---------------------------------------------------------------------- | --------------------------------------------------------------------------------- |
+| `optional` | `Schema<A, I, R>`, `{ default: () => A }`                              | `PropertySignature<":", string, never, "?:", string \| undefined, never>`         |
+| `optional` | `Schema<A, I, R>`, `{ exact: true, default: () => A }`                 | `PropertySignature<":", string, never, "?:", string, never>`                      |
+| `optional` | `Schema<A, I, R>`, `{ nullable: true, default: () => A }`              | `PropertySignature<":", string, never, "?:", string \| null \| undefined, never>` |
+| `optional` | `Schema<A, I, R>`, `{ exact: true, nullable: true, default: () => A }` | `PropertySignature<":", string, never, "?:", string \| null, never>`              |
 
 #### optional(schema, { default: () => A })
 
@@ -1805,12 +1851,12 @@ S.mutable(S.struct({ a: S.string, b: S.number }));
 
 ### Optional fields as `Option`s
 
-| Combinator | From                                                               | To                                                                     |
-| ---------- | ------------------------------------------------------------------ | ---------------------------------------------------------------------- |
-| `optional` | `Schema<A, I, R>`, `{ as: "Option" }`                              | `PropertySignature<I \| undefined, true, Option<A>, false, R>`         |
-| `optional` | `Schema<A, I, R>`, `{ exact: true, as: "Option" }`                 | `PropertySignature<I, true, Option<A>, false, R>`                      |
-| `optional` | `Schema<A, I, R>`, `{ nullable: true, as: "Option" }`              | `PropertySignature<I \| undefined \| null, true, Option<A>, false, R>` |
-| `optional` | `Schema<A, I, R>`, `{ exact: true, nullable: true, as: "Option" }` | `PropertySignature<I \| null, true, Option<A>, false, R>`              |
+| Combinator | From                                                               | To                                                                                        |
+| ---------- | ------------------------------------------------------------------ | ----------------------------------------------------------------------------------------- |
+| `optional` | `Schema<A, I, R>`, `{ as: "Option" }`                              | `PropertySignature<":", Option<string>, never, "?:", string \| undefined, never>`         |
+| `optional` | `Schema<A, I, R>`, `{ exact: true, as: "Option" }`                 | `PropertySignature<":", Option<string>, never, "?:", string, never>`                      |
+| `optional` | `Schema<A, I, R>`, `{ nullable: true, as: "Option" }`              | `PropertySignature<":", Option<string>, never, "?:", string \| null \| undefined, never>` |
+| `optional` | `Schema<A, I, R>`, `{ exact: true, nullable: true, as: "Option" }` | `PropertySignature<":", Option<string>, never, "?:", string \| null, never>`              |
 
 #### optional(schema, { as: "Option" })
 
@@ -1854,19 +1900,33 @@ S.mutable(S.struct({ a: S.string, b: S.number }));
 
 ### Renaming Properties
 
+```ts
+import * as S from "@effect/schema/Schema";
+
+const schema = S.struct({
+  a: S.propertySignature(S.string).pipe(S.fromKey("c")),
+  b: S.number,
+});
+
+console.log(S.decodeUnknownSync(schema)({ c: "c", b: 1 }));
+// Output: { a: "c", b: 1 }
+```
+
+### Renaming Properties Of An Existing Schema
+
 To rename one or more properties, you can utilize the `rename` API:
 
 ```ts
 import * as S from "@effect/schema/Schema";
 
 // Original Schema
-const originalSchema = S.struct({ a: S.string, b: S.number });
+const originalSchema = S.struct({ c: S.string, b: S.number });
 
 // Renaming the "a" property to "c"
-const renamedSchema = S.rename(originalSchema, { a: "c" });
+const renamedSchema = S.rename(originalSchema, { c: "a" });
 
-console.log(S.decodeUnknownSync(renamedSchema)({ a: "a", b: 1 }));
-// Output: { c: "a", b: 1 }
+console.log(S.decodeUnknownSync(renamedSchema)({ c: "c", b: 1 }));
+// Output: { a: "c", b: 1 }
 ```
 
 In the example above, we have an original schema with properties "a" and "b." Using the `rename` API, we create a new schema where we rename the "a" property to "c." The resulting schema, when used with `S.decodeUnknownSync`, transforms the input object by renaming the specified property.
@@ -1889,7 +1949,7 @@ Let's dive into an illustrative example to better understand how classes work:
 import * as S from "@effect/schema/Schema";
 
 // Define your schema by providing the type to `Class` and the desired fields
-class Person extends S.Class<Person>()({
+class Person extends S.Class<Person>("Person")({
   id: S.number,
   name: S.string.pipe(S.nonEmpty()),
 }) {}
@@ -1903,7 +1963,7 @@ The class constructor serves as a validation and instantiation tool. It ensures
 const tim = new Person({ id: 1, name: "Tim" });
 ```
 
-Keep in mind that it throws an error for invalid properties:
+Keep in mind that it throws an error for invalid properties...
 
 ```ts
 new Person({ id: 1, name: "" });
@@ -1916,6 +1976,12 @@ Error: { id: number; name: a non empty string }
 */
 ```
 
+...unless you explicitly disable validation:
+
+```ts
+new Person({ id: 1, name: "" }, true); // no error
+```
+
 ### Custom Getters and Methods
 
 For more flexibility, you can also introduce custom getters and methods:
@@ -1923,7 +1989,7 @@ For more flexibility, you can also introduce custom getters and methods:
 ```ts
 import * as S from "@effect/schema/Schema";
 
-class Person extends S.Class<Person>()({
+class Person extends S.Class<Person>("Person")({
   id: S.number,
   name: S.string.pipe(S.nonEmpty()),
 }) {
@@ -1944,15 +2010,20 @@ The class constructor itself is a Schema, and can be assigned/provided anywhere
 ```ts
 import * as S from "@effect/schema/Schema";
 
-class Person extends S.Class<Person>()({
+class Person extends S.Class<Person>("Person")({
   id: S.number,
   name: S.string.pipe(S.nonEmpty()),
 }) {}
 
 console.log(S.isSchema(Person)); // true
 
-// Schema<{ readonly id: number; name: string; }>
-Person.struct;
+/*
+{
+    readonly id: S.$number;
+    readonly name: S.Schema<string, string, never>;
+}
+*/
+Person.fields;
 ```
 
 ### Tagged Class variants
@@ -1985,7 +2056,7 @@ In situations where you need to augment your existing class with more fields, th
 ```ts
 import * as S from "@effect/schema/Schema";
 
-class Person extends S.Class<Person>()({
+class Person extends S.Class<Person>("Person")({
   id: S.number,
   name: S.string.pipe(S.nonEmpty()),
 }) {
@@ -1994,7 +2065,7 @@ class Person extends S.Class<Person>()({
   }
 }
 
-class PersonWithAge extends Person.extend<PersonWithAge>()({
+class PersonWithAge extends Person.extend<PersonWithAge>("PersonWithAge")({
   age: S.number,
 }) {
   get isAdult() {
@@ -2013,7 +2084,7 @@ import * as S from "@effect/schema/Schema";
 import * as Effect from "effect/Effect";
 import * as Option from "effect/Option";
 
-export class Person extends S.Class<Person>()({
+export class Person extends S.Class<Person>("Person")({
   id: S.number,
   name: S.string,
 }) {}
@@ -2024,17 +2095,19 @@ Output:
 Person { id: 1, name: 'name' }
 */
 
-function getAge(id: number): Effect.Effect<never, Error, number> {
+function getAge(id: number): Effect.Effect<number, Error> {
   return Effect.succeed(id + 2);
 }
 
-export class PersonWithTransform extends Person.transformOrFail<PersonWithTransform>()(
+export class PersonWithTransform extends Person.transformOrFail<PersonWithTransform>(
+  "PersonWithTransform"
+)(
   {
     age: S.optional(S.number, { exact: true, as: "Option" }),
   },
   (input) =>
     Effect.mapBoth(getAge(input.id), {
-      onFailure: (e) => ParseResult.type(S.string.ast, input.id, e.message),
+      onFailure: (e) => new ParseResult.Type(S.string.ast, input.id, e.message),
       // must return { age: Option<number> }
       onSuccess: (age) => ({ ...input, age: Option.some(age) }),
     }),
@@ -2053,13 +2126,15 @@ PersonWithTransform {
 }
 */
 
-export class PersonWithTransformFrom extends Person.transformOrFailFrom<PersonWithTransformFrom>()(
+export class PersonWithTransformFrom extends Person.transformOrFailFrom<PersonWithTransformFrom>(
+  "PersonWithTransformFrom"
+)(
   {
     age: S.optional(S.number, { exact: true, as: "Option" }),
   },
   (input) =>
     Effect.mapBoth(getAge(input.id), {
-      onFailure: (e) => ParseResult.type(S.string.ast, input, e.message),
+      onFailure: (e) => new ParseResult.Type(S.string.ast, input, e.message),
       // must return { age?: number }
       onSuccess: (age) => (age > 18 ? { ...input, age } : { ...input }),
     }),
@@ -2238,13 +2313,32 @@ The `extend` combinator allows you to add additional fields or index signatures
 ```ts
 import * as S from "@effect/schema/Schema";
 
+const schema = S.struct({ a: S.string, b: S.string });
+
 // Schema<{ readonly [x: string]: string; readonly a: string; readonly b: string; readonly c: string; }>
-S.struct({ a: S.string, b: S.string }).pipe(
+const extended = schema.pipe(
   S.extend(S.struct({ c: S.string })), // <= you can add more fields
   S.extend(S.record(S.string, S.string)) // <= you can add index signatures
 );
 ```
 
+Alternatively, you can utilize the `fields` property of structs:
+
+```ts
+import * as S from "@effect/schema/Schema";
+
+const schema = S.struct({ a: S.string, b: S.string });
+
+// Schema<{ readonly [x: string]: string; readonly a: string; readonly b: string; readonly c: string; }>
+const extended = S.struct(
+  {
+    ...schema.fields,
+    c: S.string,
+  },
+  { key: S.string, value: S.string }
+);
+```
+
 ## Compose
 
 Combining and reusing schemas is a common requirement, the `compose` combinator allows you to do just that. It enables you to combine two schemas, `Schema<B, A, R1>` and `Schema<C, B, R2>`, into a single schema `Schema<C, A, R1 | R2>`:
@@ -2290,7 +2384,7 @@ S.compose(S.union(S.null, S.string), S.NumberFromString);
 S.compose(S.union(S.null, S.string), S.NumberFromString, { strict: false });
 ```
 
-## InstanceOf
+## instanceOf
 
 In the following section, we demonstrate how to use the `instanceOf` combinator to create a `Schema` for a class instance.
 
@@ -2350,7 +2444,7 @@ const Expression: S.Schema<Expression> = S.struct({
 
 const Operation: S.Schema<Operation> = S.struct({
   type: S.literal("operation"),
-  operator: S.union(S.literal("+"), S.literal("-")),
+  operator: S.literal("+", "-"),
   left: Expression,
   right: Expression,
 });
@@ -2433,7 +2527,9 @@ export const transformedSchema: S.Schema<boolean, string> = S.transformOrFail(
       ? ParseResult.succeed(true)
       : s === "false"
         ? ParseResult.succeed(false)
-        : ParseResult.fail(ParseResult.type(S.literal("true", "false").ast, s)),
+        : ParseResult.fail(
+            new ParseResult.Type(S.literal("true", "false").ast, s)
+          ),
   // define a function that converts a boolean into a string
   (b) => ParseResult.succeed(String(b))
 );
@@ -2447,7 +2543,7 @@ import * as S from "@effect/schema/Schema";
 import * as TreeFormatter from "@effect/schema/TreeFormatter";
 import * as Effect from "effect/Effect";
 
-const api = (url: string): Effect.Effect<never, Error, unknown> =>
+const api = (url: string): Effect.Effect<unknown, Error> =>
   Effect.tryPromise({
     try: () =>
       fetch(url).then((res) => {
@@ -2466,7 +2562,7 @@ const PeopleIdFromString = S.transformOrFail(
   PeopleId,
   (s, _, ast) =>
     Effect.mapBoth(api(`https://swapi.dev/api/people/${s}`), {
-      onFailure: (e) => ParseResult.type(ast, s, e.message),
+      onFailure: (e) => new ParseResult.Type(ast, s, e.message),
       onSuccess: () => s,
     }),
   ParseResult.succeed
@@ -2508,9 +2604,9 @@ import * as Context from "effect/Context";
 import * as Effect from "effect/Effect";
 import * as Layer from "effect/Layer";
 
-const Fetch = Context.GenericTag<"Fetch", typeof fetch>();
+const Fetch = Context.GenericTag<"Fetch", typeof fetch>("Fetch");
 
-const api = (url: string): Effect.Effect<"Fetch", Error, unknown> =>
+const api = (url: string): Effect.Effect<unknown, Error, "Fetch"> =>
   Fetch.pipe(
     Effect.flatMap((fetch) =>
       Effect.tryPromise({
@@ -2533,7 +2629,7 @@ const PeopleIdFromString = S.transformOrFail(
   PeopleId,
   (s, _, ast) =>
     Effect.mapBoth(api(`https://swapi.dev/api/people/${s}`), {
-      onFailure: (e) => ParseResult.type(ast, s, e.message),
+      onFailure: (e) => new ParseResult.Type(ast, s, e.message),
       onSuccess: () => s,
     }),
   ParseResult.succeed
@@ -3228,7 +3324,7 @@ export const myReadonlySet = <A, I, R>(
         // Return a Set containing the parsed elements
         return ParseResult.map(elements, (as): ReadonlySet<A> => new Set(as));
       }
-      return ParseResult.fail(ParseResult.type(ast, input));
+      return ParseResult.fail(new ParseResult.Type(ast, input));
     },
     // Encoding function
     (item) => (input, parseOptions, ast) => {
@@ -3241,7 +3337,7 @@ export const myReadonlySet = <A, I, R>(
         // Return a Set containing the parsed elements
         return ParseResult.map(elements, (is): ReadonlySet<I> => new Set(is));
       }
-      return ParseResult.fail(ParseResult.type(ast, input));
+      return ParseResult.fail(new ParseResult.Type(ast, input));
     },
     {
       description: `ReadonlySet<${S.format(item)}>`,
@@ -3401,7 +3497,7 @@ const NormalizeUrlString: S.Schema<string> = S.transformOrFail(
     ParseResult.try({
       try: () => new URL(value).toString(),
       catch: (err) =>
-        ParseResult.type(
+        new ParseResult.Type(
           ast,
           value,
           err instanceof Error ? err.message : undefined
@@ -3451,18 +3547,17 @@ Then we can implement the body using the APIs exported by the `@effect/schema/AS
 ```ts
 import * as AST from "@effect/schema/AST";
 import * as S from "@effect/schema/Schema";
-import * as Option from "effect/Option";
 
 const pair = <A, I, R>(
   schema: S.Schema<A, I, R>
 ): S.Schema<readonly [A, A], readonly [I, I], R> => {
-  const element = AST.createElement(
+  const element = new AST.Element(
     schema.ast, // <= the element type
     false // <= is optional?
   );
-  const tuple = AST.createTuple(
+  const tuple = new AST.TupleType(
     [element, element], // <= elements definitions
-    Option.none(), // <= rest element
+    [], // <= rest element
     true // <= is readonly?
   );
   return S.make(tuple); // <= wrap the AST value in a Schema
@@ -3529,7 +3624,7 @@ const DeprecatedId = Symbol.for(
 );
 
 const deprecated = <A, I, R>(self: S.Schema<A, I, R>): S.Schema<A, I, R> =>
-  S.make(AST.setAnnotation(self.ast, DeprecatedId, true));
+  S.make(AST.annotations(self.ast, { [DeprecatedId]: true }));
 
 const schema = deprecated(S.string);
 
@@ -3562,7 +3657,7 @@ const DeprecatedId = Symbol.for(
 );
 
 const deprecated = <A, I, R>(self: S.Schema<A, I, R>): S.Schema<A, I, R> =>
-  S.make(AST.setAnnotation(self.ast, DeprecatedId, true));
+  S.make(AST.annotations(self.ast, { [DeprecatedId]: true }));
 
 const schema = deprecated(S.string);
 
@@ -3779,7 +3874,7 @@ const IntFromString = S.transformOrFail(
   (s, _, ast) => {
     const n = Number(s);
     return Number.isNaN(n)
-      ? ParseResult.fail(ParseResult.type(ast, s))
+      ? ParseResult.fail(new ParseResult.Type(ast, s))
       : ParseResult.succeed(n);
   },
   (n) => ParseResult.succeed(String(n))
@@ -3797,7 +3892,7 @@ throws:
 Error: Person
 └─ ["age"]
    └─ IntFromString
-      └─ From side transformation failure
+      └─ Encoded side transformation failure
          └─ Expected a string, actual null
 */
 
@@ -3808,7 +3903,7 @@ throws:
 Error: Person
 └─ ["age"]
    └─ IntFromString
-      └─ To side transformation failure
+      └─ Type side transformation failure
          └─ Int
             └─ Predicate refinement failure
                └─ Expected Int (an integer), actual 1.2
@@ -3840,7 +3935,7 @@ const IntFromString = S.transformOrFail(
   (s, _, ast) => {
     const n = Number(s);
     return Number.isNaN(n)
-      ? ParseResult.fail(ParseResult.type(ast, s))
+      ? ParseResult.fail(new ParseResult.Type(ast, s))
       : ParseResult.succeed(n);
   },
   (n) => ParseResult.succeed(String(n))
diff --git a/dist/cjs/AST.js b/dist/cjs/AST.js
index 44be0a7be49e0d6997055ecab5c0271583566dd3..3e61780f5600ff07295ed0e2dad5636f28188935 100644
--- a/dist/cjs/AST.js
+++ b/dist/cjs/AST.js
@@ -3,8 +3,8 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.partial = exports.orUndefined = exports.omit = exports.objectKeyword = exports.numberKeyword = exports.neverKeyword = exports.mutable = exports.mergeAnnotations = exports.keyof = exports.isVoidKeyword = exports.isUnknownKeyword = exports.isUniqueSymbol = exports.isUnion = exports.isUndefinedKeyword = exports.isTypeLiteralTransformation = exports.isTypeLiteral = exports.isTuple = exports.isTransform = exports.isTemplateLiteral = exports.isSymbolKeyword = exports.isSuspend = exports.isStringKeyword = exports.isRefinement = exports.isParameter = exports.isObjectKeyword = exports.isNumberKeyword = exports.isNeverKeyword = exports.isLiteral = exports.isFinalTransformation = exports.isFinalPropertySignatureTransformation = exports.isEnums = exports.isDeclaration = exports.isComposeTransformation = exports.isBooleanKeyword = exports.isBigIntKeyword = exports.isAnyKeyword = exports.hash = exports.getWeight = exports.getToPropertySignatures = exports.getToIndexSignatures = exports.getTitleAnnotation = exports.getTemplateLiteralRegex = exports.getPropertySignatures = exports.getPropertyKeyIndexedAccess = exports.getParameterBase = exports.getNumberIndexedAccess = exports.getMessageAnnotation = exports.getJSONSchemaAnnotation = exports.getIdentifierAnnotation = exports.getExamplesAnnotation = exports.getDocumentationAnnotation = exports.getDescriptionAnnotation = exports.getDefaultAnnotation = exports.getConcurrencyAnnotation = exports.getCompiler = exports.getCardinality = exports.getBatchingAnnotation = exports.getAnnotation = exports.from = exports.formatUnknown = exports.format = exports.createUniqueSymbol = exports.createUnion = exports.createTypeLiteralTransformation = exports.createTypeLiteral = exports.createTuple = exports.createTransform = exports.createTemplateLiteral = exports.createSuspend = exports.createRefinement = exports.createRecord = exports.createPropertySignatureTransform = exports.createPropertySignature = exports.createLiteral = exports.createIndexSignature = exports.createFinalTransformation = exports.createFinalPropertySignatureTransformation = exports.createEnums = exports.createElement = exports.createDeclaration = exports.composeTransformation = exports.compose = exports.booleanKeyword = exports.bigIntKeyword = exports.appendRestElement = exports.appendElement = exports.anyKeyword = exports._null = exports.TypeAnnotationId = exports.TitleAnnotationId = exports.MessageAnnotationId = exports.JSONSchemaAnnotationId = exports.IdentifierAnnotationId = exports.ExamplesAnnotationId = exports.DocumentationAnnotationId = exports.DescriptionAnnotationId = exports.DefaultAnnotationId = exports.ConcurrencyAnnotationId = exports.BrandAnnotationId = exports.BatchingAnnotationId = void 0;
-exports.voidKeyword = exports.unknownKeyword = exports.undefinedKeyword = exports.toString = exports.to = exports.symbolKeyword = exports.stringKeyword = exports.setAnnotation = exports.required = exports.rename = exports.pick = void 0;
+exports.isTupleType = exports.isTransform = exports.isTemplateLiteral = exports.isSymbolKeyword = exports.isSuspend = exports.isStringKeyword = exports.isRefinement = exports.isParameter = exports.isObjectKeyword = exports.isNumberKeyword = exports.isNeverKeyword = exports.isMembers = exports.isLiteral = exports.isFinalTransformation = exports.isEnums = exports.isDeclaration = exports.isComposeTransformation = exports.isBooleanKeyword = exports.isBigIntKeyword = exports.isAnyKeyword = exports.hash = exports.getWeight = exports.getToPropertySignatures = exports.getToIndexSignatures = exports.getTitleAnnotation = exports.getTemplateLiteralRegex = exports.getSurrogateSchemaAnnotation = exports.getPropertySignatures = exports.getPropertyKeyIndexedAccess = exports.getParameterBase = exports.getNumberIndexedAccess = exports.getMessageAnnotation = exports.getJSONSchemaAnnotation = exports.getJSONIdentifierAnnotation = exports.getJSONIdentifier = exports.getIdentifierAnnotation = exports.getExamplesAnnotation = exports.getDuplicatePropertySignatureErrorMessage = exports.getDocumentationAnnotation = exports.getDescriptionAnnotation = exports.getDefaultAnnotation = exports.getConcurrencyAnnotation = exports.getCompiler = exports.getCardinality = exports.getBrandAnnotation = exports.getBatchingAnnotation = exports.getAnnotation = exports.encodedAST = exports.defaultParseOption = exports.composeTransformation = exports.compose = exports.booleanKeyword = exports.bigIntKeyword = exports.anyKeyword = exports.annotations = exports._null = exports.VoidKeyword = exports.UnknownKeyword = exports.UniqueSymbol = exports.Union = exports.UndefinedKeyword = exports.TypeLiteralTransformation = exports.TypeLiteral = exports.TypeAnnotationId = exports.TupleType = exports.Transformation = exports.TitleAnnotationId = exports.TemplateLiteralSpan = exports.TemplateLiteral = exports.SymbolKeyword = exports.Suspend = exports.SurrogateAnnotationId = exports.StringKeyword = exports.Refinement = exports.PropertySignatureTransformation = exports.PropertySignature = exports.ObjectKeyword = exports.NumberKeyword = exports.NeverKeyword = exports.MessageAnnotationId = exports.Literal = exports.JSONSchemaAnnotationId = exports.JSONIdentifierAnnotationId = exports.IndexSignature = exports.IdentifierAnnotationId = exports.FinalTransformation = exports.ExamplesAnnotationId = exports.Enums = exports.Element = exports.DocumentationAnnotationId = exports.DescriptionAnnotationId = exports.DefaultAnnotationId = exports.Declaration = exports.ConcurrencyAnnotationId = exports.ComposeTransformation = exports.BrandAnnotationId = exports.BooleanKeyword = exports.BigIntKeyword = exports.BatchingAnnotationId = exports.AnyKeyword = void 0;
+exports.voidKeyword = exports.unknownKeyword = exports.unify = exports.undefinedKeyword = exports.typeAST = exports.symbolKeyword = exports.stringKeyword = exports.required = exports.rename = exports.record = exports.pick = exports.partial = exports.orUndefined = exports.omit = exports.objectKeyword = exports.numberKeyword = exports.neverKeyword = exports.mutable = exports.mapMembers = exports.keyof = exports.isVoidKeyword = exports.isUnknownKeyword = exports.isUniqueSymbol = exports.isUnion = exports.isUndefinedKeyword = exports.isTypeLiteralTransformation = exports.isTypeLiteral = void 0;
 var _Function = /*#__PURE__*/require("effect/Function");
 var _GlobalValue = /*#__PURE__*/require("effect/GlobalValue");
 var Hash = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Hash"));
@@ -13,7 +13,7 @@ var Option = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/
 var Order = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Order"));
 var Predicate = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Predicate"));
 var ReadonlyArray = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ReadonlyArray"));
-var Internal = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/ast.js"));
+var _util = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/util.js"));
 function _getRequireWildcardCache(e) {
   if ("function" != typeof WeakMap) return null;
   var r = new WeakMap(),
@@ -103,11 +103,20 @@ const ConcurrencyAnnotationId = exports.ConcurrencyAnnotationId = /*#__PURE__*/S
  * @since 1.0.0
  */
 const BatchingAnnotationId = exports.BatchingAnnotationId = /*#__PURE__*/Symbol.for("@effect/schema/annotation/Batching");
+/** @internal */
+const SurrogateAnnotationId = exports.SurrogateAnnotationId = /*#__PURE__*/Symbol.for("@effect/schema/annotation/Surrogate");
+/** @internal */
+const JSONIdentifierAnnotationId = exports.JSONIdentifierAnnotationId = /*#__PURE__*/Symbol.for("@effect/schema/annotation/JSONIdentifier");
 /**
  * @category annotations
  * @since 1.0.0
  */
 const getAnnotation = exports.getAnnotation = /*#__PURE__*/(0, _Function.dual)(2, (annotated, key) => Object.prototype.hasOwnProperty.call(annotated.annotations, key) ? Option.some(annotated.annotations[key]) : Option.none());
+/**
+ * @category annotations
+ * @since 1.0.0
+ */
+const getBrandAnnotation = exports.getBrandAnnotation = /*#__PURE__*/getAnnotation(BrandAnnotationId);
 /**
  * @category annotations
  * @since 1.0.0
@@ -158,316 +167,853 @@ const getConcurrencyAnnotation = exports.getConcurrencyAnnotation = /*#__PURE__*
  * @since 1.0.0
  */
 const getBatchingAnnotation = exports.getBatchingAnnotation = /*#__PURE__*/getAnnotation(BatchingAnnotationId);
+/** @internal */
+const getSurrogateSchemaAnnotation = exports.getSurrogateSchemaAnnotation = /*#__PURE__*/getAnnotation(SurrogateAnnotationId);
+/** @internal */
+const getJSONIdentifierAnnotation = exports.getJSONIdentifierAnnotation = /*#__PURE__*/getAnnotation(JSONIdentifierAnnotationId);
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-const createDeclaration = (typeParameters, decodeUnknown, encodeUnknown, annotations = {}) => ({
-  _tag: "Declaration",
-  typeParameters,
-  decodeUnknown,
-  encodeUnknown,
-  annotations
-});
+class Declaration {
+  typeParameters;
+  decodeUnknown;
+  encodeUnknown;
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "Declaration";
+  constructor(typeParameters, decodeUnknown, encodeUnknown, annotations = {}) {
+    this.typeParameters = typeParameters;
+    this.decodeUnknown = decodeUnknown;
+    this.encodeUnknown = encodeUnknown;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => "<declaration schema>");
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      typeParameters: this.typeParameters.map(ast => ast.toJSON()),
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+exports.Declaration = Declaration;
+const createASTGuard = tag => ast => ast._tag === tag;
 /**
  * @category guards
  * @since 1.0.0
  */
-exports.createDeclaration = createDeclaration;
-const isDeclaration = ast => ast._tag === "Declaration";
+const isDeclaration = exports.isDeclaration = /*#__PURE__*/createASTGuard("Declaration");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.isDeclaration = isDeclaration;
-const createLiteral = (literal, annotations = {}) => ({
-  _tag: "Literal",
-  literal,
-  annotations
-});
+class Literal {
+  literal;
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "Literal";
+  constructor(literal, annotations = {}) {
+    this.literal = literal;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => _util.formatUnknown(this.literal));
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      literal: Predicate.isBigInt(this.literal) ? String(this.literal) : this.literal,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
 /**
  * @category guards
  * @since 1.0.0
  */
-exports.createLiteral = createLiteral;
-const isLiteral = ast => ast._tag === "Literal";
+exports.Literal = Literal;
+const isLiteral = exports.isLiteral = /*#__PURE__*/createASTGuard("Literal");
 /** @internal */
-exports.isLiteral = isLiteral;
-const _null = exports._null = /*#__PURE__*/createLiteral(null, {
+const _null = exports._null = /*#__PURE__*/new Literal(null, {
   [IdentifierAnnotationId]: "null"
 });
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-const createUniqueSymbol = (symbol, annotations = {}) => ({
-  _tag: "UniqueSymbol",
-  symbol,
-  annotations
-});
+class UniqueSymbol {
+  symbol;
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "UniqueSymbol";
+  constructor(symbol, annotations = {}) {
+    this.symbol = symbol;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => _util.formatUnknown(this.symbol));
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      symbol: String(this.symbol),
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
 /**
  * @category guards
  * @since 1.0.0
  */
-exports.createUniqueSymbol = createUniqueSymbol;
-const isUniqueSymbol = ast => ast._tag === "UniqueSymbol";
+exports.UniqueSymbol = UniqueSymbol;
+const isUniqueSymbol = exports.isUniqueSymbol = /*#__PURE__*/createASTGuard("UniqueSymbol");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.isUniqueSymbol = isUniqueSymbol;
-const undefinedKeyword = exports.undefinedKeyword = {
-  _tag: "UndefinedKeyword",
-  annotations: {
-    [TitleAnnotationId]: "undefined"
+class UndefinedKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "UndefinedKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+exports.UndefinedKeyword = UndefinedKeyword;
+const undefinedKeyword = exports.undefinedKeyword = /*#__PURE__*/new UndefinedKeyword({
+  [TitleAnnotationId]: "undefined"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-const isUndefinedKeyword = ast => ast._tag === "UndefinedKeyword";
+const isUndefinedKeyword = exports.isUndefinedKeyword = /*#__PURE__*/createASTGuard("UndefinedKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.isUndefinedKeyword = isUndefinedKeyword;
-const voidKeyword = exports.voidKeyword = {
-  _tag: "VoidKeyword",
-  annotations: {
-    [TitleAnnotationId]: "void"
+class VoidKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "VoidKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+exports.VoidKeyword = VoidKeyword;
+const voidKeyword = exports.voidKeyword = /*#__PURE__*/new VoidKeyword({
+  [TitleAnnotationId]: "void"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-const isVoidKeyword = ast => ast._tag === "VoidKeyword";
+const isVoidKeyword = exports.isVoidKeyword = /*#__PURE__*/createASTGuard("VoidKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.isVoidKeyword = isVoidKeyword;
-const neverKeyword = exports.neverKeyword = {
-  _tag: "NeverKeyword",
-  annotations: {
-    [TitleAnnotationId]: "never"
+class NeverKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "NeverKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+exports.NeverKeyword = NeverKeyword;
+const neverKeyword = exports.neverKeyword = /*#__PURE__*/new NeverKeyword({
+  [TitleAnnotationId]: "never"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-const isNeverKeyword = ast => ast._tag === "NeverKeyword";
+const isNeverKeyword = exports.isNeverKeyword = /*#__PURE__*/createASTGuard("NeverKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.isNeverKeyword = isNeverKeyword;
-const unknownKeyword = exports.unknownKeyword = {
-  _tag: "UnknownKeyword",
-  annotations: {
-    [TitleAnnotationId]: "unknown"
+class UnknownKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "UnknownKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+exports.UnknownKeyword = UnknownKeyword;
+const unknownKeyword = exports.unknownKeyword = /*#__PURE__*/new UnknownKeyword({
+  [TitleAnnotationId]: "unknown"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-const isUnknownKeyword = ast => ast._tag === "UnknownKeyword";
+const isUnknownKeyword = exports.isUnknownKeyword = /*#__PURE__*/createASTGuard("UnknownKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.isUnknownKeyword = isUnknownKeyword;
-const anyKeyword = exports.anyKeyword = {
-  _tag: "AnyKeyword",
-  annotations: {
-    [TitleAnnotationId]: "any"
+class AnyKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "AnyKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+exports.AnyKeyword = AnyKeyword;
+const anyKeyword = exports.anyKeyword = /*#__PURE__*/new AnyKeyword({
+  [TitleAnnotationId]: "any"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-const isAnyKeyword = ast => ast._tag === "AnyKeyword";
+const isAnyKeyword = exports.isAnyKeyword = /*#__PURE__*/createASTGuard("AnyKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.isAnyKeyword = isAnyKeyword;
-const stringKeyword = exports.stringKeyword = {
-  _tag: "StringKeyword",
-  annotations: {
-    [TitleAnnotationId]: "string",
-    [DescriptionAnnotationId]: "a string"
+class StringKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "StringKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+exports.StringKeyword = StringKeyword;
+const stringKeyword = exports.stringKeyword = /*#__PURE__*/new StringKeyword({
+  [TitleAnnotationId]: "string",
+  [DescriptionAnnotationId]: "a string"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-const isStringKeyword = ast => ast._tag === "StringKeyword";
+const isStringKeyword = exports.isStringKeyword = /*#__PURE__*/createASTGuard("StringKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.isStringKeyword = isStringKeyword;
-const numberKeyword = exports.numberKeyword = {
-  _tag: "NumberKeyword",
-  annotations: {
-    [TitleAnnotationId]: "number",
-    [DescriptionAnnotationId]: "a number"
+class NumberKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "NumberKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+exports.NumberKeyword = NumberKeyword;
+const numberKeyword = exports.numberKeyword = /*#__PURE__*/new NumberKeyword({
+  [TitleAnnotationId]: "number",
+  [DescriptionAnnotationId]: "a number"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-const isNumberKeyword = ast => ast._tag === "NumberKeyword";
+const isNumberKeyword = exports.isNumberKeyword = /*#__PURE__*/createASTGuard("NumberKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.isNumberKeyword = isNumberKeyword;
-const booleanKeyword = exports.booleanKeyword = {
-  _tag: "BooleanKeyword",
-  annotations: {
-    [TitleAnnotationId]: "boolean",
-    [DescriptionAnnotationId]: "a boolean"
+class BooleanKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "BooleanKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+exports.BooleanKeyword = BooleanKeyword;
+const booleanKeyword = exports.booleanKeyword = /*#__PURE__*/new BooleanKeyword({
+  [TitleAnnotationId]: "boolean",
+  [DescriptionAnnotationId]: "a boolean"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-const isBooleanKeyword = ast => ast._tag === "BooleanKeyword";
+const isBooleanKeyword = exports.isBooleanKeyword = /*#__PURE__*/createASTGuard("BooleanKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.isBooleanKeyword = isBooleanKeyword;
-const bigIntKeyword = exports.bigIntKeyword = {
-  _tag: "BigIntKeyword",
-  annotations: {
-    [TitleAnnotationId]: "bigint",
-    [DescriptionAnnotationId]: "a bigint"
+class BigIntKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "BigIntKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+exports.BigIntKeyword = BigIntKeyword;
+const bigIntKeyword = exports.bigIntKeyword = /*#__PURE__*/new BigIntKeyword({
+  [TitleAnnotationId]: "bigint",
+  [DescriptionAnnotationId]: "a bigint"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-const isBigIntKeyword = ast => ast._tag === "BigIntKeyword";
+const isBigIntKeyword = exports.isBigIntKeyword = /*#__PURE__*/createASTGuard("BigIntKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.isBigIntKeyword = isBigIntKeyword;
-const symbolKeyword = exports.symbolKeyword = {
-  _tag: "SymbolKeyword",
-  annotations: {
-    [TitleAnnotationId]: "symbol",
-    [DescriptionAnnotationId]: "a symbol"
+class SymbolKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "SymbolKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+exports.SymbolKeyword = SymbolKeyword;
+const symbolKeyword = exports.symbolKeyword = /*#__PURE__*/new SymbolKeyword({
+  [TitleAnnotationId]: "symbol",
+  [DescriptionAnnotationId]: "a symbol"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-const isSymbolKeyword = ast => ast._tag === "SymbolKeyword";
+const isSymbolKeyword = exports.isSymbolKeyword = /*#__PURE__*/createASTGuard("SymbolKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.isSymbolKeyword = isSymbolKeyword;
-const objectKeyword = exports.objectKeyword = {
-  _tag: "ObjectKeyword",
-  annotations: {
-    [IdentifierAnnotationId]: "object",
-    [TitleAnnotationId]: "object",
-    [DescriptionAnnotationId]: "an object in the TypeScript meaning, i.e. the `object` type"
+class ObjectKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "ObjectKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+exports.ObjectKeyword = ObjectKeyword;
+const objectKeyword = exports.objectKeyword = /*#__PURE__*/new ObjectKeyword({
+  [IdentifierAnnotationId]: "object",
+  [TitleAnnotationId]: "object",
+  [DescriptionAnnotationId]: "an object in the TypeScript meaning, i.e. the `object` type"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-const isObjectKeyword = ast => ast._tag === "ObjectKeyword";
+const isObjectKeyword = exports.isObjectKeyword = /*#__PURE__*/createASTGuard("ObjectKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.isObjectKeyword = isObjectKeyword;
-const createEnums = (enums, annotations = {}) => ({
-  _tag: "Enums",
-  enums,
-  annotations
-});
+class Enums {
+  enums;
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "Enums";
+  constructor(enums, annotations = {}) {
+    this.enums = enums;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => `<enum ${this.enums.length} value(s): ${this.enums.map((_, value) => JSON.stringify(value)).join(" | ")}>`);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      enums: this.enums,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
 /**
  * @category guards
  * @since 1.0.0
  */
-exports.createEnums = createEnums;
-const isEnums = ast => ast._tag === "Enums";
+exports.Enums = Enums;
+const isEnums = exports.isEnums = /*#__PURE__*/createASTGuard("Enums");
 /**
- * @category constructors
+ * @category model
+ * @since 1.0.0
+ */
+class TemplateLiteralSpan {
+  type;
+  literal;
+  constructor(type, literal) {
+    this.type = type;
+    this.literal = literal;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString() {
+    switch (this.type._tag) {
+      case "StringKeyword":
+        return "${string}";
+      case "NumberKeyword":
+        return "${number}";
+    }
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      type: this.type.toJSON(),
+      literal: this.literal
+    };
+  }
+}
+/**
+ * @category model
  * @since 1.0.0
  */
-exports.isEnums = isEnums;
-const createTemplateLiteral = (head, spans, annotations = {}) => ReadonlyArray.isNonEmptyReadonlyArray(spans) ? {
-  _tag: "TemplateLiteral",
-  head,
-  spans,
-  annotations
-} : createLiteral(head);
+exports.TemplateLiteralSpan = TemplateLiteralSpan;
+class TemplateLiteral {
+  head;
+  spans;
+  annotations;
+  static make = (head, spans, annotations = {}) => ReadonlyArray.isNonEmptyReadonlyArray(spans) ? new TemplateLiteral(head, spans, annotations) : new Literal(head);
+  /**
+   * @since 1.0.0
+   */
+  _tag = "TemplateLiteral";
+  constructor(head, spans, annotations = {}) {
+    this.head = head;
+    this.spans = spans;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => formatTemplateLiteral(this));
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      head: this.head,
+      spans: this.spans.map(span => span.toJSON()),
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+exports.TemplateLiteral = TemplateLiteral;
+const formatTemplateLiteral = ast => "`" + ast.head + ast.spans.map(span => String(span) + span.literal).join("") + "`";
 /**
  * @category guards
  * @since 1.0.0
  */
-exports.createTemplateLiteral = createTemplateLiteral;
-const isTemplateLiteral = ast => ast._tag === "TemplateLiteral";
+const isTemplateLiteral = exports.isTemplateLiteral = /*#__PURE__*/createASTGuard("TemplateLiteral");
 /**
+ * @category model
  * @since 1.0.0
  */
-exports.isTemplateLiteral = isTemplateLiteral;
-const createElement = (type, isOptional) => ({
-  type,
-  isOptional
-});
+class Element {
+  type;
+  isOptional;
+  constructor(type, isOptional) {
+    this.type = type;
+    this.isOptional = isOptional;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      type: this.type.toJSON(),
+      isOptional: this.isOptional
+    };
+  }
+}
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.createElement = createElement;
-const createTuple = (elements, rest, isReadonly, annotations = {}) => ({
-  _tag: "Tuple",
-  elements,
-  rest,
-  isReadonly,
-  annotations
-});
+exports.Element = Element;
+class TupleType {
+  elements;
+  rest;
+  isReadonly;
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "TupleType";
+  constructor(elements, rest, isReadonly, annotations = {}) {
+    this.elements = elements;
+    this.rest = rest;
+    this.isReadonly = isReadonly;
+    this.annotations = annotations;
+    let hasOptionalElement = false;
+    let hasIllegalRequiredElement = false;
+    for (const e of elements) {
+      if (e.isOptional) {
+        hasOptionalElement = true;
+      } else if (hasOptionalElement) {
+        hasIllegalRequiredElement = true;
+        break;
+      }
+    }
+    if (hasIllegalRequiredElement || hasOptionalElement && rest.length > 1) {
+      throw new Error("A required element cannot follow an optional element. ts(1257)");
+    }
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => formatTuple(this));
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      elements: this.elements.map(e => e.toJSON()),
+      rest: this.rest.map(ast => ast.toJSON()),
+      isReadonly: this.isReadonly,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+exports.TupleType = TupleType;
+const formatTuple = ast => {
+  const formattedElements = ast.elements.map(element => String(element.type) + (element.isOptional ? "?" : "")).join(", ");
+  return ReadonlyArray.matchLeft(ast.rest, {
+    onEmpty: () => `readonly [${formattedElements}]`,
+    onNonEmpty: (head, tail) => {
+      const formattedHead = String(head);
+      const wrappedHead = formattedHead.includes(" | ") ? `(${formattedHead})` : formattedHead;
+      if (tail.length > 0) {
+        const formattedTail = tail.map(String).join(", ");
+        if (ast.elements.length > 0) {
+          return `readonly [${formattedElements}, ...${wrappedHead}[], ${formattedTail}]`;
+        } else {
+          return `readonly [...${wrappedHead}[], ${formattedTail}]`;
+        }
+      } else {
+        if (ast.elements.length > 0) {
+          return `readonly [${formattedElements}, ...${wrappedHead}[]]`;
+        } else {
+          return `ReadonlyArray<${formattedHead}>`;
+        }
+      }
+    }
+  });
+};
 /**
  * @category guards
  * @since 1.0.0
  */
-exports.createTuple = createTuple;
-const isTuple = ast => ast._tag === "Tuple";
+const isTupleType = exports.isTupleType = /*#__PURE__*/createASTGuard("TupleType");
 /**
+ * @category model
  * @since 1.0.0
  */
-exports.isTuple = isTuple;
-const createPropertySignature = (name, type, isOptional, isReadonly, annotations = {}) => ({
-  name,
-  type,
-  isOptional,
-  isReadonly,
-  annotations
-});
+class PropertySignature {
+  name;
+  type;
+  isOptional;
+  isReadonly;
+  annotations;
+  constructor(name, type, isOptional, isReadonly, annotations = {}) {
+    this.name = name;
+    this.type = type;
+    this.isOptional = isOptional;
+    this.isReadonly = isReadonly;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      name: String(this.name),
+      type: this.type.toJSON(),
+      isOptional: this.isOptional,
+      isReadonly: this.isReadonly,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
 /**
  * @since 1.0.0
  */
-exports.createPropertySignature = createPropertySignature;
+exports.PropertySignature = PropertySignature;
 const isParameter = ast => {
   switch (ast._tag) {
     case "StringKeyword":
@@ -476,231 +1022,469 @@ const isParameter = ast => {
       return true;
     case "Refinement":
       return isParameter(ast.from);
-    default:
-      return false;
   }
+  return false;
 };
 /**
+ * @category model
  * @since 1.0.0
  */
 exports.isParameter = isParameter;
-const createIndexSignature = (parameter, type, isReadonly) => {
-  if (isParameter(parameter)) {
+class IndexSignature {
+  type;
+  isReadonly;
+  /**
+   * @since 1.0.0
+   */
+  parameter;
+  constructor(parameter, type, isReadonly) {
+    this.type = type;
+    this.isReadonly = isReadonly;
+    if (isParameter(parameter)) {
+      this.parameter = parameter;
+    } else {
+      throw new Error("An index signature parameter type must be `string`, `symbol`, a template literal type or a refinement of the previous types");
+    }
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
     return {
-      parameter,
-      type,
-      isReadonly
+      parameter: this.parameter.toJSON(),
+      type: this.type.toJSON(),
+      isReadonly: this.isReadonly
     };
   }
-  throw new Error("An index signature parameter type must be 'string', 'symbol', a template literal type or a refinement of the previous types");
-};
+}
+/** @internal */
+exports.IndexSignature = IndexSignature;
+const getDuplicatePropertySignatureErrorMessage = name => `Duplicate property signature ${_util.formatUnknown(name)}`;
+exports.getDuplicatePropertySignatureErrorMessage = getDuplicatePropertySignatureErrorMessage;
+const getDuplicateIndexSignatureErrorMessage = name => `Duplicate index signature for type \`${name}\``;
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.createIndexSignature = createIndexSignature;
-const createTypeLiteral = (propertySignatures, indexSignatures, annotations = {}) => {
-  // check for duplicate property signatures
-  const keys = {};
-  for (let i = 0; i < propertySignatures.length; i++) {
-    const name = propertySignatures[i].name;
-    if (Object.prototype.hasOwnProperty.call(keys, name)) {
-      throw new Error(`Duplicate property signature ${String(name)}`);
-    }
-    keys[name] = null;
-  }
-  // check for duplicate index signatures
-  const parameters = {
-    string: false,
-    symbol: false
-  };
-  for (let i = 0; i < indexSignatures.length; i++) {
-    const parameter = getParameterBase(indexSignatures[i].parameter);
-    if (isStringKeyword(parameter)) {
-      if (parameters.string) {
-        throw new Error("Duplicate index signature for type `string`");
+class TypeLiteral {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "TypeLiteral";
+  /**
+   * @since 1.0.0
+   */
+  propertySignatures;
+  /**
+   * @since 1.0.0
+   */
+  indexSignatures;
+  constructor(propertySignatures, indexSignatures, annotations = {}) {
+    this.annotations = annotations;
+    // check for duplicate property signatures
+    const keys = {};
+    for (let i = 0; i < propertySignatures.length; i++) {
+      const name = propertySignatures[i].name;
+      if (Object.prototype.hasOwnProperty.call(keys, name)) {
+        throw new Error(getDuplicatePropertySignatureErrorMessage(name));
       }
-      parameters.string = true;
-    } else if (isSymbolKeyword(parameter)) {
-      if (parameters.symbol) {
-        throw new Error("Duplicate index signature for type `symbol`");
+      keys[name] = null;
+    }
+    // check for duplicate index signatures
+    const parameters = {
+      string: false,
+      symbol: false
+    };
+    for (let i = 0; i < indexSignatures.length; i++) {
+      const parameter = getParameterBase(indexSignatures[i].parameter);
+      if (isStringKeyword(parameter)) {
+        if (parameters.string) {
+          throw new Error(getDuplicateIndexSignatureErrorMessage("string"));
+        }
+        parameters.string = true;
+      } else if (isSymbolKeyword(parameter)) {
+        if (parameters.symbol) {
+          throw new Error(getDuplicateIndexSignatureErrorMessage("symbol"));
+        }
+        parameters.symbol = true;
       }
-      parameters.symbol = true;
+    }
+    this.propertySignatures = sortPropertySignatures(propertySignatures);
+    this.indexSignatures = sortIndexSignatures(indexSignatures);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => formatTypeLiteral(this));
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      propertySignatures: this.propertySignatures.map(ps => ps.toJSON()),
+      indexSignatures: this.indexSignatures.map(ps => ps.toJSON()),
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+exports.TypeLiteral = TypeLiteral;
+const formatTypeLiteral = ast => {
+  const formattedPropertySignatures = ast.propertySignatures.map(ps => String(ps.name) + (ps.isOptional ? "?" : "") + ": " + ps.type).join("; ");
+  if (ast.indexSignatures.length > 0) {
+    const formattedIndexSignatures = ast.indexSignatures.map(is => `[x: ${getParameterBase(is.parameter)}]: ${is.type}`).join("; ");
+    if (ast.propertySignatures.length > 0) {
+      return `{ ${formattedPropertySignatures}; ${formattedIndexSignatures} }`;
+    } else {
+      return `{ ${formattedIndexSignatures} }`;
+    }
+  } else {
+    if (ast.propertySignatures.length > 0) {
+      return `{ ${formattedPropertySignatures} }`;
+    } else {
+      return "{}";
     }
   }
-  return {
-    _tag: "TypeLiteral",
-    propertySignatures: sortPropertySignatures(propertySignatures),
-    indexSignatures: sortIndexSignatures(indexSignatures),
-    annotations
-  };
 };
 /**
  * @category guards
  * @since 1.0.0
  */
-exports.createTypeLiteral = createTypeLiteral;
-const isTypeLiteral = ast => ast._tag === "TypeLiteral";
-exports.isTypeLiteral = isTypeLiteral;
-const isMembers = as => as.length > 1;
+const isTypeLiteral = exports.isTypeLiteral = /*#__PURE__*/createASTGuard("TypeLiteral");
+const flatten = candidates => ReadonlyArray.flatMap(candidates, ast => {
+  switch (ast._tag) {
+    case "Union":
+      return ast.types;
+    default:
+      return [ast];
+  }
+});
+const prettyUnion = ss => Array.from(new Set(ss)).join(" | ");
+const getDefaultUnionDescription = candidates => {
+  const nested = [];
+  let other = false;
+  for (const c of candidates) {
+    if (isUnion(c)) {
+      const expected = getExpected(c, false);
+      if (Option.isSome(expected)) {
+        nested.push(expected.value);
+        continue;
+      }
+    }
+    other = true;
+  }
+  if (nested.length > 0) {
+    return prettyUnion(nested.concat(other ? ["..."] : []));
+  }
+};
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-const createUnion = (candidates, annotations = {}) => {
-  const types = unify(candidates);
-  if (isMembers(types)) {
+class Union {
+  types;
+  annotations;
+  static make = (candidates, annotations) => {
+    const types = unify(flatten(candidates));
+    if (isMembers(types)) {
+      const defaultDescription = getDefaultUnionDescription(candidates);
+      if (defaultDescription) {
+        annotations = {
+          [DescriptionAnnotationId]: defaultDescription,
+          ...annotations
+        };
+      }
+      return new Union(sortUnionMembers(types), annotations);
+    }
+    if (ReadonlyArray.isNonEmptyReadonlyArray(types)) {
+      return types[0];
+    }
+    return neverKeyword;
+  };
+  /**
+   * @since 1.0.0
+   */
+  _tag = "Union";
+  constructor(types, annotations = {}) {
+    this.types = types;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => prettyUnion(this.types.map(String)));
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
     return {
-      _tag: "Union",
-      types: sortUnionMembers(types),
-      annotations
+      _tag: this._tag,
+      types: this.types.map(ast => ast.toJSON()),
+      annotations: toJSONAnnotations(this.annotations)
     };
   }
-  if (ReadonlyArray.isNonEmptyReadonlyArray(types)) {
-    return types[0];
-  }
-  return neverKeyword;
-};
+}
+/** @internal */
+exports.Union = Union;
+const mapMembers = (members, f) => members.map(f);
+/** @internal */
+exports.mapMembers = mapMembers;
+const isMembers = as => as.length > 1;
 /**
  * @category guards
  * @since 1.0.0
  */
-exports.createUnion = createUnion;
-const isUnion = ast => ast._tag === "Union";
+exports.isMembers = isMembers;
+const isUnion = exports.isUnion = /*#__PURE__*/createASTGuard("Union");
+const toJSONMemoMap = /*#__PURE__*/(0, _GlobalValue.globalValue)( /*#__PURE__*/Symbol.for("@effect/schema/AST/toJSONMemoMap"), () => new WeakMap());
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.isUnion = isUnion;
-const createSuspend = (f, annotations = {}) => ({
-  _tag: "Suspend",
-  f: Internal.memoizeThunk(f),
-  annotations
-});
+class Suspend {
+  f;
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "Suspend";
+  constructor(f, annotations = {}) {
+    this.f = f;
+    this.annotations = annotations;
+    this.f = _util.memoizeThunk(f);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return getExpected(this, verbose).pipe(Option.orElse(() => Option.flatMap(Option.liftThrowable(this.f)(), ast => getExpected(ast, verbose))), Option.getOrElse(() => "<suspended schema>"));
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    const ast = this.f();
+    let out = toJSONMemoMap.get(ast);
+    if (out) {
+      return out;
+    }
+    toJSONMemoMap.set(ast, {
+      _tag: this._tag
+    });
+    out = {
+      _tag: this._tag,
+      ast: ast.toJSON(),
+      annotations: toJSONAnnotations(this.annotations)
+    };
+    toJSONMemoMap.set(ast, out);
+    return out;
+  }
+}
 /**
  * @category guards
  * @since 1.0.0
  */
-exports.createSuspend = createSuspend;
-const isSuspend = ast => ast._tag === "Suspend";
+exports.Suspend = Suspend;
+const isSuspend = exports.isSuspend = /*#__PURE__*/createASTGuard("Suspend");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.isSuspend = isSuspend;
-const createRefinement = (from, filter, annotations = {}) => {
-  return {
-    _tag: "Refinement",
-    from,
-    filter,
-    annotations
-  };
-};
+class Refinement {
+  from;
+  filter;
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "Refinement";
+  constructor(from, filter, annotations = {}) {
+    this.from = from;
+    this.filter = filter;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => "<refinement schema>");
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      from: this.from.toJSON(),
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
 /**
  * @category guards
  * @since 1.0.0
  */
-exports.createRefinement = createRefinement;
-const isRefinement = ast => ast._tag === "Refinement";
+exports.Refinement = Refinement;
+const isRefinement = exports.isRefinement = /*#__PURE__*/createASTGuard("Refinement");
 /**
- * @category model
  * @since 1.0.0
  */
-exports.isRefinement = isRefinement;
-const createTransform = (from, to, transformation, annotations = {}) => ({
-  _tag: "Transform",
-  from,
-  to,
-  transformation,
-  annotations
-});
+const defaultParseOption = exports.defaultParseOption = {};
 /**
- * @category guards
+ * @category model
  * @since 1.0.0
  */
-exports.createTransform = createTransform;
-const isTransform = ast => ast._tag === "Transform";
+class Transformation {
+  from;
+  to;
+  transformation;
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "Transformation";
+  constructor(from, to, transformation, annotations = {}) {
+    this.from = from;
+    this.to = to;
+    this.transformation = transformation;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => `(${String(this.from)} <-> ${String(this.to)})`);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      from: this.from.toJSON(),
+      to: this.to.toJSON(),
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
 /**
- * @category constructors
+ * @category guards
  * @since 1.0.0
  */
-exports.isTransform = isTransform;
-const createFinalTransformation = (decode, encode) => ({
-  _tag: "FinalTransformation",
-  decode,
-  encode
-});
+exports.Transformation = Transformation;
+const isTransform = exports.isTransform = /*#__PURE__*/createASTGuard("Transformation");
 /**
- * @category guard
+ * @category model
  * @since 1.0.0
  */
-exports.createFinalTransformation = createFinalTransformation;
-const isFinalTransformation = ast => ast._tag === "FinalTransformation";
+class FinalTransformation {
+  decode;
+  encode;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "FinalTransformation";
+  constructor(decode, encode) {
+    this.decode = decode;
+    this.encode = encode;
+  }
+}
+exports.FinalTransformation = FinalTransformation;
+const createTransformationGuard = tag => ast => ast._tag === tag;
 /**
- * @category constructors
+ * @category guards
  * @since 1.0.0
  */
-exports.isFinalTransformation = isFinalTransformation;
-const composeTransformation = exports.composeTransformation = {
-  _tag: "ComposeTransformation"
-};
+const isFinalTransformation = exports.isFinalTransformation = /*#__PURE__*/createTransformationGuard("FinalTransformation");
 /**
- * @category guard
+ * @category model
  * @since 1.0.0
  */
-const isComposeTransformation = ast => ast._tag === "ComposeTransformation";
+class ComposeTransformation {
+  /**
+   * @since 1.0.0
+   */
+  _tag = "ComposeTransformation";
+}
 /**
  * @category constructors
  * @since 1.0.0
  */
-exports.isComposeTransformation = isComposeTransformation;
-const createFinalPropertySignatureTransformation = (decode, encode) => ({
-  _tag: "FinalPropertySignatureTransformation",
-  decode,
-  encode
-});
+exports.ComposeTransformation = ComposeTransformation;
+const composeTransformation = exports.composeTransformation = /*#__PURE__*/new ComposeTransformation();
 /**
- * @category guard
+ * @category guards
  * @since 1.0.0
  */
-exports.createFinalPropertySignatureTransformation = createFinalPropertySignatureTransformation;
-const isFinalPropertySignatureTransformation = ast => ast._tag === "FinalPropertySignatureTransformation";
+const isComposeTransformation = exports.isComposeTransformation = /*#__PURE__*/createTransformationGuard("ComposeTransformation");
 /**
- * @category constructors
+ * Represents a `PropertySignature -> PropertySignature` transformation
+ *
+ * The semantic of `decode` is:
+ * - `none()` represents the absence of the key/value pair
+ * - `some(value)` represents the presence of the key/value pair
+ *
+ * The semantic of `encode` is:
+ * - `none()` you don't want to output the key/value pair
+ * - `some(value)` you want to output the key/value pair
+ *
+ * @category model
  * @since 1.0.0
  */
-exports.isFinalPropertySignatureTransformation = isFinalPropertySignatureTransformation;
-const createPropertySignatureTransform = (from, to, propertySignatureTransformation) => ({
-  from,
-  to,
-  propertySignatureTransformation
-});
+class PropertySignatureTransformation {
+  from;
+  to;
+  decode;
+  encode;
+  constructor(from, to, decode, encode) {
+    this.from = from;
+    this.to = to;
+    this.decode = decode;
+    this.encode = encode;
+  }
+}
+exports.PropertySignatureTransformation = PropertySignatureTransformation;
+const getDuplicatePropertySignatureTransformationErrorMessage = name => `Duplicate property signature transformation ${_util.formatUnknown(name)}`;
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-exports.createPropertySignatureTransform = createPropertySignatureTransform;
-const createTypeLiteralTransformation = propertySignatureTransformations => {
-  // check for duplicate property signature transformations
-  const keys = {};
-  for (const pst of propertySignatureTransformations) {
-    const key = pst.from;
-    if (keys[key]) {
-      throw new Error(`Duplicate property signature transformation ${String(key)}`);
+class TypeLiteralTransformation {
+  propertySignatureTransformations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "TypeLiteralTransformation";
+  constructor(propertySignatureTransformations) {
+    this.propertySignatureTransformations = propertySignatureTransformations;
+    // check for duplicate property signature transformations
+    const fromKeys = {};
+    const toKeys = {};
+    for (const pst of propertySignatureTransformations) {
+      const from = pst.from;
+      if (fromKeys[from]) {
+        throw new Error(getDuplicatePropertySignatureTransformationErrorMessage(from));
+      }
+      fromKeys[from] = true;
+      const to = pst.to;
+      if (toKeys[to]) {
+        throw new Error(getDuplicatePropertySignatureTransformationErrorMessage(to));
+      }
+      toKeys[to] = true;
     }
-    keys[key] = true;
   }
-  return {
-    _tag: "TypeLiteralTransformation",
-    propertySignatureTransformations
-  };
-};
+}
 /**
- * @category guard
+ * @category guards
  * @since 1.0.0
  */
-exports.createTypeLiteralTransformation = createTypeLiteralTransformation;
-const isTypeLiteralTransformation = ast => ast._tag === "TypeLiteralTransformation";
+exports.TypeLiteralTransformation = TypeLiteralTransformation;
+const isTypeLiteralTransformation = exports.isTypeLiteralTransformation = /*#__PURE__*/createTransformationGuard("TypeLiteralTransformation");
 // -------------------------------------------------------------------------------------
 // API
 // -------------------------------------------------------------------------------------
@@ -709,73 +1493,21 @@ const isTypeLiteralTransformation = ast => ast._tag === "TypeLiteralTransformati
  *
  * @since 1.0.0
  */
-exports.isTypeLiteralTransformation = isTypeLiteralTransformation;
-const mergeAnnotations = (ast, annotations) => {
-  return {
-    ...ast,
-    annotations: {
-      ...ast.annotations,
-      ...annotations
-    }
-  };
-};
-/**
- * Adds an annotation, potentially overwriting the existing annotation with the specified id.
- *
- * @since 1.0.0
- */
-exports.mergeAnnotations = mergeAnnotations;
-const setAnnotation = (ast, sym, value) => {
-  return {
-    ...ast,
-    annotations: {
-      ...ast.annotations,
-      [sym]: value
-    }
+const annotations = (ast, annotations) => {
+  const d = Object.getOwnPropertyDescriptors(ast);
+  d.annotations.value = {
+    ...ast.annotations,
+    ...annotations
   };
-};
-/**
- * Adds a rest element to the end of a tuple, or throws an exception if the rest element is already present.
- *
- * @since 1.0.0
- */
-exports.setAnnotation = setAnnotation;
-const appendRestElement = (ast, restElement) => {
-  if (Option.isSome(ast.rest)) {
-    // example: `type A = [...string[], ...number[]]` is illegal
-    throw new Error("A rest element cannot follow another rest element. ts(1265)");
-  }
-  return createTuple(ast.elements, Option.some([restElement]), ast.isReadonly);
-};
-/**
- * Appends an element to a tuple or throws an exception in the following cases:
- * - A required element cannot follow an optional element. ts(1257)
- * - An optional element cannot follow a rest element. ts(1266)
- *
- * @since 1.0.0
- */
-exports.appendRestElement = appendRestElement;
-const appendElement = (ast, newElement) => {
-  if (ast.elements.some(e => e.isOptional) && !newElement.isOptional) {
-    throw new Error("A required element cannot follow an optional element. ts(1257)");
-  }
-  return (0, _Function.pipe)(ast.rest, Option.match({
-    onNone: () => createTuple([...ast.elements, newElement], Option.none(), ast.isReadonly),
-    onSome: rest => {
-      if (newElement.isOptional) {
-        throw new Error("An optional element cannot follow a rest element. ts(1266)");
-      }
-      return createTuple(ast.elements, Option.some([...rest, newElement.type]), ast.isReadonly);
-    }
-  }));
+  return Object.create(Object.getPrototypeOf(ast), d);
 };
 /**
  * Equivalent at runtime to the TypeScript type-level `keyof` operator.
  *
  * @since 1.0.0
  */
-exports.appendElement = appendElement;
-const keyof = ast => createUnion(_keyof(ast));
+exports.annotations = annotations;
+const keyof = ast => Union.make(_keyof(ast));
 /** @internal */
 exports.keyof = keyof;
 const getTemplateLiteralRegex = ast => {
@@ -797,6 +1529,14 @@ const getTemplateLiteralRegex = ast => {
 exports.getTemplateLiteralRegex = getTemplateLiteralRegex;
 const getPropertySignatures = ast => {
   switch (ast._tag) {
+    case "Declaration":
+      {
+        const annotation = getSurrogateSchemaAnnotation(ast);
+        if (Option.isSome(annotation)) {
+          return getPropertySignatures(annotation.value);
+        }
+        break;
+      }
     case "TypeLiteral":
       return ast.propertySignatures.slice();
     case "Suspend":
@@ -808,7 +1548,7 @@ const getPropertySignatures = ast => {
 exports.getPropertySignatures = getPropertySignatures;
 const getNumberIndexedAccess = ast => {
   switch (ast._tag) {
-    case "Tuple":
+    case "TupleType":
       {
         let hasOptional = false;
         const out = [];
@@ -821,26 +1561,32 @@ const getNumberIndexedAccess = ast => {
         if (hasOptional) {
           out.push(undefinedKeyword);
         }
-        if (Option.isSome(ast.rest)) {
-          for (const e of ast.rest.value) {
-            out.push(e);
-          }
+        for (const e of ast.rest) {
+          out.push(e);
         }
-        return createUnion(out);
+        return Union.make(out);
       }
     case "Refinement":
       return getNumberIndexedAccess(ast.from);
     case "Union":
-      return createUnion(ast.types.map(getNumberIndexedAccess));
+      return Union.make(ast.types.map(getNumberIndexedAccess));
     case "Suspend":
       return getNumberIndexedAccess(ast.f());
   }
-  throw new Error(`getNumberIndexedAccess: unsupported schema (${format(ast)})`);
+  throw new Error(`getNumberIndexedAccess: unsupported schema (${ast})`);
 };
 /** @internal */
 exports.getNumberIndexedAccess = getNumberIndexedAccess;
 const getPropertyKeyIndexedAccess = (ast, name) => {
   switch (ast._tag) {
+    case "Declaration":
+      {
+        const annotation = getSurrogateSchemaAnnotation(ast);
+        if (Option.isSome(annotation)) {
+          return getPropertyKeyIndexedAccess(annotation.value, name);
+        }
+        break;
+      }
     case "TypeLiteral":
       {
         const ops = ReadonlyArray.findFirst(ast.propertySignatures, ps => ps.name === name);
@@ -855,19 +1601,19 @@ const getPropertyKeyIndexedAccess = (ast, name) => {
                   {
                     const regex = getTemplateLiteralRegex(parameterBase);
                     if (regex.test(name)) {
-                      return createPropertySignature(name, is.type, false, false);
+                      return new PropertySignature(name, is.type, false, false);
                     }
                     break;
                   }
                 case "StringKeyword":
-                  return createPropertySignature(name, is.type, false, false);
+                  return new PropertySignature(name, is.type, false, false);
               }
             }
           } else if (Predicate.isSymbol(name)) {
             for (const is of ast.indexSignatures) {
               const parameterBase = getParameterBase(is.parameter);
               if (isSymbolKeyword(parameterBase)) {
-                return createPropertySignature(name, is.type, false, false);
+                return new PropertySignature(name, is.type, false, false);
               }
             }
           }
@@ -875,15 +1621,23 @@ const getPropertyKeyIndexedAccess = (ast, name) => {
         break;
       }
     case "Union":
-      return createPropertySignature(name, createUnion(ast.types.map(ast => getPropertyKeyIndexedAccess(ast, name).type)), false, true);
+      return new PropertySignature(name, Union.make(ast.types.map(ast => getPropertyKeyIndexedAccess(ast, name).type)), false, true);
     case "Suspend":
       return getPropertyKeyIndexedAccess(ast.f(), name);
   }
-  return createPropertySignature(name, neverKeyword, false, true);
+  return new PropertySignature(name, neverKeyword, false, true);
 };
 exports.getPropertyKeyIndexedAccess = getPropertyKeyIndexedAccess;
 const getPropertyKeys = ast => {
   switch (ast._tag) {
+    case "Declaration":
+      {
+        const annotation = getSurrogateSchemaAnnotation(ast);
+        if (Option.isSome(annotation)) {
+          return getPropertyKeys(annotation.value);
+        }
+        break;
+      }
     case "TypeLiteral":
       return ast.propertySignatures.map(ps => ps.name);
     case "Suspend":
@@ -893,12 +1647,8 @@ const getPropertyKeys = ast => {
   }
   return [];
 };
-/**
- * Create a record with the specified key type and value type.
- *
- * @since 1.0.0
- */
-const createRecord = (key, value, isReadonly) => {
+/** @internal */
+const record = (key, value) => {
   const propertySignatures = [];
   const indexSignatures = [];
   const go = key => {
@@ -909,35 +1659,38 @@ const createRecord = (key, value, isReadonly) => {
       case "SymbolKeyword":
       case "TemplateLiteral":
       case "Refinement":
-        indexSignatures.push(createIndexSignature(key, value, isReadonly));
+        indexSignatures.push(new IndexSignature(key, value, true));
         break;
       case "Literal":
         if (Predicate.isString(key.literal) || Predicate.isNumber(key.literal)) {
-          propertySignatures.push(createPropertySignature(key.literal, value, false, isReadonly));
+          propertySignatures.push(new PropertySignature(key.literal, value, false, true));
         } else {
-          throw new Error(`createRecord: unsupported literal (${formatUnknown(key.literal)})`);
+          throw new Error(`createRecord: unsupported literal (${_util.formatUnknown(key.literal)})`);
         }
         break;
       case "UniqueSymbol":
-        propertySignatures.push(createPropertySignature(key.symbol, value, false, isReadonly));
+        propertySignatures.push(new PropertySignature(key.symbol, value, false, true));
         break;
       case "Union":
         key.types.forEach(go);
         break;
       default:
-        throw new Error(`createRecord: unsupported key schema (${format(key)})`);
+        throw new Error(`createRecord: unsupported key schema (${key})`);
     }
   };
   go(key);
-  return createTypeLiteral(propertySignatures, indexSignatures);
+  return {
+    propertySignatures,
+    indexSignatures
+  };
 };
 /**
  * Equivalent at runtime to the built-in TypeScript utility type `Pick`.
  *
  * @since 1.0.0
  */
-exports.createRecord = createRecord;
-const pick = (ast, keys) => createTypeLiteral(keys.map(key => getPropertyKeyIndexedAccess(ast, key)), []);
+exports.record = record;
+const pick = (ast, keys) => new TypeLiteral(keys.map(key => getPropertyKeyIndexedAccess(ast, key)), []);
 /**
  * Equivalent at runtime to the built-in TypeScript utility type `Omit`.
  *
@@ -947,7 +1700,7 @@ exports.pick = pick;
 const omit = (ast, keys) => pick(ast, getPropertyKeys(ast).filter(name => !keys.includes(name)));
 /** @internal */
 exports.omit = omit;
-const orUndefined = ast => createUnion([ast, undefinedKeyword]);
+const orUndefined = ast => Union.make([ast, undefinedKeyword]);
 /**
  * Equivalent at runtime to the built-in TypeScript utility type `Partial`.
  *
@@ -957,19 +1710,22 @@ exports.orUndefined = orUndefined;
 const partial = (ast, options) => {
   const exact = options?.exact === true;
   switch (ast._tag) {
-    case "Tuple":
-      return createTuple(ast.elements.map(e => createElement(exact ? e.type : orUndefined(e.type), true)), (0, _Function.pipe)(ast.rest, Option.map(rest => [createUnion([...rest, undefinedKeyword])])), ast.isReadonly);
+    case "TupleType":
+      return new TupleType(ast.elements.map(e => new Element(exact ? e.type : orUndefined(e.type), true)), ReadonlyArray.match(ast.rest, {
+        onEmpty: () => ast.rest,
+        onNonEmpty: rest => [Union.make([...rest, undefinedKeyword])]
+      }), ast.isReadonly);
     case "TypeLiteral":
-      return createTypeLiteral(ast.propertySignatures.map(ps => createPropertySignature(ps.name, exact ? ps.type : orUndefined(ps.type), true, ps.isReadonly, ps.annotations)), ast.indexSignatures.map(is => createIndexSignature(is.parameter, orUndefined(is.type), is.isReadonly)));
+      return new TypeLiteral(ast.propertySignatures.map(ps => new PropertySignature(ps.name, exact ? ps.type : orUndefined(ps.type), true, ps.isReadonly, ps.annotations)), ast.indexSignatures.map(is => new IndexSignature(is.parameter, orUndefined(is.type), is.isReadonly)));
     case "Union":
-      return createUnion(ast.types.map(member => partial(member, options)));
+      return Union.make(ast.types.map(member => partial(member, options)));
     case "Suspend":
-      return createSuspend(() => partial(ast.f(), options));
+      return new Suspend(() => partial(ast.f(), options));
     case "Declaration":
       throw new Error("`partial` cannot handle declarations");
     case "Refinement":
       throw new Error("`partial` cannot handle refinements");
-    case "Transform":
+    case "Transformation":
       throw new Error("`partial` cannot handle transformations");
   }
   return ast;
@@ -982,22 +1738,25 @@ const partial = (ast, options) => {
 exports.partial = partial;
 const required = ast => {
   switch (ast._tag) {
-    case "Tuple":
-      return createTuple(ast.elements.map(e => createElement(e.type, false)), (0, _Function.pipe)(ast.rest, Option.map(rest => {
-        const u = createUnion([...rest]);
-        return ReadonlyArray.map(rest, () => u);
-      })), ast.isReadonly);
+    case "TupleType":
+      return new TupleType(ast.elements.map(e => new Element(e.type, false)), ReadonlyArray.match(ast.rest, {
+        onEmpty: () => ast.rest,
+        onNonEmpty: rest => {
+          const union = Union.make([...rest]);
+          return ReadonlyArray.map(rest, () => union);
+        }
+      }), ast.isReadonly);
     case "TypeLiteral":
-      return createTypeLiteral(ast.propertySignatures.map(f => createPropertySignature(f.name, f.type, false, f.isReadonly, f.annotations)), ast.indexSignatures);
+      return new TypeLiteral(ast.propertySignatures.map(f => new PropertySignature(f.name, f.type, false, f.isReadonly, f.annotations)), ast.indexSignatures);
     case "Union":
-      return createUnion(ast.types.map(member => required(member)));
+      return Union.make(ast.types.map(member => required(member)));
     case "Suspend":
-      return createSuspend(() => required(ast.f()));
+      return new Suspend(() => required(ast.f()));
     case "Declaration":
       throw new Error("`required` cannot handle declarations");
     case "Refinement":
       throw new Error("`required` cannot handle refinements");
-    case "Transform":
+    case "Transformation":
       throw new Error("`required` cannot handle transformations");
   }
   return ast;
@@ -1012,18 +1771,18 @@ const required = ast => {
 exports.required = required;
 const mutable = ast => {
   switch (ast._tag) {
-    case "Tuple":
-      return createTuple(ast.elements, ast.rest, false, ast.annotations);
+    case "TupleType":
+      return new TupleType(ast.elements, ast.rest, false, ast.annotations);
     case "TypeLiteral":
-      return createTypeLiteral(ast.propertySignatures.map(ps => createPropertySignature(ps.name, ps.type, ps.isOptional, false, ps.annotations)), ast.indexSignatures.map(is => createIndexSignature(is.parameter, is.type, false)), ast.annotations);
+      return new TypeLiteral(ast.propertySignatures.map(ps => new PropertySignature(ps.name, ps.type, ps.isOptional, false, ps.annotations)), ast.indexSignatures.map(is => new IndexSignature(is.parameter, is.type, false)), ast.annotations);
     case "Union":
-      return createUnion(ast.types.map(mutable), ast.annotations);
+      return Union.make(ast.types.map(mutable), ast.annotations);
     case "Suspend":
-      return createSuspend(() => mutable(ast.f()), ast.annotations);
+      return new Suspend(() => mutable(ast.f()), ast.annotations);
     case "Refinement":
-      return createRefinement(mutable(ast.from), ast.filter, ast.annotations);
-    case "Transform":
-      return createTransform(mutable(ast.from), mutable(ast.to), ast.transformation, ast.annotations);
+      return new Refinement(mutable(ast.from), ast.filter, ast.annotations);
+    case "Transformation":
+      return new Transformation(mutable(ast.from), mutable(ast.to), ast.transformation, ast.annotations);
   }
   return ast;
 };
@@ -1037,109 +1796,139 @@ const getCompiler = match => {
 };
 /** @internal */
 exports.getCompiler = getCompiler;
-const getToPropertySignatures = ps => ps.map(p => createPropertySignature(p.name, to(p.type), p.isOptional, p.isReadonly, p.annotations));
+const getToPropertySignatures = ps => ps.map(p => new PropertySignature(p.name, typeAST(p.type), p.isOptional, p.isReadonly, p.annotations));
 /** @internal */
 exports.getToPropertySignatures = getToPropertySignatures;
-const getToIndexSignatures = ps => ps.map(is => createIndexSignature(is.parameter, to(is.type), is.isReadonly));
+const getToIndexSignatures = ps => ps.map(is => new IndexSignature(is.parameter, typeAST(is.type), is.isReadonly));
 /**
  * @since 1.0.0
  */
 exports.getToIndexSignatures = getToIndexSignatures;
-const to = ast => {
+const typeAST = ast => {
   switch (ast._tag) {
     case "Declaration":
-      return createDeclaration(ast.typeParameters.map(to), ast.decodeUnknown, ast.encodeUnknown, ast.annotations);
-    case "Tuple":
-      return createTuple(ast.elements.map(e => createElement(to(e.type), e.isOptional)), Option.map(ast.rest, ReadonlyArray.map(to)), ast.isReadonly, ast.annotations);
+      {
+        const typeParameters = changeMap(ast.typeParameters, typeAST);
+        return typeParameters === ast.typeParameters ? ast : new Declaration(typeParameters, ast.decodeUnknown, ast.encodeUnknown, ast.annotations);
+      }
+    case "TupleType":
+      {
+        const elements = changeMap(ast.elements, e => {
+          const type = typeAST(e.type);
+          return type === e.type ? e : new Element(type, e.isOptional);
+        });
+        const rest = changeMap(ast.rest, typeAST);
+        return elements === ast.elements && rest === ast.rest ? ast : new TupleType(elements, rest, ast.isReadonly, ast.annotations);
+      }
     case "TypeLiteral":
-      return createTypeLiteral(getToPropertySignatures(ast.propertySignatures), getToIndexSignatures(ast.indexSignatures), ast.annotations);
+      {
+        const propertySignatures = changeMap(ast.propertySignatures, p => {
+          const type = typeAST(p.type);
+          return type === p.type ? p : new PropertySignature(p.name, type, p.isOptional, p.isReadonly);
+        });
+        const indexSignatures = changeMap(ast.indexSignatures, is => {
+          const type = typeAST(is.type);
+          return type === is.type ? is : new IndexSignature(is.parameter, type, is.isReadonly);
+        });
+        return propertySignatures === ast.propertySignatures && indexSignatures === ast.indexSignatures ? ast : new TypeLiteral(propertySignatures, indexSignatures, ast.annotations);
+      }
     case "Union":
-      return createUnion(ast.types.map(to), ast.annotations);
+      {
+        const types = changeMap(ast.types, typeAST);
+        return types === ast.types ? ast : Union.make(ast.types.map(typeAST), ast.annotations);
+      }
     case "Suspend":
-      return createSuspend(() => to(ast.f()), ast.annotations);
+      return new Suspend(() => typeAST(ast.f()), ast.annotations);
     case "Refinement":
-      return createRefinement(to(ast.from), ast.filter, ast.annotations);
-    case "Transform":
-      return to(ast.to);
+      {
+        const from = typeAST(ast.from);
+        return from === ast.from ? ast : new Refinement(from, ast.filter, ast.annotations);
+      }
+    case "Transformation":
+      return typeAST(ast.to);
   }
   return ast;
 };
-exports.to = to;
-const preserveIdentifierAnnotation = annotated => {
-  return Option.match(getIdentifierAnnotation(annotated), {
+/** @internal */
+exports.typeAST = typeAST;
+const getJSONIdentifier = annotated => Option.orElse(getJSONIdentifierAnnotation(annotated), () => getIdentifierAnnotation(annotated));
+exports.getJSONIdentifier = getJSONIdentifier;
+const createJSONIdentifierAnnotation = annotated => {
+  return Option.match(getJSONIdentifier(annotated), {
     onNone: () => undefined,
     onSome: identifier => ({
-      [IdentifierAnnotationId]: identifier
+      [JSONIdentifierAnnotationId]: identifier
     })
   });
 };
+function changeMap(as, f) {
+  let changed = false;
+  const out = [];
+  for (const a of as) {
+    const fa = f(a);
+    if (fa !== a) {
+      changed = true;
+    }
+    out.push(f(a));
+  }
+  return changed ? out : as;
+}
 /**
  * @since 1.0.0
  */
-const from = ast => {
+const encodedAST = ast => {
   switch (ast._tag) {
     case "Declaration":
-      return createDeclaration(ast.typeParameters.map(from), ast.decodeUnknown, ast.encodeUnknown, ast.annotations);
-    case "Tuple":
-      return createTuple(ast.elements.map(e => createElement(from(e.type), e.isOptional)), Option.map(ast.rest, ReadonlyArray.map(from)), ast.isReadonly, preserveIdentifierAnnotation(ast));
+      {
+        const typeParameters = changeMap(ast.typeParameters, encodedAST);
+        return typeParameters === ast.typeParameters ? ast : new Declaration(typeParameters, ast.decodeUnknown, ast.encodeUnknown, ast.annotations);
+      }
+    case "TupleType":
+      {
+        const elements = changeMap(ast.elements, e => {
+          const type = encodedAST(e.type);
+          return type === e.type ? e : new Element(type, e.isOptional);
+        });
+        const rest = changeMap(ast.rest, encodedAST);
+        return elements === ast.elements && rest === ast.rest ? ast : new TupleType(elements, rest, ast.isReadonly, createJSONIdentifierAnnotation(ast));
+      }
     case "TypeLiteral":
-      return createTypeLiteral(ast.propertySignatures.map(p => createPropertySignature(p.name, from(p.type), p.isOptional, p.isReadonly)), ast.indexSignatures.map(is => createIndexSignature(is.parameter, from(is.type), is.isReadonly)), preserveIdentifierAnnotation(ast));
+      {
+        const propertySignatures = changeMap(ast.propertySignatures, p => {
+          const type = encodedAST(p.type);
+          return type === p.type ? p : new PropertySignature(p.name, type, p.isOptional, p.isReadonly);
+        });
+        const indexSignatures = changeMap(ast.indexSignatures, is => {
+          const type = encodedAST(is.type);
+          return type === is.type ? is : new IndexSignature(is.parameter, type, is.isReadonly);
+        });
+        return propertySignatures === ast.propertySignatures && indexSignatures === ast.indexSignatures ? ast : new TypeLiteral(propertySignatures, indexSignatures, createJSONIdentifierAnnotation(ast));
+      }
     case "Union":
-      return createUnion(ast.types.map(from), preserveIdentifierAnnotation(ast));
+      {
+        const types = changeMap(ast.types, encodedAST);
+        return types === ast.types ? ast : Union.make(ast.types.map(encodedAST), createJSONIdentifierAnnotation(ast));
+      }
     case "Suspend":
-      return createSuspend(() => from(ast.f()), preserveIdentifierAnnotation(ast));
+      return new Suspend(() => encodedAST(ast.f()), createJSONIdentifierAnnotation(ast));
     case "Refinement":
-    case "Transform":
-      return from(ast.from);
+    case "Transformation":
+      return encodedAST(ast.from);
   }
   return ast;
 };
-exports.from = from;
-const toStringMemoSet = /*#__PURE__*/(0, _GlobalValue.globalValue)( /*#__PURE__*/Symbol.for("@effect/schema/AST/toStringMemoSet"), () => new WeakSet());
-const containerASTTags = {
-  Declaration: true,
-  Refinement: true,
-  Tuple: true,
-  TypeLiteral: true,
-  Union: true,
-  Suspend: true,
-  Transform: true
-};
-const isContainerAST = ast => "_tag" in ast && Predicate.isString(ast["_tag"]) && ast["_tag"] in containerASTTags;
-/** @internal */
-const toString = ast => JSON.stringify(ast, (key, value) => {
-  if (Predicate.isSymbol(value)) {
-    return String(value);
-  }
-  if (typeof value === "object" && value !== null) {
-    if (isContainerAST(value)) {
-      if (toStringMemoSet.has(value)) {
-        return "<suspended schema>";
-      }
-      toStringMemoSet.add(value);
-      if (isSuspend(value)) {
-        const out = value.f();
-        if (toStringMemoSet.has(out)) {
-          return "<suspended schema>";
-        }
-        toStringMemoSet.add(out);
-        return out;
-      }
-    } else if (key === "annotations") {
-      const out = {};
-      for (const k of Internal.ownKeys(value)) {
-        out[String(k)] = value[k];
-      }
-      return out;
-    }
+exports.encodedAST = encodedAST;
+const toJSONAnnotations = annotations => {
+  const out = {};
+  for (const k of Object.getOwnPropertySymbols(annotations)) {
+    out[String(k)] = annotations[k];
   }
-  return value;
-}, 2);
+  return out;
+};
 /**
  * @since 1.0.0
  */
-exports.toString = toString;
-const hash = ast => Hash.string(toString(ast));
+const hash = ast => Hash.string(JSON.stringify(ast, null, 2));
 /** @internal */
 exports.hash = hash;
 const getCardinality = ast => {
@@ -1168,8 +1957,8 @@ const getCardinality = ast => {
   }
 };
 exports.getCardinality = getCardinality;
-const sortPropertySignatures = /*#__PURE__*/ReadonlyArray.sort( /*#__PURE__*/(0, _Function.pipe)(Number.Order, /*#__PURE__*/Order.mapInput(ps => getCardinality(ps.type))));
-const sortIndexSignatures = /*#__PURE__*/ReadonlyArray.sort( /*#__PURE__*/(0, _Function.pipe)(Number.Order, /*#__PURE__*/Order.mapInput(is => {
+const sortPropertySignatures = /*#__PURE__*/ReadonlyArray.sort( /*#__PURE__*/Order.mapInput(Number.Order, ps => getCardinality(ps.type)));
+const sortIndexSignatures = /*#__PURE__*/ReadonlyArray.sort( /*#__PURE__*/Order.mapInput(Number.Order, is => {
   switch (getParameterBase(is.parameter)._tag) {
     case "StringKeyword":
       return 2;
@@ -1178,7 +1967,7 @@ const sortIndexSignatures = /*#__PURE__*/ReadonlyArray.sort( /*#__PURE__*/(0, _F
     case "TemplateLiteral":
       return 1;
   }
-})));
+}));
 const WeightOrder = /*#__PURE__*/Order.tuple(Number.Order, Number.Order, Number.Order);
 const maxWeight = /*#__PURE__*/Order.max(WeightOrder);
 const emptyWeight = [0, 0, 0];
@@ -1186,11 +1975,9 @@ const maxWeightAll = weights => weights.reduce(maxWeight, emptyWeight);
 /** @internal */
 const getWeight = ast => {
   switch (ast._tag) {
-    case "Tuple":
+    case "TupleType":
       {
-        const y = ast.elements.length;
-        const z = Option.isSome(ast.rest) ? ast.rest.value.length : 0;
-        return [2, y, z];
+        return [2, ast.elements.length, ast.rest.length];
       }
     case "TypeLiteral":
       {
@@ -1200,6 +1987,11 @@ const getWeight = ast => {
       }
     case "Declaration":
       {
+        const annotation = getSurrogateSchemaAnnotation(ast);
+        if (Option.isSome(annotation)) {
+          const [_, y, z] = getWeight(annotation.value);
+          return [6, y, z];
+        }
         return [6, 0, 0];
       }
     case "Suspend":
@@ -1211,7 +2003,7 @@ const getWeight = ast => {
         const [x, y, z] = getWeight(ast.from);
         return [x + 1, y, z];
       }
-    case "Transform":
+    case "Transformation":
       return getWeight(ast.from);
     case "ObjectKeyword":
       return [-2, 0, 0];
@@ -1224,42 +2016,122 @@ const getWeight = ast => {
 };
 exports.getWeight = getWeight;
 const sortUnionMembers = /*#__PURE__*/ReadonlyArray.sort( /*#__PURE__*/Order.reverse( /*#__PURE__*/Order.mapInput(WeightOrder, getWeight)));
+const sortCandidates = /*#__PURE__*/ReadonlyArray.sort( /*#__PURE__*/Order.mapInput(Number.Order, ast => {
+  switch (ast._tag) {
+    case "AnyKeyword":
+      return 0;
+    case "UnknownKeyword":
+      return 1;
+    case "ObjectKeyword":
+      return 2;
+    case "StringKeyword":
+    case "NumberKeyword":
+    case "BooleanKeyword":
+    case "BigIntKeyword":
+    case "SymbolKeyword":
+      return 3;
+  }
+  return 4;
+}));
+const literalMap = {
+  string: "StringKeyword",
+  number: "NumberKeyword",
+  boolean: "BooleanKeyword",
+  bigint: "BigIntKeyword"
+};
+/** @internal */
 const unify = candidates => {
-  let out = (0, _Function.pipe)(candidates, ReadonlyArray.flatMap(ast => {
+  const cs = sortCandidates(candidates);
+  const out = [];
+  const uniques = {};
+  const literals = [];
+  for (const ast of cs) {
     switch (ast._tag) {
       case "NeverKeyword":
-        return [];
-      case "Union":
-        return ast.types;
+        break;
+      case "AnyKeyword":
+        return [anyKeyword];
+      case "UnknownKeyword":
+        return [unknownKeyword];
+      // uniques
+      case "ObjectKeyword":
+      case "UndefinedKeyword":
+      case "VoidKeyword":
+      case "StringKeyword":
+      case "NumberKeyword":
+      case "BooleanKeyword":
+      case "BigIntKeyword":
+      case "SymbolKeyword":
+        {
+          if (!uniques[ast._tag]) {
+            uniques[ast._tag] = ast;
+            out.push(ast);
+          }
+          break;
+        }
+      case "Literal":
+        {
+          const type = typeof ast.literal;
+          switch (type) {
+            case "string":
+            case "number":
+            case "bigint":
+            case "boolean":
+              {
+                const _tag = literalMap[type];
+                if (!uniques[_tag] && !literals.includes(ast.literal)) {
+                  literals.push(ast.literal);
+                  out.push(ast);
+                }
+                break;
+              }
+            // null
+            case "object":
+              {
+                if (!literals.includes(ast.literal)) {
+                  literals.push(ast.literal);
+                  out.push(ast);
+                }
+                break;
+              }
+          }
+          break;
+        }
+      case "UniqueSymbol":
+        {
+          if (!uniques["SymbolKeyword"] && !literals.includes(ast.symbol)) {
+            literals.push(ast.symbol);
+            out.push(ast);
+          }
+          break;
+        }
+      case "TupleType":
+        {
+          if (!uniques["ObjectKeyword"]) {
+            out.push(ast);
+          }
+          break;
+        }
+      case "TypeLiteral":
+        {
+          if (ast.propertySignatures.length === 0 && ast.indexSignatures.length === 0) {
+            if (!uniques["{}"]) {
+              uniques["{}"] = ast;
+              out.push(ast);
+            }
+          } else if (!uniques["ObjectKeyword"]) {
+            out.push(ast);
+          }
+          break;
+        }
       default:
-        return [ast];
+        out.push(ast);
     }
-  }));
-  if (out.some(isAnyKeyword)) {
-    return [anyKeyword];
-  }
-  if (out.some(isUnknownKeyword)) {
-    return [unknownKeyword];
-  }
-  let i;
-  if ((i = out.findIndex(isStringKeyword)) !== -1) {
-    out = out.filter((m, j) => j === i || !isStringKeyword(m) && !(isLiteral(m) && typeof m.literal === "string"));
-  }
-  if ((i = out.findIndex(isNumberKeyword)) !== -1) {
-    out = out.filter((m, j) => j === i || !isNumberKeyword(m) && !(isLiteral(m) && typeof m.literal === "number"));
-  }
-  if ((i = out.findIndex(isBooleanKeyword)) !== -1) {
-    out = out.filter((m, j) => j === i || !isBooleanKeyword(m) && !(isLiteral(m) && typeof m.literal === "boolean"));
-  }
-  if ((i = out.findIndex(isBigIntKeyword)) !== -1) {
-    out = out.filter((m, j) => j === i || !isBigIntKeyword(m) && !(isLiteral(m) && typeof m.literal === "bigint"));
-  }
-  if ((i = out.findIndex(isSymbolKeyword)) !== -1) {
-    out = out.filter((m, j) => j === i || !isSymbolKeyword(m) && !isUniqueSymbol(m));
   }
   return out;
 };
 /** @internal */
+exports.unify = unify;
 const getParameterBase = ast => {
   switch (ast._tag) {
     case "StringKeyword":
@@ -1296,11 +2168,11 @@ const equals = (self, that) => {
     case "Enums":
       return isEnums(that) && equalsEnums(that.enums, self.enums);
     case "Refinement":
-    case "Tuple":
+    case "TupleType":
     case "TypeLiteral":
     case "Union":
     case "Suspend":
-    case "Transform":
+    case "Transformation":
     case "Declaration":
       return self === that;
   }
@@ -1308,111 +2180,57 @@ const equals = (self, that) => {
 const intersection = /*#__PURE__*/ReadonlyArray.intersectionWith(equals);
 const _keyof = ast => {
   switch (ast._tag) {
+    case "Declaration":
+      {
+        const annotation = getSurrogateSchemaAnnotation(ast);
+        if (Option.isSome(annotation)) {
+          return _keyof(annotation.value);
+        }
+        break;
+      }
     case "TypeLiteral":
-      return ast.propertySignatures.map(p => Predicate.isSymbol(p.name) ? createUniqueSymbol(p.name) : createLiteral(p.name)).concat(ast.indexSignatures.map(is => getParameterBase(is.parameter)));
+      return ast.propertySignatures.map(p => Predicate.isSymbol(p.name) ? new UniqueSymbol(p.name) : new Literal(p.name)).concat(ast.indexSignatures.map(is => getParameterBase(is.parameter)));
     case "Suspend":
       return _keyof(ast.f());
     case "Union":
       return ast.types.slice(1).reduce((out, ast) => intersection(out, _keyof(ast)), _keyof(ast.types[0]));
-    case "Transform":
+    case "Transformation":
       return _keyof(ast.to);
   }
-  throw new Error(`keyof: unsupported schema (${format(ast)})`);
+  throw new Error(`keyof: unsupported schema (${ast})`);
 };
 /** @internal */
-const compose = (ab, cd) => createTransform(ab, cd, composeTransformation);
+const compose = (ab, cd) => new Transformation(ab, cd, composeTransformation);
 /** @internal */
 exports.compose = compose;
 const rename = (ast, mapping) => {
   switch (ast._tag) {
     case "TypeLiteral":
       {
-        const propertySignatureTransforms = [];
-        for (const key of Internal.ownKeys(mapping)) {
+        const propertySignatureTransformations = [];
+        for (const key of _util.ownKeys(mapping)) {
           const name = mapping[key];
           if (name !== undefined) {
-            propertySignatureTransforms.push(createPropertySignatureTransform(key, name, createFinalPropertySignatureTransformation(_Function.identity, _Function.identity)));
+            propertySignatureTransformations.push(new PropertySignatureTransformation(key, name, _Function.identity, _Function.identity));
           }
         }
-        if (propertySignatureTransforms.length === 0) {
+        if (propertySignatureTransformations.length === 0) {
           return ast;
         }
-        return createTransform(ast, createTypeLiteral(ast.propertySignatures.map(ps => {
+        return new Transformation(ast, new TypeLiteral(ast.propertySignatures.map(ps => {
           const name = mapping[ps.name];
-          return createPropertySignature(name === undefined ? ps.name : name, to(ps.type), ps.isOptional, ps.isReadonly, ps.annotations);
-        }), ast.indexSignatures), createTypeLiteralTransformation(propertySignatureTransforms));
+          return new PropertySignature(name === undefined ? ps.name : name, typeAST(ps.type), ps.isOptional, ps.isReadonly, ps.annotations);
+        }), ast.indexSignatures), new TypeLiteralTransformation(propertySignatureTransformations));
       }
     case "Suspend":
-      return createSuspend(() => rename(ast.f(), mapping));
-    case "Transform":
-      return compose(ast, rename(to(ast), mapping));
+      return new Suspend(() => rename(ast.f(), mapping));
+    case "Transformation":
+      return compose(ast, rename(typeAST(ast), mapping));
   }
-  throw new Error(`rename: cannot rename (${format(ast)})`);
+  throw new Error(`rename: cannot rename (${ast})`);
 };
 exports.rename = rename;
-const formatTransformation = (from, to) => `(${from} <-> ${to})`;
-/**
- * @category formatting
- * @since 1.0.0
- */
-const format = (ast, verbose = false) => {
-  switch (ast._tag) {
-    case "StringKeyword":
-    case "NumberKeyword":
-    case "BooleanKeyword":
-    case "BigIntKeyword":
-    case "UndefinedKeyword":
-    case "SymbolKeyword":
-    case "ObjectKeyword":
-    case "AnyKeyword":
-    case "UnknownKeyword":
-    case "VoidKeyword":
-    case "NeverKeyword":
-      return Option.getOrElse(getExpected(ast, verbose), () => ast._tag);
-    case "Literal":
-      return Option.getOrElse(getExpected(ast, verbose), () => formatUnknown(ast.literal));
-    case "UniqueSymbol":
-      return Option.getOrElse(getExpected(ast, verbose), () => formatUnknown(ast.symbol));
-    case "Union":
-      return Option.getOrElse(getExpected(ast, verbose), () => ast.types.map(member => format(member)).join(" | "));
-    case "TemplateLiteral":
-      return Option.getOrElse(getExpected(ast, verbose), () => formatTemplateLiteral(ast));
-    case "Tuple":
-      return Option.getOrElse(getExpected(ast, verbose), () => formatTuple(ast));
-    case "TypeLiteral":
-      return Option.getOrElse(getExpected(ast, verbose), () => formatTypeLiteral(ast));
-    case "Enums":
-      return Option.getOrElse(getExpected(ast, verbose), () => `<enum ${ast.enums.length} value(s): ${ast.enums.map((_, value) => JSON.stringify(value)).join(" | ")}>`);
-    case "Suspend":
-      return getExpected(ast, verbose).pipe(Option.orElse(() => Option.flatMap(Option.liftThrowable(ast.f)(), ast => getExpected(ast, verbose))), Option.getOrElse(() => "<suspended schema>"));
-    case "Declaration":
-      return Option.getOrElse(getExpected(ast, verbose), () => "<declaration schema>");
-    case "Refinement":
-      return Option.getOrElse(getExpected(ast, verbose), () => "<refinement schema>");
-    case "Transform":
-      return Option.getOrElse(getExpected(ast, verbose), () => formatTransformation(format(ast.from), format(ast.to)));
-  }
-};
-/** @internal */
-exports.format = format;
-const formatUnknown = u => {
-  if (Predicate.isString(u)) {
-    return JSON.stringify(u);
-  } else if (Predicate.isNumber(u) || u == null || Predicate.isBoolean(u) || Predicate.isSymbol(u) || Predicate.isDate(u)) {
-    return String(u);
-  } else if (Predicate.isBigInt(u)) {
-    return String(u) + "n";
-  } else if (!Array.isArray(u) && Predicate.hasProperty(u, "toString") && Predicate.isFunction(u["toString"]) && u["toString"] !== Object.prototype.toString) {
-    return u["toString"]();
-  }
-  try {
-    return JSON.stringify(u);
-  } catch (e) {
-    return String(u);
-  }
-};
-exports.formatUnknown = formatUnknown;
-const formatTemplateLiteral = ast => "`" + ast.head + ast.spans.map(span => formatTemplateLiteralSpan(span) + span.literal).join("") + "`";
+const formatKeyword = (ast, verbose = false) => Option.getOrElse(getExpected(ast, verbose), () => ast._tag);
 const getExpected = (ast, verbose) => {
   if (verbose) {
     const description = getDescriptionAnnotation(ast).pipe(Option.orElse(() => getTitleAnnotation(ast)));
@@ -1423,56 +2241,8 @@ const getExpected = (ast, verbose) => {
         onSome: description => Option.some(`${identifier} (${description})`)
       })
     });
-  }
-  return getIdentifierAnnotation(ast).pipe(Option.orElse(() => getTitleAnnotation(ast)), Option.orElse(() => getDescriptionAnnotation(ast)));
-};
-const formatTuple = ast => {
-  const formattedElements = ast.elements.map(element => format(element.type) + (element.isOptional ? "?" : "")).join(", ");
-  return Option.match(ast.rest, {
-    onNone: () => "readonly [" + formattedElements + "]",
-    onSome: ([head, ...tail]) => {
-      const formattedHead = format(head);
-      const wrappedHead = formattedHead.includes(" | ") ? "(" + formattedHead + ")" : formattedHead;
-      if (tail.length > 0) {
-        const formattedTail = tail.map(ast => format(ast)).join(", ");
-        if (ast.elements.length > 0) {
-          return `readonly [${formattedElements}, ...${wrappedHead}[], ${formattedTail}]`;
-        } else {
-          return `readonly [...${wrappedHead}[], ${formattedTail}]`;
-        }
-      } else {
-        if (ast.elements.length > 0) {
-          return `readonly [${formattedElements}, ...${wrappedHead}[]]`;
-        } else {
-          return `ReadonlyArray<${formattedHead}>`;
-        }
-      }
-    }
-  });
-};
-const formatTypeLiteral = ast => {
-  const formattedPropertySignatures = ast.propertySignatures.map(ps => String(ps.name) + (ps.isOptional ? "?" : "") + ": " + format(ps.type)).join("; ");
-  if (ast.indexSignatures.length > 0) {
-    const formattedIndexSignatures = ast.indexSignatures.map(is => `[x: ${format(getParameterBase(is.parameter))}]: ${format(is.type)}`).join("; ");
-    if (ast.propertySignatures.length > 0) {
-      return `{ ${formattedPropertySignatures}; ${formattedIndexSignatures} }`;
-    } else {
-      return `{ ${formattedIndexSignatures} }`;
-    }
   } else {
-    if (ast.propertySignatures.length > 0) {
-      return `{ ${formattedPropertySignatures} }`;
-    } else {
-      return "{}";
-    }
-  }
-};
-const formatTemplateLiteralSpan = span => {
-  switch (span.type._tag) {
-    case "StringKeyword":
-      return "${string}";
-    case "NumberKeyword":
-      return "${number}";
+    return getIdentifierAnnotation(ast).pipe(Option.orElse(() => getTitleAnnotation(ast)), Option.orElse(() => getDescriptionAnnotation(ast)));
   }
 };
 //# sourceMappingURL=AST.js.map
\ No newline at end of file
diff --git a/dist/cjs/AST.js.map b/dist/cjs/AST.js.map
index 8238f4347e5ef3d28e84d91a038d517ee65f07b8..76bf08bca71dccdcdcaa23868ae12464933e4bfa 100644
--- a/dist/cjs/AST.js.map
+++ b/dist/cjs/AST.js.map
@@ -1 +1 @@
-{"version":3,"file":"AST.js","names":["_Function","require","_GlobalValue","Hash","_interopRequireWildcard","Number","Option","Order","Predicate","ReadonlyArray","Internal","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","BrandAnnotationId","exports","Symbol","for","TypeAnnotationId","MessageAnnotationId","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","JSONSchemaAnnotationId","DocumentationAnnotationId","ConcurrencyAnnotationId","BatchingAnnotationId","getAnnotation","dual","annotated","key","annotations","some","none","getMessageAnnotation","getTitleAnnotation","getIdentifierAnnotation","getDescriptionAnnotation","getExamplesAnnotation","getDefaultAnnotation","getJSONSchemaAnnotation","getDocumentationAnnotation","getConcurrencyAnnotation","getBatchingAnnotation","createDeclaration","typeParameters","decodeUnknown","encodeUnknown","_tag","isDeclaration","ast","createLiteral","literal","isLiteral","_null","createUniqueSymbol","symbol","isUniqueSymbol","undefinedKeyword","isUndefinedKeyword","voidKeyword","isVoidKeyword","neverKeyword","isNeverKeyword","unknownKeyword","isUnknownKeyword","anyKeyword","isAnyKeyword","stringKeyword","isStringKeyword","numberKeyword","isNumberKeyword","booleanKeyword","isBooleanKeyword","bigIntKeyword","isBigIntKeyword","symbolKeyword","isSymbolKeyword","objectKeyword","isObjectKeyword","createEnums","enums","isEnums","createTemplateLiteral","head","spans","isNonEmptyReadonlyArray","isTemplateLiteral","createElement","type","isOptional","createTuple","elements","rest","isReadonly","isTuple","createPropertySignature","name","isParameter","from","createIndexSignature","parameter","Error","createTypeLiteral","propertySignatures","indexSignatures","keys","length","String","parameters","string","getParameterBase","sortPropertySignatures","sortIndexSignatures","isTypeLiteral","isMembers","as","createUnion","candidates","types","unify","sortUnionMembers","isUnion","createSuspend","f","memoizeThunk","isSuspend","createRefinement","filter","isRefinement","createTransform","to","transformation","isTransform","createFinalTransformation","decode","encode","isFinalTransformation","composeTransformation","isComposeTransformation","createFinalPropertySignatureTransformation","isFinalPropertySignatureTransformation","createPropertySignatureTransform","propertySignatureTransformation","createTypeLiteralTransformation","propertySignatureTransformations","pst","isTypeLiteralTransformation","mergeAnnotations","setAnnotation","sym","value","appendRestElement","restElement","isSome","appendElement","newElement","pipe","match","onNone","onSome","keyof","_keyof","getTemplateLiteralRegex","pattern","span","RegExp","getPropertySignatures","slice","getPropertyKeys","map","getPropertyKeyIndexedAccess","getNumberIndexedAccess","hasOptional","out","push","format","ops","findFirst","ps","isString","is","parameterBase","regex","test","isSymbol","reduce","intersection","createRecord","go","isNumber","formatUnknown","forEach","pick","omit","includes","orUndefined","partial","options","exact","member","required","mutable","getCompiler","compile","getToPropertySignatures","p","getToIndexSignatures","preserveIdentifierAnnotation","undefined","identifier","toStringMemoSet","globalValue","WeakSet","containerASTTags","Declaration","Refinement","Tuple","TypeLiteral","Union","Suspend","Transform","isContainerAST","toString","JSON","stringify","add","k","ownKeys","hash","getCardinality","sort","mapInput","WeightOrder","tuple","maxWeight","max","emptyWeight","maxWeightAll","weights","getWeight","y","z","x","reverse","flatMap","findIndex","m","j","equalsTemplateLiteralSpan","getEquivalence","self","that","equalsEnums","equals","intersectionWith","concat","compose","ab","cd","rename","mapping","propertySignatureTransforms","identity","formatTransformation","verbose","getOrElse","getExpected","join","formatTemplateLiteral","formatTuple","formatTypeLiteral","_","orElse","liftThrowable","isBoolean","isDate","isBigInt","Array","isArray","hasProperty","isFunction","formatTemplateLiteralSpan","description","formattedElements","element","tail","formattedHead","wrappedHead","formattedTail","formattedPropertySignatures","formattedIndexSignatures"],"sources":["../../src/AST.ts"],"sourcesContent":[null],"mappings":";;;;;;;AAKA,IAAAA,SAAA,gBAAAC,OAAA;AACA,IAAAC,YAAA,gBAAAD,OAAA;AACA,IAAAE,IAAA,gBAAAC,uBAAA,eAAAH,OAAA;AACA,IAAAI,MAAA,gBAAAD,uBAAA,eAAAH,OAAA;AACA,IAAAK,MAAA,gBAAAF,uBAAA,eAAAH,OAAA;AACA,IAAAM,KAAA,gBAAAH,uBAAA,eAAAH,OAAA;AACA,IAAAO,SAAA,gBAAAJ,uBAAA,eAAAH,OAAA;AACA,IAAAQ,aAAA,gBAAAL,uBAAA,eAAAH,OAAA;AAEA,IAAAS,QAAA,gBAAAN,uBAAA,eAAAH,OAAA;AAA6C,SAAAU,yBAAAC,CAAA;EAAA,yBAAAC,OAAA;EAAA,IAAAC,CAAA,OAAAD,OAAA;IAAAE,CAAA,OAAAF,OAAA;EAAA,QAAAF,wBAAA,YAAAA,CAAAC,CAAA;IAAA,OAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA;EAAA,GAAAF,CAAA;AAAA;AAAA,SAAAR,wBAAAQ,CAAA,EAAAE,CAAA;EAAA,KAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA;EAAA,aAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA;IAAAK,OAAA,EAAAL;EAAA;EAAA,IAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA;EAAA,IAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA;EAAA,IAAAQ,CAAA;MAAAC,SAAA;IAAA;IAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA;EAAA,SAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,EAAAc,CAAA;IAAA,IAAAI,CAAA,GAAAR,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA;IAAAI,CAAA,KAAAA,CAAA,CAAAX,GAAA,IAAAW,CAAA,CAAAC,GAAA,IAAAR,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAI,CAAA,IAAAV,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA;EAAA;EAAA,OAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAgB,GAAA,CAAAnB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAAA;AAd7C;;;;AA2BA;;;;AAIO,MAAMY,iBAAiB,GAAAC,OAAA,CAAAD,iBAAA,gBAAGE,MAAM,CAACC,GAAG,CAAC,iCAAiC,CAAC;AAQ9E;;;;AAIO,MAAMC,gBAAgB,GAAAH,OAAA,CAAAG,gBAAA,gBAAGF,MAAM,CAACC,GAAG,CAAC,gCAAgC,CAAC;AAQ5E;;;;AAIO,MAAME,mBAAmB,GAAAJ,OAAA,CAAAI,mBAAA,gBAAGH,MAAM,CAACC,GAAG,CAAC,mCAAmC,CAAC;AAQlF;;;;AAIO,MAAMG,sBAAsB,GAAAL,OAAA,CAAAK,sBAAA,gBAAGJ,MAAM,CAACC,GAAG,CAAC,sCAAsC,CAAC;AAQxF;;;;AAIO,MAAMI,iBAAiB,GAAAN,OAAA,CAAAM,iBAAA,gBAAGL,MAAM,CAACC,GAAG,CAAC,iCAAiC,CAAC;AAQ9E;;;;AAIO,MAAMK,uBAAuB,GAAAP,OAAA,CAAAO,uBAAA,gBAAGN,MAAM,CAACC,GAAG,CAAC,uCAAuC,CAAC;AAQ1F;;;;AAIO,MAAMM,oBAAoB,GAAAR,OAAA,CAAAQ,oBAAA,gBAAGP,MAAM,CAACC,GAAG,CAAC,oCAAoC,CAAC;AAQpF;;;;AAIO,MAAMO,mBAAmB,GAAAT,OAAA,CAAAS,mBAAA,gBAAGR,MAAM,CAACC,GAAG,CAAC,mCAAmC,CAAC;AAQlF;;;;AAIO,MAAMQ,sBAAsB,GAAAV,OAAA,CAAAU,sBAAA,gBAAGT,MAAM,CAACC,GAAG,CAAC,sCAAsC,CAAC;AAQxF;;;;AAIO,MAAMS,yBAAyB,GAAAX,OAAA,CAAAW,yBAAA,gBAAGV,MAAM,CAACC,GAAG,CAAC,yCAAyC,CAAC;AAQ9F;;;;AAIO,MAAMU,uBAAuB,GAAAZ,OAAA,CAAAY,uBAAA,gBAAGX,MAAM,CAACC,GAAG,CAAC,uCAAuC,CAAC;AAQ1F;;;;AAIO,MAAMW,oBAAoB,GAAAb,OAAA,CAAAa,oBAAA,gBAAGZ,MAAM,CAACC,GAAG,CAAC,oCAAoC,CAAC;AAkBpF;;;;AAIO,MAAMY,aAAa,GAAAd,OAAA,CAAAc,aAAA,gBAGtB,IAAA/C,SAAA,CAAAgD,IAAI,EACN,CAAC,EACD,CAAIC,SAAoB,EAAEC,GAAW,KACnC3B,MAAM,CAACI,SAAS,CAACC,cAAc,CAACC,IAAI,CAACoB,SAAS,CAACE,WAAW,EAAED,GAAG,CAAC,GAC9D5C,MAAM,CAAC8C,IAAI,CAACH,SAAS,CAACE,WAAW,CAACD,GAAG,CAAQ,CAAC,GAC9C5C,MAAM,CAAC+C,IAAI,EAAE,CAClB;AAED;;;;AAIO,MAAMC,oBAAoB,GAAArB,OAAA,CAAAqB,oBAAA,gBAAGP,aAAa,CAC/CV,mBAAmB,CACpB;AAED;;;;AAIO,MAAMkB,kBAAkB,GAAAtB,OAAA,CAAAsB,kBAAA,gBAAGR,aAAa,CAC7CR,iBAAiB,CAClB;AAED;;;;AAIO,MAAMiB,uBAAuB,GAAAvB,OAAA,CAAAuB,uBAAA,gBAAGT,aAAa,CAClDT,sBAAsB,CACvB;AAED;;;;AAIO,MAAMmB,wBAAwB,GAAAxB,OAAA,CAAAwB,wBAAA,gBAAGV,aAAa,CACnDP,uBAAuB,CACxB;AAED;;;;AAIO,MAAMkB,qBAAqB,GAAAzB,OAAA,CAAAyB,qBAAA,gBAAGX,aAAa,CAChDN,oBAAoB,CACrB;AAED;;;;AAIO,MAAMkB,oBAAoB,GAAA1B,OAAA,CAAA0B,oBAAA,gBAAGZ,aAAa,CAC/CL,mBAAmB,CACpB;AAED;;;;AAIO,MAAMkB,uBAAuB,GAAA3B,OAAA,CAAA2B,uBAAA,gBAAGb,aAAa,CAClDJ,sBAAsB,CACvB;AAED;;;;AAIO,MAAMkB,0BAA0B,GAAA5B,OAAA,CAAA4B,0BAAA,gBAAGd,aAAa,CACrDH,yBAAyB,CAC1B;AAED;;;;AAIO,MAAMkB,wBAAwB,GAAA7B,OAAA,CAAA6B,wBAAA,gBAAGf,aAAa,CACnDF,uBAAuB,CACxB;AAED;;;;AAIO,MAAMkB,qBAAqB,GAAA9B,OAAA,CAAA8B,qBAAA,gBAAGhB,aAAa,CAChDD,oBAAoB,CACrB;AAmDD;;;;AAIO,MAAMkB,iBAAiB,GAAGA,CAC/BC,cAAkC,EAClCC,aAA2C,EAC3CC,aAA2C,EAC3ChB,WAAA,GAA2B,EAAE,MACZ;EAAEiB,IAAI,EAAE,aAAa;EAAEH,cAAc;EAAEC,aAAa;EAAEC,aAAa;EAAEhB;AAAW,CAAE,CAAC;AAEtG;;;;AAAAlB,OAAA,CAAA+B,iBAAA,GAAAA,iBAAA;AAIO,MAAMK,aAAa,GAAIC,GAAQ,IAAyBA,GAAG,CAACF,IAAI,KAAK,aAAa;AAiBzF;;;;AAAAnC,OAAA,CAAAoC,aAAA,GAAAA,aAAA;AAIO,MAAME,aAAa,GAAGA,CAC3BC,OAAqB,EACrBrB,WAAA,GAA2B,EAAE,MAChB;EAAEiB,IAAI,EAAE,SAAS;EAAEI,OAAO;EAAErB;AAAW,CAAE,CAAC;AAEzD;;;;AAAAlB,OAAA,CAAAsC,aAAA,GAAAA,aAAA;AAIO,MAAME,SAAS,GAAIH,GAAQ,IAAqBA,GAAG,CAACF,IAAI,KAAK,SAAS;AAE7E;AAAAnC,OAAA,CAAAwC,SAAA,GAAAA,SAAA;AACO,MAAMC,KAAK,GAAAzC,OAAA,CAAAyC,KAAA,gBAAGH,aAAa,CAAC,IAAI,EAAE;EACvC,CAACjC,sBAAsB,GAAG;CAC3B,CAAC;AAWF;;;;AAIO,MAAMqC,kBAAkB,GAAGA,CAChCC,MAAc,EACdzB,WAAA,GAA2B,EAAE,MACX;EAAEiB,IAAI,EAAE,cAAc;EAAEQ,MAAM;EAAEzB;AAAW,CAAE,CAAC;AAElE;;;;AAAAlB,OAAA,CAAA0C,kBAAA,GAAAA,kBAAA;AAIO,MAAME,cAAc,GAAIP,GAAQ,IAA0BA,GAAG,CAACF,IAAI,KAAK,cAAc;AAU5F;;;;AAAAnC,OAAA,CAAA4C,cAAA,GAAAA,cAAA;AAIO,MAAMC,gBAAgB,GAAA7C,OAAA,CAAA6C,gBAAA,GAAqB;EAChDV,IAAI,EAAE,kBAAkB;EACxBjB,WAAW,EAAE;IACX,CAACZ,iBAAiB,GAAG;;CAExB;AAED;;;;AAIO,MAAMwC,kBAAkB,GAAIT,GAAQ,IAA8BA,GAAG,CAACF,IAAI,KAAK,kBAAkB;AAUxG;;;;AAAAnC,OAAA,CAAA8C,kBAAA,GAAAA,kBAAA;AAIO,MAAMC,WAAW,GAAA/C,OAAA,CAAA+C,WAAA,GAAgB;EACtCZ,IAAI,EAAE,aAAa;EACnBjB,WAAW,EAAE;IACX,CAACZ,iBAAiB,GAAG;;CAExB;AAED;;;;AAIO,MAAM0C,aAAa,GAAIX,GAAQ,IAAyBA,GAAG,CAACF,IAAI,KAAK,aAAa;AAUzF;;;;AAAAnC,OAAA,CAAAgD,aAAA,GAAAA,aAAA;AAIO,MAAMC,YAAY,GAAAjD,OAAA,CAAAiD,YAAA,GAAiB;EACxCd,IAAI,EAAE,cAAc;EACpBjB,WAAW,EAAE;IACX,CAACZ,iBAAiB,GAAG;;CAExB;AAED;;;;AAIO,MAAM4C,cAAc,GAAIb,GAAQ,IAA0BA,GAAG,CAACF,IAAI,KAAK,cAAc;AAU5F;;;;AAAAnC,OAAA,CAAAkD,cAAA,GAAAA,cAAA;AAIO,MAAMC,cAAc,GAAAnD,OAAA,CAAAmD,cAAA,GAAmB;EAC5ChB,IAAI,EAAE,gBAAgB;EACtBjB,WAAW,EAAE;IACX,CAACZ,iBAAiB,GAAG;;CAExB;AAED;;;;AAIO,MAAM8C,gBAAgB,GAAIf,GAAQ,IAA4BA,GAAG,CAACF,IAAI,KAAK,gBAAgB;AAUlG;;;;AAAAnC,OAAA,CAAAoD,gBAAA,GAAAA,gBAAA;AAIO,MAAMC,UAAU,GAAArD,OAAA,CAAAqD,UAAA,GAAe;EACpClB,IAAI,EAAE,YAAY;EAClBjB,WAAW,EAAE;IACX,CAACZ,iBAAiB,GAAG;;CAExB;AAED;;;;AAIO,MAAMgD,YAAY,GAAIjB,GAAQ,IAAwBA,GAAG,CAACF,IAAI,KAAK,YAAY;AAUtF;;;;AAAAnC,OAAA,CAAAsD,YAAA,GAAAA,YAAA;AAIO,MAAMC,aAAa,GAAAvD,OAAA,CAAAuD,aAAA,GAAkB;EAC1CpB,IAAI,EAAE,eAAe;EACrBjB,WAAW,EAAE;IACX,CAACZ,iBAAiB,GAAG,QAAQ;IAC7B,CAACC,uBAAuB,GAAG;;CAE9B;AAED;;;;AAIO,MAAMiD,eAAe,GAAInB,GAAQ,IAA2BA,GAAG,CAACF,IAAI,KAAK,eAAe;AAU/F;;;;AAAAnC,OAAA,CAAAwD,eAAA,GAAAA,eAAA;AAIO,MAAMC,aAAa,GAAAzD,OAAA,CAAAyD,aAAA,GAAkB;EAC1CtB,IAAI,EAAE,eAAe;EACrBjB,WAAW,EAAE;IACX,CAACZ,iBAAiB,GAAG,QAAQ;IAC7B,CAACC,uBAAuB,GAAG;;CAE9B;AAED;;;;AAIO,MAAMmD,eAAe,GAAIrB,GAAQ,IAA2BA,GAAG,CAACF,IAAI,KAAK,eAAe;AAU/F;;;;AAAAnC,OAAA,CAAA0D,eAAA,GAAAA,eAAA;AAIO,MAAMC,cAAc,GAAA3D,OAAA,CAAA2D,cAAA,GAAmB;EAC5CxB,IAAI,EAAE,gBAAgB;EACtBjB,WAAW,EAAE;IACX,CAACZ,iBAAiB,GAAG,SAAS;IAC9B,CAACC,uBAAuB,GAAG;;CAE9B;AAED;;;;AAIO,MAAMqD,gBAAgB,GAAIvB,GAAQ,IAA4BA,GAAG,CAACF,IAAI,KAAK,gBAAgB;AAUlG;;;;AAAAnC,OAAA,CAAA4D,gBAAA,GAAAA,gBAAA;AAIO,MAAMC,aAAa,GAAA7D,OAAA,CAAA6D,aAAA,GAAkB;EAC1C1B,IAAI,EAAE,eAAe;EACrBjB,WAAW,EAAE;IACX,CAACZ,iBAAiB,GAAG,QAAQ;IAC7B,CAACC,uBAAuB,GAAG;;CAE9B;AAED;;;;AAIO,MAAMuD,eAAe,GAAIzB,GAAQ,IAA2BA,GAAG,CAACF,IAAI,KAAK,eAAe;AAU/F;;;;AAAAnC,OAAA,CAAA8D,eAAA,GAAAA,eAAA;AAIO,MAAMC,aAAa,GAAA/D,OAAA,CAAA+D,aAAA,GAAkB;EAC1C5B,IAAI,EAAE,eAAe;EACrBjB,WAAW,EAAE;IACX,CAACZ,iBAAiB,GAAG,QAAQ;IAC7B,CAACC,uBAAuB,GAAG;;CAE9B;AAED;;;;AAIO,MAAMyD,eAAe,GAAI3B,GAAQ,IAA2BA,GAAG,CAACF,IAAI,KAAK,eAAe;AAU/F;;;;AAAAnC,OAAA,CAAAgE,eAAA,GAAAA,eAAA;AAIO,MAAMC,aAAa,GAAAjE,OAAA,CAAAiE,aAAA,GAAkB;EAC1C9B,IAAI,EAAE,eAAe;EACrBjB,WAAW,EAAE;IACX,CAACb,sBAAsB,GAAG,QAAQ;IAClC,CAACC,iBAAiB,GAAG,QAAQ;IAC7B,CAACC,uBAAuB,GAAG;;CAE9B;AAED;;;;AAIO,MAAM2D,eAAe,GAAI7B,GAAQ,IAA2BA,GAAG,CAACF,IAAI,KAAK,eAAe;AAW/F;;;;AAAAnC,OAAA,CAAAkE,eAAA,GAAAA,eAAA;AAIO,MAAMC,WAAW,GAAGA,CACzBC,KAAwD,EACxDlD,WAAA,GAA2B,EAAE,MAClB;EAAEiB,IAAI,EAAE,OAAO;EAAEiC,KAAK;EAAElD;AAAW,CAAE,CAAC;AAEnD;;;;AAAAlB,OAAA,CAAAmE,WAAA,GAAAA,WAAA;AAIO,MAAME,OAAO,GAAIhC,GAAQ,IAAmBA,GAAG,CAACF,IAAI,KAAK,OAAO;AAoBvE;;;;AAAAnC,OAAA,CAAAqE,OAAA,GAAAA,OAAA;AAIO,MAAMC,qBAAqB,GAAGA,CACnCC,IAAY,EACZC,KAAyC,EACzCtD,WAAA,GAA2B,EAAE,KAE7B1C,aAAa,CAACiG,uBAAuB,CAACD,KAAK,CAAC,GAC1C;EAAErC,IAAI,EAAE,iBAAiB;EAAEoC,IAAI;EAAEC,KAAK;EAAEtD;AAAW,CAAE,GACrDoB,aAAa,CAACiC,IAAI,CAAC;AAEvB;;;;AAAAvE,OAAA,CAAAsE,qBAAA,GAAAA,qBAAA;AAIO,MAAMI,iBAAiB,GAAIrC,GAAQ,IAA6BA,GAAG,CAACF,IAAI,KAAK,iBAAiB;AAUrG;;;AAAAnC,OAAA,CAAA0E,iBAAA,GAAAA,iBAAA;AAGO,MAAMC,aAAa,GAAGA,CAC3BC,IAAS,EACTC,UAAmB,MACN;EAAED,IAAI;EAAEC;AAAU,CAAE,CAAC;AAapC;;;;AAAA7E,OAAA,CAAA2E,aAAA,GAAAA,aAAA;AAIO,MAAMG,WAAW,GAAGA,CACzBC,QAAgC,EAChCC,IAA6D,EAC7DC,UAAmB,EACnB/D,WAAA,GAA2B,EAAE,MAClB;EAAEiB,IAAI,EAAE,OAAO;EAAE4C,QAAQ;EAAEC,IAAI;EAAEC,UAAU;EAAE/D;AAAW,CAAE,CAAC;AAExE;;;;AAAAlB,OAAA,CAAA8E,WAAA,GAAAA,WAAA;AAIO,MAAMI,OAAO,GAAI7C,GAAQ,IAAmBA,GAAG,CAACF,IAAI,KAAK,OAAO;AAYvE;;;AAAAnC,OAAA,CAAAkF,OAAA,GAAAA,OAAA;AAGO,MAAMC,uBAAuB,GAAGA,CACrCC,IAAiB,EACjBR,IAAS,EACTC,UAAmB,EACnBI,UAAmB,EACnB/D,WAAA,GAA2B,EAAE,MACN;EAAEkE,IAAI;EAAER,IAAI;EAAEC,UAAU;EAAEI,UAAU;EAAE/D;AAAW,CAAE,CAAC;AAO7E;;;AAAAlB,OAAA,CAAAmF,uBAAA,GAAAA,uBAAA;AAGO,MAAME,WAAW,GAAIhD,GAAQ,IAAsB;EACxD,QAAQA,GAAG,CAACF,IAAI;IACd,KAAK,eAAe;IACpB,KAAK,eAAe;IACpB,KAAK,iBAAiB;MACpB,OAAO,IAAI;IACb,KAAK,YAAY;MACf,OAAOkD,WAAW,CAAChD,GAAG,CAACiD,IAAI,CAAC;IAC9B;MACE,OAAO,KAAK;EAChB;AACF,CAAC;AAWD;;;AAAAtF,OAAA,CAAAqF,WAAA,GAAAA,WAAA;AAGO,MAAME,oBAAoB,GAAGA,CAClCC,SAAc,EACdZ,IAAS,EACTK,UAAmB,KACD;EAClB,IAAII,WAAW,CAACG,SAAS,CAAC,EAAE;IAC1B,OAAQ;MAAEA,SAAS;MAAEZ,IAAI;MAAEK;IAAU,CAAE;EACzC;EACA,MAAM,IAAIQ,KAAK,CACb,6HAA6H,CAC9H;AACH,CAAC;AAYD;;;;AAAAzF,OAAA,CAAAuF,oBAAA,GAAAA,oBAAA;AAIO,MAAMG,iBAAiB,GAAGA,CAC/BC,kBAAoD,EACpDC,eAA8C,EAC9C1E,WAAA,GAA2B,EAAE,KACd;EACf;EACA,MAAM2E,IAAI,GAA8B,EAAE;EAC1C,KAAK,IAAIhG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8F,kBAAkB,CAACG,MAAM,EAAEjG,CAAC,EAAE,EAAE;IAClD,MAAMuF,IAAI,GAAGO,kBAAkB,CAAC9F,CAAC,CAAC,CAACuF,IAAI;IACvC,IAAI9F,MAAM,CAACI,SAAS,CAACC,cAAc,CAACC,IAAI,CAACiG,IAAI,EAAET,IAAI,CAAC,EAAE;MACpD,MAAM,IAAIK,KAAK,CAAC,gCAAgCM,MAAM,CAACX,IAAI,CAAC,EAAE,CAAC;IACjE;IACAS,IAAI,CAACT,IAAI,CAAC,GAAG,IAAI;EACnB;EACA;EACA,MAAMY,UAAU,GAAG;IACjBC,MAAM,EAAE,KAAK;IACbtD,MAAM,EAAE;GACT;EACD,KAAK,IAAI9C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+F,eAAe,CAACE,MAAM,EAAEjG,CAAC,EAAE,EAAE;IAC/C,MAAM2F,SAAS,GAAGU,gBAAgB,CAACN,eAAe,CAAC/F,CAAC,CAAC,CAAC2F,SAAS,CAAC;IAChE,IAAIhC,eAAe,CAACgC,SAAS,CAAC,EAAE;MAC9B,IAAIQ,UAAU,CAACC,MAAM,EAAE;QACrB,MAAM,IAAIR,KAAK,CAAC,6CAA6C,CAAC;MAChE;MACAO,UAAU,CAACC,MAAM,GAAG,IAAI;IAC1B,CAAC,MAAM,IAAIjC,eAAe,CAACwB,SAAS,CAAC,EAAE;MACrC,IAAIQ,UAAU,CAACrD,MAAM,EAAE;QACrB,MAAM,IAAI8C,KAAK,CAAC,6CAA6C,CAAC;MAChE;MACAO,UAAU,CAACrD,MAAM,GAAG,IAAI;IAC1B;EACF;EACA,OAAO;IACLR,IAAI,EAAE,aAAa;IACnBwD,kBAAkB,EAAEQ,sBAAsB,CAACR,kBAAkB,CAAC;IAC9DC,eAAe,EAAEQ,mBAAmB,CAACR,eAAe,CAAC;IACrD1E;GACD;AACH,CAAC;AAED;;;;AAAAlB,OAAA,CAAA0F,iBAAA,GAAAA,iBAAA;AAIO,MAAMW,aAAa,GAAIhE,GAAQ,IAAyBA,GAAG,CAACF,IAAI,KAAK,aAAa;AAAAnC,OAAA,CAAAqG,aAAA,GAAAA,aAAA;AAgBzF,MAAMC,SAAS,GAAOC,EAAoB,IAAyCA,EAAE,CAACT,MAAM,GAAG,CAAC;AAEhG;;;;AAIO,MAAMU,WAAW,GAAGA,CACzBC,UAA8B,EAC9BvF,WAAA,GAA2B,EAAE,KACtB;EACP,MAAMwF,KAAK,GAAGC,KAAK,CAACF,UAAU,CAAC;EAC/B,IAAIH,SAAS,CAACI,KAAK,CAAC,EAAE;IACpB,OAAO;MACLvE,IAAI,EAAE,OAAO;MACbuE,KAAK,EAAEE,gBAAgB,CAACF,KAAK,CAAC;MAC9BxF;KACD;EACH;EACA,IAAI1C,aAAa,CAACiG,uBAAuB,CAACiC,KAAK,CAAC,EAAE;IAChD,OAAOA,KAAK,CAAC,CAAC,CAAC;EACjB;EACA,OAAOzD,YAAY;AACrB,CAAC;AAED;;;;AAAAjD,OAAA,CAAAwG,WAAA,GAAAA,WAAA;AAIO,MAAMK,OAAO,GAAIxE,GAAQ,IAAmBA,GAAG,CAACF,IAAI,KAAK,OAAO;AAWvE;;;;AAAAnC,OAAA,CAAA6G,OAAA,GAAAA,OAAA;AAIO,MAAMC,aAAa,GAAGA,CAC3BC,CAAY,EACZ7F,WAAA,GAA2B,EAAE,MAChB;EACbiB,IAAI,EAAE,SAAS;EACf4E,CAAC,EAAEtI,QAAQ,CAACuI,YAAY,CAACD,CAAC,CAAC;EAC3B7F;CACD,CAAC;AAEF;;;;AAAAlB,OAAA,CAAA8G,aAAA,GAAAA,aAAA;AAIO,MAAMG,SAAS,GAAI5E,GAAQ,IAAqBA,GAAG,CAACF,IAAI,KAAK,SAAS;AAgB7E;;;;AAAAnC,OAAA,CAAAiH,SAAA,GAAAA,SAAA;AAIO,MAAMC,gBAAgB,GAAGA,CAC9B5B,IAAU,EACV6B,MAA4B,EAC5BjG,WAAA,GAA2B,EAAE,KACT;EACpB,OAAO;IAAEiB,IAAI,EAAE,YAAY;IAAEmD,IAAI;IAAE6B,MAAM;IAAEjG;EAAW,CAAE;AAC1D,CAAC;AAED;;;;AAAAlB,OAAA,CAAAkH,gBAAA,GAAAA,gBAAA;AAIO,MAAME,YAAY,GAAI/E,GAAQ,IAAwBA,GAAG,CAACF,IAAI,KAAK,YAAY;AAwBtF;;;;AAAAnC,OAAA,CAAAoH,YAAA,GAAAA,YAAA;AAIO,MAAMC,eAAe,GAAGA,CAC7B/B,IAAS,EACTgC,EAAO,EACPC,cAA8B,EAC9BrG,WAAA,GAA2B,EAAE,MACd;EAAEiB,IAAI,EAAE,WAAW;EAAEmD,IAAI;EAAEgC,EAAE;EAAEC,cAAc;EAAErG;AAAW,CAAE,CAAC;AAE9E;;;;AAAAlB,OAAA,CAAAqH,eAAA,GAAAA,eAAA;AAIO,MAAMG,WAAW,GAAInF,GAAQ,IAAuBA,GAAG,CAACF,IAAI,KAAK,WAAW;AAqBnF;;;;AAAAnC,OAAA,CAAAwH,WAAA,GAAAA,WAAA;AAIO,MAAMC,yBAAyB,GAAGA,CACvCC,MAAqC,EACrCC,MAAqC,MACZ;EAAExF,IAAI,EAAE,qBAAqB;EAAEuF,MAAM;EAAEC;AAAM,CAAE,CAAC;AAE3E;;;;AAAA3H,OAAA,CAAAyH,yBAAA,GAAAA,yBAAA;AAIO,MAAMG,qBAAqB,GAAIvF,GAAmB,IACvDA,GAAG,CAACF,IAAI,KAAK,qBAAqB;AAUpC;;;;AAAAnC,OAAA,CAAA4H,qBAAA,GAAAA,qBAAA;AAIO,MAAMC,qBAAqB,GAAA7H,OAAA,CAAA6H,qBAAA,GAA0B;EAAE1F,IAAI,EAAE;AAAuB,CAAE;AAE7F;;;;AAIO,MAAM2F,uBAAuB,GAAIzF,GAAmB,IACzDA,GAAG,CAACF,IAAI,KAAK,uBAAuB;AAsBtC;;;;AAAAnC,OAAA,CAAA8H,uBAAA,GAAAA,uBAAA;AAIO,MAAMC,0CAA0C,GAAGA,CACxDL,MAAsD,EACtDC,MAAsD,MACZ;EAC1CxF,IAAI,EAAE,sCAAsC;EAC5CuF,MAAM;EACNC;CACD,CAAC;AAEF;;;;AAAA3H,OAAA,CAAA+H,0CAAA,GAAAA,0CAAA;AAIO,MAAMC,sCAAsC,GACjD3F,GAAoC,IACYA,GAAG,CAACF,IAAI,KAAK,sCAAsC;AAkBrG;;;;AAAAnC,OAAA,CAAAgI,sCAAA,GAAAA,sCAAA;AAIO,MAAMC,gCAAgC,GAAGA,CAC9C3C,IAAiB,EACjBgC,EAAe,EACfY,+BAAgE,MAChC;EAAE5C,IAAI;EAAEgC,EAAE;EAAEY;AAA+B,CAAE,CAAC;AAahF;;;;AAAAlI,OAAA,CAAAiI,gCAAA,GAAAA,gCAAA;AAIO,MAAME,+BAA+B,GAC1CC,gCAA+F,IAClE;EAC7B;EACA,MAAMvC,IAAI,GAA8B,EAAE;EAC1C,KAAK,MAAMwC,GAAG,IAAID,gCAAgC,EAAE;IAClD,MAAMnH,GAAG,GAAGoH,GAAG,CAAC/C,IAAI;IACpB,IAAIO,IAAI,CAAC5E,GAAG,CAAC,EAAE;MACb,MAAM,IAAIwE,KAAK,CAAC,+CAA+CM,MAAM,CAAC9E,GAAG,CAAC,EAAE,CAAC;IAC/E;IACA4E,IAAI,CAAC5E,GAAG,CAAC,GAAG,IAAI;EAClB;EAEA,OAAO;IACLkB,IAAI,EAAE,2BAA2B;IACjCiG;GACD;AACH,CAAC;AAED;;;;AAAApI,OAAA,CAAAmI,+BAAA,GAAAA,+BAAA;AAIO,MAAMG,2BAA2B,GACtCjG,GAAmB,IACkBA,GAAG,CAACF,IAAI,KAAK,2BAA2B;AAE/E;AACA;AACA;AAEA;;;;;AAAAnC,OAAA,CAAAsI,2BAAA,GAAAA,2BAAA;AAKO,MAAMC,gBAAgB,GAAGA,CAAClG,GAAQ,EAAEnB,WAAwB,KAAS;EAC1E,OAAO;IACL,GAAGmB,GAAG;IACNnB,WAAW,EAAE;MAAE,GAAGmB,GAAG,CAACnB,WAAW;MAAE,GAAGA;IAAW;GAClD;AACH,CAAC;AAED;;;;;AAAAlB,OAAA,CAAAuI,gBAAA,GAAAA,gBAAA;AAKO,MAAMC,aAAa,GAAGA,CAACnG,GAAQ,EAAEoG,GAAW,EAAEC,KAAc,KAAS;EAC1E,OAAO;IACL,GAAGrG,GAAG;IACNnB,WAAW,EAAE;MAAE,GAAGmB,GAAG,CAACnB,WAAW;MAAE,CAACuH,GAAG,GAAGC;IAAK;GAChD;AACH,CAAC;AAED;;;;;AAAA1I,OAAA,CAAAwI,aAAA,GAAAA,aAAA;AAKO,MAAMG,iBAAiB,GAAGA,CAC/BtG,GAAU,EACVuG,WAAgB,KACP;EACT,IAAIvK,MAAM,CAACwK,MAAM,CAACxG,GAAG,CAAC2C,IAAI,CAAC,EAAE;IAC3B;IACA,MAAM,IAAIS,KAAK,CAAC,6DAA6D,CAAC;EAChF;EACA,OAAOX,WAAW,CAACzC,GAAG,CAAC0C,QAAQ,EAAE1G,MAAM,CAAC8C,IAAI,CAAC,CAACyH,WAAW,CAAC,CAAC,EAAEvG,GAAG,CAAC4C,UAAU,CAAC;AAC9E,CAAC;AAED;;;;;;;AAAAjF,OAAA,CAAA2I,iBAAA,GAAAA,iBAAA;AAOO,MAAMG,aAAa,GAAGA,CAC3BzG,GAAU,EACV0G,UAAmB,KACV;EACT,IAAI1G,GAAG,CAAC0C,QAAQ,CAAC5D,IAAI,CAAExC,CAAC,IAAKA,CAAC,CAACkG,UAAU,CAAC,IAAI,CAACkE,UAAU,CAAClE,UAAU,EAAE;IACpE,MAAM,IAAIY,KAAK,CAAC,gEAAgE,CAAC;EACnF;EACA,OAAO,IAAA1H,SAAA,CAAAiL,IAAI,EACT3G,GAAG,CAAC2C,IAAI,EACR3G,MAAM,CAAC4K,KAAK,CAAC;IACXC,MAAM,EAAEA,CAAA,KAAMpE,WAAW,CAAC,CAAC,GAAGzC,GAAG,CAAC0C,QAAQ,EAAEgE,UAAU,CAAC,EAAE1K,MAAM,CAAC+C,IAAI,EAAE,EAAEiB,GAAG,CAAC4C,UAAU,CAAC;IACvFkE,MAAM,EAAGnE,IAAI,IAAI;MACf,IAAI+D,UAAU,CAAClE,UAAU,EAAE;QACzB,MAAM,IAAIY,KAAK,CAAC,4DAA4D,CAAC;MAC/E;MACA,OAAOX,WAAW,CAACzC,GAAG,CAAC0C,QAAQ,EAAE1G,MAAM,CAAC8C,IAAI,CAAC,CAAC,GAAG6D,IAAI,EAAE+D,UAAU,CAACnE,IAAI,CAAC,CAAC,EAAEvC,GAAG,CAAC4C,UAAU,CAAC;IAC3F;GACD,CAAC,CACH;AACH,CAAC;AAED;;;;;AAAAjF,OAAA,CAAA8I,aAAA,GAAAA,aAAA;AAKO,MAAMM,KAAK,GAAI/G,GAAQ,IAAUmE,WAAW,CAAC6C,MAAM,CAAChH,GAAG,CAAC,CAAC;AAEhE;AAAArC,OAAA,CAAAoJ,KAAA,GAAAA,KAAA;AACO,MAAME,uBAAuB,GAAIjH,GAAoB,IAAY;EACtE,IAAIkH,OAAO,GAAG,IAAIlH,GAAG,CAACkC,IAAI,EAAE;EAC5B,KAAK,MAAMiF,IAAI,IAAInH,GAAG,CAACmC,KAAK,EAAE;IAC5B,IAAIhB,eAAe,CAACgG,IAAI,CAAC5E,IAAI,CAAC,EAAE;MAC9B2E,OAAO,IAAI,IAAI;IACjB,CAAC,MAAM,IAAI7F,eAAe,CAAC8F,IAAI,CAAC5E,IAAI,CAAC,EAAE;MACrC2E,OAAO,IAAI,qCAAqC;IAClD;IACAA,OAAO,IAAIC,IAAI,CAACjH,OAAO;EACzB;EACAgH,OAAO,IAAI,GAAG;EACd,OAAO,IAAIE,MAAM,CAACF,OAAO,CAAC;AAC5B,CAAC;AAED;;;AAAAvJ,OAAA,CAAAsJ,uBAAA,GAAAA,uBAAA;AAGO,MAAMI,qBAAqB,GAAIrH,GAAQ,IAA8B;EAC1E,QAAQA,GAAG,CAACF,IAAI;IACd,KAAK,aAAa;MAChB,OAAOE,GAAG,CAACsD,kBAAkB,CAACgE,KAAK,EAAE;IACvC,KAAK,SAAS;MACZ,OAAOD,qBAAqB,CAACrH,GAAG,CAAC0E,CAAC,EAAE,CAAC;EACzC;EACA,OAAO6C,eAAe,CAACvH,GAAG,CAAC,CAACwH,GAAG,CAAEzE,IAAI,IAAK0E,2BAA2B,CAACzH,GAAG,EAAE+C,IAAI,CAAC,CAAC;AACnF,CAAC;AAED;AAAApF,OAAA,CAAA0J,qBAAA,GAAAA,qBAAA;AACO,MAAMK,sBAAsB,GAAI1H,GAAQ,IAAS;EACtD,QAAQA,GAAG,CAACF,IAAI;IACd,KAAK,OAAO;MAAE;QACZ,IAAI6H,WAAW,GAAG,KAAK;QACvB,MAAMC,GAAG,GAAe,EAAE;QAC1B,KAAK,MAAMtL,CAAC,IAAI0D,GAAG,CAAC0C,QAAQ,EAAE;UAC5B,IAAIpG,CAAC,CAACkG,UAAU,EAAE;YAChBmF,WAAW,GAAG,IAAI;UACpB;UACAC,GAAG,CAACC,IAAI,CAACvL,CAAC,CAACiG,IAAI,CAAC;QAClB;QACA,IAAIoF,WAAW,EAAE;UACfC,GAAG,CAACC,IAAI,CAACrH,gBAAgB,CAAC;QAC5B;QACA,IAAIxE,MAAM,CAACwK,MAAM,CAACxG,GAAG,CAAC2C,IAAI,CAAC,EAAE;UAC3B,KAAK,MAAMrG,CAAC,IAAI0D,GAAG,CAAC2C,IAAI,CAAC0D,KAAK,EAAE;YAC9BuB,GAAG,CAACC,IAAI,CAACvL,CAAC,CAAC;UACb;QACF;QACA,OAAO6H,WAAW,CAACyD,GAAG,CAAC;MACzB;IACA,KAAK,YAAY;MACf,OAAOF,sBAAsB,CAAC1H,GAAG,CAACiD,IAAI,CAAC;IACzC,KAAK,OAAO;MACV,OAAOkB,WAAW,CAACnE,GAAG,CAACqE,KAAK,CAACmD,GAAG,CAACE,sBAAsB,CAAC,CAAC;IAC3D,KAAK,SAAS;MACZ,OAAOA,sBAAsB,CAAC1H,GAAG,CAAC0E,CAAC,EAAE,CAAC;EAC1C;EACA,MAAM,IAAItB,KAAK,CAAC,+CAA+C0E,MAAM,CAAC9H,GAAG,CAAC,GAAG,CAAC;AAChF,CAAC;AAED;AAAArC,OAAA,CAAA+J,sBAAA,GAAAA,sBAAA;AACO,MAAMD,2BAA2B,GAAGA,CAACzH,GAAQ,EAAE+C,IAAiB,KAAuB;EAC5F,QAAQ/C,GAAG,CAACF,IAAI;IACd,KAAK,aAAa;MAAE;QAClB,MAAMiI,GAAG,GAAG5L,aAAa,CAAC6L,SAAS,CAAChI,GAAG,CAACsD,kBAAkB,EAAG2E,EAAE,IAAKA,EAAE,CAAClF,IAAI,KAAKA,IAAI,CAAC;QACrF,IAAI/G,MAAM,CAACwK,MAAM,CAACuB,GAAG,CAAC,EAAE;UACtB,OAAOA,GAAG,CAAC1B,KAAK;QAClB,CAAC,MAAM;UACL,IAAInK,SAAS,CAACgM,QAAQ,CAACnF,IAAI,CAAC,EAAE;YAC5B,KAAK,MAAMoF,EAAE,IAAInI,GAAG,CAACuD,eAAe,EAAE;cACpC,MAAM6E,aAAa,GAAGvE,gBAAgB,CAACsE,EAAE,CAAChF,SAAS,CAAC;cACpD,QAAQiF,aAAa,CAACtI,IAAI;gBACxB,KAAK,iBAAiB;kBAAE;oBACtB,MAAMuI,KAAK,GAAGpB,uBAAuB,CAACmB,aAAa,CAAC;oBACpD,IAAIC,KAAK,CAACC,IAAI,CAACvF,IAAI,CAAC,EAAE;sBACpB,OAAOD,uBAAuB,CAACC,IAAI,EAAEoF,EAAE,CAAC5F,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;oBAC7D;oBACA;kBACF;gBACA,KAAK,eAAe;kBAClB,OAAOO,uBAAuB,CAACC,IAAI,EAAEoF,EAAE,CAAC5F,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;cAC/D;YACF;UACF,CAAC,MAAM,IAAIrG,SAAS,CAACqM,QAAQ,CAACxF,IAAI,CAAC,EAAE;YACnC,KAAK,MAAMoF,EAAE,IAAInI,GAAG,CAACuD,eAAe,EAAE;cACpC,MAAM6E,aAAa,GAAGvE,gBAAgB,CAACsE,EAAE,CAAChF,SAAS,CAAC;cACpD,IAAIxB,eAAe,CAACyG,aAAa,CAAC,EAAE;gBAClC,OAAOtF,uBAAuB,CAACC,IAAI,EAAEoF,EAAE,CAAC5F,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;cAC7D;YACF;UACF;QACF;QACA;MACF;IACA,KAAK,OAAO;MACV,OAAOO,uBAAuB,CAC5BC,IAAI,EACJoB,WAAW,CAACnE,GAAG,CAACqE,KAAK,CAACmD,GAAG,CAAExH,GAAG,IAAKyH,2BAA2B,CAACzH,GAAG,EAAE+C,IAAI,CAAC,CAACR,IAAI,CAAC,CAAC,EAChF,KAAK,EACL,IAAI,CACL;IACH,KAAK,SAAS;MACZ,OAAOkF,2BAA2B,CAACzH,GAAG,CAAC0E,CAAC,EAAE,EAAE3B,IAAI,CAAC;EACrD;EACA,OAAOD,uBAAuB,CAACC,IAAI,EAAEnC,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC;AACjE,CAAC;AAAAjD,OAAA,CAAA8J,2BAAA,GAAAA,2BAAA;AAED,MAAMF,eAAe,GAAIvH,GAAQ,IAAwB;EACvD,QAAQA,GAAG,CAACF,IAAI;IACd,KAAK,aAAa;MAChB,OAAOE,GAAG,CAACsD,kBAAkB,CAACkE,GAAG,CAAES,EAAE,IAAKA,EAAE,CAAClF,IAAI,CAAC;IACpD,KAAK,SAAS;MACZ,OAAOwE,eAAe,CAACvH,GAAG,CAAC0E,CAAC,EAAE,CAAC;IACjC,KAAK,OAAO;MACV,OAAO1E,GAAG,CAACqE,KAAK,CAACiD,KAAK,CAAC,CAAC,CAAC,CAACkB,MAAM,CAC9B,CAACZ,GAAuB,EAAE5H,GAAG,KAAK7D,aAAa,CAACsM,YAAY,CAACb,GAAG,EAAEL,eAAe,CAACvH,GAAG,CAAC,CAAC,EACvFuH,eAAe,CAACvH,GAAG,CAACqE,KAAK,CAAC,CAAC,CAAC,CAAC,CAC9B;EACL;EACA,OAAO,EAAE;AACX,CAAC;AAED;;;;;AAKO,MAAMqE,YAAY,GAAGA,CAAC9J,GAAQ,EAAEyH,KAAU,EAAEzD,UAAmB,KAAiB;EACrF,MAAMU,kBAAkB,GAA6B,EAAE;EACvD,MAAMC,eAAe,GAA0B,EAAE;EACjD,MAAMoF,EAAE,GAAI/J,GAAQ,IAAU;IAC5B,QAAQA,GAAG,CAACkB,IAAI;MACd,KAAK,cAAc;QACjB;MACF,KAAK,eAAe;MACpB,KAAK,eAAe;MACpB,KAAK,iBAAiB;MACtB,KAAK,YAAY;QACfyD,eAAe,CAACsE,IAAI,CAAC3E,oBAAoB,CAACtE,GAAG,EAAEyH,KAAK,EAAEzD,UAAU,CAAC,CAAC;QAClE;MACF,KAAK,SAAS;QACZ,IAAI1G,SAAS,CAACgM,QAAQ,CAACtJ,GAAG,CAACsB,OAAO,CAAC,IAAIhE,SAAS,CAAC0M,QAAQ,CAAChK,GAAG,CAACsB,OAAO,CAAC,EAAE;UACtEoD,kBAAkB,CAACuE,IAAI,CAAC/E,uBAAuB,CAAClE,GAAG,CAACsB,OAAO,EAAEmG,KAAK,EAAE,KAAK,EAAEzD,UAAU,CAAC,CAAC;QACzF,CAAC,MAAM;UACL,MAAM,IAAIQ,KAAK,CAAC,sCAAsCyF,aAAa,CAACjK,GAAG,CAACsB,OAAO,CAAC,GAAG,CAAC;QACtF;QACA;MACF,KAAK,cAAc;QACjBoD,kBAAkB,CAACuE,IAAI,CAAC/E,uBAAuB,CAAClE,GAAG,CAAC0B,MAAM,EAAE+F,KAAK,EAAE,KAAK,EAAEzD,UAAU,CAAC,CAAC;QACtF;MACF,KAAK,OAAO;QACVhE,GAAG,CAACyF,KAAK,CAACyE,OAAO,CAACH,EAAE,CAAC;QACrB;MACF;QACE,MAAM,IAAIvF,KAAK,CAAC,yCAAyC0E,MAAM,CAAClJ,GAAG,CAAC,GAAG,CAAC;IAC5E;EACF,CAAC;EACD+J,EAAE,CAAC/J,GAAG,CAAC;EACP,OAAOyE,iBAAiB,CAACC,kBAAkB,EAAEC,eAAe,CAAC;AAC/D,CAAC;AAED;;;;;AAAA5F,OAAA,CAAA+K,YAAA,GAAAA,YAAA;AAKO,MAAMK,IAAI,GAAGA,CAAC/I,GAAQ,EAAEwD,IAAgC,KAC7DH,iBAAiB,CAACG,IAAI,CAACgE,GAAG,CAAE5I,GAAG,IAAK6I,2BAA2B,CAACzH,GAAG,EAAEpB,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AAEjF;;;;;AAAAjB,OAAA,CAAAoL,IAAA,GAAAA,IAAA;AAKO,MAAMC,IAAI,GAAGA,CAAChJ,GAAQ,EAAEwD,IAAgC,KAC7DuF,IAAI,CAAC/I,GAAG,EAAEuH,eAAe,CAACvH,GAAG,CAAC,CAAC8E,MAAM,CAAE/B,IAAI,IAAK,CAACS,IAAI,CAACyF,QAAQ,CAAClG,IAAI,CAAC,CAAC,CAAC;AAExE;AAAApF,OAAA,CAAAqL,IAAA,GAAAA,IAAA;AACO,MAAME,WAAW,GAAIlJ,GAAQ,IAAUmE,WAAW,CAAC,CAACnE,GAAG,EAAEQ,gBAAgB,CAAC,CAAC;AAElF;;;;;AAAA7C,OAAA,CAAAuL,WAAA,GAAAA,WAAA;AAKO,MAAMC,OAAO,GAAGA,CAACnJ,GAAQ,EAAEoJ,OAAkC,KAAS;EAC3E,MAAMC,KAAK,GAAGD,OAAO,EAAEC,KAAK,KAAK,IAAI;EACrC,QAAQrJ,GAAG,CAACF,IAAI;IACd,KAAK,OAAO;MACV,OAAO2C,WAAW,CAChBzC,GAAG,CAAC0C,QAAQ,CAAC8E,GAAG,CAAElL,CAAC,IAAKgG,aAAa,CAAC+G,KAAK,GAAG/M,CAAC,CAACiG,IAAI,GAAG2G,WAAW,CAAC5M,CAAC,CAACiG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,EAClF,IAAA7G,SAAA,CAAAiL,IAAI,EACF3G,GAAG,CAAC2C,IAAI,EACR3G,MAAM,CAACwL,GAAG,CAAE7E,IAAI,IAAK,CAACwB,WAAW,CAAC,CAAC,GAAGxB,IAAI,EAAEnC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CACjE,EACDR,GAAG,CAAC4C,UAAU,CACf;IACH,KAAK,aAAa;MAChB,OAAOS,iBAAiB,CACtBrD,GAAG,CAACsD,kBAAkB,CAACkE,GAAG,CAAES,EAAE,IAC5BnF,uBAAuB,CAACmF,EAAE,CAAClF,IAAI,EAAEsG,KAAK,GAAGpB,EAAE,CAAC1F,IAAI,GAAG2G,WAAW,CAACjB,EAAE,CAAC1F,IAAI,CAAC,EAAE,IAAI,EAAE0F,EAAE,CAACrF,UAAU,EAAEqF,EAAE,CAACpJ,WAAW,CAAC,CAC9G,EACDmB,GAAG,CAACuD,eAAe,CAACiE,GAAG,CAAEW,EAAE,IAAKjF,oBAAoB,CAACiF,EAAE,CAAChF,SAAS,EAAE+F,WAAW,CAACf,EAAE,CAAC5F,IAAI,CAAC,EAAE4F,EAAE,CAACvF,UAAU,CAAC,CAAC,CACzG;IACH,KAAK,OAAO;MACV,OAAOuB,WAAW,CAACnE,GAAG,CAACqE,KAAK,CAACmD,GAAG,CAAE8B,MAAM,IAAKH,OAAO,CAACG,MAAM,EAAEF,OAAO,CAAC,CAAC,CAAC;IACzE,KAAK,SAAS;MACZ,OAAO3E,aAAa,CAAC,MAAM0E,OAAO,CAACnJ,GAAG,CAAC0E,CAAC,EAAE,EAAE0E,OAAO,CAAC,CAAC;IACvD,KAAK,aAAa;MAChB,MAAM,IAAIhG,KAAK,CAAC,sCAAsC,CAAC;IACzD,KAAK,YAAY;MACf,MAAM,IAAIA,KAAK,CAAC,qCAAqC,CAAC;IACxD,KAAK,WAAW;MACd,MAAM,IAAIA,KAAK,CAAC,yCAAyC,CAAC;EAC9D;EACA,OAAOpD,GAAG;AACZ,CAAC;AAED;;;;;AAAArC,OAAA,CAAAwL,OAAA,GAAAA,OAAA;AAKO,MAAMI,QAAQ,GAAIvJ,GAAQ,IAAS;EACxC,QAAQA,GAAG,CAACF,IAAI;IACd,KAAK,OAAO;MACV,OAAO2C,WAAW,CAChBzC,GAAG,CAAC0C,QAAQ,CAAC8E,GAAG,CAAElL,CAAC,IAAKgG,aAAa,CAAChG,CAAC,CAACiG,IAAI,EAAE,KAAK,CAAC,CAAC,EACrD,IAAA7G,SAAA,CAAAiL,IAAI,EACF3G,GAAG,CAAC2C,IAAI,EACR3G,MAAM,CAACwL,GAAG,CAAE7E,IAAI,IAAI;QAClB,MAAMvF,CAAC,GAAG+G,WAAW,CAAC,CAAC,GAAGxB,IAAI,CAAC,CAAC;QAChC,OAAOxG,aAAa,CAACqL,GAAG,CAAC7E,IAAI,EAAE,MAAMvF,CAAC,CAAC;MACzC,CAAC,CAAC,CACH,EACD4C,GAAG,CAAC4C,UAAU,CACf;IACH,KAAK,aAAa;MAChB,OAAOS,iBAAiB,CACtBrD,GAAG,CAACsD,kBAAkB,CAACkE,GAAG,CAAE9C,CAAC,IAAK5B,uBAAuB,CAAC4B,CAAC,CAAC3B,IAAI,EAAE2B,CAAC,CAACnC,IAAI,EAAE,KAAK,EAAEmC,CAAC,CAAC9B,UAAU,EAAE8B,CAAC,CAAC7F,WAAW,CAAC,CAAC,EAC9GmB,GAAG,CAACuD,eAAe,CACpB;IACH,KAAK,OAAO;MACV,OAAOY,WAAW,CAACnE,GAAG,CAACqE,KAAK,CAACmD,GAAG,CAAE8B,MAAM,IAAKC,QAAQ,CAACD,MAAM,CAAC,CAAC,CAAC;IACjE,KAAK,SAAS;MACZ,OAAO7E,aAAa,CAAC,MAAM8E,QAAQ,CAACvJ,GAAG,CAAC0E,CAAC,EAAE,CAAC,CAAC;IAC/C,KAAK,aAAa;MAChB,MAAM,IAAItB,KAAK,CAAC,uCAAuC,CAAC;IAC1D,KAAK,YAAY;MACf,MAAM,IAAIA,KAAK,CAAC,sCAAsC,CAAC;IACzD,KAAK,WAAW;MACd,MAAM,IAAIA,KAAK,CAAC,0CAA0C,CAAC;EAC/D;EACA,OAAOpD,GAAG;AACZ,CAAC;AAED;;;;;;;AAAArC,OAAA,CAAA4L,QAAA,GAAAA,QAAA;AAOO,MAAMC,OAAO,GAAIxJ,GAAQ,IAAS;EACvC,QAAQA,GAAG,CAACF,IAAI;IACd,KAAK,OAAO;MACV,OAAO2C,WAAW,CAACzC,GAAG,CAAC0C,QAAQ,EAAE1C,GAAG,CAAC2C,IAAI,EAAE,KAAK,EAAE3C,GAAG,CAACnB,WAAW,CAAC;IACpE,KAAK,aAAa;MAChB,OAAOwE,iBAAiB,CACtBrD,GAAG,CAACsD,kBAAkB,CAACkE,GAAG,CAAES,EAAE,IAC5BnF,uBAAuB,CAACmF,EAAE,CAAClF,IAAI,EAAEkF,EAAE,CAAC1F,IAAI,EAAE0F,EAAE,CAACzF,UAAU,EAAE,KAAK,EAAEyF,EAAE,CAACpJ,WAAW,CAAC,CAChF,EACDmB,GAAG,CAACuD,eAAe,CAACiE,GAAG,CAAEW,EAAE,IAAKjF,oBAAoB,CAACiF,EAAE,CAAChF,SAAS,EAAEgF,EAAE,CAAC5F,IAAI,EAAE,KAAK,CAAC,CAAC,EACnFvC,GAAG,CAACnB,WAAW,CAChB;IACH,KAAK,OAAO;MACV,OAAOsF,WAAW,CAACnE,GAAG,CAACqE,KAAK,CAACmD,GAAG,CAACgC,OAAO,CAAC,EAAExJ,GAAG,CAACnB,WAAW,CAAC;IAC7D,KAAK,SAAS;MACZ,OAAO4F,aAAa,CAAC,MAAM+E,OAAO,CAACxJ,GAAG,CAAC0E,CAAC,EAAE,CAAC,EAAE1E,GAAG,CAACnB,WAAW,CAAC;IAC/D,KAAK,YAAY;MACf,OAAOgG,gBAAgB,CAAC2E,OAAO,CAACxJ,GAAG,CAACiD,IAAI,CAAC,EAAEjD,GAAG,CAAC8E,MAAM,EAAE9E,GAAG,CAACnB,WAAW,CAAC;IACzE,KAAK,WAAW;MACd,OAAOmG,eAAe,CACpBwE,OAAO,CAACxJ,GAAG,CAACiD,IAAI,CAAC,EACjBuG,OAAO,CAACxJ,GAAG,CAACiF,EAAE,CAAC,EACfjF,GAAG,CAACkF,cAAc,EAClBlF,GAAG,CAACnB,WAAW,CAChB;EACL;EACA,OAAOmB,GAAG;AACZ,CAAC;AAkBD;;;AAAArC,OAAA,CAAA6L,OAAA,GAAAA,OAAA;AAGO,MAAMC,WAAW,GAAO7C,KAAe,IAAiB;EAC7D,MAAM8C,OAAO,GAAI1J,GAAQ,IAAQ4G,KAAK,CAAC5G,GAAG,CAACF,IAAI,CAAC,CAACE,GAAU,EAAE0J,OAAO,CAAC;EACrE,OAAOA,OAAO;AAChB,CAAC;AAED;AAAA/L,OAAA,CAAA8L,WAAA,GAAAA,WAAA;AACO,MAAME,uBAAuB,GAAI1B,EAAoC,IAC1EA,EAAE,CAACT,GAAG,CAAEoC,CAAC,IAAK9G,uBAAuB,CAAC8G,CAAC,CAAC7G,IAAI,EAAEkC,EAAE,CAAC2E,CAAC,CAACrH,IAAI,CAAC,EAAEqH,CAAC,CAACpH,UAAU,EAAEoH,CAAC,CAAChH,UAAU,EAAEgH,CAAC,CAAC/K,WAAW,CAAC,CAAC;AAEvG;AAAAlB,OAAA,CAAAgM,uBAAA,GAAAA,uBAAA;AACO,MAAME,oBAAoB,GAAI5B,EAAiC,IACpEA,EAAE,CAACT,GAAG,CAAEW,EAAE,IAAKjF,oBAAoB,CAACiF,EAAE,CAAChF,SAAS,EAAE8B,EAAE,CAACkD,EAAE,CAAC5F,IAAI,CAAC,EAAE4F,EAAE,CAACvF,UAAU,CAAC,CAAC;AAEhF;;;AAAAjF,OAAA,CAAAkM,oBAAA,GAAAA,oBAAA;AAGO,MAAM5E,EAAE,GAAIjF,GAAQ,IAAS;EAClC,QAAQA,GAAG,CAACF,IAAI;IACd,KAAK,aAAa;MAChB,OAAOJ,iBAAiB,CACtBM,GAAG,CAACL,cAAc,CAAC6H,GAAG,CAACvC,EAAE,CAAC,EAC1BjF,GAAG,CAACJ,aAAa,EACjBI,GAAG,CAACH,aAAa,EACjBG,GAAG,CAACnB,WAAW,CAChB;IACH,KAAK,OAAO;MACV,OAAO4D,WAAW,CAChBzC,GAAG,CAAC0C,QAAQ,CAAC8E,GAAG,CAAElL,CAAC,IAAKgG,aAAa,CAAC2C,EAAE,CAAC3I,CAAC,CAACiG,IAAI,CAAC,EAAEjG,CAAC,CAACkG,UAAU,CAAC,CAAC,EAChExG,MAAM,CAACwL,GAAG,CAACxH,GAAG,CAAC2C,IAAI,EAAExG,aAAa,CAACqL,GAAG,CAACvC,EAAE,CAAC,CAAC,EAC3CjF,GAAG,CAAC4C,UAAU,EACd5C,GAAG,CAACnB,WAAW,CAChB;IACH,KAAK,aAAa;MAChB,OAAOwE,iBAAiB,CACtBsG,uBAAuB,CAAC3J,GAAG,CAACsD,kBAAkB,CAAC,EAC/CuG,oBAAoB,CAAC7J,GAAG,CAACuD,eAAe,CAAC,EACzCvD,GAAG,CAACnB,WAAW,CAChB;IACH,KAAK,OAAO;MACV,OAAOsF,WAAW,CAACnE,GAAG,CAACqE,KAAK,CAACmD,GAAG,CAACvC,EAAE,CAAC,EAAEjF,GAAG,CAACnB,WAAW,CAAC;IACxD,KAAK,SAAS;MACZ,OAAO4F,aAAa,CAAC,MAAMQ,EAAE,CAACjF,GAAG,CAAC0E,CAAC,EAAE,CAAC,EAAE1E,GAAG,CAACnB,WAAW,CAAC;IAC1D,KAAK,YAAY;MACf,OAAOgG,gBAAgB,CAACI,EAAE,CAACjF,GAAG,CAACiD,IAAI,CAAC,EAAEjD,GAAG,CAAC8E,MAAM,EAAE9E,GAAG,CAACnB,WAAW,CAAC;IACpE,KAAK,WAAW;MACd,OAAOoG,EAAE,CAACjF,GAAG,CAACiF,EAAE,CAAC;EACrB;EACA,OAAOjF,GAAG;AACZ,CAAC;AAAArC,OAAA,CAAAsH,EAAA,GAAAA,EAAA;AAED,MAAM6E,4BAA4B,GAAInL,SAAoB,IAA6B;EACrF,OAAO3C,MAAM,CAAC4K,KAAK,CAAC1H,uBAAuB,CAACP,SAAS,CAAC,EAAE;IACtDkI,MAAM,EAAEA,CAAA,KAAMkD,SAAS;IACvBjD,MAAM,EAAGkD,UAAU,KAAM;MAAE,CAAChM,sBAAsB,GAAGgM;IAAU,CAAE;GAClE,CAAC;AACJ,CAAC;AAED;;;AAGO,MAAM/G,IAAI,GAAIjD,GAAQ,IAAS;EACpC,QAAQA,GAAG,CAACF,IAAI;IACd,KAAK,aAAa;MAChB,OAAOJ,iBAAiB,CACtBM,GAAG,CAACL,cAAc,CAAC6H,GAAG,CAACvE,IAAI,CAAC,EAC5BjD,GAAG,CAACJ,aAAa,EACjBI,GAAG,CAACH,aAAa,EACjBG,GAAG,CAACnB,WAAW,CAChB;IACH,KAAK,OAAO;MACV,OAAO4D,WAAW,CAChBzC,GAAG,CAAC0C,QAAQ,CAAC8E,GAAG,CAAElL,CAAC,IAAKgG,aAAa,CAACW,IAAI,CAAC3G,CAAC,CAACiG,IAAI,CAAC,EAAEjG,CAAC,CAACkG,UAAU,CAAC,CAAC,EAClExG,MAAM,CAACwL,GAAG,CAACxH,GAAG,CAAC2C,IAAI,EAAExG,aAAa,CAACqL,GAAG,CAACvE,IAAI,CAAC,CAAC,EAC7CjD,GAAG,CAAC4C,UAAU,EACdkH,4BAA4B,CAAC9J,GAAG,CAAC,CAClC;IACH,KAAK,aAAa;MAChB,OAAOqD,iBAAiB,CACtBrD,GAAG,CAACsD,kBAAkB,CAACkE,GAAG,CAAEoC,CAAC,IAAK9G,uBAAuB,CAAC8G,CAAC,CAAC7G,IAAI,EAAEE,IAAI,CAAC2G,CAAC,CAACrH,IAAI,CAAC,EAAEqH,CAAC,CAACpH,UAAU,EAAEoH,CAAC,CAAChH,UAAU,CAAC,CAAC,EAC5G5C,GAAG,CAACuD,eAAe,CAACiE,GAAG,CAAEW,EAAE,IAAKjF,oBAAoB,CAACiF,EAAE,CAAChF,SAAS,EAAEF,IAAI,CAACkF,EAAE,CAAC5F,IAAI,CAAC,EAAE4F,EAAE,CAACvF,UAAU,CAAC,CAAC,EACjGkH,4BAA4B,CAAC9J,GAAG,CAAC,CAClC;IACH,KAAK,OAAO;MACV,OAAOmE,WAAW,CAACnE,GAAG,CAACqE,KAAK,CAACmD,GAAG,CAACvE,IAAI,CAAC,EAAE6G,4BAA4B,CAAC9J,GAAG,CAAC,CAAC;IAC5E,KAAK,SAAS;MACZ,OAAOyE,aAAa,CAAC,MAAMxB,IAAI,CAACjD,GAAG,CAAC0E,CAAC,EAAE,CAAC,EAAEoF,4BAA4B,CAAC9J,GAAG,CAAC,CAAC;IAC9E,KAAK,YAAY;IACjB,KAAK,WAAW;MACd,OAAOiD,IAAI,CAACjD,GAAG,CAACiD,IAAI,CAAC;EACzB;EACA,OAAOjD,GAAG;AACZ,CAAC;AAAArC,OAAA,CAAAsF,IAAA,GAAAA,IAAA;AAED,MAAMgH,eAAe,gBAAG,IAAArO,YAAA,CAAAsO,WAAW,gBACjCtM,MAAM,CAACC,GAAG,CAAC,oCAAoC,CAAC,EAChD,MAAM,IAAIsM,OAAO,EAAO,CACzB;AAED,MAAMC,gBAAgB,GAAG;EACvBC,WAAW,EAAE,IAAI;EACjBC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE,IAAI;EACXC,WAAW,EAAE,IAAI;EACjBC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE,IAAI;EACbC,SAAS,EAAE;CACZ;AAED,MAAMC,cAAc,GAAI5K,GAAW,IAOlB,MAAM,IAAIA,GAAG,IAAI9D,SAAS,CAACgM,QAAQ,CAAClI,GAAG,CAAC,MAAM,CAAC,CAAC,IAAIA,GAAG,CAAC,MAAM,CAAC,IAAIoK,gBAAgB;AAEpG;AACO,MAAMS,QAAQ,GAAI7K,GAAQ,IAC/B8K,IAAI,CAACC,SAAS,CAAC/K,GAAG,EAAE,CAACpB,GAAG,EAAEyH,KAAK,KAAI;EACjC,IAAInK,SAAS,CAACqM,QAAQ,CAAClC,KAAK,CAAC,EAAE;IAC7B,OAAO3C,MAAM,CAAC2C,KAAK,CAAC;EACtB;EACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE;IAC/C,IAAIuE,cAAc,CAACvE,KAAK,CAAC,EAAE;MACzB,IAAI4D,eAAe,CAACrN,GAAG,CAACyJ,KAAK,CAAC,EAAE;QAC9B,OAAO,oBAAoB;MAC7B;MACA4D,eAAe,CAACe,GAAG,CAAC3E,KAAK,CAAC;MAC1B,IAAIzB,SAAS,CAACyB,KAAK,CAAC,EAAE;QACpB,MAAMuB,GAAG,GAAGvB,KAAK,CAAC3B,CAAC,EAAE;QACrB,IAAIuF,eAAe,CAACrN,GAAG,CAACgL,GAAG,CAAC,EAAE;UAC5B,OAAO,oBAAoB;QAC7B;QACAqC,eAAe,CAACe,GAAG,CAACpD,GAAG,CAAC;QACxB,OAAOA,GAAG;MACZ;IACF,CAAC,MAAM,IAAIhJ,GAAG,KAAK,aAAa,EAAE;MAChC,MAAMgJ,GAAG,GAA4B,EAAE;MACvC,KAAK,MAAMqD,CAAC,IAAI7O,QAAQ,CAAC8O,OAAO,CAAC7E,KAAK,CAAC,EAAE;QACvCuB,GAAG,CAAClE,MAAM,CAACuH,CAAC,CAAC,CAAC,GAAG5E,KAAK,CAAC4E,CAAC,CAAC;MAC3B;MACA,OAAOrD,GAAG;IACZ;EACF;EACA,OAAOvB,KAAK;AACd,CAAC,EAAE,CAAC,CAAC;AAEP;;;AAAA1I,OAAA,CAAAkN,QAAA,GAAAA,QAAA;AAGO,MAAMM,IAAI,GAAInL,GAAQ,IAAanE,IAAI,CAAC+H,MAAM,CAACiH,QAAQ,CAAC7K,GAAG,CAAC,CAAC;AAEpE;AAAArC,OAAA,CAAAwN,IAAA,GAAAA,IAAA;AACO,MAAMC,cAAc,GAAIpL,GAAQ,IAAY;EACjD,QAAQA,GAAG,CAACF,IAAI;IACd,KAAK,cAAc;MACjB,OAAO,CAAC;IACV,KAAK,SAAS;IACd,KAAK,kBAAkB;IACvB,KAAK,aAAa;IAClB,KAAK,cAAc;MACjB,OAAO,CAAC;IACV,KAAK,gBAAgB;MACnB,OAAO,CAAC;IACV,KAAK,eAAe;IACpB,KAAK,eAAe;IACpB,KAAK,eAAe;IACpB,KAAK,eAAe;MAClB,OAAO,CAAC;IACV,KAAK,eAAe;MAClB,OAAO,CAAC;IACV,KAAK,gBAAgB;IACrB,KAAK,YAAY;MACf,OAAO,CAAC;IACV;MACE,OAAO,CAAC;EACZ;AACF,CAAC;AAAAnC,OAAA,CAAAyN,cAAA,GAAAA,cAAA;AAED,MAAMtH,sBAAsB,gBAAG3H,aAAa,CAACkP,IAAI,eAC/C,IAAA3P,SAAA,CAAAiL,IAAI,EAAC5K,MAAM,CAACE,KAAK,eAAEA,KAAK,CAACqP,QAAQ,CAAErD,EAAqB,IAAKmD,cAAc,CAACnD,EAAE,CAAC1F,IAAI,CAAC,CAAC,CAAC,CACvF;AAED,MAAMwB,mBAAmB,gBAAG5H,aAAa,CAACkP,IAAI,eAC5C,IAAA3P,SAAA,CAAAiL,IAAI,EACF5K,MAAM,CAACE,KAAK,eACZA,KAAK,CAACqP,QAAQ,CAAEnD,EAAkB,IAAI;EACpC,QAAQtE,gBAAgB,CAACsE,EAAE,CAAChF,SAAS,CAAC,CAACrD,IAAI;IACzC,KAAK,eAAe;MAClB,OAAO,CAAC;IACV,KAAK,eAAe;MAClB,OAAO,CAAC;IACV,KAAK,iBAAiB;MACpB,OAAO,CAAC;EACZ;AACF,CAAC,CAAC,CACH,CACF;AAID,MAAMyL,WAAW,gBAAwBtP,KAAK,CAACuP,KAAK,CAElDzP,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACE,KAAK,CAAC;AAE3C,MAAMwP,SAAS,gBAAGxP,KAAK,CAACyP,GAAG,CAASH,WAAW,CAAC;AAEhD,MAAMI,WAAW,GAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAErC,MAAMC,YAAY,GAAIC,OAA8B,IAAaA,OAAO,CAACrD,MAAM,CAACiD,SAAS,EAAEE,WAAW,CAAC;AAEvG;AACO,MAAMG,SAAS,GAAI9L,GAAQ,IAAY;EAC5C,QAAQA,GAAG,CAACF,IAAI;IACd,KAAK,OAAO;MAAE;QACZ,MAAMiM,CAAC,GAAG/L,GAAG,CAAC0C,QAAQ,CAACe,MAAM;QAC7B,MAAMuI,CAAC,GAAGhQ,MAAM,CAACwK,MAAM,CAACxG,GAAG,CAAC2C,IAAI,CAAC,GAAG3C,GAAG,CAAC2C,IAAI,CAAC0D,KAAK,CAAC5C,MAAM,GAAG,CAAC;QAC7D,OAAO,CAAC,CAAC,EAAEsI,CAAC,EAAEC,CAAC,CAAC;MAClB;IACA,KAAK,aAAa;MAAE;QAClB,MAAMD,CAAC,GAAG/L,GAAG,CAACsD,kBAAkB,CAACG,MAAM;QACvC,MAAMuI,CAAC,GAAGhM,GAAG,CAACuD,eAAe,CAACE,MAAM;QACpC,OAAOsI,CAAC,GAAGC,CAAC,KAAK,CAAC,GAChB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GACV,CAAC,CAAC,EAAED,CAAC,EAAEC,CAAC,CAAC;MACb;IACA,KAAK,aAAa;MAAE;QAClB,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAClB;IACA,KAAK,SAAS;MACZ,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClB,KAAK,OAAO;MACV,OAAOJ,YAAY,CAAC5L,GAAG,CAACqE,KAAK,CAACmD,GAAG,CAACsE,SAAS,CAAC,CAAC;IAC/C,KAAK,YAAY;MAAE;QACjB,MAAM,CAACG,CAAC,EAAEF,CAAC,EAAEC,CAAC,CAAC,GAAGF,SAAS,CAAC9L,GAAG,CAACiD,IAAI,CAAC;QACrC,OAAO,CAACgJ,CAAC,GAAG,CAAC,EAAEF,CAAC,EAAEC,CAAC,CAAC;MACtB;IACA,KAAK,WAAW;MACd,OAAOF,SAAS,CAAC9L,GAAG,CAACiD,IAAI,CAAC;IAC5B,KAAK,eAAe;MAClB,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnB,KAAK,gBAAgB;IACrB,KAAK,YAAY;MACf,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnB;MACE,OAAO0I,WAAW;EACtB;AACF,CAAC;AAAAhO,OAAA,CAAAmO,SAAA,GAAAA,SAAA;AAED,MAAMvH,gBAAgB,gBAAyCpI,aAAa,CAACkP,IAAI,eAC/EpP,KAAK,CAACiQ,OAAO,eAACjQ,KAAK,CAACqP,QAAQ,CAACC,WAAW,EAAEO,SAAS,CAAC,CAAC,CAC/C;AAER,MAAMxH,KAAK,GAAIF,UAA8B,IAAgB;EAC3D,IAAIwD,GAAG,GAAG,IAAAlM,SAAA,CAAAiL,IAAI,EACZvC,UAAU,EACVjI,aAAa,CAACgQ,OAAO,CAAEnM,GAAQ,IAAwB;IACrD,QAAQA,GAAG,CAACF,IAAI;MACd,KAAK,cAAc;QACjB,OAAO,EAAE;MACX,KAAK,OAAO;QACV,OAAOE,GAAG,CAACqE,KAAK;MAClB;QACE,OAAO,CAACrE,GAAG,CAAC;IAChB;EACF,CAAC,CAAC,CACH;EACD,IAAI4H,GAAG,CAAC9I,IAAI,CAACmC,YAAY,CAAC,EAAE;IAC1B,OAAO,CAACD,UAAU,CAAC;EACrB;EACA,IAAI4G,GAAG,CAAC9I,IAAI,CAACiC,gBAAgB,CAAC,EAAE;IAC9B,OAAO,CAACD,cAAc,CAAC;EACzB;EACA,IAAItD,CAAS;EACb,IAAI,CAACA,CAAC,GAAGoK,GAAG,CAACwE,SAAS,CAACjL,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE;IAC/CyG,GAAG,GAAGA,GAAG,CAAC9C,MAAM,CAAC,CAACuH,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAK9O,CAAC,IAAK,CAAC2D,eAAe,CAACkL,CAAC,CAAC,IAAI,EAAElM,SAAS,CAACkM,CAAC,CAAC,IAAI,OAAOA,CAAC,CAACnM,OAAO,KAAK,QAAQ,CAAE,CAAC;EAClH;EACA,IAAI,CAAC1C,CAAC,GAAGoK,GAAG,CAACwE,SAAS,CAAC/K,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE;IAC/CuG,GAAG,GAAGA,GAAG,CAAC9C,MAAM,CAAC,CAACuH,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAK9O,CAAC,IAAK,CAAC6D,eAAe,CAACgL,CAAC,CAAC,IAAI,EAAElM,SAAS,CAACkM,CAAC,CAAC,IAAI,OAAOA,CAAC,CAACnM,OAAO,KAAK,QAAQ,CAAE,CAAC;EAClH;EACA,IAAI,CAAC1C,CAAC,GAAGoK,GAAG,CAACwE,SAAS,CAAC7K,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE;IAChDqG,GAAG,GAAGA,GAAG,CAAC9C,MAAM,CAAC,CAACuH,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAK9O,CAAC,IAAK,CAAC+D,gBAAgB,CAAC8K,CAAC,CAAC,IAAI,EAAElM,SAAS,CAACkM,CAAC,CAAC,IAAI,OAAOA,CAAC,CAACnM,OAAO,KAAK,SAAS,CAAE,CAAC;EACpH;EACA,IAAI,CAAC1C,CAAC,GAAGoK,GAAG,CAACwE,SAAS,CAAC3K,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE;IAC/CmG,GAAG,GAAGA,GAAG,CAAC9C,MAAM,CAAC,CAACuH,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAK9O,CAAC,IAAK,CAACiE,eAAe,CAAC4K,CAAC,CAAC,IAAI,EAAElM,SAAS,CAACkM,CAAC,CAAC,IAAI,OAAOA,CAAC,CAACnM,OAAO,KAAK,QAAQ,CAAE,CAAC;EAClH;EACA,IAAI,CAAC1C,CAAC,GAAGoK,GAAG,CAACwE,SAAS,CAACzK,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE;IAC/CiG,GAAG,GAAGA,GAAG,CAAC9C,MAAM,CAAC,CAACuH,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAK9O,CAAC,IAAK,CAACmE,eAAe,CAAC0K,CAAC,CAAC,IAAI,CAAC9L,cAAc,CAAC8L,CAAC,CAAE,CAAC;EACpF;EACA,OAAOzE,GAAG;AACZ,CAAC;AAED;AACO,MAAM/D,gBAAgB,GAC3B7D,GAAc,IACqC;EACnD,QAAQA,GAAG,CAACF,IAAI;IACd,KAAK,eAAe;IACpB,KAAK,eAAe;IACpB,KAAK,iBAAiB;MACpB,OAAOE,GAAG;IACZ,KAAK,YAAY;MACf,OAAO6D,gBAAgB,CAAC7D,GAAG,CAACiD,IAAI,CAAC;EACrC;AACF,CAAC;AAAAtF,OAAA,CAAAkG,gBAAA,GAAAA,gBAAA;AAED,MAAM0I,yBAAyB,gBAAGpQ,aAAa,CAACqQ,cAAc,CAAsB,CAACC,IAAI,EAAEC,IAAI,KAC7FD,IAAI,CAAClK,IAAI,CAACzC,IAAI,KAAK4M,IAAI,CAACnK,IAAI,CAACzC,IAAI,IAAI2M,IAAI,CAACvM,OAAO,KAAKwM,IAAI,CAACxM,OAAO,CACnE;AAED,MAAMyM,WAAW,gBAAGxQ,aAAa,CAACqQ,cAAc,CAAqC,CAACC,IAAI,EAAEC,IAAI,KAC9FA,IAAI,CAAC,CAAC,CAAC,KAAKD,IAAI,CAAC,CAAC,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC,KAAKD,IAAI,CAAC,CAAC,CAAC,CAC3C;AAED,MAAMG,MAAM,GAAGA,CAACH,IAAS,EAAEC,IAAS,KAAI;EACtC,QAAQD,IAAI,CAAC3M,IAAI;IACf,KAAK,SAAS;MACZ,OAAOK,SAAS,CAACuM,IAAI,CAAC,IAAIA,IAAI,CAACxM,OAAO,KAAKuM,IAAI,CAACvM,OAAO;IACzD,KAAK,cAAc;MACjB,OAAOK,cAAc,CAACmM,IAAI,CAAC,IAAIA,IAAI,CAACpM,MAAM,KAAKmM,IAAI,CAACnM,MAAM;IAC5D,KAAK,kBAAkB;IACvB,KAAK,aAAa;IAClB,KAAK,cAAc;IACnB,KAAK,gBAAgB;IACrB,KAAK,YAAY;IACjB,KAAK,eAAe;IACpB,KAAK,eAAe;IACpB,KAAK,gBAAgB;IACrB,KAAK,eAAe;IACpB,KAAK,eAAe;IACpB,KAAK,eAAe;MAClB,OAAOoM,IAAI,CAAC5M,IAAI,KAAK2M,IAAI,CAAC3M,IAAI;IAChC,KAAK,iBAAiB;MACpB,OAAOuC,iBAAiB,CAACqK,IAAI,CAAC,IAAIA,IAAI,CAACxK,IAAI,KAAKuK,IAAI,CAACvK,IAAI,IAAIqK,yBAAyB,CAACG,IAAI,CAACvK,KAAK,EAAEsK,IAAI,CAACtK,KAAK,CAAC;IAChH,KAAK,OAAO;MACV,OAAOH,OAAO,CAAC0K,IAAI,CAAC,IAAIC,WAAW,CAACD,IAAI,CAAC3K,KAAK,EAAE0K,IAAI,CAAC1K,KAAK,CAAC;IAC7D,KAAK,YAAY;IACjB,KAAK,OAAO;IACZ,KAAK,aAAa;IAClB,KAAK,OAAO;IACZ,KAAK,SAAS;IACd,KAAK,WAAW;IAChB,KAAK,aAAa;MAChB,OAAO0K,IAAI,KAAKC,IAAI;EACxB;AACF,CAAC;AAED,MAAMjE,YAAY,gBAAGtM,aAAa,CAAC0Q,gBAAgB,CAACD,MAAM,CAAC;AAE3D,MAAM5F,MAAM,GAAIhH,GAAQ,IAAgB;EACtC,QAAQA,GAAG,CAACF,IAAI;IACd,KAAK,aAAa;MAChB,OAAOE,GAAG,CAACsD,kBAAkB,CAACkE,GAAG,CAAEoC,CAAC,IAClC1N,SAAS,CAACqM,QAAQ,CAACqB,CAAC,CAAC7G,IAAI,CAAC,GAAG1C,kBAAkB,CAACuJ,CAAC,CAAC7G,IAAI,CAAC,GAAG9C,aAAa,CAAC2J,CAAC,CAAC7G,IAAI,CAAC,CAChF,CAAC+J,MAAM,CAAC9M,GAAG,CAACuD,eAAe,CAACiE,GAAG,CAAEW,EAAE,IAAKtE,gBAAgB,CAACsE,EAAE,CAAChF,SAAS,CAAC,CAAC,CAAC;IAC3E,KAAK,SAAS;MACZ,OAAO6D,MAAM,CAAChH,GAAG,CAAC0E,CAAC,EAAE,CAAC;IACxB,KAAK,OAAO;MACV,OAAO1E,GAAG,CAACqE,KAAK,CAACiD,KAAK,CAAC,CAAC,CAAC,CAACkB,MAAM,CAC9B,CAACZ,GAAe,EAAE5H,GAAG,KAAKyI,YAAY,CAACb,GAAG,EAAEZ,MAAM,CAAChH,GAAG,CAAC,CAAC,EACxDgH,MAAM,CAAChH,GAAG,CAACqE,KAAK,CAAC,CAAC,CAAC,CAAC,CACrB;IACH,KAAK,WAAW;MACd,OAAO2C,MAAM,CAAChH,GAAG,CAACiF,EAAE,CAAC;EACzB;EACA,MAAM,IAAI7B,KAAK,CAAC,8BAA8B0E,MAAM,CAAC9H,GAAG,CAAC,GAAG,CAAC;AAC/D,CAAC;AAED;AACO,MAAM+M,OAAO,GAAGA,CAACC,EAAO,EAAEC,EAAO,KAAUjI,eAAe,CAACgI,EAAE,EAAEC,EAAE,EAAEzH,qBAAqB,CAAC;AAEhG;AAAA7H,OAAA,CAAAoP,OAAA,GAAAA,OAAA;AACO,MAAMG,MAAM,GAAGA,CAAClN,GAAQ,EAAEmN,OAAsD,KAAS;EAC9F,QAAQnN,GAAG,CAACF,IAAI;IACd,KAAK,aAAa;MAAE;QAClB,MAAMsN,2BAA2B,GAAsC,EAAE;QACzE,KAAK,MAAMxO,GAAG,IAAIxC,QAAQ,CAAC8O,OAAO,CAACiC,OAAO,CAAC,EAAE;UAC3C,MAAMpK,IAAI,GAAGoK,OAAO,CAACvO,GAAG,CAAC;UACzB,IAAImE,IAAI,KAAKgH,SAAS,EAAE;YACtBqD,2BAA2B,CAACvF,IAAI,CAACjC,gCAAgC,CAC/DhH,GAAG,EACHmE,IAAI,EACJ2C,0CAA0C,CACxChK,SAAA,CAAA2R,QAAQ,EACR3R,SAAA,CAAA2R,QAAQ,CACT,CACF,CAAC;UACJ;QACF;QACA,IAAID,2BAA2B,CAAC3J,MAAM,KAAK,CAAC,EAAE;UAC5C,OAAOzD,GAAG;QACZ;QACA,OAAOgF,eAAe,CACpBhF,GAAG,EACHqD,iBAAiB,CACfrD,GAAG,CAACsD,kBAAkB,CAACkE,GAAG,CAAES,EAAE,IAAI;UAChC,MAAMlF,IAAI,GAAGoK,OAAO,CAAClF,EAAE,CAAClF,IAAI,CAAC;UAC7B,OAAOD,uBAAuB,CAC5BC,IAAI,KAAKgH,SAAS,GAAG9B,EAAE,CAAClF,IAAI,GAAGA,IAAI,EACnCkC,EAAE,CAACgD,EAAE,CAAC1F,IAAI,CAAC,EACX0F,EAAE,CAACzF,UAAU,EACbyF,EAAE,CAACrF,UAAU,EACbqF,EAAE,CAACpJ,WAAW,CACf;QACH,CAAC,CAAC,EACFmB,GAAG,CAACuD,eAAe,CACpB,EACDuC,+BAA+B,CAACsH,2BAA2B,CAAC,CAC7D;MACH;IACA,KAAK,SAAS;MACZ,OAAO3I,aAAa,CAAC,MAAMyI,MAAM,CAAClN,GAAG,CAAC0E,CAAC,EAAE,EAAEyI,OAAO,CAAC,CAAC;IACtD,KAAK,WAAW;MACd,OAAOJ,OAAO,CAAC/M,GAAG,EAAEkN,MAAM,CAACjI,EAAE,CAACjF,GAAG,CAAC,EAAEmN,OAAO,CAAC,CAAC;EACjD;EACA,MAAM,IAAI/J,KAAK,CAAC,0BAA0B0E,MAAM,CAAC9H,GAAG,CAAC,GAAG,CAAC;AAC3D,CAAC;AAAArC,OAAA,CAAAuP,MAAA,GAAAA,MAAA;AAED,MAAMI,oBAAoB,GAAGA,CAACrK,IAAY,EAAEgC,EAAU,KAAa,IAAIhC,IAAI,QAAQgC,EAAE,GAAG;AAExF;;;;AAIO,MAAM6C,MAAM,GAAGA,CAAC9H,GAAQ,EAAEuN,OAAA,GAAmB,KAAK,KAAY;EACnE,QAAQvN,GAAG,CAACF,IAAI;IACd,KAAK,eAAe;IACpB,KAAK,eAAe;IACpB,KAAK,gBAAgB;IACrB,KAAK,eAAe;IACpB,KAAK,kBAAkB;IACvB,KAAK,eAAe;IACpB,KAAK,eAAe;IACpB,KAAK,YAAY;IACjB,KAAK,gBAAgB;IACrB,KAAK,aAAa;IAClB,KAAK,cAAc;MACjB,OAAO9D,MAAM,CAACwR,SAAS,CAACC,WAAW,CAACzN,GAAG,EAAEuN,OAAO,CAAC,EAAE,MAAMvN,GAAG,CAACF,IAAI,CAAC;IACpE,KAAK,SAAS;MACZ,OAAO9D,MAAM,CAACwR,SAAS,CAACC,WAAW,CAACzN,GAAG,EAAEuN,OAAO,CAAC,EAAE,MAAM1E,aAAa,CAAC7I,GAAG,CAACE,OAAO,CAAC,CAAC;IACtF,KAAK,cAAc;MACjB,OAAOlE,MAAM,CAACwR,SAAS,CAACC,WAAW,CAACzN,GAAG,EAAEuN,OAAO,CAAC,EAAE,MAAM1E,aAAa,CAAC7I,GAAG,CAACM,MAAM,CAAC,CAAC;IACrF,KAAK,OAAO;MACV,OAAOtE,MAAM,CAACwR,SAAS,CACrBC,WAAW,CAACzN,GAAG,EAAEuN,OAAO,CAAC,EACzB,MAAMvN,GAAG,CAACqE,KAAK,CAACmD,GAAG,CAAE8B,MAAM,IAAKxB,MAAM,CAACwB,MAAM,CAAC,CAAC,CAACoE,IAAI,CAAC,KAAK,CAAC,CAC5D;IACH,KAAK,iBAAiB;MACpB,OAAO1R,MAAM,CAACwR,SAAS,CAACC,WAAW,CAACzN,GAAG,EAAEuN,OAAO,CAAC,EAAE,MAAMI,qBAAqB,CAAC3N,GAAG,CAAC,CAAC;IACtF,KAAK,OAAO;MACV,OAAOhE,MAAM,CAACwR,SAAS,CAACC,WAAW,CAACzN,GAAG,EAAEuN,OAAO,CAAC,EAAE,MAAMK,WAAW,CAAC5N,GAAG,CAAC,CAAC;IAC5E,KAAK,aAAa;MAChB,OAAOhE,MAAM,CAACwR,SAAS,CAACC,WAAW,CAACzN,GAAG,EAAEuN,OAAO,CAAC,EAAE,MAAMM,iBAAiB,CAAC7N,GAAG,CAAC,CAAC;IAClF,KAAK,OAAO;MACV,OAAOhE,MAAM,CAACwR,SAAS,CACrBC,WAAW,CAACzN,GAAG,EAAEuN,OAAO,CAAC,EACzB,MAAM,SAASvN,GAAG,CAAC+B,KAAK,CAAC0B,MAAM,cAAczD,GAAG,CAAC+B,KAAK,CAACyF,GAAG,CAAC,CAACsG,CAAC,EAAEzH,KAAK,KAAKyE,IAAI,CAACC,SAAS,CAAC1E,KAAK,CAAC,CAAC,CAACqH,IAAI,CAAC,KAAK,CAAC,GAAG,CAC/G;IACH,KAAK,SAAS;MACZ,OAAOD,WAAW,CAACzN,GAAG,EAAEuN,OAAO,CAAC,CAAC5G,IAAI,CACnC3K,MAAM,CAAC+R,MAAM,CAAC,MACZ/R,MAAM,CAACmQ,OAAO,CACZnQ,MAAM,CAACgS,aAAa,CAAChO,GAAG,CAAC0E,CAAC,CAAC,EAAE,EAC5B1E,GAAG,IAAKyN,WAAW,CAACzN,GAAG,EAAEuN,OAAO,CAAC,CACnC,CACF,EACDvR,MAAM,CAACwR,SAAS,CAAC,MAAM,oBAAoB,CAAC,CAC7C;IACH,KAAK,aAAa;MAChB,OAAOxR,MAAM,CAACwR,SAAS,CAACC,WAAW,CAACzN,GAAG,EAAEuN,OAAO,CAAC,EAAE,MAAM,sBAAsB,CAAC;IAClF,KAAK,YAAY;MACf,OAAOvR,MAAM,CAACwR,SAAS,CAACC,WAAW,CAACzN,GAAG,EAAEuN,OAAO,CAAC,EAAE,MAAM,qBAAqB,CAAC;IACjF,KAAK,WAAW;MACd,OAAOvR,MAAM,CAACwR,SAAS,CACrBC,WAAW,CAACzN,GAAG,EAAEuN,OAAO,CAAC,EACzB,MAAMD,oBAAoB,CAACxF,MAAM,CAAC9H,GAAG,CAACiD,IAAI,CAAC,EAAE6E,MAAM,CAAC9H,GAAG,CAACiF,EAAE,CAAC,CAAC,CAC7D;EACL;AACF,CAAC;AAED;AAAAtH,OAAA,CAAAmK,MAAA,GAAAA,MAAA;AACO,MAAMe,aAAa,GAAIzL,CAAU,IAAY;EAClD,IAAIlB,SAAS,CAACgM,QAAQ,CAAC9K,CAAC,CAAC,EAAE;IACzB,OAAO0N,IAAI,CAACC,SAAS,CAAC3N,CAAC,CAAC;EAC1B,CAAC,MAAM,IACLlB,SAAS,CAAC0M,QAAQ,CAACxL,CAAC,CAAC,IAClBA,CAAC,IAAI,IAAI,IACTlB,SAAS,CAAC+R,SAAS,CAAC7Q,CAAC,CAAC,IACtBlB,SAAS,CAACqM,QAAQ,CAACnL,CAAC,CAAC,IACrBlB,SAAS,CAACgS,MAAM,CAAC9Q,CAAC,CAAC,EACtB;IACA,OAAOsG,MAAM,CAACtG,CAAC,CAAC;EAClB,CAAC,MAAM,IAAIlB,SAAS,CAACiS,QAAQ,CAAC/Q,CAAC,CAAC,EAAE;IAChC,OAAOsG,MAAM,CAACtG,CAAC,CAAC,GAAG,GAAG;EACxB,CAAC,MAAM,IACL,CAACgR,KAAK,CAACC,OAAO,CAACjR,CAAC,CAAC,IACdlB,SAAS,CAACoS,WAAW,CAAClR,CAAC,EAAE,UAAU,CAAC,IACpClB,SAAS,CAACqS,UAAU,CAACnR,CAAC,CAAC,UAAU,CAAC,CAAC,IACnCA,CAAC,CAAC,UAAU,CAAC,KAAKH,MAAM,CAACI,SAAS,CAACwN,QAAQ,EAC9C;IACA,OAAOzN,CAAC,CAAC,UAAU,CAAC,EAAE;EACxB;EACA,IAAI;IACF,OAAO0N,IAAI,CAACC,SAAS,CAAC3N,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOd,CAAC,EAAE;IACV,OAAOoH,MAAM,CAACtG,CAAC,CAAC;EAClB;AACF,CAAC;AAAAO,OAAA,CAAAkL,aAAA,GAAAA,aAAA;AAED,MAAM8E,qBAAqB,GAAI3N,GAAoB,IACjD,GAAG,GAAGA,GAAG,CAACkC,IAAI,GAAGlC,GAAG,CAACmC,KAAK,CAACqF,GAAG,CAAEL,IAAI,IAAKqH,yBAAyB,CAACrH,IAAI,CAAC,GAAGA,IAAI,CAACjH,OAAO,CAAC,CAACwN,IAAI,CAAC,EAAE,CAAC,GACjG,GAAG;AAEL,MAAMD,WAAW,GAAGA,CAACzN,GAAQ,EAAEuN,OAAgB,KAA2B;EACxE,IAAIA,OAAO,EAAE;IACX,MAAMkB,WAAW,GAAGtP,wBAAwB,CAACa,GAAG,CAAC,CAAC2G,IAAI,CACpD3K,MAAM,CAAC+R,MAAM,CAAC,MAAM9O,kBAAkB,CAACe,GAAG,CAAC,CAAC,CAC7C;IACD,OAAOhE,MAAM,CAAC4K,KAAK,CAAC1H,uBAAuB,CAACc,GAAG,CAAC,EAAE;MAChD6G,MAAM,EAAEA,CAAA,KAAM4H,WAAW;MACzB3H,MAAM,EAAGkD,UAAU,IACjBhO,MAAM,CAAC4K,KAAK,CAAC6H,WAAW,EAAE;QACxB5H,MAAM,EAAEA,CAAA,KAAM7K,MAAM,CAAC8C,IAAI,CAACkL,UAAU,CAAC;QACrClD,MAAM,EAAG2H,WAAW,IAAKzS,MAAM,CAAC8C,IAAI,CAAC,GAAGkL,UAAU,KAAKyE,WAAW,GAAG;OACtE;KACJ,CAAC;EACJ;EACA,OAAOvP,uBAAuB,CAACc,GAAG,CAAC,CAAC2G,IAAI,CACtC3K,MAAM,CAAC+R,MAAM,CAAC,MAAM9O,kBAAkB,CAACe,GAAG,CAAC,CAAC,EAC5ChE,MAAM,CAAC+R,MAAM,CAAC,MAAM5O,wBAAwB,CAACa,GAAG,CAAC,CAAC,CACnD;AACH,CAAC;AAED,MAAM4N,WAAW,GAAI5N,GAAU,IAAY;EACzC,MAAM0O,iBAAiB,GAAG1O,GAAG,CAAC0C,QAAQ,CAAC8E,GAAG,CAAEmH,OAAO,IAAK7G,MAAM,CAAC6G,OAAO,CAACpM,IAAI,CAAC,IAAIoM,OAAO,CAACnM,UAAU,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAC5GkL,IAAI,CAAC,IAAI,CAAC;EACb,OAAO1R,MAAM,CAAC4K,KAAK,CAAC5G,GAAG,CAAC2C,IAAI,EAAE;IAC5BkE,MAAM,EAAEA,CAAA,KAAM,YAAY,GAAG6H,iBAAiB,GAAG,GAAG;IACpD5H,MAAM,EAAEA,CAAC,CAAC5E,IAAI,EAAE,GAAG0M,IAAI,CAAC,KAAI;MAC1B,MAAMC,aAAa,GAAG/G,MAAM,CAAC5F,IAAI,CAAC;MAClC,MAAM4M,WAAW,GAAGD,aAAa,CAAC5F,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG4F,aAAa,GAAG,GAAG,GAAGA,aAAa;MAE7F,IAAID,IAAI,CAACnL,MAAM,GAAG,CAAC,EAAE;QACnB,MAAMsL,aAAa,GAAGH,IAAI,CAACpH,GAAG,CAAExH,GAAG,IAAK8H,MAAM,CAAC9H,GAAG,CAAC,CAAC,CAAC0N,IAAI,CAAC,IAAI,CAAC;QAC/D,IAAI1N,GAAG,CAAC0C,QAAQ,CAACe,MAAM,GAAG,CAAC,EAAE;UAC3B,OAAO,aAAaiL,iBAAiB,QAAQI,WAAW,OAAOC,aAAa,GAAG;QACjF,CAAC,MAAM;UACL,OAAO,gBAAgBD,WAAW,OAAOC,aAAa,GAAG;QAC3D;MACF,CAAC,MAAM;QACL,IAAI/O,GAAG,CAAC0C,QAAQ,CAACe,MAAM,GAAG,CAAC,EAAE;UAC3B,OAAO,aAAaiL,iBAAiB,QAAQI,WAAW,KAAK;QAC/D,CAAC,MAAM;UACL,OAAO,iBAAiBD,aAAa,GAAG;QAC1C;MACF;IACF;GACD,CAAC;AACJ,CAAC;AAED,MAAMhB,iBAAiB,GAAI7N,GAAgB,IAAY;EACrD,MAAMgP,2BAA2B,GAAGhP,GAAG,CAACsD,kBAAkB,CAACkE,GAAG,CAAES,EAAE,IAChEvE,MAAM,CAACuE,EAAE,CAAClF,IAAI,CAAC,IAAIkF,EAAE,CAACzF,UAAU,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,IAAI,GAAGsF,MAAM,CAACG,EAAE,CAAC1F,IAAI,CAAC,CACtE,CAACmL,IAAI,CAAC,IAAI,CAAC;EACZ,IAAI1N,GAAG,CAACuD,eAAe,CAACE,MAAM,GAAG,CAAC,EAAE;IAClC,MAAMwL,wBAAwB,GAAGjP,GAAG,CAACuD,eAAe,CAACiE,GAAG,CAAEW,EAAE,IAC1D,OAAOL,MAAM,CAACjE,gBAAgB,CAACsE,EAAE,CAAChF,SAAS,CAAC,CAAC,MAAM2E,MAAM,CAACK,EAAE,CAAC5F,IAAI,CAAC,EAAE,CACrE,CAACmL,IAAI,CAAC,IAAI,CAAC;IACZ,IAAI1N,GAAG,CAACsD,kBAAkB,CAACG,MAAM,GAAG,CAAC,EAAE;MACrC,OAAO,KAAKuL,2BAA2B,KAAKC,wBAAwB,IAAI;IAC1E,CAAC,MAAM;MACL,OAAO,KAAKA,wBAAwB,IAAI;IAC1C;EACF,CAAC,MAAM;IACL,IAAIjP,GAAG,CAACsD,kBAAkB,CAACG,MAAM,GAAG,CAAC,EAAE;MACrC,OAAO,KAAKuL,2BAA2B,IAAI;IAC7C,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF;AACF,CAAC;AAED,MAAMR,yBAAyB,GAAIrH,IAAyB,IAAY;EACtE,QAAQA,IAAI,CAAC5E,IAAI,CAACzC,IAAI;IACpB,KAAK,eAAe;MAClB,OAAO,WAAW;IACpB,KAAK,eAAe;MAClB,OAAO,WAAW;EACtB;AACF,CAAC"}
\ No newline at end of file
+{"version":3,"file":"AST.js","names":["_Function","require","_GlobalValue","Hash","_interopRequireWildcard","Number","Option","Order","Predicate","ReadonlyArray","_util","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","BrandAnnotationId","exports","Symbol","for","TypeAnnotationId","MessageAnnotationId","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","JSONSchemaAnnotationId","DocumentationAnnotationId","ConcurrencyAnnotationId","BatchingAnnotationId","SurrogateAnnotationId","JSONIdentifierAnnotationId","getAnnotation","dual","annotated","key","annotations","some","none","getBrandAnnotation","getMessageAnnotation","getTitleAnnotation","getIdentifierAnnotation","getDescriptionAnnotation","getExamplesAnnotation","getDefaultAnnotation","getJSONSchemaAnnotation","getDocumentationAnnotation","getConcurrencyAnnotation","getBatchingAnnotation","getSurrogateSchemaAnnotation","getJSONIdentifierAnnotation","Declaration","typeParameters","decodeUnknown","encodeUnknown","_tag","constructor","toString","verbose","getOrElse","getExpected","toJSON","map","ast","toJSONAnnotations","createASTGuard","tag","isDeclaration","Literal","literal","formatUnknown","isBigInt","String","isLiteral","_null","UniqueSymbol","symbol","isUniqueSymbol","UndefinedKeyword","formatKeyword","undefinedKeyword","isUndefinedKeyword","VoidKeyword","voidKeyword","isVoidKeyword","NeverKeyword","neverKeyword","isNeverKeyword","UnknownKeyword","unknownKeyword","isUnknownKeyword","AnyKeyword","anyKeyword","isAnyKeyword","StringKeyword","stringKeyword","isStringKeyword","NumberKeyword","numberKeyword","isNumberKeyword","BooleanKeyword","booleanKeyword","isBooleanKeyword","BigIntKeyword","bigIntKeyword","isBigIntKeyword","SymbolKeyword","symbolKeyword","isSymbolKeyword","ObjectKeyword","objectKeyword","isObjectKeyword","Enums","enums","length","_","value","JSON","stringify","join","isEnums","TemplateLiteralSpan","type","TemplateLiteral","head","spans","make","isNonEmptyReadonlyArray","formatTemplateLiteral","span","isTemplateLiteral","Element","isOptional","TupleType","elements","rest","isReadonly","hasOptionalElement","hasIllegalRequiredElement","Error","formatTuple","formattedElements","element","matchLeft","onEmpty","onNonEmpty","tail","formattedHead","wrappedHead","includes","formattedTail","isTupleType","PropertySignature","name","isParameter","from","IndexSignature","parameter","getDuplicatePropertySignatureErrorMessage","getDuplicateIndexSignatureErrorMessage","TypeLiteral","propertySignatures","indexSignatures","keys","parameters","string","getParameterBase","sortPropertySignatures","sortIndexSignatures","formatTypeLiteral","ps","formattedPropertySignatures","formattedIndexSignatures","is","isTypeLiteral","flatten","candidates","flatMap","types","prettyUnion","ss","Array","Set","getDefaultUnionDescription","nested","other","c","isUnion","expected","isSome","push","concat","Union","unify","isMembers","defaultDescription","sortUnionMembers","mapMembers","members","f","as","toJSONMemoMap","globalValue","Suspend","memoizeThunk","pipe","orElse","liftThrowable","out","isSuspend","Refinement","filter","isRefinement","defaultParseOption","Transformation","to","transformation","isTransform","FinalTransformation","decode","encode","createTransformationGuard","isFinalTransformation","ComposeTransformation","composeTransformation","isComposeTransformation","PropertySignatureTransformation","getDuplicatePropertySignatureTransformationErrorMessage","TypeLiteralTransformation","propertySignatureTransformations","fromKeys","toKeys","pst","isTypeLiteralTransformation","d","getOwnPropertyDescriptors","create","getPrototypeOf","keyof","_keyof","getTemplateLiteralRegex","pattern","RegExp","getPropertySignatures","annotation","slice","getPropertyKeys","getPropertyKeyIndexedAccess","getNumberIndexedAccess","hasOptional","ops","findFirst","isString","parameterBase","regex","test","isSymbol","reduce","intersection","record","go","isNumber","forEach","pick","omit","orUndefined","partial","options","exact","match","member","required","union","mutable","getCompiler","compile","getToPropertySignatures","p","typeAST","getToIndexSignatures","changeMap","getJSONIdentifier","createJSONIdentifierAnnotation","onNone","undefined","onSome","identifier","changed","fa","encodedAST","k","getOwnPropertySymbols","hash","getCardinality","sort","mapInput","WeightOrder","tuple","maxWeight","max","emptyWeight","maxWeightAll","weights","getWeight","y","z","x","reverse","sortCandidates","literalMap","number","boolean","bigint","cs","uniques","literals","equalsTemplateLiteralSpan","getEquivalence","self","that","equalsEnums","equals","intersectionWith","compose","ab","cd","rename","mapping","ownKeys","identity","description"],"sources":["../../src/AST.ts"],"sourcesContent":[null],"mappings":";;;;;;;AAKA,IAAAA,SAAA,gBAAAC,OAAA;AACA,IAAAC,YAAA,gBAAAD,OAAA;AACA,IAAAE,IAAA,gBAAAC,uBAAA,eAAAH,OAAA;AACA,IAAAI,MAAA,gBAAAD,uBAAA,eAAAH,OAAA;AACA,IAAAK,MAAA,gBAAAF,uBAAA,eAAAH,OAAA;AACA,IAAAM,KAAA,gBAAAH,uBAAA,eAAAH,OAAA;AACA,IAAAO,SAAA,gBAAAJ,uBAAA,eAAAH,OAAA;AACA,IAAAQ,aAAA,gBAAAL,uBAAA,eAAAH,OAAA;AAEA,IAAAS,KAAA,gBAAAN,uBAAA,eAAAH,OAAA;AAA2C,SAAAU,yBAAAC,CAAA;EAAA,yBAAAC,OAAA;EAAA,IAAAC,CAAA,OAAAD,OAAA;IAAAE,CAAA,OAAAF,OAAA;EAAA,QAAAF,wBAAA,YAAAA,CAAAC,CAAA;IAAA,OAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA;EAAA,GAAAF,CAAA;AAAA;AAAA,SAAAR,wBAAAQ,CAAA,EAAAE,CAAA;EAAA,KAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA;EAAA,aAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA;IAAAK,OAAA,EAAAL;EAAA;EAAA,IAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA;EAAA,IAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA;EAAA,IAAAQ,CAAA;MAAAC,SAAA;IAAA;IAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA;EAAA,SAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,EAAAc,CAAA;IAAA,IAAAI,CAAA,GAAAR,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA;IAAAI,CAAA,KAAAA,CAAA,CAAAX,GAAA,IAAAW,CAAA,CAAAC,GAAA,IAAAR,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAI,CAAA,IAAAV,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA;EAAA;EAAA,OAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAgB,GAAA,CAAAnB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAAA;AAd3C;;;;AAyDA;;;;AAIO,MAAMY,iBAAiB,GAAAC,OAAA,CAAAD,iBAAA,gBAAGE,MAAM,CAACC,GAAG,CAAC,iCAAiC,CAAC;AAQ9E;;;;AAIO,MAAMC,gBAAgB,GAAAH,OAAA,CAAAG,gBAAA,gBAAGF,MAAM,CAACC,GAAG,CAAC,gCAAgC,CAAC;AAQ5E;;;;AAIO,MAAME,mBAAmB,GAAAJ,OAAA,CAAAI,mBAAA,gBAAGH,MAAM,CAACC,GAAG,CAAC,mCAAmC,CAAC;AAQlF;;;;AAIO,MAAMG,sBAAsB,GAAAL,OAAA,CAAAK,sBAAA,gBAAGJ,MAAM,CAACC,GAAG,CAAC,sCAAsC,CAAC;AAQxF;;;;AAIO,MAAMI,iBAAiB,GAAAN,OAAA,CAAAM,iBAAA,gBAAGL,MAAM,CAACC,GAAG,CAAC,iCAAiC,CAAC;AAQ9E;;;;AAIO,MAAMK,uBAAuB,GAAAP,OAAA,CAAAO,uBAAA,gBAAGN,MAAM,CAACC,GAAG,CAAC,uCAAuC,CAAC;AAQ1F;;;;AAIO,MAAMM,oBAAoB,GAAAR,OAAA,CAAAQ,oBAAA,gBAAGP,MAAM,CAACC,GAAG,CAAC,oCAAoC,CAAC;AAQpF;;;;AAIO,MAAMO,mBAAmB,GAAAT,OAAA,CAAAS,mBAAA,gBAAGR,MAAM,CAACC,GAAG,CAAC,mCAAmC,CAAC;AAQlF;;;;AAIO,MAAMQ,sBAAsB,GAAAV,OAAA,CAAAU,sBAAA,gBAAGT,MAAM,CAACC,GAAG,CAAC,sCAAsC,CAAC;AAQxF;;;;AAIO,MAAMS,yBAAyB,GAAAX,OAAA,CAAAW,yBAAA,gBAAGV,MAAM,CAACC,GAAG,CAAC,yCAAyC,CAAC;AAQ9F;;;;AAIO,MAAMU,uBAAuB,GAAAZ,OAAA,CAAAY,uBAAA,gBAAGX,MAAM,CAACC,GAAG,CAAC,uCAAuC,CAAC;AAQ1F;;;;AAIO,MAAMW,oBAAoB,GAAAb,OAAA,CAAAa,oBAAA,gBAAGZ,MAAM,CAACC,GAAG,CAAC,oCAAoC,CAAC;AAEpF;AACO,MAAMY,qBAAqB,GAAAd,OAAA,CAAAc,qBAAA,gBAAGb,MAAM,CAACC,GAAG,CAAC,qCAAqC,CAAC;AAEtF;AACO,MAAMa,0BAA0B,GAAAf,OAAA,CAAAe,0BAAA,gBAAGd,MAAM,CAACC,GAAG,CAAC,0CAA0C,CAAC;AAgChG;;;;AAIO,MAAMc,aAAa,GAAAhB,OAAA,CAAAgB,aAAA,gBAGtB,IAAAjD,SAAA,CAAAkD,IAAI,EACN,CAAC,EACD,CAAIC,SAAoB,EAAEC,GAAW,KACnC7B,MAAM,CAACI,SAAS,CAACC,cAAc,CAACC,IAAI,CAACsB,SAAS,CAACE,WAAW,EAAED,GAAG,CAAC,GAC9D9C,MAAM,CAACgD,IAAI,CAACH,SAAS,CAACE,WAAW,CAACD,GAAG,CAAQ,CAAC,GAC9C9C,MAAM,CAACiD,IAAI,EAAE,CAClB;AAED;;;;AAIO,MAAMC,kBAAkB,GAAAvB,OAAA,CAAAuB,kBAAA,gBAAGP,aAAa,CAAkBjB,iBAAiB,CAAC;AAEnF;;;;AAIO,MAAMyB,oBAAoB,GAAAxB,OAAA,CAAAwB,oBAAA,gBAAGR,aAAa,CAAoBZ,mBAAmB,CAAC;AAEzF;;;;AAIO,MAAMqB,kBAAkB,GAAAzB,OAAA,CAAAyB,kBAAA,gBAAGT,aAAa,CAAkBV,iBAAiB,CAAC;AAEnF;;;;AAIO,MAAMoB,uBAAuB,GAAA1B,OAAA,CAAA0B,uBAAA,gBAAGV,aAAa,CAAuBX,sBAAsB,CAAC;AAElG;;;;AAIO,MAAMsB,wBAAwB,GAAA3B,OAAA,CAAA2B,wBAAA,gBAAGX,aAAa,CAAwBT,uBAAuB,CAAC;AAErG;;;;AAIO,MAAMqB,qBAAqB,GAAA5B,OAAA,CAAA4B,qBAAA,gBAAGZ,aAAa,CAA8BR,oBAAoB,CAAC;AAErG;;;;AAIO,MAAMqB,oBAAoB,GAAA7B,OAAA,CAAA6B,oBAAA,gBAAGb,aAAa,CAA6BP,mBAAmB,CAAC;AAElG;;;;AAIO,MAAMqB,uBAAuB,GAAA9B,OAAA,CAAA8B,uBAAA,gBAAGd,aAAa,CAAuBN,sBAAsB,CAAC;AAElG;;;;AAIO,MAAMqB,0BAA0B,GAAA/B,OAAA,CAAA+B,0BAAA,gBAAGf,aAAa,CAA0BL,yBAAyB,CAAC;AAE3G;;;;AAIO,MAAMqB,wBAAwB,GAAAhC,OAAA,CAAAgC,wBAAA,gBAAGhB,aAAa,CAAwBJ,uBAAuB,CAAC;AAErG;;;;AAIO,MAAMqB,qBAAqB,GAAAjC,OAAA,CAAAiC,qBAAA,gBAAGjB,aAAa,CAAqBH,oBAAoB,CAAC;AAE5F;AACO,MAAMqB,4BAA4B,GAAAlC,OAAA,CAAAkC,4BAAA,gBAAGlB,aAAa,CAAsBF,qBAAqB,CAAC;AAErG;AACO,MAAMqB,2BAA2B,GAAAnC,OAAA,CAAAmC,2BAAA,gBAAGnB,aAAa,CAAuBD,0BAA0B,CAAC;AAE1G;;;;AAIM,MAAOqB,WAAW;EAMXC,cAAA;EACAC,aAAA;EAGAC,aAAA;EAGAnB,WAAA;EAZX;;;EAGSoB,IAAI,GAAG,aAAa;EAC7BC,YACWJ,cAAkC,EAClCC,aAEsF,EACtFC,aAEsF,EACtFnB,WAAA,GAA2B,EAAE;IAP7B,KAAAiB,cAAc,GAAdA,cAAc;IACd,KAAAC,aAAa,GAAbA,aAAa;IAGb,KAAAC,aAAa,GAAbA,aAAa;IAGb,KAAAnB,WAAW,GAAXA,WAAW;EACnB;EACH;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOtE,MAAM,CAACuE,SAAS,CAACC,WAAW,CAAC,IAAI,EAAEF,OAAO,CAAC,EAAE,MAAM,sBAAsB,CAAC;EACnF;EACA;;;EAGAG,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfH,cAAc,EAAE,IAAI,CAACA,cAAc,CAACU,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACF,MAAM,EAAE,CAAC;MAC9D1B,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AACDpB,OAAA,CAAAoC,WAAA,GAAAA,WAAA;AAED,MAAMc,cAAc,GAA2BC,GAAM,IAAMH,GAAQ,IACjEA,GAAG,CAACR,IAAI,KAAKW,GAAG;AAElB;;;;AAIO,MAAMC,aAAa,GAAApD,OAAA,CAAAoD,aAAA,gBAAqCF,cAAc,CAAC,aAAa,CAAC;AAQ5F;;;;AAIM,MAAOG,OAAO;EAKGC,OAAA;EAAgClC,WAAA;EAJrD;;;EAGSoB,IAAI,GAAG,SAAS;EACzBC,YAAqBa,OAAqB,EAAWlC,WAAA,GAA2B,EAAE;IAA7D,KAAAkC,OAAO,GAAPA,OAAO;IAAyB,KAAAlC,WAAW,GAAXA,WAAW;EAAqB;EACrF;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOtE,MAAM,CAACuE,SAAS,CAACC,WAAW,CAAC,IAAI,EAAEF,OAAO,CAAC,EAAE,MAAMlE,KAAK,CAAC8E,aAAa,CAAC,IAAI,CAACD,OAAO,CAAC,CAAC;EAC9F;EACA;;;EAGAR,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfc,OAAO,EAAE/E,SAAS,CAACiF,QAAQ,CAAC,IAAI,CAACF,OAAO,CAAC,GAAGG,MAAM,CAAC,IAAI,CAACH,OAAO,CAAC,GAAG,IAAI,CAACA,OAAO;MAC/ElC,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAGF;;;;AAAApB,OAAA,CAAAqD,OAAA,GAAAA,OAAA;AAIO,MAAMK,SAAS,GAAA1D,OAAA,CAAA0D,SAAA,gBAAiCR,cAAc,CAAC,SAAS,CAAC;AAEhF;AACO,MAAMS,KAAK,GAAA3D,OAAA,CAAA2D,KAAA,gBAAG,IAAIN,OAAO,CAAC,IAAI,EAAE;EACrC,CAAChD,sBAAsB,GAAG;CAC3B,CAAC;AAEF;;;;AAIM,MAAOuD,YAAY;EAKFC,MAAA;EAAyBzC,WAAA;EAJ9C;;;EAGSoB,IAAI,GAAG,cAAc;EAC9BC,YAAqBoB,MAAc,EAAWzC,WAAA,GAA2B,EAAE;IAAtD,KAAAyC,MAAM,GAANA,MAAM;IAAmB,KAAAzC,WAAW,GAAXA,WAAW;EAAqB;EAC9E;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOtE,MAAM,CAACuE,SAAS,CAACC,WAAW,CAAC,IAAI,EAAEF,OAAO,CAAC,EAAE,MAAMlE,KAAK,CAAC8E,aAAa,CAAC,IAAI,CAACM,MAAM,CAAC,CAAC;EAC7F;EACA;;;EAGAf,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfqB,MAAM,EAAEJ,MAAM,CAAC,IAAI,CAACI,MAAM,CAAC;MAC3BzC,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAGF;;;;AAAApB,OAAA,CAAA4D,YAAA,GAAAA,YAAA;AAIO,MAAME,cAAc,GAAA9D,OAAA,CAAA8D,cAAA,gBAAsCZ,cAAc,CAAC,cAAc,CAAC;AAE/F;;;;AAIM,MAAOa,gBAAgB;EAKN3C,WAAA;EAJrB;;;EAGSoB,IAAI,GAAG,kBAAkB;EAClCC,YAAqBrB,WAAA,GAA2B,EAAE;IAA7B,KAAAA,WAAW,GAAXA,WAAW;EAAqB;EACrD;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOqB,aAAa,CAAC,IAAI,EAAErB,OAAO,CAAC;EACrC;EACA;;;EAGAG,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfpB,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAGF;;;;AAAApB,OAAA,CAAA+D,gBAAA,GAAAA,gBAAA;AAIO,MAAME,gBAAgB,GAAAjE,OAAA,CAAAiE,gBAAA,gBAAqB,IAAIF,gBAAgB,CAAC;EACrE,CAACzD,iBAAiB,GAAG;CACtB,CAAC;AAEF;;;;AAIO,MAAM4D,kBAAkB,GAAAlE,OAAA,CAAAkE,kBAAA,gBAA0ChB,cAAc,CAAC,kBAAkB,CAAC;AAE3G;;;;AAIM,MAAOiB,WAAW;EAKD/C,WAAA;EAJrB;;;EAGSoB,IAAI,GAAG,aAAa;EAC7BC,YAAqBrB,WAAA,GAA2B,EAAE;IAA7B,KAAAA,WAAW,GAAXA,WAAW;EAAqB;EACrD;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOqB,aAAa,CAAC,IAAI,EAAErB,OAAO,CAAC;EACrC;EACA;;;EAGAG,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfpB,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAGF;;;;AAAApB,OAAA,CAAAmE,WAAA,GAAAA,WAAA;AAIO,MAAMC,WAAW,GAAApE,OAAA,CAAAoE,WAAA,gBAAgB,IAAID,WAAW,CAAC;EACtD,CAAC7D,iBAAiB,GAAG;CACtB,CAAC;AAEF;;;;AAIO,MAAM+D,aAAa,GAAArE,OAAA,CAAAqE,aAAA,gBAAqCnB,cAAc,CAAC,aAAa,CAAC;AAE5F;;;;AAIM,MAAOoB,YAAY;EAKFlD,WAAA;EAJrB;;;EAGSoB,IAAI,GAAG,cAAc;EAC9BC,YAAqBrB,WAAA,GAA2B,EAAE;IAA7B,KAAAA,WAAW,GAAXA,WAAW;EAAqB;EACrD;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOqB,aAAa,CAAC,IAAI,EAAErB,OAAO,CAAC;EACrC;EACA;;;EAGAG,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfpB,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAGF;;;;AAAApB,OAAA,CAAAsE,YAAA,GAAAA,YAAA;AAIO,MAAMC,YAAY,GAAAvE,OAAA,CAAAuE,YAAA,gBAAiB,IAAID,YAAY,CAAC;EACzD,CAAChE,iBAAiB,GAAG;CACtB,CAAC;AAEF;;;;AAIO,MAAMkE,cAAc,GAAAxE,OAAA,CAAAwE,cAAA,gBAAsCtB,cAAc,CAAC,cAAc,CAAC;AAE/F;;;;AAIM,MAAOuB,cAAc;EAKJrD,WAAA;EAJrB;;;EAGSoB,IAAI,GAAG,gBAAgB;EAChCC,YAAqBrB,WAAA,GAA2B,EAAE;IAA7B,KAAAA,WAAW,GAAXA,WAAW;EAAqB;EACrD;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOqB,aAAa,CAAC,IAAI,EAAErB,OAAO,CAAC;EACrC;EACA;;;EAGAG,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfpB,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAGF;;;;AAAApB,OAAA,CAAAyE,cAAA,GAAAA,cAAA;AAIO,MAAMC,cAAc,GAAA1E,OAAA,CAAA0E,cAAA,gBAAmB,IAAID,cAAc,CAAC;EAC/D,CAACnE,iBAAiB,GAAG;CACtB,CAAC;AAEF;;;;AAIO,MAAMqE,gBAAgB,GAAA3E,OAAA,CAAA2E,gBAAA,gBAAwCzB,cAAc,CAAC,gBAAgB,CAAC;AAErG;;;;AAIM,MAAO0B,UAAU;EAKAxD,WAAA;EAJrB;;;EAGSoB,IAAI,GAAG,YAAY;EAC5BC,YAAqBrB,WAAA,GAA2B,EAAE;IAA7B,KAAAA,WAAW,GAAXA,WAAW;EAAqB;EACrD;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOqB,aAAa,CAAC,IAAI,EAAErB,OAAO,CAAC;EACrC;EACA;;;EAGAG,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfpB,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAGF;;;;AAAApB,OAAA,CAAA4E,UAAA,GAAAA,UAAA;AAIO,MAAMC,UAAU,GAAA7E,OAAA,CAAA6E,UAAA,gBAAe,IAAID,UAAU,CAAC;EACnD,CAACtE,iBAAiB,GAAG;CACtB,CAAC;AAEF;;;;AAIO,MAAMwE,YAAY,GAAA9E,OAAA,CAAA8E,YAAA,gBAAoC5B,cAAc,CAAC,YAAY,CAAC;AAEzF;;;;AAIM,MAAO6B,aAAa;EAKH3D,WAAA;EAJrB;;;EAGSoB,IAAI,GAAG,eAAe;EAC/BC,YAAqBrB,WAAA,GAA2B,EAAE;IAA7B,KAAAA,WAAW,GAAXA,WAAW;EAAqB;EACrD;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOqB,aAAa,CAAC,IAAI,EAAErB,OAAO,CAAC;EACrC;EACA;;;EAGAG,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfpB,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAGF;;;;AAAApB,OAAA,CAAA+E,aAAA,GAAAA,aAAA;AAIO,MAAMC,aAAa,GAAAhF,OAAA,CAAAgF,aAAA,gBAAkB,IAAID,aAAa,CAAC;EAC5D,CAACzE,iBAAiB,GAAG,QAAQ;EAC7B,CAACC,uBAAuB,GAAG;CAC5B,CAAC;AAEF;;;;AAIO,MAAM0E,eAAe,GAAAjF,OAAA,CAAAiF,eAAA,gBAAuC/B,cAAc,CAAC,eAAe,CAAC;AAElG;;;;AAIM,MAAOgC,aAAa;EAKH9D,WAAA;EAJrB;;;EAGSoB,IAAI,GAAG,eAAe;EAC/BC,YAAqBrB,WAAA,GAA2B,EAAE;IAA7B,KAAAA,WAAW,GAAXA,WAAW;EAAqB;EACrD;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOqB,aAAa,CAAC,IAAI,EAAErB,OAAO,CAAC;EACrC;EACA;;;EAGAG,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfpB,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAGF;;;;AAAApB,OAAA,CAAAkF,aAAA,GAAAA,aAAA;AAIO,MAAMC,aAAa,GAAAnF,OAAA,CAAAmF,aAAA,gBAAkB,IAAID,aAAa,CAAC;EAC5D,CAAC5E,iBAAiB,GAAG,QAAQ;EAC7B,CAACC,uBAAuB,GAAG;CAC5B,CAAC;AAEF;;;;AAIO,MAAM6E,eAAe,GAAApF,OAAA,CAAAoF,eAAA,gBAAuClC,cAAc,CAAC,eAAe,CAAC;AAElG;;;;AAIM,MAAOmC,cAAc;EAKJjE,WAAA;EAJrB;;;EAGSoB,IAAI,GAAG,gBAAgB;EAChCC,YAAqBrB,WAAA,GAA2B,EAAE;IAA7B,KAAAA,WAAW,GAAXA,WAAW;EAAqB;EACrD;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOqB,aAAa,CAAC,IAAI,EAAErB,OAAO,CAAC;EACrC;EACA;;;EAGAG,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfpB,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAGF;;;;AAAApB,OAAA,CAAAqF,cAAA,GAAAA,cAAA;AAIO,MAAMC,cAAc,GAAAtF,OAAA,CAAAsF,cAAA,gBAAmB,IAAID,cAAc,CAAC;EAC/D,CAAC/E,iBAAiB,GAAG,SAAS;EAC9B,CAACC,uBAAuB,GAAG;CAC5B,CAAC;AAEF;;;;AAIO,MAAMgF,gBAAgB,GAAAvF,OAAA,CAAAuF,gBAAA,gBAAwCrC,cAAc,CAAC,gBAAgB,CAAC;AAErG;;;;AAIM,MAAOsC,aAAa;EAKHpE,WAAA;EAJrB;;;EAGSoB,IAAI,GAAG,eAAe;EAC/BC,YAAqBrB,WAAA,GAA2B,EAAE;IAA7B,KAAAA,WAAW,GAAXA,WAAW;EAAqB;EACrD;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOqB,aAAa,CAAC,IAAI,EAAErB,OAAO,CAAC;EACrC;EACA;;;EAGAG,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfpB,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAGF;;;;AAAApB,OAAA,CAAAwF,aAAA,GAAAA,aAAA;AAIO,MAAMC,aAAa,GAAAzF,OAAA,CAAAyF,aAAA,gBAAkB,IAAID,aAAa,CAAC;EAC5D,CAAClF,iBAAiB,GAAG,QAAQ;EAC7B,CAACC,uBAAuB,GAAG;CAC5B,CAAC;AAEF;;;;AAIO,MAAMmF,eAAe,GAAA1F,OAAA,CAAA0F,eAAA,gBAAuCxC,cAAc,CAAC,eAAe,CAAC;AAElG;;;;AAIM,MAAOyC,aAAa;EAKHvE,WAAA;EAJrB;;;EAGSoB,IAAI,GAAG,eAAe;EAC/BC,YAAqBrB,WAAA,GAA2B,EAAE;IAA7B,KAAAA,WAAW,GAAXA,WAAW;EAAqB;EACrD;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOqB,aAAa,CAAC,IAAI,EAAErB,OAAO,CAAC;EACrC;EACA;;;EAGAG,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfpB,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAGF;;;;AAAApB,OAAA,CAAA2F,aAAA,GAAAA,aAAA;AAIO,MAAMC,aAAa,GAAA5F,OAAA,CAAA4F,aAAA,gBAAkB,IAAID,aAAa,CAAC;EAC5D,CAACrF,iBAAiB,GAAG,QAAQ;EAC7B,CAACC,uBAAuB,GAAG;CAC5B,CAAC;AAEF;;;;AAIO,MAAMsF,eAAe,GAAA7F,OAAA,CAAA6F,eAAA,gBAAuC3C,cAAc,CAAC,eAAe,CAAC;AAElG;;;;AAIM,MAAO4C,aAAa;EAKH1E,WAAA;EAJrB;;;EAGSoB,IAAI,GAAG,eAAe;EAC/BC,YAAqBrB,WAAA,GAA2B,EAAE;IAA7B,KAAAA,WAAW,GAAXA,WAAW;EAAqB;EACrD;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOqB,aAAa,CAAC,IAAI,EAAErB,OAAO,CAAC;EACrC;EACA;;;EAGAG,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfpB,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAGF;;;;AAAApB,OAAA,CAAA8F,aAAA,GAAAA,aAAA;AAIO,MAAMC,aAAa,GAAA/F,OAAA,CAAA+F,aAAA,gBAAkB,IAAID,aAAa,CAAC;EAC5D,CAACzF,sBAAsB,GAAG,QAAQ;EAClC,CAACC,iBAAiB,GAAG,QAAQ;EAC7B,CAACC,uBAAuB,GAAG;CAC5B,CAAC;AAEF;;;;AAIO,MAAMyF,eAAe,GAAAhG,OAAA,CAAAgG,eAAA,gBAAuC9C,cAAc,CAAC,eAAe,CAAC;AAElG;;;;AAIM,MAAO+C,KAAK;EAMLC,KAAA;EACA9E,WAAA;EANX;;;EAGSoB,IAAI,GAAG,OAAO;EACvBC,YACWyD,KAAwD,EACxD9E,WAAA,GAA2B,EAAE;IAD7B,KAAA8E,KAAK,GAALA,KAAK;IACL,KAAA9E,WAAW,GAAXA,WAAW;EACnB;EACH;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOtE,MAAM,CAACuE,SAAS,CACrBC,WAAW,CAAC,IAAI,EAAEF,OAAO,CAAC,EAC1B,MAAM,SAAS,IAAI,CAACuD,KAAK,CAACC,MAAM,cAAc,IAAI,CAACD,KAAK,CAACnD,GAAG,CAAC,CAACqD,CAAC,EAAEC,KAAK,KAAKC,IAAI,CAACC,SAAS,CAACF,KAAK,CAAC,CAAC,CAACG,IAAI,CAAC,KAAK,CAAC,GAAG,CACjH;EACH;EACA;;;EAGA1D,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACf0D,KAAK,EAAE,IAAI,CAACA,KAAK;MACjB9E,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAGF;;;;AAAApB,OAAA,CAAAiG,KAAA,GAAAA,KAAA;AAIO,MAAMQ,OAAO,GAAAzG,OAAA,CAAAyG,OAAA,gBAA+BvD,cAAc,CAAC,OAAO,CAAC;AAE1E;;;;AAIM,MAAOwD,mBAAmB;EACTC,IAAA;EAA8CrD,OAAA;EAAnEb,YAAqBkE,IAAmC,EAAWrD,OAAe;IAA7D,KAAAqD,IAAI,GAAJA,IAAI;IAA0C,KAAArD,OAAO,GAAPA,OAAO;EAAW;EACrF;;;EAGAZ,QAAQA,CAAA;IACN,QAAQ,IAAI,CAACiE,IAAI,CAACnE,IAAI;MACpB,KAAK,eAAe;QAClB,OAAO,WAAW;MACpB,KAAK,eAAe;QAClB,OAAO,WAAW;IACtB;EACF;EACA;;;EAGAM,MAAMA,CAAA;IACJ,OAAO;MACL6D,IAAI,EAAE,IAAI,CAACA,IAAI,CAAC7D,MAAM,EAAE;MACxBQ,OAAO,EAAE,IAAI,CAACA;KACf;EACH;;AAGF;;;;AAAAtD,OAAA,CAAA0G,mBAAA,GAAAA,mBAAA;AAIM,MAAOE,eAAe;EAefC,IAAA;EACAC,KAAA;EACA1F,WAAA;EAhBX,OAAO2F,IAAI,GAAGA,CACZF,IAAY,EACZC,KAAyC,EACzC1F,WAAA,GAA2B,EAAE,KAE7B5C,aAAa,CAACwI,uBAAuB,CAACF,KAAK,CAAC,GAC1C,IAAIF,eAAe,CAACC,IAAI,EAAEC,KAAK,EAAE1F,WAAW,CAAC,GAC7C,IAAIiC,OAAO,CAACwD,IAAI,CAAC;EAErB;;;EAGSrE,IAAI,GAAG,iBAAiB;EACjCC,YACWoE,IAAY,EACZC,KAA+D,EAC/D1F,WAAA,GAA2B,EAAE;IAF7B,KAAAyF,IAAI,GAAJA,IAAI;IACJ,KAAAC,KAAK,GAALA,KAAK;IACL,KAAA1F,WAAW,GAAXA,WAAW;EACnB;EACH;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOtE,MAAM,CAACuE,SAAS,CAACC,WAAW,CAAC,IAAI,EAAEF,OAAO,CAAC,EAAE,MAAMsE,qBAAqB,CAAC,IAAI,CAAC,CAAC;EACxF;EACA;;;EAGAnE,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfqE,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,KAAK,EAAE,IAAI,CAACA,KAAK,CAAC/D,GAAG,CAAEmE,IAAI,IAAKA,IAAI,CAACpE,MAAM,EAAE,CAAC;MAC9C1B,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;;AAGF,MAAM6F,qBAAqB,GAAIjE,GAAoB,IACjD,GAAG,GAAGA,GAAG,CAAC6D,IAAI,GAAG7D,GAAG,CAAC8D,KAAK,CAAC/D,GAAG,CAAEmE,IAAI,IAAKzD,MAAM,CAACyD,IAAI,CAAC,GAAGA,IAAI,CAAC5D,OAAO,CAAC,CAACkD,IAAI,CAAC,EAAE,CAAC,GAC9E,GAAG;AAEL;;;;AAIO,MAAMW,iBAAiB,GAAAnH,OAAA,CAAAmH,iBAAA,gBAAyCjE,cAAc,CAAC,iBAAiB,CAAC;AAExG;;;;AAIM,MAAOkE,OAAO;EACGT,IAAA;EAAoBU,UAAA;EAAzC5E,YAAqBkE,IAAS,EAAWU,UAAmB;IAAvC,KAAAV,IAAI,GAAJA,IAAI;IAAgB,KAAAU,UAAU,GAAVA,UAAU;EAAY;EAC/D;;;EAGAvE,MAAMA,CAAA;IACJ,OAAO;MACL6D,IAAI,EAAE,IAAI,CAACA,IAAI,CAAC7D,MAAM,EAAE;MACxBuE,UAAU,EAAE,IAAI,CAACA;KAClB;EACH;;AAGF;;;;AAAArH,OAAA,CAAAoH,OAAA,GAAAA,OAAA;AAIM,MAAOE,SAAS;EAMTC,QAAA;EACAC,IAAA;EACAC,UAAA;EACArG,WAAA;EARX;;;EAGSoB,IAAI,GAAG,WAAW;EAC3BC,YACW8E,QAAgC,EAChCC,IAAwB,EACxBC,UAAmB,EACnBrG,WAAA,GAA2B,EAAE;IAH7B,KAAAmG,QAAQ,GAARA,QAAQ;IACR,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAArG,WAAW,GAAXA,WAAW;IAEpB,IAAIsG,kBAAkB,GAAG,KAAK;IAC9B,IAAIC,yBAAyB,GAAG,KAAK;IACrC,KAAK,MAAMhJ,CAAC,IAAI4I,QAAQ,EAAE;MACxB,IAAI5I,CAAC,CAAC0I,UAAU,EAAE;QAChBK,kBAAkB,GAAG,IAAI;MAC3B,CAAC,MAAM,IAAIA,kBAAkB,EAAE;QAC7BC,yBAAyB,GAAG,IAAI;QAChC;MACF;IACF;IACA,IAAIA,yBAAyB,IAAKD,kBAAkB,IAAIF,IAAI,CAACrB,MAAM,GAAG,CAAE,EAAE;MACxE,MAAM,IAAIyB,KAAK,CAAC,gEAAgE,CAAC;IACnF;EACF;EACA;;;EAGAlF,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOtE,MAAM,CAACuE,SAAS,CAACC,WAAW,CAAC,IAAI,EAAEF,OAAO,CAAC,EAAE,MAAMkF,WAAW,CAAC,IAAI,CAAC,CAAC;EAC9E;EACA;;;EAGA/E,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACf+E,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAACxE,GAAG,CAAEpE,CAAC,IAAKA,CAAC,CAACmE,MAAM,EAAE,CAAC;MAC9C0E,IAAI,EAAE,IAAI,CAACA,IAAI,CAACzE,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACF,MAAM,EAAE,CAAC;MAC1C2E,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BrG,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AACDpB,OAAA,CAAAsH,SAAA,GAAAA,SAAA;AAED,MAAMO,WAAW,GAAI7E,GAAc,IAAY;EAC7C,MAAM8E,iBAAiB,GAAG9E,GAAG,CAACuE,QAAQ,CAACxE,GAAG,CAAEgF,OAAO,IAAKtE,MAAM,CAACsE,OAAO,CAACpB,IAAI,CAAC,IAAIoB,OAAO,CAACV,UAAU,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAC5Gb,IAAI,CAAC,IAAI,CAAC;EACb,OAAOhI,aAAa,CAACwJ,SAAS,CAAChF,GAAG,CAACwE,IAAI,EAAE;IACvCS,OAAO,EAAEA,CAAA,KAAM,aAAaH,iBAAiB,GAAG;IAChDI,UAAU,EAAEA,CAACrB,IAAI,EAAEsB,IAAI,KAAI;MACzB,MAAMC,aAAa,GAAG3E,MAAM,CAACoD,IAAI,CAAC;MAClC,MAAMwB,WAAW,GAAGD,aAAa,CAACE,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAIF,aAAa,GAAG,GAAGA,aAAa;MAExF,IAAID,IAAI,CAAChC,MAAM,GAAG,CAAC,EAAE;QACnB,MAAMoC,aAAa,GAAGJ,IAAI,CAACpF,GAAG,CAACU,MAAM,CAAC,CAAC+C,IAAI,CAAC,IAAI,CAAC;QACjD,IAAIxD,GAAG,CAACuE,QAAQ,CAACpB,MAAM,GAAG,CAAC,EAAE;UAC3B,OAAO,aAAa2B,iBAAiB,QAAQO,WAAW,OAAOE,aAAa,GAAG;QACjF,CAAC,MAAM;UACL,OAAO,gBAAgBF,WAAW,OAAOE,aAAa,GAAG;QAC3D;MACF,CAAC,MAAM;QACL,IAAIvF,GAAG,CAACuE,QAAQ,CAACpB,MAAM,GAAG,CAAC,EAAE;UAC3B,OAAO,aAAa2B,iBAAiB,QAAQO,WAAW,KAAK;QAC/D,CAAC,MAAM;UACL,OAAO,iBAAiBD,aAAa,GAAG;QAC1C;MACF;IACF;GACD,CAAC;AACJ,CAAC;AAED;;;;AAIO,MAAMI,WAAW,GAAAxI,OAAA,CAAAwI,WAAA,gBAAmCtF,cAAc,CAAC,WAAW,CAAC;AAEtF;;;;AAIM,MAAOuF,iBAAiB;EAEjBC,IAAA;EACA/B,IAAA;EACAU,UAAA;EACAI,UAAA;EACArG,WAAA;EALXqB,YACWiG,IAAiB,EACjB/B,IAAS,EACTU,UAAmB,EACnBI,UAAmB,EACnBrG,WAAA,GAA2B,EAAE;IAJ7B,KAAAsH,IAAI,GAAJA,IAAI;IACJ,KAAA/B,IAAI,GAAJA,IAAI;IACJ,KAAAU,UAAU,GAAVA,UAAU;IACV,KAAAI,UAAU,GAAVA,UAAU;IACV,KAAArG,WAAW,GAAXA,WAAW;EACnB;EACH;;;EAGA0B,MAAMA,CAAA;IACJ,OAAO;MACL4F,IAAI,EAAEjF,MAAM,CAAC,IAAI,CAACiF,IAAI,CAAC;MACvB/B,IAAI,EAAE,IAAI,CAACA,IAAI,CAAC7D,MAAM,EAAE;MACxBuE,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BI,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BrG,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAQF;;;AAAApB,OAAA,CAAAyI,iBAAA,GAAAA,iBAAA;AAGO,MAAME,WAAW,GAAI3F,GAAQ,IAAsB;EACxD,QAAQA,GAAG,CAACR,IAAI;IACd,KAAK,eAAe;IACpB,KAAK,eAAe;IACpB,KAAK,iBAAiB;MACpB,OAAO,IAAI;IACb,KAAK,YAAY;MACf,OAAOmG,WAAW,CAAC3F,GAAG,CAAC4F,IAAI,CAAC;EAChC;EACA,OAAO,KAAK;AACd,CAAC;AAED;;;;AAAA5I,OAAA,CAAA2I,WAAA,GAAAA,WAAA;AAIM,MAAOE,cAAc;EAOdlC,IAAA;EACAc,UAAA;EAPX;;;EAGSqB,SAAS;EAClBrG,YACEqG,SAAc,EACLnC,IAAS,EACTc,UAAmB;IADnB,KAAAd,IAAI,GAAJA,IAAI;IACJ,KAAAc,UAAU,GAAVA,UAAU;IAEnB,IAAIkB,WAAW,CAACG,SAAS,CAAC,EAAE;MAC1B,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC5B,CAAC,MAAM;MACL,MAAM,IAAIlB,KAAK,CACb,6HAA6H,CAC9H;IACH;EACF;EACA;;;EAGA9E,MAAMA,CAAA;IACJ,OAAO;MACLgG,SAAS,EAAE,IAAI,CAACA,SAAS,CAAChG,MAAM,EAAE;MAClC6D,IAAI,EAAE,IAAI,CAACA,IAAI,CAAC7D,MAAM,EAAE;MACxB2E,UAAU,EAAE,IAAI,CAACA;KAClB;EACH;;AAGF;AAAAzH,OAAA,CAAA6I,cAAA,GAAAA,cAAA;AACO,MAAME,yCAAyC,GAAIL,IAAiB,IACzE,gCAAgCjK,KAAK,CAAC8E,aAAa,CAACmF,IAAI,CAAC,EAAE;AAAA1I,OAAA,CAAA+I,yCAAA,GAAAA,yCAAA;AAE7D,MAAMC,sCAAsC,GAAIN,IAAY,IAC1D,wCAAwCA,IAAI,IAAI;AAElD;;;;AAIM,MAAOO,WAAW;EAgBX7H,WAAA;EAfX;;;EAGSoB,IAAI,GAAG,aAAa;EAC7B;;;EAGS0G,kBAAkB;EAC3B;;;EAGSC,eAAe;EACxB1G,YACEyG,kBAAoD,EACpDC,eAA8C,EACrC/H,WAAA,GAA2B,EAAE;IAA7B,KAAAA,WAAW,GAAXA,WAAW;IAEpB;IACA,MAAMgI,IAAI,GAA8B,EAAE;IAC1C,KAAK,IAAIvJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqJ,kBAAkB,CAAC/C,MAAM,EAAEtG,CAAC,EAAE,EAAE;MAClD,MAAM6I,IAAI,GAAGQ,kBAAkB,CAACrJ,CAAC,CAAC,CAAC6I,IAAI;MACvC,IAAIpJ,MAAM,CAACI,SAAS,CAACC,cAAc,CAACC,IAAI,CAACwJ,IAAI,EAAEV,IAAI,CAAC,EAAE;QACpD,MAAM,IAAId,KAAK,CAACmB,yCAAyC,CAACL,IAAI,CAAC,CAAC;MAClE;MACAU,IAAI,CAACV,IAAI,CAAC,GAAG,IAAI;IACnB;IACA;IACA,MAAMW,UAAU,GAAG;MACjBC,MAAM,EAAE,KAAK;MACbzF,MAAM,EAAE;KACT;IACD,KAAK,IAAIhE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsJ,eAAe,CAAChD,MAAM,EAAEtG,CAAC,EAAE,EAAE;MAC/C,MAAMiJ,SAAS,GAAGS,gBAAgB,CAACJ,eAAe,CAACtJ,CAAC,CAAC,CAACiJ,SAAS,CAAC;MAChE,IAAI7D,eAAe,CAAC6D,SAAS,CAAC,EAAE;QAC9B,IAAIO,UAAU,CAACC,MAAM,EAAE;UACrB,MAAM,IAAI1B,KAAK,CAACoB,sCAAsC,CAAC,QAAQ,CAAC,CAAC;QACnE;QACAK,UAAU,CAACC,MAAM,GAAG,IAAI;MAC1B,CAAC,MAAM,IAAIzD,eAAe,CAACiD,SAAS,CAAC,EAAE;QACrC,IAAIO,UAAU,CAACxF,MAAM,EAAE;UACrB,MAAM,IAAI+D,KAAK,CAACoB,sCAAsC,CAAC,QAAQ,CAAC,CAAC;QACnE;QACAK,UAAU,CAACxF,MAAM,GAAG,IAAI;MAC1B;IACF;IAEA,IAAI,CAACqF,kBAAkB,GAAGM,sBAAsB,CAACN,kBAAkB,CAAC;IACpE,IAAI,CAACC,eAAe,GAAGM,mBAAmB,CAACN,eAAe,CAAC;EAC7D;EACA;;;EAGAzG,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOtE,MAAM,CAACuE,SAAS,CAACC,WAAW,CAAC,IAAI,EAAEF,OAAO,CAAC,EAAE,MAAM+G,iBAAiB,CAAC,IAAI,CAAC,CAAC;EACpF;EACA;;;EAGA5G,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACf0G,kBAAkB,EAAE,IAAI,CAACA,kBAAkB,CAACnG,GAAG,CAAE4G,EAAE,IAAKA,EAAE,CAAC7G,MAAM,EAAE,CAAC;MACpEqG,eAAe,EAAE,IAAI,CAACA,eAAe,CAACpG,GAAG,CAAE4G,EAAE,IAAKA,EAAE,CAAC7G,MAAM,EAAE,CAAC;MAC9D1B,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AACDpB,OAAA,CAAAiJ,WAAA,GAAAA,WAAA;AAED,MAAMS,iBAAiB,GAAI1G,GAAgB,IAAY;EACrD,MAAM4G,2BAA2B,GAAG5G,GAAG,CAACkG,kBAAkB,CAACnG,GAAG,CAAE4G,EAAE,IAChElG,MAAM,CAACkG,EAAE,CAACjB,IAAI,CAAC,IAAIiB,EAAE,CAACtC,UAAU,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,IAAI,GAAGsC,EAAE,CAAChD,IAAI,CAC9D,CAACH,IAAI,CAAC,IAAI,CAAC;EACZ,IAAIxD,GAAG,CAACmG,eAAe,CAAChD,MAAM,GAAG,CAAC,EAAE;IAClC,MAAM0D,wBAAwB,GAAG7G,GAAG,CAACmG,eAAe,CAACpG,GAAG,CAAE+G,EAAE,IAC1D,OAAOP,gBAAgB,CAACO,EAAE,CAAChB,SAAS,CAAC,MAAMgB,EAAE,CAACnD,IAAI,EAAE,CACrD,CAACH,IAAI,CAAC,IAAI,CAAC;IACZ,IAAIxD,GAAG,CAACkG,kBAAkB,CAAC/C,MAAM,GAAG,CAAC,EAAE;MACrC,OAAO,KAAKyD,2BAA2B,KAAKC,wBAAwB,IAAI;IAC1E,CAAC,MAAM;MACL,OAAO,KAAKA,wBAAwB,IAAI;IAC1C;EACF,CAAC,MAAM;IACL,IAAI7G,GAAG,CAACkG,kBAAkB,CAAC/C,MAAM,GAAG,CAAC,EAAE;MACrC,OAAO,KAAKyD,2BAA2B,IAAI;IAC7C,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF;AACF,CAAC;AAED;;;;AAIO,MAAMG,aAAa,GAAA/J,OAAA,CAAA+J,aAAA,gBAAqC7G,cAAc,CAAC,aAAa,CAAC;AAE5F,MAAM8G,OAAO,GAAIC,UAA8B,IAC7CzL,aAAa,CAAC0L,OAAO,CAACD,UAAU,EAAGjH,GAAQ,IAAI;EAC7C,QAAQA,GAAG,CAACR,IAAI;IACd,KAAK,OAAO;MACV,OAAOQ,GAAG,CAACmH,KAAK;IAClB;MACE,OAAO,CAACnH,GAAG,CAAC;EAChB;AACF,CAAC,CAAC;AAOJ,MAAMoH,WAAW,GAAIC,EAAyB,IAAaC,KAAK,CAAC1B,IAAI,CAAC,IAAI2B,GAAG,CAACF,EAAE,CAAC,CAAC,CAAC7D,IAAI,CAAC,KAAK,CAAC;AAE9F,MAAMgE,0BAA0B,GAAIP,UAA8B,IAAwB;EACxF,MAAMQ,MAAM,GAAkB,EAAE;EAChC,IAAIC,KAAK,GAAG,KAAK;EACjB,KAAK,MAAMC,CAAC,IAAIV,UAAU,EAAE;IAC1B,IAAIW,OAAO,CAACD,CAAC,CAAC,EAAE;MACd,MAAME,QAAQ,GAAGhI,WAAW,CAAC8H,CAAC,EAAE,KAAK,CAAC;MACtC,IAAItM,MAAM,CAACyM,MAAM,CAACD,QAAQ,CAAC,EAAE;QAC3BJ,MAAM,CAACM,IAAI,CAACF,QAAQ,CAACxE,KAAK,CAAC;QAC3B;MACF;IACF;IACAqE,KAAK,GAAG,IAAI;EACd;EACA,IAAID,MAAM,CAACtE,MAAM,GAAG,CAAC,EAAE;IACrB,OAAOiE,WAAW,CAACK,MAAM,CAACO,MAAM,CAACN,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;EACzD;AACF,CAAC;AAED;;;;AAIM,MAAOO,KAAK;EAsBad,KAAA;EAA8B/I,WAAA;EArB3D,OAAO2F,IAAI,GAAGA,CACZkD,UAA8B,EAC9B7I,WAAyB,KAClB;IACP,MAAM+I,KAAK,GAAGe,KAAK,CAAClB,OAAO,CAACC,UAAU,CAAC,CAAC;IACxC,IAAIkB,SAAS,CAAChB,KAAK,CAAC,EAAE;MACpB,MAAMiB,kBAAkB,GAAGZ,0BAA0B,CAACP,UAAU,CAAC;MACjE,IAAImB,kBAAkB,EAAE;QACtBhK,WAAW,GAAG;UAAE,CAACb,uBAAuB,GAAG6K,kBAAkB;UAAE,GAAGhK;QAAW,CAAE;MACjF;MACA,OAAO,IAAI6J,KAAK,CAACI,gBAAgB,CAAClB,KAAK,CAAC,EAAE/I,WAAW,CAAC;IACxD;IACA,IAAI5C,aAAa,CAACwI,uBAAuB,CAACmD,KAAK,CAAC,EAAE;MAChD,OAAOA,KAAK,CAAC,CAAC,CAAC;IACjB;IACA,OAAO5F,YAAY;EACrB,CAAC;EACD;;;EAGS/B,IAAI,GAAG,OAAO;EACvBC,YAA6B0H,KAAmB,EAAW/I,WAAA,GAA2B,EAAE;IAA3D,KAAA+I,KAAK,GAALA,KAAK;IAAyB,KAAA/I,WAAW,GAAXA,WAAW;EAAqB;EAC3F;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOtE,MAAM,CAACuE,SAAS,CACrBC,WAAW,CAAC,IAAI,EAAEF,OAAO,CAAC,EAC1B,MAAMyH,WAAW,CAAC,IAAI,CAACD,KAAK,CAACpH,GAAG,CAACU,MAAM,CAAC,CAAC,CAC1C;EACH;EACA;;;EAGAX,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACf2H,KAAK,EAAE,IAAI,CAACA,KAAK,CAACpH,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACF,MAAM,EAAE,CAAC;MAC5C1B,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAGF;AAAApB,OAAA,CAAAiL,KAAA,GAAAA,KAAA;AACO,MAAMK,UAAU,GAAGA,CAAOC,OAAmB,EAAEC,CAAc,KAAiBD,OAAO,CAACxI,GAAG,CAACyI,CAAC,CAAQ;AAE1G;AAAAxL,OAAA,CAAAsL,UAAA,GAAAA,UAAA;AACO,MAAMH,SAAS,GAAOM,EAAoB,IAAyCA,EAAE,CAACtF,MAAM,GAAG,CAAC;AAEvG;;;;AAAAnG,OAAA,CAAAmL,SAAA,GAAAA,SAAA;AAIO,MAAMP,OAAO,GAAA5K,OAAA,CAAA4K,OAAA,gBAA+B1H,cAAc,CAAC,OAAO,CAAC;AAE1E,MAAMwI,aAAa,gBAAG,IAAAzN,YAAA,CAAA0N,WAAW,gBAC/B1L,MAAM,CAACC,GAAG,CAAC,kCAAkC,CAAC,EAC9C,MAAM,IAAItB,OAAO,EAAe,CACjC;AAED;;;;AAIM,MAAOgN,OAAO;EAKGJ,CAAA;EAAuBpK,WAAA;EAJ5C;;;EAGSoB,IAAI,GAAG,SAAS;EACzBC,YAAqB+I,CAAY,EAAWpK,WAAA,GAA2B,EAAE;IAApD,KAAAoK,CAAC,GAADA,CAAC;IAAsB,KAAApK,WAAW,GAAXA,WAAW;IACrD,IAAI,CAACoK,CAAC,GAAG/M,KAAK,CAACoN,YAAY,CAACL,CAAC,CAAC;EAChC;EACA;;;EAGA9I,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOE,WAAW,CAAC,IAAI,EAAEF,OAAO,CAAC,CAACmJ,IAAI,CACpCzN,MAAM,CAAC0N,MAAM,CAAC,MACZ1N,MAAM,CAAC6L,OAAO,CACZ7L,MAAM,CAAC2N,aAAa,CAAC,IAAI,CAACR,CAAC,CAAC,EAAE,EAC7BxI,GAAG,IAAKH,WAAW,CAACG,GAAG,EAAEL,OAAO,CAAC,CACnC,CACF,EACDtE,MAAM,CAACuE,SAAS,CAAC,MAAM,oBAAoB,CAAC,CAC7C;EACH;EACA;;;EAGAE,MAAMA,CAAA;IACJ,MAAME,GAAG,GAAG,IAAI,CAACwI,CAAC,EAAE;IACpB,IAAIS,GAAG,GAAGP,aAAa,CAACxM,GAAG,CAAC8D,GAAG,CAAC;IAChC,IAAIiJ,GAAG,EAAE;MACP,OAAOA,GAAG;IACZ;IACAP,aAAa,CAAC5L,GAAG,CAACkD,GAAG,EAAE;MAAER,IAAI,EAAE,IAAI,CAACA;IAAI,CAAE,CAAC;IAC3CyJ,GAAG,GAAG;MACJzJ,IAAI,EAAE,IAAI,CAACA,IAAI;MACfQ,GAAG,EAAEA,GAAG,CAACF,MAAM,EAAE;MACjB1B,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;IACDsK,aAAa,CAAC5L,GAAG,CAACkD,GAAG,EAAEiJ,GAAG,CAAC;IAC3B,OAAOA,GAAG;EACZ;;AAGF;;;;AAAAjM,OAAA,CAAA4L,OAAA,GAAAA,OAAA;AAIO,MAAMM,SAAS,GAAAlM,OAAA,CAAAkM,SAAA,gBAAiChJ,cAAc,CAAC,SAAS,CAAC;AAEhF;;;;AAIM,MAAOiJ,UAAU;EAMVvD,IAAA;EACAwD,MAAA;EAKAhL,WAAA;EAXX;;;EAGSoB,IAAI,GAAG,YAAY;EAC5BC,YACWmG,IAAU,EACVwD,MAIqB,EACrBhL,WAAA,GAA2B,EAAE;IAN7B,KAAAwH,IAAI,GAAJA,IAAI;IACJ,KAAAwD,MAAM,GAANA,MAAM;IAKN,KAAAhL,WAAW,GAAXA,WAAW;EACnB;EACH;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOtE,MAAM,CAACuE,SAAS,CAACC,WAAW,CAAC,IAAI,EAAEF,OAAO,CAAC,EAAE,MAAM,qBAAqB,CAAC;EAClF;EACA;;;EAGAG,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfoG,IAAI,EAAE,IAAI,CAACA,IAAI,CAAC9F,MAAM,EAAE;MACxB1B,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAGF;;;;AAAApB,OAAA,CAAAmM,UAAA,GAAAA,UAAA;AAIO,MAAME,YAAY,GAAArM,OAAA,CAAAqM,YAAA,gBAAyCnJ,cAAc,CAAC,YAAY,CAAC;AAa9F;;;AAGO,MAAMoJ,kBAAkB,GAAAtM,OAAA,CAAAsM,kBAAA,GAAiB,EAAE;AAElD;;;;AAIM,MAAOC,cAAc;EAMd3D,IAAA;EACA4D,EAAA;EACAC,cAAA;EACArL,WAAA;EARX;;;EAGSoB,IAAI,GAAG,gBAAgB;EAChCC,YACWmG,IAAS,EACT4D,EAAO,EACPC,cAAkC,EAClCrL,WAAA,GAA2B,EAAE;IAH7B,KAAAwH,IAAI,GAAJA,IAAI;IACJ,KAAA4D,EAAE,GAAFA,EAAE;IACF,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAArL,WAAW,GAAXA,WAAW;EACnB;EACH;;;EAGAsB,QAAQA,CAACC,OAAA,GAAmB,KAAK;IAC/B,OAAOtE,MAAM,CAACuE,SAAS,CACrBC,WAAW,CAAC,IAAI,EAAEF,OAAO,CAAC,EAC1B,MAAM,IAAIc,MAAM,CAAC,IAAI,CAACmF,IAAI,CAAC,QAAQnF,MAAM,CAAC,IAAI,CAAC+I,EAAE,CAAC,GAAG,CACtD;EACH;EACA;;;EAGA1J,MAAMA,CAAA;IACJ,OAAO;MACLN,IAAI,EAAE,IAAI,CAACA,IAAI;MACfoG,IAAI,EAAE,IAAI,CAACA,IAAI,CAAC9F,MAAM,EAAE;MACxB0J,EAAE,EAAE,IAAI,CAACA,EAAE,CAAC1J,MAAM,EAAE;MACpB1B,WAAW,EAAE6B,iBAAiB,CAAC,IAAI,CAAC7B,WAAW;KAChD;EACH;;AAGF;;;;AAAApB,OAAA,CAAAuM,cAAA,GAAAA,cAAA;AAIO,MAAMG,WAAW,GAAA1M,OAAA,CAAA0M,WAAA,gBAAwCxJ,cAAc,CAAC,gBAAgB,CAAC;AAWhG;;;;AAIM,MAAOyJ,mBAAmB;EAMnBC,MAAA;EACAC,MAAA;EANX;;;EAGSrK,IAAI,GAAG,qBAAqB;EACrCC,YACWmK,MAAiG,EACjGC,MAAiG;IADjG,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,MAAM,GAANA,MAAM;EACd;;AACJ7M,OAAA,CAAA2M,mBAAA,GAAAA,mBAAA;AAED,MAAMG,yBAAyB,GACU3J,GAAM,IAC5CH,GAAuB,IAAsDA,GAAG,CAACR,IAAI,KAAKW,GAAG;AAEhG;;;;AAIO,MAAM4J,qBAAqB,GAAA/M,OAAA,CAAA+M,qBAAA,gBAA4DD,yBAAyB,CACrH,qBAAqB,CACtB;AAED;;;;AAIM,MAAOE,qBAAqB;EAChC;;;EAGSxK,IAAI,GAAG,uBAAuB;;AAGzC;;;;AAAAxC,OAAA,CAAAgN,qBAAA,GAAAA,qBAAA;AAIO,MAAMC,qBAAqB,GAAAjN,OAAA,CAAAiN,qBAAA,gBAA0B,IAAID,qBAAqB,EAAE;AAEvF;;;;AAIO,MAAME,uBAAuB,GAAAlN,OAAA,CAAAkN,uBAAA,gBAClCJ,yBAAyB,CACvB,uBAAuB,CACxB;AAEH;;;;;;;;;;;;;;AAcM,MAAOK,+BAA+B;EAE/BvE,IAAA;EACA4D,EAAA;EACAI,MAAA;EACAC,MAAA;EAJXpK,YACWmG,IAAiB,EACjB4D,EAAe,EACfI,MAAqD,EACrDC,MAAqD;IAHrD,KAAAjE,IAAI,GAAJA,IAAI;IACJ,KAAA4D,EAAE,GAAFA,EAAE;IACF,KAAAI,MAAM,GAANA,MAAM;IACN,KAAAC,MAAM,GAANA,MAAM;EACd;;AACJ7M,OAAA,CAAAmN,+BAAA,GAAAA,+BAAA;AAED,MAAMC,uDAAuD,GAAI1E,IAAiB,IAChF,+CAA+CjK,KAAK,CAAC8E,aAAa,CAACmF,IAAI,CAAC,EAAE;AAE5E;;;;AAIM,MAAO2E,yBAAyB;EAMzBC,gCAAA;EALX;;;EAGS9K,IAAI,GAAG,2BAA2B;EAC3CC,YACW6K,gCAER;IAFQ,KAAAA,gCAAgC,GAAhCA,gCAAgC;IAIzC;IACA,MAAMC,QAAQ,GAA8B,EAAE;IAC9C,MAAMC,MAAM,GAA8B,EAAE;IAC5C,KAAK,MAAMC,GAAG,IAAIH,gCAAgC,EAAE;MAClD,MAAM1E,IAAI,GAAG6E,GAAG,CAAC7E,IAAI;MACrB,IAAI2E,QAAQ,CAAC3E,IAAI,CAAC,EAAE;QAClB,MAAM,IAAIhB,KAAK,CAACwF,uDAAuD,CAACxE,IAAI,CAAC,CAAC;MAChF;MACA2E,QAAQ,CAAC3E,IAAI,CAAC,GAAG,IAAI;MACrB,MAAM4D,EAAE,GAAGiB,GAAG,CAACjB,EAAE;MACjB,IAAIgB,MAAM,CAAChB,EAAE,CAAC,EAAE;QACd,MAAM,IAAI5E,KAAK,CAACwF,uDAAuD,CAACZ,EAAE,CAAC,CAAC;MAC9E;MACAgB,MAAM,CAAChB,EAAE,CAAC,GAAG,IAAI;IACnB;EACF;;AAGF;;;;AAAAxM,OAAA,CAAAqN,yBAAA,GAAAA,yBAAA;AAIO,MAAMK,2BAA2B,GAAA1N,OAAA,CAAA0N,2BAAA,gBACtCZ,yBAAyB,CAAC,2BAA2B,CAAC;AAExD;AACA;AACA;AAEA;;;;;AAKO,MAAM1L,WAAW,GAAGA,CAAC4B,GAAQ,EAAE5B,WAAwB,KAAS;EACrE,MAAMuM,CAAC,GAAGrO,MAAM,CAACsO,yBAAyB,CAAC5K,GAAG,CAAC;EAC/C2K,CAAC,CAACvM,WAAW,CAACiF,KAAK,GAAG;IAAE,GAAGrD,GAAG,CAAC5B,WAAW;IAAE,GAAGA;EAAW,CAAE;EAC5D,OAAO9B,MAAM,CAACuO,MAAM,CAACvO,MAAM,CAACwO,cAAc,CAAC9K,GAAG,CAAC,EAAE2K,CAAC,CAAC;AACrD,CAAC;AAED;;;;;AAAA3N,OAAA,CAAAoB,WAAA,GAAAA,WAAA;AAKO,MAAM2M,KAAK,GAAI/K,GAAQ,IAAUiI,KAAK,CAAClE,IAAI,CAACiH,MAAM,CAAChL,GAAG,CAAC,CAAC;AAE/D;AAAAhD,OAAA,CAAA+N,KAAA,GAAAA,KAAA;AACO,MAAME,uBAAuB,GAAIjL,GAAoB,IAAY;EACtE,IAAIkL,OAAO,GAAG,IAAIlL,GAAG,CAAC6D,IAAI,EAAE;EAC5B,KAAK,MAAMK,IAAI,IAAIlE,GAAG,CAAC8D,KAAK,EAAE;IAC5B,IAAI7B,eAAe,CAACiC,IAAI,CAACP,IAAI,CAAC,EAAE;MAC9BuH,OAAO,IAAI,IAAI;IACjB,CAAC,MAAM,IAAI9I,eAAe,CAAC8B,IAAI,CAACP,IAAI,CAAC,EAAE;MACrCuH,OAAO,IAAI,qCAAqC;IAClD;IACAA,OAAO,IAAIhH,IAAI,CAAC5D,OAAO;EACzB;EACA4K,OAAO,IAAI,GAAG;EACd,OAAO,IAAIC,MAAM,CAACD,OAAO,CAAC;AAC5B,CAAC;AAED;;;AAAAlO,OAAA,CAAAiO,uBAAA,GAAAA,uBAAA;AAGO,MAAMG,qBAAqB,GAAIpL,GAAQ,IAA8B;EAC1E,QAAQA,GAAG,CAACR,IAAI;IACd,KAAK,aAAa;MAAE;QAClB,MAAM6L,UAAU,GAAGnM,4BAA4B,CAACc,GAAG,CAAC;QACpD,IAAI3E,MAAM,CAACyM,MAAM,CAACuD,UAAU,CAAC,EAAE;UAC7B,OAAOD,qBAAqB,CAACC,UAAU,CAAChI,KAAK,CAAC;QAChD;QACA;MACF;IACA,KAAK,aAAa;MAChB,OAAOrD,GAAG,CAACkG,kBAAkB,CAACoF,KAAK,EAAE;IACvC,KAAK,SAAS;MACZ,OAAOF,qBAAqB,CAACpL,GAAG,CAACwI,CAAC,EAAE,CAAC;EACzC;EACA,OAAO+C,eAAe,CAACvL,GAAG,CAAC,CAACD,GAAG,CAAE2F,IAAI,IAAK8F,2BAA2B,CAACxL,GAAG,EAAE0F,IAAI,CAAC,CAAC;AACnF,CAAC;AAED;AAAA1I,OAAA,CAAAoO,qBAAA,GAAAA,qBAAA;AACO,MAAMK,sBAAsB,GAAIzL,GAAQ,IAAS;EACtD,QAAQA,GAAG,CAACR,IAAI;IACd,KAAK,WAAW;MAAE;QAChB,IAAIkM,WAAW,GAAG,KAAK;QACvB,MAAMzC,GAAG,GAAe,EAAE;QAC1B,KAAK,MAAMtN,CAAC,IAAIqE,GAAG,CAACuE,QAAQ,EAAE;UAC5B,IAAI5I,CAAC,CAAC0I,UAAU,EAAE;YAChBqH,WAAW,GAAG,IAAI;UACpB;UACAzC,GAAG,CAAClB,IAAI,CAACpM,CAAC,CAACgI,IAAI,CAAC;QAClB;QACA,IAAI+H,WAAW,EAAE;UACfzC,GAAG,CAAClB,IAAI,CAAC9G,gBAAgB,CAAC;QAC5B;QACA,KAAK,MAAMtF,CAAC,IAAIqE,GAAG,CAACwE,IAAI,EAAE;UACxByE,GAAG,CAAClB,IAAI,CAACpM,CAAC,CAAC;QACb;QACA,OAAOsM,KAAK,CAAClE,IAAI,CAACkF,GAAG,CAAC;MACxB;IACA,KAAK,YAAY;MACf,OAAOwC,sBAAsB,CAACzL,GAAG,CAAC4F,IAAI,CAAC;IACzC,KAAK,OAAO;MACV,OAAOqC,KAAK,CAAClE,IAAI,CAAC/D,GAAG,CAACmH,KAAK,CAACpH,GAAG,CAAC0L,sBAAsB,CAAC,CAAC;IAC1D,KAAK,SAAS;MACZ,OAAOA,sBAAsB,CAACzL,GAAG,CAACwI,CAAC,EAAE,CAAC;EAC1C;EACA,MAAM,IAAI5D,KAAK,CAAC,+CAA+C5E,GAAG,GAAG,CAAC;AACxE,CAAC;AAED;AAAAhD,OAAA,CAAAyO,sBAAA,GAAAA,sBAAA;AACO,MAAMD,2BAA2B,GAAGA,CAACxL,GAAQ,EAAE0F,IAAiB,KAAuB;EAC5F,QAAQ1F,GAAG,CAACR,IAAI;IACd,KAAK,aAAa;MAAE;QAClB,MAAM6L,UAAU,GAAGnM,4BAA4B,CAACc,GAAG,CAAC;QACpD,IAAI3E,MAAM,CAACyM,MAAM,CAACuD,UAAU,CAAC,EAAE;UAC7B,OAAOG,2BAA2B,CAACH,UAAU,CAAChI,KAAK,EAAEqC,IAAI,CAAC;QAC5D;QACA;MACF;IACA,KAAK,aAAa;MAAE;QAClB,MAAMiG,GAAG,GAAGnQ,aAAa,CAACoQ,SAAS,CAAC5L,GAAG,CAACkG,kBAAkB,EAAGS,EAAE,IAAKA,EAAE,CAACjB,IAAI,KAAKA,IAAI,CAAC;QACrF,IAAIrK,MAAM,CAACyM,MAAM,CAAC6D,GAAG,CAAC,EAAE;UACtB,OAAOA,GAAG,CAACtI,KAAK;QAClB,CAAC,MAAM;UACL,IAAI9H,SAAS,CAACsQ,QAAQ,CAACnG,IAAI,CAAC,EAAE;YAC5B,KAAK,MAAMoB,EAAE,IAAI9G,GAAG,CAACmG,eAAe,EAAE;cACpC,MAAM2F,aAAa,GAAGvF,gBAAgB,CAACO,EAAE,CAAChB,SAAS,CAAC;cACpD,QAAQgG,aAAa,CAACtM,IAAI;gBACxB,KAAK,iBAAiB;kBAAE;oBACtB,MAAMuM,KAAK,GAAGd,uBAAuB,CAACa,aAAa,CAAC;oBACpD,IAAIC,KAAK,CAACC,IAAI,CAACtG,IAAI,CAAC,EAAE;sBACpB,OAAO,IAAID,iBAAiB,CAACC,IAAI,EAAEoB,EAAE,CAACnD,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;oBAC3D;oBACA;kBACF;gBACA,KAAK,eAAe;kBAClB,OAAO,IAAI8B,iBAAiB,CAACC,IAAI,EAAEoB,EAAE,CAACnD,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;cAC7D;YACF;UACF,CAAC,MAAM,IAAIpI,SAAS,CAAC0Q,QAAQ,CAACvG,IAAI,CAAC,EAAE;YACnC,KAAK,MAAMoB,EAAE,IAAI9G,GAAG,CAACmG,eAAe,EAAE;cACpC,MAAM2F,aAAa,GAAGvF,gBAAgB,CAACO,EAAE,CAAChB,SAAS,CAAC;cACpD,IAAIjD,eAAe,CAACiJ,aAAa,CAAC,EAAE;gBAClC,OAAO,IAAIrG,iBAAiB,CAACC,IAAI,EAAEoB,EAAE,CAACnD,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;cAC3D;YACF;UACF;QACF;QACA;MACF;IACA,KAAK,OAAO;MACV,OAAO,IAAI8B,iBAAiB,CAC1BC,IAAI,EACJuC,KAAK,CAAClE,IAAI,CAAC/D,GAAG,CAACmH,KAAK,CAACpH,GAAG,CAAEC,GAAG,IAAKwL,2BAA2B,CAACxL,GAAG,EAAE0F,IAAI,CAAC,CAAC/B,IAAI,CAAC,CAAC,EAC/E,KAAK,EACL,IAAI,CACL;IACH,KAAK,SAAS;MACZ,OAAO6H,2BAA2B,CAACxL,GAAG,CAACwI,CAAC,EAAE,EAAE9C,IAAI,CAAC;EACrD;EACA,OAAO,IAAID,iBAAiB,CAACC,IAAI,EAAEnE,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC;AAC/D,CAAC;AAAAvE,OAAA,CAAAwO,2BAAA,GAAAA,2BAAA;AAED,MAAMD,eAAe,GAAIvL,GAAQ,IAAwB;EACvD,QAAQA,GAAG,CAACR,IAAI;IACd,KAAK,aAAa;MAAE;QAClB,MAAM6L,UAAU,GAAGnM,4BAA4B,CAACc,GAAG,CAAC;QACpD,IAAI3E,MAAM,CAACyM,MAAM,CAACuD,UAAU,CAAC,EAAE;UAC7B,OAAOE,eAAe,CAACF,UAAU,CAAChI,KAAK,CAAC;QAC1C;QACA;MACF;IACA,KAAK,aAAa;MAChB,OAAOrD,GAAG,CAACkG,kBAAkB,CAACnG,GAAG,CAAE4G,EAAE,IAAKA,EAAE,CAACjB,IAAI,CAAC;IACpD,KAAK,SAAS;MACZ,OAAO6F,eAAe,CAACvL,GAAG,CAACwI,CAAC,EAAE,CAAC;IACjC,KAAK,OAAO;MACV,OAAOxI,GAAG,CAACmH,KAAK,CAACmE,KAAK,CAAC,CAAC,CAAC,CAACY,MAAM,CAC9B,CAACjD,GAAuB,EAAEjJ,GAAG,KAAKxE,aAAa,CAAC2Q,YAAY,CAAClD,GAAG,EAAEsC,eAAe,CAACvL,GAAG,CAAC,CAAC,EACvFuL,eAAe,CAACvL,GAAG,CAACmH,KAAK,CAAC,CAAC,CAAC,CAAC,CAC9B;EACL;EACA,OAAO,EAAE;AACX,CAAC;AAED;AACO,MAAMiF,MAAM,GAAGA,CAACjO,GAAQ,EAAEkF,KAAU,KAGvC;EACF,MAAM6C,kBAAkB,GAA6B,EAAE;EACvD,MAAMC,eAAe,GAA0B,EAAE;EACjD,MAAMkG,EAAE,GAAIlO,GAAQ,IAAU;IAC5B,QAAQA,GAAG,CAACqB,IAAI;MACd,KAAK,cAAc;QACjB;MACF,KAAK,eAAe;MACpB,KAAK,eAAe;MACpB,KAAK,iBAAiB;MACtB,KAAK,YAAY;QACf2G,eAAe,CAAC4B,IAAI,CAAC,IAAIlC,cAAc,CAAC1H,GAAG,EAAEkF,KAAK,EAAE,IAAI,CAAC,CAAC;QAC1D;MACF,KAAK,SAAS;QACZ,IAAI9H,SAAS,CAACsQ,QAAQ,CAAC1N,GAAG,CAACmC,OAAO,CAAC,IAAI/E,SAAS,CAAC+Q,QAAQ,CAACnO,GAAG,CAACmC,OAAO,CAAC,EAAE;UACtE4F,kBAAkB,CAAC6B,IAAI,CAAC,IAAItC,iBAAiB,CAACtH,GAAG,CAACmC,OAAO,EAAE+C,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QACjF,CAAC,MAAM;UACL,MAAM,IAAIuB,KAAK,CAAC,sCAAsCnJ,KAAK,CAAC8E,aAAa,CAACpC,GAAG,CAACmC,OAAO,CAAC,GAAG,CAAC;QAC5F;QACA;MACF,KAAK,cAAc;QACjB4F,kBAAkB,CAAC6B,IAAI,CAAC,IAAItC,iBAAiB,CAACtH,GAAG,CAAC0C,MAAM,EAAEwC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC9E;MACF,KAAK,OAAO;QACVlF,GAAG,CAACgJ,KAAK,CAACoF,OAAO,CAACF,EAAE,CAAC;QACrB;MACF;QACE,MAAM,IAAIzH,KAAK,CAAC,yCAAyCzG,GAAG,GAAG,CAAC;IACpE;EACF,CAAC;EACDkO,EAAE,CAAClO,GAAG,CAAC;EACP,OAAO;IAAE+H,kBAAkB;IAAEC;EAAe,CAAE;AAChD,CAAC;AAED;;;;;AAAAnJ,OAAA,CAAAoP,MAAA,GAAAA,MAAA;AAKO,MAAMI,IAAI,GAAGA,CAACxM,GAAQ,EAAEoG,IAAgC,KAC7D,IAAIH,WAAW,CAACG,IAAI,CAACrG,GAAG,CAAE5B,GAAG,IAAKqN,2BAA2B,CAACxL,GAAG,EAAE7B,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AAE/E;;;;;AAAAnB,OAAA,CAAAwP,IAAA,GAAAA,IAAA;AAKO,MAAMC,IAAI,GAAGA,CAACzM,GAAQ,EAAEoG,IAAgC,KAC7DoG,IAAI,CAACxM,GAAG,EAAEuL,eAAe,CAACvL,GAAG,CAAC,CAACoJ,MAAM,CAAE1D,IAAI,IAAK,CAACU,IAAI,CAACd,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;AAExE;AAAA1I,OAAA,CAAAyP,IAAA,GAAAA,IAAA;AACO,MAAMC,WAAW,GAAI1M,GAAQ,IAAUiI,KAAK,CAAClE,IAAI,CAAC,CAAC/D,GAAG,EAAEiB,gBAAgB,CAAC,CAAC;AAEjF;;;;;AAAAjE,OAAA,CAAA0P,WAAA,GAAAA,WAAA;AAKO,MAAMC,OAAO,GAAGA,CAAC3M,GAAQ,EAAE4M,OAAkC,KAAS;EAC3E,MAAMC,KAAK,GAAGD,OAAO,EAAEC,KAAK,KAAK,IAAI;EACrC,QAAQ7M,GAAG,CAACR,IAAI;IACd,KAAK,WAAW;MACd,OAAO,IAAI8E,SAAS,CAClBtE,GAAG,CAACuE,QAAQ,CAACxE,GAAG,CAAEpE,CAAC,IAAK,IAAIyI,OAAO,CAACyI,KAAK,GAAGlR,CAAC,CAACgI,IAAI,GAAG+I,WAAW,CAAC/Q,CAAC,CAACgI,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,EAChFnI,aAAa,CAACsR,KAAK,CAAC9M,GAAG,CAACwE,IAAI,EAAE;QAC5BS,OAAO,EAAEA,CAAA,KAAMjF,GAAG,CAACwE,IAAI;QACvBU,UAAU,EAAGV,IAAI,IAAK,CAACyD,KAAK,CAAClE,IAAI,CAAC,CAAC,GAAGS,IAAI,EAAEvD,gBAAgB,CAAC,CAAC;OAC/D,CAAC,EACFjB,GAAG,CAACyE,UAAU,CACf;IACH,KAAK,aAAa;MAChB,OAAO,IAAIwB,WAAW,CACpBjG,GAAG,CAACkG,kBAAkB,CAACnG,GAAG,CAAE4G,EAAE,IAC5B,IAAIlB,iBAAiB,CAACkB,EAAE,CAACjB,IAAI,EAAEmH,KAAK,GAAGlG,EAAE,CAAChD,IAAI,GAAG+I,WAAW,CAAC/F,EAAE,CAAChD,IAAI,CAAC,EAAE,IAAI,EAAEgD,EAAE,CAAClC,UAAU,EAAEkC,EAAE,CAACvI,WAAW,CAAC,CAC5G,EACD4B,GAAG,CAACmG,eAAe,CAACpG,GAAG,CAAE+G,EAAE,IAAK,IAAIjB,cAAc,CAACiB,EAAE,CAAChB,SAAS,EAAE4G,WAAW,CAAC5F,EAAE,CAACnD,IAAI,CAAC,EAAEmD,EAAE,CAACrC,UAAU,CAAC,CAAC,CACvG;IACH,KAAK,OAAO;MACV,OAAOwD,KAAK,CAAClE,IAAI,CAAC/D,GAAG,CAACmH,KAAK,CAACpH,GAAG,CAAEgN,MAAM,IAAKJ,OAAO,CAACI,MAAM,EAAEH,OAAO,CAAC,CAAC,CAAC;IACxE,KAAK,SAAS;MACZ,OAAO,IAAIhE,OAAO,CAAC,MAAM+D,OAAO,CAAC3M,GAAG,CAACwI,CAAC,EAAE,EAAEoE,OAAO,CAAC,CAAC;IACrD,KAAK,aAAa;MAChB,MAAM,IAAIhI,KAAK,CAAC,sCAAsC,CAAC;IACzD,KAAK,YAAY;MACf,MAAM,IAAIA,KAAK,CAAC,qCAAqC,CAAC;IACxD,KAAK,gBAAgB;MACnB,MAAM,IAAIA,KAAK,CAAC,yCAAyC,CAAC;EAC9D;EACA,OAAO5E,GAAG;AACZ,CAAC;AAED;;;;;AAAAhD,OAAA,CAAA2P,OAAA,GAAAA,OAAA;AAKO,MAAMK,QAAQ,GAAIhN,GAAQ,IAAS;EACxC,QAAQA,GAAG,CAACR,IAAI;IACd,KAAK,WAAW;MACd,OAAO,IAAI8E,SAAS,CAClBtE,GAAG,CAACuE,QAAQ,CAACxE,GAAG,CAAEpE,CAAC,IAAK,IAAIyI,OAAO,CAACzI,CAAC,CAACgI,IAAI,EAAE,KAAK,CAAC,CAAC,EACnDnI,aAAa,CAACsR,KAAK,CAAC9M,GAAG,CAACwE,IAAI,EAAE;QAC5BS,OAAO,EAAEA,CAAA,KAAMjF,GAAG,CAACwE,IAAI;QACvBU,UAAU,EAAGV,IAAI,IAAI;UACnB,MAAMyI,KAAK,GAAGhF,KAAK,CAAClE,IAAI,CAAC,CAAC,GAAGS,IAAI,CAAC,CAAC;UACnC,OAAOhJ,aAAa,CAACuE,GAAG,CAACyE,IAAI,EAAE,MAAMyI,KAAK,CAAC;QAC7C;OACD,CAAC,EACFjN,GAAG,CAACyE,UAAU,CACf;IACH,KAAK,aAAa;MAChB,OAAO,IAAIwB,WAAW,CACpBjG,GAAG,CAACkG,kBAAkB,CAACnG,GAAG,CAAEyI,CAAC,IAAK,IAAI/C,iBAAiB,CAAC+C,CAAC,CAAC9C,IAAI,EAAE8C,CAAC,CAAC7E,IAAI,EAAE,KAAK,EAAE6E,CAAC,CAAC/D,UAAU,EAAE+D,CAAC,CAACpK,WAAW,CAAC,CAAC,EAC5G4B,GAAG,CAACmG,eAAe,CACpB;IACH,KAAK,OAAO;MACV,OAAO8B,KAAK,CAAClE,IAAI,CAAC/D,GAAG,CAACmH,KAAK,CAACpH,GAAG,CAAEgN,MAAM,IAAKC,QAAQ,CAACD,MAAM,CAAC,CAAC,CAAC;IAChE,KAAK,SAAS;MACZ,OAAO,IAAInE,OAAO,CAAC,MAAMoE,QAAQ,CAAChN,GAAG,CAACwI,CAAC,EAAE,CAAC,CAAC;IAC7C,KAAK,aAAa;MAChB,MAAM,IAAI5D,KAAK,CAAC,uCAAuC,CAAC;IAC1D,KAAK,YAAY;MACf,MAAM,IAAIA,KAAK,CAAC,sCAAsC,CAAC;IACzD,KAAK,gBAAgB;MACnB,MAAM,IAAIA,KAAK,CAAC,0CAA0C,CAAC;EAC/D;EACA,OAAO5E,GAAG;AACZ,CAAC;AAED;;;;;;;AAAAhD,OAAA,CAAAgQ,QAAA,GAAAA,QAAA;AAOO,MAAME,OAAO,GAAIlN,GAAQ,IAAS;EACvC,QAAQA,GAAG,CAACR,IAAI;IACd,KAAK,WAAW;MACd,OAAO,IAAI8E,SAAS,CAACtE,GAAG,CAACuE,QAAQ,EAAEvE,GAAG,CAACwE,IAAI,EAAE,KAAK,EAAExE,GAAG,CAAC5B,WAAW,CAAC;IACtE,KAAK,aAAa;MAChB,OAAO,IAAI6H,WAAW,CACpBjG,GAAG,CAACkG,kBAAkB,CAACnG,GAAG,CAAE4G,EAAE,IAC5B,IAAIlB,iBAAiB,CAACkB,EAAE,CAACjB,IAAI,EAAEiB,EAAE,CAAChD,IAAI,EAAEgD,EAAE,CAACtC,UAAU,EAAE,KAAK,EAAEsC,EAAE,CAACvI,WAAW,CAAC,CAC9E,EACD4B,GAAG,CAACmG,eAAe,CAACpG,GAAG,CAAE+G,EAAE,IAAK,IAAIjB,cAAc,CAACiB,EAAE,CAAChB,SAAS,EAAEgB,EAAE,CAACnD,IAAI,EAAE,KAAK,CAAC,CAAC,EACjF3D,GAAG,CAAC5B,WAAW,CAChB;IACH,KAAK,OAAO;MACV,OAAO6J,KAAK,CAAClE,IAAI,CAAC/D,GAAG,CAACmH,KAAK,CAACpH,GAAG,CAACmN,OAAO,CAAC,EAAElN,GAAG,CAAC5B,WAAW,CAAC;IAC5D,KAAK,SAAS;MACZ,OAAO,IAAIwK,OAAO,CAAC,MAAMsE,OAAO,CAAClN,GAAG,CAACwI,CAAC,EAAE,CAAC,EAAExI,GAAG,CAAC5B,WAAW,CAAC;IAC7D,KAAK,YAAY;MACf,OAAO,IAAI+K,UAAU,CAAC+D,OAAO,CAAClN,GAAG,CAAC4F,IAAI,CAAC,EAAE5F,GAAG,CAACoJ,MAAM,EAAEpJ,GAAG,CAAC5B,WAAW,CAAC;IACvE,KAAK,gBAAgB;MACnB,OAAO,IAAImL,cAAc,CACvB2D,OAAO,CAAClN,GAAG,CAAC4F,IAAI,CAAC,EACjBsH,OAAO,CAAClN,GAAG,CAACwJ,EAAE,CAAC,EACfxJ,GAAG,CAACyJ,cAAc,EAClBzJ,GAAG,CAAC5B,WAAW,CAChB;EACL;EACA,OAAO4B,GAAG;AACZ,CAAC;AAkBD;;;AAAAhD,OAAA,CAAAkQ,OAAA,GAAAA,OAAA;AAGO,MAAMC,WAAW,GAAOL,KAAe,IAAiB;EAC7D,MAAMM,OAAO,GAAIpN,GAAQ,IAAQ8M,KAAK,CAAC9M,GAAG,CAACR,IAAI,CAAC,CAACQ,GAAU,EAAEoN,OAAO,CAAC;EACrE,OAAOA,OAAO;AAChB,CAAC;AAED;AAAApQ,OAAA,CAAAmQ,WAAA,GAAAA,WAAA;AACO,MAAME,uBAAuB,GAAI1G,EAAoC,IAC1EA,EAAE,CAAC5G,GAAG,CAAEuN,CAAC,IAAK,IAAI7H,iBAAiB,CAAC6H,CAAC,CAAC5H,IAAI,EAAE6H,OAAO,CAACD,CAAC,CAAC3J,IAAI,CAAC,EAAE2J,CAAC,CAACjJ,UAAU,EAAEiJ,CAAC,CAAC7I,UAAU,EAAE6I,CAAC,CAAClP,WAAW,CAAC,CAAC;AAE1G;AAAApB,OAAA,CAAAqQ,uBAAA,GAAAA,uBAAA;AACO,MAAMG,oBAAoB,GAAI7G,EAAiC,IACpEA,EAAE,CAAC5G,GAAG,CAAE+G,EAAE,IAAK,IAAIjB,cAAc,CAACiB,EAAE,CAAChB,SAAS,EAAEyH,OAAO,CAACzG,EAAE,CAACnD,IAAI,CAAC,EAAEmD,EAAE,CAACrC,UAAU,CAAC,CAAC;AAEnF;;;AAAAzH,OAAA,CAAAwQ,oBAAA,GAAAA,oBAAA;AAGO,MAAMD,OAAO,GAAIvN,GAAQ,IAAS;EACvC,QAAQA,GAAG,CAACR,IAAI;IACd,KAAK,aAAa;MAAE;QAClB,MAAMH,cAAc,GAAGoO,SAAS,CAACzN,GAAG,CAACX,cAAc,EAAEkO,OAAO,CAAC;QAC7D,OAAOlO,cAAc,KAAKW,GAAG,CAACX,cAAc,GAC1CW,GAAG,GACH,IAAIZ,WAAW,CAACC,cAAc,EAAEW,GAAG,CAACV,aAAa,EAAEU,GAAG,CAACT,aAAa,EAAES,GAAG,CAAC5B,WAAW,CAAC;MAC1F;IACA,KAAK,WAAW;MAAE;QAChB,MAAMmG,QAAQ,GAAGkJ,SAAS,CAACzN,GAAG,CAACuE,QAAQ,EAAG5I,CAAC,IAAI;UAC7C,MAAMgI,IAAI,GAAG4J,OAAO,CAAC5R,CAAC,CAACgI,IAAI,CAAC;UAC5B,OAAOA,IAAI,KAAKhI,CAAC,CAACgI,IAAI,GAAGhI,CAAC,GAAG,IAAIyI,OAAO,CAACT,IAAI,EAAEhI,CAAC,CAAC0I,UAAU,CAAC;QAC9D,CAAC,CAAC;QACF,MAAMG,IAAI,GAAGiJ,SAAS,CAACzN,GAAG,CAACwE,IAAI,EAAE+I,OAAO,CAAC;QACzC,OAAOhJ,QAAQ,KAAKvE,GAAG,CAACuE,QAAQ,IAAIC,IAAI,KAAKxE,GAAG,CAACwE,IAAI,GACnDxE,GAAG,GACH,IAAIsE,SAAS,CAACC,QAAQ,EAAEC,IAAI,EAAExE,GAAG,CAACyE,UAAU,EAAEzE,GAAG,CAAC5B,WAAW,CAAC;MAClE;IACA,KAAK,aAAa;MAAE;QAClB,MAAM8H,kBAAkB,GAAGuH,SAAS,CAACzN,GAAG,CAACkG,kBAAkB,EAAGoH,CAAC,IAAI;UACjE,MAAM3J,IAAI,GAAG4J,OAAO,CAACD,CAAC,CAAC3J,IAAI,CAAC;UAC5B,OAAOA,IAAI,KAAK2J,CAAC,CAAC3J,IAAI,GAAG2J,CAAC,GAAG,IAAI7H,iBAAiB,CAAC6H,CAAC,CAAC5H,IAAI,EAAE/B,IAAI,EAAE2J,CAAC,CAACjJ,UAAU,EAAEiJ,CAAC,CAAC7I,UAAU,CAAC;QAC9F,CAAC,CAAC;QACF,MAAM0B,eAAe,GAAGsH,SAAS,CAACzN,GAAG,CAACmG,eAAe,EAAGW,EAAE,IAAI;UAC5D,MAAMnD,IAAI,GAAG4J,OAAO,CAACzG,EAAE,CAACnD,IAAI,CAAC;UAC7B,OAAOA,IAAI,KAAKmD,EAAE,CAACnD,IAAI,GAAGmD,EAAE,GAAG,IAAIjB,cAAc,CAACiB,EAAE,CAAChB,SAAS,EAAEnC,IAAI,EAAEmD,EAAE,CAACrC,UAAU,CAAC;QACtF,CAAC,CAAC;QACF,OAAOyB,kBAAkB,KAAKlG,GAAG,CAACkG,kBAAkB,IAAIC,eAAe,KAAKnG,GAAG,CAACmG,eAAe,GAC7FnG,GAAG,GACH,IAAIiG,WAAW,CAACC,kBAAkB,EAAEC,eAAe,EAAEnG,GAAG,CAAC5B,WAAW,CAAC;MACzE;IACA,KAAK,OAAO;MAAE;QACZ,MAAM+I,KAAK,GAAGsG,SAAS,CAACzN,GAAG,CAACmH,KAAK,EAAEoG,OAAO,CAAC;QAC3C,OAAOpG,KAAK,KAAKnH,GAAG,CAACmH,KAAK,GAAGnH,GAAG,GAAGiI,KAAK,CAAClE,IAAI,CAAC/D,GAAG,CAACmH,KAAK,CAACpH,GAAG,CAACwN,OAAO,CAAC,EAAEvN,GAAG,CAAC5B,WAAW,CAAC;MACxF;IACA,KAAK,SAAS;MACZ,OAAO,IAAIwK,OAAO,CAAC,MAAM2E,OAAO,CAACvN,GAAG,CAACwI,CAAC,EAAE,CAAC,EAAExI,GAAG,CAAC5B,WAAW,CAAC;IAC7D,KAAK,YAAY;MAAE;QACjB,MAAMwH,IAAI,GAAG2H,OAAO,CAACvN,GAAG,CAAC4F,IAAI,CAAC;QAC9B,OAAOA,IAAI,KAAK5F,GAAG,CAAC4F,IAAI,GACtB5F,GAAG,GACH,IAAImJ,UAAU,CAACvD,IAAI,EAAE5F,GAAG,CAACoJ,MAAM,EAAEpJ,GAAG,CAAC5B,WAAW,CAAC;MACrD;IACA,KAAK,gBAAgB;MACnB,OAAOmP,OAAO,CAACvN,GAAG,CAACwJ,EAAE,CAAC;EAC1B;EACA,OAAOxJ,GAAG;AACZ,CAAC;AAED;AAAAhD,OAAA,CAAAuQ,OAAA,GAAAA,OAAA;AACO,MAAMG,iBAAiB,GAAIxP,SAAoB,IACpD7C,MAAM,CAAC0N,MAAM,CAAC5J,2BAA2B,CAACjB,SAAS,CAAC,EAAE,MAAMQ,uBAAuB,CAACR,SAAS,CAAC,CAAC;AAAAlB,OAAA,CAAA0Q,iBAAA,GAAAA,iBAAA;AAEjG,MAAMC,8BAA8B,GAAIzP,SAAoB,IAA6B;EACvF,OAAO7C,MAAM,CAACyR,KAAK,CAACY,iBAAiB,CAACxP,SAAS,CAAC,EAAE;IAChD0P,MAAM,EAAEA,CAAA,KAAMC,SAAS;IACvBC,MAAM,EAAGC,UAAU,KAAM;MAAE,CAAChQ,0BAA0B,GAAGgQ;IAAU,CAAE;GACtE,CAAC;AACJ,CAAC;AAOD,SAASN,SAASA,CAAIhF,EAAoB,EAAED,CAAc;EACxD,IAAIwF,OAAO,GAAG,KAAK;EACnB,MAAM/E,GAAG,GAAa,EAAE;EACxB,KAAK,MAAM5M,CAAC,IAAIoM,EAAE,EAAE;IAClB,MAAMwF,EAAE,GAAGzF,CAAC,CAACnM,CAAC,CAAC;IACf,IAAI4R,EAAE,KAAK5R,CAAC,EAAE;MACZ2R,OAAO,GAAG,IAAI;IAChB;IACA/E,GAAG,CAAClB,IAAI,CAACS,CAAC,CAACnM,CAAC,CAAC,CAAC;EAChB;EACA,OAAO2R,OAAO,GAAG/E,GAAG,GAAGR,EAAE;AAC3B;AAEA;;;AAGO,MAAMyF,UAAU,GAAIlO,GAAQ,IAAS;EAC1C,QAAQA,GAAG,CAACR,IAAI;IACd,KAAK,aAAa;MAAE;QAClB,MAAMH,cAAc,GAAGoO,SAAS,CAACzN,GAAG,CAACX,cAAc,EAAE6O,UAAU,CAAC;QAChE,OAAO7O,cAAc,KAAKW,GAAG,CAACX,cAAc,GAC1CW,GAAG,GACH,IAAIZ,WAAW,CAACC,cAAc,EAAEW,GAAG,CAACV,aAAa,EAAEU,GAAG,CAACT,aAAa,EAAES,GAAG,CAAC5B,WAAW,CAAC;MAC1F;IACA,KAAK,WAAW;MAAE;QAChB,MAAMmG,QAAQ,GAAGkJ,SAAS,CAACzN,GAAG,CAACuE,QAAQ,EAAG5I,CAAC,IAAI;UAC7C,MAAMgI,IAAI,GAAGuK,UAAU,CAACvS,CAAC,CAACgI,IAAI,CAAC;UAC/B,OAAOA,IAAI,KAAKhI,CAAC,CAACgI,IAAI,GAAGhI,CAAC,GAAG,IAAIyI,OAAO,CAACT,IAAI,EAAEhI,CAAC,CAAC0I,UAAU,CAAC;QAC9D,CAAC,CAAC;QACF,MAAMG,IAAI,GAAGiJ,SAAS,CAACzN,GAAG,CAACwE,IAAI,EAAE0J,UAAU,CAAC;QAC5C,OAAO3J,QAAQ,KAAKvE,GAAG,CAACuE,QAAQ,IAAIC,IAAI,KAAKxE,GAAG,CAACwE,IAAI,GACnDxE,GAAG,GACH,IAAIsE,SAAS,CAACC,QAAQ,EAAEC,IAAI,EAAExE,GAAG,CAACyE,UAAU,EAAEkJ,8BAA8B,CAAC3N,GAAG,CAAC,CAAC;MACtF;IACA,KAAK,aAAa;MAAE;QAClB,MAAMkG,kBAAkB,GAAGuH,SAAS,CAACzN,GAAG,CAACkG,kBAAkB,EAAGoH,CAAC,IAAI;UACjE,MAAM3J,IAAI,GAAGuK,UAAU,CAACZ,CAAC,CAAC3J,IAAI,CAAC;UAC/B,OAAOA,IAAI,KAAK2J,CAAC,CAAC3J,IAAI,GAAG2J,CAAC,GAAG,IAAI7H,iBAAiB,CAAC6H,CAAC,CAAC5H,IAAI,EAAE/B,IAAI,EAAE2J,CAAC,CAACjJ,UAAU,EAAEiJ,CAAC,CAAC7I,UAAU,CAAC;QAC9F,CAAC,CAAC;QACF,MAAM0B,eAAe,GAAGsH,SAAS,CAACzN,GAAG,CAACmG,eAAe,EAAGW,EAAE,IAAI;UAC5D,MAAMnD,IAAI,GAAGuK,UAAU,CAACpH,EAAE,CAACnD,IAAI,CAAC;UAChC,OAAOA,IAAI,KAAKmD,EAAE,CAACnD,IAAI,GAAGmD,EAAE,GAAG,IAAIjB,cAAc,CAACiB,EAAE,CAAChB,SAAS,EAAEnC,IAAI,EAAEmD,EAAE,CAACrC,UAAU,CAAC;QACtF,CAAC,CAAC;QACF,OAAOyB,kBAAkB,KAAKlG,GAAG,CAACkG,kBAAkB,IAAIC,eAAe,KAAKnG,GAAG,CAACmG,eAAe,GAC7FnG,GAAG,GACH,IAAIiG,WAAW,CAACC,kBAAkB,EAAEC,eAAe,EAAEwH,8BAA8B,CAAC3N,GAAG,CAAC,CAAC;MAC7F;IACA,KAAK,OAAO;MAAE;QACZ,MAAMmH,KAAK,GAAGsG,SAAS,CAACzN,GAAG,CAACmH,KAAK,EAAE+G,UAAU,CAAC;QAC9C,OAAO/G,KAAK,KAAKnH,GAAG,CAACmH,KAAK,GAAGnH,GAAG,GAAGiI,KAAK,CAAClE,IAAI,CAAC/D,GAAG,CAACmH,KAAK,CAACpH,GAAG,CAACmO,UAAU,CAAC,EAAEP,8BAA8B,CAAC3N,GAAG,CAAC,CAAC;MAC/G;IACA,KAAK,SAAS;MACZ,OAAO,IAAI4I,OAAO,CAAC,MAAMsF,UAAU,CAAClO,GAAG,CAACwI,CAAC,EAAE,CAAC,EAAEmF,8BAA8B,CAAC3N,GAAG,CAAC,CAAC;IACpF,KAAK,YAAY;IACjB,KAAK,gBAAgB;MACnB,OAAOkO,UAAU,CAAClO,GAAG,CAAC4F,IAAI,CAAC;EAC/B;EACA,OAAO5F,GAAG;AACZ,CAAC;AAAAhD,OAAA,CAAAkR,UAAA,GAAAA,UAAA;AAED,MAAMjO,iBAAiB,GAAI7B,WAAwB,IAAY;EAC7D,MAAM6K,GAAG,GAA4B,EAAE;EACvC,KAAK,MAAMkF,CAAC,IAAI7R,MAAM,CAAC8R,qBAAqB,CAAChQ,WAAW,CAAC,EAAE;IACzD6K,GAAG,CAACxI,MAAM,CAAC0N,CAAC,CAAC,CAAC,GAAG/P,WAAW,CAAC+P,CAAC,CAAC;EACjC;EACA,OAAOlF,GAAG;AACZ,CAAC;AAED;;;AAGO,MAAMoF,IAAI,GAAIrO,GAAQ,IAAa9E,IAAI,CAACoL,MAAM,CAAChD,IAAI,CAACC,SAAS,CAACvD,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAEnF;AAAAhD,OAAA,CAAAqR,IAAA,GAAAA,IAAA;AACO,MAAMC,cAAc,GAAItO,GAAQ,IAAY;EACjD,QAAQA,GAAG,CAACR,IAAI;IACd,KAAK,cAAc;MACjB,OAAO,CAAC;IACV,KAAK,SAAS;IACd,KAAK,kBAAkB;IACvB,KAAK,aAAa;IAClB,KAAK,cAAc;MACjB,OAAO,CAAC;IACV,KAAK,gBAAgB;MACnB,OAAO,CAAC;IACV,KAAK,eAAe;IACpB,KAAK,eAAe;IACpB,KAAK,eAAe;IACpB,KAAK,eAAe;MAClB,OAAO,CAAC;IACV,KAAK,eAAe;MAClB,OAAO,CAAC;IACV,KAAK,gBAAgB;IACrB,KAAK,YAAY;MACf,OAAO,CAAC;IACV;MACE,OAAO,CAAC;EACZ;AACF,CAAC;AAAAxC,OAAA,CAAAsR,cAAA,GAAAA,cAAA;AAED,MAAM9H,sBAAsB,gBAAGhL,aAAa,CAAC+S,IAAI,eAC/CjT,KAAK,CAACkT,QAAQ,CAACpT,MAAM,CAACE,KAAK,EAAGqL,EAAqB,IAAK2H,cAAc,CAAC3H,EAAE,CAAChD,IAAI,CAAC,CAAC,CACjF;AAED,MAAM8C,mBAAmB,gBAAGjL,aAAa,CAAC+S,IAAI,eAC5CjT,KAAK,CAACkT,QAAQ,CAACpT,MAAM,CAACE,KAAK,EAAGwL,EAAkB,IAAI;EAClD,QAAQP,gBAAgB,CAACO,EAAE,CAAChB,SAAS,CAAC,CAACtG,IAAI;IACzC,KAAK,eAAe;MAClB,OAAO,CAAC;IACV,KAAK,eAAe;MAClB,OAAO,CAAC;IACV,KAAK,iBAAiB;MACpB,OAAO,CAAC;EACZ;AACF,CAAC,CAAC,CACH;AAID,MAAMiP,WAAW,gBAAwBnT,KAAK,CAACoT,KAAK,CAElDtT,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACE,KAAK,CAAC;AAE3C,MAAMqT,SAAS,gBAAGrT,KAAK,CAACsT,GAAG,CAASH,WAAW,CAAC;AAEhD,MAAMI,WAAW,GAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAErC,MAAMC,YAAY,GAAIC,OAA8B,IAAaA,OAAO,CAAC7C,MAAM,CAACyC,SAAS,EAAEE,WAAW,CAAC;AAEvG;AACO,MAAMG,SAAS,GAAIhP,GAAQ,IAAY;EAC5C,QAAQA,GAAG,CAACR,IAAI;IACd,KAAK,WAAW;MAAE;QAChB,OAAO,CAAC,CAAC,EAAEQ,GAAG,CAACuE,QAAQ,CAACpB,MAAM,EAAEnD,GAAG,CAACwE,IAAI,CAACrB,MAAM,CAAC;MAClD;IACA,KAAK,aAAa;MAAE;QAClB,MAAM8L,CAAC,GAAGjP,GAAG,CAACkG,kBAAkB,CAAC/C,MAAM;QACvC,MAAM+L,CAAC,GAAGlP,GAAG,CAACmG,eAAe,CAAChD,MAAM;QACpC,OAAO8L,CAAC,GAAGC,CAAC,KAAK,CAAC,GAChB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GACV,CAAC,CAAC,EAAED,CAAC,EAAEC,CAAC,CAAC;MACb;IACA,KAAK,aAAa;MAAE;QAClB,MAAM7D,UAAU,GAAGnM,4BAA4B,CAACc,GAAG,CAAC;QACpD,IAAI3E,MAAM,CAACyM,MAAM,CAACuD,UAAU,CAAC,EAAE;UAC7B,MAAM,CAACjI,CAAC,EAAE6L,CAAC,EAAEC,CAAC,CAAC,GAAGF,SAAS,CAAC3D,UAAU,CAAChI,KAAK,CAAC;UAC7C,OAAO,CAAC,CAAC,EAAE4L,CAAC,EAAEC,CAAC,CAAC;QAClB;QACA,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAClB;IACA,KAAK,SAAS;MACZ,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClB,KAAK,OAAO;MACV,OAAOJ,YAAY,CAAC9O,GAAG,CAACmH,KAAK,CAACpH,GAAG,CAACiP,SAAS,CAAC,CAAC;IAC/C,KAAK,YAAY;MAAE;QACjB,MAAM,CAACG,CAAC,EAAEF,CAAC,EAAEC,CAAC,CAAC,GAAGF,SAAS,CAAChP,GAAG,CAAC4F,IAAI,CAAC;QACrC,OAAO,CAACuJ,CAAC,GAAG,CAAC,EAAEF,CAAC,EAAEC,CAAC,CAAC;MACtB;IACA,KAAK,gBAAgB;MACnB,OAAOF,SAAS,CAAChP,GAAG,CAAC4F,IAAI,CAAC;IAC5B,KAAK,eAAe;MAClB,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnB,KAAK,gBAAgB;IACrB,KAAK,YAAY;MACf,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnB;MACE,OAAOiJ,WAAW;EACtB;AACF,CAAC;AAAA7R,OAAA,CAAAgS,SAAA,GAAAA,SAAA;AAED,MAAM3G,gBAAgB,gBAAyC7M,aAAa,CAAC+S,IAAI,eAC/EjT,KAAK,CAAC8T,OAAO,eAAC9T,KAAK,CAACkT,QAAQ,CAACC,WAAW,EAAEO,SAAS,CAAC,CAAC,CAC/C;AAER,MAAMK,cAAc,gBAAG7T,aAAa,CAAC+S,IAAI,eACvCjT,KAAK,CAACkT,QAAQ,CAACpT,MAAM,CAACE,KAAK,EAAG0E,GAAQ,IAAI;EACxC,QAAQA,GAAG,CAACR,IAAI;IACd,KAAK,YAAY;MACf,OAAO,CAAC;IACV,KAAK,gBAAgB;MACnB,OAAO,CAAC;IACV,KAAK,eAAe;MAClB,OAAO,CAAC;IACV,KAAK,eAAe;IACpB,KAAK,eAAe;IACpB,KAAK,gBAAgB;IACrB,KAAK,eAAe;IACpB,KAAK,eAAe;MAClB,OAAO,CAAC;EACZ;EACA,OAAO,CAAC;AACV,CAAC,CAAC,CACH;AAED,MAAM8P,UAAU,GAAG;EACjBhJ,MAAM,EAAE,eAAe;EACvBiJ,MAAM,EAAE,eAAe;EACvBC,OAAO,EAAE,gBAAgB;EACzBC,MAAM,EAAE;CACA;AAEV;AACO,MAAMvH,KAAK,GAAIjB,UAA8B,IAAgB;EAClE,MAAMyI,EAAE,GAAGL,cAAc,CAACpI,UAAU,CAAC;EACrC,MAAMgC,GAAG,GAAe,EAAE;EAC1B,MAAM0G,OAAO,GAAwC,EAAE;EACvD,MAAMC,QAAQ,GAAiC,EAAE;EACjD,KAAK,MAAM5P,GAAG,IAAI0P,EAAE,EAAE;IACpB,QAAQ1P,GAAG,CAACR,IAAI;MACd,KAAK,cAAc;QACjB;MACF,KAAK,YAAY;QACf,OAAO,CAACqC,UAAU,CAAC;MACrB,KAAK,gBAAgB;QACnB,OAAO,CAACH,cAAc,CAAC;MACzB;MACA,KAAK,eAAe;MACpB,KAAK,kBAAkB;MACvB,KAAK,aAAa;MAClB,KAAK,eAAe;MACpB,KAAK,eAAe;MACpB,KAAK,gBAAgB;MACrB,KAAK,eAAe;MACpB,KAAK,eAAe;QAAE;UACpB,IAAI,CAACiO,OAAO,CAAC3P,GAAG,CAACR,IAAI,CAAC,EAAE;YACtBmQ,OAAO,CAAC3P,GAAG,CAACR,IAAI,CAAC,GAAGQ,GAAG;YACvBiJ,GAAG,CAAClB,IAAI,CAAC/H,GAAG,CAAC;UACf;UACA;QACF;MACA,KAAK,SAAS;QAAE;UACd,MAAM2D,IAAI,GAAG,OAAO3D,GAAG,CAACM,OAAO;UAC/B,QAAQqD,IAAI;YACV,KAAK,QAAQ;YACb,KAAK,QAAQ;YACb,KAAK,QAAQ;YACb,KAAK,SAAS;cAAE;gBACd,MAAMnE,IAAI,GAAG8P,UAAU,CAAC3L,IAAI,CAAC;gBAC7B,IAAI,CAACgM,OAAO,CAACnQ,IAAI,CAAC,IAAI,CAACoQ,QAAQ,CAACtK,QAAQ,CAACtF,GAAG,CAACM,OAAO,CAAC,EAAE;kBACrDsP,QAAQ,CAAC7H,IAAI,CAAC/H,GAAG,CAACM,OAAO,CAAC;kBAC1B2I,GAAG,CAAClB,IAAI,CAAC/H,GAAG,CAAC;gBACf;gBACA;cACF;YACA;YACA,KAAK,QAAQ;cAAE;gBACb,IAAI,CAAC4P,QAAQ,CAACtK,QAAQ,CAACtF,GAAG,CAACM,OAAO,CAAC,EAAE;kBACnCsP,QAAQ,CAAC7H,IAAI,CAAC/H,GAAG,CAACM,OAAO,CAAC;kBAC1B2I,GAAG,CAAClB,IAAI,CAAC/H,GAAG,CAAC;gBACf;gBACA;cACF;UACF;UACA;QACF;MACA,KAAK,cAAc;QAAE;UACnB,IAAI,CAAC2P,OAAO,CAAC,eAAe,CAAC,IAAI,CAACC,QAAQ,CAACtK,QAAQ,CAACtF,GAAG,CAACa,MAAM,CAAC,EAAE;YAC/D+O,QAAQ,CAAC7H,IAAI,CAAC/H,GAAG,CAACa,MAAM,CAAC;YACzBoI,GAAG,CAAClB,IAAI,CAAC/H,GAAG,CAAC;UACf;UACA;QACF;MACA,KAAK,WAAW;QAAE;UAChB,IAAI,CAAC2P,OAAO,CAAC,eAAe,CAAC,EAAE;YAC7B1G,GAAG,CAAClB,IAAI,CAAC/H,GAAG,CAAC;UACf;UACA;QACF;MACA,KAAK,aAAa;QAAE;UAClB,IAAIA,GAAG,CAACkG,kBAAkB,CAAC/C,MAAM,KAAK,CAAC,IAAInD,GAAG,CAACmG,eAAe,CAAChD,MAAM,KAAK,CAAC,EAAE;YAC3E,IAAI,CAACwM,OAAO,CAAC,IAAI,CAAC,EAAE;cAClBA,OAAO,CAAC,IAAI,CAAC,GAAG3P,GAAG;cACnBiJ,GAAG,CAAClB,IAAI,CAAC/H,GAAG,CAAC;YACf;UACF,CAAC,MAAM,IAAI,CAAC2P,OAAO,CAAC,eAAe,CAAC,EAAE;YACpC1G,GAAG,CAAClB,IAAI,CAAC/H,GAAG,CAAC;UACf;UACA;QACF;MACA;QACEiJ,GAAG,CAAClB,IAAI,CAAC/H,GAAG,CAAC;IACjB;EACF;EACA,OAAOiJ,GAAG;AACZ,CAAC;AAED;AAAAjM,OAAA,CAAAkL,KAAA,GAAAA,KAAA;AACO,MAAM3B,gBAAgB,GAC3BvG,GAAc,IACqC;EACnD,QAAQA,GAAG,CAACR,IAAI;IACd,KAAK,eAAe;IACpB,KAAK,eAAe;IACpB,KAAK,iBAAiB;MACpB,OAAOQ,GAAG;IACZ,KAAK,YAAY;MACf,OAAOuG,gBAAgB,CAACvG,GAAG,CAAC4F,IAAI,CAAC;EACrC;AACF,CAAC;AAAA5I,OAAA,CAAAuJ,gBAAA,GAAAA,gBAAA;AAED,MAAMsJ,yBAAyB,gBAAGrU,aAAa,CAACsU,cAAc,CAAsB,CAACC,IAAI,EAAEC,IAAI,KAC7FD,IAAI,CAACpM,IAAI,CAACnE,IAAI,KAAKwQ,IAAI,CAACrM,IAAI,CAACnE,IAAI,IAAIuQ,IAAI,CAACzP,OAAO,KAAK0P,IAAI,CAAC1P,OAAO,CACnE;AAED,MAAM2P,WAAW,gBAAGzU,aAAa,CAACsU,cAAc,CAAqC,CAACC,IAAI,EAAEC,IAAI,KAC9FA,IAAI,CAAC,CAAC,CAAC,KAAKD,IAAI,CAAC,CAAC,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC,KAAKD,IAAI,CAAC,CAAC,CAAC,CAC3C;AAED,MAAMG,MAAM,GAAGA,CAACH,IAAS,EAAEC,IAAS,KAAI;EACtC,QAAQD,IAAI,CAACvQ,IAAI;IACf,KAAK,SAAS;MACZ,OAAOkB,SAAS,CAACsP,IAAI,CAAC,IAAIA,IAAI,CAAC1P,OAAO,KAAKyP,IAAI,CAACzP,OAAO;IACzD,KAAK,cAAc;MACjB,OAAOQ,cAAc,CAACkP,IAAI,CAAC,IAAIA,IAAI,CAACnP,MAAM,KAAKkP,IAAI,CAAClP,MAAM;IAC5D,KAAK,kBAAkB;IACvB,KAAK,aAAa;IAClB,KAAK,cAAc;IACnB,KAAK,gBAAgB;IACrB,KAAK,YAAY;IACjB,KAAK,eAAe;IACpB,KAAK,eAAe;IACpB,KAAK,gBAAgB;IACrB,KAAK,eAAe;IACpB,KAAK,eAAe;IACpB,KAAK,eAAe;MAClB,OAAOmP,IAAI,CAACxQ,IAAI,KAAKuQ,IAAI,CAACvQ,IAAI;IAChC,KAAK,iBAAiB;MACpB,OAAO2E,iBAAiB,CAAC6L,IAAI,CAAC,IAAIA,IAAI,CAACnM,IAAI,KAAKkM,IAAI,CAAClM,IAAI,IAAIgM,yBAAyB,CAACG,IAAI,CAAClM,KAAK,EAAEiM,IAAI,CAACjM,KAAK,CAAC;IAChH,KAAK,OAAO;MACV,OAAOL,OAAO,CAACuM,IAAI,CAAC,IAAIC,WAAW,CAACD,IAAI,CAAC9M,KAAK,EAAE6M,IAAI,CAAC7M,KAAK,CAAC;IAC7D,KAAK,YAAY;IACjB,KAAK,WAAW;IAChB,KAAK,aAAa;IAClB,KAAK,OAAO;IACZ,KAAK,SAAS;IACd,KAAK,gBAAgB;IACrB,KAAK,aAAa;MAChB,OAAO6M,IAAI,KAAKC,IAAI;EACxB;AACF,CAAC;AAED,MAAM7D,YAAY,gBAAG3Q,aAAa,CAAC2U,gBAAgB,CAACD,MAAM,CAAC;AAE3D,MAAMlF,MAAM,GAAIhL,GAAQ,IAAgB;EACtC,QAAQA,GAAG,CAACR,IAAI;IACd,KAAK,aAAa;MAAE;QAClB,MAAM6L,UAAU,GAAGnM,4BAA4B,CAACc,GAAG,CAAC;QACpD,IAAI3E,MAAM,CAACyM,MAAM,CAACuD,UAAU,CAAC,EAAE;UAC7B,OAAOL,MAAM,CAACK,UAAU,CAAChI,KAAK,CAAC;QACjC;QACA;MACF;IACA,KAAK,aAAa;MAChB,OAAOrD,GAAG,CAACkG,kBAAkB,CAACnG,GAAG,CAAEuN,CAAC,IAClC/R,SAAS,CAAC0Q,QAAQ,CAACqB,CAAC,CAAC5H,IAAI,CAAC,GAAG,IAAI9E,YAAY,CAAC0M,CAAC,CAAC5H,IAAI,CAAC,GAAG,IAAIrF,OAAO,CAACiN,CAAC,CAAC5H,IAAI,CAAC,CAC5E,CAACsC,MAAM,CAAChI,GAAG,CAACmG,eAAe,CAACpG,GAAG,CAAE+G,EAAE,IAAKP,gBAAgB,CAACO,EAAE,CAAChB,SAAS,CAAC,CAAC,CAAC;IAC3E,KAAK,SAAS;MACZ,OAAOkF,MAAM,CAAChL,GAAG,CAACwI,CAAC,EAAE,CAAC;IACxB,KAAK,OAAO;MACV,OAAOxI,GAAG,CAACmH,KAAK,CAACmE,KAAK,CAAC,CAAC,CAAC,CAACY,MAAM,CAC9B,CAACjD,GAAe,EAAEjJ,GAAG,KAAKmM,YAAY,CAAClD,GAAG,EAAE+B,MAAM,CAAChL,GAAG,CAAC,CAAC,EACxDgL,MAAM,CAAChL,GAAG,CAACmH,KAAK,CAAC,CAAC,CAAC,CAAC,CACrB;IACH,KAAK,gBAAgB;MACnB,OAAO6D,MAAM,CAAChL,GAAG,CAACwJ,EAAE,CAAC;EACzB;EACA,MAAM,IAAI5E,KAAK,CAAC,8BAA8B5E,GAAG,GAAG,CAAC;AACvD,CAAC;AAED;AACO,MAAMoQ,OAAO,GAAGA,CAACC,EAAO,EAAEC,EAAO,KAAU,IAAI/G,cAAc,CAAC8G,EAAE,EAAEC,EAAE,EAAErG,qBAAqB,CAAC;AAEnG;AAAAjN,OAAA,CAAAoT,OAAA,GAAAA,OAAA;AACO,MAAMG,MAAM,GAAGA,CAACvQ,GAAQ,EAAEwQ,OAAsD,KAAS;EAC9F,QAAQxQ,GAAG,CAACR,IAAI;IACd,KAAK,aAAa;MAAE;QAClB,MAAM8K,gCAAgC,GAA2C,EAAE;QACnF,KAAK,MAAMnM,GAAG,IAAI1C,KAAK,CAACgV,OAAO,CAACD,OAAO,CAAC,EAAE;UACxC,MAAM9K,IAAI,GAAG8K,OAAO,CAACrS,GAAG,CAAC;UACzB,IAAIuH,IAAI,KAAKmI,SAAS,EAAE;YACtBvD,gCAAgC,CAACvC,IAAI,CACnC,IAAIoC,+BAA+B,CACjChM,GAAG,EACHuH,IAAI,EACJ3K,SAAA,CAAA2V,QAAQ,EACR3V,SAAA,CAAA2V,QAAQ,CACT,CACF;UACH;QACF;QACA,IAAIpG,gCAAgC,CAACnH,MAAM,KAAK,CAAC,EAAE;UACjD,OAAOnD,GAAG;QACZ;QACA,OAAO,IAAIuJ,cAAc,CACvBvJ,GAAG,EACH,IAAIiG,WAAW,CACbjG,GAAG,CAACkG,kBAAkB,CAACnG,GAAG,CAAE4G,EAAE,IAAI;UAChC,MAAMjB,IAAI,GAAG8K,OAAO,CAAC7J,EAAE,CAACjB,IAAI,CAAC;UAC7B,OAAO,IAAID,iBAAiB,CAC1BC,IAAI,KAAKmI,SAAS,GAAGlH,EAAE,CAACjB,IAAI,GAAGA,IAAI,EACnC6H,OAAO,CAAC5G,EAAE,CAAChD,IAAI,CAAC,EAChBgD,EAAE,CAACtC,UAAU,EACbsC,EAAE,CAAClC,UAAU,EACbkC,EAAE,CAACvI,WAAW,CACf;QACH,CAAC,CAAC,EACF4B,GAAG,CAACmG,eAAe,CACpB,EACD,IAAIkE,yBAAyB,CAACC,gCAAgC,CAAC,CAChE;MACH;IACA,KAAK,SAAS;MACZ,OAAO,IAAI1B,OAAO,CAAC,MAAM2H,MAAM,CAACvQ,GAAG,CAACwI,CAAC,EAAE,EAAEgI,OAAO,CAAC,CAAC;IACpD,KAAK,gBAAgB;MACnB,OAAOJ,OAAO,CAACpQ,GAAG,EAAEuQ,MAAM,CAAChD,OAAO,CAACvN,GAAG,CAAC,EAAEwQ,OAAO,CAAC,CAAC;EACtD;EACA,MAAM,IAAI5L,KAAK,CAAC,0BAA0B5E,GAAG,GAAG,CAAC;AACnD,CAAC;AAAAhD,OAAA,CAAAuT,MAAA,GAAAA,MAAA;AAED,MAAMvP,aAAa,GAAGA,CAAChB,GAAQ,EAAEL,OAAA,GAAmB,KAAK,KACvDtE,MAAM,CAACuE,SAAS,CAACC,WAAW,CAACG,GAAG,EAAEL,OAAO,CAAC,EAAE,MAAMK,GAAG,CAACR,IAAI,CAAC;AAE7D,MAAMK,WAAW,GAAGA,CAACG,GAAQ,EAAEL,OAAgB,KAA2B;EACxE,IAAIA,OAAO,EAAE;IACX,MAAMgR,WAAW,GAAGhS,wBAAwB,CAACqB,GAAG,CAAC,CAAC8I,IAAI,CACpDzN,MAAM,CAAC0N,MAAM,CAAC,MAAMtK,kBAAkB,CAACuB,GAAG,CAAC,CAAC,CAC7C;IACD,OAAO3E,MAAM,CAACyR,KAAK,CAACpO,uBAAuB,CAACsB,GAAG,CAAC,EAAE;MAChD4N,MAAM,EAAEA,CAAA,KAAM+C,WAAW;MACzB7C,MAAM,EAAGC,UAAU,IACjB1S,MAAM,CAACyR,KAAK,CAAC6D,WAAW,EAAE;QACxB/C,MAAM,EAAEA,CAAA,KAAMvS,MAAM,CAACgD,IAAI,CAAC0P,UAAU,CAAC;QACrCD,MAAM,EAAG6C,WAAW,IAAKtV,MAAM,CAACgD,IAAI,CAAC,GAAG0P,UAAU,KAAK4C,WAAW,GAAG;OACtE;KACJ,CAAC;EACJ,CAAC,MAAM;IACL,OAAOjS,uBAAuB,CAACsB,GAAG,CAAC,CAAC8I,IAAI,CACtCzN,MAAM,CAAC0N,MAAM,CAAC,MAAMtK,kBAAkB,CAACuB,GAAG,CAAC,CAAC,EAC5C3E,MAAM,CAAC0N,MAAM,CAAC,MAAMpK,wBAAwB,CAACqB,GAAG,CAAC,CAAC,CACnD;EACH;AACF,CAAC"}
\ No newline at end of file
diff --git a/dist/cjs/Arbitrary.js b/dist/cjs/Arbitrary.js
index 18454e5b5bcedfa4e11a3b9b9ca5341965f57b89..87c1826f10e550db6ef3e7186114a2b6294af3ab 100644
--- a/dist/cjs/Arbitrary.js
+++ b/dist/cjs/Arbitrary.js
@@ -8,11 +8,9 @@ var Option = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/
 var Predicate = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Predicate"));
 var ReadonlyArray = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ReadonlyArray"));
 var AST = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./AST.js"));
-var Internal = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/ast.js"));
-var filters = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/filters.js"));
-var hooks = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/hooks.js"));
-var InternalSchema = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/schema.js"));
-var Parser = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./Parser.js"));
+var _filters = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/filters.js"));
+var _hooks = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/hooks.js"));
+var _util = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/util.js"));
 function _getRequireWildcardCache(e) {
   if ("function" != typeof WeakMap) return null;
   var r = new WeakMap(),
@@ -46,12 +44,14 @@ function _interopRequireWildcard(e, r) {
  * @category hooks
  * @since 1.0.0
  */
-const ArbitraryHookId = exports.ArbitraryHookId = hooks.ArbitraryHookId;
+const ArbitraryHookId = exports.ArbitraryHookId = _hooks.ArbitraryHookId;
 /**
  * @category annotations
  * @since 1.0.0
  */
-const arbitrary = handler => self => InternalSchema.make(AST.setAnnotation(self.ast, ArbitraryHookId, handler));
+const arbitrary = handler => self => self.annotations({
+  [ArbitraryHookId]: handler
+});
 /**
  * Returns a fast-check Arbitrary for the `A` type of the provided schema.
  *
@@ -99,7 +99,7 @@ const go = (ast, options) => {
   switch (ast._tag) {
     case "Declaration":
       {
-        throw new Error(`cannot build an Arbitrary for a declaration without annotations (${AST.format(ast)})`);
+        throw new Error(`cannot build an Arbitrary for a declaration without annotations (${ast})`);
       }
     case "Literal":
       return fc => fc.constant(ast.literal);
@@ -174,7 +174,7 @@ const go = (ast, options) => {
           return fc.tuple(...components).map(spans => spans.join(""));
         };
       }
-    case "Tuple":
+    case "TupleType":
       {
         const elements = [];
         let hasOptionals = false;
@@ -184,7 +184,7 @@ const go = (ast, options) => {
             hasOptionals = true;
           }
         }
-        const rest = Option.map(ast.rest, ReadonlyArray.map(e => go(e, options)));
+        const rest = ast.rest.map(e => go(e, options));
         return fc => {
           // ---------------------------------------------
           // handle elements
@@ -204,8 +204,8 @@ const go = (ast, options) => {
           // ---------------------------------------------
           // handle rest element
           // ---------------------------------------------
-          if (Option.isSome(rest)) {
-            const [head, ...tail] = rest.value;
+          if (ReadonlyArray.isNonEmptyReadonlyArray(rest)) {
+            const [head, ...tail] = rest;
             const arb = head(fc);
             const constraints = options.constraints;
             output = output.chain(as => {
@@ -286,17 +286,17 @@ const go = (ast, options) => {
     case "Refinement":
       {
         const from = getRefinementFromArbitrary(ast, options);
-        return fc => from(fc).filter(a => Option.isNone(ast.filter(a, Parser.defaultParseOption, ast)));
+        return fc => from(fc).filter(a => Option.isNone(ast.filter(a, AST.defaultParseOption, ast)));
       }
     case "Suspend":
       {
-        const get = Internal.memoizeThunk(() => go(ast.f(), {
+        const get = _util.memoizeThunk(() => go(ast.f(), {
           ...options,
           isSuspend: true
         }));
         return fc => fc.constant(null).chain(() => get()(fc));
       }
-    case "Transform":
+    case "Transformation":
       return go(ast.to, options);
   }
 };
@@ -352,19 +352,19 @@ const getConstraints = ast => {
   const jsonSchema = ast.annotations[AST.JSONSchemaAnnotationId];
   switch (TypeAnnotationId) {
     // number
-    case filters.GreaterThanTypeId:
-    case filters.GreaterThanOrEqualToTypeId:
+    case _filters.GreaterThanTypeId:
+    case _filters.GreaterThanOrEqualToTypeId:
       return numberConstraints({
         min: jsonSchema.exclusiveMinimum ?? jsonSchema.minimum
       });
-    case filters.LessThanTypeId:
-    case filters.LessThanOrEqualToTypeId:
+    case _filters.LessThanTypeId:
+    case _filters.LessThanOrEqualToTypeId:
       return numberConstraints({
         max: jsonSchema.exclusiveMaximum ?? jsonSchema.maximum
       });
-    case filters.IntTypeId:
+    case _filters.IntTypeId:
       return integerConstraints({});
-    case filters.BetweenTypeId:
+    case _filters.BetweenTypeId:
       {
         const min = jsonSchema.minimum;
         const max = jsonSchema.maximum;
@@ -378,23 +378,23 @@ const getConstraints = ast => {
         return numberConstraints(constraints);
       }
     // bigint
-    case filters.GreaterThanBigintTypeId:
-    case filters.GreaterThanOrEqualToBigintTypeId:
+    case _filters.GreaterThanBigintTypeId:
+    case _filters.GreaterThanOrEqualToBigintTypeId:
       {
         const params = ast.annotations[TypeAnnotationId];
         return bigintConstraints({
           min: params.min
         });
       }
-    case filters.LessThanBigintTypeId:
-    case filters.LessThanOrEqualToBigintTypeId:
+    case _filters.LessThanBigintTypeId:
+    case _filters.LessThanOrEqualToBigintTypeId:
       {
         const params = ast.annotations[TypeAnnotationId];
         return bigintConstraints({
           max: params.max
         });
       }
-    case filters.BetweenBigintTypeId:
+    case _filters.BetweenBigintTypeId:
       {
         const params = ast.annotations[TypeAnnotationId];
         const min = params.min;
@@ -409,29 +409,29 @@ const getConstraints = ast => {
         return bigintConstraints(constraints);
       }
     // string
-    case filters.MinLengthTypeId:
+    case _filters.MinLengthTypeId:
       return stringConstraints({
         minLength: jsonSchema.minLength
       });
-    case filters.MaxLengthTypeId:
+    case _filters.MaxLengthTypeId:
       return stringConstraints({
         maxLength: jsonSchema.maxLength
       });
-    case filters.LengthTypeId:
+    case _filters.LengthTypeId:
       return stringConstraints({
         minLength: jsonSchema.minLength,
         maxLength: jsonSchema.maxLength
       });
     // array
-    case filters.MinItemsTypeId:
+    case _filters.MinItemsTypeId:
       return arrayConstraints({
         minLength: jsonSchema.minItems
       });
-    case filters.MaxItemsTypeId:
+    case _filters.MaxItemsTypeId:
       return arrayConstraints({
         maxLength: jsonSchema.maxItems
       });
-    case filters.ItemsCountTypeId:
+    case _filters.ItemsCountTypeId:
       return arrayConstraints({
         minLength: jsonSchema.minItems,
         maxLength: jsonSchema.maxItems
diff --git a/dist/cjs/Arbitrary.js.map b/dist/cjs/Arbitrary.js.map
index be18d3364fea0413a748a0bd1d959b654f7564cb..ef9ef98fa357d59cbaf89b713022e16535ab0ef8 100644
--- a/dist/cjs/Arbitrary.js.map
+++ b/dist/cjs/Arbitrary.js.map
@@ -1 +1 @@
-{"version":3,"file":"Arbitrary.js","names":["Option","_interopRequireWildcard","require","Predicate","ReadonlyArray","AST","Internal","filters","hooks","InternalSchema","Parser","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","ArbitraryHookId","exports","arbitrary","handler","self","make","setAnnotation","ast","schema","go","depthSize","record","fc","key","value","options","isSuspend","oneof","constant","array","tuple","minLength","maxLength","map","tuples","out","k","v","getHook","getAnnotation","getRefinementFromArbitrary","constraints","combineConstraints","getConstraints","from","hook","isSome","_tag","typeParameters","p","Error","format","literal","symbol","undefined","anything","string","float","integer","boolean","bigInt","s","Symbol","for","object","number","noDefaultInfinity","filter","Number","isNaN","components","head","span","spans","isStringKeyword","type","push","join","elements","hasOptionals","element","isOptional","rest","output","arb","indexes","chain","booleans","b","reverse","entries","splice","length","tail","as","j","propertySignaturesTypes","propertySignatures","f","indexSignatures","is","parameter","arbs","requiredKeys","ps","name","o","d","types","enums","_","isNone","defaultParseOption","memoizeThunk","to","numberConstraints","isNumber","min","Math","fround","max","stringConstraints","integerConstraints","arrayConstraints","bigintConstraints","TypeAnnotationId","annotations","jsonSchema","JSONSchemaAnnotationId","GreaterThanTypeId","GreaterThanOrEqualToTypeId","exclusiveMinimum","minimum","LessThanTypeId","LessThanOrEqualToTypeId","exclusiveMaximum","maximum","IntTypeId","BetweenTypeId","GreaterThanBigintTypeId","GreaterThanOrEqualToBigintTypeId","params","LessThanBigintTypeId","LessThanOrEqualToBigintTypeId","BetweenBigintTypeId","isBigInt","MinLengthTypeId","MaxLengthTypeId","LengthTypeId","MinItemsTypeId","minItems","MaxItemsTypeId","maxItems","ItemsCountTypeId","c1","c2","c","getMax","getMin","n1","n2"],"sources":["../../src/Arbitrary.ts"],"sourcesContent":[null],"mappings":";;;;;;AAIA,IAAAA,MAAA,gBAAAC,uBAAA,eAAAC,OAAA;AACA,IAAAC,SAAA,gBAAAF,uBAAA,eAAAC,OAAA;AACA,IAAAE,aAAA,gBAAAH,uBAAA,eAAAC,OAAA;AAEA,IAAAG,GAAA,gBAAAJ,uBAAA,eAAAC,OAAA;AACA,IAAAI,QAAA,gBAAAL,uBAAA,eAAAC,OAAA;AACA,IAAAK,OAAA,gBAAAN,uBAAA,eAAAC,OAAA;AACA,IAAAM,KAAA,gBAAAP,uBAAA,eAAAC,OAAA;AACA,IAAAO,cAAA,gBAAAR,uBAAA,eAAAC,OAAA;AACA,IAAAQ,MAAA,gBAAAT,uBAAA,eAAAC,OAAA;AAAqC,SAAAS,yBAAAC,CAAA;EAAA,yBAAAC,OAAA;EAAA,IAAAC,CAAA,OAAAD,OAAA;IAAAE,CAAA,OAAAF,OAAA;EAAA,QAAAF,wBAAA,YAAAA,CAAAC,CAAA;IAAA,OAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA;EAAA,GAAAF,CAAA;AAAA;AAAA,SAAAX,wBAAAW,CAAA,EAAAE,CAAA;EAAA,KAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA;EAAA,aAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA;IAAAK,OAAA,EAAAL;EAAA;EAAA,IAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA;EAAA,IAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA;EAAA,IAAAQ,CAAA;MAAAC,SAAA;IAAA;IAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA;EAAA,SAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,EAAAc,CAAA;IAAA,IAAAI,CAAA,GAAAR,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA;IAAAI,CAAA,KAAAA,CAAA,CAAAX,GAAA,IAAAW,CAAA,CAAAC,GAAA,IAAAR,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAI,CAAA,IAAAV,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA;EAAA;EAAA,OAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAgB,GAAA,CAAAnB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAAA;AAbrC;;;;AAwBA;;;;AAIO,MAAMY,eAAe,GAAAC,OAAA,CAAAD,eAAA,GAAkBxB,KAAK,CAACwB,eAAe;AAQnE;;;;AAIO,MAAME,SAAS,GAChBC,OAAiE,IAC9DC,IAA4B,IACjC3B,cAAc,CAAC4B,IAAI,CAAChC,GAAG,CAACiC,aAAa,CAACF,IAAI,CAACG,GAAG,EAAEP,eAAe,EAAEG,OAAO,CAAC,CAAC;AAE9E;;;;;;AAAAF,OAAA,CAAAC,SAAA,GAAAA,SAAA;AAMO,MAAMG,IAAI,GAAaG,MAA8B,IAAmBC,EAAE,CAACD,MAAM,CAACD,GAAG,EAAE,EAAE,CAAC;AAAAN,OAAA,CAAAI,IAAA,GAAAA,IAAA;AAEjG,MAAMK,SAAS,GAAG,CAAC;AAEnB,MAAMC,MAAM,GAAGA,CACbC,EAAoB,EACpBC,GAA2B,EAC3BC,KAA6B,EAC7BC,OAAgB,KACiC;EACjD,OAAO,CAACA,OAAO,CAACC,SAAS,GACvBJ,EAAE,CAACK,KAAK,CACN;IAAEP;EAAS,CAAE,EACbE,EAAE,CAACM,QAAQ,CAAC,EAAE,CAAC,EACfN,EAAE,CAACO,KAAK,CAACP,EAAE,CAACQ,KAAK,CAACP,GAAG,EAAEC,KAAK,CAAC,EAAE;IAAEO,SAAS,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAC,CAAE,CAAC,CAC/D,GACDV,EAAE,CAACO,KAAK,CAACP,EAAE,CAACQ,KAAK,CAACP,GAAG,EAAEC,KAAK,CAAC,CAAC,EAAES,GAAG,CAAEC,MAAM,IAAI;IAC7C,MAAMC,GAAG,GAAoB,EAAS;IACtC,KAAK,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,IAAIH,MAAM,EAAE;MAC3BC,GAAG,CAACC,CAAC,CAAC,GAAGC,CAAC;IACZ;IACA,OAAOF,GAAG;EACZ,CAAC,CAAC;AACN,CAAC;AAED,MAAMG,OAAO,gBAAGvD,GAAG,CAACwD,aAAa,CAE/B7B,eAAe,CAAC;AAOlB,MAAM8B,0BAA0B,GAAGA,CAACvB,GAAmB,EAAEQ,OAAgB,KAAI;EAC3E,MAAMgB,WAAW,GAAGC,kBAAkB,CAACjB,OAAO,CAACgB,WAAW,EAAEE,cAAc,CAAC1B,GAAG,CAAC,CAAC;EAChF,OAAOE,EAAE,CAACF,GAAG,CAAC2B,IAAI,EAAEH,WAAW,GAAG;IAAE,GAAGhB,OAAO;IAAEgB;EAAW,CAAE,GAAGhB,OAAO,CAAC;AAC1E,CAAC;AAED,MAAMN,EAAE,GAAGA,CAACF,GAAY,EAAEQ,OAAgB,KAAoB;EAC5D,MAAMoB,IAAI,GAAGP,OAAO,CAACrB,GAAG,CAAC;EACzB,IAAIvC,MAAM,CAACoE,MAAM,CAACD,IAAI,CAAC,EAAE;IACvB,QAAQ5B,GAAG,CAAC8B,IAAI;MACd,KAAK,aAAa;QAChB,OAAOF,IAAI,CAACrB,KAAK,CAAC,GAAGP,GAAG,CAAC+B,cAAc,CAACf,GAAG,CAAEgB,CAAC,IAAK9B,EAAE,CAAC8B,CAAC,EAAExB,OAAO,CAAC,CAAC,CAAC;MACrE,KAAK,YAAY;QACf,OAAOoB,IAAI,CAACrB,KAAK,CAACgB,0BAA0B,CAACvB,GAAG,EAAEQ,OAAO,CAAC,CAAC;MAC7D;QACE,OAAOoB,IAAI,CAACrB,KAAK,EAAE;IACvB;EACF;EACA,QAAQP,GAAG,CAAC8B,IAAI;IACd,KAAK,aAAa;MAAE;QAClB,MAAM,IAAIG,KAAK,CAAC,oEAAoEnE,GAAG,CAACoE,MAAM,CAAClC,GAAG,CAAC,GAAG,CAAC;MACzG;IACA,KAAK,SAAS;MACZ,OAAQK,EAAE,IAAKA,EAAE,CAACM,QAAQ,CAACX,GAAG,CAACmC,OAAO,CAAC;IACzC,KAAK,cAAc;MACjB,OAAQ9B,EAAE,IAAKA,EAAE,CAACM,QAAQ,CAACX,GAAG,CAACoC,MAAM,CAAC;IACxC,KAAK,kBAAkB;IACvB,KAAK,aAAa;MAChB,OAAQ/B,EAAE,IAAKA,EAAE,CAACM,QAAQ,CAAC0B,SAAS,CAAC;IACvC,KAAK,cAAc;MACjB,OAAO,MAAK;QACV,MAAM,IAAIJ,KAAK,CAAC,uCAAuC,CAAC;MAC1D,CAAC;IACH,KAAK,gBAAgB;IACrB,KAAK,YAAY;MACf,OAAQ5B,EAAE,IAAKA,EAAE,CAACiC,QAAQ,EAAE;IAC9B,KAAK,eAAe;MAClB,OAAQjC,EAAE,IAAI;QACZ,IAAIG,OAAO,CAACgB,WAAW,EAAE;UACvB,QAAQhB,OAAO,CAACgB,WAAW,CAACM,IAAI;YAC9B,KAAK,mBAAmB;cACtB,OAAOzB,EAAE,CAACkC,MAAM,CAAC/B,OAAO,CAACgB,WAAW,CAACA,WAAW,CAAC;UACrD;QACF;QACA,OAAOnB,EAAE,CAACkC,MAAM,EAAE;MACpB,CAAC;IACH,KAAK,eAAe;MAClB,OAAQlC,EAAE,IAAI;QACZ,IAAIG,OAAO,CAACgB,WAAW,EAAE;UACvB,QAAQhB,OAAO,CAACgB,WAAW,CAACM,IAAI;YAC9B,KAAK,mBAAmB;cACtB,OAAOzB,EAAE,CAACmC,KAAK,CAAChC,OAAO,CAACgB,WAAW,CAACA,WAAW,CAAC;YAClD,KAAK,oBAAoB;cACvB,OAAOnB,EAAE,CAACoC,OAAO,CAACjC,OAAO,CAACgB,WAAW,CAACA,WAAW,CAAC;UACtD;QACF;QACA,OAAOnB,EAAE,CAACmC,KAAK,EAAE;MACnB,CAAC;IACH,KAAK,gBAAgB;MACnB,OAAQnC,EAAE,IAAKA,EAAE,CAACqC,OAAO,EAAE;IAC7B,KAAK,eAAe;MAClB,OAAQrC,EAAE,IAAI;QACZ,IAAIG,OAAO,CAACgB,WAAW,EAAE;UACvB,QAAQhB,OAAO,CAACgB,WAAW,CAACM,IAAI;YAC9B,KAAK,mBAAmB;cACtB,OAAOzB,EAAE,CAACsC,MAAM,CAACnC,OAAO,CAACgB,WAAW,CAACA,WAAW,CAAC;UACrD;QACF;QACA,OAAOnB,EAAE,CAACsC,MAAM,EAAE;MACpB,CAAC;IACH,KAAK,eAAe;MAClB,OAAQtC,EAAE,IAAKA,EAAE,CAACkC,MAAM,EAAE,CAACvB,GAAG,CAAE4B,CAAC,IAAKC,MAAM,CAACC,GAAG,CAACF,CAAC,CAAC,CAAC;IACtD,KAAK,eAAe;MAClB,OAAQvC,EAAE,IAAKA,EAAE,CAACK,KAAK,CAACL,EAAE,CAAC0C,MAAM,EAAE,EAAE1C,EAAE,CAACO,KAAK,CAACP,EAAE,CAACiC,QAAQ,EAAE,CAAC,CAAC;IAC/D,KAAK,iBAAiB;MAAE;QACtB,OAAQjC,EAAE,IAAI;UACZ,MAAMkC,MAAM,GAAGlC,EAAE,CAACkC,MAAM,CAAC;YAAExB,SAAS,EAAE;UAAC,CAAE,CAAC;UAC1C,MAAMiC,MAAM,GAAG3C,EAAE,CAACmC,KAAK,CAAC;YAAES,iBAAiB,EAAE;UAAI,CAAE,CAAC,CAACC,MAAM,CAAErE,CAAC,IAAK,CAACsE,MAAM,CAACC,KAAK,CAACvE,CAAC,CAAC,CAAC;UACpF,MAAMwE,UAAU,GAAgD,CAAChD,EAAE,CAACM,QAAQ,CAACX,GAAG,CAACsD,IAAI,CAAC,CAAC;UACvF,KAAK,MAAMC,IAAI,IAAIvD,GAAG,CAACwD,KAAK,EAAE;YAC5B,IAAI1F,GAAG,CAAC2F,eAAe,CAACF,IAAI,CAACG,IAAI,CAAC,EAAE;cAClCL,UAAU,CAACM,IAAI,CAACpB,MAAM,CAAC;YACzB,CAAC,MAAM;cACLc,UAAU,CAACM,IAAI,CAACX,MAAM,CAAC;YACzB;YACAK,UAAU,CAACM,IAAI,CAACtD,EAAE,CAACM,QAAQ,CAAC4C,IAAI,CAACpB,OAAO,CAAC,CAAC;UAC5C;UACA,OAAO9B,EAAE,CAACQ,KAAK,CAAC,GAAGwC,UAAU,CAAC,CAACrC,GAAG,CAAEwC,KAAK,IAAKA,KAAK,CAACI,IAAI,CAAC,EAAE,CAAC,CAAC;QAC/D,CAAC;MACH;IACA,KAAK,OAAO;MAAE;QACZ,MAAMC,QAAQ,GAA0B,EAAE;QAC1C,IAAIC,YAAY,GAAG,KAAK;QACxB,KAAK,MAAMC,OAAO,IAAI/D,GAAG,CAAC6D,QAAQ,EAAE;UAClCA,QAAQ,CAACF,IAAI,CAACzD,EAAE,CAAC6D,OAAO,CAACL,IAAI,EAAElD,OAAO,CAAC,CAAC;UACxC,IAAIuD,OAAO,CAACC,UAAU,EAAE;YACtBF,YAAY,GAAG,IAAI;UACrB;QACF;QACA,MAAMG,IAAI,GAAGxG,MAAM,CAACuD,GAAG,CAAChB,GAAG,CAACiE,IAAI,EAAEpG,aAAa,CAACmD,GAAG,CAAE3C,CAAC,IAAK6B,EAAE,CAAC7B,CAAC,EAAEmC,OAAO,CAAC,CAAC,CAAC;QAC3E,OAAQH,EAAE,IAAI;UACZ;UACA;UACA;UACA,IAAI6D,MAAM,GAAG7D,EAAE,CAACQ,KAAK,CAAC,GAAGgD,QAAQ,CAAC7C,GAAG,CAAEmD,GAAG,IAAKA,GAAG,CAAC9D,EAAE,CAAC,CAAC,CAAC;UACxD,IAAIyD,YAAY,EAAE;YAChB,MAAMM,OAAO,GAAG/D,EAAE,CAACQ,KAAK,CACtB,GAAGb,GAAG,CAAC6D,QAAQ,CAAC7C,GAAG,CAAE+C,OAAO,IAAKA,OAAO,CAACC,UAAU,GAAG3D,EAAE,CAACqC,OAAO,EAAE,GAAGrC,EAAE,CAACM,QAAQ,CAAC,IAAI,CAAC,CAAC,CACxF;YACDuD,MAAM,GAAGA,MAAM,CAACG,KAAK,CAAExD,KAAK,IAC1BuD,OAAO,CAACpD,GAAG,CAAEsD,QAAQ,IAAI;cACvB,KAAK,MAAM,CAAC/E,CAAC,EAAEgF,CAAC,CAAC,IAAID,QAAQ,CAACE,OAAO,EAAE,CAACC,OAAO,EAAE,EAAE;gBACjD,IAAI,CAACF,CAAC,EAAE;kBACN1D,KAAK,CAAC6D,MAAM,CAACJ,QAAQ,CAACK,MAAM,GAAGpF,CAAC,EAAE,CAAC,CAAC;gBACtC;cACF;cACA,OAAOsB,KAAK;YACd,CAAC,CAAC,CACH;UACH;UAEA;UACA;UACA;UACA,IAAIpD,MAAM,CAACoE,MAAM,CAACoC,IAAI,CAAC,EAAE;YACvB,MAAM,CAACX,IAAI,EAAE,GAAGsB,IAAI,CAAC,GAAGX,IAAI,CAAC1D,KAAK;YAClC,MAAM4D,GAAG,GAAGb,IAAI,CAACjD,EAAE,CAAC;YACpB,MAAMmB,WAAW,GAAGhB,OAAO,CAACgB,WAAW;YACvC0C,MAAM,GAAGA,MAAM,CAACG,KAAK,CAAEQ,EAAE,IAAI;cAC3B,IAAI3D,GAAG,GAAGb,EAAE,CAACO,KAAK,CAACuD,GAAG,CAAC;cACvB,IAAI3D,OAAO,CAACC,SAAS,EAAE;gBACrBS,GAAG,GAAGb,EAAE,CAACK,KAAK,CACZ;kBAAEP;gBAAS,CAAE,EACbE,EAAE,CAACM,QAAQ,CAAC,EAAE,CAAC,EACfN,EAAE,CAACO,KAAK,CAACuD,GAAG,EAAE;kBAAErD,SAAS,EAAE,CAAC;kBAAEC,SAAS,EAAE;gBAAC,CAAE,CAAC,CAC9C;cACH,CAAC,MAAM,IAAIS,WAAW,IAAIA,WAAW,CAACM,IAAI,KAAK,kBAAkB,EAAE;gBACjEZ,GAAG,GAAGb,EAAE,CAACO,KAAK,CAACuD,GAAG,EAAE3C,WAAW,CAACA,WAAW,CAAC;cAC9C;cACA,OAAON,GAAG,CAACF,GAAG,CAAEiD,IAAI,IAAK,CAAC,GAAGY,EAAE,EAAE,GAAGZ,IAAI,CAAC,CAAC;YAC5C,CAAC,CAAC;YACF;YACA;YACA;YACA,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACD,MAAM,EAAEG,CAAC,EAAE,EAAE;cACpCZ,MAAM,GAAGA,MAAM,CAACG,KAAK,CAAEQ,EAAE,IAAKD,IAAI,CAACE,CAAC,CAAC,CAACzE,EAAE,CAAC,CAACW,GAAG,CAAEjC,CAAC,IAAK,CAAC,GAAG8F,EAAE,EAAE9F,CAAC,CAAC,CAAC,CAAC;YACnE;UACF;UAEA,OAAOmF,MAAM;QACf,CAAC;MACH;IACA,KAAK,aAAa;MAAE;QAClB,MAAMa,uBAAuB,GAAG/E,GAAG,CAACgF,kBAAkB,CAAChE,GAAG,CAAEiE,CAAC,IAAK/E,EAAE,CAAC+E,CAAC,CAACvB,IAAI,EAAElD,OAAO,CAAC,CAAC;QACtF,MAAM0E,eAAe,GAAGlF,GAAG,CAACkF,eAAe,CAAClE,GAAG,CAAEmE,EAAE,IACjD,CAACjF,EAAE,CAACiF,EAAE,CAACC,SAAS,EAAE5E,OAAO,CAAC,EAAEN,EAAE,CAACiF,EAAE,CAACzB,IAAI,EAAElD,OAAO,CAAC,CAAU,CAC3D;QACD,OAAQH,EAAE,IAAI;UACZ,MAAMgF,IAAI,GAAQ,EAAE;UACpB,MAAMC,YAAY,GAAuB,EAAE;UAC3C;UACA;UACA;UACA,KAAK,IAAI/F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwF,uBAAuB,CAACJ,MAAM,EAAEpF,CAAC,EAAE,EAAE;YACvD,MAAMgG,EAAE,GAAGvF,GAAG,CAACgF,kBAAkB,CAACzF,CAAC,CAAC;YACpC,MAAMiG,IAAI,GAAGD,EAAE,CAACC,IAAI;YACpB,IAAI,CAACD,EAAE,CAACvB,UAAU,EAAE;cAClBsB,YAAY,CAAC3B,IAAI,CAAC6B,IAAI,CAAC;YACzB;YACAH,IAAI,CAACG,IAAI,CAAC,GAAGT,uBAAuB,CAACxF,CAAC,CAAC,CAACc,EAAE,CAAC;UAC7C;UACA,IAAI6D,MAAM,GAAG7D,EAAE,CAACD,MAAM,CAAWiF,IAAI,EAAE;YAAEC;UAAY,CAAE,CAAC;UACxD;UACA;UACA;UACA,KAAK,IAAI/F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2F,eAAe,CAACP,MAAM,EAAEpF,CAAC,EAAE,EAAE;YAC/C,MAAM6F,SAAS,GAAGF,eAAe,CAAC3F,CAAC,CAAC,CAAC,CAAC,CAAC,CAACc,EAAE,CAAC;YAC3C,MAAMqD,IAAI,GAAGwB,eAAe,CAAC3F,CAAC,CAAC,CAAC,CAAC,CAAC,CAACc,EAAE,CAAC;YACtC6D,MAAM,GAAGA,MAAM,CAACG,KAAK,CAAEoB,CAAC,IAAI;cAC1B,OAAOrF,MAAM,CAACC,EAAE,EAAE+E,SAAS,EAAE1B,IAAI,EAAElD,OAAO,CAAC,CAACQ,GAAG,CAAE0E,CAAC,KAAM;gBAAE,GAAGA,CAAC;gBAAE,GAAGD;cAAC,CAAE,CAAC,CAAC;YAC1E,CAAC,CAAC;UACJ;UAEA,OAAOvB,MAAM;QACf,CAAC;MACH;IACA,KAAK,OAAO;MAAE;QACZ,MAAMyB,KAAK,GAAG3F,GAAG,CAAC2F,KAAK,CAAC3E,GAAG,CAAExC,CAAC,IAAK0B,EAAE,CAAC1B,CAAC,EAAEgC,OAAO,CAAC,CAAC;QAClD,OAAQH,EAAE,IAAKA,EAAE,CAACK,KAAK,CAAC;UAAEP;QAAS,CAAE,EAAE,GAAGwF,KAAK,CAAC3E,GAAG,CAAEmD,GAAG,IAAKA,GAAG,CAAC9D,EAAE,CAAC,CAAC,CAAC;MACxE;IACA,KAAK,OAAO;MAAE;QACZ,IAAIL,GAAG,CAAC4F,KAAK,CAACjB,MAAM,KAAK,CAAC,EAAE;UAC1B,MAAM,IAAI1C,KAAK,CAAC,6CAA6C,CAAC;QAChE;QACA,OAAQ5B,EAAE,IAAKA,EAAE,CAACK,KAAK,CAAC,GAAGV,GAAG,CAAC4F,KAAK,CAAC5E,GAAG,CAAC,CAAC,CAAC6E,CAAC,EAAEtF,KAAK,CAAC,KAAKF,EAAE,CAACM,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC;MAC/E;IACA,KAAK,YAAY;MAAE;QACjB,MAAMoB,IAAI,GAAGJ,0BAA0B,CAACvB,GAAG,EAAEQ,OAAO,CAAC;QACrD,OAAQH,EAAE,IAAKsB,IAAI,CAACtB,EAAE,CAAC,CAAC6C,MAAM,CAAEnE,CAAC,IAAKtB,MAAM,CAACqI,MAAM,CAAC9F,GAAG,CAACkD,MAAM,CAACnE,CAAC,EAAEZ,MAAM,CAAC4H,kBAAkB,EAAE/F,GAAG,CAAC,CAAC,CAAC;MACrG;IACA,KAAK,SAAS;MAAE;QACd,MAAMpB,GAAG,GAAGb,QAAQ,CAACiI,YAAY,CAAC,MAAM9F,EAAE,CAACF,GAAG,CAACiF,CAAC,EAAE,EAAE;UAAE,GAAGzE,OAAO;UAAEC,SAAS,EAAE;QAAI,CAAE,CAAC,CAAC;QACrF,OAAQJ,EAAE,IAAKA,EAAE,CAACM,QAAQ,CAAC,IAAI,CAAC,CAAC0D,KAAK,CAAC,MAAMzF,GAAG,EAAE,CAACyB,EAAE,CAAC,CAAC;MACzD;IACA,KAAK,WAAW;MACd,OAAOH,EAAE,CAACF,GAAG,CAACiG,EAAE,EAAEzF,OAAO,CAAC;EAC9B;AACF,CAAC;AAOD;AACO,MAAM0F,iBAAiB,GAC5B1E,WAA6C,IACxB;EACrB,IAAI5D,SAAS,CAACuI,QAAQ,CAAC3E,WAAW,CAAC4E,GAAG,CAAC,EAAE;IACvC5E,WAAW,CAAC4E,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC9E,WAAW,CAAC4E,GAAG,CAAC;EAChD;EACA,IAAIxI,SAAS,CAACuI,QAAQ,CAAC3E,WAAW,CAAC+E,GAAG,CAAC,EAAE;IACvC/E,WAAW,CAAC+E,GAAG,GAAGF,IAAI,CAACC,MAAM,CAAC9E,WAAW,CAAC+E,GAAG,CAAC;EAChD;EACA,OAAO;IAAEzE,IAAI,EAAE,mBAAmB;IAAEN;EAAW,CAAE;AACnD,CAAC;AAOD;AAAA9B,OAAA,CAAAwG,iBAAA,GAAAA,iBAAA;AACO,MAAMM,iBAAiB,GAC5BhF,WAA6C,IACxB;EACrB,OAAO;IAAEM,IAAI,EAAE,mBAAmB;IAAEN;EAAW,CAAE;AACnD,CAAC;AAOD;AAAA9B,OAAA,CAAA8G,iBAAA,GAAAA,iBAAA;AACO,MAAMC,kBAAkB,GAC7BjF,WAA8C,IACxB;EACtB,OAAO;IAAEM,IAAI,EAAE,oBAAoB;IAAEN;EAAW,CAAE;AACpD,CAAC;AAOD;AAAA9B,OAAA,CAAA+G,kBAAA,GAAAA,kBAAA;AACO,MAAMC,gBAAgB,GAC3BlF,WAA4C,IACxB;EACpB,OAAO;IAAEM,IAAI,EAAE,kBAAkB;IAAEN;EAAW,CAAE;AAClD,CAAC;AAOD;AAAA9B,OAAA,CAAAgH,gBAAA,GAAAA,gBAAA;AACO,MAAMC,iBAAiB,GAC5BnF,WAA6C,IACxB;EACrB,OAAO;IAAEM,IAAI,EAAE,mBAAmB;IAAEN;EAAW,CAAE;AACnD,CAAC;AAUD;AAAA9B,OAAA,CAAAiH,iBAAA,GAAAA,iBAAA;AACO,MAAMjF,cAAc,GAAI1B,GAAmB,IAA6B;EAC7E,MAAM4G,gBAAgB,GAAG5G,GAAG,CAAC6G,WAAW,CAAC/I,GAAG,CAAC8I,gBAAgB,CAAC;EAC9D,MAAME,UAAU,GAAQ9G,GAAG,CAAC6G,WAAW,CAAC/I,GAAG,CAACiJ,sBAAsB,CAAC;EACnE,QAAQH,gBAAgB;IACtB;IACA,KAAK5I,OAAO,CAACgJ,iBAAiB;IAC9B,KAAKhJ,OAAO,CAACiJ,0BAA0B;MACrC,OAAOf,iBAAiB,CAAC;QAAEE,GAAG,EAAEU,UAAU,CAACI,gBAAgB,IAAIJ,UAAU,CAACK;MAAO,CAAE,CAAC;IACtF,KAAKnJ,OAAO,CAACoJ,cAAc;IAC3B,KAAKpJ,OAAO,CAACqJ,uBAAuB;MAClC,OAAOnB,iBAAiB,CAAC;QAAEK,GAAG,EAAEO,UAAU,CAACQ,gBAAgB,IAAIR,UAAU,CAACS;MAAO,CAAE,CAAC;IACtF,KAAKvJ,OAAO,CAACwJ,SAAS;MACpB,OAAOf,kBAAkB,CAAC,EAAE,CAAC;IAC/B,KAAKzI,OAAO,CAACyJ,aAAa;MAAE;QAC1B,MAAMrB,GAAG,GAAGU,UAAU,CAACK,OAAO;QAC9B,MAAMZ,GAAG,GAAGO,UAAU,CAACS,OAAO;QAC9B,MAAM/F,WAAW,GAAqC,EAAE;QACxD,IAAI5D,SAAS,CAACuI,QAAQ,CAACC,GAAG,CAAC,EAAE;UAC3B5E,WAAW,CAAC4E,GAAG,GAAGA,GAAG;QACvB;QACA,IAAIxI,SAAS,CAACuI,QAAQ,CAACI,GAAG,CAAC,EAAE;UAC3B/E,WAAW,CAAC+E,GAAG,GAAGA,GAAG;QACvB;QACA,OAAOL,iBAAiB,CAAC1E,WAAW,CAAC;MACvC;IACA;IACA,KAAKxD,OAAO,CAAC0J,uBAAuB;IACpC,KAAK1J,OAAO,CAAC2J,gCAAgC;MAAE;QAC7C,MAAMC,MAAM,GAAQ5H,GAAG,CAAC6G,WAAW,CAACD,gBAAgB,CAAC;QACrD,OAAOD,iBAAiB,CAAC;UAAEP,GAAG,EAAEwB,MAAM,CAACxB;QAAG,CAAE,CAAC;MAC/C;IACA,KAAKpI,OAAO,CAAC6J,oBAAoB;IACjC,KAAK7J,OAAO,CAAC8J,6BAA6B;MAAE;QAC1C,MAAMF,MAAM,GAAQ5H,GAAG,CAAC6G,WAAW,CAACD,gBAAgB,CAAC;QACrD,OAAOD,iBAAiB,CAAC;UAAEJ,GAAG,EAAEqB,MAAM,CAACrB;QAAG,CAAE,CAAC;MAC/C;IACA,KAAKvI,OAAO,CAAC+J,mBAAmB;MAAE;QAChC,MAAMH,MAAM,GAAQ5H,GAAG,CAAC6G,WAAW,CAACD,gBAAgB,CAAC;QACrD,MAAMR,GAAG,GAAGwB,MAAM,CAACxB,GAAG;QACtB,MAAMG,GAAG,GAAGqB,MAAM,CAACrB,GAAG;QACtB,MAAM/E,WAAW,GAAqC,EAAE;QACxD,IAAI5D,SAAS,CAACoK,QAAQ,CAAC5B,GAAG,CAAC,EAAE;UAC3B5E,WAAW,CAAC4E,GAAG,GAAGA,GAAG;QACvB;QACA,IAAIxI,SAAS,CAACoK,QAAQ,CAACzB,GAAG,CAAC,EAAE;UAC3B/E,WAAW,CAAC+E,GAAG,GAAGA,GAAG;QACvB;QACA,OAAOI,iBAAiB,CAACnF,WAAW,CAAC;MACvC;IACA;IACA,KAAKxD,OAAO,CAACiK,eAAe;MAC1B,OAAOzB,iBAAiB,CAAC;QAAE1F,SAAS,EAAEgG,UAAU,CAAChG;MAAS,CAAE,CAAC;IAC/D,KAAK9C,OAAO,CAACkK,eAAe;MAC1B,OAAO1B,iBAAiB,CAAC;QAAEzF,SAAS,EAAE+F,UAAU,CAAC/F;MAAS,CAAE,CAAC;IAC/D,KAAK/C,OAAO,CAACmK,YAAY;MACvB,OAAO3B,iBAAiB,CAAC;QAAE1F,SAAS,EAAEgG,UAAU,CAAChG,SAAS;QAAEC,SAAS,EAAE+F,UAAU,CAAC/F;MAAS,CAAE,CAAC;IAChG;IACA,KAAK/C,OAAO,CAACoK,cAAc;MACzB,OAAO1B,gBAAgB,CAAC;QAAE5F,SAAS,EAAEgG,UAAU,CAACuB;MAAQ,CAAE,CAAC;IAC7D,KAAKrK,OAAO,CAACsK,cAAc;MACzB,OAAO5B,gBAAgB,CAAC;QAAE3F,SAAS,EAAE+F,UAAU,CAACyB;MAAQ,CAAE,CAAC;IAC7D,KAAKvK,OAAO,CAACwK,gBAAgB;MAC3B,OAAO9B,gBAAgB,CAAC;QAAE5F,SAAS,EAAEgG,UAAU,CAACuB,QAAQ;QAAEtH,SAAS,EAAE+F,UAAU,CAACyB;MAAQ,CAAE,CAAC;EAC/F;AACF,CAAC;AAED;AAAA7I,OAAA,CAAAgC,cAAA,GAAAA,cAAA;AACO,MAAMD,kBAAkB,GAAGA,CAChCgH,EAA2B,EAC3BC,EAA2B,KACA;EAC3B,IAAID,EAAE,KAAKpG,SAAS,EAAE;IACpB,OAAOqG,EAAE;EACX;EACA,IAAIA,EAAE,KAAKrG,SAAS,EAAE;IACpB,OAAOoG,EAAE;EACX;EACA,QAAQA,EAAE,CAAC3G,IAAI;IACb,KAAK,kBAAkB;MAAE;QACvB,QAAQ4G,EAAE,CAAC5G,IAAI;UACb,KAAK,kBAAkB;YAAE;cACvB,MAAM6G,CAAC,GAAoC;gBACzC,GAAGF,EAAE,CAACjH,WAAW;gBACjB,GAAGkH,EAAE,CAAClH;eACP;cACD,MAAMV,SAAS,GAAG8H,MAAM,CAACH,EAAE,CAACjH,WAAW,CAACV,SAAS,EAAE4H,EAAE,CAAClH,WAAW,CAACV,SAAS,CAAC;cAC5E,IAAIlD,SAAS,CAACuI,QAAQ,CAACrF,SAAS,CAAC,EAAE;gBACjC6H,CAAC,CAAC7H,SAAS,GAAGA,SAAS;cACzB;cACA,MAAMC,SAAS,GAAG8H,MAAM,CAACJ,EAAE,CAACjH,WAAW,CAACT,SAAS,EAAE2H,EAAE,CAAClH,WAAW,CAACT,SAAS,CAAC;cAC5E,IAAInD,SAAS,CAACuI,QAAQ,CAACpF,SAAS,CAAC,EAAE;gBACjC4H,CAAC,CAAC5H,SAAS,GAAGA,SAAS;cACzB;cACA,OAAO2F,gBAAgB,CAACiC,CAAC,CAAC;YAC5B;QACF;QACA;MACF;IACA,KAAK,mBAAmB;MAAE;QACxB,QAAQD,EAAE,CAAC5G,IAAI;UACb,KAAK,mBAAmB;YAAE;cACxB,MAAM6G,CAAC,GAAqC;gBAC1C,GAAGF,EAAE,CAACjH,WAAW;gBACjB,GAAGkH,EAAE,CAAClH;eACP;cACD,MAAM4E,GAAG,GAAGwC,MAAM,CAACH,EAAE,CAACjH,WAAW,CAAC4E,GAAG,EAAEsC,EAAE,CAAClH,WAAW,CAAC4E,GAAG,CAAC;cAC1D,IAAIxI,SAAS,CAACuI,QAAQ,CAACC,GAAG,CAAC,EAAE;gBAC3BuC,CAAC,CAACvC,GAAG,GAAGA,GAAG;cACb;cACA,MAAMG,GAAG,GAAGsC,MAAM,CAACJ,EAAE,CAACjH,WAAW,CAAC+E,GAAG,EAAEmC,EAAE,CAAClH,WAAW,CAAC+E,GAAG,CAAC;cAC1D,IAAI3I,SAAS,CAACuI,QAAQ,CAACI,GAAG,CAAC,EAAE;gBAC3BoC,CAAC,CAACpC,GAAG,GAAGA,GAAG;cACb;cACA,OAAOL,iBAAiB,CAACyC,CAAC,CAAC;YAC7B;UACA,KAAK,oBAAoB;YAAE;cACzB,MAAMA,CAAC,GAAsC;gBAAE,GAAGD,EAAE,CAAClH;cAAW,CAAE;cAClE,MAAM4E,GAAG,GAAGwC,MAAM,CAACH,EAAE,CAACjH,WAAW,CAAC4E,GAAG,EAAEsC,EAAE,CAAClH,WAAW,CAAC4E,GAAG,CAAC;cAC1D,IAAIxI,SAAS,CAACuI,QAAQ,CAACC,GAAG,CAAC,EAAE;gBAC3BuC,CAAC,CAACvC,GAAG,GAAGA,GAAG;cACb;cACA,MAAMG,GAAG,GAAGsC,MAAM,CAACJ,EAAE,CAACjH,WAAW,CAAC+E,GAAG,EAAEmC,EAAE,CAAClH,WAAW,CAAC+E,GAAG,CAAC;cAC1D,IAAI3I,SAAS,CAACuI,QAAQ,CAACI,GAAG,CAAC,EAAE;gBAC3BoC,CAAC,CAACpC,GAAG,GAAGA,GAAG;cACb;cACA,OAAOE,kBAAkB,CAACkC,CAAC,CAAC;YAC9B;QACF;QACA;MACF;IACA,KAAK,mBAAmB;MAAE;QACxB,QAAQD,EAAE,CAAC5G,IAAI;UACb,KAAK,mBAAmB;YAAE;cACxB,MAAM6G,CAAC,GAAqC;gBAC1C,GAAGF,EAAE,CAACjH,WAAW;gBACjB,GAAGkH,EAAE,CAAClH;eACP;cACD,MAAM4E,GAAG,GAAGwC,MAAM,CAACH,EAAE,CAACjH,WAAW,CAAC4E,GAAG,EAAEsC,EAAE,CAAClH,WAAW,CAAC4E,GAAG,CAAC;cAC1D,IAAIxI,SAAS,CAACoK,QAAQ,CAAC5B,GAAG,CAAC,EAAE;gBAC3BuC,CAAC,CAACvC,GAAG,GAAGA,GAAG;cACb;cACA,MAAMG,GAAG,GAAGsC,MAAM,CAACJ,EAAE,CAACjH,WAAW,CAAC+E,GAAG,EAAEmC,EAAE,CAAClH,WAAW,CAAC+E,GAAG,CAAC;cAC1D,IAAI3I,SAAS,CAACoK,QAAQ,CAACzB,GAAG,CAAC,EAAE;gBAC3BoC,CAAC,CAACpC,GAAG,GAAGA,GAAG;cACb;cACA,OAAOI,iBAAiB,CAACgC,CAAC,CAAC;YAC7B;QACF;QACA;MACF;IACA,KAAK,mBAAmB;MAAE;QACxB,QAAQD,EAAE,CAAC5G,IAAI;UACb,KAAK,mBAAmB;YAAE;cACxB,MAAM6G,CAAC,GAAqC;gBAC1C,GAAGF,EAAE,CAACjH,WAAW;gBACjB,GAAGkH,EAAE,CAAClH;eACP;cACD,MAAMV,SAAS,GAAG8H,MAAM,CAACH,EAAE,CAACjH,WAAW,CAACV,SAAS,EAAE4H,EAAE,CAAClH,WAAW,CAACV,SAAS,CAAC;cAC5E,IAAIlD,SAAS,CAACuI,QAAQ,CAACrF,SAAS,CAAC,EAAE;gBACjC6H,CAAC,CAAC7H,SAAS,GAAGA,SAAS;cACzB;cACA,MAAMC,SAAS,GAAG8H,MAAM,CAACJ,EAAE,CAACjH,WAAW,CAACT,SAAS,EAAE2H,EAAE,CAAClH,WAAW,CAACT,SAAS,CAAC;cAC5E,IAAInD,SAAS,CAACuI,QAAQ,CAACpF,SAAS,CAAC,EAAE;gBACjC4H,CAAC,CAAC5H,SAAS,GAAGA,SAAS;cACzB;cACA,OAAOyF,iBAAiB,CAACmC,CAAC,CAAC;YAC7B;QACF;QACA;MACF;IACA,KAAK,oBAAoB;MAAE;QACzB,QAAQD,EAAE,CAAC5G,IAAI;UACb,KAAK,mBAAmB;UACxB,KAAK,oBAAoB;YAAE;cACzB,MAAM6G,CAAC,GAAsC;gBAAE,GAAGF,EAAE,CAACjH;cAAW,CAAE;cAClE,MAAM4E,GAAG,GAAGwC,MAAM,CAACH,EAAE,CAACjH,WAAW,CAAC4E,GAAG,EAAEsC,EAAE,CAAClH,WAAW,CAAC4E,GAAG,CAAC;cAC1D,IAAIxI,SAAS,CAACuI,QAAQ,CAACC,GAAG,CAAC,EAAE;gBAC3BuC,CAAC,CAACvC,GAAG,GAAGA,GAAG;cACb;cACA,MAAMG,GAAG,GAAGsC,MAAM,CAACJ,EAAE,CAACjH,WAAW,CAAC+E,GAAG,EAAEmC,EAAE,CAAClH,WAAW,CAAC+E,GAAG,CAAC;cAC1D,IAAI3I,SAAS,CAACuI,QAAQ,CAACI,GAAG,CAAC,EAAE;gBAC3BoC,CAAC,CAACpC,GAAG,GAAGA,GAAG;cACb;cACA,OAAOE,kBAAkB,CAACkC,CAAC,CAAC;YAC9B;QACF;QACA;MACF;EACF;AACF,CAAC;AAAAjJ,OAAA,CAAA+B,kBAAA,GAAAA,kBAAA;AAID,SAASmH,MAAMA,CACbE,EAA+B,EAC/BC,EAA+B;EAE/B,OAAOD,EAAE,KAAKzG,SAAS,GAAG0G,EAAE,GAAGA,EAAE,KAAK1G,SAAS,GAAGyG,EAAE,GAAGA,EAAE,IAAIC,EAAE,GAAGA,EAAE,GAAGD,EAAE;AAC3E;AAIA,SAASD,MAAMA,CACbC,EAA+B,EAC/BC,EAA+B;EAE/B,OAAOD,EAAE,KAAKzG,SAAS,GAAG0G,EAAE,GAAGA,EAAE,KAAK1G,SAAS,GAAGyG,EAAE,GAAGA,EAAE,IAAIC,EAAE,GAAGD,EAAE,GAAGC,EAAE;AAC3E"}
\ No newline at end of file
+{"version":3,"file":"Arbitrary.js","names":["Option","_interopRequireWildcard","require","Predicate","ReadonlyArray","AST","_filters","_hooks","_util","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","ArbitraryHookId","exports","arbitrary","handler","self","annotations","make","schema","go","ast","depthSize","record","fc","key","value","options","isSuspend","oneof","constant","array","tuple","minLength","maxLength","map","tuples","out","k","v","getHook","getAnnotation","getRefinementFromArbitrary","constraints","combineConstraints","getConstraints","from","hook","isSome","_tag","typeParameters","p","Error","literal","symbol","undefined","anything","string","float","integer","boolean","bigInt","s","Symbol","for","object","number","noDefaultInfinity","filter","Number","isNaN","components","head","span","spans","isStringKeyword","type","push","join","elements","hasOptionals","element","isOptional","rest","output","arb","indexes","chain","booleans","b","reverse","entries","splice","length","isNonEmptyReadonlyArray","tail","as","j","propertySignaturesTypes","propertySignatures","f","indexSignatures","is","parameter","arbs","requiredKeys","ps","name","o","d","types","enums","_","isNone","defaultParseOption","memoizeThunk","to","numberConstraints","isNumber","min","Math","fround","max","stringConstraints","integerConstraints","arrayConstraints","bigintConstraints","TypeAnnotationId","jsonSchema","JSONSchemaAnnotationId","GreaterThanTypeId","GreaterThanOrEqualToTypeId","exclusiveMinimum","minimum","LessThanTypeId","LessThanOrEqualToTypeId","exclusiveMaximum","maximum","IntTypeId","BetweenTypeId","GreaterThanBigintTypeId","GreaterThanOrEqualToBigintTypeId","params","LessThanBigintTypeId","LessThanOrEqualToBigintTypeId","BetweenBigintTypeId","isBigInt","MinLengthTypeId","MaxLengthTypeId","LengthTypeId","MinItemsTypeId","minItems","MaxItemsTypeId","maxItems","ItemsCountTypeId","c1","c2","c","getMax","getMin","n1","n2"],"sources":["../../src/Arbitrary.ts"],"sourcesContent":[null],"mappings":";;;;;;AAIA,IAAAA,MAAA,gBAAAC,uBAAA,eAAAC,OAAA;AACA,IAAAC,SAAA,gBAAAF,uBAAA,eAAAC,OAAA;AACA,IAAAE,aAAA,gBAAAH,uBAAA,eAAAC,OAAA;AAEA,IAAAG,GAAA,gBAAAJ,uBAAA,eAAAC,OAAA;AACA,IAAAI,QAAA,gBAAAL,uBAAA,eAAAC,OAAA;AACA,IAAAK,MAAA,gBAAAN,uBAAA,eAAAC,OAAA;AAEA,IAAAM,KAAA,gBAAAP,uBAAA,eAAAC,OAAA;AAA2C,SAAAO,yBAAAC,CAAA;EAAA,yBAAAC,OAAA;EAAA,IAAAC,CAAA,OAAAD,OAAA;IAAAE,CAAA,OAAAF,OAAA;EAAA,QAAAF,wBAAA,YAAAA,CAAAC,CAAA;IAAA,OAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA;EAAA,GAAAF,CAAA;AAAA;AAAA,SAAAT,wBAAAS,CAAA,EAAAE,CAAA;EAAA,KAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA;EAAA,aAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA;IAAAK,OAAA,EAAAL;EAAA;EAAA,IAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA;EAAA,IAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA;EAAA,IAAAQ,CAAA;MAAAC,SAAA;IAAA;IAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA;EAAA,SAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,EAAAc,CAAA;IAAA,IAAAI,CAAA,GAAAR,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA;IAAAI,CAAA,KAAAA,CAAA,CAAAX,GAAA,IAAAW,CAAA,CAAAC,GAAA,IAAAR,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAI,CAAA,IAAAV,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA;EAAA;EAAA,OAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAgB,GAAA,CAAAnB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAAA;AAZ3C;;;;AAuBA;;;;AAIO,MAAMY,eAAe,GAAAC,OAAA,CAAAD,eAAA,GAAkBvB,MAAM,CAACuB,eAAe;AAQpE;;;;AAIO,MAAME,SAAS,GAChBC,OAAiE,IAC9DC,IAA4B,IAA6BA,IAAI,CAACC,WAAW,CAAC;EAAE,CAACL,eAAe,GAAGG;AAAO,CAAE,CAAC;AAElH;;;;;;AAAAF,OAAA,CAAAC,SAAA,GAAAA,SAAA;AAMO,MAAMI,IAAI,GAAaC,MAA8B,IAAmBC,EAAE,CAACD,MAAM,CAACE,GAAG,EAAE,EAAE,CAAC;AAAAR,OAAA,CAAAK,IAAA,GAAAA,IAAA;AAEjG,MAAMI,SAAS,GAAG,CAAC;AAEnB,MAAMC,MAAM,GAAGA,CACbC,EAAoB,EACpBC,GAA2B,EAC3BC,KAA6B,EAC7BC,OAAgB,KACiC;EACjD,OAAO,CAACA,OAAO,CAACC,SAAS,GACvBJ,EAAE,CAACK,KAAK,CACN;IAAEP;EAAS,CAAE,EACbE,EAAE,CAACM,QAAQ,CAAC,EAAE,CAAC,EACfN,EAAE,CAACO,KAAK,CAACP,EAAE,CAACQ,KAAK,CAACP,GAAG,EAAEC,KAAK,CAAC,EAAE;IAAEO,SAAS,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAC,CAAE,CAAC,CAC/D,GACDV,EAAE,CAACO,KAAK,CAACP,EAAE,CAACQ,KAAK,CAACP,GAAG,EAAEC,KAAK,CAAC,CAAC,EAAES,GAAG,CAAEC,MAAM,IAAI;IAC7C,MAAMC,GAAG,GAAoB,EAAS;IACtC,KAAK,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,IAAIH,MAAM,EAAE;MAC3BC,GAAG,CAACC,CAAC,CAAC,GAAGC,CAAC;IACZ;IACA,OAAOF,GAAG;EACZ,CAAC,CAAC;AACN,CAAC;AAED,MAAMG,OAAO,gBAAGrD,GAAG,CAACsD,aAAa,CAE/B7B,eAAe,CAAC;AAOlB,MAAM8B,0BAA0B,GAAGA,CAACrB,GAAmB,EAAEM,OAAgB,KAAI;EAC3E,MAAMgB,WAAW,GAAGC,kBAAkB,CAACjB,OAAO,CAACgB,WAAW,EAAEE,cAAc,CAACxB,GAAG,CAAC,CAAC;EAChF,OAAOD,EAAE,CAACC,GAAG,CAACyB,IAAI,EAAEH,WAAW,GAAG;IAAE,GAAGhB,OAAO;IAAEgB;EAAW,CAAE,GAAGhB,OAAO,CAAC;AAC1E,CAAC;AAED,MAAMP,EAAE,GAAGA,CAACC,GAAY,EAAEM,OAAgB,KAAoB;EAC5D,MAAMoB,IAAI,GAAGP,OAAO,CAACnB,GAAG,CAAC;EACzB,IAAIvC,MAAM,CAACkE,MAAM,CAACD,IAAI,CAAC,EAAE;IACvB,QAAQ1B,GAAG,CAAC4B,IAAI;MACd,KAAK,aAAa;QAChB,OAAOF,IAAI,CAACrB,KAAK,CAAC,GAAGL,GAAG,CAAC6B,cAAc,CAACf,GAAG,CAAEgB,CAAC,IAAK/B,EAAE,CAAC+B,CAAC,EAAExB,OAAO,CAAC,CAAC,CAAC;MACrE,KAAK,YAAY;QACf,OAAOoB,IAAI,CAACrB,KAAK,CAACgB,0BAA0B,CAACrB,GAAG,EAAEM,OAAO,CAAC,CAAC;MAC7D;QACE,OAAOoB,IAAI,CAACrB,KAAK,EAAE;IACvB;EACF;EACA,QAAQL,GAAG,CAAC4B,IAAI;IACd,KAAK,aAAa;MAAE;QAClB,MAAM,IAAIG,KAAK,CAAC,oEAAoE/B,GAAG,GAAG,CAAC;MAC7F;IACA,KAAK,SAAS;MACZ,OAAQG,EAAE,IAAKA,EAAE,CAACM,QAAQ,CAACT,GAAG,CAACgC,OAAO,CAAC;IACzC,KAAK,cAAc;MACjB,OAAQ7B,EAAE,IAAKA,EAAE,CAACM,QAAQ,CAACT,GAAG,CAACiC,MAAM,CAAC;IACxC,KAAK,kBAAkB;IACvB,KAAK,aAAa;MAChB,OAAQ9B,EAAE,IAAKA,EAAE,CAACM,QAAQ,CAACyB,SAAS,CAAC;IACvC,KAAK,cAAc;MACjB,OAAO,MAAK;QACV,MAAM,IAAIH,KAAK,CAAC,uCAAuC,CAAC;MAC1D,CAAC;IACH,KAAK,gBAAgB;IACrB,KAAK,YAAY;MACf,OAAQ5B,EAAE,IAAKA,EAAE,CAACgC,QAAQ,EAAE;IAC9B,KAAK,eAAe;MAClB,OAAQhC,EAAE,IAAI;QACZ,IAAIG,OAAO,CAACgB,WAAW,EAAE;UACvB,QAAQhB,OAAO,CAACgB,WAAW,CAACM,IAAI;YAC9B,KAAK,mBAAmB;cACtB,OAAOzB,EAAE,CAACiC,MAAM,CAAC9B,OAAO,CAACgB,WAAW,CAACA,WAAW,CAAC;UACrD;QACF;QACA,OAAOnB,EAAE,CAACiC,MAAM,EAAE;MACpB,CAAC;IACH,KAAK,eAAe;MAClB,OAAQjC,EAAE,IAAI;QACZ,IAAIG,OAAO,CAACgB,WAAW,EAAE;UACvB,QAAQhB,OAAO,CAACgB,WAAW,CAACM,IAAI;YAC9B,KAAK,mBAAmB;cACtB,OAAOzB,EAAE,CAACkC,KAAK,CAAC/B,OAAO,CAACgB,WAAW,CAACA,WAAW,CAAC;YAClD,KAAK,oBAAoB;cACvB,OAAOnB,EAAE,CAACmC,OAAO,CAAChC,OAAO,CAACgB,WAAW,CAACA,WAAW,CAAC;UACtD;QACF;QACA,OAAOnB,EAAE,CAACkC,KAAK,EAAE;MACnB,CAAC;IACH,KAAK,gBAAgB;MACnB,OAAQlC,EAAE,IAAKA,EAAE,CAACoC,OAAO,EAAE;IAC7B,KAAK,eAAe;MAClB,OAAQpC,EAAE,IAAI;QACZ,IAAIG,OAAO,CAACgB,WAAW,EAAE;UACvB,QAAQhB,OAAO,CAACgB,WAAW,CAACM,IAAI;YAC9B,KAAK,mBAAmB;cACtB,OAAOzB,EAAE,CAACqC,MAAM,CAAClC,OAAO,CAACgB,WAAW,CAACA,WAAW,CAAC;UACrD;QACF;QACA,OAAOnB,EAAE,CAACqC,MAAM,EAAE;MACpB,CAAC;IACH,KAAK,eAAe;MAClB,OAAQrC,EAAE,IAAKA,EAAE,CAACiC,MAAM,EAAE,CAACtB,GAAG,CAAE2B,CAAC,IAAKC,MAAM,CAACC,GAAG,CAACF,CAAC,CAAC,CAAC;IACtD,KAAK,eAAe;MAClB,OAAQtC,EAAE,IAAKA,EAAE,CAACK,KAAK,CAACL,EAAE,CAACyC,MAAM,EAAE,EAAEzC,EAAE,CAACO,KAAK,CAACP,EAAE,CAACgC,QAAQ,EAAE,CAAC,CAAC;IAC/D,KAAK,iBAAiB;MAAE;QACtB,OAAQhC,EAAE,IAAI;UACZ,MAAMiC,MAAM,GAAGjC,EAAE,CAACiC,MAAM,CAAC;YAAEvB,SAAS,EAAE;UAAC,CAAE,CAAC;UAC1C,MAAMgC,MAAM,GAAG1C,EAAE,CAACkC,KAAK,CAAC;YAAES,iBAAiB,EAAE;UAAI,CAAE,CAAC,CAACC,MAAM,CAAEpE,CAAC,IAAK,CAACqE,MAAM,CAACC,KAAK,CAACtE,CAAC,CAAC,CAAC;UACpF,MAAMuE,UAAU,GAAgD,CAAC/C,EAAE,CAACM,QAAQ,CAACT,GAAG,CAACmD,IAAI,CAAC,CAAC;UACvF,KAAK,MAAMC,IAAI,IAAIpD,GAAG,CAACqD,KAAK,EAAE;YAC5B,IAAIvF,GAAG,CAACwF,eAAe,CAACF,IAAI,CAACG,IAAI,CAAC,EAAE;cAClCL,UAAU,CAACM,IAAI,CAACpB,MAAM,CAAC;YACzB,CAAC,MAAM;cACLc,UAAU,CAACM,IAAI,CAACX,MAAM,CAAC;YACzB;YACAK,UAAU,CAACM,IAAI,CAACrD,EAAE,CAACM,QAAQ,CAAC2C,IAAI,CAACpB,OAAO,CAAC,CAAC;UAC5C;UACA,OAAO7B,EAAE,CAACQ,KAAK,CAAC,GAAGuC,UAAU,CAAC,CAACpC,GAAG,CAAEuC,KAAK,IAAKA,KAAK,CAACI,IAAI,CAAC,EAAE,CAAC,CAAC;QAC/D,CAAC;MACH;IACA,KAAK,WAAW;MAAE;QAChB,MAAMC,QAAQ,GAA0B,EAAE;QAC1C,IAAIC,YAAY,GAAG,KAAK;QACxB,KAAK,MAAMC,OAAO,IAAI5D,GAAG,CAAC0D,QAAQ,EAAE;UAClCA,QAAQ,CAACF,IAAI,CAACzD,EAAE,CAAC6D,OAAO,CAACL,IAAI,EAAEjD,OAAO,CAAC,CAAC;UACxC,IAAIsD,OAAO,CAACC,UAAU,EAAE;YACtBF,YAAY,GAAG,IAAI;UACrB;QACF;QACA,MAAMG,IAAI,GAAG9D,GAAG,CAAC8D,IAAI,CAAChD,GAAG,CAAE3C,CAAC,IAAK4B,EAAE,CAAC5B,CAAC,EAAEmC,OAAO,CAAC,CAAC;QAChD,OAAQH,EAAE,IAAI;UACZ;UACA;UACA;UACA,IAAI4D,MAAM,GAAG5D,EAAE,CAACQ,KAAK,CAAC,GAAG+C,QAAQ,CAAC5C,GAAG,CAAEkD,GAAG,IAAKA,GAAG,CAAC7D,EAAE,CAAC,CAAC,CAAC;UACxD,IAAIwD,YAAY,EAAE;YAChB,MAAMM,OAAO,GAAG9D,EAAE,CAACQ,KAAK,CACtB,GAAGX,GAAG,CAAC0D,QAAQ,CAAC5C,GAAG,CAAE8C,OAAO,IAAKA,OAAO,CAACC,UAAU,GAAG1D,EAAE,CAACoC,OAAO,EAAE,GAAGpC,EAAE,CAACM,QAAQ,CAAC,IAAI,CAAC,CAAC,CACxF;YACDsD,MAAM,GAAGA,MAAM,CAACG,KAAK,CAAEvD,KAAK,IAC1BsD,OAAO,CAACnD,GAAG,CAAEqD,QAAQ,IAAI;cACvB,KAAK,MAAM,CAAC9E,CAAC,EAAE+E,CAAC,CAAC,IAAID,QAAQ,CAACE,OAAO,EAAE,CAACC,OAAO,EAAE,EAAE;gBACjD,IAAI,CAACF,CAAC,EAAE;kBACNzD,KAAK,CAAC4D,MAAM,CAACJ,QAAQ,CAACK,MAAM,GAAGnF,CAAC,EAAE,CAAC,CAAC;gBACtC;cACF;cACA,OAAOsB,KAAK;YACd,CAAC,CAAC,CACH;UACH;UAEA;UACA;UACA;UACA,IAAI9C,aAAa,CAAC4G,uBAAuB,CAACX,IAAI,CAAC,EAAE;YAC/C,MAAM,CAACX,IAAI,EAAE,GAAGuB,IAAI,CAAC,GAAGZ,IAAI;YAC5B,MAAME,GAAG,GAAGb,IAAI,CAAChD,EAAE,CAAC;YACpB,MAAMmB,WAAW,GAAGhB,OAAO,CAACgB,WAAW;YACvCyC,MAAM,GAAGA,MAAM,CAACG,KAAK,CAAES,EAAE,IAAI;cAC3B,IAAI3D,GAAG,GAAGb,EAAE,CAACO,KAAK,CAACsD,GAAG,CAAC;cACvB,IAAI1D,OAAO,CAACC,SAAS,EAAE;gBACrBS,GAAG,GAAGb,EAAE,CAACK,KAAK,CACZ;kBAAEP;gBAAS,CAAE,EACbE,EAAE,CAACM,QAAQ,CAAC,EAAE,CAAC,EACfN,EAAE,CAACO,KAAK,CAACsD,GAAG,EAAE;kBAAEpD,SAAS,EAAE,CAAC;kBAAEC,SAAS,EAAE;gBAAC,CAAE,CAAC,CAC9C;cACH,CAAC,MAAM,IAAIS,WAAW,IAAIA,WAAW,CAACM,IAAI,KAAK,kBAAkB,EAAE;gBACjEZ,GAAG,GAAGb,EAAE,CAACO,KAAK,CAACsD,GAAG,EAAE1C,WAAW,CAACA,WAAW,CAAC;cAC9C;cACA,OAAON,GAAG,CAACF,GAAG,CAAEgD,IAAI,IAAK,CAAC,GAAGa,EAAE,EAAE,GAAGb,IAAI,CAAC,CAAC;YAC5C,CAAC,CAAC;YACF;YACA;YACA;YACA,KAAK,IAAIc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACF,MAAM,EAAEI,CAAC,EAAE,EAAE;cACpCb,MAAM,GAAGA,MAAM,CAACG,KAAK,CAAES,EAAE,IAAKD,IAAI,CAACE,CAAC,CAAC,CAACzE,EAAE,CAAC,CAACW,GAAG,CAAEjC,CAAC,IAAK,CAAC,GAAG8F,EAAE,EAAE9F,CAAC,CAAC,CAAC,CAAC;YACnE;UACF;UAEA,OAAOkF,MAAM;QACf,CAAC;MACH;IACA,KAAK,aAAa;MAAE;QAClB,MAAMc,uBAAuB,GAAG7E,GAAG,CAAC8E,kBAAkB,CAAChE,GAAG,CAAEiE,CAAC,IAAKhF,EAAE,CAACgF,CAAC,CAACxB,IAAI,EAAEjD,OAAO,CAAC,CAAC;QACtF,MAAM0E,eAAe,GAAGhF,GAAG,CAACgF,eAAe,CAAClE,GAAG,CAAEmE,EAAE,IACjD,CAAClF,EAAE,CAACkF,EAAE,CAACC,SAAS,EAAE5E,OAAO,CAAC,EAAEP,EAAE,CAACkF,EAAE,CAAC1B,IAAI,EAAEjD,OAAO,CAAC,CAAU,CAC3D;QACD,OAAQH,EAAE,IAAI;UACZ,MAAMgF,IAAI,GAAQ,EAAE;UACpB,MAAMC,YAAY,GAAuB,EAAE;UAC3C;UACA;UACA;UACA,KAAK,IAAI/F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwF,uBAAuB,CAACL,MAAM,EAAEnF,CAAC,EAAE,EAAE;YACvD,MAAMgG,EAAE,GAAGrF,GAAG,CAAC8E,kBAAkB,CAACzF,CAAC,CAAC;YACpC,MAAMiG,IAAI,GAAGD,EAAE,CAACC,IAAI;YACpB,IAAI,CAACD,EAAE,CAACxB,UAAU,EAAE;cAClBuB,YAAY,CAAC5B,IAAI,CAAC8B,IAAI,CAAC;YACzB;YACAH,IAAI,CAACG,IAAI,CAAC,GAAGT,uBAAuB,CAACxF,CAAC,CAAC,CAACc,EAAE,CAAC;UAC7C;UACA,IAAI4D,MAAM,GAAG5D,EAAE,CAACD,MAAM,CAAWiF,IAAI,EAAE;YAAEC;UAAY,CAAE,CAAC;UACxD;UACA;UACA;UACA,KAAK,IAAI/F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2F,eAAe,CAACR,MAAM,EAAEnF,CAAC,EAAE,EAAE;YAC/C,MAAM6F,SAAS,GAAGF,eAAe,CAAC3F,CAAC,CAAC,CAAC,CAAC,CAAC,CAACc,EAAE,CAAC;YAC3C,MAAMoD,IAAI,GAAGyB,eAAe,CAAC3F,CAAC,CAAC,CAAC,CAAC,CAAC,CAACc,EAAE,CAAC;YACtC4D,MAAM,GAAGA,MAAM,CAACG,KAAK,CAAEqB,CAAC,IAAI;cAC1B,OAAOrF,MAAM,CAACC,EAAE,EAAE+E,SAAS,EAAE3B,IAAI,EAAEjD,OAAO,CAAC,CAACQ,GAAG,CAAE0E,CAAC,KAAM;gBAAE,GAAGA,CAAC;gBAAE,GAAGD;cAAC,CAAE,CAAC,CAAC;YAC1E,CAAC,CAAC;UACJ;UAEA,OAAOxB,MAAM;QACf,CAAC;MACH;IACA,KAAK,OAAO;MAAE;QACZ,MAAM0B,KAAK,GAAGzF,GAAG,CAACyF,KAAK,CAAC3E,GAAG,CAAExC,CAAC,IAAKyB,EAAE,CAACzB,CAAC,EAAEgC,OAAO,CAAC,CAAC;QAClD,OAAQH,EAAE,IAAKA,EAAE,CAACK,KAAK,CAAC;UAAEP;QAAS,CAAE,EAAE,GAAGwF,KAAK,CAAC3E,GAAG,CAAEkD,GAAG,IAAKA,GAAG,CAAC7D,EAAE,CAAC,CAAC,CAAC;MACxE;IACA,KAAK,OAAO;MAAE;QACZ,IAAIH,GAAG,CAAC0F,KAAK,CAAClB,MAAM,KAAK,CAAC,EAAE;UAC1B,MAAM,IAAIzC,KAAK,CAAC,6CAA6C,CAAC;QAChE;QACA,OAAQ5B,EAAE,IAAKA,EAAE,CAACK,KAAK,CAAC,GAAGR,GAAG,CAAC0F,KAAK,CAAC5E,GAAG,CAAC,CAAC,CAAC6E,CAAC,EAAEtF,KAAK,CAAC,KAAKF,EAAE,CAACM,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC;MAC/E;IACA,KAAK,YAAY;MAAE;QACjB,MAAMoB,IAAI,GAAGJ,0BAA0B,CAACrB,GAAG,EAAEM,OAAO,CAAC;QACrD,OAAQH,EAAE,IAAKsB,IAAI,CAACtB,EAAE,CAAC,CAAC4C,MAAM,CAAElE,CAAC,IAAKpB,MAAM,CAACmI,MAAM,CAAC5F,GAAG,CAAC+C,MAAM,CAAClE,CAAC,EAAEf,GAAG,CAAC+H,kBAAkB,EAAE7F,GAAG,CAAC,CAAC,CAAC;MAClG;IACA,KAAK,SAAS;MAAE;QACd,MAAMtB,GAAG,GAAGT,KAAK,CAAC6H,YAAY,CAAC,MAAM/F,EAAE,CAACC,GAAG,CAAC+E,CAAC,EAAE,EAAE;UAAE,GAAGzE,OAAO;UAAEC,SAAS,EAAE;QAAI,CAAE,CAAC,CAAC;QAClF,OAAQJ,EAAE,IAAKA,EAAE,CAACM,QAAQ,CAAC,IAAI,CAAC,CAACyD,KAAK,CAAC,MAAMxF,GAAG,EAAE,CAACyB,EAAE,CAAC,CAAC;MACzD;IACA,KAAK,gBAAgB;MACnB,OAAOJ,EAAE,CAACC,GAAG,CAAC+F,EAAE,EAAEzF,OAAO,CAAC;EAC9B;AACF,CAAC;AAOD;AACO,MAAM0F,iBAAiB,GAC5B1E,WAA6C,IACxB;EACrB,IAAI1D,SAAS,CAACqI,QAAQ,CAAC3E,WAAW,CAAC4E,GAAG,CAAC,EAAE;IACvC5E,WAAW,CAAC4E,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC9E,WAAW,CAAC4E,GAAG,CAAC;EAChD;EACA,IAAItI,SAAS,CAACqI,QAAQ,CAAC3E,WAAW,CAAC+E,GAAG,CAAC,EAAE;IACvC/E,WAAW,CAAC+E,GAAG,GAAGF,IAAI,CAACC,MAAM,CAAC9E,WAAW,CAAC+E,GAAG,CAAC;EAChD;EACA,OAAO;IAAEzE,IAAI,EAAE,mBAAmB;IAAEN;EAAW,CAAE;AACnD,CAAC;AAOD;AAAA9B,OAAA,CAAAwG,iBAAA,GAAAA,iBAAA;AACO,MAAMM,iBAAiB,GAC5BhF,WAA6C,IACxB;EACrB,OAAO;IAAEM,IAAI,EAAE,mBAAmB;IAAEN;EAAW,CAAE;AACnD,CAAC;AAOD;AAAA9B,OAAA,CAAA8G,iBAAA,GAAAA,iBAAA;AACO,MAAMC,kBAAkB,GAC7BjF,WAA8C,IACxB;EACtB,OAAO;IAAEM,IAAI,EAAE,oBAAoB;IAAEN;EAAW,CAAE;AACpD,CAAC;AAOD;AAAA9B,OAAA,CAAA+G,kBAAA,GAAAA,kBAAA;AACO,MAAMC,gBAAgB,GAC3BlF,WAA4C,IACxB;EACpB,OAAO;IAAEM,IAAI,EAAE,kBAAkB;IAAEN;EAAW,CAAE;AAClD,CAAC;AAOD;AAAA9B,OAAA,CAAAgH,gBAAA,GAAAA,gBAAA;AACO,MAAMC,iBAAiB,GAC5BnF,WAA6C,IACxB;EACrB,OAAO;IAAEM,IAAI,EAAE,mBAAmB;IAAEN;EAAW,CAAE;AACnD,CAAC;AAUD;AAAA9B,OAAA,CAAAiH,iBAAA,GAAAA,iBAAA;AACO,MAAMjF,cAAc,GAAIxB,GAAmB,IAA6B;EAC7E,MAAM0G,gBAAgB,GAAG1G,GAAG,CAACJ,WAAW,CAAC9B,GAAG,CAAC4I,gBAAgB,CAAC;EAC9D,MAAMC,UAAU,GAAQ3G,GAAG,CAACJ,WAAW,CAAC9B,GAAG,CAAC8I,sBAAsB,CAAC;EACnE,QAAQF,gBAAgB;IACtB;IACA,KAAK3I,QAAQ,CAAC8I,iBAAiB;IAC/B,KAAK9I,QAAQ,CAAC+I,0BAA0B;MACtC,OAAOd,iBAAiB,CAAC;QAAEE,GAAG,EAAES,UAAU,CAACI,gBAAgB,IAAIJ,UAAU,CAACK;MAAO,CAAE,CAAC;IACtF,KAAKjJ,QAAQ,CAACkJ,cAAc;IAC5B,KAAKlJ,QAAQ,CAACmJ,uBAAuB;MACnC,OAAOlB,iBAAiB,CAAC;QAAEK,GAAG,EAAEM,UAAU,CAACQ,gBAAgB,IAAIR,UAAU,CAACS;MAAO,CAAE,CAAC;IACtF,KAAKrJ,QAAQ,CAACsJ,SAAS;MACrB,OAAOd,kBAAkB,CAAC,EAAE,CAAC;IAC/B,KAAKxI,QAAQ,CAACuJ,aAAa;MAAE;QAC3B,MAAMpB,GAAG,GAAGS,UAAU,CAACK,OAAO;QAC9B,MAAMX,GAAG,GAAGM,UAAU,CAACS,OAAO;QAC9B,MAAM9F,WAAW,GAAqC,EAAE;QACxD,IAAI1D,SAAS,CAACqI,QAAQ,CAACC,GAAG,CAAC,EAAE;UAC3B5E,WAAW,CAAC4E,GAAG,GAAGA,GAAG;QACvB;QACA,IAAItI,SAAS,CAACqI,QAAQ,CAACI,GAAG,CAAC,EAAE;UAC3B/E,WAAW,CAAC+E,GAAG,GAAGA,GAAG;QACvB;QACA,OAAOL,iBAAiB,CAAC1E,WAAW,CAAC;MACvC;IACA;IACA,KAAKvD,QAAQ,CAACwJ,uBAAuB;IACrC,KAAKxJ,QAAQ,CAACyJ,gCAAgC;MAAE;QAC9C,MAAMC,MAAM,GAAQzH,GAAG,CAACJ,WAAW,CAAC8G,gBAAgB,CAAC;QACrD,OAAOD,iBAAiB,CAAC;UAAEP,GAAG,EAAEuB,MAAM,CAACvB;QAAG,CAAE,CAAC;MAC/C;IACA,KAAKnI,QAAQ,CAAC2J,oBAAoB;IAClC,KAAK3J,QAAQ,CAAC4J,6BAA6B;MAAE;QAC3C,MAAMF,MAAM,GAAQzH,GAAG,CAACJ,WAAW,CAAC8G,gBAAgB,CAAC;QACrD,OAAOD,iBAAiB,CAAC;UAAEJ,GAAG,EAAEoB,MAAM,CAACpB;QAAG,CAAE,CAAC;MAC/C;IACA,KAAKtI,QAAQ,CAAC6J,mBAAmB;MAAE;QACjC,MAAMH,MAAM,GAAQzH,GAAG,CAACJ,WAAW,CAAC8G,gBAAgB,CAAC;QACrD,MAAMR,GAAG,GAAGuB,MAAM,CAACvB,GAAG;QACtB,MAAMG,GAAG,GAAGoB,MAAM,CAACpB,GAAG;QACtB,MAAM/E,WAAW,GAAqC,EAAE;QACxD,IAAI1D,SAAS,CAACiK,QAAQ,CAAC3B,GAAG,CAAC,EAAE;UAC3B5E,WAAW,CAAC4E,GAAG,GAAGA,GAAG;QACvB;QACA,IAAItI,SAAS,CAACiK,QAAQ,CAACxB,GAAG,CAAC,EAAE;UAC3B/E,WAAW,CAAC+E,GAAG,GAAGA,GAAG;QACvB;QACA,OAAOI,iBAAiB,CAACnF,WAAW,CAAC;MACvC;IACA;IACA,KAAKvD,QAAQ,CAAC+J,eAAe;MAC3B,OAAOxB,iBAAiB,CAAC;QAAE1F,SAAS,EAAE+F,UAAU,CAAC/F;MAAS,CAAE,CAAC;IAC/D,KAAK7C,QAAQ,CAACgK,eAAe;MAC3B,OAAOzB,iBAAiB,CAAC;QAAEzF,SAAS,EAAE8F,UAAU,CAAC9F;MAAS,CAAE,CAAC;IAC/D,KAAK9C,QAAQ,CAACiK,YAAY;MACxB,OAAO1B,iBAAiB,CAAC;QAAE1F,SAAS,EAAE+F,UAAU,CAAC/F,SAAS;QAAEC,SAAS,EAAE8F,UAAU,CAAC9F;MAAS,CAAE,CAAC;IAChG;IACA,KAAK9C,QAAQ,CAACkK,cAAc;MAC1B,OAAOzB,gBAAgB,CAAC;QAAE5F,SAAS,EAAE+F,UAAU,CAACuB;MAAQ,CAAE,CAAC;IAC7D,KAAKnK,QAAQ,CAACoK,cAAc;MAC1B,OAAO3B,gBAAgB,CAAC;QAAE3F,SAAS,EAAE8F,UAAU,CAACyB;MAAQ,CAAE,CAAC;IAC7D,KAAKrK,QAAQ,CAACsK,gBAAgB;MAC5B,OAAO7B,gBAAgB,CAAC;QAAE5F,SAAS,EAAE+F,UAAU,CAACuB,QAAQ;QAAErH,SAAS,EAAE8F,UAAU,CAACyB;MAAQ,CAAE,CAAC;EAC/F;AACF,CAAC;AAED;AAAA5I,OAAA,CAAAgC,cAAA,GAAAA,cAAA;AACO,MAAMD,kBAAkB,GAAGA,CAChC+G,EAA2B,EAC3BC,EAA2B,KACA;EAC3B,IAAID,EAAE,KAAKpG,SAAS,EAAE;IACpB,OAAOqG,EAAE;EACX;EACA,IAAIA,EAAE,KAAKrG,SAAS,EAAE;IACpB,OAAOoG,EAAE;EACX;EACA,QAAQA,EAAE,CAAC1G,IAAI;IACb,KAAK,kBAAkB;MAAE;QACvB,QAAQ2G,EAAE,CAAC3G,IAAI;UACb,KAAK,kBAAkB;YAAE;cACvB,MAAM4G,CAAC,GAAoC;gBACzC,GAAGF,EAAE,CAAChH,WAAW;gBACjB,GAAGiH,EAAE,CAACjH;eACP;cACD,MAAMV,SAAS,GAAG6H,MAAM,CAACH,EAAE,CAAChH,WAAW,CAACV,SAAS,EAAE2H,EAAE,CAACjH,WAAW,CAACV,SAAS,CAAC;cAC5E,IAAIhD,SAAS,CAACqI,QAAQ,CAACrF,SAAS,CAAC,EAAE;gBACjC4H,CAAC,CAAC5H,SAAS,GAAGA,SAAS;cACzB;cACA,MAAMC,SAAS,GAAG6H,MAAM,CAACJ,EAAE,CAAChH,WAAW,CAACT,SAAS,EAAE0H,EAAE,CAACjH,WAAW,CAACT,SAAS,CAAC;cAC5E,IAAIjD,SAAS,CAACqI,QAAQ,CAACpF,SAAS,CAAC,EAAE;gBACjC2H,CAAC,CAAC3H,SAAS,GAAGA,SAAS;cACzB;cACA,OAAO2F,gBAAgB,CAACgC,CAAC,CAAC;YAC5B;QACF;QACA;MACF;IACA,KAAK,mBAAmB;MAAE;QACxB,QAAQD,EAAE,CAAC3G,IAAI;UACb,KAAK,mBAAmB;YAAE;cACxB,MAAM4G,CAAC,GAAqC;gBAC1C,GAAGF,EAAE,CAAChH,WAAW;gBACjB,GAAGiH,EAAE,CAACjH;eACP;cACD,MAAM4E,GAAG,GAAGuC,MAAM,CAACH,EAAE,CAAChH,WAAW,CAAC4E,GAAG,EAAEqC,EAAE,CAACjH,WAAW,CAAC4E,GAAG,CAAC;cAC1D,IAAItI,SAAS,CAACqI,QAAQ,CAACC,GAAG,CAAC,EAAE;gBAC3BsC,CAAC,CAACtC,GAAG,GAAGA,GAAG;cACb;cACA,MAAMG,GAAG,GAAGqC,MAAM,CAACJ,EAAE,CAAChH,WAAW,CAAC+E,GAAG,EAAEkC,EAAE,CAACjH,WAAW,CAAC+E,GAAG,CAAC;cAC1D,IAAIzI,SAAS,CAACqI,QAAQ,CAACI,GAAG,CAAC,EAAE;gBAC3BmC,CAAC,CAACnC,GAAG,GAAGA,GAAG;cACb;cACA,OAAOL,iBAAiB,CAACwC,CAAC,CAAC;YAC7B;UACA,KAAK,oBAAoB;YAAE;cACzB,MAAMA,CAAC,GAAsC;gBAAE,GAAGD,EAAE,CAACjH;cAAW,CAAE;cAClE,MAAM4E,GAAG,GAAGuC,MAAM,CAACH,EAAE,CAAChH,WAAW,CAAC4E,GAAG,EAAEqC,EAAE,CAACjH,WAAW,CAAC4E,GAAG,CAAC;cAC1D,IAAItI,SAAS,CAACqI,QAAQ,CAACC,GAAG,CAAC,EAAE;gBAC3BsC,CAAC,CAACtC,GAAG,GAAGA,GAAG;cACb;cACA,MAAMG,GAAG,GAAGqC,MAAM,CAACJ,EAAE,CAAChH,WAAW,CAAC+E,GAAG,EAAEkC,EAAE,CAACjH,WAAW,CAAC+E,GAAG,CAAC;cAC1D,IAAIzI,SAAS,CAACqI,QAAQ,CAACI,GAAG,CAAC,EAAE;gBAC3BmC,CAAC,CAACnC,GAAG,GAAGA,GAAG;cACb;cACA,OAAOE,kBAAkB,CAACiC,CAAC,CAAC;YAC9B;QACF;QACA;MACF;IACA,KAAK,mBAAmB;MAAE;QACxB,QAAQD,EAAE,CAAC3G,IAAI;UACb,KAAK,mBAAmB;YAAE;cACxB,MAAM4G,CAAC,GAAqC;gBAC1C,GAAGF,EAAE,CAAChH,WAAW;gBACjB,GAAGiH,EAAE,CAACjH;eACP;cACD,MAAM4E,GAAG,GAAGuC,MAAM,CAACH,EAAE,CAAChH,WAAW,CAAC4E,GAAG,EAAEqC,EAAE,CAACjH,WAAW,CAAC4E,GAAG,CAAC;cAC1D,IAAItI,SAAS,CAACiK,QAAQ,CAAC3B,GAAG,CAAC,EAAE;gBAC3BsC,CAAC,CAACtC,GAAG,GAAGA,GAAG;cACb;cACA,MAAMG,GAAG,GAAGqC,MAAM,CAACJ,EAAE,CAAChH,WAAW,CAAC+E,GAAG,EAAEkC,EAAE,CAACjH,WAAW,CAAC+E,GAAG,CAAC;cAC1D,IAAIzI,SAAS,CAACiK,QAAQ,CAACxB,GAAG,CAAC,EAAE;gBAC3BmC,CAAC,CAACnC,GAAG,GAAGA,GAAG;cACb;cACA,OAAOI,iBAAiB,CAAC+B,CAAC,CAAC;YAC7B;QACF;QACA;MACF;IACA,KAAK,mBAAmB;MAAE;QACxB,QAAQD,EAAE,CAAC3G,IAAI;UACb,KAAK,mBAAmB;YAAE;cACxB,MAAM4G,CAAC,GAAqC;gBAC1C,GAAGF,EAAE,CAAChH,WAAW;gBACjB,GAAGiH,EAAE,CAACjH;eACP;cACD,MAAMV,SAAS,GAAG6H,MAAM,CAACH,EAAE,CAAChH,WAAW,CAACV,SAAS,EAAE2H,EAAE,CAACjH,WAAW,CAACV,SAAS,CAAC;cAC5E,IAAIhD,SAAS,CAACqI,QAAQ,CAACrF,SAAS,CAAC,EAAE;gBACjC4H,CAAC,CAAC5H,SAAS,GAAGA,SAAS;cACzB;cACA,MAAMC,SAAS,GAAG6H,MAAM,CAACJ,EAAE,CAAChH,WAAW,CAACT,SAAS,EAAE0H,EAAE,CAACjH,WAAW,CAACT,SAAS,CAAC;cAC5E,IAAIjD,SAAS,CAACqI,QAAQ,CAACpF,SAAS,CAAC,EAAE;gBACjC2H,CAAC,CAAC3H,SAAS,GAAGA,SAAS;cACzB;cACA,OAAOyF,iBAAiB,CAACkC,CAAC,CAAC;YAC7B;QACF;QACA;MACF;IACA,KAAK,oBAAoB;MAAE;QACzB,QAAQD,EAAE,CAAC3G,IAAI;UACb,KAAK,mBAAmB;UACxB,KAAK,oBAAoB;YAAE;cACzB,MAAM4G,CAAC,GAAsC;gBAAE,GAAGF,EAAE,CAAChH;cAAW,CAAE;cAClE,MAAM4E,GAAG,GAAGuC,MAAM,CAACH,EAAE,CAAChH,WAAW,CAAC4E,GAAG,EAAEqC,EAAE,CAACjH,WAAW,CAAC4E,GAAG,CAAC;cAC1D,IAAItI,SAAS,CAACqI,QAAQ,CAACC,GAAG,CAAC,EAAE;gBAC3BsC,CAAC,CAACtC,GAAG,GAAGA,GAAG;cACb;cACA,MAAMG,GAAG,GAAGqC,MAAM,CAACJ,EAAE,CAAChH,WAAW,CAAC+E,GAAG,EAAEkC,EAAE,CAACjH,WAAW,CAAC+E,GAAG,CAAC;cAC1D,IAAIzI,SAAS,CAACqI,QAAQ,CAACI,GAAG,CAAC,EAAE;gBAC3BmC,CAAC,CAACnC,GAAG,GAAGA,GAAG;cACb;cACA,OAAOE,kBAAkB,CAACiC,CAAC,CAAC;YAC9B;QACF;QACA;MACF;EACF;AACF,CAAC;AAAAhJ,OAAA,CAAA+B,kBAAA,GAAAA,kBAAA;AAID,SAASkH,MAAMA,CACbE,EAA+B,EAC/BC,EAA+B;EAE/B,OAAOD,EAAE,KAAKzG,SAAS,GAAG0G,EAAE,GAAGA,EAAE,KAAK1G,SAAS,GAAGyG,EAAE,GAAGA,EAAE,IAAIC,EAAE,GAAGA,EAAE,GAAGD,EAAE;AAC3E;AAIA,SAASD,MAAMA,CACbC,EAA+B,EAC/BC,EAA+B;EAE/B,OAAOD,EAAE,KAAKzG,SAAS,GAAG0G,EAAE,GAAGA,EAAE,KAAK1G,SAAS,GAAGyG,EAAE,GAAGA,EAAE,IAAIC,EAAE,GAAGD,EAAE,GAAGC,EAAE;AAC3E"}
\ No newline at end of file
diff --git a/dist/cjs/ArrayFormatter.js b/dist/cjs/ArrayFormatter.js
index ae79b61d8c26a7a977d06a96a2d759579dc87a29..f0c1955d25d4a277707c95be2ad51bf6d8087cdd 100644
--- a/dist/cjs/ArrayFormatter.js
+++ b/dist/cjs/ArrayFormatter.js
@@ -3,10 +3,9 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.formatIssues = exports.formatIssue = exports.formatError = void 0;
-var Option = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Option"));
+exports.formatIssueEffect = exports.formatIssue = exports.formatErrorEffect = exports.formatError = void 0;
+var Effect = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Effect"));
 var ReadonlyArray = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ReadonlyArray"));
-var AST = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./AST.js"));
 var TreeFormatter = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./TreeFormatter.js"));
 function _getRequireWildcardCache(e) {
   if ("function" != typeof WeakMap) return null;
@@ -37,112 +36,118 @@ function _interopRequireWildcard(e, r) {
  * @since 1.0.0
  */
 
+/**
+ * @category formatting
+ * @since 1.0.0
+ */
+const formatIssueEffect = issue => go(issue);
+/**
+ * @category formatting
+ * @since 1.0.0
+ */
+exports.formatIssueEffect = formatIssueEffect;
+const formatIssue = issue => Effect.runSync(formatIssueEffect(issue));
+/**
+ * @category formatting
+ * @since 1.0.0
+ */
+exports.formatIssue = formatIssue;
+const formatErrorEffect = error => formatIssueEffect(error.error);
+/**
+ * @category formatting
+ * @since 1.0.0
+ */
+exports.formatErrorEffect = formatErrorEffect;
+const formatError = error => formatIssue(error.error);
+exports.formatError = formatError;
 const go = (e, path = []) => {
   const _tag = e._tag;
   switch (_tag) {
     case "Type":
-      return [{
+      return Effect.map(TreeFormatter.formatTypeMessage(e), message => [{
         _tag,
         path,
-        message: TreeFormatter.formatTypeMessage(e)
-      }];
+        message
+      }]);
     case "Forbidden":
-      return [{
+      return Effect.succeed([{
         _tag,
         path,
         message: TreeFormatter.formatForbiddenMessage(e)
-      }];
+      }]);
     case "Unexpected":
-      return [{
+      return Effect.succeed([{
         _tag,
         path,
-        message: `is unexpected, expected ${AST.format(e.ast, true)}`
-      }];
+        message: `is unexpected, expected ${e.ast.toString(true)}`
+      }]);
     case "Missing":
-      return [{
+      return Effect.succeed([{
         _tag,
         path,
         message: "is missing"
-      }];
+      }]);
     case "Union":
-      return Option.match(TreeFormatter.getMessage(e), {
-        onNone: () => ReadonlyArray.flatMap(e.errors, e => {
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () => Effect.map(Effect.forEach(e.errors, e => {
           switch (e._tag) {
             case "Member":
               return go(e.error, path);
             default:
               return go(e, path);
           }
-        }),
-        onSome: message => [{
+        }), ReadonlyArray.flatten),
+        onSuccess: message => Effect.succeed([{
           _tag,
           path,
           message
-        }]
+        }])
       });
-    case "Tuple":
-      return Option.match(TreeFormatter.getMessage(e), {
-        onNone: () => ReadonlyArray.flatMap(e.errors, index => go(index.error, [...path, index.index])),
-        onSome: message => [{
+    case "TupleType":
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () => Effect.map(Effect.forEach(e.errors, index => go(index.error, [...path, index.index])), ReadonlyArray.flatten),
+        onSuccess: message => Effect.succeed([{
           _tag,
           path,
           message
-        }]
+        }])
       });
     case "TypeLiteral":
-      return Option.match(TreeFormatter.getMessage(e), {
-        onNone: () => ReadonlyArray.flatMap(e.errors, key => go(key.error, [...path, key.key])),
-        onSome: message => [{
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () => Effect.map(Effect.forEach(e.errors, key => go(key.error, [...path, key.key])), ReadonlyArray.flatten),
+        onSuccess: message => Effect.succeed([{
           _tag,
           path,
           message
-        }]
+        }])
       });
-    case "Transform":
-      return Option.match(TreeFormatter.getTransformMessage(e), {
-        onNone: () => go(e.error, path),
-        onSome: message => [{
+    case "Transformation":
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () => go(e.error, path),
+        onSuccess: message => Effect.succeed([{
           _tag,
           path,
           message
-        }]
+        }])
       });
     case "Refinement":
-      return Option.match(TreeFormatter.getRefinementMessage(e), {
-        onNone: () => go(e.error, path),
-        onSome: message => [{
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () => go(e.error, path),
+        onSuccess: message => Effect.succeed([{
           _tag,
           path,
           message
-        }]
+        }])
       });
     case "Declaration":
-      return Option.match(TreeFormatter.getMessage(e), {
-        onNone: () => go(e.error, path),
-        onSome: message => [{
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () => go(e.error, path),
+        onSuccess: message => Effect.succeed([{
           _tag,
           path,
           message
-        }]
+        }])
       });
   }
 };
-/**
- * @category formatting
- * @since 1.0.0
- */
-const formatIssues = issues => ReadonlyArray.flatMap(issues, e => go(e));
-/**
- * @category formatting
- * @since 1.0.0
- */
-exports.formatIssues = formatIssues;
-const formatIssue = error => formatIssues([error]);
-/**
- * @category formatting
- * @since 1.0.0
- */
-exports.formatIssue = formatIssue;
-const formatError = error => formatIssue(error.error);
-exports.formatError = formatError;
 //# sourceMappingURL=ArrayFormatter.js.map
\ No newline at end of file
diff --git a/dist/cjs/ArrayFormatter.js.map b/dist/cjs/ArrayFormatter.js.map
index dadd2aac5af06f0b4f8f146810f3dea89ebde5ec..5a30d310affd11991afa3612bef3f8a40033ffa1 100644
--- a/dist/cjs/ArrayFormatter.js.map
+++ b/dist/cjs/ArrayFormatter.js.map
@@ -1 +1 @@
-{"version":3,"file":"ArrayFormatter.js","names":["Option","_interopRequireWildcard","require","ReadonlyArray","AST","TreeFormatter","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","go","path","_tag","message","formatTypeMessage","formatForbiddenMessage","format","ast","match","getMessage","onNone","flatMap","errors","error","onSome","index","key","getTransformMessage","getRefinementMessage","formatIssues","issues","exports","formatIssue","formatError"],"sources":["../../src/ArrayFormatter.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"ArrayFormatter.js","names":["Effect","_interopRequireWildcard","require","ReadonlyArray","TreeFormatter","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","formatIssueEffect","issue","go","exports","formatIssue","runSync","formatErrorEffect","error","formatError","path","_tag","map","formatTypeMessage","message","succeed","formatForbiddenMessage","ast","toString","matchEffect","getMessage","onFailure","forEach","errors","flatten","onSuccess","index","key"],"sources":["../../src/ArrayFormatter.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/Equivalence.js b/dist/cjs/Equivalence.js
index 62777caf9ed7bce6e6867efdd06002b4a448b963..ec0266e88b1bc307da78f4be400b08731da5e3c4 100644
--- a/dist/cjs/Equivalence.js
+++ b/dist/cjs/Equivalence.js
@@ -10,9 +10,9 @@ var Option = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/
 var Predicate = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Predicate"));
 var ReadonlyArray = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ReadonlyArray"));
 var AST = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./AST.js"));
-var Internal = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/ast.js"));
-var hooks = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/hooks.js"));
-var InternalSchema = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/schema.js"));
+var _hooks = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/hooks.js"));
+var _schema = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/schema.js"));
+var _util = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/util.js"));
 var Parser = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./Parser.js"));
 function _getRequireWildcardCache(e) {
   if ("function" != typeof WeakMap) return null;
@@ -47,12 +47,14 @@ function _interopRequireWildcard(e, r) {
  * @category hooks
  * @since 1.0.0
  */
-const EquivalenceHookId = exports.EquivalenceHookId = hooks.EquivalenceHookId;
+const EquivalenceHookId = exports.EquivalenceHookId = _hooks.EquivalenceHookId;
 /**
  * @category annotations
  * @since 1.0.0
  */
-const equivalence = handler => self => InternalSchema.make(AST.setAnnotation(self.ast, EquivalenceHookId, handler));
+const equivalence = handler => self => self.annotations({
+  [EquivalenceHookId]: handler
+});
 /**
  * @category Equivalence
  * @since 1.0.0
@@ -76,7 +78,7 @@ const go = ast => {
   switch (ast._tag) {
     case "NeverKeyword":
       throw new Error("cannot build an Equivalence for `never`");
-    case "Transform":
+    case "Transformation":
       return go(ast.to);
     case "Declaration":
     case "Literal":
@@ -98,13 +100,13 @@ const go = ast => {
       return go(ast.from);
     case "Suspend":
       {
-        const get = Internal.memoizeThunk(() => go(ast.f()));
+        const get = _util.memoizeThunk(() => go(ast.f()));
         return (a, b) => get()(a, b);
       }
-    case "Tuple":
+    case "TupleType":
       {
         const elements = ast.elements.map(element => go(element.type));
-        const rest = Option.map(ast.rest, ReadonlyArray.map(go));
+        const rest = ast.rest.map(go);
         return Equivalence.make((a, b) => {
           const len = a.length;
           if (len !== b.length) {
@@ -122,8 +124,8 @@ const go = ast => {
           // ---------------------------------------------
           // handle rest element
           // ---------------------------------------------
-          if (Option.isSome(rest)) {
-            const [head, ...tail] = rest.value;
+          if (ReadonlyArray.isNonEmptyReadonlyArray(rest)) {
+            const [head, ...tail] = rest;
             for (; i < len - tail.length; i++) {
               if (!head(a[i], b[i])) {
                 return false;
@@ -203,7 +205,7 @@ const go = ast => {
     case "Union":
       {
         const searchTree = Parser.getSearchTree(ast.types, true);
-        const ownKeys = Internal.ownKeys(searchTree.keys);
+        const ownKeys = _util.ownKeys(searchTree.keys);
         const len = ownKeys.length;
         return Equivalence.make((a, b) => {
           let candidates = [];
@@ -222,7 +224,7 @@ const go = ast => {
           if (searchTree.otherwise.length > 0) {
             candidates = candidates.concat(searchTree.otherwise);
           }
-          const tuples = candidates.map(ast => [go(ast), Parser.is(InternalSchema.make(ast))]);
+          const tuples = candidates.map(ast => [go(ast), Parser.is(_schema.make(ast))]);
           for (let i = 0; i < tuples.length; i++) {
             const [equivalence, is] = tuples[i];
             if (is(a) && is(b)) {
diff --git a/dist/cjs/Equivalence.js.map b/dist/cjs/Equivalence.js.map
index fce368c8b08c0e43d57e1bce7cfdbab38243f97f..1bbe5dd7b75a7f866680c6d70f4290045cf637c8 100644
--- a/dist/cjs/Equivalence.js.map
+++ b/dist/cjs/Equivalence.js.map
@@ -1 +1 @@
-{"version":3,"file":"Equivalence.js","names":["Equal","_interopRequireWildcard","require","Equivalence","Option","Predicate","ReadonlyArray","AST","Internal","hooks","InternalSchema","Parser","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","EquivalenceHookId","exports","equivalence","handler","self","make","setAnnotation","ast","schema","go","getHook","getAnnotation","hook","isSome","_tag","value","typeParameters","map","from","Error","to","equals","memoizeThunk","f","b","elements","element","type","rest","len","length","Math","min","head","tail","j","propertySignatures","indexSignatures","ps","is","aStringKeys","keys","aSymbolKeys","getOwnPropertySymbols","name","aHas","bHas","isOptional","bSymbolKeys","bStringKeys","base","getParameterBase","parameter","isSymbol","isSymbolKeyword","aKeys","key","searchTree","getSearchTree","types","ownKeys","candidates","isRecord","buckets","literal","String","concat","otherwise","tuples"],"sources":["../../src/Equivalence.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"Equivalence.js","names":["Equal","_interopRequireWildcard","require","Equivalence","Option","Predicate","ReadonlyArray","AST","_hooks","_schema","_util","Parser","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","EquivalenceHookId","exports","equivalence","handler","self","annotations","make","schema","go","ast","getHook","getAnnotation","hook","isSome","_tag","value","typeParameters","map","from","Error","to","equals","memoizeThunk","f","b","elements","element","type","rest","len","length","Math","min","isNonEmptyReadonlyArray","head","tail","j","propertySignatures","indexSignatures","ps","is","aStringKeys","keys","aSymbolKeys","getOwnPropertySymbols","name","aHas","bHas","isOptional","bSymbolKeys","bStringKeys","base","getParameterBase","parameter","isSymbol","isSymbolKeyword","aKeys","key","searchTree","getSearchTree","types","ownKeys","candidates","isRecord","buckets","literal","String","concat","otherwise","tuples"],"sources":["../../src/Equivalence.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/JSONSchema.js b/dist/cjs/JSONSchema.js
index 849a7b4c2da000effdde5843edd8c74b01687387..079b028ec67225199c80f7ca64107fadfcb28545 100644
--- a/dist/cjs/JSONSchema.js
+++ b/dist/cjs/JSONSchema.js
@@ -6,7 +6,6 @@ Object.defineProperty(exports, "__esModule", {
 exports.make = exports.goRoot = exports.DEFINITION_PREFIX = void 0;
 var Option = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Option"));
 var Predicate = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Predicate"));
-var ReadonlyArray = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ReadonlyArray"));
 var ReadonlyRecord = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ReadonlyRecord"));
 var AST = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./AST.js"));
 function _getRequireWildcardCache(e) {
@@ -82,7 +81,7 @@ const goRoot = ast => {
 };
 exports.goRoot = goRoot;
 const goWithIdentifier = (ast, $defs) => {
-  const identifier = AST.getIdentifierAnnotation(ast);
+  const identifier = AST.getJSONIdentifier(ast);
   return Option.match(identifier, {
     onNone: () => goWithMetaData(ast, $defs),
     onSome: id => {
@@ -112,7 +111,7 @@ const goWithMetaData = (ast, $defs) => {
 const pruneUndefinedKeyword = ps => {
   const type = ps.type;
   if (ps.isOptional && AST.isUnion(type) && Option.isNone(AST.getJSONSchemaAnnotation(type))) {
-    return AST.createUnion(type.types.filter(type => !AST.isUndefinedKeyword(type)), type.annotations);
+    return AST.Union.make(type.types.filter(type => !AST.isUndefinedKeyword(type)), type.annotations);
   }
   return type;
 };
@@ -193,10 +192,10 @@ const go = (ast, $defs) => {
       throw new Error("cannot build a JSON Schema for `bigint` without a JSON Schema annotation");
     case "SymbolKeyword":
       throw new Error("cannot build a JSON Schema for `symbol` without a JSON Schema annotation");
-    case "Tuple":
+    case "TupleType":
       {
         const elements = ast.elements.map(e => goWithIdentifier(e.type, $defs));
-        const rest = Option.map(ast.rest, ReadonlyArray.map(ast => goWithIdentifier(ast, $defs)));
+        const rest = ast.rest.map(ast => goWithIdentifier(ast, $defs));
         const output = {
           type: "array"
         };
@@ -211,8 +210,8 @@ const go = (ast, $defs) => {
         // ---------------------------------------------
         // handle rest element
         // ---------------------------------------------
-        if (Option.isSome(rest)) {
-          const head = rest.value[0];
+        if (rest.length > 0) {
+          const head = rest[0];
           if (len > 0) {
             output.additionalItems = head;
           } else {
@@ -221,7 +220,7 @@ const go = (ast, $defs) => {
           // ---------------------------------------------
           // handle post rest elements
           // ---------------------------------------------
-          if (rest.value.length > 1) {
+          if (rest.length > 1) {
             throw new Error("Generating a JSON Schema for post-rest elements is not currently supported. You're welcome to contribute by submitting a Pull Request.");
           }
         } else {
@@ -264,10 +263,10 @@ const go = (ast, $defs) => {
                   };
                   break;
                 }
-                throw new Error(`Unsupported index signature parameter (${AST.format(parameter)})`);
+                throw new Error(`Unsupported index signature parameter (${parameter})`);
               }
             case "SymbolKeyword":
-              throw new Error(`Unsupported index signature parameter (${AST.format(parameter)})`);
+              throw new Error(`Unsupported index signature parameter (${parameter})`);
           }
         }
         const propertySignatures = ast.propertySignatures.map(ps => {
@@ -287,7 +286,7 @@ const go = (ast, $defs) => {
         // ---------------------------------------------
         for (let i = 0; i < propertySignatures.length; i++) {
           const name = ast.propertySignatures[i].name;
-          if (typeof name === "string") {
+          if (Predicate.isString(name)) {
             output.properties[name] = propertySignatures[i];
             // ---------------------------------------------
             // handle optional property signatures
@@ -376,13 +375,13 @@ const go = (ast, $defs) => {
       }
     case "Suspend":
       {
-        const identifier = Option.orElse(AST.getIdentifierAnnotation(ast), () => AST.getIdentifierAnnotation(ast.f()));
+        const identifier = Option.orElse(AST.getJSONIdentifier(ast), () => AST.getJSONIdentifier(ast.f()));
         if (Option.isNone(identifier)) {
           throw new Error("Generating a JSON Schema for suspended schemas requires an identifier annotation");
         }
         return goWithIdentifier(ast.f(), $defs);
       }
-    case "Transform":
+    case "Transformation":
       return goWithIdentifier(ast.to, $defs);
   }
 };
diff --git a/dist/cjs/JSONSchema.js.map b/dist/cjs/JSONSchema.js.map
index c8b3c3c1e1074d375cfa9ee4c8754328e329b7fd..31ce8dcc020dd27c6fb985b7d31b10a59d791314 100644
--- a/dist/cjs/JSONSchema.js.map
+++ b/dist/cjs/JSONSchema.js.map
@@ -1 +1 @@
-{"version":3,"file":"JSONSchema.js","names":["Option","_interopRequireWildcard","require","Predicate","ReadonlyArray","ReadonlyRecord","AST","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","make","schema","goRoot","ast","exports","anyJsonSchema","$id","unknownJsonSchema","objectJsonSchema","empty","$schema","$defs","jsonSchema","goWithIdentifier","out","isEmptyRecord","identifier","getIdentifierAnnotation","match","onNone","goWithMetaData","onSome","id","$ref","DEFINITION_PREFIX","getMetaData","annotated","getSomes","description","getDescriptionAnnotation","title","getTitleAnnotation","examples","getExamplesAnnotation","getDefaultAnnotation","go","pruneUndefinedKeyword","ps","type","isOptional","isUnion","isNone","getJSONSchemaAnnotation","createUnion","types","filter","isUndefinedKeyword","annotations","hook","isSome","_tag","from","value","Error","literal","const","isString","isNumber","isBoolean","elements","map","rest","output","len","length","minItems","element","items","head","additionalItems","maxItems","propertySignatures","indexSignatures","additionalProperties","undefined","patternProperties","is","parameter","getTemplateLiteralRegex","source","pattern","format","required","properties","name","push","String","enums","anyOf","keys","enum","$comment","oneOf","regex","orElse","f","to"],"sources":["../../src/JSONSchema.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"JSONSchema.js","names":["Option","_interopRequireWildcard","require","Predicate","ReadonlyRecord","AST","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","make","schema","goRoot","ast","exports","anyJsonSchema","$id","unknownJsonSchema","objectJsonSchema","empty","$schema","$defs","jsonSchema","goWithIdentifier","out","isEmptyRecord","identifier","getJSONIdentifier","match","onNone","goWithMetaData","onSome","id","$ref","DEFINITION_PREFIX","getMetaData","annotated","getSomes","description","getDescriptionAnnotation","title","getTitleAnnotation","examples","getExamplesAnnotation","getDefaultAnnotation","go","pruneUndefinedKeyword","ps","type","isOptional","isUnion","isNone","getJSONSchemaAnnotation","Union","types","filter","isUndefinedKeyword","annotations","hook","isSome","_tag","from","value","Error","literal","const","isString","isNumber","isBoolean","elements","map","rest","output","len","length","minItems","element","items","head","additionalItems","maxItems","propertySignatures","indexSignatures","additionalProperties","undefined","patternProperties","is","parameter","getTemplateLiteralRegex","source","pattern","required","properties","name","push","String","enums","anyOf","keys","enum","$comment","oneOf","regex","orElse","f","to"],"sources":["../../src/JSONSchema.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/ParseResult.js b/dist/cjs/ParseResult.js
index 68ac1717ddc86a17b316a1fafb218bf59b220d91..e292e670537f87f6fa555c84175b0b89cb9f12a3 100644
--- a/dist/cjs/ParseResult.js
+++ b/dist/cjs/ParseResult.js
@@ -3,7 +3,85 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.declaration = exports.ParseError = void 0;
+Object.defineProperty(exports, "Declaration", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.Declaration;
+  }
+});
+Object.defineProperty(exports, "Forbidden", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.Forbidden;
+  }
+});
+Object.defineProperty(exports, "Index", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.Index;
+  }
+});
+Object.defineProperty(exports, "Key", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.Key;
+  }
+});
+Object.defineProperty(exports, "Member", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.Member;
+  }
+});
+Object.defineProperty(exports, "Missing", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.Missing;
+  }
+});
+exports.ParseError = void 0;
+Object.defineProperty(exports, "Refinement", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.Refinement;
+  }
+});
+Object.defineProperty(exports, "Transformation", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.Transformation;
+  }
+});
+Object.defineProperty(exports, "Tuple", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.Tuple;
+  }
+});
+Object.defineProperty(exports, "Type", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.Type;
+  }
+});
+Object.defineProperty(exports, "TypeLiteral", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.TypeLiteral;
+  }
+});
+Object.defineProperty(exports, "Unexpected", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.Unexpected;
+  }
+});
+Object.defineProperty(exports, "Union", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.Union;
+  }
+});
 Object.defineProperty(exports, "decode", {
   enumerable: true,
   get: function () {
@@ -40,7 +118,12 @@ Object.defineProperty(exports, "decodeUnknownSync", {
     return _Parser.decodeUnknownSync;
   }
 });
-exports.eitherOrUndefined = void 0;
+Object.defineProperty(exports, "eitherOrUndefined", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.eitherOrUndefined;
+  }
+});
 Object.defineProperty(exports, "encode", {
   enumerable: true,
   get: function () {
@@ -77,14 +160,41 @@ Object.defineProperty(exports, "encodeUnknownSync", {
     return _Parser.encodeUnknownSync;
   }
 });
-exports.union = exports.unexpected = exports.typeLiteral = exports.type = exports.tuple = exports.try = exports.transform = exports.succeed = exports.refinement = exports.parseError = exports.orElse = exports.missing = exports.member = exports.mapError = exports.mapBoth = exports.map = exports.key = exports.index = exports.fromOption = exports.forbidden = exports.flatMap = exports.fail = void 0;
+exports.fail = void 0;
+Object.defineProperty(exports, "flatMap", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.flatMap;
+  }
+});
+exports.fromOption = void 0;
+Object.defineProperty(exports, "map", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.map;
+  }
+});
+exports.mapBoth = void 0;
+Object.defineProperty(exports, "mapError", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.mapError;
+  }
+});
+Object.defineProperty(exports, "missing", {
+  enumerable: true,
+  get: function () {
+    return _parseResult.missing;
+  }
+});
+exports.try = exports.succeed = exports.parseError = exports.orElse = void 0;
 var _Data = /*#__PURE__*/require("effect/Data");
 var Effect = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Effect"));
 var Either = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Either"));
 var _Function = /*#__PURE__*/require("effect/Function");
 var Inspectable = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Inspectable"));
-var InternalParser = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/parser.js"));
 var TreeFormatter = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./TreeFormatter.js"));
+var _parseResult = /*#__PURE__*/require("./internal/parseResult.js");
 var _Parser = /*#__PURE__*/require("./Parser.js");
 function _getRequireWildcardCache(e) {
   if ("function" != typeof WeakMap) return null;
@@ -169,97 +279,6 @@ const _try = exports.try = Either.try;
  * @since 1.0.0
  */
 const fromOption = exports.fromOption = Either.fromOption;
-/**
- * @category constructors
- * @since 1.0.0
- */
-const transform = exports.transform = InternalParser.transform;
-/**
- * @category constructors
- * @since 1.0.0
- */
-const type = exports.type = InternalParser.type;
-/**
- * @category constructors
- * @since 1.0.0
- */
-const forbidden = exports.forbidden = InternalParser.forbidden;
-/**
- * @category constructors
- * @since 1.0.0
- */
-const declaration = exports.declaration = InternalParser.declaration;
-/**
- * @category constructors
- * @since 1.0.0
- */
-const refinement = exports.refinement = InternalParser.refinement;
-/**
- * @category constructors
- * @since 1.0.0
- */
-const tuple = (ast, actual, errors) => ({
-  _tag: "Tuple",
-  ast,
-  actual,
-  errors
-});
-/**
- * @category constructors
- * @since 1.0.0
- */
-exports.tuple = tuple;
-const typeLiteral = exports.typeLiteral = InternalParser.typeLiteral;
-/**
- * @category constructors
- * @since 1.0.0
- */
-const index = exports.index = InternalParser.index;
-/**
- * @category constructors
- * @since 1.0.0
- */
-const key = exports.key = InternalParser.key;
-/**
- * @category constructors
- * @since 1.0.0
- */
-const missing = exports.missing = InternalParser.missing;
-/**
- * @category constructors
- * @since 1.0.0
- */
-const unexpected = exports.unexpected = InternalParser.unexpected;
-/**
- * @category constructors
- * @since 1.0.0
- */
-const union = exports.union = InternalParser.union;
-/**
- * @category constructors
- * @since 1.0.0
- */
-const member = exports.member = InternalParser.member;
-/**
- * @category optimisation
- * @since 1.0.0
- */
-const eitherOrUndefined = exports.eitherOrUndefined = InternalParser.eitherOrUndefined;
-/**
- * @category optimisation
- * @since 1.0.0
- */
-const flatMap = exports.flatMap = InternalParser.flatMap;
-/**
- * @category optimisation
- * @since 1.0.0
- */
-const map = exports.map = InternalParser.map;
-/**
- * @category optimisation
- * @since 1.0.0
- */
-const mapError = exports.mapError = InternalParser.mapError;
 /**
  * @category optimisation
  * @since 1.0.0
diff --git a/dist/cjs/ParseResult.js.map b/dist/cjs/ParseResult.js.map
index d58254684374ad33a71653e42887bf313422015e..1c23653ace810babf5ca5fc42a9f2a8248827306 100644
--- a/dist/cjs/ParseResult.js.map
+++ b/dist/cjs/ParseResult.js.map
@@ -1 +1 @@
-{"version":3,"file":"ParseResult.js","names":["_Data","require","Effect","_interopRequireWildcard","Either","_Function","Inspectable","InternalParser","TreeFormatter","_Parser","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","ParseError","TaggedError","message","toString","formatIssue","error","toJSON","_id","NodeInspectSymbol","exports","parseError","issue","succeed","right","fail","left","_try","try","fromOption","transform","type","forbidden","declaration","refinement","tuple","ast","actual","errors","_tag","typeLiteral","index","key","missing","unexpected","union","member","eitherOrUndefined","flatMap","map","mapError","mapBoth","dual","self","options","s","onFailure","onSuccess","orElse","f","catchAll"],"sources":["../../src/ParseResult.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"ParseResult.js","names":["_Data","require","Effect","_interopRequireWildcard","Either","_Function","Inspectable","TreeFormatter","_parseResult","_Parser","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","ParseError","TaggedError","message","toString","formatIssue","error","toJSON","_id","NodeInspectSymbol","exports","parseError","issue","succeed","right","fail","left","_try","try","fromOption","mapBoth","dual","self","options","s","onFailure","onSuccess","orElse","f","catchAll"],"sources":["../../src/ParseResult.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/Parser.js b/dist/cjs/Parser.js
index d8a3c0745bff0c581c016cd4241b75c5fe8fed68..fd1a10b4d8f019f0fc92a72c7caaf4bb1dace307 100644
--- a/dist/cjs/Parser.js
+++ b/dist/cjs/Parser.js
@@ -3,7 +3,7 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.validateSync = exports.validatePromise = exports.validateOption = exports.validateEither = exports.validate = exports.mergeParseOptions = exports.is = exports.getSearchTree = exports.getLiterals = exports.getFinalTransformation = exports.encodeUnknownSync = exports.encodeUnknownPromise = exports.encodeUnknownOption = exports.encodeUnknownEither = exports.encodeUnknown = exports.encodeSync = exports.encodePromise = exports.encodeOption = exports.encodeEither = exports.encode = exports.defaultParseOption = exports.decodeUnknownSync = exports.decodeUnknownPromise = exports.decodeUnknownOption = exports.decodeUnknownEither = exports.decodeUnknown = exports.decodeSync = exports.decodePromise = exports.decodeOption = exports.decodeEither = exports.decode = exports.asserts = void 0;
+exports.validateSync = exports.validatePromise = exports.validateOption = exports.validateEither = exports.validate = exports.mergeParseOptions = exports.is = exports.getSearchTree = exports.getLiterals = exports.getFinalTransformation = exports.encodeUnknownSync = exports.encodeUnknownPromise = exports.encodeUnknownOption = exports.encodeUnknownEither = exports.encodeUnknown = exports.encodeSync = exports.encodePromise = exports.encodeOption = exports.encodeEither = exports.encode = exports.decodeUnknownSync = exports.decodeUnknownPromise = exports.decodeUnknownOption = exports.decodeUnknownEither = exports.decodeUnknown = exports.decodeSync = exports.decodePromise = exports.decodeOption = exports.decodeEither = exports.decode = exports.asserts = void 0;
 var Effect = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Effect"));
 var Either = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Either"));
 var _GlobalValue = /*#__PURE__*/require("effect/GlobalValue");
@@ -11,8 +11,8 @@ var Option = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/
 var Predicate = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Predicate"));
 var ReadonlyArray = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ReadonlyArray"));
 var AST = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./AST.js"));
-var Internal = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/ast.js"));
-var InternalParser = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/parser.js"));
+var _parseResult = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/parseResult.js"));
+var _util = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/util.js"));
 var TreeFormatter = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./TreeFormatter.js"));
 function _getRequireWildcardCache(e) {
   if ("function" != typeof WeakMap) return null;
@@ -171,19 +171,19 @@ const decode = exports.decode = decodeUnknown;
  * @category validation
  * @since 1.0.0
  */
-const validateSync = (schema, options) => getSync(AST.to(schema.ast), true, options);
+const validateSync = (schema, options) => getSync(AST.typeAST(schema.ast), true, options);
 /**
  * @category validation
  * @since 1.0.0
  */
 exports.validateSync = validateSync;
-const validateOption = (schema, options) => getOption(AST.to(schema.ast), true, options);
+const validateOption = (schema, options) => getOption(AST.typeAST(schema.ast), true, options);
 /**
  * @category validation
  * @since 1.0.0
  */
 exports.validateOption = validateOption;
-const validateEither = (schema, options) => getEither(AST.to(schema.ast), true, options);
+const validateEither = (schema, options) => getEither(AST.typeAST(schema.ast), true, options);
 /**
  * @category validation
  * @since 1.0.0
@@ -198,14 +198,14 @@ const validatePromise = (schema, options) => {
  * @since 1.0.0
  */
 exports.validatePromise = validatePromise;
-const validate = (schema, options) => getEffect(AST.to(schema.ast), true, options);
+const validate = (schema, options) => getEffect(AST.typeAST(schema.ast), true, options);
 /**
  * @category validation
  * @since 1.0.0
  */
 exports.validate = validate;
 const is = (schema, options) => {
-  const parser = goMemo(AST.to(schema.ast), true);
+  const parser = goMemo(AST.typeAST(schema.ast), true);
   return (u, overrideOptions) => Either.isRight(parser(u, {
     ...mergeParseOptions(options, overrideOptions),
     isExact: true
@@ -217,7 +217,7 @@ const is = (schema, options) => {
  */
 exports.is = is;
 const asserts = (schema, options) => {
-  const parser = goMemo(AST.to(schema.ast), true);
+  const parser = goMemo(AST.typeAST(schema.ast), true);
   return (u, overrideOptions) => {
     const result = parser(u, {
       ...mergeParseOptions(options, overrideOptions),
@@ -254,10 +254,6 @@ const encodePromise = exports.encodePromise = encodeUnknownPromise;
  * @since 1.0.0
  */
 const encode = exports.encode = encodeUnknown;
-/**
- * @since 1.0.0"
- */
-const defaultParseOption = exports.defaultParseOption = {};
 const decodeMemoMap = /*#__PURE__*/(0, _GlobalValue.globalValue)( /*#__PURE__*/Symbol.for("@effect/schema/Parser/decodeMemoMap"), () => new WeakMap());
 const encodeMemoMap = /*#__PURE__*/(0, _GlobalValue.globalValue)( /*#__PURE__*/Symbol.for("@effect/schema/Parser/encodeMemoMap"), () => new WeakMap());
 const goMemo = (ast, isDecoding) => {
@@ -278,27 +274,27 @@ const go = (ast, isDecoding) => {
       {
         if (isDecoding) {
           const from = goMemo(ast.from, true);
-          return (i, options) => handleForbidden(InternalParser.flatMap(InternalParser.mapError(from(i, options), e => InternalParser.refinement(ast, i, "From", e)), a => Option.match(ast.filter(a, options ?? defaultParseOption, ast), {
+          return (i, options) => handleForbidden(_parseResult.flatMap(_parseResult.mapError(from(i, options), e => new _parseResult.Refinement(ast, i, "From", e)), a => Option.match(ast.filter(a, options ?? AST.defaultParseOption, ast), {
             onNone: () => Either.right(a),
-            onSome: e => Either.left(InternalParser.refinement(ast, i, "Predicate", e))
+            onSome: e => Either.left(new _parseResult.Refinement(ast, i, "Predicate", e))
           })), ast, i, options);
         } else {
-          const from = goMemo(AST.to(ast), true);
+          const from = goMemo(AST.typeAST(ast), true);
           const to = goMemo(dropRightRefinement(ast.from), false);
-          return (i, options) => handleForbidden(InternalParser.flatMap(from(i, options), a => to(a, options)), ast, i, options);
+          return (i, options) => handleForbidden(_parseResult.flatMap(from(i, options), a => to(a, options)), ast, i, options);
         }
       }
-    case "Transform":
+    case "Transformation":
       {
         const transform = getFinalTransformation(ast.transformation, isDecoding);
         const from = isDecoding ? goMemo(ast.from, true) : goMemo(ast.to, false);
         const to = isDecoding ? goMemo(ast.to, true) : goMemo(ast.from, false);
-        return (i1, options) => handleForbidden(InternalParser.flatMap(InternalParser.mapError(from(i1, options), e => InternalParser.transform(ast, i1, isDecoding ? "From" : "To", e)), a => InternalParser.flatMap(InternalParser.mapError(transform(a, options ?? defaultParseOption, ast), e => InternalParser.transform(ast, i1, "Transformation", e)), i2 => InternalParser.mapError(to(i2, options), e => InternalParser.transform(ast, i1, isDecoding ? "To" : "From", e)))), ast, i1, options);
+        return (i1, options) => handleForbidden(_parseResult.flatMap(_parseResult.mapError(from(i1, options), e => new _parseResult.Transformation(ast, i1, isDecoding ? "Encoded" : "Type", e)), a => _parseResult.flatMap(_parseResult.mapError(transform(a, options ?? AST.defaultParseOption, ast), e => new _parseResult.Transformation(ast, i1, "Transformation", e)), i2 => _parseResult.mapError(to(i2, options), e => new _parseResult.Transformation(ast, i1, isDecoding ? "Type" : "Encoded", e)))), ast, i1, options);
       }
     case "Declaration":
       {
         const parse = isDecoding ? ast.decodeUnknown(...ast.typeParameters) : ast.encodeUnknown(...ast.typeParameters);
-        return (i, options) => handleForbidden(InternalParser.mapError(parse(i, options ?? defaultParseOption, ast), e => InternalParser.declaration(ast, i, e)), ast, i, options);
+        return (i, options) => handleForbidden(_parseResult.mapError(parse(i, options ?? AST.defaultParseOption, ast), e => new _parseResult.Declaration(ast, i, e)), ast, i, options);
       }
     case "Literal":
       return fromRefinement(ast, u => u === ast.literal);
@@ -332,20 +328,20 @@ const go = (ast, isDecoding) => {
         const regex = AST.getTemplateLiteralRegex(ast);
         return fromRefinement(ast, u => Predicate.isString(u) && regex.test(u));
       }
-    case "Tuple":
+    case "TupleType":
       {
         const elements = ast.elements.map(e => goMemo(e.type, isDecoding));
-        const rest = Option.map(ast.rest, ReadonlyArray.map(ast => goMemo(ast, isDecoding)));
+        const rest = ast.rest.map(ast => goMemo(ast, isDecoding));
         let requiredLen = ast.elements.filter(e => !e.isOptional).length;
-        if (Option.isSome(ast.rest)) {
-          requiredLen += ast.rest.value.length - 1;
+        if (ast.rest.length > 0) {
+          requiredLen += ast.rest.length - 1;
         }
-        const expectedAST = AST.createUnion(ast.elements.map((_, i) => AST.createLiteral(i)));
+        const expectedAST = AST.Union.make(ast.elements.map((_, i) => new AST.Literal(i)));
         const concurrency = getConcurrency(ast);
         const batching = getBatching(ast);
         return (input, options) => {
           if (!Array.isArray(input)) {
-            return Either.left(InternalParser.type(ast, input));
+            return Either.left(new _parseResult.Type(ast, input));
           }
           const allErrors = options?.errors === "all";
           const es = [];
@@ -355,25 +351,25 @@ const go = (ast, isDecoding) => {
           // ---------------------------------------------
           const len = input.length;
           for (let i = len; i <= requiredLen - 1; i++) {
-            const e = InternalParser.index(i, InternalParser.missing);
+            const e = new _parseResult.Index(i, _parseResult.missing);
             if (allErrors) {
               es.push([stepKey++, e]);
               continue;
             } else {
-              return Either.left(InternalParser.tuple(ast, input, [e]));
+              return Either.left(new _parseResult.Tuple(ast, input, [e]));
             }
           }
           // ---------------------------------------------
           // handle excess indexes
           // ---------------------------------------------
-          if (Option.isNone(ast.rest)) {
+          if (ast.rest.length === 0) {
             for (let i = ast.elements.length; i <= len - 1; i++) {
-              const e = InternalParser.index(i, InternalParser.unexpected(expectedAST));
+              const e = new _parseResult.Index(i, new _parseResult.Unexpected(expectedAST));
               if (allErrors) {
                 es.push([stepKey++, e]);
                 continue;
               } else {
-                return Either.left(InternalParser.tuple(ast, input, [e]));
+                return Either.left(new _parseResult.Tuple(ast, input, [e]));
               }
             }
           }
@@ -392,16 +388,16 @@ const go = (ast, isDecoding) => {
             } else {
               const parser = elements[i];
               const te = parser(input[i], options);
-              const eu = InternalParser.eitherOrUndefined(te);
+              const eu = _parseResult.eitherOrUndefined(te);
               if (eu) {
                 if (Either.isLeft(eu)) {
                   // the input element is present but is not valid
-                  const e = InternalParser.index(i, eu.left);
+                  const e = new _parseResult.Index(i, eu.left);
                   if (allErrors) {
                     es.push([stepKey++, e]);
                     continue;
                   } else {
-                    return Either.left(InternalParser.tuple(ast, input, [e]));
+                    return Either.left(new _parseResult.Tuple(ast, input, [e]));
                   }
                 }
                 output.push([stepKey++, eu.right]);
@@ -417,12 +413,12 @@ const go = (ast, isDecoding) => {
                 }) => Effect.flatMap(Effect.either(te), t => {
                   if (Either.isLeft(t)) {
                     // the input element is present but is not valid
-                    const e = InternalParser.index(index, t.left);
+                    const e = new _parseResult.Index(index, t.left);
                     if (allErrors) {
                       es.push([nk, e]);
                       return Effect.unit;
                     } else {
-                      return Either.left(InternalParser.tuple(ast, input, [e]));
+                      return Either.left(new _parseResult.Tuple(ast, input, [e]));
                     }
                   }
                   output.push([nk, t.right]);
@@ -434,19 +430,19 @@ const go = (ast, isDecoding) => {
           // ---------------------------------------------
           // handle rest element
           // ---------------------------------------------
-          if (Option.isSome(rest)) {
-            const [head, ...tail] = rest.value;
+          if (ReadonlyArray.isNonEmptyReadonlyArray(rest)) {
+            const [head, ...tail] = rest;
             for (; i < len - tail.length; i++) {
               const te = head(input[i], options);
-              const eu = InternalParser.eitherOrUndefined(te);
+              const eu = _parseResult.eitherOrUndefined(te);
               if (eu) {
                 if (Either.isLeft(eu)) {
-                  const e = InternalParser.index(i, eu.left);
+                  const e = new _parseResult.Index(i, eu.left);
                   if (allErrors) {
                     es.push([stepKey++, e]);
                     continue;
                   } else {
-                    return Either.left(InternalParser.tuple(ast, input, [e]));
+                    return Either.left(new _parseResult.Tuple(ast, input, [e]));
                   }
                 } else {
                   output.push([stepKey++, eu.right]);
@@ -462,12 +458,12 @@ const go = (ast, isDecoding) => {
                   output
                 }) => Effect.flatMap(Effect.either(te), t => {
                   if (Either.isLeft(t)) {
-                    const e = InternalParser.index(index, t.left);
+                    const e = new _parseResult.Index(index, t.left);
                     if (allErrors) {
                       es.push([nk, e]);
                       return Effect.unit;
                     } else {
-                      return Either.left(InternalParser.tuple(ast, input, [e]));
+                      return Either.left(new _parseResult.Tuple(ast, input, [e]));
                     }
                   } else {
                     output.push([nk, t.right]);
@@ -485,16 +481,16 @@ const go = (ast, isDecoding) => {
                 continue;
               } else {
                 const te = tail[j](input[i], options);
-                const eu = InternalParser.eitherOrUndefined(te);
+                const eu = _parseResult.eitherOrUndefined(te);
                 if (eu) {
                   if (Either.isLeft(eu)) {
                     // the input element is present but is not valid
-                    const e = InternalParser.index(i, eu.left);
+                    const e = new _parseResult.Index(i, eu.left);
                     if (allErrors) {
                       es.push([stepKey++, e]);
                       continue;
                     } else {
-                      return Either.left(InternalParser.tuple(ast, input, [e]));
+                      return Either.left(new _parseResult.Tuple(ast, input, [e]));
                     }
                   }
                   output.push([stepKey++, eu.right]);
@@ -510,12 +506,12 @@ const go = (ast, isDecoding) => {
                   }) => Effect.flatMap(Effect.either(te), t => {
                     if (Either.isLeft(t)) {
                       // the input element is present but is not valid
-                      const e = InternalParser.index(index, t.left);
+                      const e = new _parseResult.Index(index, t.left);
                       if (allErrors) {
                         es.push([nk, e]);
                         return Effect.unit;
                       } else {
-                        return Either.left(InternalParser.tuple(ast, input, [e]));
+                        return Either.left(new _parseResult.Tuple(ast, input, [e]));
                       }
                     }
                     output.push([nk, t.right]);
@@ -531,7 +527,7 @@ const go = (ast, isDecoding) => {
           const computeResult = ({
             es,
             output
-          }) => ReadonlyArray.isNonEmptyArray(es) ? Either.left(InternalParser.tuple(ast, input, sortByIndex(es))) : Either.right(sortByIndex(output));
+          }) => ReadonlyArray.isNonEmptyArray(es) ? Either.left(new _parseResult.Tuple(ast, input, sortByIndex(es))) : Either.right(sortByIndex(output));
           if (queue && queue.length > 0) {
             const cqueue = queue;
             return Effect.suspend(() => {
@@ -564,13 +560,13 @@ const go = (ast, isDecoding) => {
           expectedKeys[ps.name] = null;
         }
         const indexSignatures = ast.indexSignatures.map(is => [goMemo(is.parameter, isDecoding), goMemo(is.type, isDecoding), is.parameter]);
-        const expectedAST = AST.createUnion(ast.indexSignatures.map(is => is.parameter).concat(Internal.ownKeys(expectedKeys).map(key => Predicate.isSymbol(key) ? AST.createUniqueSymbol(key) : AST.createLiteral(key))));
+        const expectedAST = AST.Union.make(ast.indexSignatures.map(is => is.parameter).concat(_util.ownKeys(expectedKeys).map(key => Predicate.isSymbol(key) ? new AST.UniqueSymbol(key) : new AST.Literal(key))));
         const expected = goMemo(expectedAST, isDecoding);
         const concurrency = getConcurrency(ast);
         const batching = getBatching(ast);
         return (input, options) => {
           if (!Predicate.isRecord(input)) {
-            return Either.left(InternalParser.type(ast, input));
+            return Either.left(new _parseResult.Type(ast, input));
           }
           const allErrors = options?.errors === "all";
           const es = [];
@@ -582,17 +578,17 @@ const go = (ast, isDecoding) => {
           const onExcessPropertyPreserve = options?.onExcessProperty === "preserve";
           const output = {};
           if (onExcessPropertyError || onExcessPropertyPreserve) {
-            for (const key of Internal.ownKeys(input)) {
-              const eu = InternalParser.eitherOrUndefined(expected(key, options));
+            for (const key of _util.ownKeys(input)) {
+              const eu = _parseResult.eitherOrUndefined(expected(key, options));
               if (Either.isLeft(eu)) {
                 // key is unexpected
                 if (onExcessPropertyError) {
-                  const e = InternalParser.key(key, InternalParser.unexpected(expectedAST));
+                  const e = new _parseResult.Key(key, new _parseResult.Unexpected(expectedAST));
                   if (allErrors) {
                     es.push([stepKey++, e]);
                     continue;
                   } else {
-                    return Either.left(InternalParser.typeLiteral(ast, input, [e]));
+                    return Either.left(new _parseResult.TypeLiteral(ast, input, [e]));
                   }
                 } else {
                   // preserve key
@@ -611,26 +607,26 @@ const go = (ast, isDecoding) => {
               if (ps.isOptional) {
                 continue;
               } else if (isExact) {
-                const e = InternalParser.key(name, InternalParser.missing);
+                const e = new _parseResult.Key(name, _parseResult.missing);
                 if (allErrors) {
                   es.push([stepKey++, e]);
                   continue;
                 } else {
-                  return Either.left(InternalParser.typeLiteral(ast, input, [e]));
+                  return Either.left(new _parseResult.TypeLiteral(ast, input, [e]));
                 }
               }
             }
             const parser = propertySignatures[i][0];
             const te = parser(input[name], options);
-            const eu = InternalParser.eitherOrUndefined(te);
+            const eu = _parseResult.eitherOrUndefined(te);
             if (eu) {
               if (Either.isLeft(eu)) {
-                const e = InternalParser.key(name, hasKey ? eu.left : InternalParser.missing);
+                const e = new _parseResult.Key(name, hasKey ? eu.left : _parseResult.missing);
                 if (allErrors) {
                   es.push([stepKey++, e]);
                   continue;
                 } else {
-                  return Either.left(InternalParser.typeLiteral(ast, input, [e]));
+                  return Either.left(new _parseResult.TypeLiteral(ast, input, [e]));
                 }
               }
               output[name] = eu.right;
@@ -645,12 +641,12 @@ const go = (ast, isDecoding) => {
                 output
               }) => Effect.flatMap(Effect.either(te), t => {
                 if (Either.isLeft(t)) {
-                  const e = InternalParser.key(index, hasKey ? t.left : InternalParser.missing);
+                  const e = new _parseResult.Key(index, hasKey ? t.left : _parseResult.missing);
                   if (allErrors) {
                     es.push([nk, e]);
                     return Effect.unit;
                   } else {
-                    return Either.left(InternalParser.typeLiteral(ast, input, [e]));
+                    return Either.left(new _parseResult.TypeLiteral(ast, input, [e]));
                   }
                 }
                 output[index] = t.right;
@@ -665,26 +661,26 @@ const go = (ast, isDecoding) => {
             const indexSignature = indexSignatures[i];
             const parameter = indexSignature[0];
             const type = indexSignature[1];
-            const keys = Internal.getKeysForIndexSignature(input, indexSignature[2]);
+            const keys = _util.getKeysForIndexSignature(input, indexSignature[2]);
             for (const key of keys) {
               // ---------------------------------------------
               // handle keys
               // ---------------------------------------------
-              const keu = InternalParser.eitherOrUndefined(parameter(key, options));
+              const keu = _parseResult.eitherOrUndefined(parameter(key, options));
               if (keu && Either.isRight(keu)) {
                 // ---------------------------------------------
                 // handle values
                 // ---------------------------------------------
                 const vpr = type(input[key], options);
-                const veu = InternalParser.eitherOrUndefined(vpr);
+                const veu = _parseResult.eitherOrUndefined(vpr);
                 if (veu) {
                   if (Either.isLeft(veu)) {
-                    const e = InternalParser.key(key, veu.left);
+                    const e = new _parseResult.Key(key, veu.left);
                     if (allErrors) {
                       es.push([stepKey++, e]);
                       continue;
                     } else {
-                      return Either.left(InternalParser.typeLiteral(ast, input, [e]));
+                      return Either.left(new _parseResult.TypeLiteral(ast, input, [e]));
                     }
                   } else {
                     if (!Object.prototype.hasOwnProperty.call(expectedKeys, key)) {
@@ -702,12 +698,12 @@ const go = (ast, isDecoding) => {
                     output
                   }) => Effect.flatMap(Effect.either(vpr), tv => {
                     if (Either.isLeft(tv)) {
-                      const e = InternalParser.key(index, tv.left);
+                      const e = new _parseResult.Key(index, tv.left);
                       if (allErrors) {
                         es.push([nk, e]);
                         return Effect.unit;
                       } else {
-                        return Either.left(InternalParser.typeLiteral(ast, input, [e]));
+                        return Either.left(new _parseResult.TypeLiteral(ast, input, [e]));
                       }
                     } else {
                       if (!Object.prototype.hasOwnProperty.call(expectedKeys, key)) {
@@ -726,7 +722,7 @@ const go = (ast, isDecoding) => {
           const computeResult = ({
             es,
             output
-          }) => ReadonlyArray.isNonEmptyArray(es) ? Either.left(InternalParser.typeLiteral(ast, input, sortByIndex(es))) : Either.right(output);
+          }) => ReadonlyArray.isNonEmptyArray(es) ? Either.left(new _parseResult.TypeLiteral(ast, input, sortByIndex(es))) : Either.right(output);
           if (queue && queue.length > 0) {
             const cqueue = queue;
             return Effect.suspend(() => {
@@ -750,7 +746,7 @@ const go = (ast, isDecoding) => {
     case "Union":
       {
         const searchTree = getSearchTree(ast.types, isDecoding);
-        const ownKeys = Internal.ownKeys(searchTree.keys);
+        const ownKeys = _util.ownKeys(searchTree.keys);
         const len = ownKeys.length;
         const map = new Map();
         for (let i = 0; i < ast.types.length; i++) {
@@ -776,14 +772,16 @@ const go = (ast, isDecoding) => {
                     // retrive the minimal set of candidates for decoding
                     candidates = candidates.concat(buckets[literal]);
                   } else {
-                    es.push([stepKey++, InternalParser.typeLiteral(AST.createTypeLiteral([AST.createPropertySignature(name, searchTree.keys[name].ast, false, true)], []), input, [InternalParser.key(name, InternalParser.type(searchTree.keys[name].ast, input[name]))])]);
+                    const literals = AST.Union.make(searchTree.keys[name].literals);
+                    es.push([stepKey++, new _parseResult.TypeLiteral(new AST.TypeLiteral([new AST.PropertySignature(name, literals, false, true)], []), input, [new _parseResult.Key(name, new _parseResult.Type(literals, input[name]))])]);
                   }
                 } else {
-                  es.push([stepKey++, InternalParser.typeLiteral(AST.createTypeLiteral([AST.createPropertySignature(name, searchTree.keys[name].ast, false, true)], []), input, [InternalParser.key(name, InternalParser.missing)])]);
+                  const literals = AST.Union.make(searchTree.keys[name].literals);
+                  es.push([stepKey++, new _parseResult.TypeLiteral(new AST.TypeLiteral([new AST.PropertySignature(name, literals, false, true)], []), input, [new _parseResult.Key(name, _parseResult.missing)])]);
                 }
               }
             } else {
-              es.push([stepKey++, InternalParser.type(ast, input)]);
+              es.push([stepKey++, new _parseResult.Type(ast, input)]);
             }
           }
           if (searchTree.otherwise.length > 0) {
@@ -796,12 +794,12 @@ const go = (ast, isDecoding) => {
             // the members of a union are ordered based on which one should be decoded first,
             // therefore if one member has added a task, all subsequent members must
             // also add a task to the queue even if they are synchronous
-            const eu = !queue || queue.length === 0 ? InternalParser.eitherOrUndefined(pr) : undefined;
+            const eu = !queue || queue.length === 0 ? _parseResult.eitherOrUndefined(pr) : undefined;
             if (eu) {
               if (Either.isRight(eu)) {
                 return Either.right(eu.right);
               } else {
-                es.push([stepKey++, InternalParser.member(candidate, eu.left)]);
+                es.push([stepKey++, new _parseResult.Member(candidate, eu.left)]);
               }
             } else {
               const nk = stepKey++;
@@ -816,7 +814,7 @@ const go = (ast, isDecoding) => {
                     if (Either.isRight(t)) {
                       state.finalResult = Either.right(t.right);
                     } else {
-                      state.es.push([nk, InternalParser.member(candidate, t.left)]);
+                      state.es.push([nk, new _parseResult.Member(candidate, t.left)]);
                     }
                     return Effect.unit;
                   });
@@ -827,9 +825,9 @@ const go = (ast, isDecoding) => {
           // ---------------------------------------------
           // compute output
           // ---------------------------------------------
-          const computeResult = es => ReadonlyArray.isNonEmptyArray(es) ? es.length === 1 && es[0][1]._tag === "Type" ? Either.left(es[0][1]) : Either.left(InternalParser.union(ast, input, sortByIndex(es))) :
+          const computeResult = es => ReadonlyArray.isNonEmptyArray(es) ? es.length === 1 && es[0][1]._tag === "Type" ? Either.left(es[0][1]) : Either.left(new _parseResult.Union(ast, input, sortByIndex(es))) :
           // this should never happen
-          Either.left(InternalParser.type(AST.neverKeyword, input));
+          Either.left(new _parseResult.Type(AST.neverKeyword, input));
           if (queue && queue.length > 0) {
             const cqueue = queue;
             return Effect.suspend(() => {
@@ -853,21 +851,29 @@ const go = (ast, isDecoding) => {
       }
     case "Suspend":
       {
-        const get = Internal.memoizeThunk(() => goMemo(AST.mergeAnnotations(ast.f(), ast.annotations), isDecoding));
+        const get = _util.memoizeThunk(() => goMemo(AST.annotations(ast.f(), ast.annotations), isDecoding));
         return (a, options) => get()(a, options);
       }
   }
 };
-const fromRefinement = (ast, refinement) => u => refinement(u) ? Either.right(u) : Either.left(InternalParser.type(ast, u));
+const fromRefinement = (ast, refinement) => u => refinement(u) ? Either.right(u) : Either.left(new _parseResult.Type(ast, u));
 /** @internal */
 const getLiterals = (ast, isDecoding) => {
   switch (ast._tag) {
+    case "Declaration":
+      {
+        const annotation = AST.getSurrogateSchemaAnnotation(ast);
+        if (Option.isSome(annotation)) {
+          return getLiterals(annotation.value, isDecoding);
+        }
+        break;
+      }
     case "TypeLiteral":
       {
         const out = [];
         for (let i = 0; i < ast.propertySignatures.length; i++) {
           const propertySignature = ast.propertySignatures[i];
-          const type = isDecoding ? AST.from(propertySignature.type) : AST.to(propertySignature.type);
+          const type = isDecoding ? AST.encodedAST(propertySignature.type) : AST.typeAST(propertySignature.type);
           if (AST.isLiteral(type) && !propertySignature.isOptional) {
             out.push([propertySignature.name, type]);
           }
@@ -878,7 +884,7 @@ const getLiterals = (ast, isDecoding) => {
       return getLiterals(ast.from, isDecoding);
     case "Suspend":
       return getLiterals(ast.f(), isDecoding);
-    case "Transform":
+    case "Transformation":
       return getLiterals(isDecoding ? ast.from : ast.to, isDecoding);
   }
   return [];
@@ -910,7 +916,7 @@ const getSearchTree = (members, isDecoding) => {
         const hash = String(literal.literal);
         keys[key] = keys[key] || {
           buckets: {},
-          ast: AST.neverKeyword
+          literals: []
         };
         const buckets = keys[key].buckets;
         if (Object.prototype.hasOwnProperty.call(buckets, hash)) {
@@ -918,10 +924,10 @@ const getSearchTree = (members, isDecoding) => {
             continue;
           }
           buckets[hash].push(member);
-          keys[key].ast = AST.createUnion([keys[key].ast, literal]);
+          keys[key].literals.push(literal);
         } else {
           buckets[hash] = [member];
-          keys[key].ast = AST.createUnion([keys[key].ast, literal]);
+          keys[key].literals.push(literal);
           break;
         }
       }
@@ -937,7 +943,7 @@ const getSearchTree = (members, isDecoding) => {
 exports.getSearchTree = getSearchTree;
 const dropRightRefinement = ast => AST.isRefinement(ast) ? dropRightRefinement(ast.from) : ast;
 const handleForbidden = (effect, ast, actual, options) => {
-  const eu = InternalParser.eitherOrUndefined(effect);
+  const eu = _parseResult.eitherOrUndefined(effect);
   if (eu) {
     return eu;
   }
@@ -947,7 +953,7 @@ const handleForbidden = (effect, ast, actual, options) => {
   try {
     return Effect.runSync(Effect.either(effect));
   } catch (e) {
-    return Either.left(InternalParser.forbidden(ast, actual, e instanceof Error ? e.message : undefined));
+    return Either.left(new _parseResult.Forbidden(ast, actual, "cannot be be resolved synchronously, this is caused by using runSync on an effect that performs async work"));
   }
 };
 function sortByIndex(es) {
@@ -956,12 +962,6 @@ function sortByIndex(es) {
 // -------------------------------------------------------------------------------------
 // transformations interpreter
 // -------------------------------------------------------------------------------------
-const getFinalPropertySignatureTransformation = (transformation, isDecoding) => {
-  switch (transformation._tag) {
-    case "FinalPropertySignatureTransformation":
-      return isDecoding ? transformation.decode : transformation.encode;
-  }
-};
 /** @internal */
 const getFinalTransformation = (transformation, isDecoding) => {
   switch (transformation._tag) {
@@ -977,16 +977,16 @@ const getFinalTransformation = (transformation, isDecoding) => {
         // ---------------------------------------------
         for (const pst of transformation.propertySignatureTransformations) {
           const [from, to] = isDecoding ? [pst.from, pst.to] : [pst.to, pst.from];
-          const transform = getFinalPropertySignatureTransformation(pst.propertySignatureTransformation, isDecoding);
+          const transformation = isDecoding ? pst.decode : pst.encode;
           const f = input => {
-            const o = transform(Object.prototype.hasOwnProperty.call(input, from) ? Option.some(input[from]) : Option.none());
+            const o = transformation(Object.prototype.hasOwnProperty.call(input, from) ? Option.some(input[from]) : Option.none());
             delete input[from];
             if (Option.isSome(o)) {
               input[to] = o.value;
             }
             return input;
           };
-          out = InternalParser.map(out, f);
+          out = _parseResult.map(out, f);
         }
         return out;
       };
diff --git a/dist/cjs/Parser.js.map b/dist/cjs/Parser.js.map
index dff6a43df2a53375058034b57acccd8c007fec6a..59099142cc0f66ac5bc78951eaed19d3ff2e745a 100644
--- a/dist/cjs/Parser.js.map
+++ b/dist/cjs/Parser.js.map
@@ -1 +1 @@
-{"version":3,"file":"Parser.js","names":["Effect","_interopRequireWildcard","require","Either","_GlobalValue","Option","Predicate","ReadonlyArray","AST","Internal","InternalParser","TreeFormatter","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","mergeParseOptions","b","undefined","out","errors","onExcessProperty","exports","getEither","ast","isDecoding","options","parser","goMemo","overrideOptions","getSync","input","getOrThrowWith","Error","formatIssue","getOption","getRight","getEffect","isEffectAllowed","decodeUnknownSync","schema","decodeUnknownOption","decodeUnknownEither","decodeUnknownPromise","decodeUnknown","runPromise","encodeUnknownSync","encodeUnknownOption","encodeUnknownEither","encodeUnknownPromise","encodeUnknown","decodeSync","decodeOption","decodeEither","decodePromise","decode","validateSync","to","validateOption","validateEither","validatePromise","validate","is","isRight","isExact","asserts","result","isLeft","left","encodeSync","encodeOption","encodeEither","encodePromise","encode","defaultParseOption","decodeMemoMap","globalValue","Symbol","for","encodeMemoMap","memoMap","memo","go","getConcurrency","getOrUndefined","getConcurrencyAnnotation","getBatching","getBatchingAnnotation","_tag","from","handleForbidden","flatMap","mapError","refinement","match","filter","onNone","right","onSome","dropRightRefinement","transform","getFinalTransformation","transformation","i1","i2","parse","typeParameters","declaration","fromRefinement","literal","symbol","isUndefined","isNever","isString","isNumber","isBoolean","isBigInt","isSymbol","isObject","enums","some","_","value","regex","getTemplateLiteralRegex","test","elements","map","type","rest","requiredLen","isOptional","length","isSome","expectedAST","createUnion","createLiteral","concurrency","batching","Array","isArray","allErrors","es","stepKey","len","index","missing","push","tuple","isNone","unexpected","output","queue","te","eu","eitherOrUndefined","nk","either","unit","head","tail","j","computeResult","isNonEmptyArray","sortByIndex","cqueue","suspend","state","forEach","f","discard","propertySignatures","indexSignatures","isNotNullable","expectedKeys","ps","name","parameter","concat","ownKeys","key","createUniqueSymbol","expected","isRecord","onExcessPropertyError","onExcessPropertyPreserve","typeLiteral","hasKey","indexSignature","keys","getKeysForIndexSignature","keu","vpr","veu","tv","assign","searchTree","getSearchTree","types","Map","candidates","buckets","String","createTypeLiteral","createPropertySignature","otherwise","candidate","pr","member","finalResult","union","neverKeyword","memoizeThunk","mergeAnnotations","annotations","getLiterals","propertySignature","isLiteral","members","tags","hash","isRefinement","effect","actual","runSync","forbidden","message","sort","getFinalPropertySignatureTransformation","pst","propertySignatureTransformations","propertySignatureTransformation","o","none"],"sources":["../../src/Parser.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"Parser.js","names":["Effect","_interopRequireWildcard","require","Either","_GlobalValue","Option","Predicate","ReadonlyArray","AST","_parseResult","_util","TreeFormatter","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","mergeParseOptions","b","undefined","out","errors","onExcessProperty","exports","getEither","ast","isDecoding","options","parser","goMemo","overrideOptions","getSync","input","getOrThrowWith","Error","formatIssue","getOption","getRight","getEffect","isEffectAllowed","decodeUnknownSync","schema","decodeUnknownOption","decodeUnknownEither","decodeUnknownPromise","decodeUnknown","runPromise","encodeUnknownSync","encodeUnknownOption","encodeUnknownEither","encodeUnknownPromise","encodeUnknown","decodeSync","decodeOption","decodeEither","decodePromise","decode","validateSync","typeAST","validateOption","validateEither","validatePromise","validate","is","isRight","isExact","asserts","result","isLeft","left","encodeSync","encodeOption","encodeEither","encodePromise","encode","decodeMemoMap","globalValue","Symbol","for","encodeMemoMap","memoMap","memo","go","getConcurrency","getOrUndefined","getConcurrencyAnnotation","getBatching","getBatchingAnnotation","_tag","from","handleForbidden","flatMap","mapError","Refinement","match","filter","defaultParseOption","onNone","right","onSome","to","dropRightRefinement","transform","getFinalTransformation","transformation","i1","Transformation","i2","parse","typeParameters","Declaration","fromRefinement","literal","symbol","isUndefined","isNever","isString","isNumber","isBoolean","isBigInt","isSymbol","isObject","enums","some","_","value","regex","getTemplateLiteralRegex","test","elements","map","type","rest","requiredLen","isOptional","length","expectedAST","Union","make","Literal","concurrency","batching","Array","isArray","Type","allErrors","es","stepKey","len","Index","missing","push","Tuple","Unexpected","output","queue","te","eu","eitherOrUndefined","nk","index","either","unit","isNonEmptyReadonlyArray","head","tail","j","computeResult","isNonEmptyArray","sortByIndex","cqueue","suspend","state","forEach","f","discard","propertySignatures","indexSignatures","isNotNullable","expectedKeys","ps","name","parameter","concat","ownKeys","key","UniqueSymbol","expected","isRecord","onExcessPropertyError","onExcessPropertyPreserve","Key","TypeLiteral","hasKey","indexSignature","keys","getKeysForIndexSignature","keu","vpr","veu","tv","assign","searchTree","getSearchTree","types","Map","candidates","buckets","String","literals","PropertySignature","otherwise","candidate","pr","Member","finalResult","neverKeyword","memoizeThunk","annotations","refinement","getLiterals","annotation","getSurrogateSchemaAnnotation","isSome","propertySignature","encodedAST","isLiteral","members","member","tags","hash","isRefinement","effect","actual","runSync","Forbidden","sort","pst","propertySignatureTransformations","o","none"],"sources":["../../src/Parser.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/Pretty.js b/dist/cjs/Pretty.js
index 860a61855f8877d704197f5e1fe2653e0d111043..68e27aa143e58beaff901335e34dabe0c4eaf1e2 100644
--- a/dist/cjs/Pretty.js
+++ b/dist/cjs/Pretty.js
@@ -7,9 +7,9 @@ exports.pretty = exports.match = exports.make = exports.PrettyHookId = void 0;
 var Option = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Option"));
 var ReadonlyArray = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ReadonlyArray"));
 var AST = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./AST.js"));
-var Internal = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/ast.js"));
-var hooks = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/hooks.js"));
-var InternalSchema = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/schema.js"));
+var _hooks = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/hooks.js"));
+var _schema = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/schema.js"));
+var _util = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/util.js"));
 var Parser = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./Parser.js"));
 function _getRequireWildcardCache(e) {
   if ("function" != typeof WeakMap) return null;
@@ -44,12 +44,14 @@ function _interopRequireWildcard(e, r) {
  * @category hooks
  * @since 1.0.0
  */
-const PrettyHookId = exports.PrettyHookId = hooks.PrettyHookId;
+const PrettyHookId = exports.PrettyHookId = _hooks.PrettyHookId;
 /**
  * @category annotations
  * @since 1.0.0
  */
-const pretty = handler => self => InternalSchema.make(AST.setAnnotation(self.ast, PrettyHookId, handler));
+const pretty = handler => self => self.annotations({
+  [PrettyHookId]: handler
+});
 /**
  * @category prettify
  * @since 1.0.0
@@ -64,7 +66,7 @@ const getMatcher = defaultPretty => ast => Option.match(getHook(ast), {
 });
 const toString = /*#__PURE__*/getMatcher(a => String(a));
 const stringify = /*#__PURE__*/getMatcher(a => JSON.stringify(a));
-const formatUnknown = /*#__PURE__*/getMatcher(AST.formatUnknown);
+const formatUnknown = /*#__PURE__*/getMatcher(_util.formatUnknown);
 /**
  * @since 1.0.0
  */
@@ -74,7 +76,7 @@ const match = exports.match = {
     if (Option.isSome(hook)) {
       return hook.value(...ast.typeParameters.map(go));
     }
-    throw new Error(`cannot build a Pretty for a declaration without annotations (${AST.format(ast)})`);
+    throw new Error(`cannot build a Pretty for a declaration without annotations (${ast})`);
   },
   "VoidKeyword": /*#__PURE__*/getMatcher(() => "void(0)"),
   "NeverKeyword": /*#__PURE__*/getMatcher(() => {
@@ -93,13 +95,13 @@ const match = exports.match = {
   "BooleanKeyword": toString,
   "BigIntKeyword": /*#__PURE__*/getMatcher(a => `${String(a)}n`),
   "Enums": stringify,
-  "Tuple": (ast, go) => {
+  "TupleType": (ast, go) => {
     const hook = getHook(ast);
     if (Option.isSome(hook)) {
       return hook.value();
     }
     const elements = ast.elements.map(e => go(e.type));
-    const rest = Option.map(ast.rest, ReadonlyArray.map(go));
+    const rest = ast.rest.map(go);
     return input => {
       const output = [];
       let i = 0;
@@ -118,8 +120,8 @@ const match = exports.match = {
       // ---------------------------------------------
       // handle rest element
       // ---------------------------------------------
-      if (Option.isSome(rest)) {
-        const [head, ...tail] = rest.value;
+      if (ReadonlyArray.isNonEmptyReadonlyArray(rest)) {
+        const [head, ...tail] = rest;
         for (; i < input.length - tail.length; i++) {
           output.push(head(input[i]));
         }
@@ -164,7 +166,7 @@ const match = exports.match = {
       if (indexSignatureTypes.length > 0) {
         for (let i = 0; i < indexSignatureTypes.length; i++) {
           const type = indexSignatureTypes[i];
-          const keys = Internal.getKeysForIndexSignature(input, ast.indexSignatures[i].parameter);
+          const keys = _util.getKeysForIndexSignature(input, ast.indexSignatures[i].parameter);
           for (const key of keys) {
             if (Object.prototype.hasOwnProperty.call(expectedKeys, key)) {
               continue;
@@ -181,7 +183,7 @@ const match = exports.match = {
     if (Option.isSome(hook)) {
       return hook.value();
     }
-    const types = ast.types.map(ast => [Parser.is(InternalSchema.make(ast)), go(ast)]);
+    const types = ast.types.map(ast => [Parser.is(_schema.make(ast)), go(ast)]);
     return a => {
       const index = types.findIndex(([is]) => is(a));
       return types[index][1](a);
@@ -190,7 +192,7 @@ const match = exports.match = {
   "Suspend": (ast, go) => {
     return Option.match(getHook(ast), {
       onNone: () => {
-        const get = Internal.memoizeThunk(() => go(ast.f()));
+        const get = _util.memoizeThunk(() => go(ast.f()));
         return a => get()(a);
       },
       onSome: handler => handler()
@@ -202,7 +204,7 @@ const match = exports.match = {
       onSome: handler => handler()
     });
   },
-  "Transform": (ast, go) => {
+  "Transformation": (ast, go) => {
     return Option.match(getHook(ast), {
       onNone: () => go(ast.to),
       onSome: handler => handler()
diff --git a/dist/cjs/Pretty.js.map b/dist/cjs/Pretty.js.map
index e499f1535021ba699ab5075ba7dad8a0fc76cb1b..70de7be863f9ea662f82dd98f69c80a3a0cfce74 100644
--- a/dist/cjs/Pretty.js.map
+++ b/dist/cjs/Pretty.js.map
@@ -1 +1 @@
-{"version":3,"file":"Pretty.js","names":["Option","_interopRequireWildcard","require","ReadonlyArray","AST","Internal","hooks","InternalSchema","Parser","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","PrettyHookId","exports","pretty","handler","self","make","setAnnotation","ast","schema","compile","getHook","getAnnotation","getMatcher","defaultPretty","match","onNone","onSome","toString","String","stringify","JSON","formatUnknown","Declaration","go","hook","isSome","value","typeParameters","map","Error","format","literal","Tuple","elements","type","rest","input","output","length","isOptional","push","head","tail","j","join","TypeLiteral","propertySignaturesTypes","propertySignatures","f","indexSignatureTypes","indexSignatures","is","expectedKeys","name","ps","getPrettyPropertyKey","keys","getKeysForIndexSignature","parameter","key","isNonEmptyReadonlyArray","Union","types","index","findIndex","Suspend","memoizeThunk","Refinement","from","Transform","to","getCompiler"],"sources":["../../src/Pretty.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"Pretty.js","names":["Option","_interopRequireWildcard","require","ReadonlyArray","AST","_hooks","_schema","_util","Parser","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","PrettyHookId","exports","pretty","handler","self","annotations","make","schema","compile","ast","getHook","getAnnotation","getMatcher","defaultPretty","match","onNone","onSome","toString","String","stringify","JSON","formatUnknown","Declaration","go","hook","isSome","value","typeParameters","map","Error","literal","TupleType","elements","type","rest","input","output","length","isOptional","push","isNonEmptyReadonlyArray","head","tail","j","join","TypeLiteral","propertySignaturesTypes","propertySignatures","f","indexSignatureTypes","indexSignatures","is","expectedKeys","name","ps","getPrettyPropertyKey","keys","getKeysForIndexSignature","parameter","key","Union","types","index","findIndex","Suspend","memoizeThunk","Refinement","from","Transformation","to","getCompiler"],"sources":["../../src/Pretty.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/Schema.js b/dist/cjs/Schema.js
index f966ad2ba53c422d1ae445d40e09ca91c57cf1c1..09f4d1bc02b7b1556b7977849d0803a646ed2c45 100644
--- a/dist/cjs/Schema.js
+++ b/dist/cjs/Schema.js
@@ -3,8 +3,10 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.Uint8Array = exports.UUIDTypeId = exports.UUID = exports.ULIDTypeId = exports.ULID = exports.TypeId = exports.TrimmedTypeId = exports.Trimmed = exports.Trim = exports.TaggedRequest = exports.TaggedError = exports.TaggedClass = exports.StartsWithTypeId = exports.SecretFromSelf = exports.Secret = exports.PropertySignatureImpl = exports.PositiveBigintFromSelf = exports.PositiveBigint = exports.PositiveBigDecimalTypeId = exports.PositiveBigDecimalFromSelf = exports.Positive = exports.PatternTypeId = exports.NumberFromString = exports.Not = exports.NonPositiveBigintFromSelf = exports.NonPositiveBigint = exports.NonPositiveBigDecimalTypeId = exports.NonPositiveBigDecimalFromSelf = exports.NonPositive = exports.NonNegativeBigintFromSelf = exports.NonNegativeBigint = exports.NonNegativeBigDecimalTypeId = exports.NonNegativeBigDecimalFromSelf = exports.NonNegative = exports.NonNaNTypeId = exports.NonNaN = exports.NonEmpty = exports.NegativeBigintFromSelf = exports.NegativeBigint = exports.NegativeBigDecimalTypeId = exports.NegativeBigDecimalFromSelf = exports.Negative = exports.MultipleOfTypeId = exports.MinLengthTypeId = exports.MinItemsTypeId = exports.MaxLengthTypeId = exports.MaxItemsTypeId = exports.LowercasedTypeId = exports.Lowercased = exports.Lowercase = exports.LessThanTypeId = exports.LessThanOrEqualToTypeId = exports.LessThanOrEqualToDurationTypeId = exports.LessThanOrEqualToBigintTypeId = exports.LessThanOrEqualToBigDecimalTypeId = exports.LessThanDurationTypeId = exports.LessThanBigintTypeId = exports.LessThanBigDecimalTypeId = exports.LengthTypeId = exports.JsonNumberTypeId = exports.JsonNumber = exports.ItemsCountTypeId = exports.IntTypeId = exports.Int = exports.InstanceOfTypeId = exports.IncludesTypeId = exports.Hex = exports.GreaterThanTypeId = exports.GreaterThanOrEqualToTypeId = exports.GreaterThanOrEqualToDurationTypeId = exports.GreaterThanOrEqualToBigintTypeId = exports.GreaterThanOrEqualToBigDecimalTypeId = exports.GreaterThanDurationTypeId = exports.GreaterThanBigintTypeId = exports.GreaterThanBigDecimalTypeId = exports.FiniteTypeId = exports.Finite = exports.FiberIdFromSelf = exports.FiberId = exports.EndsWithTypeId = exports.DurationFromSelf = exports.DurationFromNanos = exports.DurationFromMillis = exports.Duration = exports.DateFromString = exports.DateFromSelf = exports.Date = exports.Class = exports.Char = exports.BrandTypeId = exports.BigintFromNumber = exports.BigDecimalFromSelf = exports.BigDecimalFromNumber = exports.BigDecimal = exports.BetweenTypeId = exports.BetweenDurationTypeId = exports.BetweenBigintTypeId = exports.BetweenBigDecimalTypeId = exports.Base64Url = exports.Base64 = void 0;
-exports.array = exports.any = exports.annotations = exports.ValidDateTypeId = exports.ValidDateFromSelf = exports.UppercasedTypeId = exports.Uppercased = exports.Uppercase = exports.Uint8ArrayFromSelf = void 0;
+exports.UUID = exports.ULIDTypeId = exports.ULID = exports.TypeId = exports.TrimmedTypeId = exports.Trimmed = exports.Trim = exports.TaggedRequest = exports.TaggedError = exports.TaggedClass = exports.StartsWithTypeId = exports.SecretFromSelf = exports.Secret = exports.PropertySignatureTypeId = exports.PropertySignatureTransformation = exports.PropertySignatureDeclaration = exports.PositiveBigintFromSelf = exports.PositiveBigint = exports.PositiveBigDecimalTypeId = exports.PositiveBigDecimalFromSelf = exports.Positive = exports.PatternTypeId = exports.NumberFromString = exports.Not = exports.NonPositiveBigintFromSelf = exports.NonPositiveBigint = exports.NonPositiveBigDecimalTypeId = exports.NonPositiveBigDecimalFromSelf = exports.NonPositive = exports.NonNegativeBigintFromSelf = exports.NonNegativeBigint = exports.NonNegativeBigDecimalTypeId = exports.NonNegativeBigDecimalFromSelf = exports.NonNegative = exports.NonNaNTypeId = exports.NonNaN = exports.NonEmpty = exports.NegativeBigintFromSelf = exports.NegativeBigint = exports.NegativeBigDecimalTypeId = exports.NegativeBigDecimalFromSelf = exports.Negative = exports.MultipleOfTypeId = exports.MinLengthTypeId = exports.MinItemsTypeId = exports.MaxLengthTypeId = exports.MaxItemsTypeId = exports.LowercasedTypeId = exports.Lowercased = exports.Lowercase = exports.LessThanTypeId = exports.LessThanOrEqualToTypeId = exports.LessThanOrEqualToDurationTypeId = exports.LessThanOrEqualToBigintTypeId = exports.LessThanOrEqualToBigDecimalTypeId = exports.LessThanDurationTypeId = exports.LessThanBigintTypeId = exports.LessThanBigDecimalTypeId = exports.LengthTypeId = exports.JsonNumberTypeId = exports.JsonNumber = exports.ItemsCountTypeId = exports.IntTypeId = exports.Int = exports.InstanceOfTypeId = exports.IncludesTypeId = exports.Hex = exports.GreaterThanTypeId = exports.GreaterThanOrEqualToTypeId = exports.GreaterThanOrEqualToDurationTypeId = exports.GreaterThanOrEqualToBigintTypeId = exports.GreaterThanOrEqualToBigDecimalTypeId = exports.GreaterThanDurationTypeId = exports.GreaterThanBigintTypeId = exports.GreaterThanBigDecimalTypeId = exports.FiniteTypeId = exports.Finite = exports.FiberIdFromSelf = exports.FiberId = exports.EndsWithTypeId = exports.DurationFromSelf = exports.DurationFromNanos = exports.DurationFromMillis = exports.Duration = exports.DateFromString = exports.DateFromSelf = exports.Date = exports.Class = exports.Char = exports.BrandTypeId = exports.BigintFromNumber = exports.BigDecimalFromSelf = exports.BigDecimalFromNumber = exports.BigDecimal = exports.BetweenTypeId = exports.BetweenDurationTypeId = exports.BetweenBigintTypeId = exports.BetweenBigDecimalTypeId = exports.Base64Url = exports.Base64 = void 0;
+exports.any = exports.annotations = exports.ValidDateTypeId = exports.ValidDateFromSelf = exports.UppercasedTypeId = exports.Uppercased = exports.Uppercase = exports.Uint8ArrayFromSelf = exports.Uint8Array = exports.UUIDTypeId = void 0;
+exports.array = array;
+exports.asSchema = void 0;
 Object.defineProperty(exports, "asserts", {
   enumerable: true,
   get: function () {
@@ -39,7 +41,7 @@ Object.defineProperty(exports, "decodeUnknownSync", {
     return Parser.decodeUnknownSync;
   }
 });
-exports.encodeEither = exports.encode = exports.element = exports.eitherFromUnion = exports.eitherFromSelf = exports.either = exports.documentation = exports.description = exports.default = void 0;
+exports.encodeEither = exports.encode = exports.eitherFromUnion = exports.eitherFromSelf = exports.either = exports.documentation = exports.description = exports.default = void 0;
 Object.defineProperty(exports, "encodeOption", {
   enumerable: true,
   get: function () {
@@ -67,17 +69,27 @@ Object.defineProperty(exports, "encodeUnknownSync", {
     return Parser.encodeUnknownSync;
   }
 });
-exports.extend = exports.exitFromSelf = exports.exit = exports.examples = exports.equivalence = exports.enums = exports.endsWith = void 0;
+exports.extend = exports.exitFromSelf = exports.exit = exports.examples = exports.equivalence = exports.enums = exports.endsWith = exports.encodedSchema = void 0;
 exports.filter = filter;
-exports.intersectUnionMembers = exports.int = exports.instanceOf = exports.includes = exports.identifier = exports.headOr = exports.head = exports.hashSetFromSelf = exports.hashSet = exports.hashMapFromSelf = exports.hashMap = exports.hash = exports.greaterThanOrEqualToDuration = exports.greaterThanOrEqualToBigint = exports.greaterThanOrEqualToBigDecimal = exports.greaterThanOrEqualTo = exports.greaterThanDuration = exports.greaterThanBigint = exports.greaterThanBigDecimal = exports.greaterThan = exports.getNumberIndexedAccess = exports.fromBrand = exports.from = exports.format = exports.finite = void 0;
+exports.int = exports.instanceOf = exports.includes = exports.identifier = exports.headOr = exports.head = exports.hashSetFromSelf = exports.hashSet = exports.hashMapFromSelf = exports.hashMap = exports.hash = exports.greaterThanOrEqualToDuration = exports.greaterThanOrEqualToBigint = exports.greaterThanOrEqualToBigDecimal = exports.greaterThanOrEqualTo = exports.greaterThanDuration = exports.greaterThanBigint = exports.greaterThanBigDecimal = exports.greaterThan = exports.getNumberIndexedAccess = exports.fromKey = exports.fromBrand = exports.format = exports.finite = void 0;
 Object.defineProperty(exports, "is", {
   enumerable: true,
   get: function () {
     return Parser.is;
   }
 });
-exports.lessThan = exports.length = exports.keyof = exports.jsonSchema = exports.itemsCount = exports.isSchema = void 0;
-exports.validateEither = exports.validate = exports.validDate = exports.uppercased = exports.unknown = exports.uniqueSymbol = exports.union = exports.undefined = exports.tuple = exports.trimmed = exports.transformOrFail = exports.transformLiterals = exports.transformLiteral = exports.transform = exports.to = exports.title = exports.templateLiteral = exports.symbolFromSelf = exports.symbol = exports.suspend = exports.struct = exports.string = exports.startsWith = exports.split = exports.sortedSetFromSelf = exports.sortedSet = exports.rest = exports.required = exports.rename = exports.record = exports.readonlySetFromSelf = exports.readonlySet = exports.readonlyMapFromSelf = exports.readonlyMap = exports.propertySignatureAnnotations = exports.positiveBigint = exports.positiveBigDecimal = exports.positive = exports.pluck = exports.pickLiteral = exports.pick = exports.pattern = exports.partial = exports.parseJson = exports.orUndefined = exports.optionalToRequired = exports.optionalElement = exports.optional = exports.optionFromSelf = exports.optionFromOrUndefined = exports.optionFromNullish = exports.optionFromNullable = exports.option = exports.omit = exports.object = exports.number = exports.nullish = exports.nullable = exports.null = exports.nonPositiveBigint = exports.nonPositiveBigDecimal = exports.nonPositive = exports.nonNegativeBigint = exports.nonNegativeBigDecimal = exports.nonNegative = exports.nonNaN = exports.nonEmptyArray = exports.nonEmpty = exports.never = exports.negativeBigint = exports.negativeBigDecimal = exports.negative = exports.negateBigDecimal = exports.mutable = exports.multipleOf = exports.minLength = exports.minItems = exports.message = exports.maxLength = exports.maxItems = exports.make = exports.lowercased = exports.literal = exports.listFromSelf = exports.list = exports.lessThanOrEqualToDuration = exports.lessThanOrEqualToBigint = exports.lessThanOrEqualToBigDecimal = exports.lessThanOrEqualTo = exports.lessThanDuration = exports.lessThanBigint = exports.lessThanBigDecimal = void 0;
+exports.keyof = exports.jsonSchema = exports.itemsCount = exports.isSchema = void 0;
+exports.listFromSelf = exports.list = exports.lessThanOrEqualToDuration = exports.lessThanOrEqualToBigint = exports.lessThanOrEqualToBigDecimal = exports.lessThanOrEqualTo = exports.lessThanDuration = exports.lessThanBigint = exports.lessThanBigDecimal = exports.lessThan = exports.length = void 0;
+exports.literal = literal;
+exports.string = exports.startsWith = exports.split = exports.sortedSetFromSelf = exports.sortedSet = exports.required = exports.rename = exports.record = exports.readonlySetFromSelf = exports.readonlySet = exports.readonlyMapFromSelf = exports.readonlyMap = exports.propertySignatureTransformation = exports.propertySignature = exports.positiveBigint = exports.positiveBigDecimal = exports.positive = exports.pluck = exports.pickLiteral = exports.pick = exports.pattern = exports.partial = exports.parseJson = exports.orUndefined = exports.optionalToRequired = exports.optionalToOptional = exports.optionalElement = exports.optional = exports.optionFromSelf = exports.optionFromOrUndefined = exports.optionFromNullish = exports.optionFromNullable = exports.option = exports.omit = exports.object = exports.number = exports.nullish = exports.nullable = exports.null = exports.nonPositiveBigint = exports.nonPositiveBigDecimal = exports.nonPositive = exports.nonNegativeBigint = exports.nonNegativeBigDecimal = exports.nonNegative = exports.nonNaN = exports.nonEmptyArray = exports.nonEmpty = exports.never = exports.negativeBigint = exports.negativeBigDecimal = exports.negative = exports.negateBigDecimal = exports.mutable = exports.multipleOf = exports.minLength = exports.minItems = exports.message = exports.maxLength = exports.maxItems = exports.make = exports.lowercased = void 0;
+exports.struct = struct;
+exports.transformLiteral = exports.transform = exports.title = exports.templateLiteral = exports.symbolFromSelf = exports.symbol = exports.suspend = void 0;
+exports.transformLiterals = transformLiterals;
+exports.trimmed = exports.transformOrFail = void 0;
+exports.tuple = tuple;
+exports.undefined = exports.typeSchema = void 0;
+exports.union = union;
+exports.validateEither = exports.validate = exports.validDate = exports.uppercased = exports.unknown = exports.uniqueSymbolFromSelf = void 0;
 Object.defineProperty(exports, "validateOption", {
   enumerable: true,
   get: function () {
@@ -92,20 +104,20 @@ Object.defineProperty(exports, "validateSync", {
   }
 });
 exports.void = void 0;
-var BigDecimal = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/BigDecimal"));
-var BigInt_ = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/BigInt"));
+var _bigDecimal = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/BigDecimal"));
+var _bigInt = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/BigInt"));
 var Brand = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Brand"));
 var Cause = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Cause"));
 var Chunk = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Chunk"));
 var Data = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Data"));
-var Duration = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Duration"));
+var _duration = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Duration"));
 var Effect = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Effect"));
 var Either = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Either"));
 var Encoding = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Encoding"));
 var Equal = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Equal"));
 var Equivalence = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Equivalence"));
 var Exit = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Exit"));
-var FiberId = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/FiberId"));
+var _fiberId = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/FiberId"));
 var _Function = /*#__PURE__*/require("effect/Function");
 var HashMap = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/HashMap"));
 var HashSet = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/HashSet"));
@@ -116,21 +128,21 @@ var _Pipeable = /*#__PURE__*/require("effect/Pipeable");
 var Predicate = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Predicate"));
 var ReadonlyArray = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ReadonlyArray"));
 var Request = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Request"));
-var Secret = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Secret"));
+var _secret = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Secret"));
 var SortedSet = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/SortedSet"));
 var S = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/String"));
 var arbitrary = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./Arbitrary.js"));
-var ArrayFormatter = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./ArrayFormatter.js"));
 var AST = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./AST.js"));
 var _equivalence = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./Equivalence.js"));
-var Internal = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/ast.js"));
-var filters = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/filters.js"));
-var hooks = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/hooks.js"));
-var InternalSchema = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/schema.js"));
-var InternalSerializable = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/serializable.js"));
+var _filters = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/filters.js"));
+var _hooks = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/hooks.js"));
+var _schema = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/schema.js"));
+var _serializable = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/serializable.js"));
+var _util = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/util.js"));
 var Parser = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./Parser.js"));
 var ParseResult = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./ParseResult.js"));
 var Pretty = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./Pretty.js"));
+var TreeFormatter = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./TreeFormatter.js"));
 function _getRequireWildcardCache(e) {
   if ("function" != typeof WeakMap) return null;
   var r = new WeakMap(),
@@ -164,30 +176,35 @@ function _interopRequireWildcard(e, r) {
  * @since 1.0.0
  * @category symbol
  */
-const TypeId = exports.TypeId = InternalSchema.TypeId;
+const TypeId = exports.TypeId = _schema.TypeId;
+/**
+ * @since 1.0.0
+ */
+const asSchema = schema => schema;
 /**
  * @category hashing
  * @since 1.0.0
  */
+exports.asSchema = asSchema;
 const hash = schema => AST.hash(schema.ast);
 /**
  * @category formatting
  * @since 1.0.0
  */
 exports.hash = hash;
-const format = schema => AST.format(schema.ast);
+const format = schema => String(schema.ast);
 /**
  * @since 1.0.0
  */
 exports.format = format;
-const from = schema => make(AST.from(schema.ast));
+const encodedSchema = schema => make(AST.encodedAST(schema.ast));
 /**
  * @since 1.0.0
  */
-exports.from = from;
-const to = schema => make(AST.to(schema.ast));
+exports.encodedSchema = encodedSchema;
+const typeSchema = schema => make(AST.typeAST(schema.ast));
 /* c8 ignore start */
-exports.to = to;
+exports.typeSchema = typeSchema;
 /* c8 ignore end */
 /**
  * @category encoding
@@ -306,19 +323,29 @@ const validatePromise = (schema, options) => {
  * @since 1.0.0
  */
 exports.validatePromise = validatePromise;
-const isSchema = u => Predicate.isObject(u) && TypeId in u && "ast" in u;
+const isSchema = u => Predicate.hasProperty(u, TypeId) && Predicate.isObject(u[TypeId]);
 /**
  * @category constructors
  * @since 1.0.0
  */
 exports.isSchema = isSchema;
-const make = exports.make = InternalSchema.make;
-const makeLiteral = value => make(AST.createLiteral(value));
-/**
- * @category constructors
- * @since 1.0.0
- */
-const literal = (...literals) => union(...literals.map(literal => makeLiteral(literal)));
+const make = exports.make = _schema.make;
+class $literal extends _schema.Schema {
+  literals;
+  static ast = literals => {
+    return AST.isMembers(literals) ? AST.Union.make(AST.mapMembers(literals, literal => new AST.Literal(literal))) : new AST.Literal(literals[0]);
+  };
+  constructor(literals, ast = $literal.ast(literals)) {
+    super(ast);
+    this.literals = literals;
+  }
+  annotations(annotations) {
+    return new $literal(this.literals, _schema.annotations(this.ast, annotations));
+  }
+}
+function literal(...literals) {
+  return ReadonlyArray.isNonEmptyReadonlyArray(literals) ? new $literal(literals) : never;
+}
 /**
  * Creates a new `Schema` from a literal schema.
  *
@@ -335,20 +362,19 @@ const literal = (...literals) => union(...literals.map(literal => makeLiteral(li
  * @category constructors
  * @since 1.0.0
  */
-exports.literal = literal;
 const pickLiteral = (...literals) => _schema => literal(...literals);
 /**
  * @category constructors
  * @since 1.0.0
  */
 exports.pickLiteral = pickLiteral;
-const uniqueSymbol = (symbol, annotations) => make(AST.createUniqueSymbol(symbol, annotations));
+const uniqueSymbolFromSelf = symbol => make(new AST.UniqueSymbol(symbol));
 /**
  * @category constructors
  * @since 1.0.0
  */
-exports.uniqueSymbol = uniqueSymbol;
-const enums = enums => make(AST.createEnums(Object.keys(enums).filter(key => typeof enums[enums[key]] !== "number").map(key => [key, enums[key]])));
+exports.uniqueSymbolFromSelf = uniqueSymbolFromSelf;
+const enums = enums => make(new AST.Enums(Object.keys(enums).filter(key => typeof enums[enums[key]] !== "number").map(key => [key, enums[key]])));
 /**
  * @category constructors
  * @since 1.0.0
@@ -359,23 +385,17 @@ const templateLiteral = (...[head, ...tail]) => {
   for (const span of tail) {
     types = ReadonlyArray.flatMap(types, a => getTemplateLiterals(span.ast).map(b => combineTemplateLiterals(a, b)));
   }
-  return make(AST.createUnion(types));
+  return make(AST.Union.make(types));
 };
 exports.templateLiteral = templateLiteral;
 const combineTemplateLiterals = (a, b) => {
   if (AST.isLiteral(a)) {
-    return AST.isLiteral(b) ? AST.createLiteral(String(a.literal) + String(b.literal)) : AST.createTemplateLiteral(String(a.literal) + b.head, b.spans);
+    return AST.isLiteral(b) ? new AST.Literal(String(a.literal) + String(b.literal)) : AST.TemplateLiteral.make(String(a.literal) + b.head, b.spans);
   }
   if (AST.isLiteral(b)) {
-    return AST.createTemplateLiteral(a.head, ReadonlyArray.modifyNonEmptyLast(a.spans, span => ({
-      ...span,
-      literal: span.literal + String(b.literal)
-    })));
+    return AST.TemplateLiteral.make(a.head, ReadonlyArray.modifyNonEmptyLast(a.spans, span => new AST.TemplateLiteralSpan(span.type, span.literal + String(b.literal))));
   }
-  return AST.createTemplateLiteral(a.head, ReadonlyArray.appendAll(ReadonlyArray.modifyNonEmptyLast(a.spans, span => ({
-    ...span,
-    literal: span.literal + String(b.head)
-  })), b.spans));
+  return AST.TemplateLiteral.make(a.head, ReadonlyArray.appendAll(ReadonlyArray.modifyNonEmptyLast(a.spans, span => new AST.TemplateLiteralSpan(span.type, span.literal + String(b.head))), b.spans));
 };
 const getTemplateLiterals = ast => {
   switch (ast._tag) {
@@ -383,21 +403,18 @@ const getTemplateLiterals = ast => {
       return [ast];
     case "NumberKeyword":
     case "StringKeyword":
-      return [AST.createTemplateLiteral("", [{
-        type: ast,
-        literal: ""
-      }])];
+      return [AST.TemplateLiteral.make("", [new AST.TemplateLiteralSpan(ast, "")])];
     case "Union":
       return ReadonlyArray.flatMap(ast.types, getTemplateLiterals);
     default:
-      throw new Error(`templateLiteral: unsupported template literal span (${AST.format(ast)})`);
+      throw new Error(`templateLiteral: unsupported template literal span (${ast})`);
   }
 };
-const declareConstructor = (typeParameters, decodeUnknown, encodeUnknown, annotations) => make(AST.createDeclaration(typeParameters.map(tp => tp.ast), (...typeParameters) => decodeUnknown(...typeParameters.map(ast => make(ast))), (...typeParameters) => encodeUnknown(...typeParameters.map(ast => make(ast))), toAnnotations(annotations)));
+const declareConstructor = (typeParameters, decodeUnknown, encodeUnknown, annotations) => make(new AST.Declaration(typeParameters.map(tp => tp.ast), (...typeParameters) => decodeUnknown(...typeParameters.map(make)), (...typeParameters) => encodeUnknown(...typeParameters.map(make)), _schema.toASTAnnotations(annotations)));
 const declarePrimitive = (is, annotations) => {
-  const decodeUnknown = () => (input, _, ast) => is(input) ? ParseResult.succeed(input) : ParseResult.fail(ParseResult.type(ast, input));
+  const decodeUnknown = () => (input, _, ast) => is(input) ? ParseResult.succeed(input) : ParseResult.fail(new ParseResult.Type(ast, input));
   const encodeUnknown = decodeUnknown;
-  return make(AST.createDeclaration([], decodeUnknown, encodeUnknown, toAnnotations(annotations)));
+  return make(new AST.Declaration([], decodeUnknown, encodeUnknown, _schema.toASTAnnotations(annotations)));
 };
 /**
  * The constraint `R extends Schema.Context<P[number]>` enforces dependencies solely from `typeParameters`.
@@ -428,20 +445,18 @@ const BrandTypeId = exports.BrandTypeId = /*#__PURE__*/Symbol.for("@effect/schem
  * @category constructors
  * @since 1.0.0
  */
-const fromBrand = (constructor, options) => self => {
-  return make(AST.createRefinement(self.ast, (a, _, ast) => {
-    const either = constructor.either(a);
-    return Either.isLeft(either) ? Option.some(ParseResult.type(ast, a, either.left.map(v => v.message).join(", "))) : Option.none();
-  }, toAnnotations({
-    typeId: {
-      id: BrandTypeId,
-      annotation: {
-        constructor
-      }
-    },
-    ...options
-  })));
-};
+const fromBrand = (constructor, annotations) => self => make(new AST.Refinement(self.ast, (a, _, ast) => {
+  const either = constructor.either(a);
+  return Either.isLeft(either) ? Option.some(new ParseResult.Type(ast, a, either.left.map(v => v.message).join(", "))) : Option.none();
+}, _schema.toASTAnnotations({
+  typeId: {
+    id: BrandTypeId,
+    annotation: {
+      constructor
+    }
+  },
+  ...annotations
+})));
 /**
  * @category type id
  * @since 1.0.0
@@ -452,7 +467,7 @@ const InstanceOfTypeId = exports.InstanceOfTypeId = /*#__PURE__*/Symbol.for("@ef
  * @category constructors
  * @since 1.0.0
  */
-const instanceOf = (constructor, options) => declare(u => u instanceof constructor, {
+const instanceOf = (constructor, annotations) => declare(u => u instanceof constructor, {
   title: constructor.name,
   description: `an instance of ${constructor.name}`,
   pretty: () => String,
@@ -462,12 +477,12 @@ const instanceOf = (constructor, options) => declare(u => u instanceof construct
       constructor
     }
   },
-  ...options
+  ...annotations
 });
 exports.instanceOf = instanceOf;
-const _undefined = exports.undefined = /*#__PURE__*/make(AST.undefinedKeyword);
-const _void = exports.void = /*#__PURE__*/make(AST.voidKeyword);
-const _null = exports.null = /*#__PURE__*/make(AST._null);
+const $undefined = exports.undefined = /*#__PURE__*/make(AST.undefinedKeyword);
+const $void = exports.void = /*#__PURE__*/make(AST.voidKeyword);
+const $null = exports.null = /*#__PURE__*/make(AST._null);
 /**
  * @category primitives
  * @since 1.0.0
@@ -513,256 +528,432 @@ const symbolFromSelf = exports.symbolFromSelf = /*#__PURE__*/make(AST.symbolKeyw
  * @since 1.0.0
  */
 const object = exports.object = /*#__PURE__*/make(AST.objectKeyword);
+class $union extends _schema.Schema {
+  members;
+  static ast = members => {
+    return AST.Union.make(members.map(m => m.ast));
+  };
+  constructor(members, ast = $union.ast(members)) {
+    super(ast);
+    this.members = members;
+  }
+  annotations(annotations) {
+    return new $union(this.members, _schema.annotations(this.ast, annotations));
+  }
+}
+function union(...members) {
+  return AST.isMembers(members) ? new $union(members) : ReadonlyArray.isNonEmptyReadonlyArray(members) ? members[0] : never;
+}
 /**
  * @category combinators
  * @since 1.0.0
  */
-const union = (...members) => make(AST.createUnion(members.map(m => m.ast)));
-/**
- * @category combinators
- * @since 1.0.0
- */
-exports.union = union;
-const nullable = self => union(_null, self);
+const nullable = self => union(self, $null);
 /**
  * @category combinators
  * @since 1.0.0
  */
 exports.nullable = nullable;
-const orUndefined = self => make(AST.orUndefined(self.ast));
+const orUndefined = self => union(self, $undefined);
 /**
  * @category combinators
  * @since 1.0.0
  */
 exports.orUndefined = orUndefined;
-const nullish = self => union(_null, _undefined, self);
+const nullish = self => union(self, $null, $undefined);
 /**
  * @category combinators
  * @since 1.0.0
  */
 exports.nullish = nullish;
-const keyof = schema => make(AST.keyof(schema.ast));
+const keyof = self => make(AST.keyof(self.ast)).annotations({
+  description: `keyof<${format(self)}>`
+});
 /**
- * @category combinators
  * @since 1.0.0
  */
 exports.keyof = keyof;
-const tuple = (...elements) => make(AST.createTuple(elements.map(schema => AST.createElement(schema.ast, false)), Option.none(), true));
+const optionalElement = self => new $OptionalElement(self);
+exports.optionalElement = optionalElement;
+class $OptionalElement {
+  optionalElement;
+  [TypeId];
+  constructor(optionalElement) {
+    this.optionalElement = optionalElement;
+  }
+}
+class $tupleType extends _schema.Schema {
+  elements;
+  rest;
+  static ast = (elements, rest) => {
+    return new AST.TupleType(elements.map(schema => isSchema(schema) ? new AST.Element(schema.ast, false) : new AST.Element(schema.optionalElement.ast, true)), rest.map(e => e.ast), true);
+  };
+  constructor(elements, rest, ast = $tupleType.ast(elements, rest)) {
+    super(ast);
+    this.elements = elements;
+    this.rest = rest;
+  }
+  annotations(annotations) {
+    return new $tupleType(this.elements, this.rest, _schema.annotations(this.ast, annotations));
+  }
+}
+class $tuple extends $tupleType {
+  elements;
+  constructor(elements, ast) {
+    super(elements, [], ast);
+    this.elements = elements;
+  }
+  annotations(annotations) {
+    return new $tuple(this.elements, _schema.annotations(this.ast, annotations));
+  }
+}
+function tuple(...args) {
+  return Array.isArray(args[0]) ? new $tupleType(args[0], args.slice(1)) : new $tuple(args);
+}
+class $array extends $tupleType {
+  value;
+  constructor(value, ast) {
+    super([], [value], ast);
+    this.value = value;
+  }
+  annotations(annotations) {
+    return new $array(this.value, _schema.annotations(this.ast, annotations));
+  }
+}
+function array(value, ...elements) {
+  return elements.length > 0 ? new $tupleType([], [value, ...elements]) : new $array(value);
+}
+class $nonEmptyArray extends $tupleType {
+  value;
+  constructor(value, ast) {
+    super([value], [value], ast);
+    this.value = value;
+  }
+  annotations(annotations) {
+    return new $nonEmptyArray(this.value, _schema.annotations(this.ast, annotations));
+  }
+}
 /**
  * @category combinators
  * @since 1.0.0
  */
-exports.tuple = tuple;
-const rest = rest => self => {
-  if (AST.isTuple(self.ast)) {
-    return make(AST.appendRestElement(self.ast, rest.ast));
-  }
-  throw new Error("`rest` is not supported on this schema");
-};
+const nonEmptyArray = value => new $nonEmptyArray(value);
 /**
- * @category combinators
+ * @category PropertySignature
  * @since 1.0.0
  */
-exports.rest = rest;
-const element = element => self => {
-  if (AST.isTuple(self.ast)) {
-    return make(AST.appendElement(self.ast, AST.createElement(element.ast, false)));
+exports.nonEmptyArray = nonEmptyArray;
+class PropertySignatureDeclaration {
+  ast;
+  isOptional;
+  annotations;
+  __defaultConstructor;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "PropertySignatureDeclaration";
+  constructor(ast, isOptional, annotations, __defaultConstructor) {
+    this.ast = ast;
+    this.isOptional = isOptional;
+    this.annotations = annotations;
+    this.__defaultConstructor = __defaultConstructor;
   }
-  throw new Error("`element` is not supported on this schema");
-};
+}
+/**
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+exports.PropertySignatureDeclaration = PropertySignatureDeclaration;
+class PropertySignatureTransformation {
+  fromKey;
+  from;
+  to;
+  decode;
+  encode;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "PropertySignatureTransformation";
+  constructor(fromKey, from, to, decode, encode) {
+    this.fromKey = fromKey;
+    this.from = from;
+    this.to = to;
+    this.decode = decode;
+    this.encode = encode;
+  }
+}
 /**
- * @category combinators
  * @since 1.0.0
+ * @category symbol
  */
-exports.element = element;
-const optionalElement = element => self => {
-  if (AST.isTuple(self.ast)) {
-    return make(AST.appendElement(self.ast, AST.createElement(element.ast, true)));
+exports.PropertySignatureTransformation = PropertySignatureTransformation;
+const PropertySignatureTypeId = exports.PropertySignatureTypeId = _schema.PropertySignatureTypeId;
+const propertySignatureAnnotations = (ast, annotations) => {
+  switch (ast._tag) {
+    case "PropertySignatureDeclaration":
+      return new PropertySignatureDeclaration(ast.ast, ast.isOptional, {
+        ...ast.annotations,
+        ...annotations
+      });
+    case "PropertySignatureTransformation":
+      return new PropertySignatureTransformation(ast.fromKey, ast.from, new PropertySignatureDeclaration(ast.to.ast, ast.to.isOptional, {
+        ...ast.to.annotations,
+        ...annotations
+      }), ast.decode, ast.encode);
   }
-  throw new Error("`optionalElement` is not supported on this schema");
 };
+class $PropertySignature {
+  ast;
+  [TypeId];
+  [PropertySignatureTypeId] = null;
+  _Key;
+  _EncodedToken;
+  _TypeToken;
+  _HasDefault;
+  constructor(ast) {
+    this.ast = ast;
+  }
+  pipe() {
+    return (0, _Pipeable.pipeArguments)(this, arguments);
+  }
+  annotations(annotations) {
+    return new $PropertySignature(propertySignatureAnnotations(this.ast, _schema.toASTAnnotations(annotations)));
+  }
+}
 /**
- * @category combinators
+ * @category PropertySignature
  * @since 1.0.0
  */
-exports.optionalElement = optionalElement;
-const array = item => make(AST.createTuple([], Option.some([item.ast]), true));
+const propertySignature = (schema, options) => new $PropertySignature(new PropertySignatureDeclaration(schema.ast, options?.isOptional ?? false, _schema.toASTAnnotations(options?.annotations), options?.default));
 /**
- * @category combinators
+ * @category PropertySignature
  * @since 1.0.0
  */
-exports.array = array;
-const nonEmptyArray = item => tuple(item).pipe(rest(item));
-/** @internal */
-exports.nonEmptyArray = nonEmptyArray;
-class PropertySignatureImpl {
-  propertySignatureAST;
-  [TypeId] = InternalSchema.variance;
-  FromIsOptional;
-  ToIsOptional;
-  constructor(propertySignatureAST) {
-    this.propertySignatureAST = propertySignatureAST;
-  }
-  pipe() {
-    return (0, _Pipeable.pipeArguments)(this, arguments);
-  }
-}
+exports.propertySignature = propertySignature;
+const propertySignatureTransformation = (from, to, decode, encode) => new $PropertySignature(new PropertySignatureTransformation(from.key, new PropertySignatureDeclaration(from.schema.ast, from.isOptional, _schema.toASTAnnotations(from.annotations)), new PropertySignatureDeclaration(to.schema.ast, to.isOptional), decode, encode));
 /**
+ * @category PropertySignature
  * @since 1.0.0
  */
-exports.PropertySignatureImpl = PropertySignatureImpl;
-const propertySignatureAnnotations = annotations => self => {
-  if (isSchema(self)) {
-    return new PropertySignatureImpl({
-      _tag: "Declaration",
-      from: self.ast,
-      isOptional: false,
-      annotations: toAnnotations(annotations)
-    });
+exports.propertySignatureTransformation = propertySignatureTransformation;
+const fromKey = exports.fromKey = /*#__PURE__*/(0, _Function.dual)(2, (self, key) => {
+  const ast = self.ast;
+  switch (ast._tag) {
+    case "PropertySignatureDeclaration":
+      {
+        return new $PropertySignature(new PropertySignatureTransformation(key, ast, new PropertySignatureDeclaration(AST.typeAST(ast.ast), ast.isOptional), _Function.identity, _Function.identity));
+      }
+    case "PropertySignatureTransformation":
+      return new $PropertySignature(new PropertySignatureTransformation(key, ast.from, ast.to, ast.decode, ast.encode));
   }
-  return new PropertySignatureImpl({
-    ...self.propertySignatureAST,
-    annotations: toAnnotations(annotations)
-  });
-};
+});
 /**
- * @category optional
+ * - `decode`: `none` as argument means: the value is missing in the input
+ * - `encode`: `none` as return value means: the value will be missing in the output
+ *
+ * @category PropertySignature
  * @since 1.0.0
  */
-exports.propertySignatureAnnotations = propertySignatureAnnotations;
-const optionalToRequired = (from, to, decode,
-// `none` here means: the value is missing in the input
-encode,
-// `none` here means: the value will be missing in the output
-annotations) => new PropertySignatureImpl({
-  _tag: "OptionalToRequired",
-  from: from.ast,
-  to: to.ast,
-  decode: o => Option.some(decode(o)),
-  encode: Option.flatMap(encode),
-  annotations: toAnnotations(annotations)
-});
+const optionalToRequired = (from, to, decode, encode) => new $PropertySignature(new PropertySignatureTransformation(undefined, new PropertySignatureDeclaration(from.ast, true), new PropertySignatureDeclaration(to.ast, false), o => Option.some(decode(o)), Option.flatMap(encode)));
 /**
+ * - `decode`:
+ *   - `none` as argument means: the value is missing in the input
+ *   - `none` as return value means: the value will be missing in the output
+ * - `encode`:
+ *   - `none` as argument means: the value is missing in the input
+ *   - `none` as return value means: the value will be missing in the output
+ *
+ * @category PropertySignature
  * @since 1.0.0
  */
 exports.optionalToRequired = optionalToRequired;
+const optionalToOptional = (from, to, decode, encode) => new $PropertySignature(new PropertySignatureTransformation(undefined, new PropertySignatureDeclaration(from.ast, true), new PropertySignatureDeclaration(to.ast, true), decode, encode));
+/**
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+exports.optionalToOptional = optionalToOptional;
 const optional = (schema, options) => {
   const isExact = options?.exact;
-  const value = options?.default;
+  const defaultValue = options?.default;
   const isNullable = options?.nullable;
   const asOption = options?.as == "Option";
-  const annotations = options?.annotations;
   if (isExact) {
-    if (value) {
+    if (defaultValue) {
       if (isNullable) {
-        return optionalToRequired(nullable(schema), to(schema), Option.match({
-          onNone: value,
-          onSome: a => a === null ? value() : a
-        }), Option.some, annotations);
+        return optionalToRequired(nullable(schema), typeSchema(schema), Option.match({
+          onNone: defaultValue,
+          onSome: a => a === null ? defaultValue() : a
+        }), Option.some);
       } else {
-        return optionalToRequired(schema, to(schema), Option.match({
-          onNone: value,
+        return optionalToRequired(schema, typeSchema(schema), Option.match({
+          onNone: defaultValue,
           onSome: _Function.identity
-        }), Option.some, annotations);
+        }), Option.some);
+      }
+    } else if (asOption) {
+      if (isNullable) {
+        return optionalToRequired(nullable(schema), optionFromSelf(typeSchema(schema)), Option.filter(Predicate.isNotNull), _Function.identity);
+      } else {
+        return optionalToRequired(schema, optionFromSelf(typeSchema(schema)), _Function.identity, _Function.identity);
       }
     } else {
-      if (asOption) {
-        if (isNullable) {
-          return optionalToRequired(nullable(schema), optionFromSelf(to(schema)), Option.filter(Predicate.isNotNull), _Function.identity, annotations);
-        } else {
-          return optionalToRequired(schema, optionFromSelf(to(schema)), _Function.identity, _Function.identity, annotations);
-        }
+      if (isNullable) {
+        return optionalToOptional(nullable(schema), typeSchema(schema), Option.filter(Predicate.isNotNull), _Function.identity);
+      } else {
+        return propertySignature(schema, {
+          isOptional: true
+        });
       }
-      return new PropertySignatureImpl({
-        _tag: "Declaration",
-        from: schema.ast,
-        isOptional: true,
-        annotations: toAnnotations(annotations)
-      });
     }
   } else {
-    if (value) {
+    if (defaultValue) {
+      if (isNullable) {
+        return optionalToRequired(nullish(schema), typeSchema(schema), Option.match({
+          onNone: defaultValue,
+          onSome: a => a == null ? defaultValue() : a
+        }), Option.some);
+      } else {
+        return optionalToRequired(orUndefined(schema), typeSchema(schema), Option.match({
+          onNone: defaultValue,
+          onSome: a => a === undefined ? defaultValue() : a
+        }), Option.some);
+      }
+    } else if (asOption) {
       if (isNullable) {
-        return optionalToRequired(nullish(schema), to(schema), Option.match({
-          onNone: value,
-          onSome: a => a == null ? value() : a
-        }), Option.some, annotations);
+        return optionalToRequired(nullish(schema), optionFromSelf(typeSchema(schema)), Option.filter(a => a != null), _Function.identity);
       } else {
-        return optionalToRequired(orUndefined(schema), to(schema), Option.match({
-          onNone: value,
-          onSome: a => a === undefined ? value() : a
-        }), Option.some, annotations);
+        return optionalToRequired(orUndefined(schema), optionFromSelf(typeSchema(schema)), Option.filter(Predicate.isNotUndefined), _Function.identity);
       }
     } else {
-      if (asOption) {
-        if (isNullable) {
-          return optionalToRequired(nullish(schema), optionFromSelf(to(schema)), Option.filter(a => a != null), _Function.identity, annotations);
-        } else {
-          return optionalToRequired(orUndefined(schema), optionFromSelf(to(schema)), Option.filter(Predicate.isNotUndefined), _Function.identity, annotations);
-        }
+      if (isNullable) {
+        return optionalToOptional(nullish(schema), orUndefined(typeSchema(schema)), Option.filter(Predicate.isNotNull), _Function.identity);
+      } else {
+        return propertySignature(orUndefined(schema), {
+          isOptional: true
+        });
       }
-      return new PropertySignatureImpl({
-        _tag: "Declaration",
-        from: orUndefined(schema).ast,
-        isOptional: true,
-        annotations: toAnnotations(annotations)
-      });
     }
   }
 };
-/**
- * @category combinators
- * @since 1.0.0
- */
 exports.optional = optional;
-const struct = fields => {
-  const ownKeys = Internal.ownKeys(fields);
-  const pss = [];
-  const pssFrom = [];
-  const pssTo = [];
-  const psTransformations = [];
-  for (let i = 0; i < ownKeys.length; i++) {
-    const key = ownKeys[i];
-    const field = fields[key];
-    if ("propertySignatureAST" in field) {
-      const psAst = field.propertySignatureAST;
-      const from = psAst.from;
-      const annotations = psAst.annotations;
-      switch (psAst._tag) {
-        case "Declaration":
-          pss.push(AST.createPropertySignature(key, from, psAst.isOptional, true, annotations));
-          pssFrom.push(AST.createPropertySignature(key, from, psAst.isOptional, true));
-          pssTo.push(AST.createPropertySignature(key, AST.to(from), psAst.isOptional, true, annotations));
-          break;
-        case "OptionalToRequired":
-          pssFrom.push(AST.createPropertySignature(key, from, true, true));
-          pssTo.push(AST.createPropertySignature(key, psAst.to, false, true, annotations));
-          psTransformations.push(AST.createPropertySignatureTransform(key, key, AST.createFinalPropertySignatureTransformation(psAst.decode, psAst.encode)));
-          break;
+const isPropertySignature = u => Predicate.hasProperty(u, PropertySignatureTypeId);
+class $typeLiteral extends _schema.Schema {
+  fields;
+  records;
+  static ast = (fields, records) => {
+    const ownKeys = _util.ownKeys(fields);
+    const pss = [];
+    if (ownKeys.length > 0) {
+      const from = [];
+      const to = [];
+      const transformations = [];
+      for (let i = 0; i < ownKeys.length; i++) {
+        const key = ownKeys[i];
+        const field = fields[key];
+        if (isPropertySignature(field)) {
+          const ast = field.ast;
+          switch (ast._tag) {
+            case "PropertySignatureDeclaration":
+              {
+                const type = ast.ast;
+                const isOptional = ast.isOptional;
+                const toAnnotations = ast.annotations;
+                from.push(new AST.PropertySignature(key, type, isOptional, true));
+                to.push(new AST.PropertySignature(key, AST.typeAST(type), isOptional, true, toAnnotations));
+                pss.push(new AST.PropertySignature(key, type, isOptional, true, toAnnotations));
+                break;
+              }
+            case "PropertySignatureTransformation":
+              {
+                const fromKey = ast.fromKey ?? key;
+                from.push(new AST.PropertySignature(fromKey, ast.from.ast, ast.from.isOptional, true, ast.from.annotations));
+                to.push(new AST.PropertySignature(key, ast.to.ast, ast.to.isOptional, true, ast.to.annotations));
+                transformations.push(new AST.PropertySignatureTransformation(fromKey, key, ast.decode, ast.encode));
+                break;
+              }
+          }
+        } else {
+          from.push(new AST.PropertySignature(key, field.ast, false, true));
+          to.push(new AST.PropertySignature(key, AST.typeAST(field.ast), false, true));
+          pss.push(new AST.PropertySignature(key, field.ast, false, true));
+        }
       }
-    } else {
-      pss.push(AST.createPropertySignature(key, field.ast, false, true));
-      pssFrom.push(AST.createPropertySignature(key, field.ast, false, true));
-      pssTo.push(AST.createPropertySignature(key, AST.to(field.ast), false, true));
+      if (ReadonlyArray.isNonEmptyReadonlyArray(transformations)) {
+        const issFrom = [];
+        const issTo = [];
+        for (const r of records) {
+          const {
+            indexSignatures,
+            propertySignatures
+          } = AST.record(r.key.ast, r.value.ast);
+          propertySignatures.forEach(ps => {
+            from.push(ps);
+            to.push(new AST.PropertySignature(ps.name, AST.typeAST(ps.type), ps.isOptional, ps.isReadonly, ps.annotations));
+          });
+          indexSignatures.forEach(is => {
+            issFrom.push(is);
+            issTo.push(new AST.IndexSignature(is.parameter, AST.typeAST(is.type), is.isReadonly));
+          });
+        }
+        return new AST.Transformation(new AST.TypeLiteral(from, issFrom), new AST.TypeLiteral(to, issTo), new AST.TypeLiteralTransformation(transformations));
+      }
+    }
+    const iss = [];
+    for (const r of records) {
+      const {
+        indexSignatures,
+        propertySignatures
+      } = AST.record(r.key.ast, r.value.ast);
+      propertySignatures.forEach(ps => pss.push(ps));
+      indexSignatures.forEach(is => iss.push(is));
     }
+    return new AST.TypeLiteral(pss, iss);
+  };
+  constructor(fields, records, ast = $typeLiteral.ast(fields, records)) {
+    super(ast);
+    this.fields = fields;
+    this.records = records;
   }
-  if (ReadonlyArray.isNonEmptyReadonlyArray(psTransformations)) {
-    return make(AST.createTransform(AST.createTypeLiteral(pssFrom, []), AST.createTypeLiteral(pssTo, []), AST.createTypeLiteralTransformation(psTransformations)));
+  annotations(annotations) {
+    return new $typeLiteral(this.fields, this.records, _schema.annotations(this.ast, annotations));
   }
-  return make(AST.createTypeLiteral(pss, []));
-};
+}
+function struct(fields, ...records) {
+  return new $typeLiteral(fields, records);
+}
+class $record extends $typeLiteral {
+  key;
+  value;
+  constructor(key, value, ast) {
+    super({}, [{
+      key,
+      value
+    }], ast);
+    this.key = key;
+    this.value = value;
+  }
+  annotations(annotations) {
+    return new $record(this.key, this.value, _schema.annotations(this.ast, annotations));
+  }
+}
+/**
+ * @category combinators
+ * @since 1.0.0
+ */
+const record = (key, value) => new $record(key, value);
 /**
  * @category struct transformations
  * @since 1.0.0
  */
-exports.struct = struct;
+exports.record = record;
 const pick = (...keys) => self => {
   const ast = self.ast;
   if (AST.isTransform(ast)) {
     if (AST.isTypeLiteralTransformation(ast.transformation)) {
       const propertySignatureTransformations = ast.transformation.propertySignatureTransformations.filter(t => keys.includes(t.to));
       if (ReadonlyArray.isNonEmptyReadonlyArray(propertySignatureTransformations)) {
-        return make(AST.createTransform(AST.pick(ast.from, keys), AST.pick(ast.to, keys), AST.createTypeLiteralTransformation(propertySignatureTransformations)));
+        return make(new AST.Transformation(AST.pick(ast.from, keys), AST.pick(ast.to, keys), new AST.TypeLiteralTransformation(propertySignatureTransformations)));
       } else {
         return make(AST.pick(ast.from, keys));
       }
@@ -782,7 +973,7 @@ const omit = (...keys) => self => {
     if (AST.isTypeLiteralTransformation(ast.transformation)) {
       const propertySignatureTransformations = ast.transformation.propertySignatureTransformations.filter(t => !keys.includes(t.to));
       if (ReadonlyArray.isNonEmptyReadonlyArray(propertySignatureTransformations)) {
-        return make(AST.createTransform(AST.omit(ast.from, keys), AST.omit(ast.to, keys), AST.createTypeLiteralTransformation(propertySignatureTransformations)));
+        return make(new AST.Transformation(AST.omit(ast.from, keys), AST.omit(ast.to, keys), new AST.TypeLiteralTransformation(propertySignatureTransformations)));
       } else {
         return make(AST.omit(ast.from, keys));
       }
@@ -838,18 +1029,30 @@ const pluck = exports.pluck = /*#__PURE__*/(0, _Function.dual)(args => isSchema(
     const ps = AST.getPropertyKeyIndexedAccess(schema.ast, key);
     return make(ps.isOptional ? AST.orUndefined(ps.type) : ps.type);
   } else {
-    const ps = AST.getPropertyKeyIndexedAccess(to(schema).ast, key);
+    const ps = AST.getPropertyKeyIndexedAccess(typeSchema(schema).ast, key);
     const value = make(ps.isOptional ? AST.orUndefined(ps.type) : ps.type);
     return transform(schema, value, a => a[key], ak => ps.isOptional && ak === undefined ? {} : {
       [key]: ak
     });
   }
 });
-const appendBrandAnnotation = (ast, brand, options) => {
-  const annotations = toAnnotations(options);
-  const brands = ast.annotations[AST.BrandAnnotationId];
-  annotations[AST.BrandAnnotationId] = brands ? [...brands, brand] : [brand];
-  return AST.mergeAnnotations(ast, annotations);
+const makeBrandSchema = (self, annotations) => {
+  const ast = AST.annotations(self, _schema.toASTAnnotations(annotations));
+  const _validateEither = validateEither(make(ast));
+  const refined = Brand.refined(unbranded => Either.match(_validateEither(unbranded), {
+    onLeft: e => Option.some(Brand.error(TreeFormatter.formatError(e), e)),
+    onRight: () => Option.none()
+  }));
+  // make refined a BrandSchema...
+  refined[TypeId] = _schema.variance;
+  refined.ast = ast;
+  refined.pipe = function () {
+    return (0, _Pipeable.pipeArguments)(this, arguments);
+  };
+  refined.annotations = annotations => {
+    return makeBrandSchema(ast, annotations);
+  };
+  return refined;
 };
 /**
  * Returns a nominal branded schema by applying a brand to a given schema.
@@ -865,33 +1068,20 @@ const appendBrandAnnotation = (ast, brand, options) => {
  * import * as Schema from "@effect/schema/Schema"
  *
  * const Int = Schema.number.pipe(Schema.int(), Schema.brand("Int"))
- * type Int = Schema.Schema.To<typeof Int> // number & Brand<"Int">
+ * type Int = Schema.Schema.Type<typeof Int> // number & Brand<"Int">
  *
  * @category combinators
  * @since 1.0.0
  */
-const brand = (brand, options) => self => {
-  const ast = appendBrandAnnotation(self.ast, brand, options);
-  const schema = make(ast);
-  const validateSync = Parser.validateSync(schema);
-  const validateOption = Parser.validateOption(schema);
-  const _validateEither = validateEither(schema);
-  const is = Parser.is(schema);
-  const out = Object.assign(input => validateSync(input), {
-    [Brand.RefinedConstructorsTypeId]: Brand.RefinedConstructorsTypeId,
-    [TypeId]: InternalSchema.variance,
-    ast,
-    option: input => validateOption(input),
-    either: input => Either.mapLeft(_validateEither(input), e => ArrayFormatter.formatError(e).map(err => ({
-      meta: err.path,
-      message: err.message
-    }))),
-    is: input => is(input),
-    pipe() {
-      return (0, _Pipeable.pipeArguments)(this, arguments);
-    }
+const brand = (brand, annotations) => self => {
+  const brandAnnotation = Option.match(AST.getBrandAnnotation(self.ast), {
+    onNone: () => [brand],
+    onSome: brands => [...brands, brand]
+  });
+  return makeBrandSchema(self.ast, {
+    ...annotations,
+    [AST.BrandAnnotationId]: brandAnnotation
   });
-  return out;
 };
 /**
  * @category combinators
@@ -918,50 +1108,53 @@ const mutable = schema => {
   const ast = AST.mutable(schema.ast);
   return ast === schema.ast ? schema : make(ast);
 };
-/**
- * @category combinators
- * @since 1.0.0
- */
 exports.mutable = mutable;
-const record = (key, value) => make(AST.createRecord(key.ast, value.ast, true));
-/** @internal */
-exports.record = record;
-const intersectUnionMembers = (xs, ys) => {
-  return AST.createUnion(xs.flatMap(x => {
-    return ys.map(y => {
-      if (AST.isTypeLiteral(x)) {
-        if (AST.isTypeLiteral(y)) {
-          // isTypeLiteral(x) && isTypeLiteral(y)
-          return AST.createTypeLiteral(x.propertySignatures.concat(y.propertySignatures), x.indexSignatures.concat(y.indexSignatures));
-        } else if (AST.isTransform(y) && AST.isTypeLiteralTransformation(y.transformation) && AST.isTypeLiteral(y.from) && AST.isTypeLiteral(y.to)) {
-          // isTypeLiteral(x) && isTransform(y)
-          const from = AST.createTypeLiteral(x.propertySignatures.concat(y.from.propertySignatures), x.indexSignatures.concat(y.from.indexSignatures));
-          const to = AST.createTypeLiteral(AST.getToPropertySignatures(x.propertySignatures).concat(y.to.propertySignatures), AST.getToIndexSignatures(x.indexSignatures).concat(y.to.indexSignatures));
-          return AST.createTransform(from, to, AST.createTypeLiteralTransformation(y.transformation.propertySignatureTransformations));
-        }
-      } else if (AST.isTransform(x) && AST.isTypeLiteralTransformation(x.transformation) && AST.isTypeLiteral(x.from) && AST.isTypeLiteral(x.to)) {
-        if (AST.isTypeLiteral(y)) {
-          // isTransform(x) && isTypeLiteral(y)
-          const from = AST.createTypeLiteral(x.from.propertySignatures.concat(y.propertySignatures), x.from.indexSignatures.concat(y.indexSignatures));
-          const to = AST.createTypeLiteral(x.to.propertySignatures.concat(AST.getToPropertySignatures(y.propertySignatures)), x.to.indexSignatures.concat(AST.getToIndexSignatures(y.indexSignatures)));
-          return AST.createTransform(from, to, AST.createTypeLiteralTransformation(x.transformation.propertySignatureTransformations));
-        } else if (AST.isTransform(y) && AST.isTypeLiteralTransformation(y.transformation) && AST.isTypeLiteral(y.from) && AST.isTypeLiteral(y.to)) {
-          // isTransform(x) && isTransform(y)
-          const from = AST.createTypeLiteral(x.from.propertySignatures.concat(y.from.propertySignatures), x.from.indexSignatures.concat(y.from.indexSignatures));
-          const to = AST.createTypeLiteral(x.to.propertySignatures.concat(y.to.propertySignatures), x.to.indexSignatures.concat(y.to.indexSignatures));
-          return AST.createTransform(from, to, AST.createTypeLiteralTransformation(x.transformation.propertySignatureTransformations.concat(y.transformation.propertySignatureTransformations)));
-        }
+const getExtendErrorMessage = (x, y, path) => `cannot extend \`${x}\` with \`${y}\` (path [${path?.join(", ")}])`;
+const intersectTypeLiterals = (x, y, path) => {
+  if (AST.isTypeLiteral(x) && AST.isTypeLiteral(y)) {
+    const propertySignatures = [...x.propertySignatures];
+    for (const ps of y.propertySignatures) {
+      const name = ps.name;
+      const i = propertySignatures.findIndex(ps => ps.name === name);
+      if (i === -1) {
+        propertySignatures.push(ps);
+      } else {
+        const {
+          isOptional,
+          type
+        } = propertySignatures[i];
+        path = [...path, _util.formatUnknown(name)];
+        propertySignatures[i] = new AST.PropertySignature(name, extendAST(type, ps.type, path), isOptional, true);
       }
-      throw new Error("`extend` can only handle type literals or unions of type literals");
-    });
-  }));
+    }
+    return new AST.TypeLiteral(propertySignatures, x.indexSignatures.concat(y.indexSignatures));
+  }
+  throw new Error(getExtendErrorMessage(x, y, path));
 };
+const extendAST = (x, y, path) => intersectUnionMembers(AST.isUnion(x) ? x.types : [x], AST.isUnion(y) ? y.types : [y], path);
+const intersectUnionMembers = (xs, ys, path) => AST.Union.make(xs.flatMap(x => {
+  return ys.map(y => {
+    if (AST.isTypeLiteral(x)) {
+      if (AST.isTypeLiteral(y)) {
+        return intersectTypeLiterals(x, y, path);
+      } else if (AST.isTransform(y) && AST.isTypeLiteralTransformation(y.transformation)) {
+        return new AST.Transformation(intersectTypeLiterals(x, y.from, path), intersectTypeLiterals(AST.typeAST(x), y.to, path), new AST.TypeLiteralTransformation(y.transformation.propertySignatureTransformations));
+      }
+    } else if (AST.isTransform(x) && AST.isTypeLiteralTransformation(x.transformation)) {
+      if (AST.isTypeLiteral(y)) {
+        return new AST.Transformation(intersectTypeLiterals(x.from, y, path), intersectTypeLiterals(x.to, AST.typeAST(y), path), new AST.TypeLiteralTransformation(x.transformation.propertySignatureTransformations));
+      } else if (AST.isTransform(y) && AST.isTypeLiteralTransformation(y.transformation)) {
+        return new AST.Transformation(intersectTypeLiterals(x.from, y.from, path), intersectTypeLiterals(x.to, y.to, path), new AST.TypeLiteralTransformation(x.transformation.propertySignatureTransformations.concat(y.transformation.propertySignatureTransformations)));
+      }
+    }
+    throw new Error(getExtendErrorMessage(x, y, path));
+  });
+}));
 /**
  * @category combinators
  * @since 1.0.0
  */
-exports.intersectUnionMembers = intersectUnionMembers;
-const extend = exports.extend = /*#__PURE__*/(0, _Function.dual)(2, (self, that) => make(intersectUnionMembers(AST.isUnion(self.ast) ? self.ast.types : [self.ast], AST.isUnion(that.ast) ? that.ast.types : [that.ast])));
+const extend = exports.extend = /*#__PURE__*/(0, _Function.dual)(2, (self, that) => make(extendAST(self.ast, that.ast, [])));
 /**
  * @category combinators
  * @since 1.0.0
@@ -971,16 +1164,28 @@ const compose = exports.compose = /*#__PURE__*/(0, _Function.dual)(args => isSch
  * @category combinators
  * @since 1.0.0
  */
-const suspend = (f, annotations) => make(AST.createSuspend(() => f().ast, annotations));
+const suspend = (f, annotations) => make(new AST.Suspend(() => f().ast, _schema.toASTAnnotations(annotations)));
 exports.suspend = suspend;
-function filter(predicate, options) {
-  return self => make(AST.createRefinement(self.ast, (a, options, ast) => {
+function filter(predicate, annotations) {
+  return self => make(new AST.Refinement(self.ast, (a, options, ast) => {
     const out = predicate(a, options, ast);
     if (Predicate.isBoolean(out)) {
-      return out ? Option.none() : Option.some(ParseResult.type(ast, a));
+      return out ? Option.none() : Option.some(new ParseResult.Type(ast, a));
     }
     return out;
-  }, toAnnotations(options)));
+  }, _schema.toASTAnnotations(annotations)));
+}
+class $transformOrFail extends _schema.Schema {
+  from;
+  to;
+  constructor(from, to, ast) {
+    super(ast);
+    this.from = from;
+    this.to = to;
+  }
+  annotations(annotations) {
+    return new $transformOrFail(this.from, this.to, _schema.annotations(this.ast, annotations));
+  }
 }
 /**
  * Create a new `Schema` by transforming the input and output of an existing `Schema`
@@ -989,7 +1194,7 @@ function filter(predicate, options) {
  * @category combinators
  * @since 1.0.0
  */
-const transformOrFail = exports.transformOrFail = /*#__PURE__*/(0, _Function.dual)(args => isSchema(args[0]) && isSchema(args[1]), (from, to, decode, encode) => make(AST.createTransform(from.ast, to.ast, AST.createFinalTransformation(decode, encode))));
+const transformOrFail = exports.transformOrFail = /*#__PURE__*/(0, _Function.dual)(args => isSchema(args[0]) && isSchema(args[1]), (from, to, decode, encode) => new $transformOrFail(from, to, new AST.Transformation(from.ast, to.ast, new AST.FinalTransformation(decode, encode))));
 /**
  * Create a new `Schema` by transforming the input and output of an existing `Schema`
  * using the provided mapping functions.
@@ -1012,25 +1217,10 @@ const transform = exports.transform = /*#__PURE__*/(0, _Function.dual)(args => i
  * @since 1.0.0
  */
 const transformLiteral = (from, to) => transform(literal(from), literal(to), () => to, () => from);
-/**
- * Creates a new `Schema` which maps between corresponding literal values.
- *
- * @example
- * import * as S from "@effect/schema/Schema"
- *
- * const Animal = S.transformLiterals(
- *   [0, "cat"],
- *   [1, "dog"],
- *   [2, "cow"]
- * )
- *
- * assert.deepStrictEqual(S.decodeSync(Animal)(1), "dog")
- *
- * @category constructors
- * @since 1.0.0
- */
 exports.transformLiteral = transformLiteral;
-const transformLiterals = (...pairs) => union(...pairs.map(([from, to]) => transformLiteral(from, to)));
+function transformLiterals(...pairs) {
+  return union(...pairs.map(([from, to]) => transformLiteral(from, to)));
+}
 /**
  * Attaches a property signature with the specified key and value to the schema.
  * This API is useful when you want to add a property to your schema which doesn't describe the shape of the input,
@@ -1059,96 +1249,68 @@ const transformLiterals = (...pairs) => union(...pairs.map(([from, to]) => trans
  * @category combinators
  * @since 1.0.0
  */
-exports.transformLiterals = transformLiterals;
-const attachPropertySignature = exports.attachPropertySignature = /*#__PURE__*/(0, _Function.dual)(args => isSchema(args[0]), (schema, key, value, options) => {
-  const attached = extend(to(schema), struct({
-    [key]: Predicate.isSymbol(value) ? uniqueSymbol(value) : literal(value)
+const attachPropertySignature = exports.attachPropertySignature = /*#__PURE__*/(0, _Function.dual)(args => isSchema(args[0]), (schema, key, value, annotations) => {
+  const attached = extend(typeSchema(schema), struct({
+    [key]: Predicate.isSymbol(value) ? uniqueSymbolFromSelf(value) : literal(value)
   })).ast;
-  return make(AST.createTransform(schema.ast, options ? AST.mergeAnnotations(attached, toAnnotations(options)) : attached, AST.createTypeLiteralTransformation([AST.createPropertySignatureTransform(key, key, AST.createFinalPropertySignatureTransformation(() => Option.some(value), () => Option.none()))])));
+  return make(new AST.Transformation(schema.ast, annotations ? AST.annotations(attached, _schema.toASTAnnotations(annotations)) : attached, new AST.TypeLiteralTransformation([new AST.PropertySignatureTransformation(key, key, () => Option.some(value), () => Option.none())])));
 });
-const toAnnotations = options => {
-  if (!options) {
-    return {};
-  }
-  const out = {};
-  // symbols are reserved for custom annotations
-  const custom = Object.getOwnPropertySymbols(options);
-  for (const sym of custom) {
-    out[sym] = options[sym];
-  }
-  // string keys are reserved as /schema namespace
-  if (options.typeId !== undefined) {
-    const typeId = options.typeId;
-    if (typeof typeId === "object") {
-      out[AST.TypeAnnotationId] = typeId.id;
-      out[typeId.id] = typeId.annotation;
-    } else {
-      out[AST.TypeAnnotationId] = typeId;
-    }
-  }
-  const move = (from, to) => {
-    if (options[from] !== undefined) {
-      out[to] = options[from];
-    }
-  };
-  move("message", AST.MessageAnnotationId);
-  move("identifier", AST.IdentifierAnnotationId);
-  move("title", AST.TitleAnnotationId);
-  move("description", AST.DescriptionAnnotationId);
-  move("examples", AST.ExamplesAnnotationId);
-  move("default", AST.DefaultAnnotationId);
-  move("documentation", AST.DocumentationAnnotationId);
-  move("jsonSchema", AST.JSONSchemaAnnotationId);
-  move("arbitrary", hooks.ArbitraryHookId);
-  move("pretty", hooks.PrettyHookId);
-  move("equivalence", hooks.EquivalenceHookId);
-  move("concurrency", AST.ConcurrencyAnnotationId);
-  move("batching", AST.BatchingAnnotationId);
-  return out;
-};
 /**
  * @category annotations
  * @since 1.0.0
  */
-const annotations = annotations => self => make(AST.mergeAnnotations(self.ast, annotations));
+const annotations = exports.annotations = /*#__PURE__*/(0, _Function.dual)(2, (self, annotations) => self.annotations(annotations));
 /**
  * @category annotations
  * @since 1.0.0
  */
-exports.annotations = annotations;
-const message = message => self => make(AST.setAnnotation(self.ast, AST.MessageAnnotationId, message));
+const message = message => self => self.annotations({
+  [AST.MessageAnnotationId]: message
+});
 /**
  * @category annotations
  * @since 1.0.0
  */
 exports.message = message;
-const identifier = identifier => self => make(AST.setAnnotation(self.ast, AST.IdentifierAnnotationId, identifier));
+const identifier = identifier => self => self.annotations({
+  [AST.IdentifierAnnotationId]: identifier
+});
 /**
  * @category annotations
  * @since 1.0.0
  */
 exports.identifier = identifier;
-const title = title => self => make(AST.setAnnotation(self.ast, AST.TitleAnnotationId, title));
+const title = title => self => self.annotations({
+  [AST.TitleAnnotationId]: title
+});
 /**
  * @category annotations
  * @since 1.0.0
  */
 exports.title = title;
-const description = description => self => make(AST.setAnnotation(self.ast, AST.DescriptionAnnotationId, description));
+const description = description => self => self.annotations({
+  [AST.DescriptionAnnotationId]: description
+});
 /**
  * @category annotations
  * @since 1.0.0
  */
 exports.description = description;
-const examples = examples => self => make(AST.setAnnotation(self.ast, AST.ExamplesAnnotationId, examples));
+const examples = examples => self => self.annotations({
+  [AST.ExamplesAnnotationId]: examples
+});
 exports.examples = examples;
-const _default = value => self => make(AST.setAnnotation(self.ast, AST.DefaultAnnotationId, value));
+const _default = value => self => self.annotations({
+  [AST.DefaultAnnotationId]: value
+});
 exports.default = _default;
 /**
  * @category annotations
  * @since 1.0.0
  */
-const documentation = documentation => self => make(AST.setAnnotation(self.ast, AST.DocumentationAnnotationId, documentation));
+const documentation = documentation => self => self.annotations({
+  [AST.DocumentationAnnotationId]: documentation
+});
 /**
  * Attaches a JSON Schema annotation to a schema that represents a refinement.
  *
@@ -1158,25 +1320,33 @@ const documentation = documentation => self => make(AST.setAnnotation(self.ast,
  * @since 1.0.0
  */
 exports.documentation = documentation;
-const jsonSchema = jsonSchema => self => make(AST.setAnnotation(self.ast, AST.JSONSchemaAnnotationId, jsonSchema));
+const jsonSchema = jsonSchema => self => self.annotations({
+  [AST.JSONSchemaAnnotationId]: jsonSchema
+});
 /**
  * @category annotations
  * @since 1.0.0
  */
 exports.jsonSchema = jsonSchema;
-const equivalence = equivalence => self => make(AST.setAnnotation(self.ast, hooks.EquivalenceHookId, () => equivalence));
+const equivalence = equivalence => self => self.annotations({
+  [_hooks.EquivalenceHookId]: () => equivalence
+});
 /**
  * @category annotations
  * @since 1.0.0
  */
 exports.equivalence = equivalence;
-const concurrency = concurrency => self => make(AST.setAnnotation(self.ast, AST.ConcurrencyAnnotationId, concurrency));
+const concurrency = concurrency => self => self.annotations({
+  [AST.ConcurrencyAnnotationId]: concurrency
+});
 /**
  * @category annotations
  * @since 1.0.0
  */
 exports.concurrency = concurrency;
-const batching = batching => self => make(AST.setAnnotation(self.ast, AST.BatchingAnnotationId, batching));
+const batching = batching => self => self.annotations({
+  [AST.BatchingAnnotationId]: batching
+});
 /**
  * @category renaming
  * @since 1.0.0
@@ -1199,46 +1369,46 @@ const TrimmedTypeId = exports.TrimmedTypeId = /*#__PURE__*/Symbol.for("@effect/s
  * @category string filters
  * @since 1.0.0
  */
-const trimmed = options => self => self.pipe(filter(a => a === a.trim(), {
+const trimmed = annotations => self => self.pipe(filter(a => a === a.trim(), {
   typeId: TrimmedTypeId,
   description: "a string with no leading or trailing whitespace",
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
 exports.trimmed = trimmed;
-const MaxLengthTypeId = exports.MaxLengthTypeId = filters.MaxLengthTypeId;
+const MaxLengthTypeId = exports.MaxLengthTypeId = _filters.MaxLengthTypeId;
 /**
  * @category string filters
  * @since 1.0.0
  */
-const maxLength = (maxLength, options) => self => self.pipe(filter(a => a.length <= maxLength, {
+const maxLength = (maxLength, annotations) => self => self.pipe(filter(a => a.length <= maxLength, {
   typeId: MaxLengthTypeId,
   description: `a string at most ${maxLength} character(s) long`,
   jsonSchema: {
     maxLength
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
 exports.maxLength = maxLength;
-const MinLengthTypeId = exports.MinLengthTypeId = filters.MinLengthTypeId;
+const MinLengthTypeId = exports.MinLengthTypeId = _filters.MinLengthTypeId;
 /**
  * @category string filters
  * @since 1.0.0
  */
-const minLength = (minLength, options) => self => self.pipe(filter(a => a.length >= minLength, {
+const minLength = (minLength, annotations) => self => self.pipe(filter(a => a.length >= minLength, {
   typeId: MinLengthTypeId,
   description: `a string at least ${minLength} character(s) long`,
   jsonSchema: {
     minLength
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
@@ -1250,7 +1420,7 @@ const PatternTypeId = exports.PatternTypeId = /*#__PURE__*/Symbol.for("@effect/s
  * @category string filters
  * @since 1.0.0
  */
-const pattern = (regex, options) => self => {
+const pattern = (regex, annotations) => self => {
   const pattern = regex.source;
   return self.pipe(filter(a => {
     // The following line ensures that `lastIndex` is reset to `0` in case the user has specified the `g` flag
@@ -1268,7 +1438,7 @@ const pattern = (regex, options) => self => {
       pattern
     },
     arbitrary: () => fc => fc.stringMatching(regex),
-    ...options
+    ...annotations
   }));
 };
 /**
@@ -1281,7 +1451,7 @@ const StartsWithTypeId = exports.StartsWithTypeId = /*#__PURE__*/Symbol.for("@ef
  * @category string filters
  * @since 1.0.0
  */
-const startsWith = (startsWith, options) => self => self.pipe(filter(a => a.startsWith(startsWith), {
+const startsWith = (startsWith, annotations) => self => self.pipe(filter(a => a.startsWith(startsWith), {
   typeId: {
     id: StartsWithTypeId,
     annotation: {
@@ -1292,7 +1462,7 @@ const startsWith = (startsWith, options) => self => self.pipe(filter(a => a.star
   jsonSchema: {
     pattern: `^${startsWith}`
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
@@ -1304,7 +1474,7 @@ const EndsWithTypeId = exports.EndsWithTypeId = /*#__PURE__*/Symbol.for("@effect
  * @category string filters
  * @since 1.0.0
  */
-const endsWith = (endsWith, options) => self => self.pipe(filter(a => a.endsWith(endsWith), {
+const endsWith = (endsWith, annotations) => self => self.pipe(filter(a => a.endsWith(endsWith), {
   typeId: {
     id: EndsWithTypeId,
     annotation: {
@@ -1315,7 +1485,7 @@ const endsWith = (endsWith, options) => self => self.pipe(filter(a => a.endsWith
   jsonSchema: {
     pattern: `^.*${endsWith}$`
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
@@ -1327,7 +1497,7 @@ const IncludesTypeId = exports.IncludesTypeId = /*#__PURE__*/Symbol.for("@effect
  * @category string filters
  * @since 1.0.0
  */
-const includes = (searchString, options) => self => self.pipe(filter(a => a.includes(searchString), {
+const includes = (searchString, annotations) => self => self.pipe(filter(a => a.includes(searchString), {
   typeId: {
     id: IncludesTypeId,
     annotation: {
@@ -1338,7 +1508,7 @@ const includes = (searchString, options) => self => self.pipe(filter(a => a.incl
   jsonSchema: {
     pattern: `.*${searchString}.*`
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
@@ -1352,10 +1522,10 @@ const LowercasedTypeId = exports.LowercasedTypeId = /*#__PURE__*/Symbol.for("@ef
  * @category string filters
  * @since 1.0.0
  */
-const lowercased = options => self => self.pipe(filter(a => a === a.toLowerCase(), {
+const lowercased = annotations => self => self.pipe(filter(a => a === a.toLowerCase(), {
   typeId: LowercasedTypeId,
   description: "a lowercase string",
-  ...options
+  ...annotations
 }));
 /**
  * @category string constructors
@@ -1377,10 +1547,10 @@ const UppercasedTypeId = exports.UppercasedTypeId = /*#__PURE__*/Symbol.for("@ef
  * @category string filters
  * @since 1.0.0
  */
-const uppercased = options => self => self.pipe(filter(a => a === a.toUpperCase(), {
+const uppercased = annotations => self => self.pipe(filter(a => a === a.toUpperCase(), {
   typeId: UppercasedTypeId,
   description: "an uppercase string",
-  ...options
+  ...annotations
 }));
 /**
  * @category string constructors
@@ -1395,19 +1565,19 @@ const Uppercased = exports.Uppercased = /*#__PURE__*/string.pipe( /*#__PURE__*/u
  * @category type id
  * @since 1.0.0
  */
-const LengthTypeId = exports.LengthTypeId = filters.LengthTypeId;
+const LengthTypeId = exports.LengthTypeId = _filters.LengthTypeId;
 /**
  * @category string filters
  * @since 1.0.0
  */
-const length = (length, options) => self => self.pipe(filter(a => a.length === length, {
+const length = (length, annotations) => self => self.pipe(filter(a => a.length === length, {
   typeId: LengthTypeId,
   description: length === 1 ? `a single character` : `a string ${length} character(s) long`,
   jsonSchema: {
     minLength: length,
     maxLength: length
   },
-  ...options
+  ...annotations
 }));
 /**
  * A schema representing a single character.
@@ -1416,14 +1586,16 @@ const length = (length, options) => self => self.pipe(filter(a => a.length === l
  * @since 1.0.0
  */
 exports.length = length;
-const Char = exports.Char = /*#__PURE__*/string.pipe( /*#__PURE__*/length(1), /*#__PURE__*/identifier("Char"));
+const Char = exports.Char = /*#__PURE__*/string.pipe( /*#__PURE__*/length(1, {
+  identifier: "Char"
+}));
 /**
  * @category string filters
  * @since 1.0.0
  */
-const nonEmpty = options => minLength(1, {
+const nonEmpty = annotations => minLength(1, {
   description: "a non empty string",
-  ...options
+  ...annotations
 });
 /**
  * This schema converts a string to lowercase.
@@ -1432,14 +1604,18 @@ const nonEmpty = options => minLength(1, {
  * @since 1.0.0
  */
 exports.nonEmpty = nonEmpty;
-const Lowercase = exports.Lowercase = /*#__PURE__*/transform(string, Lowercased, s => s.toLowerCase(), _Function.identity).pipe( /*#__PURE__*/identifier("Lowercase"));
+const Lowercase = exports.Lowercase = /*#__PURE__*/transform(string, Lowercased, s => s.toLowerCase(), _Function.identity).annotations({
+  identifier: "Lowercase"
+});
 /**
  * This schema converts a string to uppercase.
  *
  * @category string transformations
  * @since 1.0.0
  */
-const Uppercase = exports.Uppercase = /*#__PURE__*/transform(string, Uppercased, s => s.toUpperCase(), _Function.identity).pipe( /*#__PURE__*/identifier("Uppercase"));
+const Uppercase = exports.Uppercase = /*#__PURE__*/transform(string, Uppercased, s => s.toUpperCase(), _Function.identity).annotations({
+  identifier: "Uppercase"
+});
 /**
  * @category string constructors
  * @since 1.0.0
@@ -1454,7 +1630,9 @@ const Trimmed = exports.Trimmed = /*#__PURE__*/string.pipe( /*#__PURE__*/trimmed
  * @category string transformations
  * @since 1.0.0
  */
-const Trim = exports.Trim = /*#__PURE__*/transform(string, Trimmed, s => s.trim(), _Function.identity).pipe( /*#__PURE__*/identifier("Trim"));
+const Trim = exports.Trim = /*#__PURE__*/transform(string, Trimmed, s => s.trim(), _Function.identity).annotations({
+  identifier: "Trim"
+});
 /**
  * Returns a achema that allows splitting a string into an array of strings.
  *
@@ -1463,11 +1641,11 @@ const Trim = exports.Trim = /*#__PURE__*/transform(string, Trimmed, s => s.trim(
  */
 const split = separator => transform(string, array(string), S.split(separator), ReadonlyArray.join(separator));
 exports.split = split;
-const JsonString = /*#__PURE__*/string.pipe( /*#__PURE__*/annotations({
+const JsonString = /*#__PURE__*/string.annotations({
   [AST.IdentifierAnnotationId]: "JsonString",
   [AST.TitleAnnotationId]: "JsonString",
   [AST.DescriptionAnnotationId]: "a JSON string"
-}));
+});
 /**
  * The `parseJson` combinator provides a method to convert JSON strings into the `unknown` type using the underlying
  * functionality of `JSON.parse`. It also utilizes `JSON.stringify` for encoding.
@@ -1492,10 +1670,10 @@ const parseJson = (schema, o) => {
   const options = schema;
   return transformOrFail(JsonString, unknown, (s, _, ast) => ParseResult.try({
     try: () => JSON.parse(s, options?.reviver),
-    catch: e => ParseResult.type(ast, s, e.message)
+    catch: e => new ParseResult.Type(ast, s, e.message)
   }), (u, _, ast) => ParseResult.try({
     try: () => JSON.stringify(u, options?.replacer, options?.space),
-    catch: e => ParseResult.type(ast, u, e.message)
+    catch: e => new ParseResult.Type(ast, u, e.message)
   }));
 };
 /**
@@ -1563,50 +1741,50 @@ const FiniteTypeId = exports.FiniteTypeId = /*#__PURE__*/Symbol.for("@effect/sch
  * @category number filters
  * @since 1.0.0
  */
-const finite = options => self => self.pipe(filter(a => Number.isFinite(a), {
+const finite = annotations => self => self.pipe(filter(a => Number.isFinite(a), {
   typeId: FiniteTypeId,
   description: "a finite number",
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
 exports.finite = finite;
-const GreaterThanTypeId = exports.GreaterThanTypeId = filters.GreaterThanTypeId;
+const GreaterThanTypeId = exports.GreaterThanTypeId = _filters.GreaterThanTypeId;
 /**
  * This filter checks whether the provided number is greater than the specified minimum.
  *
  * @category number filters
  * @since 1.0.0
  */
-const greaterThan = (min, options) => self => self.pipe(filter(a => a > min, {
+const greaterThan = (min, annotations) => self => self.pipe(filter(a => a > min, {
   typeId: GreaterThanTypeId,
   description: min === 0 ? "a positive number" : `a number greater than ${min}`,
   jsonSchema: {
     exclusiveMinimum: min
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
 exports.greaterThan = greaterThan;
-const GreaterThanOrEqualToTypeId = exports.GreaterThanOrEqualToTypeId = filters.GreaterThanOrEqualToTypeId;
+const GreaterThanOrEqualToTypeId = exports.GreaterThanOrEqualToTypeId = _filters.GreaterThanOrEqualToTypeId;
 /**
  * This filter checks whether the provided number is greater than or equal to the specified minimum.
  *
  * @category number filters
  * @since 1.0.0
  */
-const greaterThanOrEqualTo = (min, options) => self => self.pipe(filter(a => a >= min, {
+const greaterThanOrEqualTo = (min, annotations) => self => self.pipe(filter(a => a >= min, {
   typeId: GreaterThanOrEqualToTypeId,
   description: min === 0 ? "a non-negative number" : `a number greater than or equal to ${min}`,
   jsonSchema: {
     minimum: min
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
@@ -1618,94 +1796,94 @@ const MultipleOfTypeId = exports.MultipleOfTypeId = /*#__PURE__*/Symbol.for("@ef
  * @category number filters
  * @since 1.0.0
  */
-const multipleOf = (divisor, options) => self => self.pipe(filter(a => N.remainder(a, divisor) === 0, {
+const multipleOf = (divisor, annotations) => self => self.pipe(filter(a => N.remainder(a, divisor) === 0, {
   typeId: MultipleOfTypeId,
   description: `a number divisible by ${divisor}`,
   jsonSchema: {
     multipleOf: Math.abs(divisor)
   },
   // spec requires positive divisor
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
 exports.multipleOf = multipleOf;
-const IntTypeId = exports.IntTypeId = filters.IntTypeId;
+const IntTypeId = exports.IntTypeId = _filters.IntTypeId;
 /**
  * @category number filters
  * @since 1.0.0
  */
-const int = options => self => self.pipe(filter(a => Number.isSafeInteger(a), {
+const int = annotations => self => self.pipe(filter(a => Number.isSafeInteger(a), {
   typeId: IntTypeId,
   title: "integer",
   description: "an integer",
   jsonSchema: {
     type: "integer"
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
 exports.int = int;
-const LessThanTypeId = exports.LessThanTypeId = filters.LessThanTypeId;
+const LessThanTypeId = exports.LessThanTypeId = _filters.LessThanTypeId;
 /**
  * This filter checks whether the provided number is less than the specified maximum.
  *
  * @category number filters
  * @since 1.0.0
  */
-const lessThan = (max, options) => self => self.pipe(filter(a => a < max, {
+const lessThan = (max, annotations) => self => self.pipe(filter(a => a < max, {
   typeId: LessThanTypeId,
   description: max === 0 ? "a negative number" : `a number less than ${max}`,
   jsonSchema: {
     exclusiveMaximum: max
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
 exports.lessThan = lessThan;
-const LessThanOrEqualToTypeId = exports.LessThanOrEqualToTypeId = filters.LessThanOrEqualToTypeId;
+const LessThanOrEqualToTypeId = exports.LessThanOrEqualToTypeId = _filters.LessThanOrEqualToTypeId;
 /**
  * This schema checks whether the provided number is less than or equal to the specified maximum.
  *
  * @category number filters
  * @since 1.0.0
  */
-const lessThanOrEqualTo = (max, options) => self => self.pipe(filter(a => a <= max, {
+const lessThanOrEqualTo = (max, annotations) => self => self.pipe(filter(a => a <= max, {
   typeId: LessThanOrEqualToTypeId,
   description: max === 0 ? "a non-positive number" : `a number less than or equal to ${max}`,
   jsonSchema: {
     maximum: max
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
 exports.lessThanOrEqualTo = lessThanOrEqualTo;
-const BetweenTypeId = exports.BetweenTypeId = filters.BetweenTypeId;
+const BetweenTypeId = exports.BetweenTypeId = _filters.BetweenTypeId;
 /**
  * This filter checks whether the provided number falls within the specified minimum and maximum values.
  *
  * @category number filters
  * @since 1.0.0
  */
-const between = (min, max, options) => self => self.pipe(filter(a => a >= min && a <= max, {
+const between = (min, max, annotations) => self => self.pipe(filter(a => a >= min && a <= max, {
   typeId: BetweenTypeId,
   description: `a number between ${min} and ${max}`,
   jsonSchema: {
     maximum: max,
     minimum: min
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
@@ -1717,35 +1895,35 @@ const NonNaNTypeId = exports.NonNaNTypeId = /*#__PURE__*/Symbol.for("@effect/sch
  * @category number filters
  * @since 1.0.0
  */
-const nonNaN = options => self => self.pipe(filter(a => !Number.isNaN(a), {
+const nonNaN = annotations => self => self.pipe(filter(a => !Number.isNaN(a), {
   typeId: NonNaNTypeId,
   description: "a number excluding NaN",
-  ...options
+  ...annotations
 }));
 /**
  * @category number filters
  * @since 1.0.0
  */
 exports.nonNaN = nonNaN;
-const positive = options => greaterThan(0, options);
+const positive = annotations => greaterThan(0, annotations);
 /**
  * @category number filters
  * @since 1.0.0
  */
 exports.positive = positive;
-const negative = options => lessThan(0, options);
+const negative = annotations => lessThan(0, annotations);
 /**
  * @category number filters
  * @since 1.0.0
  */
 exports.negative = negative;
-const nonPositive = options => lessThanOrEqualTo(0, options);
+const nonPositive = annotations => lessThanOrEqualTo(0, annotations);
 /**
  * @category number filters
  * @since 1.0.0
  */
 exports.nonPositive = nonPositive;
-const nonNegative = options => greaterThanOrEqualTo(0, options);
+const nonNegative = annotations => greaterThanOrEqualTo(0, annotations);
 /**
  * Clamps a number between a minimum and a maximum value.
  *
@@ -1753,7 +1931,7 @@ const nonNegative = options => greaterThanOrEqualTo(0, options);
  * @since 1.0.0
  */
 exports.nonNegative = nonNegative;
-const clamp = (minimum, maximum) => self => transform(self, self.pipe(to, between(minimum, maximum)), self => N.clamp(self, {
+const clamp = (minimum, maximum) => self => transform(self, self.pipe(typeSchema, between(minimum, maximum)), self => N.clamp(self, {
   minimum,
   maximum
 }), _Function.identity, {
@@ -1770,7 +1948,9 @@ const clamp = (minimum, maximum) => self => transform(self, self.pipe(to, betwee
  * @since 1.0.0
  */
 exports.clamp = clamp;
-const NumberFromString = exports.NumberFromString = /*#__PURE__*/transformOrFail(string, number, (s, _, ast) => ParseResult.fromOption(N.parse(s), () => ParseResult.type(ast, s)), n => ParseResult.succeed(String(n))).pipe( /*#__PURE__*/identifier("NumberFromString"));
+const NumberFromString = exports.NumberFromString = /*#__PURE__*/transformOrFail(string, number, (s, _, ast) => ParseResult.fromOption(N.parse(s), () => new ParseResult.Type(ast, s)), n => ParseResult.succeed(String(n))).annotations({
+  identifier: "NumberFromString"
+});
 /**
  * @category number constructors
  * @since 1.0.0
@@ -1872,17 +2052,19 @@ const Not = exports.Not = /*#__PURE__*/transform(boolean, boolean, self => !self
  */
 const symbol = exports.symbol = /*#__PURE__*/transform(string, symbolFromSelf, s => Symbol.for(s), sym => sym.description, {
   strict: false
-}).pipe( /*#__PURE__*/identifier("symbol"));
+}).annotations({
+  identifier: "symbol"
+});
 /**
  * @category type id
  * @since 1.0.0
  */
-const GreaterThanBigintTypeId = exports.GreaterThanBigintTypeId = filters.GreaterThanBigintTypeId;
+const GreaterThanBigintTypeId = exports.GreaterThanBigintTypeId = _filters.GreaterThanBigintTypeId;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-const greaterThanBigint = (min, options) => self => self.pipe(filter(a => a > min, {
+const greaterThanBigint = (min, annotations) => self => self.pipe(filter(a => a > min, {
   typeId: {
     id: GreaterThanBigintTypeId,
     annotation: {
@@ -1890,19 +2072,19 @@ const greaterThanBigint = (min, options) => self => self.pipe(filter(a => a > mi
     }
   },
   description: min === 0n ? "a positive bigint" : `a bigint greater than ${min}n`,
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
 exports.greaterThanBigint = greaterThanBigint;
-const GreaterThanOrEqualToBigintTypeId = exports.GreaterThanOrEqualToBigintTypeId = filters.GreaterThanOrEqualToBigintTypeId;
+const GreaterThanOrEqualToBigintTypeId = exports.GreaterThanOrEqualToBigintTypeId = _filters.GreaterThanOrEqualToBigintTypeId;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-const greaterThanOrEqualToBigint = (min, options) => self => self.pipe(filter(a => a >= min, {
+const greaterThanOrEqualToBigint = (min, annotations) => self => self.pipe(filter(a => a >= min, {
   typeId: {
     id: GreaterThanOrEqualToBigintTypeId,
     annotation: {
@@ -1910,19 +2092,19 @@ const greaterThanOrEqualToBigint = (min, options) => self => self.pipe(filter(a
     }
   },
   description: min === 0n ? "a non-negative bigint" : `a bigint greater than or equal to ${min}n`,
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
 exports.greaterThanOrEqualToBigint = greaterThanOrEqualToBigint;
-const LessThanBigintTypeId = exports.LessThanBigintTypeId = filters.LessThanBigintTypeId;
+const LessThanBigintTypeId = exports.LessThanBigintTypeId = _filters.LessThanBigintTypeId;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-const lessThanBigint = (max, options) => self => self.pipe(filter(a => a < max, {
+const lessThanBigint = (max, annotations) => self => self.pipe(filter(a => a < max, {
   typeId: {
     id: LessThanBigintTypeId,
     annotation: {
@@ -1930,19 +2112,19 @@ const lessThanBigint = (max, options) => self => self.pipe(filter(a => a < max,
     }
   },
   description: max === 0n ? "a negative bigint" : `a bigint less than ${max}n`,
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
 exports.lessThanBigint = lessThanBigint;
-const LessThanOrEqualToBigintTypeId = exports.LessThanOrEqualToBigintTypeId = filters.LessThanOrEqualToBigintTypeId;
+const LessThanOrEqualToBigintTypeId = exports.LessThanOrEqualToBigintTypeId = _filters.LessThanOrEqualToBigintTypeId;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-const lessThanOrEqualToBigint = (max, options) => self => self.pipe(filter(a => a <= max, {
+const lessThanOrEqualToBigint = (max, annotations) => self => self.pipe(filter(a => a <= max, {
   typeId: {
     id: LessThanOrEqualToBigintTypeId,
     annotation: {
@@ -1950,19 +2132,19 @@ const lessThanOrEqualToBigint = (max, options) => self => self.pipe(filter(a =>
     }
   },
   description: max === 0n ? "a non-positive bigint" : `a bigint less than or equal to ${max}n`,
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
 exports.lessThanOrEqualToBigint = lessThanOrEqualToBigint;
-const BetweenBigintTypeId = exports.BetweenBigintTypeId = filters.BetweenBigintTypeId;
+const BetweenBigintTypeId = exports.BetweenBigintTypeId = _filters.BetweenBigintTypeId;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-const betweenBigint = (min, max, options) => self => self.pipe(filter(a => a >= min && a <= max, {
+const betweenBigint = (min, max, annotations) => self => self.pipe(filter(a => a >= min && a <= max, {
   typeId: {
     id: BetweenBigintTypeId,
     annotation: {
@@ -1971,32 +2153,32 @@ const betweenBigint = (min, max, options) => self => self.pipe(filter(a => a >=
     }
   },
   description: `a bigint between ${min}n and ${max}n`,
-  ...options
+  ...annotations
 }));
 /**
  * @category bigint filters
  * @since 1.0.0
  */
 exports.betweenBigint = betweenBigint;
-const positiveBigint = options => greaterThanBigint(0n, options);
+const positiveBigint = annotations => greaterThanBigint(0n, annotations);
 /**
  * @category bigint filters
  * @since 1.0.0
  */
 exports.positiveBigint = positiveBigint;
-const negativeBigint = options => lessThanBigint(0n, options);
+const negativeBigint = annotations => lessThanBigint(0n, annotations);
 /**
  * @category bigint filters
  * @since 1.0.0
  */
 exports.negativeBigint = negativeBigint;
-const nonNegativeBigint = options => greaterThanOrEqualToBigint(0n, options);
+const nonNegativeBigint = annotations => greaterThanOrEqualToBigint(0n, annotations);
 /**
  * @category bigint filters
  * @since 1.0.0
  */
 exports.nonNegativeBigint = nonNegativeBigint;
-const nonPositiveBigint = options => lessThanOrEqualToBigint(0n, options);
+const nonPositiveBigint = annotations => lessThanOrEqualToBigint(0n, annotations);
 /**
  * Clamps a bigint between a minimum and a maximum value.
  *
@@ -2004,7 +2186,7 @@ const nonPositiveBigint = options => lessThanOrEqualToBigint(0n, options);
  * @since 1.0.0
  */
 exports.nonPositiveBigint = nonPositiveBigint;
-const clampBigint = (minimum, maximum) => self => transform(self, self.pipe(to, betweenBigint(minimum, maximum)), self => BigInt_.clamp(self, {
+const clampBigint = (minimum, maximum) => self => transform(self, self.pipe(typeSchema, betweenBigint(minimum, maximum)), self => _bigInt.clamp(self, {
   minimum,
   maximum
 }), _Function.identity, {
@@ -2021,13 +2203,15 @@ const clampBigint = (minimum, maximum) => self => transform(self, self.pipe(to,
 exports.clampBigint = clampBigint;
 const bigint = exports.bigint = /*#__PURE__*/transformOrFail(string, bigintFromSelf, (s, _, ast) => {
   if (s.trim() === "") {
-    return ParseResult.fail(ParseResult.type(ast, s));
+    return ParseResult.fail(new ParseResult.Type(ast, s));
   }
   return ParseResult.try({
     try: () => BigInt(s),
-    catch: () => ParseResult.type(ast, s)
+    catch: () => new ParseResult.Type(ast, s)
   });
-}, n => ParseResult.succeed(String(n))).pipe( /*#__PURE__*/identifier("bigint"));
+}, n => ParseResult.succeed(String(n))).annotations({
+  identifier: "bigint"
+});
 /**
  * @category bigint constructors
  * @since 1.0.0
@@ -2102,29 +2286,39 @@ const NonNegativeBigint = exports.NonNegativeBigint = /*#__PURE__*/bigint.pipe(
  */
 const BigintFromNumber = exports.BigintFromNumber = /*#__PURE__*/transformOrFail(number, bigintFromSelf, (n, _, ast) => ParseResult.try({
   try: () => BigInt(n),
-  catch: () => ParseResult.type(ast, n)
-}), (b, _, ast) => ParseResult.fromOption(BigInt_.toNumber(b), () => ParseResult.type(ast, b))).pipe( /*#__PURE__*/identifier("BigintFromNumber"));
+  catch: () => new ParseResult.Type(ast, n)
+}), (b, _, ast) => ParseResult.fromOption(_bigInt.toNumber(b), () => new ParseResult.Type(ast, b))).annotations({
+  identifier: "BigintFromNumber"
+});
 /**
  * @category Secret constructors
  * @since 1.0.0
  */
-const SecretFromSelf = exports.SecretFromSelf = /*#__PURE__*/declare(Secret.isSecret, {
+const SecretFromSelf = exports.SecretFromSelf = /*#__PURE__*/declare(_secret.isSecret, {
   identifier: "SecretFromSelf",
   pretty: () => secret => String(secret),
-  arbitrary: () => fc => fc.string().map(_ => Secret.fromString(_))
+  arbitrary: () => fc => fc.string().map(_ => _secret.fromString(_))
 });
-const _Secret = exports.Secret = /*#__PURE__*/transform(string, SecretFromSelf, str => Secret.fromString(str), secret => Secret.value(secret), {
+/**
+ * A schema that transforms a `string` into a `Secret`.
+ *
+ * @category Secret transformations
+ * @since 1.0.0
+ */
+const Secret = exports.Secret = /*#__PURE__*/transform(string, SecretFromSelf, str => _secret.fromString(str), secret => _secret.value(secret), {
   strict: false
-}).pipe( /*#__PURE__*/identifier("Secret"));
+}).annotations({
+  identifier: "Secret"
+});
 /**
  * @category Duration constructors
  * @since 1.0.0
  */
-const DurationFromSelf = exports.DurationFromSelf = /*#__PURE__*/declare(Duration.isDuration, {
+const DurationFromSelf = exports.DurationFromSelf = /*#__PURE__*/declare(_duration.isDuration, {
   identifier: "DurationFromSelf",
   pretty: () => String,
-  arbitrary: () => fc => fc.oneof(fc.constant(Duration.infinity), fc.bigUint().map(_ => Duration.nanos(_)), fc.bigUint().map(_ => Duration.micros(_)), fc.maxSafeNat().map(_ => Duration.millis(_)), fc.maxSafeNat().map(_ => Duration.seconds(_)), fc.maxSafeNat().map(_ => Duration.minutes(_)), fc.maxSafeNat().map(_ => Duration.hours(_)), fc.maxSafeNat().map(_ => Duration.days(_)), fc.maxSafeNat().map(_ => Duration.weeks(_))),
-  equivalence: () => Duration.Equivalence
+  arbitrary: () => fc => fc.oneof(fc.constant(_duration.infinity), fc.bigUint().map(_ => _duration.nanos(_)), fc.bigUint().map(_ => _duration.micros(_)), fc.maxSafeNat().map(_ => _duration.millis(_)), fc.maxSafeNat().map(_ => _duration.seconds(_)), fc.maxSafeNat().map(_ => _duration.minutes(_)), fc.maxSafeNat().map(_ => _duration.hours(_)), fc.maxSafeNat().map(_ => _duration.days(_)), fc.maxSafeNat().map(_ => _duration.weeks(_))),
+  equivalence: () => _duration.Equivalence
 });
 /**
  * A schema that transforms a `bigint` tuple into a `Duration`.
@@ -2133,10 +2327,12 @@ const DurationFromSelf = exports.DurationFromSelf = /*#__PURE__*/declare(Duratio
  * @category Duration transformations
  * @since 1.0.0
  */
-const DurationFromNanos = exports.DurationFromNanos = /*#__PURE__*/transformOrFail(bigintFromSelf, DurationFromSelf, nanos => ParseResult.succeed(Duration.nanos(nanos)), (duration, _, ast) => Option.match(Duration.toNanos(duration), {
-  onNone: () => ParseResult.fail(ParseResult.type(ast, duration)),
+const DurationFromNanos = exports.DurationFromNanos = /*#__PURE__*/transformOrFail(bigintFromSelf, DurationFromSelf, nanos => ParseResult.succeed(_duration.nanos(nanos)), (duration, _, ast) => Option.match(_duration.toNanos(duration), {
+  onNone: () => ParseResult.fail(new ParseResult.Type(ast, duration)),
   onSome: val => ParseResult.succeed(val)
-})).pipe( /*#__PURE__*/identifier("DurationFromNanos"));
+})).annotations({
+  identifier: "DurationFromNanos"
+});
 /**
  * A schema that transforms a `number` tuple into a `Duration`.
  * Treats the value as the number of milliseconds.
@@ -2144,7 +2340,9 @@ const DurationFromNanos = exports.DurationFromNanos = /*#__PURE__*/transformOrFa
  * @category Duration transformations
  * @since 1.0.0
  */
-const DurationFromMillis = exports.DurationFromMillis = /*#__PURE__*/transform(number, DurationFromSelf, ms => Duration.millis(ms), n => Duration.toMillis(n)).pipe( /*#__PURE__*/identifier("DurationFromMillis"));
+const DurationFromMillis = exports.DurationFromMillis = /*#__PURE__*/transform(number, DurationFromSelf, ms => _duration.millis(ms), n => _duration.toMillis(n)).annotations({
+  identifier: "DurationFromMillis"
+});
 const hrTime = /*#__PURE__*/tuple( /*#__PURE__*/NonNegative.pipe( /*#__PURE__*/finite({
   [AST.TitleAnnotationId]: "seconds",
   [AST.DescriptionAnnotationId]: "seconds"
@@ -2152,14 +2350,22 @@ const hrTime = /*#__PURE__*/tuple( /*#__PURE__*/NonNegative.pipe( /*#__PURE__*/f
   [AST.TitleAnnotationId]: "nanos",
   [AST.DescriptionAnnotationId]: "nanos"
 })));
-const _Duration = exports.Duration = /*#__PURE__*/transform(hrTime, DurationFromSelf, ([seconds, nanos]) => Duration.nanos(BigInt(seconds) * BigInt(1e9) + BigInt(nanos)), duration => Duration.toHrTime(duration)).pipe( /*#__PURE__*/identifier("Duration"));
+/**
+ * A schema that transforms a `[number, number]` tuple into a `Duration`.
+ *
+ * @category Duration transformations
+ * @since 1.0.0
+ */
+const Duration = exports.Duration = /*#__PURE__*/transform(hrTime, DurationFromSelf, ([seconds, nanos]) => _duration.nanos(BigInt(seconds) * BigInt(1e9) + BigInt(nanos)), duration => _duration.toHrTime(duration)).annotations({
+  identifier: "Duration"
+});
 /**
  * Clamps a `Duration` between a minimum and a maximum value.
  *
  * @category Duration transformations
  * @since 1.0.0
  */
-const clampDuration = (minimum, maximum) => self => transform(self, self.pipe(to, betweenDuration(minimum, maximum)), self => Duration.clamp(self, {
+const clampDuration = (minimum, maximum) => self => transform(self, self.pipe(typeSchema, betweenDuration(minimum, maximum)), self => _duration.clamp(self, {
   minimum,
   maximum
 }), _Function.identity, {
@@ -2175,15 +2381,15 @@ const LessThanDurationTypeId = exports.LessThanDurationTypeId = /*#__PURE__*/Sym
  * @category Duration filters
  * @since 1.0.0
  */
-const lessThanDuration = (max, options) => self => self.pipe(filter(a => Duration.lessThan(a, max), {
+const lessThanDuration = (max, annotations) => self => self.pipe(filter(a => _duration.lessThan(a, max), {
   typeId: {
     id: LessThanDurationTypeId,
     annotation: {
       max
     }
   },
-  description: `a Duration less than ${Duration.decode(max)}`,
-  ...options
+  description: `a Duration less than ${_duration.decode(max)}`,
+  ...annotations
 }));
 /**
  * @category type id
@@ -2195,15 +2401,15 @@ const LessThanOrEqualToDurationTypeId = exports.LessThanOrEqualToDurationTypeId
  * @category Duration filters
  * @since 1.0.0
  */
-const lessThanOrEqualToDuration = (max, options) => self => self.pipe(filter(a => Duration.lessThanOrEqualTo(a, max), {
+const lessThanOrEqualToDuration = (max, annotations) => self => self.pipe(filter(a => _duration.lessThanOrEqualTo(a, max), {
   typeId: {
     id: LessThanDurationTypeId,
     annotation: {
       max
     }
   },
-  description: `a Duration less than or equal to ${Duration.decode(max)}`,
-  ...options
+  description: `a Duration less than or equal to ${_duration.decode(max)}`,
+  ...annotations
 }));
 /**
  * @category type id
@@ -2215,15 +2421,15 @@ const GreaterThanDurationTypeId = exports.GreaterThanDurationTypeId = /*#__PURE_
  * @category Duration filters
  * @since 1.0.0
  */
-const greaterThanDuration = (min, options) => self => self.pipe(filter(a => Duration.greaterThan(a, min), {
+const greaterThanDuration = (min, annotations) => self => self.pipe(filter(a => _duration.greaterThan(a, min), {
   typeId: {
     id: GreaterThanDurationTypeId,
     annotation: {
       min
     }
   },
-  description: `a Duration greater than ${Duration.decode(min)}`,
-  ...options
+  description: `a Duration greater than ${_duration.decode(min)}`,
+  ...annotations
 }));
 /**
  * @category type id
@@ -2235,15 +2441,15 @@ const GreaterThanOrEqualToDurationTypeId = exports.GreaterThanOrEqualToDurationT
  * @category Duration filters
  * @since 1.0.0
  */
-const greaterThanOrEqualToDuration = (min, options) => self => self.pipe(filter(a => Duration.greaterThanOrEqualTo(a, min), {
+const greaterThanOrEqualToDuration = (min, annotations) => self => self.pipe(filter(a => _duration.greaterThanOrEqualTo(a, min), {
   typeId: {
     id: GreaterThanOrEqualToDurationTypeId,
     annotation: {
       min
     }
   },
-  description: `a Duration greater than or equal to ${Duration.decode(min)}`,
-  ...options
+  description: `a Duration greater than or equal to ${_duration.decode(min)}`,
+  ...annotations
 }));
 /**
  * @category type id
@@ -2255,7 +2461,7 @@ const BetweenDurationTypeId = exports.BetweenDurationTypeId = /*#__PURE__*/Symbo
  * @category Duration filters
  * @since 1.0.0
  */
-const betweenDuration = (minimum, maximum, options) => self => self.pipe(filter(a => Duration.between(a, {
+const betweenDuration = (minimum, maximum, annotations) => self => self.pipe(filter(a => _duration.between(a, {
   minimum,
   maximum
 }), {
@@ -2266,8 +2472,8 @@ const betweenDuration = (minimum, maximum, options) => self => self.pipe(filter(
       minimum
     }
   },
-  description: `a Duration between ${Duration.decode(minimum)} and ${Duration.decode(maximum)}`,
-  ...options
+  description: `a Duration between ${_duration.decode(minimum)} and ${_duration.decode(maximum)}`,
+  ...annotations
 }));
 /**
  * @category Uint8Array constructors
@@ -2283,10 +2489,16 @@ const Uint8ArrayFromSelf = exports.Uint8ArrayFromSelf = /*#__PURE__*/declare(Pre
 const _Uint8Array = exports.Uint8Array = /*#__PURE__*/transform(array(number.pipe(between(0, 255, {
   title: "8-bit unsigned integer",
   description: "a 8-bit unsigned integer"
-}))).pipe(description("an array of 8-bit unsigned integers")), Uint8ArrayFromSelf, a => Uint8Array.from(a), arr => Array.from(arr)).pipe( /*#__PURE__*/identifier("Uint8Array"));
-const makeEncodingTransformation = (id, decode, encode) => transformOrFail(string, Uint8ArrayFromSelf, (s, _, ast) => Either.mapLeft(decode(s), decodeException => ParseResult.type(ast, s, decodeException.message)), u => ParseResult.succeed(encode(u)), {
+}))).annotations({
+  description: "an array of 8-bit unsigned integers"
+}), Uint8ArrayFromSelf, a => Uint8Array.from(a), arr => Array.from(arr)).annotations({
+  identifier: "Uint8Array"
+});
+const makeEncodingTransformation = (id, decode, encode) => transformOrFail(string, Uint8ArrayFromSelf, (s, _, ast) => Either.mapLeft(decode(s), decodeException => new ParseResult.Type(ast, s, decodeException.message)), u => ParseResult.succeed(encode(u)), {
   strict: false
-}).pipe(identifier(id));
+}).annotations({
+  identifier: id
+});
 /**
  * @category Encoding transformations
  * @since 1.0.0
@@ -2306,55 +2518,55 @@ const Hex = exports.Hex = /*#__PURE__*/makeEncodingTransformation("Hex", Encodin
  * @category type id
  * @since 1.0.0
  */
-const MinItemsTypeId = exports.MinItemsTypeId = filters.MinItemsTypeId;
+const MinItemsTypeId = exports.MinItemsTypeId = _filters.MinItemsTypeId;
 /**
  * @category ReadonlyArray filters
  * @since 1.0.0
  */
-const minItems = (n, options) => self => self.pipe(filter(a => a.length >= n, {
+const minItems = (n, annotations) => self => self.pipe(filter(a => a.length >= n, {
   typeId: MinItemsTypeId,
   description: `an array of at least ${n} items`,
   jsonSchema: {
     minItems: n
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
 exports.minItems = minItems;
-const MaxItemsTypeId = exports.MaxItemsTypeId = filters.MaxItemsTypeId;
+const MaxItemsTypeId = exports.MaxItemsTypeId = _filters.MaxItemsTypeId;
 /**
  * @category ReadonlyArray filters
  * @since 1.0.0
  */
-const maxItems = (n, options) => self => self.pipe(filter(a => a.length <= n, {
+const maxItems = (n, annotations) => self => self.pipe(filter(a => a.length <= n, {
   typeId: MaxItemsTypeId,
   description: `an array of at most ${n} items`,
   jsonSchema: {
     maxItems: n
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
 exports.maxItems = maxItems;
-const ItemsCountTypeId = exports.ItemsCountTypeId = filters.ItemsCountTypeId;
+const ItemsCountTypeId = exports.ItemsCountTypeId = _filters.ItemsCountTypeId;
 /**
  * @category ReadonlyArray filters
  * @since 1.0.0
  */
-const itemsCount = (n, options) => self => self.pipe(filter(a => a.length === n, {
+const itemsCount = (n, annotations) => self => self.pipe(filter(a => a.length === n, {
   typeId: ItemsCountTypeId,
   description: `an array of exactly ${n} items`,
   jsonSchema: {
     minItems: n,
     maxItems: n
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category ReadonlyArray transformations
@@ -2369,7 +2581,7 @@ const getNumberIndexedAccess = self => make(AST.getNumberIndexedAccess(self.ast)
  * @since 1.0.0
  */
 exports.getNumberIndexedAccess = getNumberIndexedAccess;
-const head = self => transform(self, optionFromSelf(getNumberIndexedAccess(to(self))), ReadonlyArray.head, Option.match({
+const head = self => transform(self, optionFromSelf(getNumberIndexedAccess(typeSchema(self))), ReadonlyArray.head, Option.match({
   onNone: () => [],
   onSome: ReadonlyArray.of
 }));
@@ -2382,7 +2594,7 @@ const head = self => transform(self, optionFromSelf(getNumberIndexedAccess(to(se
  * @since 1.0.0
  */
 exports.head = head;
-const headOr = exports.headOr = /*#__PURE__*/(0, _Function.dual)(args => isSchema(args[0]), (self, fallback) => transformOrFail(self, getNumberIndexedAccess(to(self)), (as, _, ast) => as.length > 0 ? ParseResult.succeed(as[0]) : fallback ? ParseResult.succeed(fallback()) : ParseResult.fail(ParseResult.type(ast, as)), a => ParseResult.succeed(ReadonlyArray.of(a))));
+const headOr = exports.headOr = /*#__PURE__*/(0, _Function.dual)(args => isSchema(args[0]), (self, fallback) => transformOrFail(self, getNumberIndexedAccess(typeSchema(self)), (as, _, ast) => as.length > 0 ? ParseResult.succeed(as[0]) : fallback ? ParseResult.succeed(fallback()) : ParseResult.fail(new ParseResult.Type(ast, as)), a => ParseResult.succeed(ReadonlyArray.of(a))));
 /**
  * @category type id
  * @since 1.0.0
@@ -2394,10 +2606,10 @@ const ValidDateTypeId = exports.ValidDateTypeId = /*#__PURE__*/Symbol.for("@effe
  * @category Date filters
  * @since 1.0.0
  */
-const validDate = options => self => self.pipe(filter(a => !Number.isNaN(a.getTime()), {
+const validDate = annotations => self => self.pipe(filter(a => !Number.isNaN(a.getTime()), {
   typeId: ValidDateTypeId,
   description: "a valid Date",
-  ...options
+  ...annotations
 }));
 /**
  * Represents a schema for handling potentially **invalid** `Date` instances (e.g., `new Date("Invalid Date")` is not rejected).
@@ -2431,28 +2643,36 @@ const ValidDateFromSelf = exports.ValidDateFromSelf = /*#__PURE__*/DateFromSelf.
  * @category Date transformations
  * @since 1.0.0
  */
-const DateFromString = exports.DateFromString = /*#__PURE__*/transform(string, DateFromSelf, s => new Date(s), n => n.toISOString()).pipe( /*#__PURE__*/identifier("DateFromString"));
+const DateFromString = exports.DateFromString = /*#__PURE__*/transform(string, DateFromSelf, s => new Date(s), n => n.toISOString()).annotations({
+  identifier: "DateFromString"
+});
 const _Date = exports.Date = /*#__PURE__*/DateFromString.pipe( /*#__PURE__*/validDate({
   identifier: "Date"
 }));
-const OptionNoneFrom = /*#__PURE__*/struct({
-  _tag: /*#__PURE__*/literal("None")
+const OptionNoneEncoded = /*#__PURE__*/struct({
+  _tag: literal("None")
+}).annotations({
+  description: "NoneEncoded"
 });
-const optionSomeFrom = value => struct({
+const optionSomeEncoded = value => struct({
   _tag: literal("Some"),
   value
+}).annotations({
+  description: `SomeEncoded<${format(value)}>`
+});
+const optionEncoded = value => union(OptionNoneEncoded, optionSomeEncoded(value)).annotations({
+  description: `OptionEncoded<${format(value)}>`
 });
-const optionFrom = value => union(OptionNoneFrom, optionSomeFrom(value));
 const optionDecode = input => input._tag === "None" ? Option.none() : Option.some(input.value);
 const optionArbitrary = value => {
-  const arb = arbitrary.make(optionFrom(schemaFromArbitrary(value)));
+  const arb = arbitrary.make(optionEncoded(schemaFromArbitrary(value)));
   return fc => arb(fc).map(optionDecode);
 };
 const optionPretty = value => Option.match({
   onNone: () => "none()",
   onSome: a => `some(${value(a)})`
 });
-const optionParse = decodeUnknown => (u, options, ast) => Option.isOption(u) ? Option.isNone(u) ? ParseResult.succeed(Option.none()) : ParseResult.map(decodeUnknown(u.value, options), Option.some) : ParseResult.fail(ParseResult.type(ast, u));
+const optionParse = decodeUnknown => (u, options, ast) => Option.isOption(u) ? Option.isNone(u) ? ParseResult.succeed(Option.none()) : ParseResult.map(decodeUnknown(u.value, options), Option.some) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category Option transformations
  * @since 1.0.0
@@ -2465,61 +2685,81 @@ const optionFromSelf = value => {
     equivalence: Option.getEquivalence
   });
 };
+exports.optionFromSelf = optionFromSelf;
+const makeNoneEncoded = {
+  _tag: "None"
+};
+const makeSomeEncoded = value => ({
+  _tag: "Some",
+  value
+});
 /**
  * @category Option transformations
  * @since 1.0.0
  */
-exports.optionFromSelf = optionFromSelf;
-const option = value => transform(optionFrom(value), optionFromSelf(to(value)), optionDecode, Option.match({
-  onNone: () => ({
-    _tag: "None"
-  }),
-  onSome: value => ({
-    _tag: "Some",
-    value
-  })
-}));
+const option = value => {
+  const _value = asSchema(value);
+  return transform(optionEncoded(_value), optionFromSelf(typeSchema(_value)), optionDecode, Option.match({
+    onNone: () => makeNoneEncoded,
+    onSome: makeSomeEncoded
+  }));
+};
 /**
  * @category Option transformations
  * @since 1.0.0
  */
 exports.option = option;
-const optionFromNullable = value => transform(nullable(value), optionFromSelf(to(value)), Option.fromNullable, Option.getOrNull);
+const optionFromNullable = value => {
+  const _value = asSchema(value);
+  return transform(nullable(_value), optionFromSelf(typeSchema(_value)), Option.fromNullable, Option.getOrNull);
+};
 /**
  * @category Option transformations
  * @since 1.0.0
  */
 exports.optionFromNullable = optionFromNullable;
-const optionFromNullish = (value, onNoneEncoding) => transform(nullish(value), optionFromSelf(to(value)), Option.fromNullable, onNoneEncoding === null ? Option.getOrNull : Option.getOrUndefined);
+const optionFromNullish = (value, onNoneEncoding) => {
+  const _value = asSchema(value);
+  return transform(nullish(_value), optionFromSelf(typeSchema(_value)), Option.fromNullable, onNoneEncoding === null ? Option.getOrNull : Option.getOrUndefined);
+};
 /**
  * @category Option transformations
  * @since 1.0.0
  */
 exports.optionFromNullish = optionFromNullish;
-const optionFromOrUndefined = value => transform(orUndefined(value), optionFromSelf(to(value)), Option.fromNullable, Option.getOrUndefined);
+const optionFromOrUndefined = value => {
+  const _value = asSchema(value);
+  return transform(orUndefined(_value), optionFromSelf(typeSchema(_value)), Option.fromNullable, Option.getOrUndefined);
+};
 exports.optionFromOrUndefined = optionFromOrUndefined;
-const rightFrom = right => struct({
+const rightEncoded = right => struct({
   _tag: literal("Right"),
   right
-}).pipe(description(`RightFrom<${format(right)}>`));
-const leftFrom = left => struct({
+}).annotations({
+  description: `RightEncoded<${format(right)}>`
+});
+const leftEncoded = left => struct({
   _tag: literal("Left"),
   left
-}).pipe(description(`LeftFrom<${format(left)}>`));
-const eitherFrom = (left, right) => union(rightFrom(right), leftFrom(left)).pipe(description(`EitherFrom<${format(left)}, ${format(right)}>`));
+}).annotations({
+  description: `LeftEncoded<${format(left)}>`
+});
+const eitherEncoded = (right, left) => union(rightEncoded(right), leftEncoded(left)).annotations({
+  description: `EitherEncoded<${format(left)}, ${format(right)}>`
+});
 const eitherDecode = input => input._tag === "Left" ? Either.left(input.left) : Either.right(input.right);
-const eitherArbitrary = (left, right) => {
-  const arb = arbitrary.make(eitherFrom(schemaFromArbitrary(left), schemaFromArbitrary(right)));
+const eitherArbitrary = (right, left) => {
+  const arb = arbitrary.make(eitherEncoded(schemaFromArbitrary(right), schemaFromArbitrary(left)));
   return fc => arb(fc).map(eitherDecode);
 };
-const eitherPretty = (left, right) => Either.match({
+const eitherPretty = (right, left) => Either.match({
   onLeft: e => `left(${left(e)})`,
   onRight: a => `right(${right(a)})`
 });
-const eitherParse = (decodeUnknownLeft, parseright) => (u, options, ast) => Either.isEither(u) ? Either.match(u, {
+const eitherParse = (parseRight, decodeUnknownLeft) => (u, options, ast) => Either.isEither(u) ? Either.match(u, {
   onLeft: left => ParseResult.map(decodeUnknownLeft(left, options), Either.left),
-  onRight: right => ParseResult.map(parseright(right, options), Either.right)
-}) : ParseResult.fail(ParseResult.type(ast, u));
+  onRight: right => ParseResult.map(parseRight(right, options), Either.right)
+}) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category Either transformations
  * @since 1.0.0
@@ -2528,19 +2768,19 @@ const eitherFromSelf = ({
   left,
   right
 }) => {
-  return declare([left, right], (left, right) => eitherParse(ParseResult.decodeUnknown(left), ParseResult.decodeUnknown(right)), (left, right) => eitherParse(ParseResult.encodeUnknown(left), ParseResult.encodeUnknown(right)), {
+  return declare([right, left], (right, left) => eitherParse(ParseResult.decodeUnknown(right), ParseResult.decodeUnknown(left)), (right, left) => eitherParse(ParseResult.encodeUnknown(right), ParseResult.encodeUnknown(left)), {
     description: `Either<${format(left)}, ${format(right)}>`,
     pretty: eitherPretty,
     arbitrary: eitherArbitrary,
-    equivalence: Either.getEquivalence
+    equivalence: (right, left) => Either.getEquivalence(left, right)
   });
 };
 exports.eitherFromSelf = eitherFromSelf;
-const makeLeftFrom = left => ({
+const makeLeftEncoded = left => ({
   _tag: "Left",
   left
 });
-const makeRightFrom = right => ({
+const makeRightEncoded = right => ({
   _tag: "Right",
   right
 });
@@ -2551,13 +2791,17 @@ const makeRightFrom = right => ({
 const either = ({
   left,
   right
-}) => transform(eitherFrom(left, right), eitherFromSelf({
-  left: to(left),
-  right: to(right)
-}), eitherDecode, Either.match({
-  onLeft: makeLeftFrom,
-  onRight: makeRightFrom
-}));
+}) => {
+  const _right = asSchema(right);
+  const _left = asSchema(left);
+  return transform(eitherEncoded(_right, _left), eitherFromSelf({
+    left: typeSchema(_left),
+    right: typeSchema(_right)
+  }), eitherDecode, Either.match({
+    onLeft: makeLeftEncoded,
+    onRight: makeRightEncoded
+  }));
+};
 /**
  * @example
  * import * as Schema from "@effect/schema/Schema"
@@ -2573,16 +2817,18 @@ const eitherFromUnion = ({
   left,
   right
 }) => {
-  const toleft = to(left);
-  const toright = to(right);
-  const fromLeft = transform(left, leftFrom(toleft), makeLeftFrom, l => l.left);
-  const fromRight = transform(right, rightFrom(toright), makeRightFrom, r => r.right);
+  const _right = asSchema(right);
+  const _left = asSchema(left);
+  const toright = typeSchema(_right);
+  const toleft = typeSchema(_left);
+  const fromRight = transform(_right, rightEncoded(toright), makeRightEncoded, r => r.right);
+  const fromLeft = transform(_left, leftEncoded(toleft), makeLeftEncoded, l => l.left);
   return transform(union(fromRight, fromLeft), eitherFromSelf({
     left: toleft,
     right: toright
   }), from => from._tag === "Left" ? Either.left(from.left) : Either.right(from.right), Either.match({
-    onLeft: makeLeftFrom,
-    onRight: makeRightFrom
+    onLeft: makeLeftEncoded,
+    onRight: makeRightEncoded
   }));
 };
 exports.eitherFromUnion = eitherFromUnion;
@@ -2592,7 +2838,7 @@ const readonlyMapEquivalence = (key, value) => {
   const arrayEquivalence = ReadonlyArray.getEquivalence(Equivalence.make(([ka, va], [kb, vb]) => key(ka, kb) && value(va, vb)));
   return Equivalence.make((a, b) => arrayEquivalence(Array.from(a.entries()), Array.from(b.entries())));
 };
-const readonlyMapParse = decodeUnknown => (u, options, ast) => Predicate.isMap(u) ? ParseResult.map(decodeUnknown(Array.from(u.entries()), options), as => new Map(as)) : ParseResult.fail(ParseResult.type(ast, u));
+const readonlyMapParse = decodeUnknown => (u, options, ast) => Predicate.isMap(u) ? ParseResult.map(decodeUnknown(Array.from(u.entries()), options), as => new Map(as)) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category ReadonlyMap transformations
  * @since 1.0.0
@@ -2616,10 +2862,14 @@ exports.readonlyMapFromSelf = readonlyMapFromSelf;
 const readonlyMap = ({
   key,
   value
-}) => transform(array(tuple(key, value)), readonlyMapFromSelf({
-  key: to(key),
-  value: to(value)
-}), as => new Map(as), map => Array.from(map.entries()));
+}) => {
+  const _key = asSchema(key);
+  const _value = asSchema(value);
+  return transform(array(tuple(_key, _value)), readonlyMapFromSelf({
+    key: typeSchema(_key),
+    value: typeSchema(_value)
+  }), as => new Map(as), map => Array.from(map.entries()));
+};
 exports.readonlyMap = readonlyMap;
 const readonlySetArbitrary = item => fc => fc.array(item(fc)).map(as => new Set(as));
 const readonlySetPretty = item => set => `new Set([${Array.from(set.values()).map(a => item(a)).join(", ")}])`;
@@ -2627,14 +2877,14 @@ const readonlySetEquivalence = item => {
   const arrayEquivalence = ReadonlyArray.getEquivalence(item);
   return Equivalence.make((a, b) => arrayEquivalence(Array.from(a.values()), Array.from(b.values())));
 };
-const readonlySetParse = decodeUnknown => (u, options, ast) => Predicate.isSet(u) ? ParseResult.map(decodeUnknown(Array.from(u.values()), options), as => new Set(as)) : ParseResult.fail(ParseResult.type(ast, u));
+const readonlySetParse = decodeUnknown => (u, options, ast) => Predicate.isSet(u) ? ParseResult.map(decodeUnknown(Array.from(u.values()), options), as => new Set(as)) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category ReadonlySet transformations
  * @since 1.0.0
  */
-const readonlySetFromSelf = item => {
-  return declare([item], item => readonlySetParse(ParseResult.decodeUnknown(array(item))), item => readonlySetParse(ParseResult.encodeUnknown(array(item))), {
-    description: `ReadonlySet<${format(item)}>`,
+const readonlySetFromSelf = value => {
+  return declare([value], item => readonlySetParse(ParseResult.decodeUnknown(array(item))), item => readonlySetParse(ParseResult.encodeUnknown(array(item))), {
+    description: `ReadonlySet<${format(value)}>`,
     pretty: readonlySetPretty,
     arbitrary: readonlySetArbitrary,
     equivalence: readonlySetEquivalence
@@ -2645,46 +2895,33 @@ const readonlySetFromSelf = item => {
  * @since 1.0.0
  */
 exports.readonlySetFromSelf = readonlySetFromSelf;
-const readonlySet = item => transform(array(item), readonlySetFromSelf(to(item)), as => new Set(as), set => Array.from(set));
-exports.readonlySet = readonlySet;
-const sortedSetArbitrary = (item, ord) => fc => fc.array(item(fc)).map(as => SortedSet.fromIterable(as, ord));
-const sortedSetPretty = item => set => `new SortedSet([${Array.from(SortedSet.values(set)).map(a => item(a)).join(", ")}])`;
-const sortedSetParse = (decodeUnknown, ord) => (u, options, ast) => SortedSet.isSortedSet(u) ? ParseResult.map(decodeUnknown(Array.from(SortedSet.values(u)), options), as => SortedSet.fromIterable(as, ord)) : ParseResult.fail(ParseResult.type(ast, u));
-/**
- * @category SortedSet transformations
- * @since 1.0.0
- */
-const sortedSetFromSelf = (item, ordA, ordI) => {
-  return declare([item], item => sortedSetParse(ParseResult.decodeUnknown(array(item)), ordA), item => sortedSetParse(ParseResult.encodeUnknown(array(item)), ordI), {
-    description: `SortedSet<${format(item)}>`,
-    pretty: sortedSetPretty,
-    arbitrary: arb => sortedSetArbitrary(arb, ordA),
-    equivalence: () => SortedSet.getEquivalence()
-  });
+const readonlySet = value => {
+  const _value = asSchema(value);
+  return transform(array(_value), readonlySetFromSelf(typeSchema(_value)), as => new Set(as), set => Array.from(set));
 };
-/**
- * @category SortedSet transformations
- * @since 1.0.0
- */
-exports.sortedSetFromSelf = sortedSetFromSelf;
-const sortedSet = (item, ordA) => transform(array(item), sortedSetFromSelf(to(item), ordA, ordA), as => SortedSet.fromIterable(as, ordA), set => Array.from(SortedSet.values(set)));
-exports.sortedSet = sortedSet;
-const bigDecimalPretty = () => val => `BigDecimal(${BigDecimal.format(BigDecimal.normalize(val))})`;
-const bigDecimalArbitrary = () => fc => fc.tuple(fc.bigInt(), fc.integer()).map(([value, scale]) => BigDecimal.make(value, scale));
+exports.readonlySet = readonlySet;
+const bigDecimalPretty = () => val => `BigDecimal(${_bigDecimal.format(_bigDecimal.normalize(val))})`;
+const bigDecimalArbitrary = () => fc => fc.tuple(fc.bigInt(), fc.integer()).map(([value, scale]) => _bigDecimal.make(value, scale));
 /**
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-const BigDecimalFromSelf = exports.BigDecimalFromSelf = /*#__PURE__*/declare(BigDecimal.isBigDecimal, {
+const BigDecimalFromSelf = exports.BigDecimalFromSelf = /*#__PURE__*/declare(_bigDecimal.isBigDecimal, {
   identifier: "BigDecimalFromSelf",
   pretty: bigDecimalPretty,
   arbitrary: bigDecimalArbitrary,
-  equivalence: () => BigDecimal.Equivalence
+  equivalence: () => _bigDecimal.Equivalence
+});
+/**
+ * @category BigDecimal transformations
+ * @since 1.0.0
+ */
+const BigDecimal = exports.BigDecimal = /*#__PURE__*/transformOrFail(string, BigDecimalFromSelf, (num, _, ast) => _bigDecimal.fromString(num).pipe(Option.match({
+  onNone: () => ParseResult.fail(new ParseResult.Type(ast, num)),
+  onSome: val => ParseResult.succeed(_bigDecimal.normalize(val))
+})), val => ParseResult.succeed(_bigDecimal.format(_bigDecimal.normalize(val)))).annotations({
+  identifier: "BigDecimal"
 });
-const _BigDecimal = exports.BigDecimal = /*#__PURE__*/transformOrFail(string, BigDecimalFromSelf, (num, _, ast) => BigDecimal.fromString(num).pipe(Option.match({
-  onNone: () => ParseResult.fail(ParseResult.type(ast, num)),
-  onSome: val => ParseResult.succeed(BigDecimal.normalize(val))
-})), val => ParseResult.succeed(BigDecimal.format(BigDecimal.normalize(val)))).pipe( /*#__PURE__*/identifier("BigDecimal"));
 /**
  * A schema that transforms a `number` into a `BigDecimal`.
  * When encoding, this Schema will produce incorrect results if the BigDecimal exceeds the 64-bit range of a number.
@@ -2692,7 +2929,9 @@ const _BigDecimal = exports.BigDecimal = /*#__PURE__*/transformOrFail(string, Bi
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-const BigDecimalFromNumber = exports.BigDecimalFromNumber = /*#__PURE__*/transformOrFail(number, BigDecimalFromSelf, num => ParseResult.succeed(BigDecimal.fromNumber(num)), val => ParseResult.succeed(BigDecimal.unsafeToNumber(val))).pipe( /*#__PURE__*/identifier("BigDecimalFromNumber"));
+const BigDecimalFromNumber = exports.BigDecimalFromNumber = /*#__PURE__*/transformOrFail(number, BigDecimalFromSelf, num => ParseResult.succeed(_bigDecimal.fromNumber(num)), val => ParseResult.succeed(_bigDecimal.unsafeToNumber(val))).annotations({
+  identifier: "BigDecimalFromNumber"
+});
 /**
  * @category type id
  * @since 1.0.0
@@ -2702,15 +2941,15 @@ const GreaterThanBigDecimalTypeId = exports.GreaterThanBigDecimalTypeId = /*#__P
  * @category BigDecimal filters
  * @since 1.0.0
  */
-const greaterThanBigDecimal = (min, options) => self => self.pipe(filter(a => BigDecimal.greaterThan(a, min), {
+const greaterThanBigDecimal = (min, annotations) => self => self.pipe(filter(a => _bigDecimal.greaterThan(a, min), {
   typeId: {
     id: GreaterThanBigDecimalTypeId,
     annotation: {
       min
     }
   },
-  description: `a BigDecimal greater than ${BigDecimal.format(min)}`,
-  ...options
+  description: `a BigDecimal greater than ${_bigDecimal.format(min)}`,
+  ...annotations
 }));
 /**
  * @category type id
@@ -2722,15 +2961,15 @@ const GreaterThanOrEqualToBigDecimalTypeId = exports.GreaterThanOrEqualToBigDeci
  * @category BigDecimal filters
  * @since 1.0.0
  */
-const greaterThanOrEqualToBigDecimal = (min, options) => self => self.pipe(filter(a => BigDecimal.greaterThanOrEqualTo(a, min), {
+const greaterThanOrEqualToBigDecimal = (min, annotations) => self => self.pipe(filter(a => _bigDecimal.greaterThanOrEqualTo(a, min), {
   typeId: {
     id: GreaterThanOrEqualToBigDecimalTypeId,
     annotation: {
       min
     }
   },
-  description: `a BigDecimal greater than or equal to ${BigDecimal.format(min)}`,
-  ...options
+  description: `a BigDecimal greater than or equal to ${_bigDecimal.format(min)}`,
+  ...annotations
 }));
 /**
  * @category type id
@@ -2742,15 +2981,15 @@ const LessThanBigDecimalTypeId = exports.LessThanBigDecimalTypeId = /*#__PURE__*
  * @category BigDecimal filters
  * @since 1.0.0
  */
-const lessThanBigDecimal = (max, options) => self => self.pipe(filter(a => BigDecimal.lessThan(a, max), {
+const lessThanBigDecimal = (max, annotations) => self => self.pipe(filter(a => _bigDecimal.lessThan(a, max), {
   typeId: {
     id: LessThanBigDecimalTypeId,
     annotation: {
       max
     }
   },
-  description: `a BigDecimal less than ${BigDecimal.format(max)}`,
-  ...options
+  description: `a BigDecimal less than ${_bigDecimal.format(max)}`,
+  ...annotations
 }));
 /**
  * @category type id
@@ -2762,15 +3001,15 @@ const LessThanOrEqualToBigDecimalTypeId = exports.LessThanOrEqualToBigDecimalTyp
  * @category BigDecimal filters
  * @since 1.0.0
  */
-const lessThanOrEqualToBigDecimal = (max, options) => self => self.pipe(filter(a => BigDecimal.lessThanOrEqualTo(a, max), {
+const lessThanOrEqualToBigDecimal = (max, annotations) => self => self.pipe(filter(a => _bigDecimal.lessThanOrEqualTo(a, max), {
   typeId: {
     id: LessThanOrEqualToBigDecimalTypeId,
     annotation: {
       max
     }
   },
-  description: `a BigDecimal less than or equal to ${BigDecimal.format(max)}`,
-  ...options
+  description: `a BigDecimal less than or equal to ${_bigDecimal.format(max)}`,
+  ...annotations
 }));
 /**
  * @category type id
@@ -2782,13 +3021,13 @@ const PositiveBigDecimalTypeId = exports.PositiveBigDecimalTypeId = /*#__PURE__*
  * @category BigDecimal filters
  * @since 1.0.0
  */
-const positiveBigDecimal = options => self => self.pipe(filter(a => BigDecimal.isPositive(a), {
+const positiveBigDecimal = annotations => self => self.pipe(filter(a => _bigDecimal.isPositive(a), {
   typeId: {
     id: PositiveBigDecimalTypeId,
     annotation: {}
   },
   description: `a positive BigDecimal`,
-  ...options
+  ...annotations
 }));
 /**
  * @category BigDecimal constructors
@@ -2808,13 +3047,13 @@ const NonNegativeBigDecimalTypeId = exports.NonNegativeBigDecimalTypeId = /*#__P
  * @category BigDecimal filters
  * @since 1.0.0
  */
-const nonNegativeBigDecimal = options => self => self.pipe(filter(a => a.value >= 0n, {
+const nonNegativeBigDecimal = annotations => self => self.pipe(filter(a => a.value >= 0n, {
   typeId: {
     id: NonNegativeBigDecimalTypeId,
     annotation: {}
   },
   description: `a non-negative BigDecimal`,
-  ...options
+  ...annotations
 }));
 /**
  * @category BigDecimal constructors
@@ -2834,13 +3073,13 @@ const NegativeBigDecimalTypeId = exports.NegativeBigDecimalTypeId = /*#__PURE__*
  * @category BigDecimal filters
  * @since 1.0.0
  */
-const negativeBigDecimal = options => self => self.pipe(filter(a => BigDecimal.isNegative(a), {
+const negativeBigDecimal = annotations => self => self.pipe(filter(a => _bigDecimal.isNegative(a), {
   typeId: {
     id: NegativeBigDecimalTypeId,
     annotation: {}
   },
   description: `a negative BigDecimal`,
-  ...options
+  ...annotations
 }));
 /**
  * @category BigDecimal constructors
@@ -2860,13 +3099,13 @@ const NonPositiveBigDecimalTypeId = exports.NonPositiveBigDecimalTypeId = /*#__P
  * @category BigDecimal filters
  * @since 1.0.0
  */
-const nonPositiveBigDecimal = options => self => self.pipe(filter(a => a.value <= 0n, {
+const nonPositiveBigDecimal = annotations => self => self.pipe(filter(a => a.value <= 0n, {
   typeId: {
     id: NonPositiveBigDecimalTypeId,
     annotation: {}
   },
   description: `a non-positive BigDecimal`,
-  ...options
+  ...annotations
 }));
 /**
  * @category BigDecimal constructors
@@ -2886,7 +3125,7 @@ const BetweenBigDecimalTypeId = exports.BetweenBigDecimalTypeId = /*#__PURE__*/S
  * @category BigDecimal filters
  * @since 1.0.0
  */
-const betweenBigDecimal = (minimum, maximum, options) => self => self.pipe(filter(a => BigDecimal.between(a, {
+const betweenBigDecimal = (minimum, maximum, annotations) => self => self.pipe(filter(a => _bigDecimal.between(a, {
   minimum,
   maximum
 }), {
@@ -2897,8 +3136,8 @@ const betweenBigDecimal = (minimum, maximum, options) => self => self.pipe(filte
       minimum
     }
   },
-  description: `a BigDecimal between ${BigDecimal.format(minimum)} and ${BigDecimal.format(maximum)}`,
-  ...options
+  description: `a BigDecimal between ${_bigDecimal.format(minimum)} and ${_bigDecimal.format(maximum)}`,
+  ...annotations
 }));
 /**
  * Clamps a `BigDecimal` between a minimum and a maximum value.
@@ -2907,7 +3146,7 @@ const betweenBigDecimal = (minimum, maximum, options) => self => self.pipe(filte
  * @since 1.0.0
  */
 exports.betweenBigDecimal = betweenBigDecimal;
-const clampBigDecimal = (minimum, maximum) => self => transform(self, self.pipe(to, betweenBigDecimal(minimum, maximum)), self => BigDecimal.clamp(self, {
+const clampBigDecimal = (minimum, maximum) => self => transform(self, self.pipe(typeSchema, betweenBigDecimal(minimum, maximum)), self => _bigDecimal.clamp(self, {
   minimum,
   maximum
 }), _Function.identity, {
@@ -2920,20 +3159,20 @@ const clampBigDecimal = (minimum, maximum) => self => transform(self, self.pipe(
  * @since 1.0.0
  */
 exports.clampBigDecimal = clampBigDecimal;
-const negateBigDecimal = self => transform(self, to(self), self => BigDecimal.negate(self), self => BigDecimal.negate(self), {
+const negateBigDecimal = self => transform(self, typeSchema(self), self => _bigDecimal.negate(self), self => _bigDecimal.negate(self), {
   strict: false
 });
 exports.negateBigDecimal = negateBigDecimal;
 const chunkArbitrary = item => fc => fc.array(item(fc)).map(Chunk.fromIterable);
 const chunkPretty = item => c => `Chunk(${Chunk.toReadonlyArray(c).map(item).join(", ")})`;
-const chunkParse = decodeUnknown => (u, options, ast) => Chunk.isChunk(u) ? Chunk.isEmpty(u) ? ParseResult.succeed(Chunk.empty()) : ParseResult.map(decodeUnknown(Chunk.toReadonlyArray(u), options), Chunk.fromIterable) : ParseResult.fail(ParseResult.type(ast, u));
+const chunkParse = decodeUnknown => (u, options, ast) => Chunk.isChunk(u) ? Chunk.isEmpty(u) ? ParseResult.succeed(Chunk.empty()) : ParseResult.map(decodeUnknown(Chunk.toReadonlyArray(u), options), Chunk.fromIterable) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category Chunk transformations
  * @since 1.0.0
  */
-const chunkFromSelf = item => {
-  return declare([item], item => chunkParse(ParseResult.decodeUnknown(array(item))), item => chunkParse(ParseResult.encodeUnknown(array(item))), {
-    description: `Chunk<${format(item)}>`,
+const chunkFromSelf = value => {
+  return declare([value], item => chunkParse(ParseResult.decodeUnknown(array(item))), item => chunkParse(ParseResult.encodeUnknown(array(item))), {
+    description: `Chunk<${format(value)}>`,
     pretty: chunkPretty,
     arbitrary: chunkArbitrary,
     equivalence: Chunk.getEquivalence
@@ -2944,12 +3183,15 @@ const chunkFromSelf = item => {
  * @since 1.0.0
  */
 exports.chunkFromSelf = chunkFromSelf;
-const chunk = item => transform(array(item), chunkFromSelf(to(item)), as => as.length === 0 ? Chunk.empty() : Chunk.fromIterable(as), Chunk.toReadonlyArray);
+const chunk = value => {
+  const _value = asSchema(value);
+  return transform(array(_value), chunkFromSelf(typeSchema(_value)), as => as.length === 0 ? Chunk.empty() : Chunk.fromIterable(as), Chunk.toReadonlyArray);
+};
 exports.chunk = chunk;
 const toData = a => Array.isArray(a) ? Data.array(a) : Data.struct(a);
 const dataArbitrary = item => fc => item(fc).map(toData);
 const dataPretty = item => d => `Data(${item(d)})`;
-const dataParse = decodeUnknown => (u, options, ast) => Equal.isEqual(u) ? ParseResult.map(decodeUnknown(u, options), toData) : ParseResult.fail(ParseResult.type(ast, u));
+const dataParse = decodeUnknown => (u, options, ast) => Equal.isEqual(u) ? ParseResult.map(decodeUnknown(u, options), toData) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category Data transformations
  * @since 1.0.0
@@ -2966,27 +3208,39 @@ const dataFromSelf = item => {
  * @since 1.0.0
  */
 exports.dataFromSelf = dataFromSelf;
-const data = item => transform(item, dataFromSelf(to(item)), toData, a => Array.isArray(a) ? Array.from(a) : Object.assign({}, a), {
+const data = item => transform(item, dataFromSelf(typeSchema(item)), toData, a => Array.isArray(a) ? Array.from(a) : Object.assign({}, a), {
   strict: false
 });
+exports.data = data;
+const TAG = "_tag";
 /**
  * @category classes
  * @since 1.0.0
  */
-exports.data = data;
-const Class = () => fields => makeClass(struct(fields), fields, Data.Class);
+const Class = identifier => (fields, annotations) => makeClass({
+  kind: "Class",
+  identifier,
+  fields,
+  Base: Data.Class,
+  annotations
+});
 /**
  * @category classes
  * @since 1.0.0
  */
 exports.Class = Class;
-const TaggedClass = () => (tag, fields) => {
-  const fieldsWithTag = {
-    ...fields,
-    _tag: literal(tag)
-  };
-  return makeClass(struct(fieldsWithTag), fieldsWithTag, Data.Class, {
-    _tag: tag
+const TaggedClass = identifier => (tag, fields, annotations) => {
+  return makeClass({
+    kind: "TaggedClass",
+    identifier: identifier ?? tag,
+    fields: extendFields({
+      [TAG]: literal(tag)
+    }, fields),
+    Base: Data.Class,
+    tag: {
+      [TAG]: tag
+    },
+    annotations
   });
 };
 /**
@@ -2994,13 +3248,18 @@ const TaggedClass = () => (tag, fields) => {
  * @since 1.0.0
  */
 exports.TaggedClass = TaggedClass;
-const TaggedError = () => (tag, fields) => {
-  const fieldsWithTag = {
-    ...fields,
-    _tag: literal(tag)
-  };
-  return makeClass(struct(fieldsWithTag), fieldsWithTag, Data.Error, {
-    _tag: tag
+const TaggedError = identifier => (tag, fields, annotations) => {
+  return makeClass({
+    kind: "TaggedError",
+    identifier: identifier ?? tag,
+    fields: extendFields({
+      [TAG]: literal(tag)
+    }, fields),
+    Base: Data.Error,
+    tag: {
+      [TAG]: tag
+    },
+    annotations
   });
 };
 /**
@@ -3008,108 +3267,184 @@ const TaggedError = () => (tag, fields) => {
  * @since 1.0.0
  */
 exports.TaggedError = TaggedError;
-const TaggedRequest = () => (tag, Failure, Success, fields) => {
+const TaggedRequest = identifier => (tag, Failure, Success, fields, annotations) => {
   class SerializableRequest extends Request.Class {
-    get [InternalSerializable.symbol]() {
+    get [_serializable.symbol]() {
       return this.constructor;
     }
-    get [InternalSerializable.symbolResult]() {
+    get [_serializable.symbolResult]() {
       return {
         Failure,
         Success
       };
     }
   }
-  const fieldsWithTag = {
-    ...fields,
-    _tag: literal(tag)
-  };
-  return makeClass(struct(fieldsWithTag), fieldsWithTag, SerializableRequest, {
-    _tag: tag
+  return makeClass({
+    kind: "TaggedRequest",
+    identifier: identifier ?? tag,
+    fields: extendFields({
+      [TAG]: literal(tag)
+    }, fields),
+    Base: SerializableRequest,
+    tag: {
+      [TAG]: tag
+    },
+    annotations
   });
 };
 exports.TaggedRequest = TaggedRequest;
-const makeClass = (selfSchema, selfFields, Base, tag) => {
-  const validate = Parser.validateSync(selfSchema);
-  return class extends Base {
-    constructor(props, disableValidation = false, outer = true) {
+const extendFields = (a, b) => {
+  const out = {
+    ...a
+  };
+  for (const name of _util.ownKeys(b)) {
+    if (name in a) {
+      throw new Error(AST.getDuplicatePropertySignatureErrorMessage(name));
+    }
+    out[name] = b[name];
+  }
+  return out;
+};
+const makeClass = ({
+  Base,
+  annotations,
+  fields,
+  fromSchema,
+  identifier,
+  kind,
+  tag
+}) => {
+  const schema = fromSchema ?? struct(fields);
+  const validate = Parser.validateSync(schema);
+  const cls = class extends Base {
+    constructor(props = {}, disableValidation = false) {
       if (tag !== undefined) {
-        props = outer ? {
+        props = {
           ...props,
           ...tag
-        } : {
-          ...tag,
-          ...props
         };
       }
       if (disableValidation !== true) {
         props = validate(props);
       }
-      super(props, true, false);
+      super(props, true);
+      const classSymbol = Symbol.for(`@effect/schema/${kind}/${this.constructor.identifier}`);
+      Object.defineProperty(this, classSymbol, {
+        value: classSymbol
+      });
+    }
+    static [TypeId] = _schema.variance;
+    static get identifier() {
+      return identifier || this.name;
     }
-    static [TypeId] = InternalSchema.variance;
+    static get classSymbol() {
+      return Symbol.for(`@effect/schema/${kind}/${this.identifier}`);
+    }
+    // get [classSymbol]() {
+    //   return classSymbol
+    // }
     toString() {
       return Pretty.make(this.constructor)(this);
     }
     static pipe() {
       return (0, _Pipeable.pipeArguments)(this, arguments);
     }
+    static annotations(annotations) {
+      return make(this.ast).annotations(annotations);
+    }
+    static fields = fields;
     static get ast() {
-      const toSchema = to(selfSchema);
+      const toSchema = typeSchema(schema);
+      const guard = Parser.is(toSchema);
+      const fallbackInstanceOf = u => Predicate.hasProperty(u, this.classSymbol) && guard(u);
+      const identifier = this.identifier;
       const encode = Parser.encodeUnknown(toSchema);
       const pretty = Pretty.make(toSchema);
       const arb = arbitrary.make(toSchema);
       const equivalence = _equivalence.make(toSchema);
-      const declaration = declare([], () => (input, _, ast) => input instanceof this ? ParseResult.succeed(input) : ParseResult.fail(ParseResult.type(ast, input)), () => (input, _, ast) => input instanceof this ? ParseResult.succeed(input) : ParseResult.mapError(ParseResult.map(encode(input), props => new this(props, true)), () => ParseResult.type(ast, input)), {
-        identifier: this.name,
-        title: this.name,
-        description: `an instance of ${this.name}`,
-        pretty: () => self => `${self.constructor.name}(${pretty(self)})`,
+      const declaration = declare([], () => (input, _, ast) => input instanceof this || fallbackInstanceOf(input) ? ParseResult.succeed(input) : ParseResult.fail(new ParseResult.Type(ast, input)), () => (input, options) => input instanceof this ? ParseResult.succeed(input) : ParseResult.map(encode(input, options), props => new this(props, true)), {
+        identifier,
+        title: identifier,
+        description: `an instance of ${identifier}`,
+        pretty: () => self => `${identifier}(${pretty(self)})`,
         arbitrary: () => fc => arb(fc).map(props => new this(props)),
-        equivalence: () => equivalence
+        equivalence: () => equivalence,
+        [AST.SurrogateAnnotationId]: toSchema.ast,
+        ...annotations
       });
-      const transformation = transform(selfSchema, declaration, input => new this(input, true), _Function.identity);
+      const transformation = transform(schema, declaration, input => new this(input, true), _Function.identity);
       return transformation.ast;
     }
-    static struct = selfSchema;
-    static extend() {
-      return fields => {
-        const newFields = {
-          ...selfFields,
-          ...fields
-        };
-        return makeClass(struct(newFields), newFields, this, "_tag" in fields ? undefined : tag);
+    static struct = schema;
+    static extend(identifier) {
+      return (newFields, annotations) => {
+        const extendedFields = extendFields(fields, newFields);
+        return makeClass({
+          kind,
+          identifier,
+          fields: extendedFields,
+          Base: this,
+          tag,
+          annotations
+        });
       };
     }
-    static transformOrFail() {
-      return (fields, decode, encode) => {
-        const newFields = {
-          ...selfFields,
-          ...fields
-        };
-        return makeClass(transformOrFail(selfSchema, to(struct(newFields)), decode, encode), newFields, this, "_tag" in fields ? undefined : tag);
+    static transformOrFail(identifier) {
+      return (newFields, decode, encode, annotations) => {
+        const transformedFields = extendFields(fields, newFields);
+        return makeClass({
+          kind,
+          identifier,
+          fromSchema: transformOrFail(schema, typeSchema(struct(transformedFields)), decode, encode),
+          fields: transformedFields,
+          Base: this,
+          tag,
+          annotations
+        });
       };
     }
-    static transformOrFailFrom() {
-      return (fields, decode, encode) => {
-        const newFields = {
-          ...selfFields,
-          ...fields
-        };
-        return makeClass(transformOrFail(from(selfSchema), struct(newFields), decode, encode), newFields, this, "_tag" in fields ? undefined : tag);
+    static transformOrFailFrom(identifier) {
+      return (newFields, decode, encode, annotations) => {
+        const transformedFields = extendFields(fields, newFields);
+        return makeClass({
+          kind,
+          identifier,
+          fromSchema: transformOrFail(encodedSchema(schema), struct(transformedFields), decode, encode),
+          fields: transformedFields,
+          Base: this,
+          tag,
+          annotations
+        });
       };
     }
   };
+  return class extends cls {
+    constructor(props = {}, disableValidation = false) {
+      const p = {
+        ...props
+      };
+      Object.entries(fields).forEach(([k, v]) => {
+        if (p[k] === undefined && v.ast._tag === "PropertySignatureDeclaration" && v.ast.__defaultConstructor) {
+          p[k] = v.ast.__defaultConstructor();
+        }
+      });
+      super(p, disableValidation);
+    }
+  };
 };
-const FiberIdCompositeFrom = /*#__PURE__*/struct({
+const FiberIdCompositeEncoded = /*#__PURE__*/struct({
   _tag: literal("Composite"),
-  left: suspend(() => FiberIdFrom),
-  right: suspend(() => FiberIdFrom)
-}).pipe( /*#__PURE__*/identifier("FiberIdCompositeFrom"));
-const FiberIdNoneFrom = /*#__PURE__*/struct({
+  left: suspend(() => FiberIdEncoded),
+  right: suspend(() => FiberIdEncoded)
+}).annotations({
+  identifier: "FiberIdCompositeEncoded"
+});
+const FiberIdNoneEncoded = /*#__PURE__*/struct({
   _tag: literal("None")
-}).pipe( /*#__PURE__*/identifier("FiberIdNoneFrom"));
-const FiberIdRuntimeFrom = /*#__PURE__*/struct({
+}).annotations({
+  identifier: "FiberIdNoneEncoded"
+});
+const FiberIdRuntimeEncoded = /*#__PURE__*/struct({
   _tag: literal("Runtime"),
   id: Int.pipe(nonNegative({
     title: "id",
@@ -3119,9 +3454,13 @@ const FiberIdRuntimeFrom = /*#__PURE__*/struct({
     title: "startTimeMillis",
     description: "startTimeMillis"
   }))
-}).pipe( /*#__PURE__*/identifier("FiberIdRuntimeFrom"));
-const FiberIdFrom = /*#__PURE__*/union(FiberIdCompositeFrom, FiberIdNoneFrom, FiberIdRuntimeFrom).pipe( /*#__PURE__*/identifier("FiberIdFrom"));
-const fiberIdFromArbitrary = /*#__PURE__*/arbitrary.make(FiberIdFrom);
+}).annotations({
+  identifier: "FiberIdRuntimeEncoded"
+});
+const FiberIdEncoded = /*#__PURE__*/union(FiberIdCompositeEncoded, FiberIdNoneEncoded, FiberIdRuntimeEncoded).annotations({
+  identifier: "FiberIdEncoded"
+});
+const fiberIdFromArbitrary = /*#__PURE__*/arbitrary.make(FiberIdEncoded);
 const fiberIdArbitrary = fc => fiberIdFromArbitrary(fc).map(fiberIdDecode);
 const fiberIdPretty = fiberId => {
   switch (fiberId._tag) {
@@ -3137,7 +3476,7 @@ const fiberIdPretty = fiberId => {
  * @category FiberId constructors
  * @since 1.0.0
  */
-const FiberIdFromSelf = exports.FiberIdFromSelf = /*#__PURE__*/declare(FiberId.isFiberId, {
+const FiberIdFromSelf = exports.FiberIdFromSelf = /*#__PURE__*/declare(_fiberId.isFiberId, {
   identifier: "FiberIdFromSelf",
   pretty: () => fiberIdPretty,
   arbitrary: () => fiberIdArbitrary
@@ -3145,11 +3484,11 @@ const FiberIdFromSelf = exports.FiberIdFromSelf = /*#__PURE__*/declare(FiberId.i
 const fiberIdDecode = input => {
   switch (input._tag) {
     case "Composite":
-      return FiberId.composite(fiberIdDecode(input.left), fiberIdDecode(input.right));
+      return _fiberId.composite(fiberIdDecode(input.left), fiberIdDecode(input.right));
     case "None":
-      return FiberId.none;
+      return _fiberId.none;
     case "Runtime":
-      return FiberId.runtime(input.id, input.startTimeMillis);
+      return _fiberId.runtime(input.id, input.startTimeMillis);
   }
 };
 const fiberIdEncode = input => {
@@ -3172,39 +3511,47 @@ const fiberIdEncode = input => {
       };
   }
 };
-const _FiberId = exports.FiberId = /*#__PURE__*/transform(FiberIdFrom, FiberIdFromSelf, fiberIdDecode, fiberIdEncode).pipe( /*#__PURE__*/identifier("FiberId"));
-const causeDieFrom = defect => struct({
+/**
+ * @category FiberId transformations
+ * @since 1.0.0
+ */
+const FiberId = exports.FiberId = /*#__PURE__*/transform(FiberIdEncoded, FiberIdFromSelf, fiberIdDecode, fiberIdEncode).annotations({
+  identifier: "FiberId"
+});
+const causeDieEncoded = defect => struct({
   _tag: literal("Die"),
   defect
 });
-const CauseEmptyFrom = /*#__PURE__*/struct({
+const CauseEmptyEncoded = /*#__PURE__*/struct({
   _tag: /*#__PURE__*/literal("Empty")
 });
-const causeFailFrom = error => struct({
+const causeFailEncoded = error => struct({
   _tag: literal("Fail"),
   error
 });
-const CauseInterruptFrom = /*#__PURE__*/struct({
+const CauseInterruptEncoded = /*#__PURE__*/struct({
   _tag: /*#__PURE__*/literal("Interrupt"),
-  fiberId: FiberIdFrom
+  fiberId: FiberIdEncoded
 });
-const causeParallelFrom = causeFrom => struct({
+const causeParallelEncoded = causeEncoded => struct({
   _tag: literal("Parallel"),
-  left: causeFrom,
-  right: causeFrom
+  left: causeEncoded,
+  right: causeEncoded
 });
-const causeSequentialFrom = causeFrom => struct({
+const causeSequentialEncoded = causeEncoded => struct({
   _tag: literal("Sequential"),
-  left: causeFrom,
-  right: causeFrom
+  left: causeEncoded,
+  right: causeEncoded
 });
-const causeFrom = (error, defect) => {
+const causeEncoded = (error, defect) => {
   const recur = suspend(() => out);
-  const out = union(causeDieFrom(defect), CauseEmptyFrom, causeFailFrom(error), CauseInterruptFrom, causeParallelFrom(recur), causeSequentialFrom(recur)).pipe(description(`CauseFrom<${format(error)}>`));
+  const out = union(causeDieEncoded(defect), CauseEmptyEncoded, causeFailEncoded(error), CauseInterruptEncoded, causeParallelEncoded(recur), causeSequentialEncoded(recur)).annotations({
+    description: `CauseEncoded<${format(error)}>`
+  });
   return out;
 };
 const causeArbitrary = (error, defect) => {
-  const arb = arbitrary.make(causeFrom(schemaFromArbitrary(error), schemaFromArbitrary(defect)));
+  const arb = arbitrary.make(causeEncoded(schemaFromArbitrary(error), schemaFromArbitrary(defect)));
   return fc => arb(fc).map(causeDecode);
 };
 const causePretty = error => cause => {
@@ -3226,7 +3573,7 @@ const causePretty = error => cause => {
   };
   return f(cause);
 };
-const causeParse = decodeUnknown => (u, options, ast) => Cause.isCause(u) ? ParseResult.map(decodeUnknown(causeEncode(u), options), causeDecode) : ParseResult.fail(ParseResult.type(ast, u));
+const causeParse = decodeUnknown => (u, options, ast) => Cause.isCause(u) ? ParseResult.map(decodeUnknown(causeEncode(u), options), causeDecode) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category Cause transformations
  * @since 1.0.0
@@ -3235,7 +3582,7 @@ const causeFromSelf = ({
   defect = unknown,
   error
 }) => {
-  return declare([error, defect], (error, defect) => causeParse(ParseResult.decodeUnknown(causeFrom(error, defect))), (error, defect) => causeParse(ParseResult.encodeUnknown(causeFrom(error, defect))), {
+  return declare([error, defect], (error, defect) => causeParse(ParseResult.decodeUnknown(causeEncoded(error, defect))), (error, defect) => causeParse(ParseResult.encodeUnknown(causeEncoded(error, defect))), {
     description: `Cause<${format(error)}>`,
     pretty: causePretty,
     arbitrary: causeArbitrary
@@ -3306,20 +3653,23 @@ const causeDefectPretty = /*#__PURE__*/transform(unknown, unknown, _Function.ide
 const cause = ({
   defect = causeDefectPretty,
   error
-}) => transform(causeFrom(error, defect), causeFromSelf({
-  error: to(error),
-  defect: to(defect)
-}), causeDecode, causeEncode);
+}) => {
+  const _error = asSchema(error);
+  return transform(causeEncoded(_error, defect), causeFromSelf({
+    error: typeSchema(_error),
+    defect: typeSchema(defect)
+  }), causeDecode, causeEncode);
+};
 exports.cause = cause;
-const exitFailureFrom = (error, defect) => struct({
+const exitFailureEncoded = (error, defect) => struct({
   _tag: literal("Failure"),
-  cause: causeFrom(error, defect)
+  cause: causeEncoded(error, defect)
 });
-const exitSuccessFrom = value => struct({
+const exitSuccessEncoded = value => struct({
   _tag: literal("Success"),
   value
 });
-const exitFrom = (error, value, defect) => union(exitFailureFrom(error, defect), exitSuccessFrom(value));
+const exitEncoded = (value, error, defect) => union(exitFailureEncoded(error, defect), exitSuccessEncoded(value));
 const exitDecode = input => {
   switch (input._tag) {
     case "Failure":
@@ -3328,15 +3678,15 @@ const exitDecode = input => {
       return Exit.succeed(input.value);
   }
 };
-const exitArbitrary = (error, value, defect) => {
-  const arb = arbitrary.make(exitFrom(schemaFromArbitrary(error), schemaFromArbitrary(value), schemaFromArbitrary(defect)));
+const exitArbitrary = (value, error, defect) => {
+  const arb = arbitrary.make(exitEncoded(schemaFromArbitrary(value), schemaFromArbitrary(error), schemaFromArbitrary(defect)));
   return fc => arb(fc).map(exitDecode);
 };
-const exitPretty = (error, value) => exit => exit._tag === "Failure" ? `Exit.failCause(${causePretty(error)(exit.cause)})` : `Exit.succeed(${value(exit.value)})`;
-const exitParse = (decodeUnknownCause, decodeUnknownValue) => (u, options, ast) => Exit.isExit(u) ? Exit.match(u, {
+const exitPretty = (value, error) => exit => exit._tag === "Failure" ? `Exit.failCause(${causePretty(error)(exit.cause)})` : `Exit.succeed(${value(exit.value)})`;
+const exitParse = (decodeUnknownValue, decodeUnknownCause) => (u, options, ast) => Exit.isExit(u) ? Exit.match(u, {
   onFailure: cause => ParseResult.map(decodeUnknownCause(cause, options), Exit.failCause),
   onSuccess: value => ParseResult.map(decodeUnknownValue(value, options), Exit.succeed)
-}) : ParseResult.fail(ParseResult.type(ast, u));
+}) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category Exit transformations
  * @since 1.0.0
@@ -3345,13 +3695,13 @@ const exitFromSelf = ({
   defect = unknown,
   failure,
   success
-}) => declare([failure, success, defect], (failure, success, defect) => exitParse(ParseResult.decodeUnknown(causeFromSelf({
+}) => declare([success, failure, defect], (success, failure, defect) => exitParse(ParseResult.decodeUnknown(success), ParseResult.decodeUnknown(causeFromSelf({
   error: failure,
   defect
-})), ParseResult.decodeUnknown(success)), (failure, success, defect) => exitParse(ParseResult.encodeUnknown(causeFromSelf({
+}))), (success, failure, defect) => exitParse(ParseResult.encodeUnknown(success), ParseResult.encodeUnknown(causeFromSelf({
   error: failure,
   defect
-})), ParseResult.encodeUnknown(success)), {
+}))), {
   description: `Exit<${format(failure)}, ${format(success)}>`,
   pretty: exitPretty,
   arbitrary: exitArbitrary
@@ -3365,17 +3715,21 @@ const exit = ({
   defect = causeDefectPretty,
   failure,
   success
-}) => transform(exitFrom(failure, success, defect), exitFromSelf({
-  failure: to(failure),
-  success: to(success),
-  defect: to(defect)
-}), exitDecode, exit => exit._tag === "Failure" ? {
-  _tag: "Failure",
-  cause: exit.cause
-} : {
-  _tag: "Success",
-  value: exit.value
-});
+}) => {
+  const _success = asSchema(success);
+  const _failure = asSchema(failure);
+  return transform(exitEncoded(_success, _failure, defect), exitFromSelf({
+    failure: typeSchema(_failure),
+    success: typeSchema(_success),
+    defect: typeSchema(defect)
+  }), exitDecode, exit => exit._tag === "Failure" ? {
+    _tag: "Failure",
+    cause: exit.cause
+  } : {
+    _tag: "Success",
+    value: exit.value
+  });
+};
 exports.exit = exit;
 const hashSetArbitrary = item => fc => fc.array(item(fc)).map(as => HashSet.fromIterable(as));
 const hashSetPretty = item => set => `HashSet(${Array.from(set).map(a => item(a)).join(", ")})`;
@@ -3383,14 +3737,14 @@ const hashSetEquivalence = item => {
   const arrayEquivalence = ReadonlyArray.getEquivalence(item);
   return Equivalence.make((a, b) => arrayEquivalence(Array.from(a), Array.from(b)));
 };
-const hashSetParse = decodeUnknown => (u, options, ast) => HashSet.isHashSet(u) ? ParseResult.map(decodeUnknown(Array.from(u), options), as => HashSet.fromIterable(as)) : ParseResult.fail(ParseResult.type(ast, u));
+const hashSetParse = decodeUnknown => (u, options, ast) => HashSet.isHashSet(u) ? ParseResult.map(decodeUnknown(Array.from(u), options), as => HashSet.fromIterable(as)) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category HashSet transformations
  * @since 1.0.0
  */
-const hashSetFromSelf = item => {
-  return declare([item], item => hashSetParse(ParseResult.decodeUnknown(array(item))), item => hashSetParse(ParseResult.encodeUnknown(array(item))), {
-    description: `HashSet<${format(item)}>`,
+const hashSetFromSelf = value => {
+  return declare([value], item => hashSetParse(ParseResult.decodeUnknown(array(item))), item => hashSetParse(ParseResult.encodeUnknown(array(item))), {
+    description: `HashSet<${format(value)}>`,
     pretty: hashSetPretty,
     arbitrary: hashSetArbitrary,
     equivalence: hashSetEquivalence
@@ -3401,7 +3755,10 @@ const hashSetFromSelf = item => {
  * @since 1.0.0
  */
 exports.hashSetFromSelf = hashSetFromSelf;
-const hashSet = item => transform(array(item), hashSetFromSelf(to(item)), as => HashSet.fromIterable(as), set => Array.from(set));
+const hashSet = value => {
+  const _value = asSchema(value);
+  return transform(array(_value), hashSetFromSelf(typeSchema(_value)), as => HashSet.fromIterable(as), set => Array.from(set));
+};
 exports.hashSet = hashSet;
 const hashMapArbitrary = (key, value) => fc => fc.array(fc.tuple(key(fc), value(fc))).map(as => HashMap.fromIterable(as));
 const hashMapPretty = (key, value) => map => `HashMap([${Array.from(map).map(([k, v]) => `[${key(k)}, ${value(v)}]`).join(", ")}])`;
@@ -3409,7 +3766,7 @@ const hashMapEquivalence = (key, value) => {
   const arrayEquivalence = ReadonlyArray.getEquivalence(Equivalence.make(([ka, va], [kb, vb]) => key(ka, kb) && value(va, vb)));
   return Equivalence.make((a, b) => arrayEquivalence(Array.from(a), Array.from(b)));
 };
-const hashMapParse = decodeUnknown => (u, options, ast) => HashMap.isHashMap(u) ? ParseResult.map(decodeUnknown(Array.from(u), options), as => HashMap.fromIterable(as)) : ParseResult.fail(ParseResult.type(ast, u));
+const hashMapParse = decodeUnknown => (u, options, ast) => HashMap.isHashMap(u) ? ParseResult.map(decodeUnknown(Array.from(u), options), as => HashMap.fromIterable(as)) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category HashMap transformations
  * @since 1.0.0
@@ -3433,10 +3790,14 @@ exports.hashMapFromSelf = hashMapFromSelf;
 const hashMap = ({
   key,
   value
-}) => transform(array(tuple(key, value)), hashMapFromSelf({
-  key: to(key),
-  value: to(value)
-}), as => HashMap.fromIterable(as), map => Array.from(map));
+}) => {
+  const _key = asSchema(key);
+  const _value = asSchema(value);
+  return transform(array(tuple(_key, _value)), hashMapFromSelf({
+    key: typeSchema(_key),
+    value: typeSchema(_value)
+  }), as => HashMap.fromIterable(as), map => Array.from(map));
+};
 exports.hashMap = hashMap;
 const listArbitrary = item => fc => fc.array(item(fc)).map(as => List.fromIterable(as));
 const listPretty = item => set => `List(${Array.from(set).map(a => item(a)).join(", ")})`;
@@ -3444,14 +3805,14 @@ const listEquivalence = item => {
   const arrayEquivalence = ReadonlyArray.getEquivalence(item);
   return Equivalence.make((a, b) => arrayEquivalence(Array.from(a), Array.from(b)));
 };
-const listParse = decodeUnknown => (u, options, ast) => List.isList(u) ? ParseResult.map(decodeUnknown(Array.from(u), options), as => List.fromIterable(as)) : ParseResult.fail(ParseResult.type(ast, u));
+const listParse = decodeUnknown => (u, options, ast) => List.isList(u) ? ParseResult.map(decodeUnknown(Array.from(u), options), as => List.fromIterable(as)) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category List transformations
  * @since 1.0.0
  */
-const listFromSelf = item => {
-  return declare([item], item => listParse(ParseResult.decodeUnknown(array(item))), item => listParse(ParseResult.encodeUnknown(array(item))), {
-    description: `List<${format(item)}>`,
+const listFromSelf = value => {
+  return declare([value], item => listParse(ParseResult.decodeUnknown(array(item))), item => listParse(ParseResult.encodeUnknown(array(item))), {
+    description: `List<${format(value)}>`,
     pretty: listPretty,
     arbitrary: listArbitrary,
     equivalence: listEquivalence
@@ -3462,9 +3823,38 @@ const listFromSelf = item => {
  * @since 1.0.0
  */
 exports.listFromSelf = listFromSelf;
-const list = item => transform(array(item), listFromSelf(to(item)), as => List.fromIterable(as), set => Array.from(set));
+const list = value => {
+  const _value = asSchema(value);
+  return transform(array(_value), listFromSelf(typeSchema(_value)), as => List.fromIterable(as), set => Array.from(set));
+};
 exports.list = list;
-const schemaFromArbitrary = value => suspend(() => any).pipe(annotations({
-  [hooks.ArbitraryHookId]: () => value
-}));
+const sortedSetArbitrary = (item, ord) => fc => fc.array(item(fc)).map(as => SortedSet.fromIterable(as, ord));
+const sortedSetPretty = item => set => `new SortedSet([${Array.from(SortedSet.values(set)).map(a => item(a)).join(", ")}])`;
+const sortedSetParse = (decodeUnknown, ord) => (u, options, ast) => SortedSet.isSortedSet(u) ? ParseResult.map(decodeUnknown(Array.from(SortedSet.values(u)), options), as => SortedSet.fromIterable(as, ord)) : ParseResult.fail(new ParseResult.Type(ast, u));
+/**
+ * @category SortedSet transformations
+ * @since 1.0.0
+ */
+const sortedSetFromSelf = (value, ordA, ordI) => {
+  return declare([value], item => sortedSetParse(ParseResult.decodeUnknown(array(item)), ordA), item => sortedSetParse(ParseResult.encodeUnknown(array(item)), ordI), {
+    description: `SortedSet<${format(value)}>`,
+    pretty: sortedSetPretty,
+    arbitrary: arb => sortedSetArbitrary(arb, ordA),
+    equivalence: () => SortedSet.getEquivalence()
+  });
+};
+/**
+ * @category SortedSet transformations
+ * @since 1.0.0
+ */
+exports.sortedSetFromSelf = sortedSetFromSelf;
+const sortedSet = (value, ordA) => {
+  const _value = asSchema(value);
+  const to = typeSchema(_value);
+  return transform(array(_value), sortedSetFromSelf(to, ordA, ordA), as => SortedSet.fromIterable(as, ordA), set => Array.from(SortedSet.values(set)));
+};
+exports.sortedSet = sortedSet;
+const schemaFromArbitrary = value => suspend(() => any).annotations({
+  [_hooks.ArbitraryHookId]: () => value
+});
 //# sourceMappingURL=Schema.js.map
\ No newline at end of file
diff --git a/dist/cjs/Schema.js.map b/dist/cjs/Schema.js.map
index 4518121e8c6292e627acf003cd496a89212dc4c2..f9a8b610189a3504704a019e1a1e0c24f8494b94 100644
--- a/dist/cjs/Schema.js.map
+++ b/dist/cjs/Schema.js.map
@@ -1 +1 @@
-{"version":3,"file":"Schema.js","names":["BigDecimal","_interopRequireWildcard","require","BigInt_","Brand","Cause","Chunk","Data","Duration","Effect","Either","Encoding","Equal","Equivalence","Exit","FiberId","_Function","HashMap","HashSet","List","N","Option","_Pipeable","Predicate","ReadonlyArray","Request","Secret","SortedSet","S","arbitrary","ArrayFormatter","AST","_equivalence","Internal","filters","hooks","InternalSchema","InternalSerializable","Parser","ParseResult","Pretty","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","TypeId","exports","hash","schema","ast","format","from","make","to","encodeUnknown","options","overrideOptions","mapError","parseError","encodeUnknownEither","mapLeft","encodeUnknownPromise","parser","runPromise","encode","encodeEither","encodePromise","decodeUnknown","decodeUnknownEither","decodeUnknownPromise","decode","decodeEither","decodePromise","validate","validateEither","validatePromise","isSchema","isObject","makeLiteral","value","createLiteral","literal","literals","union","map","pickLiteral","_schema","uniqueSymbol","symbol","annotations","createUniqueSymbol","enums","createEnums","keys","filter","key","templateLiteral","head","tail","types","getTemplateLiterals","span","flatMap","b","combineTemplateLiterals","createUnion","isLiteral","String","createTemplateLiteral","spans","modifyNonEmptyLast","appendAll","_tag","type","Error","declareConstructor","typeParameters","createDeclaration","tp","toAnnotations","declarePrimitive","is","input","_","succeed","fail","declare","Array","isArray","arguments","BrandTypeId","Symbol","for","fromBrand","constructor","self","createRefinement","either","isLeft","some","left","v","message","join","none","typeId","id","annotation","InstanceOfTypeId","instanceOf","title","name","description","pretty","_undefined","undefined","undefinedKeyword","_void","void","voidKeyword","_null","null","never","neverKeyword","unknown","unknownKeyword","any","anyKeyword","string","stringKeyword","number","numberKeyword","boolean","booleanKeyword","bigintFromSelf","bigIntKeyword","symbolFromSelf","symbolKeyword","object","objectKeyword","members","m","nullable","orUndefined","nullish","keyof","tuple","elements","createTuple","createElement","rest","isTuple","appendRestElement","element","appendElement","optionalElement","array","item","nonEmptyArray","pipe","PropertySignatureImpl","propertySignatureAST","variance","FromIsOptional","ToIsOptional","pipeArguments","propertySignatureAnnotations","isOptional","optionalToRequired","o","optional","isExact","exact","isNullable","asOption","as","match","onNone","onSome","identity","optionFromSelf","isNotNull","isNotUndefined","struct","fields","ownKeys","pss","pssFrom","pssTo","psTransformations","length","field","psAst","push","createPropertySignature","createPropertySignatureTransform","createFinalPropertySignatureTransformation","isNonEmptyReadonlyArray","createTransform","createTypeLiteral","createTypeLiteralTransformation","pick","isTransform","isTypeLiteralTransformation","transformation","propertySignatureTransformations","includes","omit","pluck","dual","args","ps","getPropertyKeyIndexedAccess","transform","ak","appendBrandAnnotation","brand","brands","BrandAnnotationId","mergeAnnotations","validateSync","validateOption","_validateEither","out","assign","RefinedConstructorsTypeId","option","formatError","err","meta","path","partial","required","mutable","record","createRecord","intersectUnionMembers","xs","ys","x","y","isTypeLiteral","propertySignatures","concat","indexSignatures","getToPropertySignatures","getToIndexSignatures","extend","that","isUnion","compose","suspend","f","createSuspend","predicate","isBoolean","transformOrFail","createFinalTransformation","fromA","toI","transformLiteral","transformLiterals","pairs","attachPropertySignature","attached","isSymbol","custom","getOwnPropertySymbols","sym","TypeAnnotationId","move","MessageAnnotationId","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","DocumentationAnnotationId","JSONSchemaAnnotationId","ArbitraryHookId","PrettyHookId","EquivalenceHookId","ConcurrencyAnnotationId","BatchingAnnotationId","setAnnotation","identifier","examples","_default","documentation","jsonSchema","equivalence","concurrency","batching","rename","mapping","TrimmedTypeId","trimmed","trim","MaxLengthTypeId","maxLength","MinLengthTypeId","minLength","PatternTypeId","pattern","regex","source","lastIndex","test","fc","stringMatching","StartsWithTypeId","startsWith","JSON","stringify","EndsWithTypeId","endsWith","IncludesTypeId","searchString","LowercasedTypeId","lowercased","toLowerCase","Lowercased","UppercasedTypeId","uppercased","toUpperCase","Uppercased","LengthTypeId","Char","nonEmpty","Lowercase","s","Uppercase","Trimmed","Trim","split","separator","JsonString","parseJson","try","parse","reviver","catch","replacer","space","NonEmpty","UUIDTypeId","uuidRegex","UUID","uuid","ULIDTypeId","ulidRegex","ULID","ulid","FiniteTypeId","finite","Number","isFinite","GreaterThanTypeId","greaterThan","min","exclusiveMinimum","GreaterThanOrEqualToTypeId","greaterThanOrEqualTo","minimum","MultipleOfTypeId","multipleOf","divisor","remainder","Math","abs","IntTypeId","int","isSafeInteger","LessThanTypeId","lessThan","max","exclusiveMaximum","LessThanOrEqualToTypeId","lessThanOrEqualTo","maximum","BetweenTypeId","between","NonNaNTypeId","nonNaN","isNaN","positive","negative","nonPositive","nonNegative","clamp","strict","NumberFromString","fromOption","Finite","Int","NonNaN","Positive","Negative","NonPositive","NonNegative","JsonNumberTypeId","JsonNumber","Not","GreaterThanBigintTypeId","greaterThanBigint","GreaterThanOrEqualToBigintTypeId","greaterThanOrEqualToBigint","LessThanBigintTypeId","lessThanBigint","LessThanOrEqualToBigintTypeId","lessThanOrEqualToBigint","BetweenBigintTypeId","betweenBigint","positiveBigint","negativeBigint","nonNegativeBigint","nonPositiveBigint","clampBigint","bigint","BigInt","PositiveBigintFromSelf","PositiveBigint","NegativeBigintFromSelf","NegativeBigint","NonPositiveBigintFromSelf","NonPositiveBigint","NonNegativeBigintFromSelf","NonNegativeBigint","BigintFromNumber","toNumber","SecretFromSelf","isSecret","secret","fromString","_Secret","str","DurationFromSelf","isDuration","oneof","constant","infinity","bigUint","nanos","micros","maxSafeNat","millis","seconds","minutes","hours","days","weeks","DurationFromNanos","duration","toNanos","val","DurationFromMillis","ms","toMillis","hrTime","_Duration","toHrTime","clampDuration","betweenDuration","LessThanDurationTypeId","lessThanDuration","LessThanOrEqualToDurationTypeId","lessThanOrEqualToDuration","GreaterThanDurationTypeId","greaterThanDuration","GreaterThanOrEqualToDurationTypeId","greaterThanOrEqualToDuration","BetweenDurationTypeId","Uint8ArrayFromSelf","isUint8Array","u8arr","uint8Array","getEquivalence","equals","_Uint8Array","Uint8Array","arr","makeEncodingTransformation","decodeException","Base64","decodeBase64","encodeBase64","Base64Url","decodeBase64Url","encodeBase64Url","Hex","decodeHex","encodeHex","MinItemsTypeId","minItems","MaxItemsTypeId","maxItems","ItemsCountTypeId","itemsCount","getNumberIndexedAccess","of","headOr","fallback","ValidDateTypeId","validDate","getTime","DateFromSelf","isDate","date","noInvalidDate","Date","ValidDateFromSelf","DateFromString","toISOString","_Date","OptionNoneFrom","optionSomeFrom","optionFrom","optionDecode","optionArbitrary","arb","schemaFromArbitrary","optionPretty","optionParse","isOption","isNone","optionFromNullable","fromNullable","getOrNull","optionFromNullish","onNoneEncoding","getOrUndefined","optionFromOrUndefined","rightFrom","right","leftFrom","eitherFrom","eitherDecode","eitherArbitrary","eitherPretty","onLeft","onRight","eitherParse","decodeUnknownLeft","parseright","isEither","eitherFromSelf","makeLeftFrom","makeRightFrom","eitherFromUnion","toleft","toright","fromLeft","l","fromRight","readonlyMapArbitrary","Map","readonlyMapPretty","entries","k","readonlyMapEquivalence","arrayEquivalence","ka","va","kb","vb","readonlyMapParse","isMap","readonlyMapFromSelf","readonlyMap","readonlySetArbitrary","Set","readonlySetPretty","values","readonlySetEquivalence","readonlySetParse","isSet","readonlySetFromSelf","readonlySet","sortedSetArbitrary","ord","fromIterable","sortedSetPretty","sortedSetParse","isSortedSet","sortedSetFromSelf","ordA","ordI","sortedSet","bigDecimalPretty","normalize","bigDecimalArbitrary","bigInt","integer","scale","BigDecimalFromSelf","isBigDecimal","_BigDecimal","num","BigDecimalFromNumber","fromNumber","unsafeToNumber","GreaterThanBigDecimalTypeId","greaterThanBigDecimal","GreaterThanOrEqualToBigDecimalTypeId","greaterThanOrEqualToBigDecimal","LessThanBigDecimalTypeId","lessThanBigDecimal","LessThanOrEqualToBigDecimalTypeId","lessThanOrEqualToBigDecimal","PositiveBigDecimalTypeId","positiveBigDecimal","isPositive","PositiveBigDecimalFromSelf","NonNegativeBigDecimalTypeId","nonNegativeBigDecimal","NonNegativeBigDecimalFromSelf","NegativeBigDecimalTypeId","negativeBigDecimal","isNegative","NegativeBigDecimalFromSelf","NonPositiveBigDecimalTypeId","nonPositiveBigDecimal","NonPositiveBigDecimalFromSelf","BetweenBigDecimalTypeId","betweenBigDecimal","clampBigDecimal","negateBigDecimal","negate","chunkArbitrary","chunkPretty","c","toReadonlyArray","chunkParse","isChunk","isEmpty","empty","chunkFromSelf","chunk","toData","dataArbitrary","dataPretty","d","dataParse","isEqual","dataFromSelf","data","Class","makeClass","TaggedClass","tag","fieldsWithTag","TaggedError","TaggedRequest","Failure","Success","SerializableRequest","symbolResult","selfSchema","selfFields","Base","props","disableValidation","outer","toString","toSchema","declaration","newFields","transformOrFailFrom","FiberIdCompositeFrom","FiberIdFrom","FiberIdNoneFrom","FiberIdRuntimeFrom","startTimeMillis","fiberIdFromArbitrary","fiberIdArbitrary","fiberIdDecode","fiberIdPretty","fiberId","FiberIdFromSelf","isFiberId","composite","runtime","fiberIdEncode","_FiberId","causeDieFrom","defect","CauseEmptyFrom","causeFailFrom","error","CauseInterruptFrom","causeParallelFrom","causeFrom","causeSequentialFrom","recur","causeArbitrary","causeDecode","causePretty","cause","causeParse","isCause","causeEncode","causeFromSelf","die","interrupt","parallel","sequential","causeDefectPretty","exitFailureFrom","exitSuccessFrom","exitFrom","exitDecode","failCause","exitArbitrary","exitPretty","exit","exitParse","decodeUnknownCause","decodeUnknownValue","isExit","onFailure","onSuccess","exitFromSelf","failure","success","hashSetArbitrary","hashSetPretty","hashSetEquivalence","hashSetParse","isHashSet","hashSetFromSelf","hashSet","hashMapArbitrary","hashMapPretty","hashMapEquivalence","hashMapParse","isHashMap","hashMapFromSelf","hashMap","listArbitrary","listPretty","listEquivalence","listParse","isList","listFromSelf","list"],"sources":["../../src/Schema.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"Schema.js","names":["_bigDecimal","_interopRequireWildcard","require","_bigInt","Brand","Cause","Chunk","Data","_duration","Effect","Either","Encoding","Equal","Equivalence","Exit","_fiberId","_Function","HashMap","HashSet","List","N","Option","_Pipeable","Predicate","ReadonlyArray","Request","_secret","SortedSet","S","arbitrary","AST","_equivalence","_filters","_hooks","_schema","_serializable","_util","Parser","ParseResult","Pretty","TreeFormatter","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","TypeId","exports","asSchema","schema","hash","ast","format","String","encodedSchema","make","encodedAST","typeSchema","typeAST","encodeUnknown","options","overrideOptions","mapError","parseError","encodeUnknownEither","mapLeft","encodeUnknownPromise","parser","runPromise","encode","encodeEither","encodePromise","decodeUnknown","decodeUnknownEither","decodeUnknownPromise","decode","decodeEither","decodePromise","validate","validateEither","validatePromise","isSchema","hasProperty","isObject","$literal","Schema","literals","isMembers","Union","mapMembers","literal","Literal","constructor","annotations","isNonEmptyReadonlyArray","never","pickLiteral","uniqueSymbolFromSelf","symbol","UniqueSymbol","enums","Enums","keys","filter","key","map","templateLiteral","head","tail","types","getTemplateLiterals","span","flatMap","b","combineTemplateLiterals","isLiteral","TemplateLiteral","spans","modifyNonEmptyLast","TemplateLiteralSpan","type","appendAll","_tag","Error","declareConstructor","typeParameters","Declaration","tp","toASTAnnotations","declarePrimitive","is","input","_","succeed","fail","Type","declare","Array","isArray","arguments","BrandTypeId","Symbol","for","fromBrand","self","Refinement","either","isLeft","some","left","v","message","join","none","typeId","id","annotation","InstanceOfTypeId","instanceOf","title","name","description","pretty","$undefined","undefined","undefinedKeyword","$void","void","voidKeyword","$null","null","_null","neverKeyword","unknown","unknownKeyword","any","anyKeyword","string","stringKeyword","number","numberKeyword","boolean","booleanKeyword","bigintFromSelf","bigIntKeyword","symbolFromSelf","symbolKeyword","object","objectKeyword","$union","members","m","union","nullable","orUndefined","nullish","keyof","optionalElement","$OptionalElement","$tupleType","elements","rest","TupleType","Element","$tuple","tuple","args","slice","$array","value","array","length","$nonEmptyArray","nonEmptyArray","PropertySignatureDeclaration","isOptional","__defaultConstructor","PropertySignatureTransformation","fromKey","from","to","PropertySignatureTypeId","propertySignatureAnnotations","$PropertySignature","_Key","_EncodedToken","_TypeToken","_HasDefault","pipe","pipeArguments","propertySignature","propertySignatureTransformation","dual","identity","optionalToRequired","o","optionalToOptional","optional","isExact","exact","defaultValue","isNullable","asOption","as","match","onNone","onSome","optionFromSelf","isNotNull","isNotUndefined","isPropertySignature","$typeLiteral","fields","records","ownKeys","pss","transformations","field","toAnnotations","push","PropertySignature","issFrom","issTo","indexSignatures","propertySignatures","record","forEach","ps","isReadonly","IndexSignature","parameter","Transformation","TypeLiteral","TypeLiteralTransformation","iss","struct","$record","pick","isTransform","isTypeLiteralTransformation","transformation","propertySignatureTransformations","includes","omit","pluck","getPropertyKeyIndexedAccess","transform","ak","makeBrandSchema","_validateEither","refined","unbranded","onLeft","error","formatError","onRight","variance","brand","brandAnnotation","getBrandAnnotation","brands","BrandAnnotationId","partial","required","mutable","getExtendErrorMessage","x","y","path","intersectTypeLiterals","isTypeLiteral","findIndex","formatUnknown","extendAST","concat","intersectUnionMembers","isUnion","xs","ys","extend","that","compose","suspend","f","Suspend","predicate","out","isBoolean","$transformOrFail","transformOrFail","FinalTransformation","fromA","toI","transformLiteral","transformLiterals","pairs","attachPropertySignature","attached","isSymbol","MessageAnnotationId","identifier","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","examples","ExamplesAnnotationId","_default","DefaultAnnotationId","documentation","DocumentationAnnotationId","jsonSchema","JSONSchemaAnnotationId","equivalence","EquivalenceHookId","concurrency","ConcurrencyAnnotationId","batching","BatchingAnnotationId","rename","mapping","TrimmedTypeId","trimmed","trim","MaxLengthTypeId","maxLength","MinLengthTypeId","minLength","PatternTypeId","pattern","regex","source","lastIndex","test","fc","stringMatching","StartsWithTypeId","startsWith","JSON","stringify","EndsWithTypeId","endsWith","IncludesTypeId","searchString","LowercasedTypeId","lowercased","toLowerCase","Lowercased","UppercasedTypeId","uppercased","toUpperCase","Uppercased","LengthTypeId","Char","nonEmpty","Lowercase","s","Uppercase","Trimmed","Trim","split","separator","JsonString","parseJson","try","parse","reviver","catch","replacer","space","NonEmpty","UUIDTypeId","uuidRegex","UUID","uuid","ULIDTypeId","ulidRegex","ULID","ulid","FiniteTypeId","finite","Number","isFinite","GreaterThanTypeId","greaterThan","min","exclusiveMinimum","GreaterThanOrEqualToTypeId","greaterThanOrEqualTo","minimum","MultipleOfTypeId","multipleOf","divisor","remainder","Math","abs","IntTypeId","int","isSafeInteger","LessThanTypeId","lessThan","max","exclusiveMaximum","LessThanOrEqualToTypeId","lessThanOrEqualTo","maximum","BetweenTypeId","between","NonNaNTypeId","nonNaN","isNaN","positive","negative","nonPositive","nonNegative","clamp","strict","NumberFromString","fromOption","Finite","Int","NonNaN","Positive","Negative","NonPositive","NonNegative","JsonNumberTypeId","JsonNumber","Not","sym","GreaterThanBigintTypeId","greaterThanBigint","GreaterThanOrEqualToBigintTypeId","greaterThanOrEqualToBigint","LessThanBigintTypeId","lessThanBigint","LessThanOrEqualToBigintTypeId","lessThanOrEqualToBigint","BetweenBigintTypeId","betweenBigint","positiveBigint","negativeBigint","nonNegativeBigint","nonPositiveBigint","clampBigint","bigint","BigInt","PositiveBigintFromSelf","PositiveBigint","NegativeBigintFromSelf","NegativeBigint","NonPositiveBigintFromSelf","NonPositiveBigint","NonNegativeBigintFromSelf","NonNegativeBigint","BigintFromNumber","toNumber","SecretFromSelf","isSecret","secret","fromString","Secret","str","DurationFromSelf","isDuration","oneof","constant","infinity","bigUint","nanos","micros","maxSafeNat","millis","seconds","minutes","hours","days","weeks","DurationFromNanos","duration","toNanos","val","DurationFromMillis","ms","toMillis","hrTime","Duration","toHrTime","clampDuration","betweenDuration","LessThanDurationTypeId","lessThanDuration","LessThanOrEqualToDurationTypeId","lessThanOrEqualToDuration","GreaterThanDurationTypeId","greaterThanDuration","GreaterThanOrEqualToDurationTypeId","greaterThanOrEqualToDuration","BetweenDurationTypeId","Uint8ArrayFromSelf","isUint8Array","u8arr","uint8Array","getEquivalence","equals","_Uint8Array","Uint8Array","arr","makeEncodingTransformation","decodeException","Base64","decodeBase64","encodeBase64","Base64Url","decodeBase64Url","encodeBase64Url","Hex","decodeHex","encodeHex","MinItemsTypeId","minItems","MaxItemsTypeId","maxItems","ItemsCountTypeId","itemsCount","getNumberIndexedAccess","of","headOr","fallback","ValidDateTypeId","validDate","getTime","DateFromSelf","isDate","date","noInvalidDate","Date","ValidDateFromSelf","DateFromString","toISOString","_Date","OptionNoneEncoded","optionSomeEncoded","optionEncoded","optionDecode","optionArbitrary","arb","schemaFromArbitrary","optionPretty","optionParse","isOption","isNone","makeNoneEncoded","makeSomeEncoded","option","_value","optionFromNullable","fromNullable","getOrNull","optionFromNullish","onNoneEncoding","getOrUndefined","optionFromOrUndefined","rightEncoded","right","leftEncoded","eitherEncoded","eitherDecode","eitherArbitrary","eitherPretty","eitherParse","parseRight","decodeUnknownLeft","isEither","eitherFromSelf","makeLeftEncoded","makeRightEncoded","_right","_left","eitherFromUnion","toright","toleft","fromRight","fromLeft","l","readonlyMapArbitrary","Map","readonlyMapPretty","entries","k","readonlyMapEquivalence","arrayEquivalence","ka","va","kb","vb","readonlyMapParse","isMap","readonlyMapFromSelf","readonlyMap","_key","readonlySetArbitrary","item","Set","readonlySetPretty","values","readonlySetEquivalence","readonlySetParse","isSet","readonlySetFromSelf","readonlySet","bigDecimalPretty","normalize","bigDecimalArbitrary","bigInt","integer","scale","BigDecimalFromSelf","isBigDecimal","BigDecimal","num","BigDecimalFromNumber","fromNumber","unsafeToNumber","GreaterThanBigDecimalTypeId","greaterThanBigDecimal","GreaterThanOrEqualToBigDecimalTypeId","greaterThanOrEqualToBigDecimal","LessThanBigDecimalTypeId","lessThanBigDecimal","LessThanOrEqualToBigDecimalTypeId","lessThanOrEqualToBigDecimal","PositiveBigDecimalTypeId","positiveBigDecimal","isPositive","PositiveBigDecimalFromSelf","NonNegativeBigDecimalTypeId","nonNegativeBigDecimal","NonNegativeBigDecimalFromSelf","NegativeBigDecimalTypeId","negativeBigDecimal","isNegative","NegativeBigDecimalFromSelf","NonPositiveBigDecimalTypeId","nonPositiveBigDecimal","NonPositiveBigDecimalFromSelf","BetweenBigDecimalTypeId","betweenBigDecimal","clampBigDecimal","negateBigDecimal","negate","chunkArbitrary","fromIterable","chunkPretty","c","toReadonlyArray","chunkParse","isChunk","isEmpty","empty","chunkFromSelf","chunk","toData","dataArbitrary","dataPretty","d","dataParse","isEqual","dataFromSelf","data","assign","TAG","Class","makeClass","kind","Base","TaggedClass","tag","extendFields","TaggedError","TaggedRequest","Failure","Success","SerializableRequest","symbolResult","getDuplicatePropertySignatureErrorMessage","fromSchema","validateSync","cls","props","disableValidation","classSymbol","toString","toSchema","guard","fallbackInstanceOf","declaration","SurrogateAnnotationId","newFields","extendedFields","transformedFields","transformOrFailFrom","p","FiberIdCompositeEncoded","FiberIdEncoded","FiberIdNoneEncoded","FiberIdRuntimeEncoded","startTimeMillis","fiberIdFromArbitrary","fiberIdArbitrary","fiberIdDecode","fiberIdPretty","fiberId","FiberIdFromSelf","isFiberId","composite","runtime","fiberIdEncode","FiberId","causeDieEncoded","defect","CauseEmptyEncoded","causeFailEncoded","CauseInterruptEncoded","causeParallelEncoded","causeEncoded","causeSequentialEncoded","recur","causeArbitrary","causeDecode","causePretty","cause","causeParse","isCause","causeEncode","causeFromSelf","die","interrupt","parallel","sequential","causeDefectPretty","_error","exitFailureEncoded","exitSuccessEncoded","exitEncoded","exitDecode","failCause","exitArbitrary","exitPretty","exit","exitParse","decodeUnknownValue","decodeUnknownCause","isExit","onFailure","onSuccess","exitFromSelf","failure","success","_success","_failure","hashSetArbitrary","hashSetPretty","hashSetEquivalence","hashSetParse","isHashSet","hashSetFromSelf","hashSet","hashMapArbitrary","hashMapPretty","hashMapEquivalence","hashMapParse","isHashMap","hashMapFromSelf","hashMap","listArbitrary","listPretty","listEquivalence","listParse","isList","listFromSelf","list","sortedSetArbitrary","ord","sortedSetPretty","sortedSetParse","isSortedSet","sortedSetFromSelf","ordA","ordI","sortedSet","ArbitraryHookId"],"sources":["../../src/Schema.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/Serializable.js b/dist/cjs/Serializable.js
index 9b6d3714d1d878f34d83253ef79c052fc989d4aa..dd924bdc6cead57ad00193a09bfe5a232f08da02 100644
--- a/dist/cjs/Serializable.js
+++ b/dist/cjs/Serializable.js
@@ -6,7 +6,7 @@ Object.defineProperty(exports, "__esModule", {
 exports.symbolResult = exports.symbol = exports.successSchema = exports.serializeSuccess = exports.serializeFailure = exports.serializeExit = exports.serialize = exports.selfSchema = exports.failureSchema = exports.exitSchema = exports.deserializeSuccess = exports.deserializeFailure = exports.deserializeExit = exports.deserialize = void 0;
 var _Function = /*#__PURE__*/require("effect/Function");
 var _GlobalValue = /*#__PURE__*/require("effect/GlobalValue");
-var Internal = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/serializable.js"));
+var _serializable = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/serializable.js"));
 var Schema = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./Schema.js"));
 function _getRequireWildcardCache(e) {
   if ("function" != typeof WeakMap) return null;
@@ -37,7 +37,7 @@ function _interopRequireWildcard(e, r) {
  * @since 1.0.0
  * @category symbol
  */
-const symbol = exports.symbol = Internal.symbol;
+const symbol = exports.symbol = _serializable.symbol;
 /**
  * @since 1.0.0
  * @category accessor
@@ -48,7 +48,7 @@ const selfSchema = self => self[symbol];
  * @category symbol
  */
 exports.selfSchema = selfSchema;
-const symbolResult = exports.symbolResult = Internal.symbolResult;
+const symbolResult = exports.symbolResult = _serializable.symbolResult;
 /**
  * @since 1.0.0
  * @category accessor
diff --git a/dist/cjs/Serializable.js.map b/dist/cjs/Serializable.js.map
index 9ae94848d20e908da4d53283ecb6e7a4dc8e6771..fa9759d1ed6fdaca9f6f90551a63f6ac15f814d1 100644
--- a/dist/cjs/Serializable.js.map
+++ b/dist/cjs/Serializable.js.map
@@ -1 +1 @@
-{"version":3,"file":"Serializable.js","names":["_Function","require","_GlobalValue","Internal","_interopRequireWildcard","Schema","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","symbol","exports","selfSchema","self","symbolResult","failureSchema","Failure","successSchema","Success","exitSchemaCache","globalValue","exitSchema","proto","getPrototypeOf","exit","failure","success","schema","undefined","serialize","encode","deserialize","dual","value","decodeUnknown","serializeFailure","deserializeFailure","serializeSuccess","deserializeSuccess","serializeExit","deserializeExit"],"sources":["../../src/Serializable.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"Serializable.js","names":["_Function","require","_GlobalValue","_serializable","_interopRequireWildcard","Schema","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","symbol","exports","selfSchema","self","symbolResult","failureSchema","Failure","successSchema","Success","exitSchemaCache","globalValue","exitSchema","proto","getPrototypeOf","exit","failure","success","schema","undefined","serialize","encode","deserialize","dual","value","decodeUnknown","serializeFailure","deserializeFailure","serializeSuccess","deserializeSuccess","serializeExit","deserializeExit"],"sources":["../../src/Serializable.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/TreeFormatter.js b/dist/cjs/TreeFormatter.js
index 3e7781ba2fe052371c12d38d9e1a30a8f58aded5..fce3ac2184b202548c916804c4d39f4d0109c068 100644
--- a/dist/cjs/TreeFormatter.js
+++ b/dist/cjs/TreeFormatter.js
@@ -3,9 +3,12 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.getTransformMessage = exports.getRefinementMessage = exports.getMessage = exports.formatTypeMessage = exports.formatIssues = exports.formatIssue = exports.formatForbiddenMessage = exports.formatError = void 0;
+exports.getMessage = exports.formatTypeMessage = exports.formatIssueEffect = exports.formatIssue = exports.formatForbiddenMessage = exports.formatErrorEffect = exports.formatError = void 0;
+var Effect = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Effect"));
 var Option = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Option"));
+var Predicate = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Predicate"));
 var AST = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./AST.js"));
+var _util = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/util.js"));
 function _getRequireWildcardCache(e) {
   if ("function" != typeof WeakMap) return null;
   var r = new WeakMap(),
@@ -43,21 +46,24 @@ const make = (value, forest = []) => ({
  * @category formatting
  * @since 1.0.0
  */
-const formatIssues = issues => {
-  const forest = issues.map(go);
-  return drawTree(forest.length === 1 ? forest[0] : make(`error(s) found`, forest));
-};
+const formatIssueEffect = issue => Effect.map(go(issue), tree => drawTree(tree));
 /**
  * @category formatting
  * @since 1.0.0
  */
-exports.formatIssues = formatIssues;
-const formatIssue = issue => formatIssues([issue]);
+exports.formatIssueEffect = formatIssueEffect;
+const formatIssue = issue => Effect.runSync(formatIssueEffect(issue));
 /**
  * @category formatting
  * @since 1.0.0
  */
 exports.formatIssue = formatIssue;
+const formatErrorEffect = error => formatIssueEffect(error.error);
+/**
+ * @category formatting
+ * @since 1.0.0
+ */
+exports.formatErrorEffect = formatErrorEffect;
 const formatError = error => formatIssue(error.error);
 exports.formatError = formatError;
 const drawTree = tree => tree.value + draw("\n", tree.forest);
@@ -75,12 +81,12 @@ const draw = (indentation, forest) => {
 };
 const formatTransformationKind = kind => {
   switch (kind) {
-    case "From":
-      return "From side transformation failure";
+    case "Encoded":
+      return "Encoded side transformation failure";
     case "Transformation":
       return "Transformation process failure";
-    case "To":
-      return "To side transformation failure";
+    case "Type":
+      return "Type side transformation failure";
   }
 };
 const formatRefinementKind = kind => {
@@ -91,90 +97,83 @@ const formatRefinementKind = kind => {
       return "Predicate refinement failure";
   }
 };
+const getPrevMessage = issue => {
+  switch (issue._tag) {
+    case "Refinement":
+      {
+        if (issue.kind === "From") {
+          return getMessage(issue.error);
+        }
+        break;
+      }
+    case "Transformation":
+      return getMessage(issue.error);
+  }
+  return Option.none();
+};
+const getCurrentMessage = issue => AST.getMessageAnnotation(issue.ast).pipe(Effect.flatMap(annotation => {
+  const out = annotation(issue);
+  return Predicate.isString(out) ? Effect.succeed(out) : out;
+}));
 /** @internal */
-const getMessage = issue => Option.flatMap(AST.getMessageAnnotation(issue.ast), annotation => Option.fromNullable(annotation(issue)));
+const getMessage = issue => Effect.catchAll(getPrevMessage(issue), () => getCurrentMessage(issue));
 /** @internal */
 exports.getMessage = getMessage;
-const formatTypeMessage = e => getMessage(e).pipe(Option.orElse(() => e.message), Option.getOrElse(() => `Expected ${AST.format(e.ast, true)}, actual ${AST.formatUnknown(e.actual)}`));
+const formatTypeMessage = e => getMessage(e).pipe(Effect.orElse(() => e.message), Effect.catchAll(() => Effect.succeed(`Expected ${e.ast.toString(true)}, actual ${_util.formatUnknown(e.actual)}`)));
 /** @internal */
 exports.formatTypeMessage = formatTypeMessage;
 const formatForbiddenMessage = e => Option.getOrElse(e.message, () => "is forbidden");
 exports.formatForbiddenMessage = formatForbiddenMessage;
-const getParseIssueMessage = (issue, orElse) => {
-  switch (issue._tag) {
-    case "Refinement":
-      return Option.orElse(getRefinementMessage(issue), orElse);
-    case "Transform":
-      return Option.orElse(getTransformMessage(issue), orElse);
-    case "Tuple":
-    case "TypeLiteral":
-    case "Union":
-    case "Type":
-      return Option.orElse(getMessage(issue), orElse);
-  }
-  return orElse();
-};
-/** @internal */
-const getRefinementMessage = e => {
-  if (e.kind === "From") {
-    return getParseIssueMessage(e.error, () => getMessage(e));
-  }
-  return getMessage(e);
-};
-/** @internal */
-exports.getRefinementMessage = getRefinementMessage;
-const getTransformMessage = e => getParseIssueMessage(e.error, () => getMessage(e));
-exports.getTransformMessage = getTransformMessage;
 const go = e => {
   switch (e._tag) {
     case "Type":
-      return make(formatTypeMessage(e));
+      return Effect.map(formatTypeMessage(e), make);
     case "Forbidden":
-      return make(AST.format(e.ast), [make(formatForbiddenMessage(e))]);
+      return Effect.succeed(make(String(e.ast), [make(formatForbiddenMessage(e))]));
     case "Unexpected":
-      return make(`is unexpected, expected ${AST.format(e.ast, true)}`);
+      return Effect.succeed(make(`is unexpected, expected ${e.ast.toString(true)}`));
     case "Missing":
-      return make("is missing");
+      return Effect.succeed(make("is missing"));
     case "Union":
-      return Option.match(getMessage(e), {
-        onNone: () => make(AST.format(e.ast), e.errors.map(e => {
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () => Effect.map(Effect.forEach(e.errors, e => {
           switch (e._tag) {
             case "Member":
-              return make(`Union member`, [go(e.error)]);
+              return Effect.map(go(e.error), tree => make(`Union member`, [tree]));
             default:
               return go(e);
           }
-        })),
-        onSome: make
+        }), forest => make(String(e.ast), forest)),
+        onSuccess: message => Effect.succeed(make(message))
       });
-    case "Tuple":
-      return Option.match(getMessage(e), {
-        onNone: () => make(AST.format(e.ast), e.errors.map(index => make(`[${index.index}]`, [go(index.error)]))),
-        onSome: make
+    case "TupleType":
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () => Effect.map(Effect.forEach(e.errors, index => Effect.map(go(index.error), tree => make(`[${index.index}]`, [tree]))), forest => make(String(e.ast), forest)),
+        onSuccess: message => Effect.succeed(make(message))
       });
     case "TypeLiteral":
-      return Option.match(getMessage(e), {
-        onNone: () => make(AST.format(e.ast), e.errors.map(key => make(`[${AST.formatUnknown(key.key)}]`, [go(key.error)]))),
-        onSome: make
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () => Effect.map(Effect.forEach(e.errors, key => Effect.map(go(key.error), tree => make(`[${_util.formatUnknown(key.key)}]`, [tree]))), forest => make(String(e.ast), forest)),
+        onSuccess: message => Effect.succeed(make(message))
       });
-    case "Transform":
-      return Option.match(getTransformMessage(e), {
-        onNone: () => make(AST.format(e.ast), [make(formatTransformationKind(e.kind), [go(e.error)])]),
-        onSome: make
+    case "Transformation":
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () => Effect.map(go(e.error), tree => make(String(e.ast), [make(formatTransformationKind(e.kind), [tree])])),
+        onSuccess: message => Effect.succeed(make(message))
       });
     case "Refinement":
-      return Option.match(getRefinementMessage(e), {
-        onNone: () => make(AST.format(e.ast), [make(formatRefinementKind(e.kind), [go(e.error)])]),
-        onSome: make
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () => Effect.map(go(e.error), tree => make(String(e.ast), [make(formatRefinementKind(e.kind), [tree])])),
+        onSuccess: message => Effect.succeed(make(message))
       });
     case "Declaration":
-      return Option.match(getMessage(e), {
-        onNone: () => {
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () => {
           const error = e.error;
           const shouldSkipDefaultMessage = error._tag === "Type" && error.ast === e.ast;
-          return shouldSkipDefaultMessage ? go(error) : make(AST.format(e.ast), [go(e.error)]);
+          return shouldSkipDefaultMessage ? go(error) : Effect.map(go(e.error), tree => make(String(e.ast), [tree]));
         },
-        onSome: make
+        onSuccess: message => Effect.succeed(make(message))
       });
   }
 };
diff --git a/dist/cjs/TreeFormatter.js.map b/dist/cjs/TreeFormatter.js.map
index 976e0c3da6a0a17e12cd87c4bd3fad3476375143..915cac1eb7b3e8e6a48597b7fc53d8e8e819f8f4 100644
--- a/dist/cjs/TreeFormatter.js.map
+++ b/dist/cjs/TreeFormatter.js.map
@@ -1 +1 @@
-{"version":3,"file":"TreeFormatter.js","names":["Option","_interopRequireWildcard","require","AST","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","make","value","forest","formatIssues","issues","map","go","drawTree","length","exports","formatIssue","issue","formatError","error","tree","draw","indentation","len","isLast","formatTransformationKind","kind","formatRefinementKind","getMessage","flatMap","getMessageAnnotation","ast","annotation","fromNullable","formatTypeMessage","pipe","orElse","message","getOrElse","format","formatUnknown","actual","formatForbiddenMessage","getParseIssueMessage","_tag","getRefinementMessage","getTransformMessage","match","onNone","errors","onSome","index","key","shouldSkipDefaultMessage"],"sources":["../../src/TreeFormatter.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"TreeFormatter.js","names":["Effect","_interopRequireWildcard","require","Option","Predicate","AST","_util","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","make","value","forest","formatIssueEffect","issue","map","go","tree","drawTree","exports","formatIssue","runSync","formatErrorEffect","error","formatError","draw","indentation","len","length","isLast","formatTransformationKind","kind","formatRefinementKind","getPrevMessage","_tag","getMessage","none","getCurrentMessage","getMessageAnnotation","ast","pipe","flatMap","annotation","out","isString","succeed","catchAll","formatTypeMessage","orElse","message","toString","formatUnknown","actual","formatForbiddenMessage","getOrElse","String","matchEffect","onFailure","forEach","errors","onSuccess","index","key","shouldSkipDefaultMessage"],"sources":["../../src/TreeFormatter.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/index.js b/dist/cjs/index.js
index 54bafc3927bb3e5d3aa4d21350620699c9a9cf6b..a60912ff8f2709c795d07c540d6f109513ff8fbc 100644
--- a/dist/cjs/index.js
+++ b/dist/cjs/index.js
@@ -3,7 +3,7 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.TreeFormatter = exports.Serializable = exports.Schema = exports.Pretty = exports.Parser = exports.ParseResult = exports.JSONSchema = exports.Format = exports.Equivalence = exports.ArrayFormatter = exports.Arbitrary = exports.AST = void 0;
+exports.TreeFormatter = exports.Serializable = exports.Schema = exports.Pretty = exports.Parser = exports.ParseResult = exports.JSONSchema = exports.Equivalence = exports.ArrayFormatter = exports.Arbitrary = exports.AST = void 0;
 var _AST = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./AST.js"));
 exports.AST = _AST;
 var _Arbitrary = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./Arbitrary.js"));
@@ -12,8 +12,6 @@ var _ArrayFormatter = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require
 exports.ArrayFormatter = _ArrayFormatter;
 var _Equivalence = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./Equivalence.js"));
 exports.Equivalence = _Equivalence;
-var _Format = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./Format.js"));
-exports.Format = _Format;
 var _JSONSchema = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./JSONSchema.js"));
 exports.JSONSchema = _JSONSchema;
 var _ParseResult = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./ParseResult.js"));
diff --git a/dist/cjs/internal/filters.js.map b/dist/cjs/internal/filters.js.map
index 8685f9b1ae46d6c6b76feec5a1380ab49ac53b8b..6c7ef3fea915423191abc956c25562e42d0c7444 100644
--- a/dist/cjs/internal/filters.js.map
+++ b/dist/cjs/internal/filters.js.map
@@ -1 +1 @@
-{"version":3,"file":"filters.js","names":["GreaterThanTypeId","exports","Symbol","for","GreaterThanOrEqualToTypeId","LessThanTypeId","LessThanOrEqualToTypeId","IntTypeId","BetweenTypeId","GreaterThanBigintTypeId","GreaterThanOrEqualToBigintTypeId","LessThanBigintTypeId","LessThanOrEqualToBigintTypeId","BetweenBigintTypeId","MinLengthTypeId","MaxLengthTypeId","LengthTypeId","MinItemsTypeId","MaxItemsTypeId","ItemsCountTypeId"],"sources":["../../../src/internal/filters.ts"],"sourcesContent":[null],"mappings":";;;;;;AAKA;AACO,MAAMA,iBAAiB,GAAAC,OAAA,CAAAD,iBAAA,gBAA6BE,MAAM,CAACC,GAAG,CACnE,mCAAmC,CACR;AAE7B;AACO,MAAMC,0BAA0B,GAAAH,OAAA,CAAAG,0BAAA,gBAAsCF,MAAM,CAACC,GAAG,CACrF,4CAA4C,CACR;AAEtC;AACO,MAAME,cAAc,GAAAJ,OAAA,CAAAI,cAAA,gBAA0BH,MAAM,CAACC,GAAG,CAC7D,gCAAgC,CACR;AAE1B;AACO,MAAMG,uBAAuB,GAAAL,OAAA,CAAAK,uBAAA,gBAAmCJ,MAAM,CAACC,GAAG,CAC/E,yCAAyC,CACR;AAEnC;AACO,MAAMI,SAAS,GAAAN,OAAA,CAAAM,SAAA,gBAAqBL,MAAM,CAACC,GAAG,CACnD,2BAA2B,CACR;AAErB;AACO,MAAMK,aAAa,GAAAP,OAAA,CAAAO,aAAA,gBAAyBN,MAAM,CAACC,GAAG,CAC3D,+BAA+B,CACR;AAEzB;AACO,MAAMM,uBAAuB,GAAAR,OAAA,CAAAQ,uBAAA,gBAAmCP,MAAM,CAACC,GAAG,CAC/E,yCAAyC,CACR;AAEnC;AACO,MAAMO,gCAAgC,GAAAT,OAAA,CAAAS,gCAAA,gBAA4CR,MAAM,CAACC,GAAG,CACjG,kDAAkD,CACR;AAE5C;AACO,MAAMQ,oBAAoB,GAAAV,OAAA,CAAAU,oBAAA,gBAAgCT,MAAM,CAACC,GAAG,CACzE,sCAAsC,CACR;AAEhC;AACO,MAAMS,6BAA6B,GAAAX,OAAA,CAAAW,6BAAA,gBAAyCV,MAAM,CAACC,GAAG,CAC3F,+CAA+C,CACR;AAEzC;AACO,MAAMU,mBAAmB,GAAAZ,OAAA,CAAAY,mBAAA,gBAA+BX,MAAM,CAACC,GAAG,CACvE,qCAAqC,CACR;AAE/B;AACO,MAAMW,eAAe,GAAAb,OAAA,CAAAa,eAAA,gBAA2BZ,MAAM,CAACC,GAAG,CAC/D,iCAAiC,CACR;AAE3B;AACO,MAAMY,eAAe,GAAAd,OAAA,CAAAc,eAAA,gBAA2Bb,MAAM,CAACC,GAAG,CAC/D,iCAAiC,CACR;AAE3B;AACO,MAAMa,YAAY,GAAAf,OAAA,CAAAe,YAAA,gBAAwBd,MAAM,CAACC,GAAG,CACzD,8BAA8B,CACR;AAExB;AACO,MAAMc,cAAc,GAAAhB,OAAA,CAAAgB,cAAA,gBAA0Bf,MAAM,CAACC,GAAG,CAC7D,gCAAgC,CACR;AAE1B;AACO,MAAMe,cAAc,GAAAjB,OAAA,CAAAiB,cAAA,gBAA0BhB,MAAM,CAACC,GAAG,CAC7D,gCAAgC,CACR;AAE1B;AACO,MAAMgB,gBAAgB,GAAAlB,OAAA,CAAAkB,gBAAA,gBAA4BjB,MAAM,CAACC,GAAG,CACjE,kCAAkC,CACR"}
\ No newline at end of file
+{"version":3,"file":"filters.js","names":["GreaterThanTypeId","exports","Symbol","for","GreaterThanOrEqualToTypeId","LessThanTypeId","LessThanOrEqualToTypeId","IntTypeId","BetweenTypeId","GreaterThanBigintTypeId","GreaterThanOrEqualToBigintTypeId","LessThanBigintTypeId","LessThanOrEqualToBigintTypeId","BetweenBigintTypeId","MinLengthTypeId","MaxLengthTypeId","LengthTypeId","MinItemsTypeId","MaxItemsTypeId","ItemsCountTypeId"],"sources":["../../../src/internal/filters.ts"],"sourcesContent":[null],"mappings":";;;;;;AAEA;AACO,MAAMA,iBAAiB,GAAAC,OAAA,CAAAD,iBAAA,gBAA6BE,MAAM,CAACC,GAAG,CACnE,mCAAmC,CACR;AAE7B;AACO,MAAMC,0BAA0B,GAAAH,OAAA,CAAAG,0BAAA,gBAAsCF,MAAM,CAACC,GAAG,CACrF,4CAA4C,CACR;AAEtC;AACO,MAAME,cAAc,GAAAJ,OAAA,CAAAI,cAAA,gBAA0BH,MAAM,CAACC,GAAG,CAC7D,gCAAgC,CACR;AAE1B;AACO,MAAMG,uBAAuB,GAAAL,OAAA,CAAAK,uBAAA,gBAAmCJ,MAAM,CAACC,GAAG,CAC/E,yCAAyC,CACR;AAEnC;AACO,MAAMI,SAAS,GAAAN,OAAA,CAAAM,SAAA,gBAAqBL,MAAM,CAACC,GAAG,CACnD,2BAA2B,CACR;AAErB;AACO,MAAMK,aAAa,GAAAP,OAAA,CAAAO,aAAA,gBAAyBN,MAAM,CAACC,GAAG,CAC3D,+BAA+B,CACR;AAEzB;AACO,MAAMM,uBAAuB,GAAAR,OAAA,CAAAQ,uBAAA,gBAAmCP,MAAM,CAACC,GAAG,CAC/E,yCAAyC,CACR;AAEnC;AACO,MAAMO,gCAAgC,GAAAT,OAAA,CAAAS,gCAAA,gBAA4CR,MAAM,CAACC,GAAG,CACjG,kDAAkD,CACR;AAE5C;AACO,MAAMQ,oBAAoB,GAAAV,OAAA,CAAAU,oBAAA,gBAAgCT,MAAM,CAACC,GAAG,CACzE,sCAAsC,CACR;AAEhC;AACO,MAAMS,6BAA6B,GAAAX,OAAA,CAAAW,6BAAA,gBAAyCV,MAAM,CAACC,GAAG,CAC3F,+CAA+C,CACR;AAEzC;AACO,MAAMU,mBAAmB,GAAAZ,OAAA,CAAAY,mBAAA,gBAA+BX,MAAM,CAACC,GAAG,CACvE,qCAAqC,CACR;AAE/B;AACO,MAAMW,eAAe,GAAAb,OAAA,CAAAa,eAAA,gBAA2BZ,MAAM,CAACC,GAAG,CAC/D,iCAAiC,CACR;AAE3B;AACO,MAAMY,eAAe,GAAAd,OAAA,CAAAc,eAAA,gBAA2Bb,MAAM,CAACC,GAAG,CAC/D,iCAAiC,CACR;AAE3B;AACO,MAAMa,YAAY,GAAAf,OAAA,CAAAe,YAAA,gBAAwBd,MAAM,CAACC,GAAG,CACzD,8BAA8B,CACR;AAExB;AACO,MAAMc,cAAc,GAAAhB,OAAA,CAAAgB,cAAA,gBAA0Bf,MAAM,CAACC,GAAG,CAC7D,gCAAgC,CACR;AAE1B;AACO,MAAMe,cAAc,GAAAjB,OAAA,CAAAiB,cAAA,gBAA0BhB,MAAM,CAACC,GAAG,CAC7D,gCAAgC,CACR;AAE1B;AACO,MAAMgB,gBAAgB,GAAAlB,OAAA,CAAAkB,gBAAA,gBAA4BjB,MAAM,CAACC,GAAG,CACjE,kCAAkC,CACR"}
\ No newline at end of file
diff --git a/dist/cjs/internal/hooks.js.map b/dist/cjs/internal/hooks.js.map
index a05bdcea6e295a4a8e55c7bc3c0cdb8a31cb38c3..72e5fd9fd62e4bdf68974a517de8740465b62362 100644
--- a/dist/cjs/internal/hooks.js.map
+++ b/dist/cjs/internal/hooks.js.map
@@ -1 +1 @@
-{"version":3,"file":"hooks.js","names":["ArbitraryHookId","exports","Symbol","for","PrettyHookId","EquivalenceHookId"],"sources":["../../../src/internal/hooks.ts"],"sourcesContent":[null],"mappings":";;;;;;AAOA;AACO,MAAMA,eAAe,GAAAC,OAAA,CAAAD,eAAA,gBAA8BE,MAAM,CAACC,GAAG,CAClE,gCAAgC,CACJ;AAE9B;AACO,MAAMC,YAAY,GAAAH,OAAA,CAAAG,YAAA,gBAAwBF,MAAM,CAACC,GAAG,CACzD,6BAA6B,CACP;AAExB;AACO,MAAME,iBAAiB,GAAAJ,OAAA,CAAAI,iBAAA,gBAAkCH,MAAM,CAACC,GAAG,CACxE,kCAAkC,CACF"}
\ No newline at end of file
+{"version":3,"file":"hooks.js","names":["ArbitraryHookId","exports","Symbol","for","PrettyHookId","EquivalenceHookId"],"sources":["../../../src/internal/hooks.ts"],"sourcesContent":[null],"mappings":";;;;;;AAIA;AACO,MAAMA,eAAe,GAAAC,OAAA,CAAAD,eAAA,gBAA8BE,MAAM,CAACC,GAAG,CAClE,gCAAgC,CACJ;AAE9B;AACO,MAAMC,YAAY,GAAAH,OAAA,CAAAG,YAAA,gBAAwBF,MAAM,CAACC,GAAG,CACzD,6BAA6B,CACP;AAExB;AACO,MAAME,iBAAiB,GAAAJ,OAAA,CAAAI,iBAAA,gBAAkCH,MAAM,CAACC,GAAG,CACxE,kCAAkC,CACF"}
\ No newline at end of file
diff --git a/dist/cjs/internal/parseResult.js b/dist/cjs/internal/parseResult.js
new file mode 100644
index 0000000000000000000000000000000000000000..4c1aa45f82ab952bfea2ef5b74f5cce23a4ccda2
--- /dev/null
+++ b/dist/cjs/internal/parseResult.js
@@ -0,0 +1,234 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.missing = exports.mapError = exports.map = exports.flatMap = exports.eitherOrUndefined = exports.Union = exports.Unexpected = exports.TypeLiteral = exports.Type = exports.Tuple = exports.Transformation = exports.Refinement = exports.Missing = exports.Member = exports.Key = exports.Index = exports.Forbidden = exports.Declaration = void 0;
+var Effect = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Effect"));
+var Either = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Either"));
+var _Function = /*#__PURE__*/require("effect/Function");
+var Option = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Option"));
+function _getRequireWildcardCache(e) {
+  if ("function" != typeof WeakMap) return null;
+  var r = new WeakMap(),
+    t = new WeakMap();
+  return (_getRequireWildcardCache = function (e) {
+    return e ? t : r;
+  })(e);
+}
+function _interopRequireWildcard(e, r) {
+  if (!r && e && e.__esModule) return e;
+  if (null === e || "object" != typeof e && "function" != typeof e) return {
+    default: e
+  };
+  var t = _getRequireWildcardCache(r);
+  if (t && t.has(e)) return t.get(e);
+  var n = {
+      __proto__: null
+    },
+    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
+  for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
+    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
+    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
+  }
+  return n.default = e, t && t.set(e, n), n;
+}
+/** @internal */
+class Declaration {
+  ast;
+  actual;
+  error;
+  _tag = "Declaration";
+  constructor(ast, actual, error) {
+    this.ast = ast;
+    this.actual = actual;
+    this.error = error;
+  }
+}
+/** @internal */
+exports.Declaration = Declaration;
+class Refinement {
+  ast;
+  actual;
+  kind;
+  error;
+  _tag = "Refinement";
+  constructor(ast, actual, kind, error) {
+    this.ast = ast;
+    this.actual = actual;
+    this.kind = kind;
+    this.error = error;
+  }
+}
+/** @internal */
+exports.Refinement = Refinement;
+class Tuple {
+  ast;
+  actual;
+  errors;
+  _tag = "TupleType";
+  constructor(ast, actual, errors) {
+    this.ast = ast;
+    this.actual = actual;
+    this.errors = errors;
+  }
+}
+/** @internal */
+exports.Tuple = Tuple;
+class Index {
+  index;
+  error;
+  _tag = "Index";
+  constructor(index, error) {
+    this.index = index;
+    this.error = error;
+  }
+}
+/** @internal */
+exports.Index = Index;
+class TypeLiteral {
+  ast;
+  actual;
+  errors;
+  _tag = "TypeLiteral";
+  constructor(ast, actual, errors) {
+    this.ast = ast;
+    this.actual = actual;
+    this.errors = errors;
+  }
+}
+/** @internal */
+exports.TypeLiteral = TypeLiteral;
+class Key {
+  key;
+  error;
+  _tag = "Key";
+  constructor(key, error) {
+    this.key = key;
+    this.error = error;
+  }
+}
+/** @internal */
+exports.Key = Key;
+class Unexpected {
+  ast;
+  _tag = "Unexpected";
+  constructor(ast) {
+    this.ast = ast;
+  }
+}
+/** @internal */
+exports.Unexpected = Unexpected;
+class Transformation {
+  ast;
+  actual;
+  kind;
+  error;
+  _tag = "Transformation";
+  constructor(ast, actual, kind, error) {
+    this.ast = ast;
+    this.actual = actual;
+    this.kind = kind;
+    this.error = error;
+  }
+}
+/** @internal */
+exports.Transformation = Transformation;
+class Type {
+  ast;
+  actual;
+  _tag = "Type";
+  message;
+  constructor(ast, actual, message) {
+    this.ast = ast;
+    this.actual = actual;
+    this.message = Option.fromNullable(message);
+  }
+}
+/** @internal */
+exports.Type = Type;
+class Forbidden {
+  ast;
+  actual;
+  _tag = "Forbidden";
+  message;
+  constructor(ast, actual, message) {
+    this.ast = ast;
+    this.actual = actual;
+    this.message = Option.fromNullable(message);
+  }
+}
+/** @internal */
+exports.Forbidden = Forbidden;
+class Missing {
+  _tag = "Missing";
+}
+/** @internal */
+exports.Missing = Missing;
+const missing = exports.missing = /*#__PURE__*/new Missing();
+/** @internal */
+class Member {
+  ast;
+  error;
+  _tag = "Member";
+  constructor(ast, error) {
+    this.ast = ast;
+    this.error = error;
+  }
+}
+/** @internal */
+exports.Member = Member;
+class Union {
+  ast;
+  actual;
+  errors;
+  _tag = "Union";
+  constructor(ast, actual, errors) {
+    this.ast = ast;
+    this.actual = actual;
+    this.errors = errors;
+  }
+}
+/** @internal */
+exports.Union = Union;
+const flatMap = exports.flatMap = /*#__PURE__*/(0, _Function.dual)(2, (self, f) => {
+  const s = self;
+  if (s["_tag"] === "Left") {
+    return s;
+  }
+  if (s["_tag"] === "Right") {
+    return f(s.right);
+  }
+  return Effect.flatMap(self, f);
+});
+/** @internal */
+const map = exports.map = /*#__PURE__*/(0, _Function.dual)(2, (self, f) => {
+  const s = self;
+  if (s["_tag"] === "Left") {
+    return s;
+  }
+  if (s["_tag"] === "Right") {
+    return Either.right(f(s.right));
+  }
+  return Effect.map(self, f);
+});
+/** @internal */
+const mapError = exports.mapError = /*#__PURE__*/(0, _Function.dual)(2, (self, f) => {
+  const s = self;
+  if (s["_tag"] === "Left") {
+    return Either.left(f(s.left));
+  }
+  if (s["_tag"] === "Right") {
+    return s;
+  }
+  return Effect.mapError(self, f);
+});
+/** @internal */
+const eitherOrUndefined = self => {
+  const s = self;
+  if (s["_tag"] === "Left" || s["_tag"] === "Right") {
+    return s;
+  }
+};
+exports.eitherOrUndefined = eitherOrUndefined;
+//# sourceMappingURL=parseResult.js.map
\ No newline at end of file
diff --git a/dist/cjs/internal/parseResult.js.map b/dist/cjs/internal/parseResult.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..1a2eb0a7286781b68193f91cb31a44b9a7238da3
--- /dev/null
+++ b/dist/cjs/internal/parseResult.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"parseResult.js","names":["Effect","_interopRequireWildcard","require","Either","_Function","Option","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","Declaration","ast","actual","error","_tag","constructor","exports","Refinement","kind","Tuple","errors","Index","index","TypeLiteral","Key","key","Unexpected","Transformation","Type","message","fromNullable","Forbidden","Missing","missing","Member","Union","flatMap","dual","self","f","s","right","map","mapError","left","eitherOrUndefined"],"sources":["../../../src/internal/parseResult.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,IAAAA,MAAA,gBAAAC,uBAAA,eAAAC,OAAA;AACA,IAAAC,MAAA,gBAAAF,uBAAA,eAAAC,OAAA;AACA,IAAAE,SAAA,gBAAAF,OAAA;AACA,IAAAG,MAAA,gBAAAJ,uBAAA,eAAAC,OAAA;AAAuC,SAAAI,yBAAAC,CAAA;EAAA,yBAAAC,OAAA;EAAA,IAAAC,CAAA,OAAAD,OAAA;IAAAE,CAAA,OAAAF,OAAA;EAAA,QAAAF,wBAAA,YAAAA,CAAAC,CAAA;IAAA,OAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA;EAAA,GAAAF,CAAA;AAAA;AAAA,SAAAN,wBAAAM,CAAA,EAAAE,CAAA;EAAA,KAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA;EAAA,aAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA;IAAAK,OAAA,EAAAL;EAAA;EAAA,IAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA;EAAA,IAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA;EAAA,IAAAQ,CAAA;MAAAC,SAAA;IAAA;IAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA;EAAA,SAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,EAAAc,CAAA;IAAA,IAAAI,CAAA,GAAAR,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA;IAAAI,CAAA,KAAAA,CAAA,CAAAX,GAAA,IAAAW,CAAA,CAAAC,GAAA,IAAAR,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAI,CAAA,IAAAV,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA;EAAA;EAAA,OAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAgB,GAAA,CAAAnB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAAA;AAevC;AACM,MAAOY,WAAW;EAEDC,GAAA;EAA+BC,MAAA;EAA0BC,KAAA;EADrEC,IAAI,GAAG,aAAa;EAC7BC,YAAqBJ,GAAoB,EAAWC,MAAe,EAAWC,KAAiB;IAA1E,KAAAF,GAAG,GAAHA,GAAG;IAA4B,KAAAC,MAAM,GAANA,MAAM;IAAoB,KAAAC,KAAK,GAALA,KAAK;EAAe;;AAGpG;AAAAG,OAAA,CAAAN,WAAA,GAAAA,WAAA;AACM,MAAOO,UAAU;EAGVN,GAAA;EACAC,MAAA;EACAM,IAAA;EACAL,KAAA;EALFC,IAAI,GAAG,YAAY;EAC5BC,YACWJ,GAA4B,EAC5BC,MAAe,EACfM,IAA0B,EAC1BL,KAAiB;IAHjB,KAAAF,GAAG,GAAHA,GAAG;IACH,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAM,IAAI,GAAJA,IAAI;IACJ,KAAAL,KAAK,GAALA,KAAK;EACb;;AAGL;AAAAG,OAAA,CAAAC,UAAA,GAAAA,UAAA;AACM,MAAOE,KAAK;EAGLR,GAAA;EACAC,MAAA;EACAQ,MAAA;EAJFN,IAAI,GAAG,WAAW;EAC3BC,YACWJ,GAAkB,EAClBC,MAAe,EACfQ,MAAkD;IAFlD,KAAAT,GAAG,GAAHA,GAAG;IACH,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAQ,MAAM,GAANA,MAAM;EACd;;AAGL;AAAAJ,OAAA,CAAAG,KAAA,GAAAA,KAAA;AACM,MAAOE,KAAK;EAEKC,KAAA;EAAwBT,KAAA;EADpCC,IAAI,GAAG,OAAO;EACvBC,YAAqBO,KAAa,EAAWT,KAAwC;IAAhE,KAAAS,KAAK,GAALA,KAAK;IAAmB,KAAAT,KAAK,GAALA,KAAK;EAAsC;;AAG1F;AAAAG,OAAA,CAAAK,KAAA,GAAAA,KAAA;AACM,MAAOE,WAAW;EAGXZ,GAAA;EACAC,MAAA;EACAQ,MAAA;EAJFN,IAAI,GAAG,aAAa;EAC7BC,YACWJ,GAAoB,EACpBC,MAAe,EACfQ,MAAgD;IAFhD,KAAAT,GAAG,GAAHA,GAAG;IACH,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAQ,MAAM,GAANA,MAAM;EACd;;AAGL;AAAAJ,OAAA,CAAAO,WAAA,GAAAA,WAAA;AACM,MAAOC,GAAG;EAEOC,GAAA;EAA2BZ,KAAA;EADvCC,IAAI,GAAG,KAAK;EACrBC,YAAqBU,GAAgB,EAAWZ,KAAwC;IAAnE,KAAAY,GAAG,GAAHA,GAAG;IAAwB,KAAAZ,KAAK,GAALA,KAAK;EAAsC;;AAG7F;AAAAG,OAAA,CAAAQ,GAAA,GAAAA,GAAA;AACM,MAAOE,UAAU;EAEAf,GAAA;EADZG,IAAI,GAAG,YAAY;EAC5BC,YAAqBJ,GAAY;IAAZ,KAAAA,GAAG,GAAHA,GAAG;EAAY;;AAGtC;AAAAK,OAAA,CAAAU,UAAA,GAAAA,UAAA;AACM,MAAOC,cAAc;EAGdhB,GAAA;EACAC,MAAA;EACAM,IAAA;EACAL,KAAA;EALFC,IAAI,GAAG,gBAAgB;EAChCC,YACWJ,GAAuB,EACvBC,MAAe,EACfM,IAA2C,EAC3CL,KAAiB;IAHjB,KAAAF,GAAG,GAAHA,GAAG;IACH,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAM,IAAI,GAAJA,IAAI;IACJ,KAAAL,KAAK,GAALA,KAAK;EACb;;AAGL;AAAAG,OAAA,CAAAW,cAAA,GAAAA,cAAA;AACM,MAAOC,IAAI;EAGMjB,GAAA;EAAuBC,MAAA;EAFnCE,IAAI,GAAG,MAAM;EACbe,OAAO;EAChBd,YAAqBJ,GAAY,EAAWC,MAAe,EAAEiB,OAAgB;IAAxD,KAAAlB,GAAG,GAAHA,GAAG;IAAoB,KAAAC,MAAM,GAANA,MAAM;IAChD,IAAI,CAACiB,OAAO,GAAGzC,MAAM,CAAC0C,YAAY,CAACD,OAAO,CAAC;EAC7C;;AAGF;AAAAb,OAAA,CAAAY,IAAA,GAAAA,IAAA;AACM,MAAOG,SAAS;EAGCpB,GAAA;EAAuBC,MAAA;EAFnCE,IAAI,GAAG,WAAW;EAClBe,OAAO;EAChBd,YAAqBJ,GAAY,EAAWC,MAAe,EAAEiB,OAAgB;IAAxD,KAAAlB,GAAG,GAAHA,GAAG;IAAoB,KAAAC,MAAM,GAANA,MAAM;IAChD,IAAI,CAACiB,OAAO,GAAGzC,MAAM,CAAC0C,YAAY,CAACD,OAAO,CAAC;EAC7C;;AAGF;AAAAb,OAAA,CAAAe,SAAA,GAAAA,SAAA;AACM,MAAOC,OAAO;EACTlB,IAAI,GAAG,SAAS;;AAG3B;AAAAE,OAAA,CAAAgB,OAAA,GAAAA,OAAA;AACO,MAAMC,OAAO,GAAAjB,OAAA,CAAAiB,OAAA,gBAAY,IAAID,OAAO,EAAE;AAE7C;AACM,MAAOE,MAAM;EAEIvB,GAAA;EAAuBE,KAAA;EADnCC,IAAI,GAAG,QAAQ;EACxBC,YAAqBJ,GAAY,EAAWE,KAAiB;IAAxC,KAAAF,GAAG,GAAHA,GAAG;IAAoB,KAAAE,KAAK,GAALA,KAAK;EAAe;;AAGlE;AAAAG,OAAA,CAAAkB,MAAA,GAAAA,MAAA;AACM,MAAOC,KAAK;EAGLxB,GAAA;EACAC,MAAA;EACAQ,MAAA;EAJFN,IAAI,GAAG,OAAO;EACvBC,YACWJ,GAAc,EACdC,MAAe,EACfQ,MAAwE;IAFxE,KAAAT,GAAG,GAAHA,GAAG;IACH,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAQ,MAAM,GAANA,MAAM;EACd;;AAGL;AAAAJ,OAAA,CAAAmB,KAAA,GAAAA,KAAA;AACO,MAAMC,OAAO,GAAApB,OAAA,CAAAoB,OAAA,gBAQhB,IAAAjD,SAAA,CAAAkD,IAAI,EAAC,CAAC,EAAE,CACVC,IAA4B,EAC5BC,CAAqC,KACD;EACpC,MAAMC,CAAC,GAAQF,IAAI;EACnB,IAAIE,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;IACxB,OAAOA,CAAC;EACV;EACA,IAAIA,CAAC,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;IACzB,OAAOD,CAAC,CAACC,CAAC,CAACC,KAAK,CAAC;EACnB;EACA,OAAO1D,MAAM,CAACqD,OAAO,CAACE,IAAI,EAAEC,CAAC,CAAC;AAChC,CAAC,CAAC;AAEF;AACO,MAAMG,GAAG,GAAA1B,OAAA,CAAA0B,GAAA,gBAGZ,IAAAvD,SAAA,CAAAkD,IAAI,EAAC,CAAC,EAAE,CAAaC,IAA4B,EAAEC,CAAc,KAA4B;EAC/F,MAAMC,CAAC,GAAQF,IAAI;EACnB,IAAIE,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;IACxB,OAAOA,CAAC;EACV;EACA,IAAIA,CAAC,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;IACzB,OAAOtD,MAAM,CAACuD,KAAK,CAACF,CAAC,CAACC,CAAC,CAACC,KAAK,CAAC,CAAC;EACjC;EACA,OAAO1D,MAAM,CAAC2D,GAAG,CAACJ,IAAI,EAAEC,CAAC,CAAC;AAC5B,CAAC,CAAC;AAEF;AACO,MAAMI,QAAQ,GAAA3B,OAAA,CAAA2B,QAAA,gBAGjB,IAAAxD,SAAA,CAAAkD,IAAI,EAAC,CAAC,EAAE,CAAcC,IAA4B,EAAEC,CAAe,KAA6B;EAClG,MAAMC,CAAC,GAAQF,IAAI;EACnB,IAAIE,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;IACxB,OAAOtD,MAAM,CAAC0D,IAAI,CAACL,CAAC,CAACC,CAAC,CAACI,IAAI,CAAC,CAAC;EAC/B;EACA,IAAIJ,CAAC,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;IACzB,OAAOA,CAAC;EACV;EACA,OAAOzD,MAAM,CAAC4D,QAAQ,CAACL,IAAI,EAAEC,CAAC,CAAC;AACjC,CAAC,CAAC;AAEF;AACO,MAAMM,iBAAiB,GAC5BP,IAA4B,IACO;EACnC,MAAME,CAAC,GAAQF,IAAI;EACnB,IAAIE,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,IAAIA,CAAC,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;IACjD,OAAOA,CAAC;EACV;AACF,CAAC;AAAAxB,OAAA,CAAA6B,iBAAA,GAAAA,iBAAA"}
\ No newline at end of file
diff --git a/dist/cjs/internal/schema.js b/dist/cjs/internal/schema.js
index 579c97ae033cf6758449cd03a81f177718212cbf..896b819053374cf7e44478b69bd54de5fa32db17 100644
--- a/dist/cjs/internal/schema.js
+++ b/dist/cjs/internal/schema.js
@@ -3,18 +3,85 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.variance = exports.make = exports.TypeId = void 0;
+exports.variance = exports.toASTAnnotations = exports.make = exports.annotations = exports.TypeId = exports.Schema = exports.PropertySignatureTypeId = void 0;
 var _Pipeable = /*#__PURE__*/require("effect/Pipeable");
-/**
- * @since 1.0.0
- */
-
+var AST = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("../AST.js"));
+var _hooks = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./hooks.js"));
+function _getRequireWildcardCache(e) {
+  if ("function" != typeof WeakMap) return null;
+  var r = new WeakMap(),
+    t = new WeakMap();
+  return (_getRequireWildcardCache = function (e) {
+    return e ? t : r;
+  })(e);
+}
+function _interopRequireWildcard(e, r) {
+  if (!r && e && e.__esModule) return e;
+  if (null === e || "object" != typeof e && "function" != typeof e) return {
+    default: e
+  };
+  var t = _getRequireWildcardCache(r);
+  if (t && t.has(e)) return t.get(e);
+  var n = {
+      __proto__: null
+    },
+    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
+  for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
+    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
+    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
+  }
+  return n.default = e, t && t.set(e, n), n;
+}
 /** @internal */
 const TypeId = exports.TypeId = /*#__PURE__*/Symbol.for("@effect/schema/Schema");
 /** @internal */
-const make = ast => new SchemaImpl(ast);
+const PropertySignatureTypeId = exports.PropertySignatureTypeId = /*#__PURE__*/Symbol.for("@effect/schema/PropertySignature");
+/** @internal */
+const make = ast => new Schema(ast);
 /** @internal */
 exports.make = make;
+const toASTAnnotations = annotations => {
+  if (!annotations) {
+    return {};
+  }
+  const out = {};
+  // symbols are reserved for custom annotations
+  const custom = Object.getOwnPropertySymbols(annotations);
+  for (const sym of custom) {
+    out[sym] = annotations[sym];
+  }
+  // string keys are reserved as /schema namespace
+  if (annotations.typeId !== undefined) {
+    const typeId = annotations.typeId;
+    if (typeof typeId === "object") {
+      out[AST.TypeAnnotationId] = typeId.id;
+      out[typeId.id] = typeId.annotation;
+    } else {
+      out[AST.TypeAnnotationId] = typeId;
+    }
+  }
+  const move = (from, to) => {
+    if (annotations[from] !== undefined) {
+      out[to] = annotations[from];
+    }
+  };
+  move("message", AST.MessageAnnotationId);
+  move("identifier", AST.IdentifierAnnotationId);
+  move("title", AST.TitleAnnotationId);
+  move("description", AST.DescriptionAnnotationId);
+  move("examples", AST.ExamplesAnnotationId);
+  move("default", AST.DefaultAnnotationId);
+  move("documentation", AST.DocumentationAnnotationId);
+  move("jsonSchema", AST.JSONSchemaAnnotationId);
+  move("arbitrary", _hooks.ArbitraryHookId);
+  move("pretty", _hooks.PrettyHookId);
+  move("equivalence", _hooks.EquivalenceHookId);
+  move("concurrency", AST.ConcurrencyAnnotationId);
+  move("batching", AST.BatchingAnnotationId);
+  return out;
+};
+/** @internal */
+exports.toASTAnnotations = toASTAnnotations;
 const variance = exports.variance = {
   /* c8 ignore next */
   _A: _ => _,
@@ -23,7 +90,11 @@ const variance = exports.variance = {
   /* c8 ignore next */
   _R: _ => _
 };
-class SchemaImpl {
+/** @internal */
+const annotations = (ast, annotations) => AST.annotations(ast, toASTAnnotations(annotations));
+/** @internal */
+exports.annotations = annotations;
+class Schema {
   ast;
   [TypeId] = variance;
   constructor(ast) {
@@ -32,5 +103,12 @@ class SchemaImpl {
   pipe() {
     return (0, _Pipeable.pipeArguments)(this, arguments);
   }
+  annotations(a) {
+    return new Schema(annotations(this.ast, a));
+  }
+  toString() {
+    return String(this.ast);
+  }
 }
+exports.Schema = Schema;
 //# sourceMappingURL=schema.js.map
\ No newline at end of file
diff --git a/dist/cjs/internal/schema.js.map b/dist/cjs/internal/schema.js.map
index 76af8208ca13a9c6cb83dfa67b03c14fe7fe729b..c4633cd9a4a09186d24acea3c7e59730cf7cf746 100644
--- a/dist/cjs/internal/schema.js.map
+++ b/dist/cjs/internal/schema.js.map
@@ -1 +1 @@
-{"version":3,"file":"schema.js","names":["_Pipeable","require","TypeId","exports","Symbol","for","make","ast","SchemaImpl","variance","_A","_","_I","_R","constructor","pipe","pipeArguments","arguments"],"sources":["../../../src/internal/schema.ts"],"sourcesContent":[null],"mappings":";;;;;;AAIA,IAAAA,SAAA,gBAAAC,OAAA;AAJA;;;;AAQA;AACO,MAAMC,MAAM,GAAAC,OAAA,CAAAD,MAAA,gBAAkBE,MAAM,CAACC,GAAG,CAAC,uBAAuB,CAAkB;AAEzF;AACO,MAAMC,IAAI,GAAaC,GAAY,IAA6B,IAAIC,UAAU,CAACD,GAAG,CAAC;AAE1F;AAAAJ,OAAA,CAAAG,IAAA,GAAAA,IAAA;AACO,MAAMG,QAAQ,GAAAN,OAAA,CAAAM,QAAA,GAAG;EACtB;EACAC,EAAE,EAAGC,CAAM,IAAKA,CAAC;EACjB;EACAC,EAAE,EAAGD,CAAM,IAAKA,CAAC;EACjB;EACAE,EAAE,EAAGF,CAAQ,IAAKA;CACnB;AAED,MAAMH,UAAU;EAEOD,GAAA;EADZ,CAACL,MAAM,IAAIO,QAAQ;EAC5BK,YAAqBP,GAAY;IAAZ,KAAAA,GAAG,GAAHA,GAAG;EAAY;EACpCQ,IAAIA,CAAA;IACF,OAAO,IAAAf,SAAA,CAAAgB,aAAa,EAAC,IAAI,EAAEC,SAAS,CAAC;EACvC"}
\ No newline at end of file
+{"version":3,"file":"schema.js","names":["_Pipeable","require","AST","_interopRequireWildcard","_hooks","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","TypeId","exports","Symbol","for","PropertySignatureTypeId","make","ast","Schema","toASTAnnotations","annotations","out","custom","getOwnPropertySymbols","sym","typeId","undefined","TypeAnnotationId","id","annotation","move","from","to","MessageAnnotationId","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","DocumentationAnnotationId","JSONSchemaAnnotationId","ArbitraryHookId","PrettyHookId","EquivalenceHookId","ConcurrencyAnnotationId","BatchingAnnotationId","variance","_A","_","_I","_R","constructor","pipe","pipeArguments","arguments","toString","String"],"sources":["../../../src/internal/schema.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/cjs/internal/util.js b/dist/cjs/internal/util.js
new file mode 100644
index 0000000000000000000000000000000000000000..d347fd4bcc7a20e003023daee18f4f28210395c1
--- /dev/null
+++ b/dist/cjs/internal/util.js
@@ -0,0 +1,86 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.ownKeys = exports.memoizeThunk = exports.getKeysForIndexSignature = exports.formatUnknown = void 0;
+var Predicate = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Predicate"));
+function _getRequireWildcardCache(e) {
+  if ("function" != typeof WeakMap) return null;
+  var r = new WeakMap(),
+    t = new WeakMap();
+  return (_getRequireWildcardCache = function (e) {
+    return e ? t : r;
+  })(e);
+}
+function _interopRequireWildcard(e, r) {
+  if (!r && e && e.__esModule) return e;
+  if (null === e || "object" != typeof e && "function" != typeof e) return {
+    default: e
+  };
+  var t = _getRequireWildcardCache(r);
+  if (t && t.has(e)) return t.get(e);
+  var n = {
+      __proto__: null
+    },
+    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
+  for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
+    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
+    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
+  }
+  return n.default = e, t && t.set(e, n), n;
+}
+/** @internal */
+const getKeysForIndexSignature = (input, parameter) => {
+  switch (parameter._tag) {
+    case "StringKeyword":
+    case "TemplateLiteral":
+      return Object.keys(input);
+    case "SymbolKeyword":
+      return Object.getOwnPropertySymbols(input);
+    case "Refinement":
+      return getKeysForIndexSignature(input, parameter.from);
+  }
+};
+/** @internal */
+exports.getKeysForIndexSignature = getKeysForIndexSignature;
+const ownKeys = o => Object.keys(o).concat(Object.getOwnPropertySymbols(o));
+/** @internal */
+exports.ownKeys = ownKeys;
+const memoizeThunk = f => {
+  let done = false;
+  let a;
+  return () => {
+    if (done) {
+      return a;
+    }
+    a = f();
+    done = true;
+    return a;
+  };
+};
+/** @internal */
+exports.memoizeThunk = memoizeThunk;
+const formatUnknown = u => {
+  if (Predicate.isString(u)) {
+    return JSON.stringify(u);
+  } else if (Predicate.isNumber(u) || u == null || Predicate.isBoolean(u) || Predicate.isSymbol(u) || Predicate.isDate(u)) {
+    return String(u);
+  } else if (Predicate.isBigInt(u)) {
+    return String(u) + "n";
+  } else if (!Array.isArray(u) && Predicate.hasProperty(u, "toString") && Predicate.isFunction(u["toString"]) && u["toString"] !== Object.prototype.toString) {
+    return u["toString"]();
+  }
+  try {
+    JSON.stringify(u);
+    if (Array.isArray(u)) {
+      return `[${u.map(formatUnknown).join(",")}]`;
+    } else {
+      return `{${ownKeys(u).map(k => `${Predicate.isString(k) ? JSON.stringify(k) : String(k)}:${formatUnknown(u[k])}`).join(",")}}`;
+    }
+  } catch (e) {
+    return String(u);
+  }
+};
+exports.formatUnknown = formatUnknown;
+//# sourceMappingURL=util.js.map
\ No newline at end of file
diff --git a/dist/cjs/internal/util.js.map b/dist/cjs/internal/util.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..1c77219294c12307d3775ba21616db0e5076a163
--- /dev/null
+++ b/dist/cjs/internal/util.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"util.js","names":["Predicate","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","getKeysForIndexSignature","input","parameter","_tag","keys","getOwnPropertySymbols","from","exports","ownKeys","o","concat","memoizeThunk","f","done","formatUnknown","isString","JSON","stringify","isNumber","isBoolean","isSymbol","isDate","String","isBigInt","Array","isArray","hasProperty","isFunction","toString","map","join","k"],"sources":["../../../src/internal/util.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/dts/AST.d.ts b/dist/dts/AST.d.ts
index 979987567bb6c89e6eb8ae86962e884a59b82822..2670537037264f65d51a7892ba8357f1c17bf5a8 100644
--- a/dist/dts/AST.d.ts
+++ b/dist/dts/AST.d.ts
@@ -6,11 +6,16 @@ import * as Option from "effect/Option";
 import * as ReadonlyArray from "effect/ReadonlyArray";
 import type { Concurrency } from "effect/Types";
 import type { ParseIssue } from "./ParseResult.js";
+/**
+ * @category model
+ * @since 1.0.0
+ */
+export type AST = Declaration | Literal | UniqueSymbol | UndefinedKeyword | VoidKeyword | NeverKeyword | UnknownKeyword | AnyKeyword | StringKeyword | NumberKeyword | BooleanKeyword | BigIntKeyword | SymbolKeyword | ObjectKeyword | Enums | TemplateLiteral | Refinement | TupleType | TypeLiteral | Union | Suspend | Transformation;
 /**
  * @category annotations
  * @since 1.0.0
  */
-export type BrandAnnotation = ReadonlyArray<string>;
+export type BrandAnnotation = ReadonlyArray.NonEmptyReadonlyArray<string | symbol>;
 /**
  * @category annotations
  * @since 1.0.0
@@ -30,7 +35,7 @@ export declare const TypeAnnotationId: unique symbol;
  * @category annotations
  * @since 1.0.0
  */
-export type MessageAnnotation = (issue: ParseIssue) => string;
+export type MessageAnnotation = (issue: ParseIssue) => string | Effect<string>;
 /**
  * @category annotations
  * @since 1.0.0
@@ -70,7 +75,7 @@ export declare const DescriptionAnnotationId: unique symbol;
  * @category annotations
  * @since 1.0.0
  */
-export type ExamplesAnnotation = ReadonlyArray<unknown>;
+export type ExamplesAnnotation<A> = ReadonlyArray.NonEmptyReadonlyArray<A>;
 /**
  * @category annotations
  * @since 1.0.0
@@ -80,7 +85,7 @@ export declare const ExamplesAnnotationId: unique symbol;
  * @category annotations
  * @since 1.0.0
  */
-export type DefaultAnnotation = unknown;
+export type DefaultAnnotation<A> = A;
 /**
  * @category annotations
  * @since 1.0.0
@@ -148,6 +153,11 @@ export declare const getAnnotation: {
     <A>(key: symbol): (annotated: Annotated) => Option.Option<A>;
     <A>(annotated: Annotated, key: symbol): Option.Option<A>;
 };
+/**
+ * @category annotations
+ * @since 1.0.0
+ */
+export declare const getBrandAnnotation: (annotated: Annotated) => Option.Option<readonly [string | symbol, ...(string | symbol)[]]>;
 /**
  * @category annotations
  * @since 1.0.0
@@ -172,7 +182,7 @@ export declare const getDescriptionAnnotation: (annotated: Annotated) => Option.
  * @category annotations
  * @since 1.0.0
  */
-export declare const getExamplesAnnotation: (annotated: Annotated) => Option.Option<ExamplesAnnotation>;
+export declare const getExamplesAnnotation: (annotated: Annotated) => Option.Option<readonly [unknown, ...unknown[]]>;
 /**
  * @category annotations
  * @since 1.0.0
@@ -202,22 +212,25 @@ export declare const getBatchingAnnotation: (annotated: Annotated) => Option.Opt
  * @category model
  * @since 1.0.0
  */
-export type AST = Declaration | Literal | UniqueSymbol | UndefinedKeyword | VoidKeyword | NeverKeyword | UnknownKeyword | AnyKeyword | StringKeyword | NumberKeyword | BooleanKeyword | BigIntKeyword | SymbolKeyword | ObjectKeyword | Enums | TemplateLiteral | Refinement<AST> | Tuple | TypeLiteral | Union | Suspend | Transform;
-/**
- * @category model
- * @since 1.0.0
- */
-export interface Declaration extends Annotated {
-    readonly _tag: "Declaration";
+export declare class Declaration implements Annotated {
     readonly typeParameters: ReadonlyArray<AST>;
     readonly decodeUnknown: (...typeParameters: ReadonlyArray<AST>) => (input: unknown, options: ParseOptions, self: Declaration) => Effect<any, ParseIssue, any>;
     readonly encodeUnknown: (...typeParameters: ReadonlyArray<AST>) => (input: unknown, options: ParseOptions, self: Declaration) => Effect<any, ParseIssue, any>;
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "Declaration";
+    constructor(typeParameters: ReadonlyArray<AST>, decodeUnknown: (...typeParameters: ReadonlyArray<AST>) => (input: unknown, options: ParseOptions, self: Declaration) => Effect<any, ParseIssue, any>, encodeUnknown: (...typeParameters: ReadonlyArray<AST>) => (input: unknown, options: ParseOptions, self: Declaration) => Effect<any, ParseIssue, any>, annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const createDeclaration: (typeParameters: ReadonlyArray<AST>, decodeUnknown: Declaration["decodeUnknown"], encodeUnknown: Declaration["encodeUnknown"], annotations?: Annotations) => Declaration;
 /**
  * @category guards
  * @since 1.0.0
@@ -232,15 +245,23 @@ export type LiteralValue = string | number | boolean | null | bigint;
  * @category model
  * @since 1.0.0
  */
-export interface Literal extends Annotated {
-    readonly _tag: "Literal";
+export declare class Literal implements Annotated {
     readonly literal: LiteralValue;
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "Literal";
+    constructor(literal: LiteralValue, annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const createLiteral: (literal: LiteralValue, annotations?: Annotations) => Literal;
 /**
  * @category guards
  * @since 1.0.0
@@ -250,15 +271,23 @@ export declare const isLiteral: (ast: AST) => ast is Literal;
  * @category model
  * @since 1.0.0
  */
-export interface UniqueSymbol extends Annotated {
-    readonly _tag: "UniqueSymbol";
+export declare class UniqueSymbol implements Annotated {
     readonly symbol: symbol;
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "UniqueSymbol";
+    constructor(symbol: symbol, annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const createUniqueSymbol: (symbol: symbol, annotations?: Annotations) => UniqueSymbol;
 /**
  * @category guards
  * @since 1.0.0
@@ -268,8 +297,21 @@ export declare const isUniqueSymbol: (ast: AST) => ast is UniqueSymbol;
  * @category model
  * @since 1.0.0
  */
-export interface UndefinedKeyword extends Annotated {
-    readonly _tag: "UndefinedKeyword";
+export declare class UndefinedKeyword implements Annotated {
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "UndefinedKeyword";
+    constructor(annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
 /**
  * @category constructors
@@ -285,8 +327,21 @@ export declare const isUndefinedKeyword: (ast: AST) => ast is UndefinedKeyword;
  * @category model
  * @since 1.0.0
  */
-export interface VoidKeyword extends Annotated {
-    readonly _tag: "VoidKeyword";
+export declare class VoidKeyword implements Annotated {
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "VoidKeyword";
+    constructor(annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
 /**
  * @category constructors
@@ -302,8 +357,21 @@ export declare const isVoidKeyword: (ast: AST) => ast is VoidKeyword;
  * @category model
  * @since 1.0.0
  */
-export interface NeverKeyword extends Annotated {
-    readonly _tag: "NeverKeyword";
+export declare class NeverKeyword implements Annotated {
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "NeverKeyword";
+    constructor(annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
 /**
  * @category constructors
@@ -319,8 +387,21 @@ export declare const isNeverKeyword: (ast: AST) => ast is NeverKeyword;
  * @category model
  * @since 1.0.0
  */
-export interface UnknownKeyword extends Annotated {
-    readonly _tag: "UnknownKeyword";
+export declare class UnknownKeyword implements Annotated {
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "UnknownKeyword";
+    constructor(annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
 /**
  * @category constructors
@@ -336,8 +417,21 @@ export declare const isUnknownKeyword: (ast: AST) => ast is UnknownKeyword;
  * @category model
  * @since 1.0.0
  */
-export interface AnyKeyword extends Annotated {
-    readonly _tag: "AnyKeyword";
+export declare class AnyKeyword implements Annotated {
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "AnyKeyword";
+    constructor(annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
 /**
  * @category constructors
@@ -353,8 +447,21 @@ export declare const isAnyKeyword: (ast: AST) => ast is AnyKeyword;
  * @category model
  * @since 1.0.0
  */
-export interface StringKeyword extends Annotated {
-    readonly _tag: "StringKeyword";
+export declare class StringKeyword implements Annotated {
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "StringKeyword";
+    constructor(annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
 /**
  * @category constructors
@@ -370,8 +477,21 @@ export declare const isStringKeyword: (ast: AST) => ast is StringKeyword;
  * @category model
  * @since 1.0.0
  */
-export interface NumberKeyword extends Annotated {
-    readonly _tag: "NumberKeyword";
+export declare class NumberKeyword implements Annotated {
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "NumberKeyword";
+    constructor(annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
 /**
  * @category constructors
@@ -387,8 +507,21 @@ export declare const isNumberKeyword: (ast: AST) => ast is NumberKeyword;
  * @category model
  * @since 1.0.0
  */
-export interface BooleanKeyword extends Annotated {
-    readonly _tag: "BooleanKeyword";
+export declare class BooleanKeyword implements Annotated {
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "BooleanKeyword";
+    constructor(annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
 /**
  * @category constructors
@@ -404,8 +537,21 @@ export declare const isBooleanKeyword: (ast: AST) => ast is BooleanKeyword;
  * @category model
  * @since 1.0.0
  */
-export interface BigIntKeyword extends Annotated {
-    readonly _tag: "BigIntKeyword";
+export declare class BigIntKeyword implements Annotated {
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "BigIntKeyword";
+    constructor(annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
 /**
  * @category constructors
@@ -421,8 +567,21 @@ export declare const isBigIntKeyword: (ast: AST) => ast is BigIntKeyword;
  * @category model
  * @since 1.0.0
  */
-export interface SymbolKeyword extends Annotated {
-    readonly _tag: "SymbolKeyword";
+export declare class SymbolKeyword implements Annotated {
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "SymbolKeyword";
+    constructor(annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
 /**
  * @category constructors
@@ -438,8 +597,21 @@ export declare const isSymbolKeyword: (ast: AST) => ast is SymbolKeyword;
  * @category model
  * @since 1.0.0
  */
-export interface ObjectKeyword extends Annotated {
-    readonly _tag: "ObjectKeyword";
+export declare class ObjectKeyword implements Annotated {
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "ObjectKeyword";
+    constructor(annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
 /**
  * @category constructors
@@ -455,90 +627,130 @@ export declare const isObjectKeyword: (ast: AST) => ast is ObjectKeyword;
  * @category model
  * @since 1.0.0
  */
-export interface Enums extends Annotated {
-    readonly _tag: "Enums";
+export declare class Enums implements Annotated {
     readonly enums: ReadonlyArray<readonly [string, string | number]>;
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "Enums";
+    constructor(enums: ReadonlyArray<readonly [string, string | number]>, annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const createEnums: (enums: ReadonlyArray<readonly [string, string | number]>, annotations?: Annotations) => Enums;
 /**
  * @category guards
  * @since 1.0.0
  */
 export declare const isEnums: (ast: AST) => ast is Enums;
 /**
+ * @category model
  * @since 1.0.0
  */
-export interface TemplateLiteralSpan {
+export declare class TemplateLiteralSpan {
     readonly type: StringKeyword | NumberKeyword;
     readonly literal: string;
+    constructor(type: StringKeyword | NumberKeyword, literal: string);
+    /**
+     * @since 1.0.0
+     */
+    toString(): "${string}" | "${number}";
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
 /**
  * @category model
  * @since 1.0.0
  */
-export interface TemplateLiteral extends Annotated {
-    readonly _tag: "TemplateLiteral";
+export declare class TemplateLiteral implements Annotated {
     readonly head: string;
     readonly spans: ReadonlyArray.NonEmptyReadonlyArray<TemplateLiteralSpan>;
+    readonly annotations: Annotations;
+    static make: (head: string, spans: ReadonlyArray<TemplateLiteralSpan>, annotations?: Annotations) => TemplateLiteral | Literal;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "TemplateLiteral";
+    private constructor();
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const createTemplateLiteral: (head: string, spans: ReadonlyArray<TemplateLiteralSpan>, annotations?: Annotations) => TemplateLiteral | Literal;
 /**
  * @category guards
  * @since 1.0.0
  */
 export declare const isTemplateLiteral: (ast: AST) => ast is TemplateLiteral;
 /**
+ * @category model
  * @since 1.0.0
  */
-export interface Element {
+export declare class Element {
     readonly type: AST;
     readonly isOptional: boolean;
+    constructor(type: AST, isOptional: boolean);
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
-/**
- * @since 1.0.0
- */
-export declare const createElement: (type: AST, isOptional: boolean) => Element;
 /**
  * @category model
  * @since 1.0.0
  */
-export interface Tuple extends Annotated {
-    readonly _tag: "Tuple";
+export declare class TupleType implements Annotated {
     readonly elements: ReadonlyArray<Element>;
-    readonly rest: Option.Option<ReadonlyArray.NonEmptyReadonlyArray<AST>>;
+    readonly rest: ReadonlyArray<AST>;
     readonly isReadonly: boolean;
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "TupleType";
+    constructor(elements: ReadonlyArray<Element>, rest: ReadonlyArray<AST>, isReadonly: boolean, annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const createTuple: (elements: ReadonlyArray<Element>, rest: Option.Option<ReadonlyArray.NonEmptyReadonlyArray<AST>>, isReadonly: boolean, annotations?: Annotations) => Tuple;
 /**
  * @category guards
  * @since 1.0.0
  */
-export declare const isTuple: (ast: AST) => ast is Tuple;
+export declare const isTupleType: (ast: AST) => ast is TupleType;
 /**
+ * @category model
  * @since 1.0.0
  */
-export interface PropertySignature extends Annotated {
+export declare class PropertySignature implements Annotated {
     readonly name: PropertyKey;
     readonly type: AST;
     readonly isOptional: boolean;
     readonly isReadonly: boolean;
+    readonly annotations: Annotations;
+    constructor(name: PropertyKey, type: AST, isOptional: boolean, isReadonly: boolean, annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
-/**
- * @since 1.0.0
- */
-export declare const createPropertySignature: (name: PropertyKey, type: AST, isOptional: boolean, isReadonly: boolean, annotations?: Annotations) => PropertySignature;
 /**
  * @since 1.0.0
  */
@@ -548,31 +760,50 @@ export type Parameter = StringKeyword | SymbolKeyword | TemplateLiteral | Refine
  */
 export declare const isParameter: (ast: AST) => ast is Parameter;
 /**
+ * @category model
  * @since 1.0.0
  */
-export interface IndexSignature {
-    readonly parameter: Parameter;
+export declare class IndexSignature {
     readonly type: AST;
     readonly isReadonly: boolean;
+    /**
+     * @since 1.0.0
+     */
+    readonly parameter: Parameter;
+    constructor(parameter: AST, type: AST, isReadonly: boolean);
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
-/**
- * @since 1.0.0
- */
-export declare const createIndexSignature: (parameter: AST, type: AST, isReadonly: boolean) => IndexSignature;
 /**
  * @category model
  * @since 1.0.0
  */
-export interface TypeLiteral extends Annotated {
-    readonly _tag: "TypeLiteral";
+export declare class TypeLiteral implements Annotated {
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "TypeLiteral";
+    /**
+     * @since 1.0.0
+     */
     readonly propertySignatures: ReadonlyArray<PropertySignature>;
+    /**
+     * @since 1.0.0
+     */
     readonly indexSignatures: ReadonlyArray<IndexSignature>;
+    constructor(propertySignatures: ReadonlyArray<PropertySignature>, indexSignatures: ReadonlyArray<IndexSignature>, annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const createTypeLiteral: (propertySignatures: ReadonlyArray<PropertySignature>, indexSignatures: ReadonlyArray<IndexSignature>, annotations?: Annotations) => TypeLiteral;
 /**
  * @category guards
  * @since 1.0.0
@@ -586,15 +817,24 @@ export type Members<A> = readonly [A, A, ...Array<A>];
  * @category model
  * @since 1.0.0
  */
-export interface Union extends Annotated {
-    readonly _tag: "Union";
+export declare class Union implements Annotated {
     readonly types: Members<AST>;
+    readonly annotations: Annotations;
+    static make: (candidates: ReadonlyArray<AST>, annotations?: Annotations) => AST;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "Union";
+    private constructor();
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const createUnion: (candidates: ReadonlyArray<AST>, annotations?: Annotations) => AST;
 /**
  * @category guards
  * @since 1.0.0
@@ -604,15 +844,23 @@ export declare const isUnion: (ast: AST) => ast is Union;
  * @category model
  * @since 1.0.0
  */
-export interface Suspend extends Annotated {
-    readonly _tag: "Suspend";
+export declare class Suspend implements Annotated {
     readonly f: () => AST;
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "Suspend";
+    constructor(f: () => AST, annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const createSuspend: (f: () => AST, annotations?: Annotations) => Suspend;
 /**
  * @category guards
  * @since 1.0.0
@@ -622,16 +870,24 @@ export declare const isSuspend: (ast: AST) => ast is Suspend;
  * @category model
  * @since 1.0.0
  */
-export interface Refinement<From = AST> extends Annotated {
-    readonly _tag: "Refinement";
+export declare class Refinement<From extends AST = AST> implements Annotated {
     readonly from: From;
     readonly filter: (input: any, options: ParseOptions, self: Refinement) => Option.Option<ParseIssue>;
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "Refinement";
+    constructor(from: From, filter: (input: any, options: ParseOptions, self: Refinement) => Option.Option<ParseIssue>, annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
 }
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const createRefinement: <From extends AST>(from: From, filter: Refinement["filter"], annotations?: Annotations) => Refinement<From>;
 /**
  * @category guards
  * @since 1.0.0
@@ -648,55 +904,69 @@ export interface ParseOptions {
     readonly onExcessProperty?: "ignore" | "error" | "preserve" | undefined;
 }
 /**
- * @category model
  * @since 1.0.0
  */
-export interface Transform extends Annotated {
-    readonly _tag: "Transform";
-    readonly from: AST;
-    readonly to: AST;
-    readonly transformation: Transformation;
-}
+export declare const defaultParseOption: ParseOptions;
 /**
  * @category model
  * @since 1.0.0
  */
-export declare const createTransform: (from: AST, to: AST, transformation: Transformation, annotations?: Annotations) => Transform;
+export declare class Transformation implements Annotated {
+    readonly from: AST;
+    readonly to: AST;
+    readonly transformation: TransformationKind;
+    readonly annotations: Annotations;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "Transformation";
+    constructor(from: AST, to: AST, transformation: TransformationKind, annotations?: Annotations);
+    /**
+     * @since 1.0.0
+     */
+    toString(verbose?: boolean): string;
+    /**
+     * @since 1.0.0
+     */
+    toJSON(): object;
+}
 /**
  * @category guards
  * @since 1.0.0
  */
-export declare const isTransform: (ast: AST) => ast is Transform;
+export declare const isTransform: (ast: AST) => ast is Transformation;
 /**
  * @category model
  * @since 1.0.0
  */
-export type Transformation = FinalTransformation | ComposeTransformation | TypeLiteralTransformation;
+export type TransformationKind = FinalTransformation | ComposeTransformation | TypeLiteralTransformation;
 /**
  * @category model
  * @since 1.0.0
  */
-export interface FinalTransformation {
-    readonly _tag: "FinalTransformation";
-    readonly decode: (input: any, options: ParseOptions, self: Transform) => Effect<any, ParseIssue, any>;
-    readonly encode: (input: any, options: ParseOptions, self: Transform) => Effect<any, ParseIssue, any>;
+export declare class FinalTransformation {
+    readonly decode: (input: any, options: ParseOptions, self: Transformation) => Effect<any, ParseIssue, any>;
+    readonly encode: (input: any, options: ParseOptions, self: Transformation) => Effect<any, ParseIssue, any>;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "FinalTransformation";
+    constructor(decode: (input: any, options: ParseOptions, self: Transformation) => Effect<any, ParseIssue, any>, encode: (input: any, options: ParseOptions, self: Transformation) => Effect<any, ParseIssue, any>);
 }
 /**
- * @category constructors
- * @since 1.0.0
- */
-export declare const createFinalTransformation: (decode: FinalTransformation["decode"], encode: FinalTransformation["encode"]) => FinalTransformation;
-/**
- * @category guard
+ * @category guards
  * @since 1.0.0
  */
-export declare const isFinalTransformation: (ast: Transformation) => ast is FinalTransformation;
+export declare const isFinalTransformation: (ast: TransformationKind) => ast is FinalTransformation;
 /**
  * @category model
  * @since 1.0.0
  */
-export interface ComposeTransformation {
-    readonly _tag: "ComposeTransformation";
+export declare class ComposeTransformation {
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "ComposeTransformation";
 }
 /**
  * @category constructors
@@ -704,10 +974,10 @@ export interface ComposeTransformation {
  */
 export declare const composeTransformation: ComposeTransformation;
 /**
- * @category guard
+ * @category guards
  * @since 1.0.0
  */
-export declare const isComposeTransformation: (ast: Transformation) => ast is ComposeTransformation;
+export declare const isComposeTransformation: (ast: TransformationKind) => ast is ComposeTransformation;
 /**
  * Represents a `PropertySignature -> PropertySignature` transformation
  *
@@ -722,84 +992,36 @@ export declare const isComposeTransformation: (ast: Transformation) => ast is Co
  * @category model
  * @since 1.0.0
  */
-export interface FinalPropertySignatureTransformation {
-    readonly _tag: "FinalPropertySignatureTransformation";
-    readonly decode: (o: Option.Option<any>) => Option.Option<any>;
-    readonly encode: (o: Option.Option<any>) => Option.Option<any>;
-}
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const createFinalPropertySignatureTransformation: (decode: FinalPropertySignatureTransformation["decode"], encode: FinalPropertySignatureTransformation["encode"]) => FinalPropertySignatureTransformation;
-/**
- * @category guard
- * @since 1.0.0
- */
-export declare const isFinalPropertySignatureTransformation: (ast: PropertySignatureTransformation) => ast is FinalPropertySignatureTransformation;
-/**
- * @category model
- * @since 1.0.0
- */
-export type PropertySignatureTransformation = FinalPropertySignatureTransformation;
-/**
- * @category model
- * @since 1.0.0
- */
-export interface PropertySignatureTransform {
+export declare class PropertySignatureTransformation {
     readonly from: PropertyKey;
     readonly to: PropertyKey;
-    readonly propertySignatureTransformation: PropertySignatureTransformation;
+    readonly decode: (o: Option.Option<any>) => Option.Option<any>;
+    readonly encode: (o: Option.Option<any>) => Option.Option<any>;
+    constructor(from: PropertyKey, to: PropertyKey, decode: (o: Option.Option<any>) => Option.Option<any>, encode: (o: Option.Option<any>) => Option.Option<any>);
 }
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const createPropertySignatureTransform: (from: PropertyKey, to: PropertyKey, propertySignatureTransformation: PropertySignatureTransformation) => PropertySignatureTransform;
 /**
  * @category model
  * @since 1.0.0
  */
-export interface TypeLiteralTransformation {
-    readonly _tag: "TypeLiteralTransformation";
-    readonly propertySignatureTransformations: ReadonlyArray<PropertySignatureTransform>;
+export declare class TypeLiteralTransformation {
+    readonly propertySignatureTransformations: ReadonlyArray<PropertySignatureTransformation>;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "TypeLiteralTransformation";
+    constructor(propertySignatureTransformations: ReadonlyArray<PropertySignatureTransformation>);
 }
 /**
- * @category constructors
- * @since 1.0.0
- */
-export declare const createTypeLiteralTransformation: (propertySignatureTransformations: TypeLiteralTransformation["propertySignatureTransformations"]) => TypeLiteralTransformation;
-/**
- * @category guard
+ * @category guards
  * @since 1.0.0
  */
-export declare const isTypeLiteralTransformation: (ast: Transformation) => ast is TypeLiteralTransformation;
+export declare const isTypeLiteralTransformation: (ast: TransformationKind) => ast is TypeLiteralTransformation;
 /**
  * Adds a group of annotations, potentially overwriting existing annotations.
  *
  * @since 1.0.0
  */
-export declare const mergeAnnotations: (ast: AST, annotations: Annotations) => AST;
-/**
- * Adds an annotation, potentially overwriting the existing annotation with the specified id.
- *
- * @since 1.0.0
- */
-export declare const setAnnotation: (ast: AST, sym: symbol, value: unknown) => AST;
-/**
- * Adds a rest element to the end of a tuple, or throws an exception if the rest element is already present.
- *
- * @since 1.0.0
- */
-export declare const appendRestElement: (ast: Tuple, restElement: AST) => Tuple;
-/**
- * Appends an element to a tuple or throws an exception in the following cases:
- * - A required element cannot follow an optional element. ts(1257)
- * - An optional element cannot follow a rest element. ts(1266)
- *
- * @since 1.0.0
- */
-export declare const appendElement: (ast: Tuple, newElement: Element) => Tuple;
+export declare const annotations: (ast: AST, annotations: Annotations) => AST;
 /**
  * Equivalent at runtime to the TypeScript type-level `keyof` operator.
  *
@@ -810,12 +1032,6 @@ export declare const keyof: (ast: AST) => AST;
  * @since 1.0.0
  */
 export declare const getPropertySignatures: (ast: AST) => Array<PropertySignature>;
-/**
- * Create a record with the specified key type and value type.
- *
- * @since 1.0.0
- */
-export declare const createRecord: (key: AST, value: AST, isReadonly: boolean) => TypeLiteral;
 /**
  * Equivalent at runtime to the built-in TypeScript utility type `Pick`.
  *
@@ -869,18 +1085,13 @@ export declare const getCompiler: <A>(match: Match<A>) => Compiler<A>;
 /**
  * @since 1.0.0
  */
-export declare const to: (ast: AST) => AST;
+export declare const typeAST: (ast: AST) => AST;
 /**
  * @since 1.0.0
  */
-export declare const from: (ast: AST) => AST;
+export declare const encodedAST: (ast: AST) => AST;
 /**
  * @since 1.0.0
  */
 export declare const hash: (ast: AST) => number;
-/**
- * @category formatting
- * @since 1.0.0
- */
-export declare const format: (ast: AST, verbose?: boolean) => string;
 //# sourceMappingURL=AST.d.ts.map
\ No newline at end of file
diff --git a/dist/dts/AST.d.ts.map b/dist/dts/AST.d.ts.map
index ba76de22c4086aacb99e8a113fb6078248b7625e..5305cb74984b162f9f7c7abfc8ae24c5100588b0 100644
--- a/dist/dts/AST.d.ts.map
+++ b/dist/dts/AST.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"AST.d.ts","sourceRoot":"","sources":["../../src/AST.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"AST.d.ts","sourceRoot":"","sources":["../../src/AST.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/dts/Arbitrary.d.ts.map b/dist/dts/Arbitrary.d.ts.map
index f03a5842842a346aa8fb7ecf63e32a26911b53ce..e3179479c26dff43dc37a6c1646f9545e4b77474 100644
--- a/dist/dts/Arbitrary.d.ts.map
+++ b/dist/dts/Arbitrary.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"Arbitrary.d.ts","sourceRoot":"","sources":["../../src/Arbitrary.ts"],"names":[],"mappings":"AAAA;;GAEG;AAIH,OAAO,KAAK,aAAa,MAAM,sBAAsB,CAAA;AACrD,OAAO,KAAK,KAAK,SAAS,MAAM,YAAY,CAAA;AAO5C,OAAO,KAAK,KAAK,MAAM,MAAM,aAAa,CAAA;AAE1C;;;GAGG;AACH,MAAM,WAAW,SAAS,CAAC,CAAC;IAC1B,CAAC,EAAE,EAAE,OAAO,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;CAC/C;AAED;;;GAGG;AACH,eAAO,MAAM,eAAe,EAAE,OAAO,MAA8B,CAAA;AAEnE;;;GAGG;AACH,MAAM,MAAM,eAAe,GAAG,OAAO,eAAe,CAAA;AAEpD;;;GAGG;AACH,eAAO,MAAM,SAAS,yBACG,cAAc,UAAU,GAAG,CAAC,CAAC,oFAEwB,CAAA;AAE9E;;;;;GAKG;AACH,eAAO,MAAM,IAAI,2DAAgF,CAAA"}
\ No newline at end of file
+{"version":3,"file":"Arbitrary.d.ts","sourceRoot":"","sources":["../../src/Arbitrary.ts"],"names":[],"mappings":"AAAA;;GAEG;AAIH,OAAO,KAAK,aAAa,MAAM,sBAAsB,CAAA;AACrD,OAAO,KAAK,KAAK,SAAS,MAAM,YAAY,CAAA;AAM5C,OAAO,KAAK,KAAK,MAAM,MAAM,aAAa,CAAA;AAE1C;;;GAGG;AACH,MAAM,WAAW,SAAS,CAAC,CAAC;IAC1B,CAAC,EAAE,EAAE,OAAO,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;CAC/C;AAED;;;GAGG;AACH,eAAO,MAAM,eAAe,EAAE,OAAO,MAA+B,CAAA;AAEpE;;;GAGG;AACH,MAAM,MAAM,eAAe,GAAG,OAAO,eAAe,CAAA;AAEpD;;;GAGG;AACH,eAAO,MAAM,SAAS,yBACG,cAAc,UAAU,GAAG,CAAC,CAAC,oFAC4D,CAAA;AAElH;;;;;GAKG;AACH,eAAO,MAAM,IAAI,2DAAgF,CAAA"}
\ No newline at end of file
diff --git a/dist/dts/ArrayFormatter.d.ts b/dist/dts/ArrayFormatter.d.ts
index fd8e457e126a361c84fda75be9a75dd780701133..77a568ae941c88eab11031db8618e577633e079f 100644
--- a/dist/dts/ArrayFormatter.d.ts
+++ b/dist/dts/ArrayFormatter.d.ts
@@ -1,6 +1,7 @@
 /**
  * @since 1.0.0
  */
+import * as Effect from "effect/Effect";
 import type * as ParseResult from "./ParseResult.js";
 /**
  * @category model
@@ -15,12 +16,17 @@ export interface Issue {
  * @category formatting
  * @since 1.0.0
  */
-export declare const formatIssues: (issues: readonly [ParseResult.ParseIssue, ...ParseResult.ParseIssue[]]) => Array<Issue>;
+export declare const formatIssueEffect: (issue: ParseResult.ParseIssue) => Effect.Effect<Array<Issue>>;
 /**
  * @category formatting
  * @since 1.0.0
  */
-export declare const formatIssue: (error: ParseResult.ParseIssue) => Array<Issue>;
+export declare const formatIssue: (issue: ParseResult.ParseIssue) => Array<Issue>;
+/**
+ * @category formatting
+ * @since 1.0.0
+ */
+export declare const formatErrorEffect: (error: ParseResult.ParseError) => Effect.Effect<Array<Issue>>;
 /**
  * @category formatting
  * @since 1.0.0
diff --git a/dist/dts/ArrayFormatter.d.ts.map b/dist/dts/ArrayFormatter.d.ts.map
index 5d8bfa422449cd3e06b15a2a227ca9b96929f27b..ee921621336a96313aed9c808224c706f689be00 100644
--- a/dist/dts/ArrayFormatter.d.ts.map
+++ b/dist/dts/ArrayFormatter.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"ArrayFormatter.d.ts","sourceRoot":"","sources":["../../src/ArrayFormatter.ts"],"names":[],"mappings":"AAAA;;GAEG;AAKH,OAAO,KAAK,KAAK,WAAW,MAAM,kBAAkB,CAAA;AAGpD;;;GAGG;AACH,MAAM,WAAW,KAAK;IACpB,QAAQ,CAAC,IAAI,EAAE,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;IAC5G,QAAQ,CAAC,IAAI,EAAE,aAAa,CAAC,WAAW,CAAC,CAAA;IACzC,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAA;CACzB;AAiED;;;GAGG;AACH,eAAO,MAAM,YAAY,8EAA0E,MAAM,KAAK,CACjE,CAAA;AAE7C;;;GAGG;AACH,eAAO,MAAM,WAAW,UAAW,YAAY,UAAU,KAAG,MAAM,KAAK,CAA0B,CAAA;AAEjG;;;GAGG;AACH,eAAO,MAAM,WAAW,UAAW,YAAY,UAAU,KAAG,MAAM,KAAK,CAA6B,CAAA"}
\ No newline at end of file
+{"version":3,"file":"ArrayFormatter.d.ts","sourceRoot":"","sources":["../../src/ArrayFormatter.ts"],"names":[],"mappings":"AAAA;;GAEG;AAEH,OAAO,KAAK,MAAM,MAAM,eAAe,CAAA;AAEvC,OAAO,KAAK,KAAK,WAAW,MAAM,kBAAkB,CAAA;AAGpD;;;GAGG;AACH,MAAM,WAAW,KAAK;IACpB,QAAQ,CAAC,IAAI,EAAE,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;IAC5G,QAAQ,CAAC,IAAI,EAAE,aAAa,CAAC,WAAW,CAAC,CAAA;IACzC,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAA;CACzB;AAED;;;GAGG;AACH,eAAO,MAAM,iBAAiB,UAAW,YAAY,UAAU,KAAG,aAAa,CAAC,MAAM,KAAK,CAAC,CAAc,CAAA;AAE1G;;;GAGG;AACH,eAAO,MAAM,WAAW,UAAW,YAAY,UAAU,KAAG,MAAM,KAAK,CAA6C,CAAA;AAEpH;;;GAGG;AACH,eAAO,MAAM,iBAAiB,UAAW,YAAY,UAAU,KAAG,aAAa,CAAC,MAAM,KAAK,CAAC,CAC5D,CAAA;AAEhC;;;GAGG;AACH,eAAO,MAAM,WAAW,UAAW,YAAY,UAAU,KAAG,MAAM,KAAK,CAA6B,CAAA"}
\ No newline at end of file
diff --git a/dist/dts/Equivalence.d.ts.map b/dist/dts/Equivalence.d.ts.map
index 4365838ba4837aeb4dc70bdf04f65bd740e3ed15..6f8c0116da008965cd40875b51d8d410b6ff5885 100644
--- a/dist/dts/Equivalence.d.ts.map
+++ b/dist/dts/Equivalence.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"Equivalence.d.ts","sourceRoot":"","sources":["../../src/Equivalence.ts"],"names":[],"mappings":"AAAA;;GAEG;AAGH,OAAO,KAAK,WAAW,MAAM,oBAAoB,CAAA;AAGjD,OAAO,KAAK,aAAa,MAAM,sBAAsB,CAAA;AAMrD,OAAO,KAAK,KAAK,MAAM,MAAM,aAAa,CAAA;AAE1C;;;GAGG;AACH,eAAO,MAAM,iBAAiB,EAAE,OAAO,MAAgC,CAAA;AAEvE;;;GAGG;AACH,MAAM,MAAM,iBAAiB,GAAG,OAAO,iBAAiB,CAAA;AAExD;;;GAGG;AACH,eAAO,MAAM,WAAW,yBACC,cAAc,uBAAuB,CAAC,GAAG,CAAC,CAAC,kGAEY,CAAA;AAEhF;;;GAGG;AACH,eAAO,MAAM,IAAI,yEAA0F,CAAA"}
\ No newline at end of file
+{"version":3,"file":"Equivalence.d.ts","sourceRoot":"","sources":["../../src/Equivalence.ts"],"names":[],"mappings":"AAAA;;GAEG;AAGH,OAAO,KAAK,WAAW,MAAM,oBAAoB,CAAA;AAGjD,OAAO,KAAK,aAAa,MAAM,sBAAsB,CAAA;AAMrD,OAAO,KAAK,KAAK,MAAM,MAAM,aAAa,CAAA;AAE1C;;;GAGG;AACH,eAAO,MAAM,iBAAiB,EAAE,OAAO,MAAiC,CAAA;AAExE;;;GAGG;AACH,MAAM,MAAM,iBAAiB,GAAG,OAAO,iBAAiB,CAAA;AAExD;;;GAGG;AACH,eAAO,MAAM,WAAW,yBACC,cAAc,uBAAuB,CAAC,GAAG,CAAC,CAAC,kGACgD,CAAA;AAEpH;;;GAGG;AACH,eAAO,MAAM,IAAI,yEAA0F,CAAA"}
\ No newline at end of file
diff --git a/dist/dts/JSONSchema.d.ts.map b/dist/dts/JSONSchema.d.ts.map
index ea7de1072f312ef3fdd7a1bacadaeb7453abbcc1..1d819e5ee726609d646cc93c8900ccb343bd56aa 100644
--- a/dist/dts/JSONSchema.d.ts.map
+++ b/dist/dts/JSONSchema.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"JSONSchema.d.ts","sourceRoot":"","sources":["../../src/JSONSchema.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"JSONSchema.d.ts","sourceRoot":"","sources":["../../src/JSONSchema.ts"],"names":[],"mappings":"AAAA;;GAEG;AAKH,OAAO,KAAK,GAAG,MAAM,UAAU,CAAA;AAE/B,OAAO,KAAK,KAAK,MAAM,MAAM,aAAa,CAAA;AAE1C;;;GAGG;AACH,MAAM,WAAW,cAAc;IAC7B,GAAG,EAAE,cAAc,CAAA;CACpB;AAED;;;GAGG;AACH,MAAM,WAAW,kBAAkB;IACjC,GAAG,EAAE,kBAAkB,CAAA;CACxB;AAED;;;GAGG;AACH,MAAM,WAAW,iBAAiB;IAChC,GAAG,EAAE,iBAAiB,CAAA;IACtB,KAAK,EAAE;QACL;YAAE,IAAI,EAAE,QAAQ,CAAA;SAAE;QAClB;YAAE,IAAI,EAAE,OAAO,CAAA;SAAE;KAClB,CAAA;CACF;AAED;;;GAGG;AACH,MAAM,WAAW,gBAAgB;IAC/B,GAAG,EAAE,aAAa,CAAA;IAClB,KAAK,EAAE;QACL;YAAE,IAAI,EAAE,QAAQ,CAAA;SAAE;QAClB;YAAE,IAAI,EAAE,OAAO,CAAA;SAAE;KAClB,CAAA;CACF;AAED;;;GAGG;AACH,MAAM,WAAW,cAAc;IAC7B,IAAI,EAAE,MAAM,CAAA;CACb;AAED;;;GAGG;AACH,MAAM,WAAW,gBAAgB;IAC/B,KAAK,EAAE,GAAG,CAAC,YAAY,CAAA;CACxB;AAED;;;GAGG;AACH,MAAM,WAAW,iBAAiB;IAChC,IAAI,EAAE,QAAQ,CAAA;IACd,SAAS,CAAC,EAAE,MAAM,CAAA;IAClB,SAAS,CAAC,EAAE,MAAM,CAAA;IAClB,OAAO,CAAC,EAAE,MAAM,CAAA;IAChB,WAAW,CAAC,EAAE,MAAM,CAAA;CACrB;AAED;;;GAGG;AACH,MAAM,WAAW,kBAAkB;IACjC,OAAO,CAAC,EAAE,MAAM,CAAA;IAChB,gBAAgB,CAAC,EAAE,MAAM,CAAA;IACzB,OAAO,CAAC,EAAE,MAAM,CAAA;IAChB,gBAAgB,CAAC,EAAE,MAAM,CAAA;CAC1B;AAED;;;GAGG;AACH,MAAM,WAAW,iBAAkB,SAAQ,kBAAkB;IAC3D,IAAI,EAAE,QAAQ,CAAA;CACf;AAED;;;GAGG;AACH,MAAM,WAAW,kBAAmB,SAAQ,kBAAkB;IAC5D,IAAI,EAAE,SAAS,CAAA;CAChB;AAED;;;GAGG;AACH,MAAM,WAAW,kBAAkB;IACjC,IAAI,EAAE,SAAS,CAAA;CAChB;AAED;;;GAGG;AACH,MAAM,WAAW,gBAAgB;IAC/B,IAAI,EAAE,OAAO,CAAA;IACb,KAAK,CAAC,EAAE,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC,CAAA;IACxC,QAAQ,CAAC,EAAE,MAAM,CAAA;IACjB,QAAQ,CAAC,EAAE,MAAM,CAAA;IACjB,eAAe,CAAC,EAAE,WAAW,GAAG,OAAO,CAAA;CACxC;AAED;;;GAGG;AACH,MAAM,WAAW,gBAAgB;IAC/B,KAAK,EAAE,KAAK,CAAC,WAAW,CAAC,CAAA;CAC1B;AAED;;;GAGG;AACH,MAAM,WAAW,eAAe;IAC9B,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;CAC9B;AAED;;;GAGG;AACH,MAAM,WAAW,gBAAgB;IAC/B,QAAQ,EAAE,gBAAgB,CAAA;IAC1B,KAAK,EAAE,KAAK,CAAC;QACX,KAAK,EAAE,MAAM,CAAA;QACb,KAAK,EAAE,MAAM,GAAG,MAAM,CAAA;KACvB,CAAC,CAAA;CACH;AAED;;;GAGG;AACH,MAAM,WAAW,gBAAgB;IAC/B,KAAK,EAAE,KAAK,CAAC,WAAW,CAAC,CAAA;CAC1B;AAED;;;GAGG;AACH,MAAM,WAAW,iBAAiB;IAChC,IAAI,EAAE,QAAQ,CAAA;IACd,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,CAAA;IACvB,UAAU,EAAE,MAAM,CAAC,MAAM,EAAE,WAAW,CAAC,CAAA;IACvC,oBAAoB,CAAC,EAAE,OAAO,GAAG,WAAW,CAAA;IAC5C,iBAAiB,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,WAAW,CAAC,CAAA;CAChD;AAED;;;GAGG;AACH,MAAM,MAAM,WAAW,GACnB,cAAc,GACd,kBAAkB,GAClB,iBAAiB,GACjB,gBAAgB,GAChB,cAAc,GACd,gBAAgB,GAChB,iBAAiB,GACjB,iBAAiB,GACjB,kBAAkB,GAClB,kBAAkB,GAClB,gBAAgB,GAChB,gBAAgB,GAChB,eAAe,GACf,gBAAgB,GAChB,gBAAgB,GAChB,iBAAiB,CAAA;AAErB;;;GAGG;AACH,MAAM,MAAM,eAAe,GAAG,WAAW,GAAG;IAC1C,OAAO,CAAC,EAAE,MAAM,CAAA;IAChB,KAAK,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,WAAW,CAAC,CAAA;CACpC,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,IAAI,+CAA8C,eAAqC,CAAA"}
\ No newline at end of file
diff --git a/dist/dts/ParseResult.d.ts b/dist/dts/ParseResult.d.ts
index 99435b0583021ec4363b6180df1123136844269e..1948142c30e4655d922b1234349e264f2179917d 100644
--- a/dist/dts/ParseResult.d.ts
+++ b/dist/dts/ParseResult.d.ts
@@ -6,8 +6,9 @@ import * as Either from "effect/Either";
 import type { LazyArg } from "effect/Function";
 import * as Inspectable from "effect/Inspectable";
 import type * as Option from "effect/Option";
-import type * as ReadonlyArray from "effect/ReadonlyArray";
 import type * as AST from "./AST.js";
+import type * as _parseResult from "./internal/parseResult.js";
+type ParseIssue = _parseResult.ParseIssue;
 declare const ParseError_base: new <A extends Record<string, any> = {}>(args: import("effect/Types").Equals<A, {}> extends true ? void : { readonly [P in keyof A as P extends "_tag" ? never : P]: A[P]; }) => import("effect/Cause").YieldableError & {
     readonly _tag: "ParseError";
 } & Readonly<A>;
@@ -67,261 +68,135 @@ _try as try };
  * @since 1.0.0
  */
 export declare const fromOption: {
+    (onNone: () => ParseIssue): <A>(self: Option.Option<A>) => Either.Either<A, ParseIssue>;
     <A>(self: Option.Option<A>, onNone: () => ParseIssue): Either.Either<A, ParseIssue>;
-    <A>(onNone: () => ParseIssue): (self: Option.Option<A>) => Either.Either<A, ParseIssue>;
 };
+export { 
 /**
- * `ParseIssue` is a type that represents the different types of errors that can occur when decoding/encoding a value.
+ * Error that occurs when a declaration has an error.
  *
  * @category model
  * @since 1.0.0
  */
-export type ParseIssue = Declaration | Refinement | Tuple | TypeLiteral | Union | Transform | Type | Forbidden;
+Declaration, 
 /**
- * Error that occurs when a transformation has an error.
- *
- * @category model
+ * @category optimisation
  * @since 1.0.0
  */
-export interface Transform {
-    readonly _tag: "Transform";
-    readonly ast: AST.Transform;
-    readonly actual: unknown;
-    readonly kind: "From" | "Transformation" | "To";
-    readonly error: ParseIssue;
-}
+eitherOrUndefined, 
 /**
- * @category constructors
+ * @category optimisation
  * @since 1.0.0
  */
-export declare const transform: (ast: AST.Transform, actual: unknown, kind: "From" | "Transformation" | "To", error: ParseIssue) => Transform;
+flatMap, 
 /**
- * The `Type` variant of the `ParseIssue` type represents an error that occurs when the `actual` value is not of the expected type.
- * The `ast` field specifies the expected type, and the `actual` field contains the value that caused the error.
+ * The `Forbidden` variant of the `ParseIssue` type represents a forbidden operation, such as when encountering an Effect that is not allowed to execute (e.g., using `runSync`).
  *
  * @category model
  * @since 1.0.0
  */
-export interface Type {
-    readonly _tag: "Type";
-    readonly ast: AST.AST;
-    readonly actual: unknown;
-    readonly message: Option.Option<string>;
-}
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const type: (ast: AST.AST, actual: unknown, message?: string | undefined) => Type;
+Forbidden, 
 /**
- * The `Forbidden` variant of the `ParseIssue` type represents an error that occurs when an Effect is encounter but disallowed from execution.
+ * The `Index` error indicates that there was an error at a specific index in an array or tuple.
  *
  * @category model
  * @since 1.0.0
  */
-export interface Forbidden {
-    readonly _tag: "Forbidden";
-    readonly ast: AST.AST;
-    readonly actual: unknown;
-    readonly message: Option.Option<string>;
-}
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const forbidden: (ast: AST.AST, actual: unknown, message?: string | undefined) => Forbidden;
+Index, 
 /**
- * Error that occurs when a declaration has an error.
+ * The `Key` variant of the `ParseIssue` type represents an error that occurs when a key in a type literal or record is invalid.
  *
  * @category model
  * @since 1.0.0
  */
-export interface Declaration {
-    readonly _tag: "Declaration";
-    readonly ast: AST.Declaration;
-    readonly actual: unknown;
-    readonly error: ParseIssue;
-}
+Key, 
 /**
- * @category constructors
- * @since 1.0.0
- */
-export declare const declaration: (ast: AST.Declaration, actual: unknown, error: ParseIssue) => Declaration;
-/**
- * Error that occurs when a refinement has an error.
- *
- * @category model
+ * @category optimisation
  * @since 1.0.0
  */
-export interface Refinement {
-    readonly _tag: "Refinement";
-    readonly ast: AST.Refinement<AST.AST>;
-    readonly actual: unknown;
-    readonly kind: "From" | "Predicate";
-    readonly error: ParseIssue;
-}
+map, 
 /**
- * @category constructors
+ * @category optimisation
  * @since 1.0.0
  */
-export declare const refinement: (ast: AST.Refinement<AST.AST>, actual: unknown, kind: "From" | "Predicate", error: ParseIssue) => Refinement;
+mapError, 
 /**
- * Error that occurs when an array or tuple has an error.
+ * Error that occurs when a member in a union has an error.
  *
  * @category model
  * @since 1.0.0
  */
-export interface Tuple {
-    readonly _tag: "Tuple";
-    readonly ast: AST.Tuple;
-    readonly actual: unknown;
-    readonly errors: ReadonlyArray.NonEmptyReadonlyArray<Index>;
-}
+Member, 
 /**
- * @category constructors
- * @since 1.0.0
- */
-export declare const tuple: (ast: AST.Tuple, actual: unknown, errors: readonly [Index, ...Index[]]) => Tuple;
-/**
- * Error that occurs when a type literal or record has an error.
+ * Error that occurs when a required key or index is missing.
  *
  * @category model
  * @since 1.0.0
  */
-export interface TypeLiteral {
-    readonly _tag: "TypeLiteral";
-    readonly ast: AST.TypeLiteral;
-    readonly actual: unknown;
-    readonly errors: ReadonlyArray.NonEmptyReadonlyArray<Key>;
-}
+Missing, 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export declare const typeLiteral: (ast: AST.TypeLiteral, actual: unknown, errors: readonly [Key, ...Key[]]) => TypeLiteral;
+missing, 
 /**
- * The `Index` error indicates that there was an error at a specific index in an array or tuple.
+ * Error that occurs when a refinement has an error.
  *
  * @category model
  * @since 1.0.0
  */
-export interface Index {
-    readonly _tag: "Index";
-    readonly index: number;
-    readonly error: ParseIssue | Missing | Unexpected;
-}
+Refinement, 
 /**
- * @category constructors
- * @since 1.0.0
- */
-export declare const index: (index: number, error: ParseIssue | Missing | Unexpected) => Index;
-/**
- * The `Key` variant of the `ParseIssue` type represents an error that occurs when a key in a type literal or record is invalid.
+ * Error that occurs when a transformation has an error.
  *
  * @category model
  * @since 1.0.0
  */
-export interface Key {
-    readonly _tag: "Key";
-    readonly key: PropertyKey;
-    readonly error: ParseIssue | Missing | Unexpected;
-}
+Transformation, 
 /**
- * @category constructors
+ * Error that occurs when an array or tuple has an error.
+ *
+ * @category model
  * @since 1.0.0
  */
-export declare const key: (key: PropertyKey, error: ParseIssue | Missing | Unexpected) => Key;
+Tuple, 
 /**
- * Error that occurs when a required key or index is missing.
+ * The `Type` variant of the `ParseIssue` type represents an error that occurs when the `actual` value is not of the expected type.
+ * The `ast` field specifies the expected type, and the `actual` field contains the value that caused the error.
  *
  * @category model
  * @since 1.0.0
  */
-export interface Missing {
-    readonly _tag: "Missing";
-}
+Type, 
 /**
- * @category constructors
+ * Error that occurs when a type literal or record has an error.
+ *
+ * @category model
  * @since 1.0.0
  */
-export declare const missing: Missing;
+TypeLiteral, 
 /**
  * Error that occurs when an unexpected key or index is present.
  *
  * @category model
  * @since 1.0.0
  */
-export interface Unexpected {
-    readonly _tag: "Unexpected";
-    readonly ast: AST.AST;
-}
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const unexpected: (ast: AST.AST) => Unexpected;
+Unexpected, 
 /**
  * Error that occurs when a union has an error.
  *
  * @category model
  * @since 1.0.0
  */
-export interface Union {
-    readonly _tag: "Union";
-    readonly ast: AST.Union;
-    readonly actual: unknown;
-    readonly errors: ReadonlyArray.NonEmptyReadonlyArray<Type | TypeLiteral | Member>;
-}
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const union: (ast: AST.Union, actual: unknown, errors: readonly [TypeLiteral | Type | Member, ...(TypeLiteral | Type | Member)[]]) => Union;
+Union } from "./internal/parseResult.js";
+export type { 
 /**
- * Error that occurs when a member in a union has an error.
+ * `ParseIssue` is a type that represents the different types of errors that can occur when decoding/encoding a value.
  *
  * @category model
  * @since 1.0.0
  */
-export interface Member {
-    readonly _tag: "Member";
-    readonly ast: AST.AST;
-    readonly error: ParseIssue;
-}
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const member: (ast: AST.AST, error: ParseIssue) => Member;
-/**
- * @category optimisation
- * @since 1.0.0
- */
-export declare const eitherOrUndefined: <A, E, R>(self: Effect.Effect<A, E, R>) => Either.Either<A, E> | undefined;
-/**
- * @category optimisation
- * @since 1.0.0
- */
-export declare const flatMap: {
-    <A, B, E1, R1>(f: (a: A) => Effect.Effect<B, E1, R1>): <E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<B, E1 | E, R1 | R>;
-    <A_1, E_1, R_1, B_1, E1_1, R1_1>(self: Effect.Effect<A_1, E_1, R_1>, f: (a: A_1) => Effect.Effect<B_1, E1_1, R1_1>): Effect.Effect<B_1, E_1 | E1_1, R_1 | R1_1>;
-};
-/**
- * @category optimisation
- * @since 1.0.0
- */
-export declare const map: {
-    <A, B>(f: (a: A) => B): <E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<B, E, R>;
-    <A_1, E_1, R_1, B_1>(self: Effect.Effect<A_1, E_1, R_1>, f: (a: A_1) => B_1): Effect.Effect<B_1, E_1, R_1>;
-};
-/**
- * @category optimisation
- * @since 1.0.0
- */
-export declare const mapError: {
-    <E, E2>(f: (e: E) => E2): <A, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E2, R>;
-    <A_1, E_1, R_1, E2_1>(self: Effect.Effect<A_1, E_1, R_1>, f: (e: E_1) => E2_1): Effect.Effect<A_1, E2_1, R_1>;
-};
+ParseIssue } from "./internal/parseResult.js";
 /**
  * @category optimisation
  * @since 1.0.0
diff --git a/dist/dts/ParseResult.d.ts.map b/dist/dts/ParseResult.d.ts.map
index 4ca49c303ab79392dba37f0acdef43c0c89b00f5..162c699bd8d8803654166a493e8d47e40a287dbc 100644
--- a/dist/dts/ParseResult.d.ts.map
+++ b/dist/dts/ParseResult.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"ParseResult.d.ts","sourceRoot":"","sources":["../../src/ParseResult.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"ParseResult.d.ts","sourceRoot":"","sources":["../../src/ParseResult.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/dts/Parser.d.ts b/dist/dts/Parser.d.ts
index 34e704c5a5e073c84fcf0464660c43ffd31e9185..f0630663d3ce4c4393de3d4d7c7fdb57995ab3bf 100644
--- a/dist/dts/Parser.d.ts
+++ b/dist/dts/Parser.d.ts
@@ -5,6 +5,7 @@ import * as Effect from "effect/Effect";
 import * as Either from "effect/Either";
 import * as Option from "effect/Option";
 import * as AST from "./AST.js";
+import * as _parseResult from "./internal/parseResult.js";
 import type * as ParseResult from "./ParseResult.js";
 import type * as Schema from "./Schema.js";
 /**
@@ -21,7 +22,7 @@ export declare const decodeUnknownOption: <A, I>(schema: Schema.Schema<A, I, nev
  * @category decoding
  * @since 1.0.0
  */
-export declare const decodeUnknownEither: <A, I>(schema: Schema.Schema<A, I, never>, options?: AST.ParseOptions) => (u: unknown, overrideOptions?: AST.ParseOptions) => Either.Either<A, ParseResult.ParseIssue>;
+export declare const decodeUnknownEither: <A, I>(schema: Schema.Schema<A, I, never>, options?: AST.ParseOptions) => (u: unknown, overrideOptions?: AST.ParseOptions) => Either.Either<A, _parseResult.ParseIssue>;
 /**
  * @category decoding
  * @since 1.0.0
@@ -31,7 +32,7 @@ export declare const decodeUnknownPromise: <A, I>(schema: Schema.Schema<A, I, ne
  * @category decoding
  * @since 1.0.0
  */
-export declare const decodeUnknown: <A, I, R>(schema: Schema.Schema<A, I, R>, options?: AST.ParseOptions) => (u: unknown, overrideOptions?: AST.ParseOptions) => Effect.Effect<A, ParseResult.ParseIssue, R>;
+export declare const decodeUnknown: <A, I, R>(schema: Schema.Schema<A, I, R>, options?: AST.ParseOptions) => (u: unknown, overrideOptions?: AST.ParseOptions) => Effect.Effect<A, _parseResult.ParseIssue, R>;
 /**
  * @category encoding
  * @since 1.0.0
@@ -46,7 +47,7 @@ export declare const encodeUnknownOption: <A, I>(schema: Schema.Schema<A, I, nev
  * @category encoding
  * @since 1.0.0
  */
-export declare const encodeUnknownEither: <A, I>(schema: Schema.Schema<A, I, never>, options?: AST.ParseOptions) => (u: unknown, overrideOptions?: AST.ParseOptions) => Either.Either<I, ParseResult.ParseIssue>;
+export declare const encodeUnknownEither: <A, I>(schema: Schema.Schema<A, I, never>, options?: AST.ParseOptions) => (u: unknown, overrideOptions?: AST.ParseOptions) => Either.Either<I, _parseResult.ParseIssue>;
 /**
  * @category encoding
  * @since 1.0.0
@@ -56,7 +57,7 @@ export declare const encodeUnknownPromise: <A, I>(schema: Schema.Schema<A, I, ne
  * @category encoding
  * @since 1.0.0
  */
-export declare const encodeUnknown: <A, I, R>(schema: Schema.Schema<A, I, R>, options?: AST.ParseOptions) => (u: unknown, overrideOptions?: AST.ParseOptions) => Effect.Effect<I, ParseResult.ParseIssue, R>;
+export declare const encodeUnknown: <A, I, R>(schema: Schema.Schema<A, I, R>, options?: AST.ParseOptions) => (u: unknown, overrideOptions?: AST.ParseOptions) => Effect.Effect<I, _parseResult.ParseIssue, R>;
 /**
  * @category decoding
  * @since 1.0.0
@@ -96,7 +97,7 @@ export declare const validateOption: <A, I, R>(schema: Schema.Schema<A, I, R>, o
  * @category validation
  * @since 1.0.0
  */
-export declare const validateEither: <A, I, R>(schema: Schema.Schema<A, I, R>, options?: AST.ParseOptions) => (u: unknown, overrideOptions?: AST.ParseOptions) => Either.Either<A, ParseResult.ParseIssue>;
+export declare const validateEither: <A, I, R>(schema: Schema.Schema<A, I, R>, options?: AST.ParseOptions) => (u: unknown, overrideOptions?: AST.ParseOptions) => Either.Either<A, _parseResult.ParseIssue>;
 /**
  * @category validation
  * @since 1.0.0
@@ -106,7 +107,7 @@ export declare const validatePromise: <A, I>(schema: Schema.Schema<A, I, never>,
  * @category validation
  * @since 1.0.0
  */
-export declare const validate: <A, I, R>(schema: Schema.Schema<A, I, R>, options?: AST.ParseOptions) => (a: unknown, overrideOptions?: AST.ParseOptions) => Effect.Effect<A, ParseResult.ParseIssue, R>;
+export declare const validate: <A, I, R>(schema: Schema.Schema<A, I, R>, options?: AST.ParseOptions) => (a: unknown, overrideOptions?: AST.ParseOptions) => Effect.Effect<A, _parseResult.ParseIssue, R>;
 /**
  * @category validation
  * @since 1.0.0
@@ -142,8 +143,4 @@ export declare const encodePromise: <A, I>(schema: Schema.Schema<A, I, never>, o
  * @since 1.0.0
  */
 export declare const encode: <A, I, R>(schema: Schema.Schema<A, I, R>, options?: AST.ParseOptions) => (a: A, overrideOptions?: AST.ParseOptions) => Effect.Effect<I, ParseResult.ParseIssue, R>;
-/**
- * @since 1.0.0"
- */
-export declare const defaultParseOption: AST.ParseOptions;
 //# sourceMappingURL=Parser.d.ts.map
\ No newline at end of file
diff --git a/dist/dts/Parser.d.ts.map b/dist/dts/Parser.d.ts.map
index e86cfc4f2f29dc0740966a4a5da926e39e398fe5..0c3ab194fa1fece8247d8a0bb4a5b42a9e4dbc87 100644
--- a/dist/dts/Parser.d.ts.map
+++ b/dist/dts/Parser.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"Parser.d.ts","sourceRoot":"","sources":["../../src/Parser.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"Parser.d.ts","sourceRoot":"","sources":["../../src/Parser.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/dts/Pretty.d.ts.map b/dist/dts/Pretty.d.ts.map
index 1bd62b1bfff344afa7b0b6fbf88328cf57b423e4..3790bbab17ba9095b0cdef02f28b9d0992c83fb2 100644
--- a/dist/dts/Pretty.d.ts.map
+++ b/dist/dts/Pretty.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"Pretty.d.ts","sourceRoot":"","sources":["../../src/Pretty.ts"],"names":[],"mappings":"AAIA,OAAO,KAAK,aAAa,MAAM,sBAAsB,CAAA;AACrD,OAAO,KAAK,GAAG,MAAM,UAAU,CAAA;AAK/B,OAAO,KAAK,KAAK,MAAM,MAAM,aAAa,CAAA;AAE1C;;;GAGG;AACH,MAAM,WAAW,MAAM,CAAC,EAAE;IACxB,CAAC,CAAC,EAAE,EAAE,GAAG,MAAM,CAAA;CAChB;AAED;;;GAGG;AACH,eAAO,MAAM,YAAY,EAAE,OAAO,MAA2B,CAAA;AAE7D;;;GAGG;AACH,MAAM,MAAM,YAAY,GAAG,OAAO,YAAY,CAAA;AAE9C;;;GAGG;AACH,eAAO,MAAM,MAAM,yBACM,cAAc,OAAO,GAAG,CAAC,CAAC,iFAEwB,CAAA;AAE3E;;;GAGG;AACH,eAAO,MAAM,IAAI,yDAAwD,MAA6B,CAAA;AAkBtG;;GAEG;AACH,eAAO,MAAM,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAoJxC,CAAA"}
\ No newline at end of file
+{"version":3,"file":"Pretty.d.ts","sourceRoot":"","sources":["../../src/Pretty.ts"],"names":[],"mappings":"AAIA,OAAO,KAAK,aAAa,MAAM,sBAAsB,CAAA;AACrD,OAAO,KAAK,GAAG,MAAM,UAAU,CAAA;AAK/B,OAAO,KAAK,KAAK,MAAM,MAAM,aAAa,CAAA;AAE1C;;;GAGG;AACH,MAAM,WAAW,MAAM,CAAC,EAAE;IACxB,CAAC,CAAC,EAAE,EAAE,GAAG,MAAM,CAAA;CAChB;AAED;;;GAGG;AACH,eAAO,MAAM,YAAY,EAAE,OAAO,MAA4B,CAAA;AAE9D;;;GAGG;AACH,MAAM,MAAM,YAAY,GAAG,OAAO,YAAY,CAAA;AAE9C;;;GAGG;AACH,eAAO,MAAM,MAAM,yBACM,cAAc,OAAO,GAAG,CAAC,CAAC,iFAC4D,CAAA;AAE/G;;;GAGG;AACH,eAAO,MAAM,IAAI,yDAAwD,MAA6B,CAAA;AAkBtG;;GAEG;AACH,eAAO,MAAM,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAoJxC,CAAA"}
\ No newline at end of file
diff --git a/dist/dts/Schema.d.ts b/dist/dts/Schema.d.ts
index d7f2e74f551bfb7b1297f6a3360872a7011d25df..8b286453684deb7ff7e3d701e60e9443c4a4bed2 100644
--- a/dist/dts/Schema.d.ts
+++ b/dist/dts/Schema.d.ts
@@ -1,16 +1,16 @@
 /**
  * @since 1.0.0
  */
-import * as BigDecimal from "effect/BigDecimal";
+import * as _bigDecimal from "effect/BigDecimal";
 import * as Brand from "effect/Brand";
 import * as Cause from "effect/Cause";
 import * as Chunk from "effect/Chunk";
-import * as Duration from "effect/Duration";
+import * as _duration from "effect/Duration";
 import * as Effect from "effect/Effect";
 import * as Either from "effect/Either";
 import * as Equivalence from "effect/Equivalence";
 import * as Exit from "effect/Exit";
-import * as FiberId from "effect/FiberId";
+import * as _fiberId from "effect/FiberId";
 import type { LazyArg } from "effect/Function";
 import * as HashMap from "effect/HashMap";
 import * as HashSet from "effect/HashSet";
@@ -21,15 +21,33 @@ import type { Pipeable } from "effect/Pipeable";
 import * as Predicate from "effect/Predicate";
 import * as ReadonlyArray from "effect/ReadonlyArray";
 import * as Request from "effect/Request";
-import * as Secret from "effect/Secret";
+import * as _secret from "effect/Secret";
 import * as SortedSet from "effect/SortedSet";
-import type { Covariant, Equals, Invariant, Mutable, NoInfer, Simplify } from "effect/Types";
+import type { Covariant, Equals, Invariant, NoInfer, UnionToIntersection } from "effect/Types";
 import type { Arbitrary } from "./Arbitrary.js";
 import type { ParseOptions } from "./AST.js";
 import * as AST from "./AST.js";
 import * as ParseResult from "./ParseResult.js";
 import * as Pretty from "./Pretty.js";
 import type * as Serializable from "./Serializable.js";
+/**
+ * Required to fix a bug in TypeScript@5.0, dtslint fails with:
+ * TypeScript@5.0 expected type to be:
+ *   { readonly [x: string]: number; }
+ * got:
+ *   { [x: string]: number; }
+ *
+ * @example
+ * import type { Simplify } from "effect/Types"
+ *
+ * // $ExpectType { readonly [x: string]: number; }
+ * type Test = Simplify<{ readonly [x: string]: number }>
+ *
+ * @since 1.0.0
+ */
+export type Simplify<T> = {
+    readonly [K in keyof T]: T[K];
+} & {};
 /**
  * @since 1.0.0
  * @category symbol
@@ -46,7 +64,31 @@ export type TypeId = typeof TypeId;
  */
 export interface Schema<in out A, in out I = A, out R = never> extends Schema.Variance<A, I, R>, Pipeable {
     readonly ast: AST.AST;
+    annotations(annotations: Annotations<A>): Schema<A, I, R>;
+}
+/**
+ * @since 1.0.0
+ */
+export declare namespace Annotable {
+    /**
+     * @since 1.0.0
+     */
+    type Self<S extends Any> = ReturnType<S["annotations"]>;
+    /**
+     * @since 1.0.0
+     */
+    type Any = Annotable<any, any, any, unknown> | Annotable<any, never>;
 }
+/**
+ * @since 1.0.0
+ */
+export interface Annotable<Self extends Schema<A, I, R>, A, I = A, R = never> extends Schema<A, I, R> {
+    annotations(annotations: Annotations<A>): Self;
+}
+/**
+ * @since 1.0.0
+ */
+export declare const asSchema: <S extends Schema.All>(schema: S) => Schema<Schema.Type<S>, Schema.Encoded<S>, Schema.Context<S>>;
 /**
  * @category hashing
  * @since 1.0.0
@@ -71,6 +113,14 @@ export declare namespace Schema {
             readonly _R: Covariant<R>;
         };
     }
+    /**
+     * @since 1.0.0
+     */
+    type Type<S> = S extends Schema.Variance<infer A, infer _I, infer _R> ? A : never;
+    /**
+     * @since 1.0.0
+     */
+    type Encoded<S> = S extends Schema.Variance<infer _A, infer I, infer _R> ? I : never;
     /**
      * @since 1.0.0
      */
@@ -78,24 +128,34 @@ export declare namespace Schema {
     /**
      * @since 1.0.0
      */
-    type From<S> = S extends Schema.Variance<infer _A, infer I, infer _R> ? I : never;
+    type ToAsserts<S extends AnyNoContext> = (input: unknown, options?: AST.ParseOptions) => asserts input is Schema.Type<S>;
     /**
+     * Any schema, except for `never`.
+     *
      * @since 1.0.0
      */
-    type To<S> = S extends Schema.Variance<infer A, infer _I, infer _R> ? A : never;
+    type Any = Schema<any, any, unknown>;
     /**
+     * Any schema with `Context = never`, except for `never`.
+     *
      * @since 1.0.0
      */
-    type ToAsserts<S extends Schema<any>> = (input: unknown, options?: AST.ParseOptions) => asserts input is Schema.To<S>;
+    type AnyNoContext = Schema<any, any, never>;
+    /**
+     * Any schema, including `never`.
+     *
+     * @since 1.0.0
+     */
+    type All = Any | $never;
 }
 /**
  * @since 1.0.0
  */
-export declare const from: <A, I, R>(schema: Schema<A, I, R>) => Schema<I, I, never>;
+export declare const encodedSchema: <A, I, R>(schema: Schema<A, I, R>) => Schema<I, I, never>;
 /**
  * @since 1.0.0
  */
-export declare const to: <A, I, R>(schema: Schema<A, I, R>) => Schema<A, A, never>;
+export declare const typeSchema: <A, I, R>(schema: Schema<A, I, R>) => Schema<A, A, never>;
 export { 
 /**
  * @category validation
@@ -238,17 +298,26 @@ export declare const validatePromise: <A, I>(schema: Schema<A, I, never>, option
  * @category guards
  * @since 1.0.0
  */
-export declare const isSchema: (u: unknown) => u is Schema<unknown, unknown, unknown>;
+export declare const isSchema: (u: unknown) => u is Schema.Any;
 /**
  * @category constructors
  * @since 1.0.0
  */
-export declare const make: <A, I, R>(ast: AST.AST) => Schema<A, I, R>;
+export declare const make: <A, I = A, R = never>(ast: AST.AST) => Schema<A, I, R>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface literal<Literals extends ReadonlyArray.NonEmptyReadonlyArray<AST.LiteralValue>> extends Annotable<literal<Literals>, Literals[number]> {
+    readonly literals: Readonly<Literals>;
+}
 /**
  * @category constructors
  * @since 1.0.0
  */
-export declare const literal: <Literals extends readonly AST.LiteralValue[]>(...literals: Literals) => Schema<Literals[number], Literals[number], never>;
+export declare function literal<Literals extends ReadonlyArray.NonEmptyReadonlyArray<AST.LiteralValue>>(...literals: Literals): literal<Literals>;
+export declare function literal(): $never;
+export declare function literal<Literals extends ReadonlyArray<AST.LiteralValue>>(...literals: Literals): Schema<Literals[number]>;
 /**
  * Creates a new `Schema` from a literal schema.
  *
@@ -265,47 +334,33 @@ export declare const literal: <Literals extends readonly AST.LiteralValue[]>(...
  * @category constructors
  * @since 1.0.0
  */
-export declare const pickLiteral: <A extends AST.LiteralValue, L extends readonly A[]>(...literals: L) => <I, R>(_schema: Schema<A, I, R>) => Schema<L[number], L[number], never>;
+export declare const pickLiteral: <A extends AST.LiteralValue, L extends readonly [A, ...A[]]>(...literals: L) => <I, R>(_schema: Schema<A, I, R>) => literal<[...L]>;
 /**
  * @category constructors
  * @since 1.0.0
  */
-export declare const uniqueSymbol: <S extends symbol>(symbol: S, annotations?: AST.Annotations) => Schema<S, S, never>;
+export declare const uniqueSymbolFromSelf: <S extends symbol>(symbol: S) => Schema<S, S, never>;
 /**
- * @category constructors
+ * @category api interface
  * @since 1.0.0
  */
-export declare const enums: <A extends {
+export interface enums<A extends {
     [x: string]: string | number;
-}>(enums: A) => Schema<A[keyof A], A[keyof A], never>;
-/**
- * @since 1.0.0
- */
-export type Join<T> = T extends [infer Head, ...infer Tail] ? `${Head & (string | number | bigint | boolean | null | undefined)}${Tail extends [] ? "" : Join<Tail>}` : never;
+}> extends Annotable<enums<A>, A[keyof A]> {
+}
 /**
  * @category constructors
  * @since 1.0.0
  */
-export declare const templateLiteral: <T extends [Schema<any, any, never>, ...Schema<any, any, never>[]]>(...[head, ...tail]: T) => Schema<Join<{ [K in keyof T]: Schema.To<T[K]>; }>, Join<{ [K in keyof T]: Schema.To<T[K]>; }>, never>;
+export declare const enums: <A extends {
+    [x: string]: string | number;
+}>(enums: A) => enums<A>;
+type Join<T> = T extends [infer Head, ...infer Tail] ? `${Head & (string | number | bigint | boolean | null | undefined)}${Tail extends [] ? "" : Join<Tail>}` : never;
 /**
+ * @category constructors
  * @since 1.0.0
  */
-export interface DeclareAnnotations<P extends ReadonlyArray<any>, A> extends DocAnnotations {
-    readonly message?: AST.MessageAnnotation;
-    readonly typeId?: AST.TypeAnnotation | {
-        id: AST.TypeAnnotation;
-        annotation: unknown;
-    };
-    readonly arbitrary?: (...arbitraries: {
-        readonly [K in keyof P]: Arbitrary<P[K]>;
-    }) => Arbitrary<A>;
-    readonly pretty?: (...pretties: {
-        readonly [K in keyof P]: Pretty.Pretty<P[K]>;
-    }) => Pretty.Pretty<A>;
-    readonly equivalence?: (...equivalences: {
-        readonly [K in keyof P]: Equivalence.Equivalence<P[K]>;
-    }) => Equivalence.Equivalence<A>;
-}
+export declare const templateLiteral: <T extends [Schema.AnyNoContext, ...Schema.AnyNoContext[]]>(...[head, ...tail]: T) => Schema<Join<{ [K in keyof T]: Schema.Type<T[K]>; }>, Join<{ [K in keyof T]: Schema.Type<T[K]>; }>, never>;
 /**
  * The constraint `R extends Schema.Context<P[number]>` enforces dependencies solely from `typeParameters`.
  * This ensures that when you call `Schema.to` or `Schema.from`, you receive a schema with a `never` context.
@@ -314,14 +369,14 @@ export interface DeclareAnnotations<P extends ReadonlyArray<any>, A> extends Doc
  * @since 1.0.0
  */
 export declare const declare: {
-    <A>(is: (input: unknown) => input is A, annotations?: DeclareAnnotations<readonly [], A>): Schema<A>;
-    <const P extends ReadonlyArray<Schema<any, any, any>>, I, A>(typeParameters: P, decodeUnknown: (...typeParameters: {
-        readonly [K in keyof P]: Schema<Schema.To<P[K]>, Schema.From<P[K]>, never>;
+    <A>(is: (input: unknown) => input is A, annotations?: Annotations<A>): Schema<A>;
+    <const P extends ReadonlyArray<Schema.Any>, I, A>(typeParameters: P, decodeUnknown: (...typeParameters: {
+        readonly [K in keyof P]: Schema<Schema.Type<P[K]>, Schema.Encoded<P[K]>, never>;
     }) => (input: unknown, options: ParseOptions, ast: AST.Declaration) => Effect.Effect<A, ParseResult.ParseIssue, never>, encodeUnknown: (...typeParameters: {
-        readonly [K in keyof P]: Schema<Schema.To<P[K]>, Schema.From<P[K]>, never>;
-    }) => (input: unknown, options: ParseOptions, ast: AST.Declaration) => Effect.Effect<I, ParseResult.ParseIssue, never>, annotations?: DeclareAnnotations<{
-        readonly [K in keyof P]: Schema.To<P[K]>;
-    }, A>): Schema<A, I, Schema.Context<P[number]>>;
+        readonly [K in keyof P]: Schema<Schema.Type<P[K]>, Schema.Encoded<P[K]>, never>;
+    }) => (input: unknown, options: ParseOptions, ast: AST.Declaration) => Effect.Effect<I, ParseResult.ParseIssue, never>, annotations?: Annotations<A, {
+        readonly [K in keyof P]: Schema.Type<P[K]>;
+    }>): Schema<A, I, Schema.Context<P[number]>>;
 };
 /**
  * @category type id
@@ -332,153 +387,436 @@ export declare const BrandTypeId: unique symbol;
  * @category constructors
  * @since 1.0.0
  */
-export declare const fromBrand: <C extends Brand.Brand<string | symbol>>(constructor: Brand.Brand.Constructor<C>, options?: FilterAnnotations<Brand.Brand.Unbranded<C>> | undefined) => <R, I, A extends Brand.Brand.Unbranded<C>>(self: Schema<A, I, R>) => Schema<A & C, I, R>;
+export declare const fromBrand: <C extends Brand.Brand<string | symbol>>(constructor: Brand.Brand.Constructor<C>, annotations?: FilterAnnotations<Brand.Brand.Unbranded<C>> | undefined) => <R, I, A extends Brand.Brand.Unbranded<C>>(self: Schema<A, I, R>) => Schema<A & C, I, R>;
 /**
  * @category type id
  * @since 1.0.0
  */
 export declare const InstanceOfTypeId: unique symbol;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface instanceOf<A> extends Annotable<instanceOf<A>, A> {
+}
 /**
  * @category constructors
  * @since 1.0.0
  */
-export declare const instanceOf: <A extends abstract new (...args: any) => any>(constructor: A, options?: DeclareAnnotations<[], InstanceType<A>> | undefined) => Schema<InstanceType<A>, InstanceType<A>, never>;
-declare const _undefined: Schema<undefined>;
-declare const _void: Schema<void>;
-declare const _null: Schema<null>;
+export declare const instanceOf: <A extends abstract new (...args: any) => any>(constructor: A, annotations?: Annotations<InstanceType<A>, readonly []> | undefined) => instanceOf<InstanceType<A>>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $undefined extends Annotable<$undefined, undefined> {
+}
+declare const $undefined: $undefined;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $void extends Annotable<$void, void> {
+}
+declare const $void: $void;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $null extends Annotable<$null, null> {
+}
+declare const $null: $null;
 export { 
 /**
  * @category primitives
  * @since 1.0.0
  */
-_null as null, 
+$null as null, 
 /**
  * @category primitives
  * @since 1.0.0
  */
-_undefined as undefined, 
+$undefined as undefined, 
 /**
  * @category primitives
  * @since 1.0.0
  */
-_void as void };
+$void as void };
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $never extends Annotable<$never, never> {
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-export declare const never: Schema<never>;
+export declare const never: $never;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $unknown extends Annotable<$unknown, unknown> {
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-export declare const unknown: Schema<unknown>;
+export declare const unknown: $unknown;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $any extends Annotable<$any, any> {
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-export declare const any: Schema<any>;
+export declare const any: $any;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $string extends Annotable<$string, string> {
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-export declare const string: Schema<string>;
+export declare const string: $string;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $number extends Annotable<$number, number> {
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-export declare const number: Schema<number>;
+export declare const number: $number;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $boolean extends Annotable<$boolean, boolean> {
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-export declare const boolean: Schema<boolean>;
+export declare const boolean: $boolean;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface bigintFromSelf extends Annotable<bigintFromSelf, bigint> {
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-export declare const bigintFromSelf: Schema<bigint>;
+export declare const bigintFromSelf: bigintFromSelf;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface symbolFromSelf extends Annotable<symbolFromSelf, symbol> {
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-export declare const symbolFromSelf: Schema<symbol>;
+export declare const symbolFromSelf: symbolFromSelf;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $object extends Annotable<$object, object> {
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-export declare const object: Schema<object>;
+export declare const object: $object;
 /**
- * @category combinators
+ * @category api interface
  * @since 1.0.0
  */
-export declare const union: <Members extends readonly Schema<any, any, any>[]>(...members: Members) => Schema<Schema.To<Members[number]>, Schema.From<Members[number]>, Schema.Context<Members[number]>>;
+export interface union<Members extends ReadonlyArray<Schema.Any>> extends Annotable<union<Members>, Schema.Type<Members[number]>, Schema.Encoded<Members[number]>, Schema.Context<Members[number]>> {
+    readonly members: Readonly<Members>;
+}
 /**
  * @category combinators
  * @since 1.0.0
  */
-export declare const nullable: <A, I, R>(self: Schema<A, I, R>) => Schema<A | null, I | null, R>;
+export declare function union<Members extends AST.Members<Schema.Any>>(...members: Members): union<Members>;
+export declare function union<Member extends Schema.Any>(member: Member): Member;
+export declare function union(): $never;
+export declare function union<Members extends ReadonlyArray<Schema.Any>>(...members: Members): Schema<Schema.Type<Members[number]>, Schema.Encoded<Members[number]>, Schema.Context<Members[number]>>;
 /**
- * @category combinators
+ * @category api interface
  * @since 1.0.0
  */
-export declare const orUndefined: <A, I, R>(self: Schema<A, I, R>) => Schema<A | undefined, I | undefined, R>;
+export interface nullable<S extends Schema.Any> extends union<[S, $null]> {
+    annotations(annotations: Annotations<Schema.Type<S> | null>): nullable<S>;
+}
 /**
  * @category combinators
  * @since 1.0.0
  */
-export declare const nullish: <A, I, R>(self: Schema<A, I, R>) => Schema<A | null | undefined, I | null | undefined, R>;
+export declare const nullable: <S extends Schema.Any>(self: S) => nullable<S>;
 /**
- * @category combinators
+ * @category api interface
  * @since 1.0.0
  */
-export declare const keyof: <A, I, R>(schema: Schema<A, I, R>) => Schema<keyof A, keyof A, never>;
+export interface orUndefined<S extends Schema.Any> extends union<[S, $undefined]> {
+    annotations(annotations: Annotations<Schema.Type<S> | undefined>): orUndefined<S>;
+}
 /**
  * @category combinators
  * @since 1.0.0
  */
-export declare const tuple: <Elements extends readonly Schema<any, any, any>[]>(...elements: Elements) => Schema<{ readonly [K in keyof Elements]: Schema.To<Elements[K]>; }, { readonly [K_1 in keyof Elements]: Schema.From<Elements[K_1]>; }, Schema.Context<Elements[number]>>;
+export declare const orUndefined: <S extends Schema.Any>(self: S) => orUndefined<S>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface nullish<S extends Schema.Any> extends union<[S, $null, $undefined]> {
+    annotations(annotations: Annotations<Schema.Type<S> | null | undefined>): nullish<S>;
+}
 /**
  * @category combinators
  * @since 1.0.0
  */
-export declare const rest: <B, IB, R2>(rest: Schema<B, IB, R2>) => <A extends readonly any[], I extends readonly any[], R1>(self: Schema<A, I, R1>) => Schema<readonly [...A, ...B[]], readonly [...I, ...IB[]], R2 | R1>;
+export declare const nullish: <S extends Schema.Any>(self: S) => nullish<S>;
 /**
  * @category combinators
  * @since 1.0.0
  */
-export declare const element: <B, IB, R2>(element: Schema<B, IB, R2>) => <A extends readonly any[], I extends readonly any[], R1>(self: Schema<A, I, R1>) => Schema<readonly [...A, B], readonly [...I, IB], R2 | R1>;
+export declare const keyof: <A, I, R>(self: Schema<A, I, R>) => Schema<keyof A, keyof A, never>;
+/**
+ * @since 1.0.0
+ */
+export interface OptionalElement<E extends Schema.Any> extends Schema.Variance<Schema.Type<E>, Schema.Encoded<E>, Schema.Context<E>> {
+    readonly optionalElement: E;
+}
+/**
+ * @since 1.0.0
+ */
+export declare const optionalElement: <E extends Schema.Any>(self: E) => OptionalElement<E>;
+/**
+ * @since 1.0.0
+ */
+export declare namespace TupleType {
+    type ElementsType<Elements, Out extends ReadonlyArray<any> = readonly []> = Elements extends readonly [infer Head, ...infer Tail] ? Head extends OptionalElement<infer T> ? ElementsType<Tail, readonly [...Out, Schema.Type<T>?]> : ElementsType<Tail, readonly [...Out, Schema.Type<Head>]> : Out;
+    type ElementsEncoded<Elements, Out extends ReadonlyArray<any> = readonly []> = Elements extends readonly [infer Head, ...infer Tail] ? Head extends OptionalElement<infer T> ? ElementsEncoded<Tail, readonly [...Out, Schema.Encoded<T>?]> : ElementsEncoded<Tail, readonly [...Out, Schema.Encoded<Head>]> : Out;
+    /**
+     * @since 1.0.0
+     */
+    type Element = Schema.Any | OptionalElement<Schema.Any>;
+    /**
+     * @since 1.0.0
+     */
+    type Elements = ReadonlyArray<Element>;
+    /**
+     * @since 1.0.0
+     */
+    type Type<Elements extends TupleType.Elements, Rest extends ReadonlyArray<Schema.Any>> = Rest extends [infer Head, ...infer Tail] ? Readonly<[
+        ...ElementsType<Elements>,
+        ...ReadonlyArray<Schema.Type<Head>>,
+        ...{
+            readonly [K in keyof Tail]: Schema.Type<Tail[K]>;
+        }
+    ]> : ElementsType<Elements>;
+    /**
+     * @since 1.0.0
+     */
+    type Encoded<Elements extends TupleType.Elements, Rest extends ReadonlyArray<Schema.Any>> = Rest extends [infer Head, ...infer Tail] ? Readonly<[
+        ...ElementsEncoded<Elements>,
+        ...ReadonlyArray<Schema.Encoded<Head>>,
+        ...{
+            readonly [K in keyof Tail]: Schema.Encoded<Tail[K]>;
+        }
+    ]> : ElementsEncoded<Elements>;
+}
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface tupleType<Elements extends TupleType.Elements, Rest extends ReadonlyArray<Schema.Any>> extends Annotable<tupleType<Elements, Rest>, TupleType.Type<Elements, Rest>, TupleType.Encoded<Elements, Rest>, Schema.Context<Elements[number]> | Schema.Context<Rest[number]>> {
+    readonly elements: Readonly<Elements>;
+    readonly rest: Readonly<Rest>;
+}
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface tuple<Elements extends TupleType.Elements> extends tupleType<Elements, []> {
+    annotations(annotations: Annotations<TupleType.Type<Elements, []>>): tuple<Elements>;
+}
 /**
  * @category combinators
  * @since 1.0.0
  */
-export declare const optionalElement: <B, IB, R2>(element: Schema<B, IB, R2>) => <A extends readonly any[], I extends readonly any[], R1>(self: Schema<A, I, R1>) => Schema<readonly [...A, B?], readonly [...I, IB?], R2 | R1>;
+export declare function tuple<const Elements extends TupleType.Elements, Rest extends ReadonlyArray.NonEmptyReadonlyArray<Schema.Any>>(elements: Elements, ...rest: Rest): tupleType<Elements, Rest>;
+export declare function tuple<Elements extends TupleType.Elements>(...elements: Elements): tuple<Elements>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface array<Value extends Schema.Any> extends tupleType<[], [Value]> {
+    readonly value: Value;
+    annotations(annotations: Annotations<TupleType.Type<[], [Value]>>): array<Value>;
+}
 /**
  * @category combinators
  * @since 1.0.0
  */
-export declare const array: <A, I, R>(item: Schema<A, I, R>) => Schema<readonly A[], readonly I[], R>;
+export declare function array<Value extends Schema.Any, RestElements extends ReadonlyArray.NonEmptyReadonlyArray<Schema.Any>>(value: Value, ...restElements: RestElements): tupleType<readonly [], [Value, ...RestElements]>;
+export declare function array<Value extends Schema.Any>(value: Value): array<Value>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface nonEmptyArray<Value extends Schema.Any> extends tupleType<[Value], [Value]> {
+    readonly value: Value;
+    annotations(annotations: Annotations<TupleType.Type<[Value], [Value]>>): nonEmptyArray<Value>;
+}
 /**
  * @category combinators
  * @since 1.0.0
  */
-export declare const nonEmptyArray: <A, I, R>(item: Schema<A, I, R>) => Schema<readonly [A, ...A[]], readonly [I, ...I[]], R>;
+export declare const nonEmptyArray: <Value extends Schema.Any>(value: Value) => nonEmptyArray<Value>;
 /**
  * @since 1.0.0
  */
-export interface PropertySignature<From, FromIsOptional, To, ToIsOptional, R = never> extends Schema.Variance<To, From, R>, Pipeable {
-    readonly FromIsOptional: FromIsOptional;
-    readonly ToIsOptional: ToIsOptional;
+export declare namespace PropertySignature {
+    /**
+     * @since 1.0.0
+     */
+    type Token = "?:" | ":";
+    /**
+     * @since 1.0.0
+     */
+    type GetToken<B extends boolean> = B extends true ? "?:" : ":";
+    /**
+     * @since 1.0.0
+     */
+    type Any<Key extends PropertyKey = PropertyKey> = PropertySignature<Token, any, Key, Token, any, any, unknown> | PropertySignature<Token, never, Key, Token, never, any, unknown>;
+    /**
+     * @since 1.0.0
+     */
+    type AST = PropertySignatureDeclaration | PropertySignatureTransformation;
+}
+/**
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export declare class PropertySignatureDeclaration {
+    readonly ast: AST.AST;
+    readonly isOptional: boolean;
+    readonly annotations?: AST.Annotations | undefined;
+    readonly __defaultConstructor?: (() => any) | undefined;
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "PropertySignatureDeclaration";
+    constructor(ast: AST.AST, isOptional: boolean, annotations?: AST.Annotations | undefined, __defaultConstructor?: (() => any) | undefined);
+}
+/**
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export declare class PropertySignatureTransformation {
+    readonly fromKey: PropertyKey | undefined;
+    readonly from: PropertySignatureDeclaration;
+    readonly to: PropertySignatureDeclaration;
+    readonly decode: AST.PropertySignatureTransformation["decode"];
+    readonly encode: AST.PropertySignatureTransformation["encode"];
+    /**
+     * @since 1.0.0
+     */
+    readonly _tag = "PropertySignatureTransformation";
+    constructor(fromKey: PropertyKey | undefined, from: PropertySignatureDeclaration, to: PropertySignatureDeclaration, decode: AST.PropertySignatureTransformation["decode"], encode: AST.PropertySignatureTransformation["encode"]);
 }
 /**
  * @since 1.0.0
+ * @category symbol
+ */
+export declare const PropertySignatureTypeId: unique symbol;
+/**
+ * @since 1.0.0
+ * @category symbol
  */
-export declare const propertySignatureAnnotations: (annotations: DocAnnotations) => <S extends Schema<any, any, any> | Schema<never, never, any> | PropertySignature<any, boolean, any, boolean, any> | PropertySignature<never, boolean, never, boolean, any>>(self: S) => S extends Schema<infer A, infer I, infer R> ? PropertySignature<I, false, A, false, R> : S;
+export type PropertySignatureTypeId = typeof PropertySignatureTypeId;
+/**
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export interface PropertySignature<TypeToken extends PropertySignature.Token, Type, Key extends PropertyKey, EncodedToken extends PropertySignature.Token, Encoded, HasDefault extends boolean = false, R = never> extends Schema.Variance<Type, Encoded, R>, Pipeable {
+    readonly [PropertySignatureTypeId]: null;
+    readonly _EncodedToken: EncodedToken;
+    readonly _TypeToken: TypeToken;
+    readonly _Key: Key;
+    readonly _HasDefault: HasDefault;
+    readonly ast: PropertySignature.AST;
+    annotations(annotations: PropertySignatureAnnotations<Type>): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R>;
+}
 /**
- * @category optional
+ * @category PropertySignature
  * @since 1.0.0
  */
-export declare const optionalToRequired: <A, I, R, B>(from: Schema<A, I, R>, to: Schema<B, B, never>, decode: (o: Option.Option<A>) => B, encode: (b: B) => Option.Option<A>, annotations?: DocAnnotations) => PropertySignature<I, true, B, false, R>;
+export declare const propertySignature: <A, I, R, IsOptional extends boolean = false, MakeDefault extends (() => A) | undefined = undefined>(schema: Schema<A, I, R>, options?: {
+    readonly isOptional?: IsOptional | undefined;
+    readonly annotations?: Annotations<A, readonly []> | undefined;
+    readonly default?: MakeDefault;
+} | undefined) => PropertySignature<PropertySignature.GetToken<IsOptional>, A, never, PropertySignature.GetToken<IsOptional>, I, MakeDefault extends undefined ? false : true, R>;
 /**
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export declare const propertySignatureTransformation: <FA, FI, FR, FromIsOptional extends boolean, TA, TI, TR, ToIsOptional extends boolean, HasDefault extends boolean, const Key extends PropertyKey = never>(from: {
+    readonly schema: Schema<FA, FI, FR>;
+    readonly isOptional: FromIsOptional;
+    readonly annotations?: Annotations<FA, readonly []> | undefined;
+    readonly hasDefault?: HasDefault;
+    readonly key?: Key | undefined;
+}, to: {
+    readonly schema: Schema<TA, TI, TR>;
+    readonly isOptional: ToIsOptional;
+}, decode: (o: Option.Option<FA>) => Option.Option<TI>, encode: (o: Option.Option<TI>) => Option.Option<FA>) => PropertySignature<PropertySignature.GetToken<ToIsOptional>, TA, Key, PropertySignature.GetToken<FromIsOptional>, FI, HasDefault, FR | TR>;
+/**
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export declare const fromKey: {
+    <Key extends PropertyKey>(key: Key): <Type, TypeToken extends PropertySignature.Token, Encoded, EncodedToken extends PropertySignature.Token, HasDefault extends boolean, R>(self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, HasDefault, R>) => PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R>;
+    <Type, TypeToken extends PropertySignature.Token, Encoded, EncodedToken extends PropertySignature.Token, HasDefault extends boolean, R, Key extends PropertyKey>(self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, HasDefault, R>, key: Key): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R>;
+};
+/**
+ * - `decode`: `none` as argument means: the value is missing in the input
+ * - `encode`: `none` as return value means: the value will be missing in the output
+ *
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export declare const optionalToRequired: <FA, FI, FR, TA, TI, TR>(from: Schema<FA, FI, FR>, to: Schema<TA, TI, TR>, decode: (o: Option.Option<FA>) => TI, encode: (ti: TI) => Option.Option<FA>) => PropertySignature<":", TA, never, "?:", FI, false, FR | TR>;
+/**
+ * - `decode`:
+ *   - `none` as argument means: the value is missing in the input
+ *   - `none` as return value means: the value will be missing in the output
+ * - `encode`:
+ *   - `none` as argument means: the value is missing in the input
+ *   - `none` as return value means: the value will be missing in the output
+ *
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export declare const optionalToOptional: <FA, FI, FR, TA, TI, TR>(from: Schema<FA, FI, FR>, to: Schema<TA, TI, TR>, decode: (o: Option.Option<FA>) => Option.Option<TI>, encode: (o: Option.Option<TI>) => Option.Option<FA>) => PropertySignature<"?:", TA, never, "?:", FI, false, FR | TR>;
+/**
+ * @category PropertySignature
  * @since 1.0.0
  */
 export declare const optional: {
@@ -486,97 +824,188 @@ export declare const optional: {
         readonly exact: true;
         readonly default: () => A;
         readonly nullable: true;
-        readonly annotations?: DocAnnotations | undefined;
-    }): PropertySignature<I | null, true, A, false, R>;
+    }): PropertySignature<":", A, never, "?:", I | null, false, R>;
     <A, I, R>(schema: Schema<A, I, R>, options: {
         readonly exact: true;
         readonly default: () => A;
-        readonly annotations?: DocAnnotations | undefined;
-    }): PropertySignature<I, true, A, false, R>;
+    }): PropertySignature<":", A, never, "?:", I, false, R>;
     <A, I, R>(schema: Schema<A, I, R>, options: {
         readonly exact: true;
         readonly nullable: true;
         readonly as: "Option";
-        readonly annotations?: DocAnnotations | undefined;
-    }): PropertySignature<I | null, true, Option.Option<A>, false, R>;
+    }): PropertySignature<":", Option.Option<A>, never, "?:", I | null, false, R>;
     <A, I, R>(schema: Schema<A, I, R>, options: {
         readonly exact: true;
         readonly as: "Option";
-        readonly annotations?: DocAnnotations | undefined;
-    }): PropertySignature<I, true, Option.Option<A>, false, R>;
+    }): PropertySignature<":", Option.Option<A>, never, "?:", I, false, R>;
     <A, I, R>(schema: Schema<A, I, R>, options: {
         readonly exact: true;
-        readonly annotations?: DocAnnotations | undefined;
-    }): PropertySignature<I, true, A, true, R>;
+        readonly nullable: true;
+    }): PropertySignature<"?:", A, never, "?:", I | null, false, R>;
+    <A, I, R>(schema: Schema<A, I, R>, options: {
+        readonly exact: true;
+    }): PropertySignature<"?:", A, never, "?:", I, false, R>;
     <A, I, R>(schema: Schema<A, I, R>, options: {
         readonly default: () => A;
         readonly nullable: true;
-        readonly annotations?: DocAnnotations | undefined;
-    }): PropertySignature<I | null | undefined, true, A, false, R>;
+    }): PropertySignature<":", A, never, "?:", I | null | undefined, false, R>;
     <A, I, R>(schema: Schema<A, I, R>, options: {
         readonly nullable: true;
         readonly as: "Option";
-        readonly annotations?: DocAnnotations | undefined;
-    }): PropertySignature<I | undefined | null, true, Option.Option<A>, false, R>;
+    }): PropertySignature<":", Option.Option<A>, never, "?:", I | null | undefined, false, R>;
     <A, I, R>(schema: Schema<A, I, R>, options: {
         readonly as: "Option";
-        readonly annotations?: DocAnnotations | undefined;
-    }): PropertySignature<I | undefined, true, Option.Option<A>, false, R>;
+    }): PropertySignature<":", Option.Option<A>, never, "?:", I | undefined, false, R>;
     <A, I, R>(schema: Schema<A, I, R>, options: {
         readonly default: () => A;
-        readonly annotations?: DocAnnotations | undefined;
-    }): PropertySignature<I | undefined, true, A, false, R>;
-    <A, I, R>(schema: Schema<A, I, R>, options?: {
-        readonly annotations?: DocAnnotations | undefined;
-    }): PropertySignature<I | undefined, true, A | undefined, true, R>;
+    }): PropertySignature<":", A, never, "?:", I | undefined, false, R>;
+    <A, I, R>(schema: Schema<A, I, R>, options: {
+        readonly nullable: true;
+    }): PropertySignature<"?:", A | undefined, never, "?:", I | null | undefined, false, R>;
+    <A, I, R>(schema: Schema<A, I, R>): PropertySignature<"?:", A | undefined, never, "?:", I | undefined, false, R>;
 };
 /**
  * @since 1.0.0
  */
-export type FromOptionalKeys<Fields> = {
-    [K in keyof Fields]: Fields[K] extends PropertySignature<any, true, any, boolean, any> | PropertySignature<never, true, never, boolean, any> ? K : never;
-}[keyof Fields];
+export declare namespace Struct {
+    /**
+     * @since 1.0.0
+     */
+    type Fields = Record<PropertyKey, Schema.All | PropertySignature.Any>;
+    type Key<F extends Fields, K extends keyof F> = [K] extends [never] ? never : F[K] extends PropertySignature.Any<infer Key> ? [Key] extends [never] ? K : Key : K;
+    type EncodedTokenKeys<Fields extends Struct.Fields> = {
+        [K in keyof Fields]: Fields[K] extends PropertySignature<PropertySignature.Token, any, PropertyKey, "?:", any, any, unknown> | PropertySignature<PropertySignature.Token, never, PropertyKey, "?:", never, any, unknown> ? K : never;
+    }[keyof Fields];
+    type TypeTokenKeys<Fields extends Struct.Fields> = {
+        [K in keyof Fields]: Fields[K] extends PropertySignature<"?:", any, PropertyKey, PropertySignature.Token, any, any, unknown> | PropertySignature<"?:", never, PropertyKey, PropertySignature.Token, never, any, unknown> ? K : never;
+    }[keyof Fields];
+    /**
+     * @since 1.0.0
+     */
+    type Type<F extends Fields, OptionalKeys extends PropertyKey = TypeTokenKeys<F>> = {
+        readonly [K in Exclude<keyof F, OptionalKeys>]: Schema.Type<F[K]>;
+    } & {
+        readonly [K in OptionalKeys]?: Schema.Type<F[K]>;
+    };
+    /**
+     * @since 1.0.0
+     */
+    type Encoded<F extends Fields, OptionalKeys extends PropertyKey = EncodedTokenKeys<F>> = {
+        readonly [K in Exclude<keyof F, OptionalKeys> as Key<F, K>]: Schema.Encoded<F[K]>;
+    } & {
+        readonly [K in OptionalKeys as Key<F, K>]?: Schema.Encoded<F[K]>;
+    };
+    /**
+     * @since 1.0.0
+     */
+    type Context<F extends Fields> = Schema.Context<F[keyof F]>;
+}
 /**
  * @since 1.0.0
  */
-export type ToOptionalKeys<Fields> = {
-    [K in keyof Fields]: Fields[K] extends PropertySignature<any, boolean, any, true, any> | PropertySignature<never, boolean, never, true, any> ? K : never;
-}[keyof Fields];
+export declare namespace IndexSignature {
+    /**
+     * @since 1.0.0
+     */
+    type Record = {
+        readonly key: Schema.All;
+        readonly value: Schema.All;
+    };
+    /**
+     * @since 1.0.0
+     */
+    type Records = ReadonlyArray<Record>;
+    /**
+     * @since 1.0.0
+     */
+    type NonEmptyRecords = ReadonlyArray.NonEmptyReadonlyArray<Record>;
+    /**
+     * @since 1.0.0
+     */
+    type Type<Records extends IndexSignature.Records> = UnionToIntersection<{
+        [K in keyof Records]: {
+            readonly [P in Schema.Type<Records[K]["key"]>]: Schema.Type<Records[K]["value"]>;
+        };
+    }[number]>;
+    /**
+     * @since 1.0.0
+     */
+    type Encoded<Records extends IndexSignature.Records> = UnionToIntersection<{
+        [K in keyof Records]: {
+            readonly [P in Schema.Encoded<Records[K]["key"]>]: Schema.Encoded<Records[K]["value"]>;
+        };
+    }[number]>;
+    /**
+     * @since 1.0.0
+     */
+    type Context<Records extends IndexSignature.Records> = {
+        [K in keyof Records]: Schema.Context<Records[K]["key"]> | Schema.Context<Records[K]["value"]>;
+    }[number];
+}
 /**
  * @since 1.0.0
  */
-export type StructFields = Record<PropertyKey, Schema<any, any, any> | Schema<never, never, any> | PropertySignature<any, boolean, any, boolean, any> | PropertySignature<never, boolean, never, boolean, any>>;
+export declare namespace TypeLiteral {
+    /**
+     * @since 1.0.0
+     */
+    type Type<Fields extends Struct.Fields, Records extends IndexSignature.Records> = Struct.Type<Fields> & IndexSignature.Type<Records>;
+    /**
+     * @since 1.0.0
+     */
+    type Encoded<Fields extends Struct.Fields, Records extends IndexSignature.Records> = Struct.Encoded<Fields> & IndexSignature.Encoded<Records>;
+}
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface typeLiteral<Fields extends Struct.Fields, Records extends IndexSignature.Records> extends Annotable<typeLiteral<Fields, Records>, Simplify<TypeLiteral.Type<Fields, Records>>, Simplify<TypeLiteral.Encoded<Fields, Records>>, Struct.Context<Fields> | IndexSignature.Context<Records>> {
+    readonly fields: Simplify<Fields>;
+    readonly records: Simplify<Records>;
+}
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface struct<Fields extends Struct.Fields> extends typeLiteral<Fields, []> {
+    annotations(annotations: Annotations<Simplify<Struct.Type<Fields>>>): struct<Fields>;
+}
 /**
+ * @category combinators
  * @since 1.0.0
  */
-export type FromStruct<Fields extends StructFields> = {
-    readonly [K in Exclude<keyof Fields, FromOptionalKeys<Fields>>]: Schema.From<Fields[K]>;
-} & {
-    readonly [K in FromOptionalKeys<Fields>]?: Schema.From<Fields[K]>;
-};
+export declare function struct<Fields extends Struct.Fields, const Records extends IndexSignature.NonEmptyRecords>(fields: Fields, ...records: Records): typeLiteral<Fields, Records>;
+export declare function struct<Fields extends Struct.Fields>(fields: Fields): struct<Fields>;
 /**
+ * @category api interface
  * @since 1.0.0
  */
-export type ToStruct<Fields extends StructFields> = {
-    readonly [K in Exclude<keyof Fields, ToOptionalKeys<Fields>>]: Schema.To<Fields[K]>;
-} & {
-    readonly [K in ToOptionalKeys<Fields>]?: Schema.To<Fields[K]>;
-};
+export interface record<K extends Schema.All, V extends Schema.All> extends typeLiteral<{}, [{
+    key: K;
+    value: V;
+}]> {
+    readonly key: K;
+    readonly value: V;
+    annotations(annotations: Annotations<Simplify<TypeLiteral.Type<{}, [{
+        key: K;
+        value: V;
+    }]>>>): record<K, V>;
+}
 /**
  * @category combinators
  * @since 1.0.0
  */
-export declare const struct: <Fields extends StructFields>(fields: Fields) => Schema<Simplify<ToStruct<Fields>>, Simplify<FromStruct<Fields>>, Schema.Context<Fields[keyof Fields]>>;
+export declare const record: <K extends Schema.All, V extends Schema.All>(key: K, value: V) => record<K, V>;
 /**
  * @category struct transformations
  * @since 1.0.0
  */
-export declare const pick: <A, Keys extends readonly (keyof A)[]>(...keys: Keys) => <R, I extends { [K in keyof A]?: any; }>(self: Schema<A, I, R>) => Schema<Simplify<Pick<A, Keys[number]>>, Simplify<Pick<I, Keys[number]>>, R>;
+export declare const pick: <A, Keys extends readonly (keyof A)[]>(...keys: Keys) => <R, I extends { [K in keyof A]?: any; }>(self: Schema<A, I, R>) => Schema<Pick<A, Keys[number]> extends infer T ? { readonly [K_1 in keyof T]: Pick<A, Keys[number]>[K_1]; } : never, Pick<I, Keys[number]> extends infer T_1 ? { readonly [K_2 in keyof T_1]: Pick<I, Keys[number]>[K_2]; } : never, R>;
 /**
  * @category struct transformations
  * @since 1.0.0
  */
-export declare const omit: <A, Keys extends readonly (keyof A)[]>(...keys: Keys) => <R, I extends { [K in keyof A]?: any; }>(self: Schema<A, I, R>) => Schema<Simplify<Omit<A, Keys[number]>>, Simplify<Omit<I, Keys[number]>>, R>;
+export declare const omit: <A, Keys extends readonly (keyof A)[]>(...keys: Keys) => <R, I extends { [K in keyof A]?: any; }>(self: Schema<A, I, R>) => Schema<Omit<A, Keys[number]> extends infer T ? { readonly [K_1 in keyof T]: Omit<A, Keys[number]>[K_1]; } : never, Omit<I, Keys[number]> extends infer T_1 ? { readonly [K_2 in keyof T_1]: Omit<I, Keys[number]>[K_2]; } : never, R>;
 /**
  * Given a schema `Schema<A, I, R>` and a key `K`, this function extracts a specific field from the `A` type, producing a new schema that represents a transformation from the `I` type to `A[K]`.
  *
@@ -633,10 +1062,10 @@ export declare const pluck: {
     <A, I, R, K extends keyof A>(schema: Schema<A, I, R>, key: K): Schema<A[K], I, R>;
 };
 /**
- * @category model
+ * @category api interface
  * @since 1.0.0
  */
-export interface BrandSchema<A extends Brand.Brand<any>, I, R> extends Schema<A, I, R>, Brand.Brand.Constructor<A> {
+export interface brand<S extends Schema.AnyNoContext, B extends string | symbol> extends Annotable<brand<S, B>, Schema.Type<S> & Brand.Brand<B>, Schema.Encoded<S>>, Brand.Brand.Constructor<Schema.Type<S> & Brand.Brand<B>> {
 }
 /**
  * Returns a nominal branded schema by applying a brand to a given schema.
@@ -652,12 +1081,12 @@ export interface BrandSchema<A extends Brand.Brand<any>, I, R> extends Schema<A,
  * import * as Schema from "@effect/schema/Schema"
  *
  * const Int = Schema.number.pipe(Schema.int(), Schema.brand("Int"))
- * type Int = Schema.Schema.To<typeof Int> // number & Brand<"Int">
+ * type Int = Schema.Schema.Type<typeof Int> // number & Brand<"Int">
  *
  * @category combinators
  * @since 1.0.0
  */
-export declare const brand: <B extends string | symbol, A>(brand: B, options?: DocAnnotations) => <I>(self: Schema<A, I, never>) => BrandSchema<A & Brand.Brand<B>, I, never>;
+export declare const brand: <S extends Schema.AnyNoContext, B extends string | symbol>(brand: B, annotations?: Annotations<Schema.Type<S> & Brand.Brand<B>, readonly []> | undefined) => (self: S) => brand<S, B>;
 /**
  * @category combinators
  * @since 1.0.0
@@ -689,19 +1118,20 @@ export declare const required: <A, I, R>(self: Schema<A, I, R>) => Schema<{ [K i
  * @category combinators
  * @since 1.0.0
  */
-export declare const mutable: <A, I, R>(schema: Schema<A, I, R>) => Schema<Simplify<Mutable<A>>, Simplify<Mutable<I>>, R>;
+export declare const mutable: <A, I, R>(schema: Schema<A, I, R>) => Schema<{ -readonly [P in keyof A]: A[P]; }, { -readonly [P_1 in keyof I]: I[P_1]; }, R>;
 /**
- * @category combinators
+ * @category api interface
  * @since 1.0.0
  */
-export declare const record: <AK extends string | symbol, IK extends string | symbol, R1, AV, IV, R2>(key: Schema<AK, IK, R1>, value: Schema<AV, IV, R2>) => Schema<{ readonly [K in AK]: AV; }, { readonly [K_1 in IK]: IV; }, R1 | R2>;
+export interface extend<Self extends Schema.Any, That extends Schema.Any> extends Schema<Simplify<Schema.Type<Self> & Schema.Type<That>>, Simplify<Schema.Encoded<Self> & Schema.Encoded<That>>, Schema.Context<Self> | Schema.Context<That>> {
+}
 /**
  * @category combinators
  * @since 1.0.0
  */
 export declare const extend: {
-    <B, IB, R2>(that: Schema<B, IB, R2>): <A, I, R1>(self: Schema<A, I, R1>) => Schema<Simplify<A & B>, Simplify<I & IB>, R1 | R2>;
-    <A, I, R1, B, IB, R2>(self: Schema<A, I, R1>, that: Schema<B, IB, R2>): Schema<Simplify<A & B>, Simplify<I & IB>, R1 | R2>;
+    <That extends Schema.Any>(that: That): <Self extends Schema.Any>(self: Self) => extend<Self, That>;
+    <Self extends Schema.Any, That extends Schema.Any>(self: Self, that: That): extend<Self, That>;
 };
 /**
  * @category combinators
@@ -721,14 +1151,22 @@ export declare const compose: {
  * @category combinators
  * @since 1.0.0
  */
-export declare const suspend: <A, I, R>(f: () => Schema<A, I, R>, annotations?: AST.Annotations) => Schema<A, I, R>;
+export declare const suspend: <A, I, R>(f: () => Schema<A, I, R>, annotations?: Annotations<A, readonly []> | undefined) => Schema<A, I, R>;
 /**
  * @category combinators
  * @since 1.0.0
  */
-export declare function filter<A>(f: (a: A, options: ParseOptions, self: AST.Refinement) => Option.Option<ParseResult.ParseIssue>, options?: FilterAnnotations<A>): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
-export declare function filter<C extends A, B extends A, A = C>(refinement: Predicate.Refinement<A, B>, options?: FilterAnnotations<A>): <I, R>(self: Schema<C, I, R>) => Schema<C & B, I, R>;
-export declare function filter<A>(predicate: Predicate.Predicate<NoInfer<A>>, options?: FilterAnnotations<NoInfer<A>>): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare function filter<A>(f: (a: A, options: ParseOptions, self: AST.Refinement) => Option.Option<ParseResult.ParseIssue>, annotations?: FilterAnnotations<A>): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare function filter<C extends A, B extends A, A = C>(refinement: Predicate.Refinement<A, B>, annotations?: FilterAnnotations<A>): <I, R>(self: Schema<C, I, R>) => Schema<C & B, I, R>;
+export declare function filter<A>(predicate: Predicate.Predicate<NoInfer<A>>, annotations?: FilterAnnotations<NoInfer<A>>): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface transformOrFail<From extends Schema.Any, To extends Schema.Any, R> extends Annotable<transformOrFail<From, To, R>, Schema.Type<To>, Schema.Encoded<From>, Schema.Context<From> | Schema.Context<To> | R> {
+    readonly from: From;
+    readonly to: To;
+}
 /**
  * Create a new `Schema` by transforming the input and output of an existing `Schema`
  * using the provided decoding functions.
@@ -737,15 +1175,22 @@ export declare function filter<A>(predicate: Predicate.Predicate<NoInfer<A>>, op
  * @since 1.0.0
  */
 export declare const transformOrFail: {
-    <ToA, ToI, ToR, FromA, R3, R4>(to: Schema<ToA, ToI, ToR>, decode: (fromA: FromA, options: ParseOptions, ast: AST.Transform) => Effect.Effect<ToI, ParseResult.ParseIssue, R3>, encode: (toI: ToI, options: ParseOptions, ast: AST.Transform) => Effect.Effect<FromA, ParseResult.ParseIssue, R4>): <FromI, FromR>(self: Schema<FromA, FromI, FromR>) => Schema<ToA, FromI, FromR | ToR | R3 | R4>;
-    <ToA, ToI, ToR, FromA, R3, R4>(to: Schema<ToA, ToI, ToR>, decode: (fromA: FromA, options: ParseOptions, ast: AST.Transform) => Effect.Effect<unknown, ParseResult.ParseIssue, R3>, encode: (toI: ToI, options: ParseOptions, ast: AST.Transform) => Effect.Effect<unknown, ParseResult.ParseIssue, R4>, options: {
+    <To extends Schema.Any, From extends Schema.Any, RD, RE>(to: To, decode: (fromA: Schema.Type<From>, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<Schema.Encoded<To>, ParseResult.ParseIssue, RD>, encode: (toI: Schema.Encoded<To>, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<Schema.Type<From>, ParseResult.ParseIssue, RE>): (from: From) => transformOrFail<From, To, RD | RE>;
+    <To extends Schema.Any, From extends Schema.Any, RD, RE>(to: To, decode: (fromA: Schema.Type<From>, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<unknown, ParseResult.ParseIssue, RD>, encode: (toI: Schema.Encoded<To>, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<unknown, ParseResult.ParseIssue, RE>, options: {
         strict: false;
-    }): <FromI, FromR>(self: Schema<FromA, FromI, FromR>) => Schema<ToA, FromI, FromR | ToR | R3 | R4>;
-    <FromA, FromI, FromR, ToA, ToI, ToR, R3, R4>(from: Schema<FromA, FromI, FromR>, to: Schema<ToA, ToI, ToR>, decode: (fromA: FromA, options: ParseOptions, ast: AST.Transform) => Effect.Effect<ToI, ParseResult.ParseIssue, R3>, encode: (toI: ToI, options: ParseOptions, ast: AST.Transform) => Effect.Effect<FromA, ParseResult.ParseIssue, R4>): Schema<ToA, FromI, FromR | ToR | R3 | R4>;
-    <FromA, FromI, FromR, ToA, ToI, ToR, R3, R4>(from: Schema<FromA, FromI, FromR>, to: Schema<ToA, ToI, ToR>, decode: (fromA: FromA, options: ParseOptions, ast: AST.Transform) => Effect.Effect<unknown, ParseResult.ParseIssue, R3>, encode: (toI: ToI, options: ParseOptions, ast: AST.Transform) => Effect.Effect<unknown, ParseResult.ParseIssue, R4>, options: {
+    }): (from: From) => transformOrFail<From, To, RD | RE>;
+    <To extends Schema.Any, From extends Schema.Any, RD, R4>(from: From, to: To, decode: (fromA: Schema.Type<From>, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<Schema.Encoded<To>, ParseResult.ParseIssue, RD>, encode: (toI: Schema.Encoded<To>, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<Schema.Type<From>, ParseResult.ParseIssue, R4>): transformOrFail<From, To, RD | R4>;
+    <To extends Schema.Any, From extends Schema.Any, RD, RE>(from: From, to: To, decode: (fromA: Schema.Type<From>, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<unknown, ParseResult.ParseIssue, RD>, encode: (toI: Schema.Encoded<To>, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<unknown, ParseResult.ParseIssue, RE>, options: {
         strict: false;
-    }): Schema<ToA, FromI, FromR | ToR | R3 | R4>;
+    }): transformOrFail<From, To, RD | RE>;
 };
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface transform<From extends Schema.Any, To extends Schema.Any> extends transformOrFail<From, To, never> {
+    annotations(annotations: Annotations<Schema.Type<To>>): transform<From, To>;
+}
 /**
  * Create a new `Schema` by transforming the input and output of an existing `Schema`
  * using the provided mapping functions.
@@ -754,15 +1199,21 @@ export declare const transformOrFail: {
  * @since 1.0.0
  */
 export declare const transform: {
-    <ToA, ToI, ToR, FromA>(to: Schema<ToA, ToI, ToR>, decode: (fromA: FromA) => ToI, encode: (toI: ToI) => FromA): <FromI, FromR>(from: Schema<FromA, FromI, FromR>) => Schema<ToA, FromI, FromR | ToR>;
-    <ToA, ToI, ToR, FromA>(to: Schema<ToA, ToI, ToR>, decode: (fromA: FromA) => unknown, encode: (toI: ToI) => unknown, options: {
+    <To extends Schema.Any, From extends Schema.Any>(to: To, decode: (fromA: Schema.Type<From>) => Schema.Encoded<To>, encode: (toI: Schema.Encoded<To>) => Schema.Type<From>): (from: From) => transform<From, To>;
+    <To extends Schema.Any, From extends Schema.Any>(to: To, decode: (fromA: Schema.Type<From>) => unknown, encode: (toI: Schema.Encoded<To>) => unknown, options: {
         strict: false;
-    }): <FromI, FromR>(from: Schema<FromA, FromI, FromR>) => Schema<ToA, FromI, FromR | ToR>;
-    <FromA, FromI, FromR, ToA, ToI, ToR>(from: Schema<FromA, FromI, FromR>, to: Schema<ToA, ToI, ToR>, decode: (fromA: FromA) => ToI, encode: (toI: ToI) => FromA): Schema<ToA, FromI, FromR | ToR>;
-    <FromA, FromI, FromR, ToA, ToI, ToR>(from: Schema<FromA, FromI, FromR>, to: Schema<ToA, ToI, ToR>, decode: (fromA: FromA) => unknown, encode: (toI: ToI) => unknown, options: {
+    }): (from: From) => transform<From, To>;
+    <To extends Schema.Any, From extends Schema.Any>(from: From, to: To, decode: (fromA: Schema.Type<From>) => Schema.Encoded<To>, encode: (toI: Schema.Encoded<To>) => Schema.Type<From>): transform<From, To>;
+    <To extends Schema.Any, From extends Schema.Any>(from: From, to: To, decode: (fromA: Schema.Type<From>) => unknown, encode: (toI: Schema.Encoded<To>) => unknown, options: {
         strict: false;
-    }): Schema<ToA, FromI, FromR | ToR>;
+    }): transform<From, To>;
 };
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface transformLiteral<Type, Encoded> extends Annotable<transformLiteral<Type, Encoded>, Type, Encoded> {
+}
 /**
  * Creates a new `Schema` which transforms literal values.
  *
@@ -776,7 +1227,7 @@ export declare const transform: {
  * @category constructors
  * @since 1.0.0
  */
-export declare const transformLiteral: <From extends AST.LiteralValue, To extends AST.LiteralValue>(from: From, to: To) => Schema<To, From, never>;
+export declare const transformLiteral: <Encoded extends AST.LiteralValue, Type extends AST.LiteralValue>(from: Encoded, to: Type) => transformLiteral<Type, Encoded>;
 /**
  * Creates a new `Schema` which maps between corresponding literal values.
  *
@@ -794,7 +1245,11 @@ export declare const transformLiteral: <From extends AST.LiteralValue, To extend
  * @category constructors
  * @since 1.0.0
  */
-export declare const transformLiterals: <const A extends readonly (readonly [from: AST.LiteralValue, to: AST.LiteralValue])[]>(...pairs: A) => Schema<A[number][1], A[number][0], never>;
+export declare function transformLiterals<const A extends AST.Members<readonly [from: AST.LiteralValue, to: AST.LiteralValue]>>(...pairs: A): union<{
+    -readonly [I in keyof A]: transformLiteral<A[I][1], A[I][0]>;
+}>;
+export declare function transformLiterals<Encoded extends AST.LiteralValue, Type extends AST.LiteralValue>(pairs: [Encoded, Type]): transformLiteral<Type, Encoded>;
+export declare function transformLiterals<const A extends ReadonlyArray<readonly [from: AST.LiteralValue, to: AST.LiteralValue]>>(...pairs: A): Schema<A[number][1], A[number][0]>;
 /**
  * Attaches a property signature with the specified key and value to the schema.
  * This API is useful when you want to add a property to your schema which doesn't describe the shape of the input,
@@ -824,68 +1279,89 @@ export declare const transformLiterals: <const A extends readonly (readonly [fro
  * @since 1.0.0
  */
 export declare const attachPropertySignature: {
-    <K extends PropertyKey, V extends AST.LiteralValue | symbol>(key: K, value: V, options?: DocAnnotations): <A extends object, I, R>(schema: Schema<A, I, R>) => Schema<Simplify<A & {
+    <K extends PropertyKey, V extends AST.LiteralValue | symbol, A extends object>(key: K, value: V, annotations?: Annotations<Simplify<A & {
+        readonly [k in K]: V;
+    }>>): <I, R>(schema: Schema<A, I, R>) => Schema<Simplify<A & {
         readonly [k in K]: V;
     }>, I, R>;
-    <A, I, R, K extends PropertyKey, V extends AST.LiteralValue | symbol>(schema: Schema<A, I, R>, key: K, value: V, options?: DocAnnotations): Schema<Simplify<A & {
+    <A, I, R, K extends PropertyKey, V extends AST.LiteralValue | symbol>(schema: Schema<A, I, R>, key: K, value: V, annotations?: Annotations<Simplify<A & {
+        readonly [k in K]: V;
+    }>>): Schema<Simplify<A & {
         readonly [k in K]: V;
     }>, I, R>;
 };
 /**
  * @since 1.0.0
  */
-export interface DocAnnotations extends AST.Annotations {
-    readonly identifier?: AST.IdentifierAnnotation;
+export interface PropertySignatureAnnotations<A> extends AST.Annotations {
     readonly title?: AST.TitleAnnotation;
     readonly description?: AST.DescriptionAnnotation;
-    readonly examples?: AST.ExamplesAnnotation;
-    readonly default?: AST.DefaultAnnotation;
+    readonly examples?: AST.ExamplesAnnotation<A>;
+    readonly default?: AST.DefaultAnnotation<A>;
     readonly documentation?: AST.DocumentationAnnotation;
+}
+/**
+ * @since 1.0.0
+ */
+export interface Annotations<A, TypeParameters extends ReadonlyArray<any> = readonly []> extends PropertySignatureAnnotations<A> {
+    readonly identifier?: AST.IdentifierAnnotation;
+    readonly message?: AST.MessageAnnotation;
+    readonly typeId?: AST.TypeAnnotation | {
+        id: AST.TypeAnnotation;
+        annotation: unknown;
+    };
+    readonly jsonSchema?: AST.JSONSchemaAnnotation;
+    readonly arbitrary?: (...arbitraries: {
+        readonly [K in keyof TypeParameters]: Arbitrary<TypeParameters[K]>;
+    }) => Arbitrary<A>;
+    readonly pretty?: (...pretties: {
+        readonly [K in keyof TypeParameters]: Pretty.Pretty<TypeParameters[K]>;
+    }) => Pretty.Pretty<A>;
+    readonly equivalence?: (...equivalences: {
+        readonly [K in keyof TypeParameters]: Equivalence.Equivalence<TypeParameters[K]>;
+    }) => Equivalence.Equivalence<A>;
     readonly concurrency?: AST.ConcurrencyAnnotation;
     readonly batching?: AST.BatchingAnnotation;
 }
 /**
  * @since 1.0.0
  */
-export interface FilterAnnotations<A> extends DeclareAnnotations<readonly [A], A> {
-    /**
-     * Attaches a JSON Schema annotation to this refinement.
-     *
-     * If the schema is composed of more than one refinement, the corresponding annotations will be merged.
-     */
-    readonly jsonSchema?: AST.JSONSchemaAnnotation;
+export interface FilterAnnotations<A> extends Annotations<A, readonly [A]> {
 }
 /**
  * @category annotations
  * @since 1.0.0
  */
-export declare const annotations: (annotations: AST.Annotations) => <A, I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const annotations: {
+    <S extends Annotable.Any>(annotations: Annotations<Schema.Type<S>>): (self: S) => Annotable.Self<S>;
+    <S extends Annotable.Any>(self: S, annotations: Annotations<Schema.Type<S>>): Annotable.Self<S>;
+};
 /**
  * @category annotations
  * @since 1.0.0
  */
-export declare const message: (message: AST.MessageAnnotation) => <A, I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const message: (message: AST.MessageAnnotation) => <S extends Annotable.Any>(self: S) => ReturnType<S["annotations"]>;
 /**
  * @category annotations
  * @since 1.0.0
  */
-export declare const identifier: (identifier: AST.IdentifierAnnotation) => <A, I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const identifier: (identifier: AST.IdentifierAnnotation) => <S extends Annotable.Any>(self: S) => ReturnType<S["annotations"]>;
 /**
  * @category annotations
  * @since 1.0.0
  */
-export declare const title: (title: AST.TitleAnnotation) => <A, I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const title: (title: AST.TitleAnnotation) => <S extends Annotable.Any>(self: S) => ReturnType<S["annotations"]>;
 /**
  * @category annotations
  * @since 1.0.0
  */
-export declare const description: (description: AST.DescriptionAnnotation) => <A, I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const description: (description: AST.DescriptionAnnotation) => <S extends Annotable.Any>(self: S) => ReturnType<S["annotations"]>;
 /**
  * @category annotations
  * @since 1.0.0
  */
-export declare const examples: (examples: AST.ExamplesAnnotation) => <A, I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
-declare const _default: <A>(value: A) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const examples: <S extends Annotable.Any>(examples: readonly [Schema.Type<S>, ...Schema.Type<S>[]]) => (self: S) => ReturnType<S["annotations"]>;
+declare const _default: <S extends Annotable.Any>(value: Schema.Type<S>) => (self: S) => ReturnType<S["annotations"]>;
 export { 
 /**
  * @category annotations
@@ -896,7 +1372,7 @@ _default as default };
  * @category annotations
  * @since 1.0.0
  */
-export declare const documentation: (documentation: AST.DocumentationAnnotation) => <A, I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const documentation: (documentation: AST.DocumentationAnnotation) => <S extends Annotable.Any>(self: S) => ReturnType<S["annotations"]>;
 /**
  * Attaches a JSON Schema annotation to a schema that represents a refinement.
  *
@@ -905,22 +1381,22 @@ export declare const documentation: (documentation: AST.DocumentationAnnotation)
  * @category annotations
  * @since 1.0.0
  */
-export declare const jsonSchema: (jsonSchema: AST.JSONSchemaAnnotation) => <A, I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const jsonSchema: (jsonSchema: AST.JSONSchemaAnnotation) => <S extends Annotable.Any>(self: S) => ReturnType<S["annotations"]>;
 /**
  * @category annotations
  * @since 1.0.0
  */
-export declare const equivalence: <A>(equivalence: Equivalence.Equivalence<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const equivalence: <S extends Annotable.Any>(equivalence: Equivalence.Equivalence<Schema.Type<S>>) => (self: S) => ReturnType<S["annotations"]>;
 /**
  * @category annotations
  * @since 1.0.0
  */
-export declare const concurrency: (concurrency: AST.ConcurrencyAnnotation) => <A, I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const concurrency: (concurrency: AST.ConcurrencyAnnotation) => <S extends Annotable.Any>(self: S) => ReturnType<S["annotations"]>;
 /**
  * @category annotations
  * @since 1.0.0
  */
-export declare const batching: (batching: AST.BatchingAnnotation) => <A, I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const batching: (batching: AST.BatchingAnnotation) => <S extends Annotable.Any>(self: S) => ReturnType<S["annotations"]>;
 type Rename<A, M> = {
     [K in keyof A as K extends keyof M ? M[K] extends PropertyKey ? M[K] : never : K]: A[K];
 };
@@ -954,7 +1430,7 @@ export declare const TrimmedTypeId: unique symbol;
  * @category string filters
  * @since 1.0.0
  */
-export declare const trimmed: <A extends string>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const trimmed: <A extends string>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -969,7 +1445,7 @@ export type MaxLengthTypeId = typeof MaxLengthTypeId;
  * @category string filters
  * @since 1.0.0
  */
-export declare const maxLength: <A extends string>(maxLength: number, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const maxLength: <A extends string>(maxLength: number, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -984,7 +1460,7 @@ export type MinLengthTypeId = typeof MinLengthTypeId;
  * @category string filters
  * @since 1.0.0
  */
-export declare const minLength: <A extends string>(minLength: number, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const minLength: <A extends string>(minLength: number, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -994,7 +1470,7 @@ export declare const PatternTypeId: unique symbol;
  * @category string filters
  * @since 1.0.0
  */
-export declare const pattern: <A extends string>(regex: RegExp, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const pattern: <A extends string>(regex: RegExp, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1004,7 +1480,7 @@ export declare const StartsWithTypeId: unique symbol;
  * @category string filters
  * @since 1.0.0
  */
-export declare const startsWith: <A extends string>(startsWith: string, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const startsWith: <A extends string>(startsWith: string, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1014,7 +1490,7 @@ export declare const EndsWithTypeId: unique symbol;
  * @category string filters
  * @since 1.0.0
  */
-export declare const endsWith: <A extends string>(endsWith: string, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const endsWith: <A extends string>(endsWith: string, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1024,7 +1500,7 @@ export declare const IncludesTypeId: unique symbol;
  * @category string filters
  * @since 1.0.0
  */
-export declare const includes: <A extends string>(searchString: string, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const includes: <A extends string>(searchString: string, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1036,12 +1512,12 @@ export declare const LowercasedTypeId: unique symbol;
  * @category string filters
  * @since 1.0.0
  */
-export declare const lowercased: <A extends string>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lowercased: <A extends string>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category string constructors
  * @since 1.0.0
  */
-export declare const Lowercased: Schema<string>;
+export declare const Lowercased: $string;
 /**
  * @category type id
  * @since 1.0.0
@@ -1053,12 +1529,12 @@ export declare const UppercasedTypeId: unique symbol;
  * @category string filters
  * @since 1.0.0
  */
-export declare const uppercased: <A extends string>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const uppercased: <A extends string>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category string constructors
  * @since 1.0.0
  */
-export declare const Uppercased: Schema<string>;
+export declare const Uppercased: $string;
 /**
  * @category type id
  * @since 1.0.0
@@ -1073,7 +1549,7 @@ export type LengthTypeId = typeof LengthTypeId;
  * @category string filters
  * @since 1.0.0
  */
-export declare const length: <A extends string>(length: number, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const length: <A extends string>(length: number, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * A schema representing a single character.
  *
@@ -1085,33 +1561,51 @@ export declare const Char: Schema<string, string, never>;
  * @category string filters
  * @since 1.0.0
  */
-export declare const nonEmpty: <A extends string>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const nonEmpty: <A extends string>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface Lowercase extends Annotable<Lowercase, string> {
+}
 /**
  * This schema converts a string to lowercase.
  *
  * @category string transformations
  * @since 1.0.0
  */
-export declare const Lowercase: Schema<string>;
+export declare const Lowercase: Lowercase;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface Uppercase extends Annotable<Uppercase, string> {
+}
 /**
  * This schema converts a string to uppercase.
  *
  * @category string transformations
  * @since 1.0.0
  */
-export declare const Uppercase: Schema<string>;
+export declare const Uppercase: Uppercase;
 /**
  * @category string constructors
  * @since 1.0.0
  */
-export declare const Trimmed: Schema<string>;
+export declare const Trimmed: $string;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface Trim extends Annotable<Trim, string> {
+}
 /**
  * This schema allows removing whitespaces from the beginning and end of a string.
  *
  * @category string transformations
  * @since 1.0.0
  */
-export declare const Trim: Schema<string>;
+export declare const Trim: Trim;
 /**
  * Returns a achema that allows splitting a string into an array of strings.
  *
@@ -1152,7 +1646,7 @@ export declare const parseJson: {
  * @category string constructors
  * @since 1.0.0
  */
-export declare const NonEmpty: Schema<string>;
+export declare const NonEmpty: $string;
 /**
  * @category type id
  * @since 1.0.0
@@ -1166,7 +1660,7 @@ export declare const UUIDTypeId: unique symbol;
  * @category string constructors
  * @since 1.0.0
  */
-export declare const UUID: Schema<string>;
+export declare const UUID: $string;
 /**
  * @category type id
  * @since 1.0.0
@@ -1181,7 +1675,7 @@ export declare const ULIDTypeId: unique symbol;
  * @category string constructors
  * @since 1.0.0
  */
-export declare const ULID: Schema<string>;
+export declare const ULID: $string;
 /**
  * @category type id
  * @since 1.0.0
@@ -1195,7 +1689,7 @@ export declare const FiniteTypeId: unique symbol;
  * @category number filters
  * @since 1.0.0
  */
-export declare const finite: <A extends number>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const finite: <A extends number>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1212,7 +1706,7 @@ export type GreaterThanTypeId = typeof GreaterThanTypeId;
  * @category number filters
  * @since 1.0.0
  */
-export declare const greaterThan: <A extends number>(min: number, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const greaterThan: <A extends number>(min: number, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1229,7 +1723,7 @@ export type GreaterThanOrEqualToTypeId = typeof GreaterThanOrEqualToTypeId;
  * @category number filters
  * @since 1.0.0
  */
-export declare const greaterThanOrEqualTo: <A extends number>(min: number, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const greaterThanOrEqualTo: <A extends number>(min: number, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1239,7 +1733,7 @@ export declare const MultipleOfTypeId: unique symbol;
  * @category number filters
  * @since 1.0.0
  */
-export declare const multipleOf: <A extends number>(divisor: number, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const multipleOf: <A extends number>(divisor: number, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1254,7 +1748,7 @@ export type IntTypeId = typeof IntTypeId;
  * @category number filters
  * @since 1.0.0
  */
-export declare const int: <A extends number>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const int: <A extends number>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1271,7 +1765,7 @@ export type LessThanTypeId = typeof LessThanTypeId;
  * @category number filters
  * @since 1.0.0
  */
-export declare const lessThan: <A extends number>(max: number, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lessThan: <A extends number>(max: number, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1288,7 +1782,7 @@ export type LessThanOrEqualToTypeId = typeof LessThanOrEqualToTypeId;
  * @category number filters
  * @since 1.0.0
  */
-export declare const lessThanOrEqualTo: <A extends number>(max: number, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lessThanOrEqualTo: <A extends number>(max: number, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1305,7 +1799,7 @@ export type BetweenTypeId = typeof BetweenTypeId;
  * @category number filters
  * @since 1.0.0
  */
-export declare const between: <A extends number>(min: number, max: number, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const between: <A extends number>(min: number, max: number, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1315,27 +1809,27 @@ export declare const NonNaNTypeId: unique symbol;
  * @category number filters
  * @since 1.0.0
  */
-export declare const nonNaN: <A extends number>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const nonNaN: <A extends number>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category number filters
  * @since 1.0.0
  */
-export declare const positive: <A extends number>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const positive: <A extends number>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category number filters
  * @since 1.0.0
  */
-export declare const negative: <A extends number>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const negative: <A extends number>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category number filters
  * @since 1.0.0
  */
-export declare const nonPositive: <A extends number>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const nonPositive: <A extends number>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category number filters
  * @since 1.0.0
  */
-export declare const nonNegative: <A extends number>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const nonNegative: <A extends number>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * Clamps a number between a minimum and a maximum value.
  *
@@ -1343,6 +1837,12 @@ export declare const nonNegative: <A extends number>(options?: FilterAnnotations
  * @since 1.0.0
  */
 export declare const clamp: (minimum: number, maximum: number) => <R, I, A extends number>(self: Schema<A, I, R>) => Schema<A, I, R>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface NumberFromString extends Annotable<NumberFromString, number, string> {
+}
 /**
  * This schema transforms a `string` into a `number` by parsing the string using the `Number` function.
  *
@@ -1353,42 +1853,42 @@ export declare const clamp: (minimum: number, maximum: number) => <R, I, A exten
  * @category number constructors
  * @since 1.0.0
  */
-export declare const NumberFromString: Schema<number, string>;
+export declare const NumberFromString: NumberFromString;
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export declare const Finite: Schema<number>;
+export declare const Finite: $number;
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export declare const Int: Schema<number>;
+export declare const Int: $number;
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export declare const NonNaN: Schema<number>;
+export declare const NonNaN: $number;
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export declare const Positive: Schema<number>;
+export declare const Positive: $number;
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export declare const Negative: Schema<number>;
+export declare const Negative: $number;
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export declare const NonPositive: Schema<number>;
+export declare const NonPositive: $number;
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export declare const NonNegative: Schema<number>;
+export declare const NonNegative: $number;
 /**
  * @category type id
  * @since 1.0.0
@@ -1412,19 +1912,31 @@ export declare const JsonNumberTypeId: unique symbol;
  * @category number constructors
  * @since 1.0.0
  */
-export declare const JsonNumber: Schema<number>;
+export declare const JsonNumber: $number;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface Not extends Annotable<Not, boolean> {
+}
 /**
  * @category boolean transformations
  * @since 1.0.0
  */
-export declare const Not: Schema<boolean>;
+export declare const Not: Not;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $symbol extends Annotable<$symbol, symbol, string> {
+}
 /**
  * This schema transforms a `string` into a `symbol`.
  *
  * @category symbol transformations
  * @since 1.0.0
  */
-export declare const symbol: Schema<symbol, string>;
+export declare const symbol: $symbol;
 /**
  * @category type id
  * @since 1.0.0
@@ -1439,7 +1951,7 @@ export type GreaterThanBigintTypeId = typeof GreaterThanBigintTypeId;
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const greaterThanBigint: <A extends bigint>(min: bigint, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const greaterThanBigint: <A extends bigint>(min: bigint, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1454,7 +1966,7 @@ export type GreaterThanOrEqualToBigintTypeId = typeof GreaterThanOrEqualToBigint
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const greaterThanOrEqualToBigint: <A extends bigint>(min: bigint, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const greaterThanOrEqualToBigint: <A extends bigint>(min: bigint, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1469,7 +1981,7 @@ export type LessThanBigintTypeId = typeof LessThanBigintTypeId;
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const lessThanBigint: <A extends bigint>(max: bigint, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lessThanBigint: <A extends bigint>(max: bigint, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1484,7 +1996,7 @@ export type LessThanOrEqualToBigintTypeId = typeof LessThanOrEqualToBigintTypeId
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const lessThanOrEqualToBigint: <A extends bigint>(max: bigint, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lessThanOrEqualToBigint: <A extends bigint>(max: bigint, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1499,27 +2011,27 @@ export type BetweenBigintTypeId = typeof BetweenBigintTypeId;
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const betweenBigint: <A extends bigint>(min: bigint, max: bigint, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const betweenBigint: <A extends bigint>(min: bigint, max: bigint, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const positiveBigint: <A extends bigint>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const positiveBigint: <A extends bigint>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const negativeBigint: <A extends bigint>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const negativeBigint: <A extends bigint>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const nonNegativeBigint: <A extends bigint>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const nonNegativeBigint: <A extends bigint>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const nonPositiveBigint: <A extends bigint>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const nonPositiveBigint: <A extends bigint>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * Clamps a bigint between a minimum and a maximum value.
  *
@@ -1527,6 +2039,12 @@ export declare const nonPositiveBigint: <A extends bigint>(options?: FilterAnnot
  * @since 1.0.0
  */
 export declare const clampBigint: (minimum: bigint, maximum: bigint) => <R, I, A extends bigint>(self: Schema<A, I, R>) => Schema<A, I, R>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $bigint extends Annotable<$bigint, bigint, string> {
+}
 /**
  * This schema transforms a `string` into a `bigint` by parsing the string using the `BigInt` function.
  *
@@ -1535,7 +2053,7 @@ export declare const clampBigint: (minimum: bigint, maximum: bigint) => <R, I, A
  * @category bigint transformations
  * @since 1.0.0
  */
-export declare const bigint: Schema<bigint, string>;
+export declare const bigint: $bigint;
 /**
  * @category bigint constructors
  * @since 1.0.0
@@ -1576,6 +2094,12 @@ export declare const NonNegativeBigintFromSelf: Schema<bigint>;
  * @since 1.0.0
  */
 export declare const NonNegativeBigint: Schema<bigint, string>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface BigintFromNumber extends Annotable<BigintFromNumber, bigint, number> {
+}
 /**
  * This schema transforms a `number` into a `bigint` by parsing the number using the `BigInt` function.
  *
@@ -1584,26 +2108,48 @@ export declare const NonNegativeBigint: Schema<bigint, string>;
  * @category bigint transformations
  * @since 1.0.0
  */
-export declare const BigintFromNumber: Schema<bigint, number>;
+export declare const BigintFromNumber: BigintFromNumber;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface SecretFromSelf extends Annotable<SecretFromSelf, _secret.Secret> {
+}
 /**
  * @category Secret constructors
  * @since 1.0.0
  */
-export declare const SecretFromSelf: Schema<Secret.Secret>;
-declare const _Secret: Schema<Secret.Secret, string>;
-export { 
+export declare const SecretFromSelf: SecretFromSelf;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface Secret extends Annotable<Secret, _secret.Secret, string> {
+}
 /**
  * A schema that transforms a `string` into a `Secret`.
  *
  * @category Secret transformations
  * @since 1.0.0
  */
-_Secret as Secret };
+export declare const Secret: Secret;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface DurationFromSelf extends Annotable<DurationFromSelf, _duration.Duration> {
+}
 /**
  * @category Duration constructors
  * @since 1.0.0
  */
-export declare const DurationFromSelf: Schema<Duration.Duration>;
+export declare const DurationFromSelf: DurationFromSelf;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface DurationFromNanos extends Annotable<DurationFromNanos, _duration.Duration, bigint> {
+}
 /**
  * A schema that transforms a `bigint` tuple into a `Duration`.
  * Treats the value as the number of nanoseconds.
@@ -1611,7 +2157,13 @@ export declare const DurationFromSelf: Schema<Duration.Duration>;
  * @category Duration transformations
  * @since 1.0.0
  */
-export declare const DurationFromNanos: Schema<Duration.Duration, bigint>;
+export declare const DurationFromNanos: DurationFromNanos;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface DurationFromMillis extends Annotable<DurationFromMillis, _duration.Duration, number> {
+}
 /**
  * A schema that transforms a `number` tuple into a `Duration`.
  * Treats the value as the number of milliseconds.
@@ -1619,23 +2171,27 @@ export declare const DurationFromNanos: Schema<Duration.Duration, bigint>;
  * @category Duration transformations
  * @since 1.0.0
  */
-export declare const DurationFromMillis: Schema<Duration.Duration, number>;
-declare const _Duration: Schema<Duration.Duration, readonly [seconds: number, nanos: number]>;
-export { 
+export declare const DurationFromMillis: DurationFromMillis;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface Duration extends Annotable<Duration, _duration.Duration, readonly [seconds: number, nanos: number]> {
+}
 /**
  * A schema that transforms a `[number, number]` tuple into a `Duration`.
  *
  * @category Duration transformations
  * @since 1.0.0
  */
-_Duration as Duration };
+export declare const Duration: Duration;
 /**
  * Clamps a `Duration` between a minimum and a maximum value.
  *
  * @category Duration transformations
  * @since 1.0.0
  */
-export declare const clampDuration: (minimum: Duration.DurationInput, maximum: Duration.DurationInput) => <R, I, A extends Duration.Duration>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const clampDuration: (minimum: _duration.DurationInput, maximum: _duration.DurationInput) => <R, I, A extends _duration.Duration>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1645,7 +2201,7 @@ export declare const LessThanDurationTypeId: unique symbol;
  * @category Duration filters
  * @since 1.0.0
  */
-export declare const lessThanDuration: <A extends Duration.Duration>(max: Duration.DurationInput, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lessThanDuration: <A extends _duration.Duration>(max: _duration.DurationInput, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1655,7 +2211,7 @@ export declare const LessThanOrEqualToDurationTypeId: unique symbol;
  * @category Duration filters
  * @since 1.0.0
  */
-export declare const lessThanOrEqualToDuration: <A extends Duration.Duration>(max: Duration.DurationInput, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lessThanOrEqualToDuration: <A extends _duration.Duration>(max: _duration.DurationInput, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1665,7 +2221,7 @@ export declare const GreaterThanDurationTypeId: unique symbol;
  * @category Duration filters
  * @since 1.0.0
  */
-export declare const greaterThanDuration: <A extends Duration.Duration>(min: Duration.DurationInput, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const greaterThanDuration: <A extends _duration.Duration>(min: _duration.DurationInput, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1675,7 +2231,7 @@ export declare const GreaterThanOrEqualToDurationTypeId: unique symbol;
  * @category Duration filters
  * @since 1.0.0
  */
-export declare const greaterThanOrEqualToDuration: <A extends Duration.Duration>(min: Duration.DurationInput, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const greaterThanOrEqualToDuration: <A extends _duration.Duration>(min: _duration.DurationInput, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1685,7 +2241,7 @@ export declare const BetweenDurationTypeId: unique symbol;
  * @category Duration filters
  * @since 1.0.0
  */
-export declare const betweenDuration: <A extends Duration.Duration>(minimum: Duration.DurationInput, maximum: Duration.DurationInput, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const betweenDuration: <A extends _duration.Duration>(minimum: _duration.DurationInput, maximum: _duration.DurationInput, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category Uint8Array constructors
  * @since 1.0.0
@@ -1729,7 +2285,7 @@ export type MinItemsTypeId = typeof MinItemsTypeId;
  * @category ReadonlyArray filters
  * @since 1.0.0
  */
-export declare const minItems: <A>(n: number, options?: FilterAnnotations<readonly A[]> | undefined) => <I, R>(self: Schema<readonly A[], I, R>) => Schema<readonly A[], I, R>;
+export declare const minItems: <A>(n: number, annotations?: FilterAnnotations<readonly A[]> | undefined) => <I, R>(self: Schema<readonly A[], I, R>) => Schema<readonly A[], I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1744,7 +2300,7 @@ export type MaxItemsTypeId = typeof MaxItemsTypeId;
  * @category ReadonlyArray filters
  * @since 1.0.0
  */
-export declare const maxItems: <A>(n: number, options?: FilterAnnotations<readonly A[]> | undefined) => <I, R>(self: Schema<readonly A[], I, R>) => Schema<readonly A[], I, R>;
+export declare const maxItems: <A>(n: number, annotations?: FilterAnnotations<readonly A[]> | undefined) => <I, R>(self: Schema<readonly A[], I, R>) => Schema<readonly A[], I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1759,7 +2315,7 @@ export type ItemsCountTypeId = typeof ItemsCountTypeId;
  * @category ReadonlyArray filters
  * @since 1.0.0
  */
-export declare const itemsCount: <A>(n: number, options?: FilterAnnotations<readonly A[]> | undefined) => <I, R>(self: Schema<readonly A[], I, R>) => Schema<readonly A[], I, R>;
+export declare const itemsCount: <A>(n: number, annotations?: FilterAnnotations<readonly A[]> | undefined) => <I, R>(self: Schema<readonly A[], I, R>) => Schema<readonly A[], I, R>;
 /**
  * @category ReadonlyArray transformations
  * @since 1.0.0
@@ -1795,7 +2351,7 @@ export declare const ValidDateTypeId: unique symbol;
  * @category Date filters
  * @since 1.0.0
  */
-export declare const validDate: (options?: FilterAnnotations<Date>) => <I, R>(self: Schema<Date, I, R>) => Schema<Date, I, R>;
+export declare const validDate: (annotations?: FilterAnnotations<Date>) => <I, R>(self: Schema<Date, I, R>) => Schema<Date, I, R>;
 /**
  * Represents a schema for handling potentially **invalid** `Date` instances (e.g., `new Date("Invalid Date")` is not rejected).
  *
@@ -1830,42 +2386,72 @@ _Date as Date };
  * @category Option utils
  * @since 1.0.0
  */
-export type OptionFrom<I> = {
+export type OptionEncoded<I> = {
     readonly _tag: "None";
 } | {
     readonly _tag: "Some";
     readonly value: I;
 };
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface optionFromSelf<Value extends Schema.Any> extends Annotable<optionFromSelf<Value>, Option.Option<Schema.Type<Value>>, Option.Option<Schema.Encoded<Value>>, Schema.Context<Value>> {
+}
 /**
  * @category Option transformations
  * @since 1.0.0
  */
-export declare const optionFromSelf: <A, I, R>(value: Schema<A, I, R>) => Schema<Option.Option<A>, Option.Option<I>, R>;
+export declare const optionFromSelf: <Value extends Schema.Any>(value: Value) => optionFromSelf<Value>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface option<Value extends Schema.Any> extends Annotable<option<Value>, Option.Option<Schema.Type<Value>>, OptionEncoded<Schema.Encoded<Value>>, Schema.Context<Value>> {
+}
 /**
  * @category Option transformations
  * @since 1.0.0
  */
-export declare const option: <A, I, R>(value: Schema<A, I, R>) => Schema<Option.Option<A>, OptionFrom<I>, R>;
+export declare const option: <Value extends Schema.Any>(value: Value) => option<Value>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface optionFromNullable<Value extends Schema.Any> extends Annotable<optionFromNullable<Value>, Option.Option<Schema.Type<Value>>, Schema.Encoded<Value> | null, Schema.Context<Value>> {
+}
 /**
  * @category Option transformations
  * @since 1.0.0
  */
-export declare const optionFromNullable: <A, I, R>(value: Schema<A, I, R>) => Schema<Option.Option<A>, I | null, R>;
+export declare const optionFromNullable: <Value extends Schema.Any>(value: Value) => optionFromNullable<Value>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface optionFromNullish<Value extends Schema.Any> extends Annotable<optionFromNullish<Value>, Option.Option<Schema.Type<Value>>, Schema.Encoded<Value> | null | undefined, Schema.Context<Value>> {
+}
 /**
  * @category Option transformations
  * @since 1.0.0
  */
-export declare const optionFromNullish: <A, I, R>(value: Schema<A, I, R>, onNoneEncoding: null | undefined) => Schema<Option.Option<A>, I | null | undefined, R>;
+export declare const optionFromNullish: <Value extends Schema.Any>(value: Value, onNoneEncoding: null | undefined) => optionFromNullish<Value>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface optionFromOrUndefined<Value extends Schema.Any> extends Annotable<optionFromOrUndefined<Value>, Option.Option<Schema.Type<Value>>, Schema.Encoded<Value> | undefined, Schema.Context<Value>> {
+}
 /**
  * @category Option transformations
  * @since 1.0.0
  */
-export declare const optionFromOrUndefined: <A, I, R>(value: Schema<A, I, R>) => Schema<Option.Option<A>, I | undefined, R>;
+export declare const optionFromOrUndefined: <Value extends Schema.Any>(value: Value) => optionFromOrUndefined<Value>;
 /**
  * @category Either utils
  * @since 1.0.0
  */
-export type RightFrom<IA> = {
+export type RightEncoded<IA> = {
     readonly _tag: "Right";
     readonly right: IA;
 };
@@ -1873,7 +2459,7 @@ export type RightFrom<IA> = {
  * @category Either utils
  * @since 1.0.0
  */
-export type LeftFrom<IE> = {
+export type LeftEncoded<IE> = {
     readonly _tag: "Left";
     readonly left: IE;
 };
@@ -1881,23 +2467,41 @@ export type LeftFrom<IE> = {
  * @category Either utils
  * @since 1.0.0
  */
-export type EitherFrom<IE, IA> = LeftFrom<IE> | RightFrom<IA>;
+export type EitherEncoded<IR, IL> = RightEncoded<IR> | LeftEncoded<IL>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface eitherFromSelf<R extends Schema.Any, L extends Schema.Any> extends Annotable<eitherFromSelf<R, L>, Either.Either<Schema.Type<R>, Schema.Type<L>>, Either.Either<Schema.Encoded<R>, Schema.Encoded<L>>, Schema.Context<R> | Schema.Context<L>> {
+}
 /**
  * @category Either transformations
  * @since 1.0.0
  */
-export declare const eitherFromSelf: <E, IE, RE, A, IA, RA>({ left, right }: {
-    readonly left: Schema<E, IE, RE>;
-    readonly right: Schema<A, IA, RA>;
-}) => Schema<Either.Either<A, E>, Either.Either<IA, IE>, RE | RA>;
+export declare const eitherFromSelf: <R extends Schema.Any, L extends Schema.Any>({ left, right }: {
+    readonly left: L;
+    readonly right: R;
+}) => eitherFromSelf<R, L>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface either<R extends Schema.Any, L extends Schema.Any> extends Annotable<either<R, L>, Either.Either<Schema.Type<R>, Schema.Type<L>>, EitherEncoded<Schema.Encoded<R>, Schema.Encoded<L>>, Schema.Context<R> | Schema.Context<L>> {
+}
 /**
  * @category Either transformations
  * @since 1.0.0
  */
-export declare const either: <E, IE, R1, A, IA, R2>({ left, right }: {
-    readonly left: Schema<E, IE, R1>;
-    readonly right: Schema<A, IA, R2>;
-}) => Schema<Either.Either<A, E>, EitherFrom<IE, IA>, R1 | R2>;
+export declare const either: <R extends Schema.Any, L extends Schema.Any>({ left, right }: {
+    readonly left: L;
+    readonly right: R;
+}) => either<R, L>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface eitherFromUnion<R extends Schema.Any, L extends Schema.Any> extends Annotable<eitherFromUnion<R, L>, Either.Either<Schema.Type<R>, Schema.Type<L>>, Schema.Encoded<R> | Schema.Encoded<L>, Schema.Context<R> | Schema.Context<L>> {
+}
 /**
  * @example
  * import * as Schema from "@effect/schema/Schema"
@@ -1908,58 +2512,88 @@ export declare const either: <E, IE, R1, A, IA, R2>({ left, right }: {
  * @category Either transformations
  * @since 1.0.0
  */
-export declare const eitherFromUnion: <EA, EI, R1, AA, AI, R2>({ left, right }: {
-    readonly left: Schema<EA, EI, R1>;
-    readonly right: Schema<AA, AI, R2>;
-}) => Schema<Either.Either<AA, EA>, EI | AI, R1 | R2>;
+export declare const eitherFromUnion: <R extends Schema.Any, L extends Schema.Any>({ left, right }: {
+    readonly left: L;
+    readonly right: R;
+}) => eitherFromUnion<R, L>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface readonlyMapFromSelf<K extends Schema.Any, V extends Schema.Any> extends Annotable<readonlyMapFromSelf<K, V>, ReadonlyMap<Schema.Type<K>, Schema.Type<V>>, ReadonlyMap<Schema.Encoded<K>, Schema.Encoded<V>>, Schema.Context<K> | Schema.Context<V>> {
+}
 /**
  * @category ReadonlyMap transformations
  * @since 1.0.0
  */
-export declare const readonlyMapFromSelf: <K, IK, RK, V, IV, RV>({ key, value }: {
-    readonly key: Schema<K, IK, RK>;
-    readonly value: Schema<V, IV, RV>;
-}) => Schema<ReadonlyMap<K, V>, ReadonlyMap<IK, IV>, RK | RV>;
+export declare const readonlyMapFromSelf: <K extends Schema.Any, V extends Schema.Any>({ key, value }: {
+    readonly key: K;
+    readonly value: V;
+}) => readonlyMapFromSelf<K, V>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface readonlyMap<K extends Schema.Any, V extends Schema.Any> extends Annotable<readonlyMap<K, V>, ReadonlyMap<Schema.Type<K>, Schema.Type<V>>, ReadonlyArray<readonly [Schema.Encoded<K>, Schema.Encoded<V>]>, Schema.Context<K> | Schema.Context<V>> {
+}
 /**
  * @category ReadonlyMap transformations
  * @since 1.0.0
  */
-export declare const readonlyMap: <K, IK, RK, V, IV, RV>({ key, value }: {
-    readonly key: Schema<K, IK, RK>;
-    readonly value: Schema<V, IV, RV>;
-}) => Schema<ReadonlyMap<K, V>, readonly (readonly [IK, IV])[], RK | RV>;
+export declare const readonlyMap: <K extends Schema.Any, V extends Schema.Any>({ key, value }: {
+    readonly key: K;
+    readonly value: V;
+}) => readonlyMap<K, V>;
 /**
- * @category ReadonlySet transformations
+ * @category api interface
  * @since 1.0.0
  */
-export declare const readonlySetFromSelf: <A, I, R>(item: Schema<A, I, R>) => Schema<ReadonlySet<A>, ReadonlySet<I>, R>;
+export interface readonlySetFromSelf<Value extends Schema.Any> extends Annotable<readonlySetFromSelf<Value>, ReadonlySet<Schema.Type<Value>>, ReadonlySet<Schema.Encoded<Value>>, Schema.Context<Value>> {
+}
 /**
  * @category ReadonlySet transformations
  * @since 1.0.0
  */
-export declare const readonlySet: <A, I, R>(item: Schema<A, I, R>) => Schema<ReadonlySet<A>, readonly I[], R>;
+export declare const readonlySetFromSelf: <Value extends Schema.Any>(value: Value) => readonlySetFromSelf<Value>;
 /**
- * @category SortedSet transformations
+ * @category api interface
  * @since 1.0.0
  */
-export declare const sortedSetFromSelf: <A, I, R>(item: Schema<A, I, R>, ordA: Order.Order<A>, ordI: Order.Order<I>) => Schema<SortedSet.SortedSet<A>, SortedSet.SortedSet<I>, R>;
+export interface readonlySet<Value extends Schema.Any> extends Annotable<readonlySet<Value>, ReadonlySet<Schema.Type<Value>>, ReadonlyArray<Schema.Encoded<Value>>, Schema.Context<Value>> {
+}
 /**
- * @category SortedSet transformations
+ * @category ReadonlySet transformations
+ * @since 1.0.0
+ */
+export declare const readonlySet: <Value extends Schema.Any>(value: Value) => readonlySet<Value>;
+/**
+ * @category api interface
  * @since 1.0.0
  */
-export declare const sortedSet: <A, I, R>(item: Schema<A, I, R>, ordA: Order.Order<A>) => Schema<SortedSet.SortedSet<A>, readonly I[], R>;
+export interface BigDecimalFromSelf extends Annotable<BigDecimalFromSelf, _bigDecimal.BigDecimal> {
+}
 /**
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export declare const BigDecimalFromSelf: Schema<BigDecimal.BigDecimal>;
-declare const _BigDecimal: Schema<BigDecimal.BigDecimal, string>;
-export { 
+export declare const BigDecimalFromSelf: BigDecimalFromSelf;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface BigDecimal extends Annotable<BigDecimal, _bigDecimal.BigDecimal, string> {
+}
 /**
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-_BigDecimal as BigDecimal };
+export declare const BigDecimal: BigDecimal;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface BigDecimalFromNumber extends Annotable<BigDecimalFromNumber, _bigDecimal.BigDecimal, number> {
+}
 /**
  * A schema that transforms a `number` into a `BigDecimal`.
  * When encoding, this Schema will produce incorrect results if the BigDecimal exceeds the 64-bit range of a number.
@@ -1967,7 +2601,7 @@ _BigDecimal as BigDecimal };
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-export declare const BigDecimalFromNumber: Schema<BigDecimal.BigDecimal, number>;
+export declare const BigDecimalFromNumber: BigDecimalFromNumber;
 /**
  * @category type id
  * @since 1.0.0
@@ -1977,7 +2611,7 @@ export declare const GreaterThanBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const greaterThanBigDecimal: <A extends BigDecimal.BigDecimal>(min: BigDecimal.BigDecimal, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const greaterThanBigDecimal: <A extends _bigDecimal.BigDecimal>(min: _bigDecimal.BigDecimal, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1987,7 +2621,7 @@ export declare const GreaterThanOrEqualToBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const greaterThanOrEqualToBigDecimal: <A extends BigDecimal.BigDecimal>(min: BigDecimal.BigDecimal, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const greaterThanOrEqualToBigDecimal: <A extends _bigDecimal.BigDecimal>(min: _bigDecimal.BigDecimal, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1997,7 +2631,7 @@ export declare const LessThanBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const lessThanBigDecimal: <A extends BigDecimal.BigDecimal>(max: BigDecimal.BigDecimal, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lessThanBigDecimal: <A extends _bigDecimal.BigDecimal>(max: _bigDecimal.BigDecimal, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2007,7 +2641,7 @@ export declare const LessThanOrEqualToBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const lessThanOrEqualToBigDecimal: <A extends BigDecimal.BigDecimal>(max: BigDecimal.BigDecimal, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lessThanOrEqualToBigDecimal: <A extends _bigDecimal.BigDecimal>(max: _bigDecimal.BigDecimal, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2017,12 +2651,12 @@ export declare const PositiveBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const positiveBigDecimal: <A extends BigDecimal.BigDecimal>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const positiveBigDecimal: <A extends _bigDecimal.BigDecimal>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export declare const PositiveBigDecimalFromSelf: Schema<BigDecimal.BigDecimal, BigDecimal.BigDecimal, never>;
+export declare const PositiveBigDecimalFromSelf: Schema<_bigDecimal.BigDecimal, _bigDecimal.BigDecimal, never>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2032,12 +2666,12 @@ export declare const NonNegativeBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const nonNegativeBigDecimal: <A extends BigDecimal.BigDecimal>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const nonNegativeBigDecimal: <A extends _bigDecimal.BigDecimal>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export declare const NonNegativeBigDecimalFromSelf: Schema<BigDecimal.BigDecimal, BigDecimal.BigDecimal, never>;
+export declare const NonNegativeBigDecimalFromSelf: Schema<_bigDecimal.BigDecimal, _bigDecimal.BigDecimal, never>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2047,12 +2681,12 @@ export declare const NegativeBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const negativeBigDecimal: <A extends BigDecimal.BigDecimal>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const negativeBigDecimal: <A extends _bigDecimal.BigDecimal>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export declare const NegativeBigDecimalFromSelf: Schema<BigDecimal.BigDecimal, BigDecimal.BigDecimal, never>;
+export declare const NegativeBigDecimalFromSelf: Schema<_bigDecimal.BigDecimal, _bigDecimal.BigDecimal, never>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2062,12 +2696,12 @@ export declare const NonPositiveBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const nonPositiveBigDecimal: <A extends BigDecimal.BigDecimal>(options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const nonPositiveBigDecimal: <A extends _bigDecimal.BigDecimal>(annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export declare const NonPositiveBigDecimalFromSelf: Schema<BigDecimal.BigDecimal, BigDecimal.BigDecimal, never>;
+export declare const NonPositiveBigDecimalFromSelf: Schema<_bigDecimal.BigDecimal, _bigDecimal.BigDecimal, never>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2077,31 +2711,43 @@ export declare const BetweenBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const betweenBigDecimal: <A extends BigDecimal.BigDecimal>(minimum: BigDecimal.BigDecimal, maximum: BigDecimal.BigDecimal, options?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const betweenBigDecimal: <A extends _bigDecimal.BigDecimal>(minimum: _bigDecimal.BigDecimal, maximum: _bigDecimal.BigDecimal, annotations?: FilterAnnotations<A> | undefined) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * Clamps a `BigDecimal` between a minimum and a maximum value.
  *
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-export declare const clampBigDecimal: (minimum: BigDecimal.BigDecimal, maximum: BigDecimal.BigDecimal) => <R, I, A extends BigDecimal.BigDecimal>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const clampBigDecimal: (minimum: _bigDecimal.BigDecimal, maximum: _bigDecimal.BigDecimal) => <R, I, A extends _bigDecimal.BigDecimal>(self: Schema<A, I, R>) => Schema<A, I, R>;
 /**
  * Negates a `BigDecimal`.
  *
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-export declare const negateBigDecimal: <R, I, A extends BigDecimal.BigDecimal>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const negateBigDecimal: <R, I, A extends _bigDecimal.BigDecimal>(self: Schema<A, I, R>) => Schema<A, I, R>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface chunkFromSelf<Value extends Schema.Any> extends Annotable<chunkFromSelf<Value>, Chunk.Chunk<Schema.Type<Value>>, Chunk.Chunk<Schema.Encoded<Value>>, Schema.Context<Value>> {
+}
 /**
  * @category Chunk transformations
  * @since 1.0.0
  */
-export declare const chunkFromSelf: <A, I, R>(item: Schema<A, I, R>) => Schema<Chunk.Chunk<A>, Chunk.Chunk<I>, R>;
+export declare const chunkFromSelf: <Value extends Schema.Any>(value: Value) => chunkFromSelf<Value>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface chunk<Value extends Schema.Any> extends Annotable<chunk<Value>, Chunk.Chunk<Schema.Type<Value>>, ReadonlyArray<Schema.Encoded<Value>>, Schema.Context<Value>> {
+}
 /**
  * @category Chunk transformations
  * @since 1.0.0
  */
-export declare const chunk: <A, I, R>(item: Schema<A, I, R>) => Schema<Chunk.Chunk<A>, readonly I[], R>;
+export declare const chunk: <Value extends Schema.Any>(value: Value) => chunk<Value>;
 /**
  * @category Data transformations
  * @since 1.0.0
@@ -2114,45 +2760,78 @@ export declare const dataFromSelf: <R, I extends readonly any[] | Readonly<Recor
 export declare const data: <R, I extends readonly any[] | Readonly<Record<string, any>>, A extends readonly any[] | Readonly<Record<string, any>>>(item: Schema<A, I, R>) => Schema<A, I, R>;
 type MissingSelfGeneric<Usage extends string, Params extends string = ""> = `Missing \`Self\` generic - use \`class Self extends ${Usage}<Self>()(${Params}{ ... })\``;
 /**
- * @category classes
  * @since 1.0.0
  */
-export interface Class<A, I, R, C, Self, Inherited = {}, Proto = {}> extends Schema<Self, I, R> {
-    new (props: Equals<C, {}> extends true ? void | {} : C, disableValidation?: boolean | undefined): A & Omit<Inherited, keyof A> & Proto;
-    readonly struct: Schema<A, I, R>;
-    readonly extend: <Extended = "Effect.orDie">() => <FieldsB extends StructFields>(fields: FieldsB) => [Extended] extends ["Effect.orDie"] ? MissingSelfGeneric<"Base.extend"> : Class<Simplify<Omit<A, keyof FieldsB> & ToStruct<FieldsB>>, Simplify<Omit<I, keyof FieldsB> & FromStruct<FieldsB>>, R | Schema.Context<FieldsB[keyof FieldsB]>, Simplify<Omit<C, keyof FieldsB> & ToStruct<FieldsB>>, Extended, Self, Proto>;
-    readonly transformOrFail: <Transformed = "Effect.orDie">() => <FieldsB extends StructFields, R2, R3>(fields: FieldsB, decode: (input: A, options: ParseOptions, ast: AST.Transform) => Effect.Effect<Omit<A, keyof FieldsB> & ToStruct<FieldsB>, ParseResult.ParseIssue, R2>, encode: (input: Simplify<Omit<A, keyof FieldsB> & ToStruct<FieldsB>>, options: ParseOptions, ast: AST.Transform) => Effect.Effect<A, ParseResult.ParseIssue, R3>) => [Transformed] extends ["Effect.orDie"] ? MissingSelfGeneric<"Base.transform"> : Class<Simplify<Omit<A, keyof FieldsB> & ToStruct<FieldsB>>, I, R | Schema.Context<FieldsB[keyof FieldsB]> | R2 | R3, Simplify<Omit<C, keyof FieldsB> & ToStruct<FieldsB>>, Transformed, Self, Proto>;
-    readonly transformOrFailFrom: <Transformed = "Effect.orDie">() => <FieldsB extends StructFields, R2, R3>(fields: FieldsB, decode: (input: I, options: ParseOptions, ast: AST.Transform) => Effect.Effect<Omit<I, keyof FieldsB> & FromStruct<FieldsB>, ParseResult.ParseIssue, R2>, encode: (input: Simplify<Omit<I, keyof FieldsB> & FromStruct<FieldsB>>, options: ParseOptions, ast: AST.Transform) => Effect.Effect<I, ParseResult.ParseIssue, R3>) => [Transformed] extends ["Effect.orDie"] ? MissingSelfGeneric<"Base.transformFrom"> : Class<Simplify<Omit<A, keyof FieldsB> & ToStruct<FieldsB>>, I, R | Schema.Context<FieldsB[keyof FieldsB]> | R2 | R3, Simplify<Omit<C, keyof FieldsB> & ToStruct<FieldsB>>, Transformed, Self, Proto>;
+export type ToOptionalConstructorKeys<Fields> = {
+    [K in keyof Fields]: Fields[K] extends PropertySignature<any, any, any, any, any, true, any> ? K : never;
+}[keyof Fields];
+/**
+ * @since 1.0.0
+ */
+export type ToStructConstructor<F extends Struct.Fields, OptionalKeys extends PropertyKey = Struct.TypeTokenKeys<F>> = {
+    readonly [K in Exclude<keyof F, ToOptionalConstructorKeys<F> | OptionalKeys>]: Schema.Type<F[K]>;
+} & {
+    readonly [K in OptionalKeys]?: Schema.Type<F[K]>;
+} & {
+    readonly [K in ToOptionalConstructorKeys<F>]?: Schema.Type<F[K]>;
+};
+type _OptionalKeys<O> = {
+    [K in keyof O]-?: {} extends Pick<O, K> ? K : never;
+}[keyof O];
+type FilterOptionalKeys<A> = Omit<A, _OptionalKeys<A>>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface Class<Self, Fields extends Struct.Fields, A, I, R, C, Inherited, Proto> extends Schema<Self, I, R> {
+    new (props: Equals<C, {}> extends true ? void | {} : Equals<FilterOptionalKeys<C>, {}> extends true ? void | C : C, disableValidation?: boolean | undefined): A & Omit<Inherited, keyof A> & Proto;
+    readonly fields: Simplify<Fields>;
+    readonly extend: <Extended = never>(identifier?: string | undefined) => <newFields extends Struct.Fields>(fields: newFields, annotations?: Annotations<Extended>) => [Extended] extends [never] ? MissingSelfGeneric<"Base.extend"> : Class<Extended, Fields & newFields, Simplify<A & Struct.Type<newFields>>, Simplify<I & Struct.Encoded<newFields>>, R | Struct.Context<newFields>, Simplify<C & ToStructConstructor<newFields>>, Self, Proto>;
+    readonly transformOrFail: <Transformed = never>(identifier?: string | undefined) => <newFields extends Struct.Fields, R2, R3>(fields: newFields, decode: (input: A, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<Simplify<A & Struct.Type<newFields>>, ParseResult.ParseIssue, R2>, encode: (input: Simplify<A & Struct.Type<newFields>>, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<A, ParseResult.ParseIssue, R3>) => [Transformed] extends [never] ? MissingSelfGeneric<"Base.transform"> : Class<Transformed, Fields & newFields, Simplify<A & Struct.Type<newFields>>, I, R | Struct.Context<newFields> | R2 | R3, Simplify<C & ToStructConstructor<newFields>>, Self, Proto>;
+    readonly transformOrFailFrom: <Transformed = never>(identifier?: string | undefined) => <newFields extends Struct.Fields, R2, R3>(fields: newFields, decode: (input: I, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<Simplify<I & Struct.Encoded<newFields>>, ParseResult.ParseIssue, R2>, encode: (input: Simplify<I & Struct.Encoded<newFields>>, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<I, ParseResult.ParseIssue, R3>) => [Transformed] extends [never] ? MissingSelfGeneric<"Base.transformFrom"> : Class<Transformed, Fields & newFields, Simplify<A & Struct.Type<newFields>>, I, R | Struct.Context<newFields> | R2 | R3, Simplify<C & ToStructConstructor<newFields>>, Self, Proto>;
 }
+declare const TAG = "_tag";
 /**
  * @category classes
  * @since 1.0.0
  */
-export declare const Class: <Self = "Effect.orDie">() => <Fields extends StructFields>(fields: Fields) => [Self] extends ["Effect.orDie"] ? "Missing `Self` generic - use `class Self extends Class<Self>()({ ... })`" : Class<Simplify<ToStruct<Fields>>, Simplify<FromStruct<Fields>>, Schema.Context<Fields[keyof Fields]>, Simplify<ToStruct<Fields>>, Self, {}, {}>;
+export declare const Class: <Self = never>(identifier?: string | undefined) => <Fields extends Struct.Fields>(fields: Fields, annotations?: Annotations<Self, readonly []> | undefined) => [Self] extends [never] ? "Missing `Self` generic - use `class Self extends Class<Self>()({ ... })`" : Class<Self, Fields, Struct.Type<Fields, Struct.TypeTokenKeys<Fields>> extends infer T ? { readonly [K in keyof T]: Struct.Type<Fields, Struct.TypeTokenKeys<Fields>>[K]; } : never, Struct.Encoded<Fields, Struct.EncodedTokenKeys<Fields>> extends infer T_1 ? { readonly [K_1 in keyof T_1]: Struct.Encoded<Fields, Struct.EncodedTokenKeys<Fields>>[K_1]; } : never, Schema.Context<Fields[keyof Fields]>, ToStructConstructor<Fields, Struct.TypeTokenKeys<Fields>> extends infer T_2 ? { readonly [K_2 in keyof T_2]: ToStructConstructor<Fields, Struct.TypeTokenKeys<Fields>>[K_2]; } : never, {}, {}>;
 /**
  * @category classes
  * @since 1.0.0
  */
-export declare const TaggedClass: <Self = "Effect.orDie">() => <Tag extends string, Fields extends StructFields>(tag: Tag, fields: Fields) => [Self] extends ["Effect.orDie"] ? "Missing `Self` generic - use `class Self extends TaggedClass<Self>()(\"Tag\", { ... })`" : Class<Simplify<{
+export declare const TaggedClass: <Self = never>(identifier?: string) => <Tag extends string, Fields extends Struct.Fields>(tag: Tag, fields: Fields, annotations?: Annotations<Self, readonly []> | undefined) => [Self] extends [never] ? "Missing `Self` generic - use `class Self extends TaggedClass<Self>()(\"Tag\", { ... })`" : Class<Self, {
+    readonly _tag: literal<[Tag]>;
+} & Fields, {
+    readonly _tag: Tag;
+} & { readonly [K_1 in Exclude<keyof Fields, Struct.TypeTokenKeys<Fields>>]: Schema.Type<Fields[K_1]>; } & { readonly [K_2 in Struct.TypeTokenKeys<Fields>]?: Schema.Type<Fields[K_2]>; } extends infer T ? { readonly [K in keyof T]: ({
+    readonly _tag: Tag;
+} & { readonly [K_1 in Exclude<keyof Fields, Struct.TypeTokenKeys<Fields>>]: Schema.Type<Fields[K_1]>; } & { readonly [K_2 in Struct.TypeTokenKeys<Fields>]?: Schema.Type<Fields[K_2]>; })[K]; } : never, {
     readonly _tag: Tag;
-} & { readonly [K in Exclude<keyof Fields, ToOptionalKeys<Fields>>]: Schema.To<Fields[K]>; } & { readonly [K_1 in ToOptionalKeys<Fields>]?: Schema.To<Fields[K_1]>; }>, Simplify<{
+} & { readonly [K_4 in Exclude<keyof Fields, Struct.EncodedTokenKeys<Fields>> as Struct.Key<Fields, K_4>]: Schema.Encoded<Fields[K_4]>; } & { readonly [K_5 in Struct.EncodedTokenKeys<Fields> as Struct.Key<Fields, K_5>]?: Schema.Encoded<Fields[K_5]>; } extends infer T_1 ? { readonly [K_3 in keyof T_1]: ({
     readonly _tag: Tag;
-} & { readonly [K_2 in Exclude<keyof Fields, FromOptionalKeys<Fields>>]: Schema.From<Fields[K_2]>; } & { readonly [K_3 in FromOptionalKeys<Fields>]?: Schema.From<Fields[K_3]>; }>, Schema.Context<Fields[keyof Fields]>, Simplify<ToStruct<Fields>>, Self, {}, {}>;
+} & { readonly [K_4 in Exclude<keyof Fields, Struct.EncodedTokenKeys<Fields>> as Struct.Key<Fields, K_4>]: Schema.Encoded<Fields[K_4]>; } & { readonly [K_5 in Struct.EncodedTokenKeys<Fields> as Struct.Key<Fields, K_5>]?: Schema.Encoded<Fields[K_5]>; })[K_3]; } : never, Schema.Context<Fields[keyof Fields]>, ToStructConstructor<Fields, Struct.TypeTokenKeys<Fields>> extends infer T_2 ? { readonly [K_6 in keyof T_2]: ToStructConstructor<Fields, Struct.TypeTokenKeys<Fields>>[K_6]; } : never, {}, {}>;
 /**
  * @category classes
  * @since 1.0.0
  */
-export declare const TaggedError: <Self = "Effect.orDie">() => <Tag extends string, Fields extends StructFields>(tag: Tag, fields: Fields) => [Self] extends ["Effect.orDie"] ? "Missing `Self` generic - use `class Self extends TaggedError<Self>()(\"Tag\", { ... })`" : Class<Simplify<{
+export declare const TaggedError: <Self = never>(identifier?: string) => <Tag extends string, Fields extends Struct.Fields>(tag: Tag, fields: Fields, annotations?: Annotations<Self, readonly []> | undefined) => [Self] extends [never] ? "Missing `Self` generic - use `class Self extends TaggedError<Self>()(\"Tag\", { ... })`" : Class<Self, {
+    readonly _tag: literal<[Tag]>;
+} & Fields, {
     readonly _tag: Tag;
-} & { readonly [K in Exclude<keyof Fields, ToOptionalKeys<Fields>>]: Schema.To<Fields[K]>; } & { readonly [K_1 in ToOptionalKeys<Fields>]?: Schema.To<Fields[K_1]>; }>, Simplify<{
+} & { readonly [K_1 in Exclude<keyof Fields, Struct.TypeTokenKeys<Fields>>]: Schema.Type<Fields[K_1]>; } & { readonly [K_2 in Struct.TypeTokenKeys<Fields>]?: Schema.Type<Fields[K_2]>; } extends infer T ? { readonly [K in keyof T]: ({
     readonly _tag: Tag;
-} & { readonly [K_2 in Exclude<keyof Fields, FromOptionalKeys<Fields>>]: Schema.From<Fields[K_2]>; } & { readonly [K_3 in FromOptionalKeys<Fields>]?: Schema.From<Fields[K_3]>; }>, Schema.Context<Fields[keyof Fields]>, Simplify<ToStruct<Fields>>, Self, {}, Cause.YieldableError>;
+} & { readonly [K_1 in Exclude<keyof Fields, Struct.TypeTokenKeys<Fields>>]: Schema.Type<Fields[K_1]>; } & { readonly [K_2 in Struct.TypeTokenKeys<Fields>]?: Schema.Type<Fields[K_2]>; })[K]; } : never, {
+    readonly _tag: Tag;
+} & { readonly [K_4 in Exclude<keyof Fields, Struct.EncodedTokenKeys<Fields>> as Struct.Key<Fields, K_4>]: Schema.Encoded<Fields[K_4]>; } & { readonly [K_5 in Struct.EncodedTokenKeys<Fields> as Struct.Key<Fields, K_5>]?: Schema.Encoded<Fields[K_5]>; } extends infer T_1 ? { readonly [K_3 in keyof T_1]: ({
+    readonly _tag: Tag;
+} & { readonly [K_4 in Exclude<keyof Fields, Struct.EncodedTokenKeys<Fields>> as Struct.Key<Fields, K_4>]: Schema.Encoded<Fields[K_4]>; } & { readonly [K_5 in Struct.EncodedTokenKeys<Fields> as Struct.Key<Fields, K_5>]?: Schema.Encoded<Fields[K_5]>; })[K_3]; } : never, Schema.Context<Fields[keyof Fields]>, ToStructConstructor<Fields, Struct.TypeTokenKeys<Fields>> extends infer T_2 ? { readonly [K_6 in keyof T_2]: ToStructConstructor<Fields, Struct.TypeTokenKeys<Fields>>[K_6]; } : never, {}, Cause.YieldableError>;
 /**
  * @category classes
  * @since 1.0.0
  */
-export interface TaggedRequest<Tag extends string, R, IS, S, RR, IE, E, IA, A> extends Request.Request<A, E>, Serializable.SerializableWithResult<R, IS, S, RR, IE, E, IA, A> {
-    readonly _tag: Tag;
+export interface TaggedRequest<Tag extends string, S, SI, SR, A, AI, E, EI, RR> extends Request.Request<A, E>, Serializable.SerializableWithResult<S, SI, SR, A, AI, E, EI, RR> {
+    readonly [TAG]: Tag;
 }
 /**
  * @category classes
@@ -2163,27 +2842,33 @@ export declare namespace TaggedRequest {
      * @category classes
      * @since 1.0.0
      */
-    type Any = TaggedRequest<string, any, any, any, any, any, any, any, any> | TaggedRequest<string, any, any, any, any, never, never, any, any>;
+    type Any = TaggedRequest<string, any, any, any, any, any, any, any, any> | TaggedRequest<string, any, any, any, any, any, never, never, any>;
 }
 /**
  * @category classes
  * @since 1.0.0
  */
-export declare const TaggedRequest: <Self = "Effect.orDie">() => <Tag extends string, Fields extends StructFields, EA, EI, ER, AA, AI, AR>(tag: Tag, Failure: Schema<EA, EI, ER>, Success: Schema<AA, AI, AR>, fields: Fields) => [Self] extends ["Effect.orDie"] ? "Missing `Self` generic - use `class Self extends TaggedRequest<Self>()(\"Tag\", SuccessSchema, FailureSchema, { ... })`" : Class<Simplify<{
+export declare const TaggedRequest: <Self = never>(identifier?: string) => <Tag extends string, Fields extends Struct.Fields, EA, EI, ER, AA, AI, AR>(tag: Tag, Failure: Schema<EA, EI, ER>, Success: Schema<AA, AI, AR>, fields: Fields, annotations?: Annotations<Self, readonly []> | undefined) => [Self] extends [never] ? "Missing `Self` generic - use `class Self extends TaggedRequest<Self>()(\"Tag\", SuccessSchema, FailureSchema, { ... })`" : Class<Self, {
+    readonly _tag: literal<[Tag]>;
+} & Fields, {
+    readonly _tag: Tag;
+} & { readonly [K_1 in Exclude<keyof Fields, Struct.TypeTokenKeys<Fields>>]: Schema.Type<Fields[K_1]>; } & { readonly [K_2 in Struct.TypeTokenKeys<Fields>]?: Schema.Type<Fields[K_2]>; } extends infer T ? { readonly [K in keyof T]: ({
     readonly _tag: Tag;
-} & { readonly [K in Exclude<keyof Fields, ToOptionalKeys<Fields>>]: Schema.To<Fields[K]>; } & { readonly [K_1 in ToOptionalKeys<Fields>]?: Schema.To<Fields[K_1]>; }>, Simplify<{
+} & { readonly [K_1 in Exclude<keyof Fields, Struct.TypeTokenKeys<Fields>>]: Schema.Type<Fields[K_1]>; } & { readonly [K_2 in Struct.TypeTokenKeys<Fields>]?: Schema.Type<Fields[K_2]>; })[K]; } : never, {
     readonly _tag: Tag;
-} & { readonly [K_2 in Exclude<keyof Fields, FromOptionalKeys<Fields>>]: Schema.From<Fields[K_2]>; } & { readonly [K_3 in FromOptionalKeys<Fields>]?: Schema.From<Fields[K_3]>; }>, Schema.Context<Fields[keyof Fields]>, Simplify<ToStruct<Fields>>, Self, TaggedRequest<Tag, Schema.Context<Fields[keyof Fields]>, Simplify<{
+} & { readonly [K_4 in Exclude<keyof Fields, Struct.EncodedTokenKeys<Fields>> as Struct.Key<Fields, K_4>]: Schema.Encoded<Fields[K_4]>; } & { readonly [K_5 in Struct.EncodedTokenKeys<Fields> as Struct.Key<Fields, K_5>]?: Schema.Encoded<Fields[K_5]>; } extends infer T_1 ? { readonly [K_3 in keyof T_1]: ({
     readonly _tag: Tag;
-} & { readonly [K_2 in Exclude<keyof Fields, FromOptionalKeys<Fields>>]: Schema.From<Fields[K_2]>; } & { readonly [K_3 in FromOptionalKeys<Fields>]?: Schema.From<Fields[K_3]>; }>, Self, ER | AR, EI, EA, AI, AA>, {}>;
+} & { readonly [K_4 in Exclude<keyof Fields, Struct.EncodedTokenKeys<Fields>> as Struct.Key<Fields, K_4>]: Schema.Encoded<Fields[K_4]>; } & { readonly [K_5 in Struct.EncodedTokenKeys<Fields> as Struct.Key<Fields, K_5>]?: Schema.Encoded<Fields[K_5]>; })[K_3]; } : never, Schema.Context<Fields[keyof Fields]>, ToStructConstructor<Fields, Struct.TypeTokenKeys<Fields>> extends infer T_2 ? { readonly [K_6 in keyof T_2]: ToStructConstructor<Fields, Struct.TypeTokenKeys<Fields>>[K_6]; } : never, TaggedRequest<Tag, Self, {
+    readonly _tag: Tag;
+} & { readonly [K_4 in Exclude<keyof Fields, Struct.EncodedTokenKeys<Fields>> as Struct.Key<Fields, K_4>]: Schema.Encoded<Fields[K_4]>; } & { readonly [K_5 in Struct.EncodedTokenKeys<Fields> as Struct.Key<Fields, K_5>]?: Schema.Encoded<Fields[K_5]>; }, Schema.Context<Fields[keyof Fields]>, AA, AI, EA, EI, ER | AR>, {}>;
 /**
  * @category FiberId
  * @since 1.0.0
  */
-export type FiberIdFrom = {
+export type FiberIdEncoded = {
     readonly _tag: "Composite";
-    readonly left: FiberIdFrom;
-    readonly right: FiberIdFrom;
+    readonly left: FiberIdEncoded;
+    readonly right: FiberIdEncoded;
 } | {
     readonly _tag: "None";
 } | {
@@ -2191,23 +2876,33 @@ export type FiberIdFrom = {
     readonly id: number;
     readonly startTimeMillis: number;
 };
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface FiberIdFromSelf extends Annotable<FiberIdFromSelf, _fiberId.FiberId> {
+}
 /**
  * @category FiberId constructors
  * @since 1.0.0
  */
-export declare const FiberIdFromSelf: Schema<FiberId.FiberId>;
-declare const _FiberId: Schema<FiberId.FiberId, FiberIdFrom>;
-export { 
+export declare const FiberIdFromSelf: FiberIdFromSelf;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface FiberId extends Annotable<FiberId, _fiberId.FiberId, FiberIdEncoded> {
+}
 /**
  * @category FiberId transformations
  * @since 1.0.0
  */
-_FiberId as FiberId };
+export declare const FiberId: FiberId;
 /**
  * @category Cause utils
  * @since 1.0.0
  */
-export type CauseFrom<E> = {
+export type CauseEncoded<E> = {
     readonly _tag: "Die";
     readonly defect: unknown;
 } | {
@@ -2217,95 +2912,177 @@ export type CauseFrom<E> = {
     readonly error: E;
 } | {
     readonly _tag: "Interrupt";
-    readonly fiberId: FiberIdFrom;
+    readonly fiberId: FiberIdEncoded;
 } | {
     readonly _tag: "Parallel";
-    readonly left: CauseFrom<E>;
-    readonly right: CauseFrom<E>;
+    readonly left: CauseEncoded<E>;
+    readonly right: CauseEncoded<E>;
 } | {
     readonly _tag: "Sequential";
-    readonly left: CauseFrom<E>;
-    readonly right: CauseFrom<E>;
+    readonly left: CauseEncoded<E>;
+    readonly right: CauseEncoded<E>;
 };
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface causeFromSelf<E extends Schema.Any, DR> extends Annotable<causeFromSelf<E, DR>, Cause.Cause<Schema.Type<E>>, Cause.Cause<Schema.Encoded<E>>, Schema.Context<E> | DR> {
+}
 /**
  * @category Cause transformations
  * @since 1.0.0
  */
-export declare const causeFromSelf: <A, I, R1, R2 = never>({ defect, error }: {
-    readonly error: Schema<A, I, R1>;
-    readonly defect?: Schema<unknown, unknown, R2> | undefined;
-}) => Schema<Cause.Cause<A>, Cause.Cause<I>, R1 | R2>;
+export declare const causeFromSelf: <E extends Schema.Any, DR = never>({ defect, error }: {
+    readonly error: E;
+    readonly defect?: Schema<unknown, unknown, DR> | undefined;
+}) => causeFromSelf<E, DR>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface cause<E extends Schema.All, DR> extends Annotable<cause<E, DR>, Cause.Cause<Schema.Type<E>>, CauseEncoded<Schema.Encoded<E>>, Schema.Context<E> | DR> {
+}
 /**
  * @category Cause transformations
  * @since 1.0.0
  */
-export declare const cause: <E, EI, R1, R2 = never>({ defect, error }: {
-    readonly error: Schema<E, EI, R1>;
-    readonly defect?: Schema<unknown, unknown, R2> | undefined;
-}) => Schema<Cause.Cause<E>, CauseFrom<EI>, R1 | R2>;
+export declare const cause: <E extends Schema.All, DR = never>({ defect, error }: {
+    readonly error: E;
+    readonly defect?: Schema<unknown, unknown, DR> | undefined;
+}) => cause<E, DR>;
 /**
  * @category Exit utils
  * @since 1.0.0
  */
-export type ExitFrom<A, E> = {
+export type ExitEncoded<A, E> = {
     readonly _tag: "Failure";
-    readonly cause: CauseFrom<E>;
+    readonly cause: CauseEncoded<E>;
 } | {
     readonly _tag: "Success";
     readonly value: A;
 };
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface exitFromSelf<A extends Schema.Any, E extends Schema.Any, DR> extends Annotable<exitFromSelf<A, E, DR>, Exit.Exit<Schema.Type<A>, Schema.Type<E>>, Exit.Exit<Schema.Encoded<A>, Schema.Encoded<E>>, Schema.Context<A> | Schema.Context<E> | DR> {
+}
 /**
  * @category Exit transformations
  * @since 1.0.0
  */
-export declare const exitFromSelf: <E, IE, RE, A, IA, RA, RD = never>({ defect, failure, success }: {
-    readonly failure: Schema<E, IE, RE>;
-    readonly success: Schema<A, IA, RA>;
-    readonly defect?: Schema<unknown, unknown, RD> | undefined;
-}) => Schema<Exit.Exit<A, E>, Exit.Exit<IA, IE>, RE | RA | RD>;
+export declare const exitFromSelf: <A extends Schema.Any, E extends Schema.Any, DR = never>({ defect, failure, success }: {
+    readonly failure: E;
+    readonly success: A;
+    readonly defect?: Schema<unknown, unknown, DR> | undefined;
+}) => exitFromSelf<A, E, DR>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface exit<A extends Schema.All, E extends Schema.All, DR> extends Annotable<exit<A, E, DR>, Exit.Exit<Schema.Type<A>, Schema.Type<E>>, ExitEncoded<Schema.Encoded<A>, Schema.Encoded<E>>, Schema.Context<A> | Schema.Context<E> | DR> {
+}
 /**
  * @category Exit transformations
  * @since 1.0.0
  */
-export declare const exit: <E, IE, R1, A, IA, R2, R3 = never>({ defect, failure, success }: {
-    readonly failure: Schema<E, IE, R1>;
-    readonly success: Schema<A, IA, R2>;
-    readonly defect?: Schema<unknown, unknown, R3> | undefined;
-}) => Schema<Exit.Exit<A, E>, ExitFrom<IA, IE>, R1 | R2 | R3>;
+export declare const exit: <A extends Schema.All, E extends Schema.All, DR = never>({ defect, failure, success }: {
+    readonly failure: E;
+    readonly success: A;
+    readonly defect?: Schema<unknown, unknown, DR> | undefined;
+}) => exit<A, E, DR>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface hashSetFromSelf<Value extends Schema.Any> extends Annotable<hashSetFromSelf<Value>, HashSet.HashSet<Schema.Type<Value>>, HashSet.HashSet<Schema.Encoded<Value>>, Schema.Context<Value>> {
+}
 /**
  * @category HashSet transformations
  * @since 1.0.0
  */
-export declare const hashSetFromSelf: <A, I, R>(item: Schema<A, I, R>) => Schema<HashSet.HashSet<A>, HashSet.HashSet<I>, R>;
+export declare const hashSetFromSelf: <Value extends Schema.Any>(value: Value) => hashSetFromSelf<Value>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface hashSet<Value extends Schema.Any> extends Annotable<hashSet<Value>, HashSet.HashSet<Schema.Type<Value>>, ReadonlyArray<Schema.Encoded<Value>>, Schema.Context<Value>> {
+}
 /**
  * @category HashSet transformations
  * @since 1.0.0
  */
-export declare const hashSet: <A, I, R>(item: Schema<A, I, R>) => Schema<HashSet.HashSet<A>, readonly I[], R>;
+export declare const hashSet: <Value extends Schema.Any>(value: Value) => hashSet<Value>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface hashMapFromSelf<K extends Schema.Any, V extends Schema.Any> extends Annotable<hashMapFromSelf<K, V>, HashMap.HashMap<Schema.Type<K>, Schema.Type<V>>, HashMap.HashMap<Schema.Encoded<K>, Schema.Encoded<V>>, Schema.Context<K> | Schema.Context<V>> {
+}
 /**
  * @category HashMap transformations
  * @since 1.0.0
  */
-export declare const hashMapFromSelf: <K, IK, RK, V, IV, RV>({ key, value }: {
-    readonly key: Schema<K, IK, RK>;
-    readonly value: Schema<V, IV, RV>;
-}) => Schema<HashMap.HashMap<K, V>, HashMap.HashMap<IK, IV>, RK | RV>;
+export declare const hashMapFromSelf: <K extends Schema.Any, V extends Schema.Any>({ key, value }: {
+    readonly key: K;
+    readonly value: V;
+}) => hashMapFromSelf<K, V>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface hashMap<K extends Schema.Any, V extends Schema.Any> extends Annotable<hashMap<K, V>, HashMap.HashMap<Schema.Type<K>, Schema.Type<V>>, ReadonlyArray<readonly [Schema.Encoded<K>, Schema.Encoded<V>]>, Schema.Context<K> | Schema.Context<V>> {
+}
 /**
  * @category HashMap transformations
  * @since 1.0.0
  */
-export declare const hashMap: <K, IK, RK, V, IV, RV>({ key, value }: {
-    readonly key: Schema<K, IK, RK>;
-    readonly value: Schema<V, IV, RV>;
-}) => Schema<HashMap.HashMap<K, V>, readonly (readonly [IK, IV])[], RK | RV>;
+export declare const hashMap: <K extends Schema.Any, V extends Schema.Any>({ key, value }: {
+    readonly key: K;
+    readonly value: V;
+}) => hashMap<K, V>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface listFromSelf<Value extends Schema.Any> extends Annotable<listFromSelf<Value>, List.List<Schema.Type<Value>>, List.List<Schema.Encoded<Value>>, Schema.Context<Value>> {
+}
 /**
  * @category List transformations
  * @since 1.0.0
  */
-export declare const listFromSelf: <A, I, R>(item: Schema<A, I, R>) => Schema<List.List<A>, List.List<I>, R>;
+export declare const listFromSelf: <Value extends Schema.Any>(value: Value) => listFromSelf<Value>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface list<Value extends Schema.Any> extends Annotable<list<Value>, List.List<Schema.Type<Value>>, ReadonlyArray<Schema.Encoded<Value>>, Schema.Context<Value>> {
+}
 /**
  * @category List transformations
  * @since 1.0.0
  */
-export declare const list: <A, I, R>(item: Schema<A, I, R>) => Schema<List.List<A>, readonly I[], R>;
+export declare const list: <Value extends Schema.Any>(value: Value) => list<Value>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface sortedSetFromSelf<Value extends Schema.Any> extends Annotable<sortedSetFromSelf<Value>, SortedSet.SortedSet<Schema.Type<Value>>, SortedSet.SortedSet<Schema.Encoded<Value>>, Schema.Context<Value>> {
+}
+/**
+ * @category SortedSet transformations
+ * @since 1.0.0
+ */
+export declare const sortedSetFromSelf: <Value extends Schema.Any>(value: Value, ordA: Order.Order<Schema.Type<Value>>, ordI: Order.Order<Schema.Encoded<Value>>) => sortedSetFromSelf<Value>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface sortedSet<Value extends Schema.Any> extends Annotable<sortedSet<Value>, SortedSet.SortedSet<Schema.Type<Value>>, ReadonlyArray<Schema.Encoded<Value>>, Schema.Context<Value>> {
+}
+/**
+ * @category SortedSet transformations
+ * @since 1.0.0
+ */
+export declare const sortedSet: <Value extends Schema.Any>(value: Value, ordA: Order.Order<Schema.Type<Value>>) => sortedSet<Value>;
 //# sourceMappingURL=Schema.d.ts.map
\ No newline at end of file
diff --git a/dist/dts/Schema.d.ts.map b/dist/dts/Schema.d.ts.map
index 13903767dc5351a9b11d3a0d3ebce9c2258c6b9d..90fa2ff1a0bce51388662caa5467cc3e6675ee58 100644
--- a/dist/dts/Schema.d.ts.map
+++ b/dist/dts/Schema.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"Schema.d.ts","sourceRoot":"","sources":["../../src/Schema.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"Schema.d.ts","sourceRoot":"","sources":["../../src/Schema.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/dts/Serializable.d.ts b/dist/dts/Serializable.d.ts
index e4c617726528b3b24f7e868a1b29ae649bbee12c..efd26afca6833a4d50fd28bc69253ef8024a12b8 100644
--- a/dist/dts/Serializable.d.ts
+++ b/dist/dts/Serializable.d.ts
@@ -43,10 +43,10 @@ export declare const symbolResult: unique symbol;
  * @since 1.0.0
  * @category model
  */
-export interface WithResult<R, IE, E, IA, A> {
+export interface WithResult<A, I, E, EI, R> {
     readonly [symbolResult]: {
-        readonly Failure: Schema.Schema<E, IE, R>;
-        readonly Success: Schema.Schema<A, IA, R>;
+        readonly Success: Schema.Schema<A, I, R>;
+        readonly Failure: Schema.Schema<E, EI, R>;
     };
 }
 /**
@@ -57,28 +57,28 @@ export declare namespace WithResult {
     /**
      * @since 1.0.0
      */
-    type Context<T> = T extends WithResult<infer R, infer _IE, infer _E, infer _IA, infer _A> ? R : never;
+    type Context<T> = T extends WithResult<infer _A, infer _I, infer _E, infer _EI, infer R> ? R : never;
 }
 /**
  * @since 1.0.0
  * @category accessor
  */
-export declare const failureSchema: <R, IE, E, IA, A>(self: WithResult<R, IE, E, IA, A>) => Schema.Schema<E, IE, R>;
+export declare const failureSchema: <A, I, E, EI, R>(self: WithResult<A, I, E, EI, R>) => Schema.Schema<E, EI, R>;
 /**
  * @since 1.0.0
  * @category accessor
  */
-export declare const successSchema: <R, IE, E, IA, A>(self: WithResult<R, IE, E, IA, A>) => Schema.Schema<A, IA, R>;
+export declare const successSchema: <A, I, E, EI, R>(self: WithResult<A, I, E, EI, R>) => Schema.Schema<A, I, R>;
 /**
  * @since 1.0.0
  * @category accessor
  */
-export declare const exitSchema: <R, IE, E, IA, A>(self: WithResult<R, IE, E, IA, A>) => Schema.Schema<Exit.Exit<A, E>, Schema.ExitFrom<IA, IE>, R>;
+export declare const exitSchema: <A, I, E, EI, R>(self: WithResult<A, I, E, EI, R>) => Schema.Schema<Exit.Exit<A, E>, Schema.ExitEncoded<I, EI>, R>;
 /**
  * @since 1.0.0
  * @category model
  */
-export interface SerializableWithResult<R, IS, S, RR, IE, E, IA, A> extends Serializable<S, IS, R>, WithResult<RR, IE, E, IA, A> {
+export interface SerializableWithResult<S, SI, SR, A, AI, E, EI, RR> extends Serializable<S, SI, SR>, WithResult<A, AI, E, EI, RR> {
 }
 /**
  * @since 1.0.0
@@ -88,7 +88,7 @@ export declare namespace SerializableWithResult {
     /**
      * @since 1.0.0
      */
-    type Context<T> = T extends SerializableWithResult<infer R, infer _IS, infer _S, infer RR, infer _IE, infer _E, infer _IA, infer _A> ? R | RR : never;
+    type Context<T> = T extends SerializableWithResult<infer _S, infer _SI, infer SR, infer _A, infer _AI, infer _E, infer _EI, infer RR> ? SR | RR : never;
 }
 /**
  * @since 1.0.0
@@ -108,47 +108,47 @@ export declare const deserialize: {
  * @category encoding
  */
 export declare const serializeFailure: {
-    <E>(value: E): <R, IE, IA, A>(self: WithResult<R, IE, E, IA, A>) => Effect.Effect<IE, ParseResult.ParseError, R>;
-    <R, IE, E, IA, A>(self: WithResult<R, IE, E, IA, A>, value: E): Effect.Effect<IE, ParseResult.ParseError, R>;
+    <E>(value: E): <A, I, EI, R>(self: WithResult<A, I, E, EI, R>) => Effect.Effect<EI, ParseResult.ParseError, R>;
+    <A, I, E, EI, R>(self: WithResult<A, I, E, EI, R>, value: E): Effect.Effect<EI, ParseResult.ParseError, R>;
 };
 /**
  * @since 1.0.0
  * @category decoding
  */
 export declare const deserializeFailure: {
-    (value: unknown): <R, IE, E, IA, A>(self: WithResult<R, IE, E, IA, A>) => Effect.Effect<E, ParseResult.ParseError, R>;
-    <R, IE, E, IA, A>(self: WithResult<R, IE, E, IA, A>, value: unknown): Effect.Effect<E, ParseResult.ParseError, R>;
+    (value: unknown): <A, I, E, EI, R>(self: WithResult<A, I, E, EI, R>) => Effect.Effect<E, ParseResult.ParseError, R>;
+    <A, I, E, EI, R>(self: WithResult<A, I, E, EI, R>, value: unknown): Effect.Effect<E, ParseResult.ParseError, R>;
 };
 /**
  * @since 1.0.0
  * @category encoding
  */
 export declare const serializeSuccess: {
-    <A>(value: A): <R, IE, E, IA>(self: WithResult<R, IE, E, IA, A>) => Effect.Effect<IA, ParseResult.ParseError, R>;
-    <R, IE, E, IA, A>(self: WithResult<R, IE, E, IA, A>, value: A): Effect.Effect<IA, ParseResult.ParseError, R>;
+    <A>(value: A): <I, E, EI, R>(self: WithResult<A, I, E, EI, R>) => Effect.Effect<I, ParseResult.ParseError, R>;
+    <A, I, E, EI, R>(self: WithResult<A, I, E, EI, R>, value: A): Effect.Effect<I, ParseResult.ParseError, R>;
 };
 /**
  * @since 1.0.0
  * @category decoding
  */
 export declare const deserializeSuccess: {
-    (value: unknown): <R, IE, E, IA, A>(self: WithResult<R, IE, E, IA, A>) => Effect.Effect<A, ParseResult.ParseError, R>;
-    <R, IE, E, IA, A>(self: WithResult<R, IE, E, IA, A>, value: unknown): Effect.Effect<A, ParseResult.ParseError, R>;
+    (value: unknown): <A, I, E, EI, R>(self: WithResult<A, I, E, EI, R>) => Effect.Effect<A, ParseResult.ParseError, R>;
+    <A, I, E, EI, R>(self: WithResult<A, I, E, EI, R>, value: unknown): Effect.Effect<A, ParseResult.ParseError, R>;
 };
 /**
  * @since 1.0.0
  * @category encoding
  */
 export declare const serializeExit: {
-    <E, A>(value: Exit.Exit<A, E>): <R, IE, IA>(self: WithResult<R, IE, E, IA, A>) => Effect.Effect<Schema.ExitFrom<IA, IE>, ParseResult.ParseError, R>;
-    <R, IE, E, IA, A>(self: WithResult<R, IE, E, IA, A>, value: Exit.Exit<A, E>): Effect.Effect<Schema.ExitFrom<IA, IE>, ParseResult.ParseError, R>;
+    <A, E>(value: Exit.Exit<A, E>): <I, EI, R>(self: WithResult<A, I, E, EI, R>) => Effect.Effect<Schema.ExitEncoded<I, EI>, ParseResult.ParseError, R>;
+    <A, I, E, EI, R>(self: WithResult<A, I, E, EI, R>, value: Exit.Exit<A, E>): Effect.Effect<Schema.ExitEncoded<I, EI>, ParseResult.ParseError, R>;
 };
 /**
  * @since 1.0.0
  * @category decoding
  */
 export declare const deserializeExit: {
-    (value: unknown): <R, IE, E, IA, A>(self: WithResult<R, IE, E, IA, A>) => Effect.Effect<Exit.Exit<A, E>, ParseResult.ParseError, R>;
-    <R, IE, E, IA, A>(self: WithResult<R, IE, E, IA, A>, value: unknown): Effect.Effect<Exit.Exit<A, E>, ParseResult.ParseError, R>;
+    (value: unknown): <A, I, E, EI, R>(self: WithResult<A, I, E, EI, R>) => Effect.Effect<Exit.Exit<A, E>, ParseResult.ParseError, R>;
+    <A, I, E, EI, R>(self: WithResult<A, I, E, EI, R>, value: unknown): Effect.Effect<Exit.Exit<A, E>, ParseResult.ParseError, R>;
 };
 //# sourceMappingURL=Serializable.d.ts.map
\ No newline at end of file
diff --git a/dist/dts/Serializable.d.ts.map b/dist/dts/Serializable.d.ts.map
index ab9d3f766076868a5f610c7a69234b4536586bb2..c158f25b673dfa082e1cef4230f428ca2c8cff6d 100644
--- a/dist/dts/Serializable.d.ts.map
+++ b/dist/dts/Serializable.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"Serializable.d.ts","sourceRoot":"","sources":["../../src/Serializable.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"Serializable.d.ts","sourceRoot":"","sources":["../../src/Serializable.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/dts/TreeFormatter.d.ts b/dist/dts/TreeFormatter.d.ts
index eaa1bd340154c9ab68ad10bcea4ef41df78e1c30..1346d2f34d13088c56439e8c2cb2ed65f27a7c67 100644
--- a/dist/dts/TreeFormatter.d.ts
+++ b/dist/dts/TreeFormatter.d.ts
@@ -1,17 +1,23 @@
 /**
  * @since 1.0.0
  */
+import * as Effect from "effect/Effect";
 import type * as ParseResult from "./ParseResult.js";
 /**
  * @category formatting
  * @since 1.0.0
  */
-export declare const formatIssues: (issues: readonly [ParseResult.ParseIssue, ...ParseResult.ParseIssue[]]) => string;
+export declare const formatIssueEffect: (issue: ParseResult.ParseIssue) => Effect.Effect<string>;
 /**
  * @category formatting
  * @since 1.0.0
  */
 export declare const formatIssue: (issue: ParseResult.ParseIssue) => string;
+/**
+ * @category formatting
+ * @since 1.0.0
+ */
+export declare const formatErrorEffect: (error: ParseResult.ParseError) => Effect.Effect<string>;
 /**
  * @category formatting
  * @since 1.0.0
diff --git a/dist/dts/TreeFormatter.d.ts.map b/dist/dts/TreeFormatter.d.ts.map
index 1925cbbe949964a5eb4751fadf8b3dcfeb314fa5..a492478bd9ed9cf76b4cc948c665f92eb4fb3ae0 100644
--- a/dist/dts/TreeFormatter.d.ts.map
+++ b/dist/dts/TreeFormatter.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"TreeFormatter.d.ts","sourceRoot":"","sources":["../../src/TreeFormatter.ts"],"names":[],"mappings":"AAAA;;GAEG;AAKH,OAAO,KAAK,KAAK,WAAW,MAAM,kBAAkB,CAAA;AAcpD;;;GAGG;AACH,eAAO,MAAM,YAAY,8EAA4D,MAGpF,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,WAAW,UAAW,YAAY,UAAU,KAAG,MAA+B,CAAA;AAE3F;;;GAGG;AACH,eAAO,MAAM,WAAW,UAAW,YAAY,UAAU,KAAG,MAAkC,CAAA"}
\ No newline at end of file
+{"version":3,"file":"TreeFormatter.d.ts","sourceRoot":"","sources":["../../src/TreeFormatter.ts"],"names":[],"mappings":"AAAA;;GAEG;AAGH,OAAO,KAAK,MAAM,MAAM,eAAe,CAAA;AAKvC,OAAO,KAAK,KAAK,WAAW,MAAM,kBAAkB,CAAA;AAcpD;;;GAGG;AACH,eAAO,MAAM,iBAAiB,UAAW,YAAY,UAAU,KAAG,aAAa,CAAC,MAAM,CACrC,CAAA;AAEjD;;;GAGG;AACH,eAAO,MAAM,WAAW,UAAW,YAAY,UAAU,KAAG,MAAkD,CAAA;AAE9G;;;GAGG;AACH,eAAO,MAAM,iBAAiB,UAAW,YAAY,UAAU,KAAG,aAAa,CAAC,MAAM,CACtD,CAAA;AAEhC;;;GAGG;AACH,eAAO,MAAM,WAAW,UAAW,YAAY,UAAU,KAAG,MAAkC,CAAA"}
\ No newline at end of file
diff --git a/dist/dts/index.d.ts b/dist/dts/index.d.ts
index 0dcfe57ea7e4e6e9252f267a7f3d3a6208f2bfb7..8aa44b3d435cafae9533560ed464c239a5cc87a7 100644
--- a/dist/dts/index.d.ts
+++ b/dist/dts/index.d.ts
@@ -14,10 +14,6 @@ export * as ArrayFormatter from "./ArrayFormatter.js";
  * @since 1.0.0
  */
 export * as Equivalence from "./Equivalence.js";
-/**
- * @since 1.0.0
- */
-export * as Format from "./Format.js";
 /**
  * @since 1.0.0
  */
diff --git a/dist/dts/index.d.ts.map b/dist/dts/index.d.ts.map
index 62e75c8a954c422dc03466ae234434d41bf2d3c1..aea2470f26bc71a9fa3ad825290d9ee3eaf851dc 100644
--- a/dist/dts/index.d.ts.map
+++ b/dist/dts/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,OAAO,KAAK,GAAG,MAAM,UAAU,CAAA;AAE/B;;GAEG;AACH,OAAO,KAAK,SAAS,MAAM,gBAAgB,CAAA;AAE3C;;GAEG;AACH,OAAO,KAAK,cAAc,MAAM,qBAAqB,CAAA;AAErD;;GAEG;AACH,OAAO,KAAK,WAAW,MAAM,kBAAkB,CAAA;AAE/C;;GAEG;AACH,OAAO,KAAK,MAAM,MAAM,aAAa,CAAA;AAErC;;GAEG;AACH,OAAO,KAAK,UAAU,MAAM,iBAAiB,CAAA;AAE7C;;GAEG;AACH,OAAO,KAAK,WAAW,MAAM,kBAAkB,CAAA;AAE/C;;GAEG;AACH,OAAO,KAAK,MAAM,MAAM,aAAa,CAAA;AAErC;;GAEG;AACH,OAAO,KAAK,MAAM,MAAM,aAAa,CAAA;AAErC;;GAEG;AACH,OAAO,KAAK,MAAM,MAAM,aAAa,CAAA;AAErC;;;;GAIG;AACH,OAAO,KAAK,YAAY,MAAM,mBAAmB,CAAA;AAEjD;;GAEG;AACH,OAAO,KAAK,aAAa,MAAM,oBAAoB,CAAA"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,OAAO,KAAK,GAAG,MAAM,UAAU,CAAA;AAE/B;;GAEG;AACH,OAAO,KAAK,SAAS,MAAM,gBAAgB,CAAA;AAE3C;;GAEG;AACH,OAAO,KAAK,cAAc,MAAM,qBAAqB,CAAA;AAErD;;GAEG;AACH,OAAO,KAAK,WAAW,MAAM,kBAAkB,CAAA;AAE/C;;GAEG;AACH,OAAO,KAAK,UAAU,MAAM,iBAAiB,CAAA;AAE7C;;GAEG;AACH,OAAO,KAAK,WAAW,MAAM,kBAAkB,CAAA;AAE/C;;GAEG;AACH,OAAO,KAAK,MAAM,MAAM,aAAa,CAAA;AAErC;;GAEG;AACH,OAAO,KAAK,MAAM,MAAM,aAAa,CAAA;AAErC;;GAEG;AACH,OAAO,KAAK,MAAM,MAAM,aAAa,CAAA;AAErC;;;;GAIG;AACH,OAAO,KAAK,YAAY,MAAM,mBAAmB,CAAA;AAEjD;;GAEG;AACH,OAAO,KAAK,aAAa,MAAM,oBAAoB,CAAA"}
\ No newline at end of file
diff --git a/dist/dts/internal/parseResult.d.ts b/dist/dts/internal/parseResult.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..287a6708d2a7429bfcf181489171ef4e6fc64efe
--- /dev/null
+++ b/dist/dts/internal/parseResult.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=parseResult.d.ts.map
\ No newline at end of file
diff --git a/dist/dts/internal/parseResult.d.ts.map b/dist/dts/internal/parseResult.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..a377a666badb8b04e3e7ba6d092ec2c810a4bff2
--- /dev/null
+++ b/dist/dts/internal/parseResult.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"parseResult.d.ts","sourceRoot":"","sources":["../../../src/internal/parseResult.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/dist/dts/internal/schema.d.ts b/dist/dts/internal/schema.d.ts
index 9df3a865d7794412dbe5a45b2ccbb885c35d1081..1218383a7ff0beba4e75525f91df8dde7362faeb 100644
--- a/dist/dts/internal/schema.d.ts
+++ b/dist/dts/internal/schema.d.ts
@@ -1,5 +1,2 @@
-/**
- * @since 1.0.0
- */
 export {};
 //# sourceMappingURL=schema.d.ts.map
\ No newline at end of file
diff --git a/dist/dts/internal/schema.d.ts.map b/dist/dts/internal/schema.d.ts.map
index b5f3462d0d5ed43e9ec140fc221499afa81c9e37..7e860f1331df5ca97b52b046263247367e2d34fb 100644
--- a/dist/dts/internal/schema.d.ts.map
+++ b/dist/dts/internal/schema.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"schema.d.ts","sourceRoot":"","sources":["../../../src/internal/schema.ts"],"names":[],"mappings":"AAAA;;GAEG"}
\ No newline at end of file
+{"version":3,"file":"schema.d.ts","sourceRoot":"","sources":["../../../src/internal/schema.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/dist/dts/internal/util.d.ts b/dist/dts/internal/util.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..d1849356aaa2511f40fc18fb839350f6555b3ba8
--- /dev/null
+++ b/dist/dts/internal/util.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=util.d.ts.map
\ No newline at end of file
diff --git a/dist/dts/internal/util.d.ts.map b/dist/dts/internal/util.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..eb9d5293b1c0ea0c4c45c841c9b9e9e28549389a
--- /dev/null
+++ b/dist/dts/internal/util.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"util.d.ts","sourceRoot":"","sources":["../../../src/internal/util.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/dist/esm/AST.js b/dist/esm/AST.js
index 28b63265eb2e7eb41615670a26b3b79c4d8d593b..2fe5a35e84df3267d5466eb05cee5436d1a35950 100644
--- a/dist/esm/AST.js
+++ b/dist/esm/AST.js
@@ -1,7 +1,7 @@
 /**
  * @since 1.0.0
  */
-import { dual, identity, pipe } from "effect/Function";
+import { dual, identity } from "effect/Function";
 import { globalValue } from "effect/GlobalValue";
 import * as Hash from "effect/Hash";
 import * as Number from "effect/Number";
@@ -9,7 +9,7 @@ import * as Option from "effect/Option";
 import * as Order from "effect/Order";
 import * as Predicate from "effect/Predicate";
 import * as ReadonlyArray from "effect/ReadonlyArray";
-import * as Internal from "./internal/ast.js";
+import * as _util from "./internal/util.js";
 /**
  * @category annotations
  * @since 1.0.0
@@ -70,11 +70,20 @@ export const ConcurrencyAnnotationId = /*#__PURE__*/Symbol.for("@effect/schema/a
  * @since 1.0.0
  */
 export const BatchingAnnotationId = /*#__PURE__*/Symbol.for("@effect/schema/annotation/Batching");
+/** @internal */
+export const SurrogateAnnotationId = /*#__PURE__*/Symbol.for("@effect/schema/annotation/Surrogate");
+/** @internal */
+export const JSONIdentifierAnnotationId = /*#__PURE__*/Symbol.for("@effect/schema/annotation/JSONIdentifier");
 /**
  * @category annotations
  * @since 1.0.0
  */
 export const getAnnotation = /*#__PURE__*/dual(2, (annotated, key) => Object.prototype.hasOwnProperty.call(annotated.annotations, key) ? Option.some(annotated.annotations[key]) : Option.none());
+/**
+ * @category annotations
+ * @since 1.0.0
+ */
+export const getBrandAnnotation = /*#__PURE__*/getAnnotation(BrandAnnotationId);
 /**
  * @category annotations
  * @since 1.0.0
@@ -125,288 +134,830 @@ export const getConcurrencyAnnotation = /*#__PURE__*/getAnnotation(ConcurrencyAn
  * @since 1.0.0
  */
 export const getBatchingAnnotation = /*#__PURE__*/getAnnotation(BatchingAnnotationId);
+/** @internal */
+export const getSurrogateSchemaAnnotation = /*#__PURE__*/getAnnotation(SurrogateAnnotationId);
+/** @internal */
+export const getJSONIdentifierAnnotation = /*#__PURE__*/getAnnotation(JSONIdentifierAnnotationId);
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const createDeclaration = (typeParameters, decodeUnknown, encodeUnknown, annotations = {}) => ({
-  _tag: "Declaration",
-  typeParameters,
-  decodeUnknown,
-  encodeUnknown,
-  annotations
-});
+export class Declaration {
+  typeParameters;
+  decodeUnknown;
+  encodeUnknown;
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "Declaration";
+  constructor(typeParameters, decodeUnknown, encodeUnknown, annotations = {}) {
+    this.typeParameters = typeParameters;
+    this.decodeUnknown = decodeUnknown;
+    this.encodeUnknown = encodeUnknown;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => "<declaration schema>");
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      typeParameters: this.typeParameters.map(ast => ast.toJSON()),
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+const createASTGuard = tag => ast => ast._tag === tag;
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isDeclaration = ast => ast._tag === "Declaration";
+export const isDeclaration = /*#__PURE__*/createASTGuard("Declaration");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const createLiteral = (literal, annotations = {}) => ({
-  _tag: "Literal",
-  literal,
-  annotations
-});
+export class Literal {
+  literal;
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "Literal";
+  constructor(literal, annotations = {}) {
+    this.literal = literal;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => _util.formatUnknown(this.literal));
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      literal: Predicate.isBigInt(this.literal) ? String(this.literal) : this.literal,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isLiteral = ast => ast._tag === "Literal";
+export const isLiteral = /*#__PURE__*/createASTGuard("Literal");
 /** @internal */
-export const _null = /*#__PURE__*/createLiteral(null, {
+export const _null = /*#__PURE__*/new Literal(null, {
   [IdentifierAnnotationId]: "null"
 });
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const createUniqueSymbol = (symbol, annotations = {}) => ({
-  _tag: "UniqueSymbol",
-  symbol,
-  annotations
-});
+export class UniqueSymbol {
+  symbol;
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "UniqueSymbol";
+  constructor(symbol, annotations = {}) {
+    this.symbol = symbol;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => _util.formatUnknown(this.symbol));
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      symbol: String(this.symbol),
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isUniqueSymbol = ast => ast._tag === "UniqueSymbol";
+export const isUniqueSymbol = /*#__PURE__*/createASTGuard("UniqueSymbol");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const undefinedKeyword = {
-  _tag: "UndefinedKeyword",
-  annotations: {
-    [TitleAnnotationId]: "undefined"
+export class UndefinedKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "UndefinedKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+export const undefinedKeyword = /*#__PURE__*/new UndefinedKeyword({
+  [TitleAnnotationId]: "undefined"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isUndefinedKeyword = ast => ast._tag === "UndefinedKeyword";
+export const isUndefinedKeyword = /*#__PURE__*/createASTGuard("UndefinedKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const voidKeyword = {
-  _tag: "VoidKeyword",
-  annotations: {
-    [TitleAnnotationId]: "void"
+export class VoidKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "VoidKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+export const voidKeyword = /*#__PURE__*/new VoidKeyword({
+  [TitleAnnotationId]: "void"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isVoidKeyword = ast => ast._tag === "VoidKeyword";
+export const isVoidKeyword = /*#__PURE__*/createASTGuard("VoidKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const neverKeyword = {
-  _tag: "NeverKeyword",
-  annotations: {
-    [TitleAnnotationId]: "never"
+export class NeverKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "NeverKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+export const neverKeyword = /*#__PURE__*/new NeverKeyword({
+  [TitleAnnotationId]: "never"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isNeverKeyword = ast => ast._tag === "NeverKeyword";
+export const isNeverKeyword = /*#__PURE__*/createASTGuard("NeverKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const unknownKeyword = {
-  _tag: "UnknownKeyword",
-  annotations: {
-    [TitleAnnotationId]: "unknown"
+export class UnknownKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "UnknownKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+export const unknownKeyword = /*#__PURE__*/new UnknownKeyword({
+  [TitleAnnotationId]: "unknown"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isUnknownKeyword = ast => ast._tag === "UnknownKeyword";
+export const isUnknownKeyword = /*#__PURE__*/createASTGuard("UnknownKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const anyKeyword = {
-  _tag: "AnyKeyword",
-  annotations: {
-    [TitleAnnotationId]: "any"
+export class AnyKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "AnyKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+export const anyKeyword = /*#__PURE__*/new AnyKeyword({
+  [TitleAnnotationId]: "any"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isAnyKeyword = ast => ast._tag === "AnyKeyword";
+export const isAnyKeyword = /*#__PURE__*/createASTGuard("AnyKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const stringKeyword = {
-  _tag: "StringKeyword",
-  annotations: {
-    [TitleAnnotationId]: "string",
-    [DescriptionAnnotationId]: "a string"
+export class StringKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "StringKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+export const stringKeyword = /*#__PURE__*/new StringKeyword({
+  [TitleAnnotationId]: "string",
+  [DescriptionAnnotationId]: "a string"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isStringKeyword = ast => ast._tag === "StringKeyword";
+export const isStringKeyword = /*#__PURE__*/createASTGuard("StringKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const numberKeyword = {
-  _tag: "NumberKeyword",
-  annotations: {
-    [TitleAnnotationId]: "number",
-    [DescriptionAnnotationId]: "a number"
+export class NumberKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "NumberKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+export const numberKeyword = /*#__PURE__*/new NumberKeyword({
+  [TitleAnnotationId]: "number",
+  [DescriptionAnnotationId]: "a number"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isNumberKeyword = ast => ast._tag === "NumberKeyword";
+export const isNumberKeyword = /*#__PURE__*/createASTGuard("NumberKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const booleanKeyword = {
-  _tag: "BooleanKeyword",
-  annotations: {
-    [TitleAnnotationId]: "boolean",
-    [DescriptionAnnotationId]: "a boolean"
+export class BooleanKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "BooleanKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+export const booleanKeyword = /*#__PURE__*/new BooleanKeyword({
+  [TitleAnnotationId]: "boolean",
+  [DescriptionAnnotationId]: "a boolean"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isBooleanKeyword = ast => ast._tag === "BooleanKeyword";
+export const isBooleanKeyword = /*#__PURE__*/createASTGuard("BooleanKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const bigIntKeyword = {
-  _tag: "BigIntKeyword",
-  annotations: {
-    [TitleAnnotationId]: "bigint",
-    [DescriptionAnnotationId]: "a bigint"
+export class BigIntKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "BigIntKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+export const bigIntKeyword = /*#__PURE__*/new BigIntKeyword({
+  [TitleAnnotationId]: "bigint",
+  [DescriptionAnnotationId]: "a bigint"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isBigIntKeyword = ast => ast._tag === "BigIntKeyword";
+export const isBigIntKeyword = /*#__PURE__*/createASTGuard("BigIntKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const symbolKeyword = {
-  _tag: "SymbolKeyword",
-  annotations: {
-    [TitleAnnotationId]: "symbol",
-    [DescriptionAnnotationId]: "a symbol"
+export class SymbolKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "SymbolKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+export const symbolKeyword = /*#__PURE__*/new SymbolKeyword({
+  [TitleAnnotationId]: "symbol",
+  [DescriptionAnnotationId]: "a symbol"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isSymbolKeyword = ast => ast._tag === "SymbolKeyword";
+export const isSymbolKeyword = /*#__PURE__*/createASTGuard("SymbolKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const objectKeyword = {
-  _tag: "ObjectKeyword",
-  annotations: {
-    [IdentifierAnnotationId]: "object",
-    [TitleAnnotationId]: "object",
-    [DescriptionAnnotationId]: "an object in the TypeScript meaning, i.e. the `object` type"
+export class ObjectKeyword {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "ObjectKeyword";
+  constructor(annotations = {}) {
+    this.annotations = annotations;
   }
-};
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return formatKeyword(this, verbose);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+export const objectKeyword = /*#__PURE__*/new ObjectKeyword({
+  [IdentifierAnnotationId]: "object",
+  [TitleAnnotationId]: "object",
+  [DescriptionAnnotationId]: "an object in the TypeScript meaning, i.e. the `object` type"
+});
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isObjectKeyword = ast => ast._tag === "ObjectKeyword";
+export const isObjectKeyword = /*#__PURE__*/createASTGuard("ObjectKeyword");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const createEnums = (enums, annotations = {}) => ({
-  _tag: "Enums",
-  enums,
-  annotations
-});
+export class Enums {
+  enums;
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "Enums";
+  constructor(enums, annotations = {}) {
+    this.enums = enums;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => `<enum ${this.enums.length} value(s): ${this.enums.map((_, value) => JSON.stringify(value)).join(" | ")}>`);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      enums: this.enums,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isEnums = ast => ast._tag === "Enums";
+export const isEnums = /*#__PURE__*/createASTGuard("Enums");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const createTemplateLiteral = (head, spans, annotations = {}) => ReadonlyArray.isNonEmptyReadonlyArray(spans) ? {
-  _tag: "TemplateLiteral",
-  head,
-  spans,
-  annotations
-} : createLiteral(head);
+export class TemplateLiteralSpan {
+  type;
+  literal;
+  constructor(type, literal) {
+    this.type = type;
+    this.literal = literal;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString() {
+    switch (this.type._tag) {
+      case "StringKeyword":
+        return "${string}";
+      case "NumberKeyword":
+        return "${number}";
+    }
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      type: this.type.toJSON(),
+      literal: this.literal
+    };
+  }
+}
+/**
+ * @category model
+ * @since 1.0.0
+ */
+export class TemplateLiteral {
+  head;
+  spans;
+  annotations;
+  static make = (head, spans, annotations = {}) => ReadonlyArray.isNonEmptyReadonlyArray(spans) ? new TemplateLiteral(head, spans, annotations) : new Literal(head);
+  /**
+   * @since 1.0.0
+   */
+  _tag = "TemplateLiteral";
+  constructor(head, spans, annotations = {}) {
+    this.head = head;
+    this.spans = spans;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => formatTemplateLiteral(this));
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      head: this.head,
+      spans: this.spans.map(span => span.toJSON()),
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+const formatTemplateLiteral = ast => "`" + ast.head + ast.spans.map(span => String(span) + span.literal).join("") + "`";
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isTemplateLiteral = ast => ast._tag === "TemplateLiteral";
+export const isTemplateLiteral = /*#__PURE__*/createASTGuard("TemplateLiteral");
 /**
+ * @category model
  * @since 1.0.0
  */
-export const createElement = (type, isOptional) => ({
-  type,
-  isOptional
-});
+export class Element {
+  type;
+  isOptional;
+  constructor(type, isOptional) {
+    this.type = type;
+    this.isOptional = isOptional;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      type: this.type.toJSON(),
+      isOptional: this.isOptional
+    };
+  }
+}
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const createTuple = (elements, rest, isReadonly, annotations = {}) => ({
-  _tag: "Tuple",
-  elements,
-  rest,
-  isReadonly,
-  annotations
-});
+export class TupleType {
+  elements;
+  rest;
+  isReadonly;
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "TupleType";
+  constructor(elements, rest, isReadonly, annotations = {}) {
+    this.elements = elements;
+    this.rest = rest;
+    this.isReadonly = isReadonly;
+    this.annotations = annotations;
+    let hasOptionalElement = false;
+    let hasIllegalRequiredElement = false;
+    for (const e of elements) {
+      if (e.isOptional) {
+        hasOptionalElement = true;
+      } else if (hasOptionalElement) {
+        hasIllegalRequiredElement = true;
+        break;
+      }
+    }
+    if (hasIllegalRequiredElement || hasOptionalElement && rest.length > 1) {
+      throw new Error("A required element cannot follow an optional element. ts(1257)");
+    }
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => formatTuple(this));
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      elements: this.elements.map(e => e.toJSON()),
+      rest: this.rest.map(ast => ast.toJSON()),
+      isReadonly: this.isReadonly,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+const formatTuple = ast => {
+  const formattedElements = ast.elements.map(element => String(element.type) + (element.isOptional ? "?" : "")).join(", ");
+  return ReadonlyArray.matchLeft(ast.rest, {
+    onEmpty: () => `readonly [${formattedElements}]`,
+    onNonEmpty: (head, tail) => {
+      const formattedHead = String(head);
+      const wrappedHead = formattedHead.includes(" | ") ? `(${formattedHead})` : formattedHead;
+      if (tail.length > 0) {
+        const formattedTail = tail.map(String).join(", ");
+        if (ast.elements.length > 0) {
+          return `readonly [${formattedElements}, ...${wrappedHead}[], ${formattedTail}]`;
+        } else {
+          return `readonly [...${wrappedHead}[], ${formattedTail}]`;
+        }
+      } else {
+        if (ast.elements.length > 0) {
+          return `readonly [${formattedElements}, ...${wrappedHead}[]]`;
+        } else {
+          return `ReadonlyArray<${formattedHead}>`;
+        }
+      }
+    }
+  });
+};
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isTuple = ast => ast._tag === "Tuple";
+export const isTupleType = /*#__PURE__*/createASTGuard("TupleType");
 /**
+ * @category model
  * @since 1.0.0
  */
-export const createPropertySignature = (name, type, isOptional, isReadonly, annotations = {}) => ({
-  name,
-  type,
-  isOptional,
-  isReadonly,
-  annotations
-});
+export class PropertySignature {
+  name;
+  type;
+  isOptional;
+  isReadonly;
+  annotations;
+  constructor(name, type, isOptional, isReadonly, annotations = {}) {
+    this.name = name;
+    this.type = type;
+    this.isOptional = isOptional;
+    this.isReadonly = isReadonly;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      name: String(this.name),
+      type: this.type.toJSON(),
+      isOptional: this.isOptional,
+      isReadonly: this.isReadonly,
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
 /**
  * @since 1.0.0
  */
@@ -418,212 +969,455 @@ export const isParameter = ast => {
       return true;
     case "Refinement":
       return isParameter(ast.from);
-    default:
-      return false;
   }
+  return false;
 };
 /**
+ * @category model
  * @since 1.0.0
  */
-export const createIndexSignature = (parameter, type, isReadonly) => {
-  if (isParameter(parameter)) {
+export class IndexSignature {
+  type;
+  isReadonly;
+  /**
+   * @since 1.0.0
+   */
+  parameter;
+  constructor(parameter, type, isReadonly) {
+    this.type = type;
+    this.isReadonly = isReadonly;
+    if (isParameter(parameter)) {
+      this.parameter = parameter;
+    } else {
+      throw new Error("An index signature parameter type must be `string`, `symbol`, a template literal type or a refinement of the previous types");
+    }
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
     return {
-      parameter,
-      type,
-      isReadonly
+      parameter: this.parameter.toJSON(),
+      type: this.type.toJSON(),
+      isReadonly: this.isReadonly
     };
   }
-  throw new Error("An index signature parameter type must be 'string', 'symbol', a template literal type or a refinement of the previous types");
-};
+}
+/** @internal */
+export const getDuplicatePropertySignatureErrorMessage = name => `Duplicate property signature ${_util.formatUnknown(name)}`;
+const getDuplicateIndexSignatureErrorMessage = name => `Duplicate index signature for type \`${name}\``;
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const createTypeLiteral = (propertySignatures, indexSignatures, annotations = {}) => {
-  // check for duplicate property signatures
-  const keys = {};
-  for (let i = 0; i < propertySignatures.length; i++) {
-    const name = propertySignatures[i].name;
-    if (Object.prototype.hasOwnProperty.call(keys, name)) {
-      throw new Error(`Duplicate property signature ${String(name)}`);
-    }
-    keys[name] = null;
-  }
-  // check for duplicate index signatures
-  const parameters = {
-    string: false,
-    symbol: false
-  };
-  for (let i = 0; i < indexSignatures.length; i++) {
-    const parameter = getParameterBase(indexSignatures[i].parameter);
-    if (isStringKeyword(parameter)) {
-      if (parameters.string) {
-        throw new Error("Duplicate index signature for type `string`");
+export class TypeLiteral {
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "TypeLiteral";
+  /**
+   * @since 1.0.0
+   */
+  propertySignatures;
+  /**
+   * @since 1.0.0
+   */
+  indexSignatures;
+  constructor(propertySignatures, indexSignatures, annotations = {}) {
+    this.annotations = annotations;
+    // check for duplicate property signatures
+    const keys = {};
+    for (let i = 0; i < propertySignatures.length; i++) {
+      const name = propertySignatures[i].name;
+      if (Object.prototype.hasOwnProperty.call(keys, name)) {
+        throw new Error(getDuplicatePropertySignatureErrorMessage(name));
       }
-      parameters.string = true;
-    } else if (isSymbolKeyword(parameter)) {
-      if (parameters.symbol) {
-        throw new Error("Duplicate index signature for type `symbol`");
+      keys[name] = null;
+    }
+    // check for duplicate index signatures
+    const parameters = {
+      string: false,
+      symbol: false
+    };
+    for (let i = 0; i < indexSignatures.length; i++) {
+      const parameter = getParameterBase(indexSignatures[i].parameter);
+      if (isStringKeyword(parameter)) {
+        if (parameters.string) {
+          throw new Error(getDuplicateIndexSignatureErrorMessage("string"));
+        }
+        parameters.string = true;
+      } else if (isSymbolKeyword(parameter)) {
+        if (parameters.symbol) {
+          throw new Error(getDuplicateIndexSignatureErrorMessage("symbol"));
+        }
+        parameters.symbol = true;
       }
-      parameters.symbol = true;
+    }
+    this.propertySignatures = sortPropertySignatures(propertySignatures);
+    this.indexSignatures = sortIndexSignatures(indexSignatures);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => formatTypeLiteral(this));
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      propertySignatures: this.propertySignatures.map(ps => ps.toJSON()),
+      indexSignatures: this.indexSignatures.map(ps => ps.toJSON()),
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
+const formatTypeLiteral = ast => {
+  const formattedPropertySignatures = ast.propertySignatures.map(ps => String(ps.name) + (ps.isOptional ? "?" : "") + ": " + ps.type).join("; ");
+  if (ast.indexSignatures.length > 0) {
+    const formattedIndexSignatures = ast.indexSignatures.map(is => `[x: ${getParameterBase(is.parameter)}]: ${is.type}`).join("; ");
+    if (ast.propertySignatures.length > 0) {
+      return `{ ${formattedPropertySignatures}; ${formattedIndexSignatures} }`;
+    } else {
+      return `{ ${formattedIndexSignatures} }`;
+    }
+  } else {
+    if (ast.propertySignatures.length > 0) {
+      return `{ ${formattedPropertySignatures} }`;
+    } else {
+      return "{}";
     }
   }
-  return {
-    _tag: "TypeLiteral",
-    propertySignatures: sortPropertySignatures(propertySignatures),
-    indexSignatures: sortIndexSignatures(indexSignatures),
-    annotations
-  };
 };
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isTypeLiteral = ast => ast._tag === "TypeLiteral";
-const isMembers = as => as.length > 1;
+export const isTypeLiteral = /*#__PURE__*/createASTGuard("TypeLiteral");
+const flatten = candidates => ReadonlyArray.flatMap(candidates, ast => {
+  switch (ast._tag) {
+    case "Union":
+      return ast.types;
+    default:
+      return [ast];
+  }
+});
+const prettyUnion = ss => Array.from(new Set(ss)).join(" | ");
+const getDefaultUnionDescription = candidates => {
+  const nested = [];
+  let other = false;
+  for (const c of candidates) {
+    if (isUnion(c)) {
+      const expected = getExpected(c, false);
+      if (Option.isSome(expected)) {
+        nested.push(expected.value);
+        continue;
+      }
+    }
+    other = true;
+  }
+  if (nested.length > 0) {
+    return prettyUnion(nested.concat(other ? ["..."] : []));
+  }
+};
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const createUnion = (candidates, annotations = {}) => {
-  const types = unify(candidates);
-  if (isMembers(types)) {
+export class Union {
+  types;
+  annotations;
+  static make = (candidates, annotations) => {
+    const types = unify(flatten(candidates));
+    if (isMembers(types)) {
+      const defaultDescription = getDefaultUnionDescription(candidates);
+      if (defaultDescription) {
+        annotations = {
+          [DescriptionAnnotationId]: defaultDescription,
+          ...annotations
+        };
+      }
+      return new Union(sortUnionMembers(types), annotations);
+    }
+    if (ReadonlyArray.isNonEmptyReadonlyArray(types)) {
+      return types[0];
+    }
+    return neverKeyword;
+  };
+  /**
+   * @since 1.0.0
+   */
+  _tag = "Union";
+  constructor(types, annotations = {}) {
+    this.types = types;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => prettyUnion(this.types.map(String)));
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
     return {
-      _tag: "Union",
-      types: sortUnionMembers(types),
-      annotations
+      _tag: this._tag,
+      types: this.types.map(ast => ast.toJSON()),
+      annotations: toJSONAnnotations(this.annotations)
     };
   }
-  if (ReadonlyArray.isNonEmptyReadonlyArray(types)) {
-    return types[0];
-  }
-  return neverKeyword;
-};
+}
+/** @internal */
+export const mapMembers = (members, f) => members.map(f);
+/** @internal */
+export const isMembers = as => as.length > 1;
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isUnion = ast => ast._tag === "Union";
+export const isUnion = /*#__PURE__*/createASTGuard("Union");
+const toJSONMemoMap = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for("@effect/schema/AST/toJSONMemoMap"), () => new WeakMap());
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const createSuspend = (f, annotations = {}) => ({
-  _tag: "Suspend",
-  f: Internal.memoizeThunk(f),
-  annotations
-});
+export class Suspend {
+  f;
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "Suspend";
+  constructor(f, annotations = {}) {
+    this.f = f;
+    this.annotations = annotations;
+    this.f = _util.memoizeThunk(f);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return getExpected(this, verbose).pipe(Option.orElse(() => Option.flatMap(Option.liftThrowable(this.f)(), ast => getExpected(ast, verbose))), Option.getOrElse(() => "<suspended schema>"));
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    const ast = this.f();
+    let out = toJSONMemoMap.get(ast);
+    if (out) {
+      return out;
+    }
+    toJSONMemoMap.set(ast, {
+      _tag: this._tag
+    });
+    out = {
+      _tag: this._tag,
+      ast: ast.toJSON(),
+      annotations: toJSONAnnotations(this.annotations)
+    };
+    toJSONMemoMap.set(ast, out);
+    return out;
+  }
+}
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isSuspend = ast => ast._tag === "Suspend";
+export const isSuspend = /*#__PURE__*/createASTGuard("Suspend");
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const createRefinement = (from, filter, annotations = {}) => {
-  return {
-    _tag: "Refinement",
-    from,
-    filter,
-    annotations
-  };
-};
+export class Refinement {
+  from;
+  filter;
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "Refinement";
+  constructor(from, filter, annotations = {}) {
+    this.from = from;
+    this.filter = filter;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => "<refinement schema>");
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      from: this.from.toJSON(),
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isRefinement = ast => ast._tag === "Refinement";
+export const isRefinement = /*#__PURE__*/createASTGuard("Refinement");
 /**
- * @category model
  * @since 1.0.0
  */
-export const createTransform = (from, to, transformation, annotations = {}) => ({
-  _tag: "Transform",
-  from,
-  to,
-  transformation,
-  annotations
-});
+export const defaultParseOption = {};
 /**
- * @category guards
+ * @category model
  * @since 1.0.0
  */
-export const isTransform = ast => ast._tag === "Transform";
+export class Transformation {
+  from;
+  to;
+  transformation;
+  annotations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "Transformation";
+  constructor(from, to, transformation, annotations = {}) {
+    this.from = from;
+    this.to = to;
+    this.transformation = transformation;
+    this.annotations = annotations;
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => `(${String(this.from)} <-> ${String(this.to)})`);
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON() {
+    return {
+      _tag: this._tag,
+      from: this.from.toJSON(),
+      to: this.to.toJSON(),
+      annotations: toJSONAnnotations(this.annotations)
+    };
+  }
+}
 /**
- * @category constructors
+ * @category guards
  * @since 1.0.0
  */
-export const createFinalTransformation = (decode, encode) => ({
-  _tag: "FinalTransformation",
-  decode,
-  encode
-});
+export const isTransform = /*#__PURE__*/createASTGuard("Transformation");
 /**
- * @category guard
+ * @category model
  * @since 1.0.0
  */
-export const isFinalTransformation = ast => ast._tag === "FinalTransformation";
+export class FinalTransformation {
+  decode;
+  encode;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "FinalTransformation";
+  constructor(decode, encode) {
+    this.decode = decode;
+    this.encode = encode;
+  }
+}
+const createTransformationGuard = tag => ast => ast._tag === tag;
 /**
- * @category constructors
+ * @category guards
  * @since 1.0.0
  */
-export const composeTransformation = {
-  _tag: "ComposeTransformation"
-};
+export const isFinalTransformation = /*#__PURE__*/createTransformationGuard("FinalTransformation");
 /**
- * @category guard
+ * @category model
  * @since 1.0.0
  */
-export const isComposeTransformation = ast => ast._tag === "ComposeTransformation";
+export class ComposeTransformation {
+  /**
+   * @since 1.0.0
+   */
+  _tag = "ComposeTransformation";
+}
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const createFinalPropertySignatureTransformation = (decode, encode) => ({
-  _tag: "FinalPropertySignatureTransformation",
-  decode,
-  encode
-});
+export const composeTransformation = /*#__PURE__*/new ComposeTransformation();
 /**
- * @category guard
+ * @category guards
  * @since 1.0.0
  */
-export const isFinalPropertySignatureTransformation = ast => ast._tag === "FinalPropertySignatureTransformation";
+export const isComposeTransformation = /*#__PURE__*/createTransformationGuard("ComposeTransformation");
 /**
- * @category constructors
+ * Represents a `PropertySignature -> PropertySignature` transformation
+ *
+ * The semantic of `decode` is:
+ * - `none()` represents the absence of the key/value pair
+ * - `some(value)` represents the presence of the key/value pair
+ *
+ * The semantic of `encode` is:
+ * - `none()` you don't want to output the key/value pair
+ * - `some(value)` you want to output the key/value pair
+ *
+ * @category model
  * @since 1.0.0
  */
-export const createPropertySignatureTransform = (from, to, propertySignatureTransformation) => ({
-  from,
-  to,
-  propertySignatureTransformation
-});
+export class PropertySignatureTransformation {
+  from;
+  to;
+  decode;
+  encode;
+  constructor(from, to, decode, encode) {
+    this.from = from;
+    this.to = to;
+    this.decode = decode;
+    this.encode = encode;
+  }
+}
+const getDuplicatePropertySignatureTransformationErrorMessage = name => `Duplicate property signature transformation ${_util.formatUnknown(name)}`;
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const createTypeLiteralTransformation = propertySignatureTransformations => {
-  // check for duplicate property signature transformations
-  const keys = {};
-  for (const pst of propertySignatureTransformations) {
-    const key = pst.from;
-    if (keys[key]) {
-      throw new Error(`Duplicate property signature transformation ${String(key)}`);
+export class TypeLiteralTransformation {
+  propertySignatureTransformations;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "TypeLiteralTransformation";
+  constructor(propertySignatureTransformations) {
+    this.propertySignatureTransformations = propertySignatureTransformations;
+    // check for duplicate property signature transformations
+    const fromKeys = {};
+    const toKeys = {};
+    for (const pst of propertySignatureTransformations) {
+      const from = pst.from;
+      if (fromKeys[from]) {
+        throw new Error(getDuplicatePropertySignatureTransformationErrorMessage(from));
+      }
+      fromKeys[from] = true;
+      const to = pst.to;
+      if (toKeys[to]) {
+        throw new Error(getDuplicatePropertySignatureTransformationErrorMessage(to));
+      }
+      toKeys[to] = true;
     }
-    keys[key] = true;
   }
-  return {
-    _tag: "TypeLiteralTransformation",
-    propertySignatureTransformations
-  };
-};
+}
 /**
- * @category guard
+ * @category guards
  * @since 1.0.0
  */
-export const isTypeLiteralTransformation = ast => ast._tag === "TypeLiteralTransformation";
+export const isTypeLiteralTransformation = /*#__PURE__*/createTransformationGuard("TypeLiteralTransformation");
 // -------------------------------------------------------------------------------------
 // API
 // -------------------------------------------------------------------------------------
@@ -632,68 +1426,20 @@ export const isTypeLiteralTransformation = ast => ast._tag === "TypeLiteralTrans
  *
  * @since 1.0.0
  */
-export const mergeAnnotations = (ast, annotations) => {
-  return {
-    ...ast,
-    annotations: {
-      ...ast.annotations,
-      ...annotations
-    }
-  };
-};
-/**
- * Adds an annotation, potentially overwriting the existing annotation with the specified id.
- *
- * @since 1.0.0
- */
-export const setAnnotation = (ast, sym, value) => {
-  return {
-    ...ast,
-    annotations: {
-      ...ast.annotations,
-      [sym]: value
-    }
+export const annotations = (ast, annotations) => {
+  const d = Object.getOwnPropertyDescriptors(ast);
+  d.annotations.value = {
+    ...ast.annotations,
+    ...annotations
   };
-};
-/**
- * Adds a rest element to the end of a tuple, or throws an exception if the rest element is already present.
- *
- * @since 1.0.0
- */
-export const appendRestElement = (ast, restElement) => {
-  if (Option.isSome(ast.rest)) {
-    // example: `type A = [...string[], ...number[]]` is illegal
-    throw new Error("A rest element cannot follow another rest element. ts(1265)");
-  }
-  return createTuple(ast.elements, Option.some([restElement]), ast.isReadonly);
-};
-/**
- * Appends an element to a tuple or throws an exception in the following cases:
- * - A required element cannot follow an optional element. ts(1257)
- * - An optional element cannot follow a rest element. ts(1266)
- *
- * @since 1.0.0
- */
-export const appendElement = (ast, newElement) => {
-  if (ast.elements.some(e => e.isOptional) && !newElement.isOptional) {
-    throw new Error("A required element cannot follow an optional element. ts(1257)");
-  }
-  return pipe(ast.rest, Option.match({
-    onNone: () => createTuple([...ast.elements, newElement], Option.none(), ast.isReadonly),
-    onSome: rest => {
-      if (newElement.isOptional) {
-        throw new Error("An optional element cannot follow a rest element. ts(1266)");
-      }
-      return createTuple(ast.elements, Option.some([...rest, newElement.type]), ast.isReadonly);
-    }
-  }));
+  return Object.create(Object.getPrototypeOf(ast), d);
 };
 /**
  * Equivalent at runtime to the TypeScript type-level `keyof` operator.
  *
  * @since 1.0.0
  */
-export const keyof = ast => createUnion(_keyof(ast));
+export const keyof = ast => Union.make(_keyof(ast));
 /** @internal */
 export const getTemplateLiteralRegex = ast => {
   let pattern = `^${ast.head}`;
@@ -713,6 +1459,14 @@ export const getTemplateLiteralRegex = ast => {
  */
 export const getPropertySignatures = ast => {
   switch (ast._tag) {
+    case "Declaration":
+      {
+        const annotation = getSurrogateSchemaAnnotation(ast);
+        if (Option.isSome(annotation)) {
+          return getPropertySignatures(annotation.value);
+        }
+        break;
+      }
     case "TypeLiteral":
       return ast.propertySignatures.slice();
     case "Suspend":
@@ -723,7 +1477,7 @@ export const getPropertySignatures = ast => {
 /** @internal */
 export const getNumberIndexedAccess = ast => {
   switch (ast._tag) {
-    case "Tuple":
+    case "TupleType":
       {
         let hasOptional = false;
         const out = [];
@@ -736,25 +1490,31 @@ export const getNumberIndexedAccess = ast => {
         if (hasOptional) {
           out.push(undefinedKeyword);
         }
-        if (Option.isSome(ast.rest)) {
-          for (const e of ast.rest.value) {
-            out.push(e);
-          }
+        for (const e of ast.rest) {
+          out.push(e);
         }
-        return createUnion(out);
+        return Union.make(out);
       }
     case "Refinement":
       return getNumberIndexedAccess(ast.from);
     case "Union":
-      return createUnion(ast.types.map(getNumberIndexedAccess));
+      return Union.make(ast.types.map(getNumberIndexedAccess));
     case "Suspend":
       return getNumberIndexedAccess(ast.f());
   }
-  throw new Error(`getNumberIndexedAccess: unsupported schema (${format(ast)})`);
+  throw new Error(`getNumberIndexedAccess: unsupported schema (${ast})`);
 };
 /** @internal */
 export const getPropertyKeyIndexedAccess = (ast, name) => {
   switch (ast._tag) {
+    case "Declaration":
+      {
+        const annotation = getSurrogateSchemaAnnotation(ast);
+        if (Option.isSome(annotation)) {
+          return getPropertyKeyIndexedAccess(annotation.value, name);
+        }
+        break;
+      }
     case "TypeLiteral":
       {
         const ops = ReadonlyArray.findFirst(ast.propertySignatures, ps => ps.name === name);
@@ -769,19 +1529,19 @@ export const getPropertyKeyIndexedAccess = (ast, name) => {
                   {
                     const regex = getTemplateLiteralRegex(parameterBase);
                     if (regex.test(name)) {
-                      return createPropertySignature(name, is.type, false, false);
+                      return new PropertySignature(name, is.type, false, false);
                     }
                     break;
                   }
                 case "StringKeyword":
-                  return createPropertySignature(name, is.type, false, false);
+                  return new PropertySignature(name, is.type, false, false);
               }
             }
           } else if (Predicate.isSymbol(name)) {
             for (const is of ast.indexSignatures) {
               const parameterBase = getParameterBase(is.parameter);
               if (isSymbolKeyword(parameterBase)) {
-                return createPropertySignature(name, is.type, false, false);
+                return new PropertySignature(name, is.type, false, false);
               }
             }
           }
@@ -789,14 +1549,22 @@ export const getPropertyKeyIndexedAccess = (ast, name) => {
         break;
       }
     case "Union":
-      return createPropertySignature(name, createUnion(ast.types.map(ast => getPropertyKeyIndexedAccess(ast, name).type)), false, true);
+      return new PropertySignature(name, Union.make(ast.types.map(ast => getPropertyKeyIndexedAccess(ast, name).type)), false, true);
     case "Suspend":
       return getPropertyKeyIndexedAccess(ast.f(), name);
   }
-  return createPropertySignature(name, neverKeyword, false, true);
+  return new PropertySignature(name, neverKeyword, false, true);
 };
 const getPropertyKeys = ast => {
   switch (ast._tag) {
+    case "Declaration":
+      {
+        const annotation = getSurrogateSchemaAnnotation(ast);
+        if (Option.isSome(annotation)) {
+          return getPropertyKeys(annotation.value);
+        }
+        break;
+      }
     case "TypeLiteral":
       return ast.propertySignatures.map(ps => ps.name);
     case "Suspend":
@@ -806,12 +1574,8 @@ const getPropertyKeys = ast => {
   }
   return [];
 };
-/**
- * Create a record with the specified key type and value type.
- *
- * @since 1.0.0
- */
-export const createRecord = (key, value, isReadonly) => {
+/** @internal */
+export const record = (key, value) => {
   const propertySignatures = [];
   const indexSignatures = [];
   const go = key => {
@@ -822,34 +1586,37 @@ export const createRecord = (key, value, isReadonly) => {
       case "SymbolKeyword":
       case "TemplateLiteral":
       case "Refinement":
-        indexSignatures.push(createIndexSignature(key, value, isReadonly));
+        indexSignatures.push(new IndexSignature(key, value, true));
         break;
       case "Literal":
         if (Predicate.isString(key.literal) || Predicate.isNumber(key.literal)) {
-          propertySignatures.push(createPropertySignature(key.literal, value, false, isReadonly));
+          propertySignatures.push(new PropertySignature(key.literal, value, false, true));
         } else {
-          throw new Error(`createRecord: unsupported literal (${formatUnknown(key.literal)})`);
+          throw new Error(`createRecord: unsupported literal (${_util.formatUnknown(key.literal)})`);
         }
         break;
       case "UniqueSymbol":
-        propertySignatures.push(createPropertySignature(key.symbol, value, false, isReadonly));
+        propertySignatures.push(new PropertySignature(key.symbol, value, false, true));
         break;
       case "Union":
         key.types.forEach(go);
         break;
       default:
-        throw new Error(`createRecord: unsupported key schema (${format(key)})`);
+        throw new Error(`createRecord: unsupported key schema (${key})`);
     }
   };
   go(key);
-  return createTypeLiteral(propertySignatures, indexSignatures);
+  return {
+    propertySignatures,
+    indexSignatures
+  };
 };
 /**
  * Equivalent at runtime to the built-in TypeScript utility type `Pick`.
  *
  * @since 1.0.0
  */
-export const pick = (ast, keys) => createTypeLiteral(keys.map(key => getPropertyKeyIndexedAccess(ast, key)), []);
+export const pick = (ast, keys) => new TypeLiteral(keys.map(key => getPropertyKeyIndexedAccess(ast, key)), []);
 /**
  * Equivalent at runtime to the built-in TypeScript utility type `Omit`.
  *
@@ -857,7 +1624,7 @@ export const pick = (ast, keys) => createTypeLiteral(keys.map(key => getProperty
  */
 export const omit = (ast, keys) => pick(ast, getPropertyKeys(ast).filter(name => !keys.includes(name)));
 /** @internal */
-export const orUndefined = ast => createUnion([ast, undefinedKeyword]);
+export const orUndefined = ast => Union.make([ast, undefinedKeyword]);
 /**
  * Equivalent at runtime to the built-in TypeScript utility type `Partial`.
  *
@@ -866,19 +1633,22 @@ export const orUndefined = ast => createUnion([ast, undefinedKeyword]);
 export const partial = (ast, options) => {
   const exact = options?.exact === true;
   switch (ast._tag) {
-    case "Tuple":
-      return createTuple(ast.elements.map(e => createElement(exact ? e.type : orUndefined(e.type), true)), pipe(ast.rest, Option.map(rest => [createUnion([...rest, undefinedKeyword])])), ast.isReadonly);
+    case "TupleType":
+      return new TupleType(ast.elements.map(e => new Element(exact ? e.type : orUndefined(e.type), true)), ReadonlyArray.match(ast.rest, {
+        onEmpty: () => ast.rest,
+        onNonEmpty: rest => [Union.make([...rest, undefinedKeyword])]
+      }), ast.isReadonly);
     case "TypeLiteral":
-      return createTypeLiteral(ast.propertySignatures.map(ps => createPropertySignature(ps.name, exact ? ps.type : orUndefined(ps.type), true, ps.isReadonly, ps.annotations)), ast.indexSignatures.map(is => createIndexSignature(is.parameter, orUndefined(is.type), is.isReadonly)));
+      return new TypeLiteral(ast.propertySignatures.map(ps => new PropertySignature(ps.name, exact ? ps.type : orUndefined(ps.type), true, ps.isReadonly, ps.annotations)), ast.indexSignatures.map(is => new IndexSignature(is.parameter, orUndefined(is.type), is.isReadonly)));
     case "Union":
-      return createUnion(ast.types.map(member => partial(member, options)));
+      return Union.make(ast.types.map(member => partial(member, options)));
     case "Suspend":
-      return createSuspend(() => partial(ast.f(), options));
+      return new Suspend(() => partial(ast.f(), options));
     case "Declaration":
       throw new Error("`partial` cannot handle declarations");
     case "Refinement":
       throw new Error("`partial` cannot handle refinements");
-    case "Transform":
+    case "Transformation":
       throw new Error("`partial` cannot handle transformations");
   }
   return ast;
@@ -890,22 +1660,25 @@ export const partial = (ast, options) => {
  */
 export const required = ast => {
   switch (ast._tag) {
-    case "Tuple":
-      return createTuple(ast.elements.map(e => createElement(e.type, false)), pipe(ast.rest, Option.map(rest => {
-        const u = createUnion([...rest]);
-        return ReadonlyArray.map(rest, () => u);
-      })), ast.isReadonly);
+    case "TupleType":
+      return new TupleType(ast.elements.map(e => new Element(e.type, false)), ReadonlyArray.match(ast.rest, {
+        onEmpty: () => ast.rest,
+        onNonEmpty: rest => {
+          const union = Union.make([...rest]);
+          return ReadonlyArray.map(rest, () => union);
+        }
+      }), ast.isReadonly);
     case "TypeLiteral":
-      return createTypeLiteral(ast.propertySignatures.map(f => createPropertySignature(f.name, f.type, false, f.isReadonly, f.annotations)), ast.indexSignatures);
+      return new TypeLiteral(ast.propertySignatures.map(f => new PropertySignature(f.name, f.type, false, f.isReadonly, f.annotations)), ast.indexSignatures);
     case "Union":
-      return createUnion(ast.types.map(member => required(member)));
+      return Union.make(ast.types.map(member => required(member)));
     case "Suspend":
-      return createSuspend(() => required(ast.f()));
+      return new Suspend(() => required(ast.f()));
     case "Declaration":
       throw new Error("`required` cannot handle declarations");
     case "Refinement":
       throw new Error("`required` cannot handle refinements");
-    case "Transform":
+    case "Transformation":
       throw new Error("`required` cannot handle transformations");
   }
   return ast;
@@ -919,18 +1692,18 @@ export const required = ast => {
  */
 export const mutable = ast => {
   switch (ast._tag) {
-    case "Tuple":
-      return createTuple(ast.elements, ast.rest, false, ast.annotations);
+    case "TupleType":
+      return new TupleType(ast.elements, ast.rest, false, ast.annotations);
     case "TypeLiteral":
-      return createTypeLiteral(ast.propertySignatures.map(ps => createPropertySignature(ps.name, ps.type, ps.isOptional, false, ps.annotations)), ast.indexSignatures.map(is => createIndexSignature(is.parameter, is.type, false)), ast.annotations);
+      return new TypeLiteral(ast.propertySignatures.map(ps => new PropertySignature(ps.name, ps.type, ps.isOptional, false, ps.annotations)), ast.indexSignatures.map(is => new IndexSignature(is.parameter, is.type, false)), ast.annotations);
     case "Union":
-      return createUnion(ast.types.map(mutable), ast.annotations);
+      return Union.make(ast.types.map(mutable), ast.annotations);
     case "Suspend":
-      return createSuspend(() => mutable(ast.f()), ast.annotations);
+      return new Suspend(() => mutable(ast.f()), ast.annotations);
     case "Refinement":
-      return createRefinement(mutable(ast.from), ast.filter, ast.annotations);
-    case "Transform":
-      return createTransform(mutable(ast.from), mutable(ast.to), ast.transformation, ast.annotations);
+      return new Refinement(mutable(ast.from), ast.filter, ast.annotations);
+    case "Transformation":
+      return new Transformation(mutable(ast.from), mutable(ast.to), ast.transformation, ast.annotations);
   }
   return ast;
 };
@@ -942,104 +1715,134 @@ export const getCompiler = match => {
   return compile;
 };
 /** @internal */
-export const getToPropertySignatures = ps => ps.map(p => createPropertySignature(p.name, to(p.type), p.isOptional, p.isReadonly, p.annotations));
+export const getToPropertySignatures = ps => ps.map(p => new PropertySignature(p.name, typeAST(p.type), p.isOptional, p.isReadonly, p.annotations));
 /** @internal */
-export const getToIndexSignatures = ps => ps.map(is => createIndexSignature(is.parameter, to(is.type), is.isReadonly));
+export const getToIndexSignatures = ps => ps.map(is => new IndexSignature(is.parameter, typeAST(is.type), is.isReadonly));
 /**
  * @since 1.0.0
  */
-export const to = ast => {
+export const typeAST = ast => {
   switch (ast._tag) {
     case "Declaration":
-      return createDeclaration(ast.typeParameters.map(to), ast.decodeUnknown, ast.encodeUnknown, ast.annotations);
-    case "Tuple":
-      return createTuple(ast.elements.map(e => createElement(to(e.type), e.isOptional)), Option.map(ast.rest, ReadonlyArray.map(to)), ast.isReadonly, ast.annotations);
+      {
+        const typeParameters = changeMap(ast.typeParameters, typeAST);
+        return typeParameters === ast.typeParameters ? ast : new Declaration(typeParameters, ast.decodeUnknown, ast.encodeUnknown, ast.annotations);
+      }
+    case "TupleType":
+      {
+        const elements = changeMap(ast.elements, e => {
+          const type = typeAST(e.type);
+          return type === e.type ? e : new Element(type, e.isOptional);
+        });
+        const rest = changeMap(ast.rest, typeAST);
+        return elements === ast.elements && rest === ast.rest ? ast : new TupleType(elements, rest, ast.isReadonly, ast.annotations);
+      }
     case "TypeLiteral":
-      return createTypeLiteral(getToPropertySignatures(ast.propertySignatures), getToIndexSignatures(ast.indexSignatures), ast.annotations);
+      {
+        const propertySignatures = changeMap(ast.propertySignatures, p => {
+          const type = typeAST(p.type);
+          return type === p.type ? p : new PropertySignature(p.name, type, p.isOptional, p.isReadonly);
+        });
+        const indexSignatures = changeMap(ast.indexSignatures, is => {
+          const type = typeAST(is.type);
+          return type === is.type ? is : new IndexSignature(is.parameter, type, is.isReadonly);
+        });
+        return propertySignatures === ast.propertySignatures && indexSignatures === ast.indexSignatures ? ast : new TypeLiteral(propertySignatures, indexSignatures, ast.annotations);
+      }
     case "Union":
-      return createUnion(ast.types.map(to), ast.annotations);
+      {
+        const types = changeMap(ast.types, typeAST);
+        return types === ast.types ? ast : Union.make(ast.types.map(typeAST), ast.annotations);
+      }
     case "Suspend":
-      return createSuspend(() => to(ast.f()), ast.annotations);
+      return new Suspend(() => typeAST(ast.f()), ast.annotations);
     case "Refinement":
-      return createRefinement(to(ast.from), ast.filter, ast.annotations);
-    case "Transform":
-      return to(ast.to);
+      {
+        const from = typeAST(ast.from);
+        return from === ast.from ? ast : new Refinement(from, ast.filter, ast.annotations);
+      }
+    case "Transformation":
+      return typeAST(ast.to);
   }
   return ast;
 };
-const preserveIdentifierAnnotation = annotated => {
-  return Option.match(getIdentifierAnnotation(annotated), {
+/** @internal */
+export const getJSONIdentifier = annotated => Option.orElse(getJSONIdentifierAnnotation(annotated), () => getIdentifierAnnotation(annotated));
+const createJSONIdentifierAnnotation = annotated => {
+  return Option.match(getJSONIdentifier(annotated), {
     onNone: () => undefined,
     onSome: identifier => ({
-      [IdentifierAnnotationId]: identifier
+      [JSONIdentifierAnnotationId]: identifier
     })
   });
 };
+function changeMap(as, f) {
+  let changed = false;
+  const out = [];
+  for (const a of as) {
+    const fa = f(a);
+    if (fa !== a) {
+      changed = true;
+    }
+    out.push(f(a));
+  }
+  return changed ? out : as;
+}
 /**
  * @since 1.0.0
  */
-export const from = ast => {
+export const encodedAST = ast => {
   switch (ast._tag) {
     case "Declaration":
-      return createDeclaration(ast.typeParameters.map(from), ast.decodeUnknown, ast.encodeUnknown, ast.annotations);
-    case "Tuple":
-      return createTuple(ast.elements.map(e => createElement(from(e.type), e.isOptional)), Option.map(ast.rest, ReadonlyArray.map(from)), ast.isReadonly, preserveIdentifierAnnotation(ast));
+      {
+        const typeParameters = changeMap(ast.typeParameters, encodedAST);
+        return typeParameters === ast.typeParameters ? ast : new Declaration(typeParameters, ast.decodeUnknown, ast.encodeUnknown, ast.annotations);
+      }
+    case "TupleType":
+      {
+        const elements = changeMap(ast.elements, e => {
+          const type = encodedAST(e.type);
+          return type === e.type ? e : new Element(type, e.isOptional);
+        });
+        const rest = changeMap(ast.rest, encodedAST);
+        return elements === ast.elements && rest === ast.rest ? ast : new TupleType(elements, rest, ast.isReadonly, createJSONIdentifierAnnotation(ast));
+      }
     case "TypeLiteral":
-      return createTypeLiteral(ast.propertySignatures.map(p => createPropertySignature(p.name, from(p.type), p.isOptional, p.isReadonly)), ast.indexSignatures.map(is => createIndexSignature(is.parameter, from(is.type), is.isReadonly)), preserveIdentifierAnnotation(ast));
+      {
+        const propertySignatures = changeMap(ast.propertySignatures, p => {
+          const type = encodedAST(p.type);
+          return type === p.type ? p : new PropertySignature(p.name, type, p.isOptional, p.isReadonly);
+        });
+        const indexSignatures = changeMap(ast.indexSignatures, is => {
+          const type = encodedAST(is.type);
+          return type === is.type ? is : new IndexSignature(is.parameter, type, is.isReadonly);
+        });
+        return propertySignatures === ast.propertySignatures && indexSignatures === ast.indexSignatures ? ast : new TypeLiteral(propertySignatures, indexSignatures, createJSONIdentifierAnnotation(ast));
+      }
     case "Union":
-      return createUnion(ast.types.map(from), preserveIdentifierAnnotation(ast));
+      {
+        const types = changeMap(ast.types, encodedAST);
+        return types === ast.types ? ast : Union.make(ast.types.map(encodedAST), createJSONIdentifierAnnotation(ast));
+      }
     case "Suspend":
-      return createSuspend(() => from(ast.f()), preserveIdentifierAnnotation(ast));
+      return new Suspend(() => encodedAST(ast.f()), createJSONIdentifierAnnotation(ast));
     case "Refinement":
-    case "Transform":
-      return from(ast.from);
+    case "Transformation":
+      return encodedAST(ast.from);
   }
   return ast;
 };
-const toStringMemoSet = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for("@effect/schema/AST/toStringMemoSet"), () => new WeakSet());
-const containerASTTags = {
-  Declaration: true,
-  Refinement: true,
-  Tuple: true,
-  TypeLiteral: true,
-  Union: true,
-  Suspend: true,
-  Transform: true
-};
-const isContainerAST = ast => "_tag" in ast && Predicate.isString(ast["_tag"]) && ast["_tag"] in containerASTTags;
-/** @internal */
-export const toString = ast => JSON.stringify(ast, (key, value) => {
-  if (Predicate.isSymbol(value)) {
-    return String(value);
-  }
-  if (typeof value === "object" && value !== null) {
-    if (isContainerAST(value)) {
-      if (toStringMemoSet.has(value)) {
-        return "<suspended schema>";
-      }
-      toStringMemoSet.add(value);
-      if (isSuspend(value)) {
-        const out = value.f();
-        if (toStringMemoSet.has(out)) {
-          return "<suspended schema>";
-        }
-        toStringMemoSet.add(out);
-        return out;
-      }
-    } else if (key === "annotations") {
-      const out = {};
-      for (const k of Internal.ownKeys(value)) {
-        out[String(k)] = value[k];
-      }
-      return out;
-    }
+const toJSONAnnotations = annotations => {
+  const out = {};
+  for (const k of Object.getOwnPropertySymbols(annotations)) {
+    out[String(k)] = annotations[k];
   }
-  return value;
-}, 2);
+  return out;
+};
 /**
  * @since 1.0.0
  */
-export const hash = ast => Hash.string(toString(ast));
+export const hash = ast => Hash.string(JSON.stringify(ast, null, 2));
 /** @internal */
 export const getCardinality = ast => {
   switch (ast._tag) {
@@ -1066,8 +1869,8 @@ export const getCardinality = ast => {
       return 4;
   }
 };
-const sortPropertySignatures = /*#__PURE__*/ReadonlyArray.sort( /*#__PURE__*/pipe(Number.Order, /*#__PURE__*/Order.mapInput(ps => getCardinality(ps.type))));
-const sortIndexSignatures = /*#__PURE__*/ReadonlyArray.sort( /*#__PURE__*/pipe(Number.Order, /*#__PURE__*/Order.mapInput(is => {
+const sortPropertySignatures = /*#__PURE__*/ReadonlyArray.sort( /*#__PURE__*/Order.mapInput(Number.Order, ps => getCardinality(ps.type)));
+const sortIndexSignatures = /*#__PURE__*/ReadonlyArray.sort( /*#__PURE__*/Order.mapInput(Number.Order, is => {
   switch (getParameterBase(is.parameter)._tag) {
     case "StringKeyword":
       return 2;
@@ -1076,7 +1879,7 @@ const sortIndexSignatures = /*#__PURE__*/ReadonlyArray.sort( /*#__PURE__*/pipe(N
     case "TemplateLiteral":
       return 1;
   }
-})));
+}));
 const WeightOrder = /*#__PURE__*/Order.tuple(Number.Order, Number.Order, Number.Order);
 const maxWeight = /*#__PURE__*/Order.max(WeightOrder);
 const emptyWeight = [0, 0, 0];
@@ -1084,11 +1887,9 @@ const maxWeightAll = weights => weights.reduce(maxWeight, emptyWeight);
 /** @internal */
 export const getWeight = ast => {
   switch (ast._tag) {
-    case "Tuple":
+    case "TupleType":
       {
-        const y = ast.elements.length;
-        const z = Option.isSome(ast.rest) ? ast.rest.value.length : 0;
-        return [2, y, z];
+        return [2, ast.elements.length, ast.rest.length];
       }
     case "TypeLiteral":
       {
@@ -1098,6 +1899,11 @@ export const getWeight = ast => {
       }
     case "Declaration":
       {
+        const annotation = getSurrogateSchemaAnnotation(ast);
+        if (Option.isSome(annotation)) {
+          const [_, y, z] = getWeight(annotation.value);
+          return [6, y, z];
+        }
         return [6, 0, 0];
       }
     case "Suspend":
@@ -1109,7 +1915,7 @@ export const getWeight = ast => {
         const [x, y, z] = getWeight(ast.from);
         return [x + 1, y, z];
       }
-    case "Transform":
+    case "Transformation":
       return getWeight(ast.from);
     case "ObjectKeyword":
       return [-2, 0, 0];
@@ -1121,38 +1927,117 @@ export const getWeight = ast => {
   }
 };
 const sortUnionMembers = /*#__PURE__*/ReadonlyArray.sort( /*#__PURE__*/Order.reverse( /*#__PURE__*/Order.mapInput(WeightOrder, getWeight)));
-const unify = candidates => {
-  let out = pipe(candidates, ReadonlyArray.flatMap(ast => {
+const sortCandidates = /*#__PURE__*/ReadonlyArray.sort( /*#__PURE__*/Order.mapInput(Number.Order, ast => {
+  switch (ast._tag) {
+    case "AnyKeyword":
+      return 0;
+    case "UnknownKeyword":
+      return 1;
+    case "ObjectKeyword":
+      return 2;
+    case "StringKeyword":
+    case "NumberKeyword":
+    case "BooleanKeyword":
+    case "BigIntKeyword":
+    case "SymbolKeyword":
+      return 3;
+  }
+  return 4;
+}));
+const literalMap = {
+  string: "StringKeyword",
+  number: "NumberKeyword",
+  boolean: "BooleanKeyword",
+  bigint: "BigIntKeyword"
+};
+/** @internal */
+export const unify = candidates => {
+  const cs = sortCandidates(candidates);
+  const out = [];
+  const uniques = {};
+  const literals = [];
+  for (const ast of cs) {
     switch (ast._tag) {
       case "NeverKeyword":
-        return [];
-      case "Union":
-        return ast.types;
+        break;
+      case "AnyKeyword":
+        return [anyKeyword];
+      case "UnknownKeyword":
+        return [unknownKeyword];
+      // uniques
+      case "ObjectKeyword":
+      case "UndefinedKeyword":
+      case "VoidKeyword":
+      case "StringKeyword":
+      case "NumberKeyword":
+      case "BooleanKeyword":
+      case "BigIntKeyword":
+      case "SymbolKeyword":
+        {
+          if (!uniques[ast._tag]) {
+            uniques[ast._tag] = ast;
+            out.push(ast);
+          }
+          break;
+        }
+      case "Literal":
+        {
+          const type = typeof ast.literal;
+          switch (type) {
+            case "string":
+            case "number":
+            case "bigint":
+            case "boolean":
+              {
+                const _tag = literalMap[type];
+                if (!uniques[_tag] && !literals.includes(ast.literal)) {
+                  literals.push(ast.literal);
+                  out.push(ast);
+                }
+                break;
+              }
+            // null
+            case "object":
+              {
+                if (!literals.includes(ast.literal)) {
+                  literals.push(ast.literal);
+                  out.push(ast);
+                }
+                break;
+              }
+          }
+          break;
+        }
+      case "UniqueSymbol":
+        {
+          if (!uniques["SymbolKeyword"] && !literals.includes(ast.symbol)) {
+            literals.push(ast.symbol);
+            out.push(ast);
+          }
+          break;
+        }
+      case "TupleType":
+        {
+          if (!uniques["ObjectKeyword"]) {
+            out.push(ast);
+          }
+          break;
+        }
+      case "TypeLiteral":
+        {
+          if (ast.propertySignatures.length === 0 && ast.indexSignatures.length === 0) {
+            if (!uniques["{}"]) {
+              uniques["{}"] = ast;
+              out.push(ast);
+            }
+          } else if (!uniques["ObjectKeyword"]) {
+            out.push(ast);
+          }
+          break;
+        }
       default:
-        return [ast];
+        out.push(ast);
     }
-  }));
-  if (out.some(isAnyKeyword)) {
-    return [anyKeyword];
-  }
-  if (out.some(isUnknownKeyword)) {
-    return [unknownKeyword];
-  }
-  let i;
-  if ((i = out.findIndex(isStringKeyword)) !== -1) {
-    out = out.filter((m, j) => j === i || !isStringKeyword(m) && !(isLiteral(m) && typeof m.literal === "string"));
-  }
-  if ((i = out.findIndex(isNumberKeyword)) !== -1) {
-    out = out.filter((m, j) => j === i || !isNumberKeyword(m) && !(isLiteral(m) && typeof m.literal === "number"));
-  }
-  if ((i = out.findIndex(isBooleanKeyword)) !== -1) {
-    out = out.filter((m, j) => j === i || !isBooleanKeyword(m) && !(isLiteral(m) && typeof m.literal === "boolean"));
-  }
-  if ((i = out.findIndex(isBigIntKeyword)) !== -1) {
-    out = out.filter((m, j) => j === i || !isBigIntKeyword(m) && !(isLiteral(m) && typeof m.literal === "bigint"));
-  }
-  if ((i = out.findIndex(isSymbolKeyword)) !== -1) {
-    out = out.filter((m, j) => j === i || !isSymbolKeyword(m) && !isUniqueSymbol(m));
   }
   return out;
 };
@@ -1192,11 +2077,11 @@ const equals = (self, that) => {
     case "Enums":
       return isEnums(that) && equalsEnums(that.enums, self.enums);
     case "Refinement":
-    case "Tuple":
+    case "TupleType":
     case "TypeLiteral":
     case "Union":
     case "Suspend":
-    case "Transform":
+    case "Transformation":
     case "Declaration":
       return self === that;
   }
@@ -1204,107 +2089,55 @@ const equals = (self, that) => {
 const intersection = /*#__PURE__*/ReadonlyArray.intersectionWith(equals);
 const _keyof = ast => {
   switch (ast._tag) {
+    case "Declaration":
+      {
+        const annotation = getSurrogateSchemaAnnotation(ast);
+        if (Option.isSome(annotation)) {
+          return _keyof(annotation.value);
+        }
+        break;
+      }
     case "TypeLiteral":
-      return ast.propertySignatures.map(p => Predicate.isSymbol(p.name) ? createUniqueSymbol(p.name) : createLiteral(p.name)).concat(ast.indexSignatures.map(is => getParameterBase(is.parameter)));
+      return ast.propertySignatures.map(p => Predicate.isSymbol(p.name) ? new UniqueSymbol(p.name) : new Literal(p.name)).concat(ast.indexSignatures.map(is => getParameterBase(is.parameter)));
     case "Suspend":
       return _keyof(ast.f());
     case "Union":
       return ast.types.slice(1).reduce((out, ast) => intersection(out, _keyof(ast)), _keyof(ast.types[0]));
-    case "Transform":
+    case "Transformation":
       return _keyof(ast.to);
   }
-  throw new Error(`keyof: unsupported schema (${format(ast)})`);
+  throw new Error(`keyof: unsupported schema (${ast})`);
 };
 /** @internal */
-export const compose = (ab, cd) => createTransform(ab, cd, composeTransformation);
+export const compose = (ab, cd) => new Transformation(ab, cd, composeTransformation);
 /** @internal */
 export const rename = (ast, mapping) => {
   switch (ast._tag) {
     case "TypeLiteral":
       {
-        const propertySignatureTransforms = [];
-        for (const key of Internal.ownKeys(mapping)) {
+        const propertySignatureTransformations = [];
+        for (const key of _util.ownKeys(mapping)) {
           const name = mapping[key];
           if (name !== undefined) {
-            propertySignatureTransforms.push(createPropertySignatureTransform(key, name, createFinalPropertySignatureTransformation(identity, identity)));
+            propertySignatureTransformations.push(new PropertySignatureTransformation(key, name, identity, identity));
           }
         }
-        if (propertySignatureTransforms.length === 0) {
+        if (propertySignatureTransformations.length === 0) {
           return ast;
         }
-        return createTransform(ast, createTypeLiteral(ast.propertySignatures.map(ps => {
+        return new Transformation(ast, new TypeLiteral(ast.propertySignatures.map(ps => {
           const name = mapping[ps.name];
-          return createPropertySignature(name === undefined ? ps.name : name, to(ps.type), ps.isOptional, ps.isReadonly, ps.annotations);
-        }), ast.indexSignatures), createTypeLiteralTransformation(propertySignatureTransforms));
+          return new PropertySignature(name === undefined ? ps.name : name, typeAST(ps.type), ps.isOptional, ps.isReadonly, ps.annotations);
+        }), ast.indexSignatures), new TypeLiteralTransformation(propertySignatureTransformations));
       }
     case "Suspend":
-      return createSuspend(() => rename(ast.f(), mapping));
-    case "Transform":
-      return compose(ast, rename(to(ast), mapping));
+      return new Suspend(() => rename(ast.f(), mapping));
+    case "Transformation":
+      return compose(ast, rename(typeAST(ast), mapping));
   }
-  throw new Error(`rename: cannot rename (${format(ast)})`);
+  throw new Error(`rename: cannot rename (${ast})`);
 };
-const formatTransformation = (from, to) => `(${from} <-> ${to})`;
-/**
- * @category formatting
- * @since 1.0.0
- */
-export const format = (ast, verbose = false) => {
-  switch (ast._tag) {
-    case "StringKeyword":
-    case "NumberKeyword":
-    case "BooleanKeyword":
-    case "BigIntKeyword":
-    case "UndefinedKeyword":
-    case "SymbolKeyword":
-    case "ObjectKeyword":
-    case "AnyKeyword":
-    case "UnknownKeyword":
-    case "VoidKeyword":
-    case "NeverKeyword":
-      return Option.getOrElse(getExpected(ast, verbose), () => ast._tag);
-    case "Literal":
-      return Option.getOrElse(getExpected(ast, verbose), () => formatUnknown(ast.literal));
-    case "UniqueSymbol":
-      return Option.getOrElse(getExpected(ast, verbose), () => formatUnknown(ast.symbol));
-    case "Union":
-      return Option.getOrElse(getExpected(ast, verbose), () => ast.types.map(member => format(member)).join(" | "));
-    case "TemplateLiteral":
-      return Option.getOrElse(getExpected(ast, verbose), () => formatTemplateLiteral(ast));
-    case "Tuple":
-      return Option.getOrElse(getExpected(ast, verbose), () => formatTuple(ast));
-    case "TypeLiteral":
-      return Option.getOrElse(getExpected(ast, verbose), () => formatTypeLiteral(ast));
-    case "Enums":
-      return Option.getOrElse(getExpected(ast, verbose), () => `<enum ${ast.enums.length} value(s): ${ast.enums.map((_, value) => JSON.stringify(value)).join(" | ")}>`);
-    case "Suspend":
-      return getExpected(ast, verbose).pipe(Option.orElse(() => Option.flatMap(Option.liftThrowable(ast.f)(), ast => getExpected(ast, verbose))), Option.getOrElse(() => "<suspended schema>"));
-    case "Declaration":
-      return Option.getOrElse(getExpected(ast, verbose), () => "<declaration schema>");
-    case "Refinement":
-      return Option.getOrElse(getExpected(ast, verbose), () => "<refinement schema>");
-    case "Transform":
-      return Option.getOrElse(getExpected(ast, verbose), () => formatTransformation(format(ast.from), format(ast.to)));
-  }
-};
-/** @internal */
-export const formatUnknown = u => {
-  if (Predicate.isString(u)) {
-    return JSON.stringify(u);
-  } else if (Predicate.isNumber(u) || u == null || Predicate.isBoolean(u) || Predicate.isSymbol(u) || Predicate.isDate(u)) {
-    return String(u);
-  } else if (Predicate.isBigInt(u)) {
-    return String(u) + "n";
-  } else if (!Array.isArray(u) && Predicate.hasProperty(u, "toString") && Predicate.isFunction(u["toString"]) && u["toString"] !== Object.prototype.toString) {
-    return u["toString"]();
-  }
-  try {
-    return JSON.stringify(u);
-  } catch (e) {
-    return String(u);
-  }
-};
-const formatTemplateLiteral = ast => "`" + ast.head + ast.spans.map(span => formatTemplateLiteralSpan(span) + span.literal).join("") + "`";
+const formatKeyword = (ast, verbose = false) => Option.getOrElse(getExpected(ast, verbose), () => ast._tag);
 const getExpected = (ast, verbose) => {
   if (verbose) {
     const description = getDescriptionAnnotation(ast).pipe(Option.orElse(() => getTitleAnnotation(ast)));
@@ -1315,56 +2148,8 @@ const getExpected = (ast, verbose) => {
         onSome: description => Option.some(`${identifier} (${description})`)
       })
     });
-  }
-  return getIdentifierAnnotation(ast).pipe(Option.orElse(() => getTitleAnnotation(ast)), Option.orElse(() => getDescriptionAnnotation(ast)));
-};
-const formatTuple = ast => {
-  const formattedElements = ast.elements.map(element => format(element.type) + (element.isOptional ? "?" : "")).join(", ");
-  return Option.match(ast.rest, {
-    onNone: () => "readonly [" + formattedElements + "]",
-    onSome: ([head, ...tail]) => {
-      const formattedHead = format(head);
-      const wrappedHead = formattedHead.includes(" | ") ? "(" + formattedHead + ")" : formattedHead;
-      if (tail.length > 0) {
-        const formattedTail = tail.map(ast => format(ast)).join(", ");
-        if (ast.elements.length > 0) {
-          return `readonly [${formattedElements}, ...${wrappedHead}[], ${formattedTail}]`;
-        } else {
-          return `readonly [...${wrappedHead}[], ${formattedTail}]`;
-        }
-      } else {
-        if (ast.elements.length > 0) {
-          return `readonly [${formattedElements}, ...${wrappedHead}[]]`;
-        } else {
-          return `ReadonlyArray<${formattedHead}>`;
-        }
-      }
-    }
-  });
-};
-const formatTypeLiteral = ast => {
-  const formattedPropertySignatures = ast.propertySignatures.map(ps => String(ps.name) + (ps.isOptional ? "?" : "") + ": " + format(ps.type)).join("; ");
-  if (ast.indexSignatures.length > 0) {
-    const formattedIndexSignatures = ast.indexSignatures.map(is => `[x: ${format(getParameterBase(is.parameter))}]: ${format(is.type)}`).join("; ");
-    if (ast.propertySignatures.length > 0) {
-      return `{ ${formattedPropertySignatures}; ${formattedIndexSignatures} }`;
-    } else {
-      return `{ ${formattedIndexSignatures} }`;
-    }
   } else {
-    if (ast.propertySignatures.length > 0) {
-      return `{ ${formattedPropertySignatures} }`;
-    } else {
-      return "{}";
-    }
-  }
-};
-const formatTemplateLiteralSpan = span => {
-  switch (span.type._tag) {
-    case "StringKeyword":
-      return "${string}";
-    case "NumberKeyword":
-      return "${number}";
+    return getIdentifierAnnotation(ast).pipe(Option.orElse(() => getTitleAnnotation(ast)), Option.orElse(() => getDescriptionAnnotation(ast)));
   }
 };
 //# sourceMappingURL=AST.js.map
\ No newline at end of file
diff --git a/dist/esm/AST.js.map b/dist/esm/AST.js.map
index d8607d4e209c4301aac0070f6b0e7531da86744d..8c3de40a806b07712e0df1af284a93cd1c5fef13 100644
--- a/dist/esm/AST.js.map
+++ b/dist/esm/AST.js.map
@@ -1 +1 @@
-{"version":3,"file":"AST.js","names":["dual","identity","pipe","globalValue","Hash","Number","Option","Order","Predicate","ReadonlyArray","Internal","BrandAnnotationId","Symbol","for","TypeAnnotationId","MessageAnnotationId","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","JSONSchemaAnnotationId","DocumentationAnnotationId","ConcurrencyAnnotationId","BatchingAnnotationId","getAnnotation","annotated","key","Object","prototype","hasOwnProperty","call","annotations","some","none","getMessageAnnotation","getTitleAnnotation","getIdentifierAnnotation","getDescriptionAnnotation","getExamplesAnnotation","getDefaultAnnotation","getJSONSchemaAnnotation","getDocumentationAnnotation","getConcurrencyAnnotation","getBatchingAnnotation","createDeclaration","typeParameters","decodeUnknown","encodeUnknown","_tag","isDeclaration","ast","createLiteral","literal","isLiteral","_null","createUniqueSymbol","symbol","isUniqueSymbol","undefinedKeyword","isUndefinedKeyword","voidKeyword","isVoidKeyword","neverKeyword","isNeverKeyword","unknownKeyword","isUnknownKeyword","anyKeyword","isAnyKeyword","stringKeyword","isStringKeyword","numberKeyword","isNumberKeyword","booleanKeyword","isBooleanKeyword","bigIntKeyword","isBigIntKeyword","symbolKeyword","isSymbolKeyword","objectKeyword","isObjectKeyword","createEnums","enums","isEnums","createTemplateLiteral","head","spans","isNonEmptyReadonlyArray","isTemplateLiteral","createElement","type","isOptional","createTuple","elements","rest","isReadonly","isTuple","createPropertySignature","name","isParameter","from","createIndexSignature","parameter","Error","createTypeLiteral","propertySignatures","indexSignatures","keys","i","length","String","parameters","string","getParameterBase","sortPropertySignatures","sortIndexSignatures","isTypeLiteral","isMembers","as","createUnion","candidates","types","unify","sortUnionMembers","isUnion","createSuspend","f","memoizeThunk","isSuspend","createRefinement","filter","isRefinement","createTransform","to","transformation","isTransform","createFinalTransformation","decode","encode","isFinalTransformation","composeTransformation","isComposeTransformation","createFinalPropertySignatureTransformation","isFinalPropertySignatureTransformation","createPropertySignatureTransform","propertySignatureTransformation","createTypeLiteralTransformation","propertySignatureTransformations","pst","isTypeLiteralTransformation","mergeAnnotations","setAnnotation","sym","value","appendRestElement","restElement","isSome","appendElement","newElement","e","match","onNone","onSome","keyof","_keyof","getTemplateLiteralRegex","pattern","span","RegExp","getPropertySignatures","slice","getPropertyKeys","map","getPropertyKeyIndexedAccess","getNumberIndexedAccess","hasOptional","out","push","format","ops","findFirst","ps","isString","is","parameterBase","regex","test","isSymbol","reduce","intersection","createRecord","go","isNumber","formatUnknown","forEach","pick","omit","includes","orUndefined","partial","options","exact","member","required","u","mutable","getCompiler","compile","getToPropertySignatures","p","getToIndexSignatures","preserveIdentifierAnnotation","undefined","identifier","toStringMemoSet","WeakSet","containerASTTags","Declaration","Refinement","Tuple","TypeLiteral","Union","Suspend","Transform","isContainerAST","toString","JSON","stringify","has","add","k","ownKeys","hash","getCardinality","sort","mapInput","WeightOrder","tuple","maxWeight","max","emptyWeight","maxWeightAll","weights","getWeight","y","z","x","reverse","flatMap","findIndex","m","j","equalsTemplateLiteralSpan","getEquivalence","self","that","equalsEnums","equals","intersectionWith","concat","compose","ab","cd","rename","mapping","propertySignatureTransforms","formatTransformation","verbose","getOrElse","getExpected","join","formatTemplateLiteral","formatTuple","formatTypeLiteral","_","orElse","liftThrowable","isBoolean","isDate","isBigInt","Array","isArray","hasProperty","isFunction","formatTemplateLiteralSpan","description","formattedElements","element","tail","formattedHead","wrappedHead","formattedTail","formattedPropertySignatures","formattedIndexSignatures"],"sources":["../../src/AST.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"AST.js","names":["dual","identity","globalValue","Hash","Number","Option","Order","Predicate","ReadonlyArray","_util","BrandAnnotationId","Symbol","for","TypeAnnotationId","MessageAnnotationId","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","JSONSchemaAnnotationId","DocumentationAnnotationId","ConcurrencyAnnotationId","BatchingAnnotationId","SurrogateAnnotationId","JSONIdentifierAnnotationId","getAnnotation","annotated","key","Object","prototype","hasOwnProperty","call","annotations","some","none","getBrandAnnotation","getMessageAnnotation","getTitleAnnotation","getIdentifierAnnotation","getDescriptionAnnotation","getExamplesAnnotation","getDefaultAnnotation","getJSONSchemaAnnotation","getDocumentationAnnotation","getConcurrencyAnnotation","getBatchingAnnotation","getSurrogateSchemaAnnotation","getJSONIdentifierAnnotation","Declaration","typeParameters","decodeUnknown","encodeUnknown","_tag","constructor","toString","verbose","getOrElse","getExpected","toJSON","map","ast","toJSONAnnotations","createASTGuard","tag","isDeclaration","Literal","literal","formatUnknown","isBigInt","String","isLiteral","_null","UniqueSymbol","symbol","isUniqueSymbol","UndefinedKeyword","formatKeyword","undefinedKeyword","isUndefinedKeyword","VoidKeyword","voidKeyword","isVoidKeyword","NeverKeyword","neverKeyword","isNeverKeyword","UnknownKeyword","unknownKeyword","isUnknownKeyword","AnyKeyword","anyKeyword","isAnyKeyword","StringKeyword","stringKeyword","isStringKeyword","NumberKeyword","numberKeyword","isNumberKeyword","BooleanKeyword","booleanKeyword","isBooleanKeyword","BigIntKeyword","bigIntKeyword","isBigIntKeyword","SymbolKeyword","symbolKeyword","isSymbolKeyword","ObjectKeyword","objectKeyword","isObjectKeyword","Enums","enums","length","_","value","JSON","stringify","join","isEnums","TemplateLiteralSpan","type","TemplateLiteral","head","spans","make","isNonEmptyReadonlyArray","formatTemplateLiteral","span","isTemplateLiteral","Element","isOptional","TupleType","elements","rest","isReadonly","hasOptionalElement","hasIllegalRequiredElement","e","Error","formatTuple","formattedElements","element","matchLeft","onEmpty","onNonEmpty","tail","formattedHead","wrappedHead","includes","formattedTail","isTupleType","PropertySignature","name","isParameter","from","IndexSignature","parameter","getDuplicatePropertySignatureErrorMessage","getDuplicateIndexSignatureErrorMessage","TypeLiteral","propertySignatures","indexSignatures","keys","i","parameters","string","getParameterBase","sortPropertySignatures","sortIndexSignatures","formatTypeLiteral","ps","formattedPropertySignatures","formattedIndexSignatures","is","isTypeLiteral","flatten","candidates","flatMap","types","prettyUnion","ss","Array","Set","getDefaultUnionDescription","nested","other","c","isUnion","expected","isSome","push","concat","Union","unify","isMembers","defaultDescription","sortUnionMembers","mapMembers","members","f","as","toJSONMemoMap","WeakMap","Suspend","memoizeThunk","pipe","orElse","liftThrowable","out","get","set","isSuspend","Refinement","filter","isRefinement","defaultParseOption","Transformation","to","transformation","isTransform","FinalTransformation","decode","encode","createTransformationGuard","isFinalTransformation","ComposeTransformation","composeTransformation","isComposeTransformation","PropertySignatureTransformation","getDuplicatePropertySignatureTransformationErrorMessage","TypeLiteralTransformation","propertySignatureTransformations","fromKeys","toKeys","pst","isTypeLiteralTransformation","d","getOwnPropertyDescriptors","create","getPrototypeOf","keyof","_keyof","getTemplateLiteralRegex","pattern","RegExp","getPropertySignatures","annotation","slice","getPropertyKeys","getPropertyKeyIndexedAccess","getNumberIndexedAccess","hasOptional","ops","findFirst","isString","parameterBase","regex","test","isSymbol","reduce","intersection","record","go","isNumber","forEach","pick","omit","orUndefined","partial","options","exact","match","member","required","union","mutable","getCompiler","compile","getToPropertySignatures","p","typeAST","getToIndexSignatures","changeMap","getJSONIdentifier","createJSONIdentifierAnnotation","onNone","undefined","onSome","identifier","changed","a","fa","encodedAST","k","getOwnPropertySymbols","hash","getCardinality","sort","mapInput","WeightOrder","tuple","maxWeight","max","emptyWeight","maxWeightAll","weights","getWeight","y","z","x","reverse","sortCandidates","literalMap","number","boolean","bigint","cs","uniques","literals","equalsTemplateLiteralSpan","getEquivalence","self","that","equalsEnums","equals","intersectionWith","compose","ab","cd","rename","mapping","ownKeys","description"],"sources":["../../src/AST.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/Arbitrary.js b/dist/esm/Arbitrary.js
index a0dec0c09378eda3ae5d9f7c98c4914c182a46b7..83f2f0b81b3fdc323039e46dd818ba3d391ed582 100644
--- a/dist/esm/Arbitrary.js
+++ b/dist/esm/Arbitrary.js
@@ -5,21 +5,21 @@ import * as Option from "effect/Option";
 import * as Predicate from "effect/Predicate";
 import * as ReadonlyArray from "effect/ReadonlyArray";
 import * as AST from "./AST.js";
-import * as Internal from "./internal/ast.js";
-import * as filters from "./internal/filters.js";
-import * as hooks from "./internal/hooks.js";
-import * as InternalSchema from "./internal/schema.js";
-import * as Parser from "./Parser.js";
+import * as _filters from "./internal/filters.js";
+import * as _hooks from "./internal/hooks.js";
+import * as _util from "./internal/util.js";
 /**
  * @category hooks
  * @since 1.0.0
  */
-export const ArbitraryHookId = hooks.ArbitraryHookId;
+export const ArbitraryHookId = _hooks.ArbitraryHookId;
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const arbitrary = handler => self => InternalSchema.make(AST.setAnnotation(self.ast, ArbitraryHookId, handler));
+export const arbitrary = handler => self => self.annotations({
+  [ArbitraryHookId]: handler
+});
 /**
  * Returns a fast-check Arbitrary for the `A` type of the provided schema.
  *
@@ -65,7 +65,7 @@ const go = (ast, options) => {
   switch (ast._tag) {
     case "Declaration":
       {
-        throw new Error(`cannot build an Arbitrary for a declaration without annotations (${AST.format(ast)})`);
+        throw new Error(`cannot build an Arbitrary for a declaration without annotations (${ast})`);
       }
     case "Literal":
       return fc => fc.constant(ast.literal);
@@ -140,7 +140,7 @@ const go = (ast, options) => {
           return fc.tuple(...components).map(spans => spans.join(""));
         };
       }
-    case "Tuple":
+    case "TupleType":
       {
         const elements = [];
         let hasOptionals = false;
@@ -150,7 +150,7 @@ const go = (ast, options) => {
             hasOptionals = true;
           }
         }
-        const rest = Option.map(ast.rest, ReadonlyArray.map(e => go(e, options)));
+        const rest = ast.rest.map(e => go(e, options));
         return fc => {
           // ---------------------------------------------
           // handle elements
@@ -170,8 +170,8 @@ const go = (ast, options) => {
           // ---------------------------------------------
           // handle rest element
           // ---------------------------------------------
-          if (Option.isSome(rest)) {
-            const [head, ...tail] = rest.value;
+          if (ReadonlyArray.isNonEmptyReadonlyArray(rest)) {
+            const [head, ...tail] = rest;
             const arb = head(fc);
             const constraints = options.constraints;
             output = output.chain(as => {
@@ -252,17 +252,17 @@ const go = (ast, options) => {
     case "Refinement":
       {
         const from = getRefinementFromArbitrary(ast, options);
-        return fc => from(fc).filter(a => Option.isNone(ast.filter(a, Parser.defaultParseOption, ast)));
+        return fc => from(fc).filter(a => Option.isNone(ast.filter(a, AST.defaultParseOption, ast)));
       }
     case "Suspend":
       {
-        const get = Internal.memoizeThunk(() => go(ast.f(), {
+        const get = _util.memoizeThunk(() => go(ast.f(), {
           ...options,
           isSuspend: true
         }));
         return fc => fc.constant(null).chain(() => get()(fc));
       }
-    case "Transform":
+    case "Transformation":
       return go(ast.to, options);
   }
 };
@@ -313,19 +313,19 @@ export const getConstraints = ast => {
   const jsonSchema = ast.annotations[AST.JSONSchemaAnnotationId];
   switch (TypeAnnotationId) {
     // number
-    case filters.GreaterThanTypeId:
-    case filters.GreaterThanOrEqualToTypeId:
+    case _filters.GreaterThanTypeId:
+    case _filters.GreaterThanOrEqualToTypeId:
       return numberConstraints({
         min: jsonSchema.exclusiveMinimum ?? jsonSchema.minimum
       });
-    case filters.LessThanTypeId:
-    case filters.LessThanOrEqualToTypeId:
+    case _filters.LessThanTypeId:
+    case _filters.LessThanOrEqualToTypeId:
       return numberConstraints({
         max: jsonSchema.exclusiveMaximum ?? jsonSchema.maximum
       });
-    case filters.IntTypeId:
+    case _filters.IntTypeId:
       return integerConstraints({});
-    case filters.BetweenTypeId:
+    case _filters.BetweenTypeId:
       {
         const min = jsonSchema.minimum;
         const max = jsonSchema.maximum;
@@ -339,23 +339,23 @@ export const getConstraints = ast => {
         return numberConstraints(constraints);
       }
     // bigint
-    case filters.GreaterThanBigintTypeId:
-    case filters.GreaterThanOrEqualToBigintTypeId:
+    case _filters.GreaterThanBigintTypeId:
+    case _filters.GreaterThanOrEqualToBigintTypeId:
       {
         const params = ast.annotations[TypeAnnotationId];
         return bigintConstraints({
           min: params.min
         });
       }
-    case filters.LessThanBigintTypeId:
-    case filters.LessThanOrEqualToBigintTypeId:
+    case _filters.LessThanBigintTypeId:
+    case _filters.LessThanOrEqualToBigintTypeId:
       {
         const params = ast.annotations[TypeAnnotationId];
         return bigintConstraints({
           max: params.max
         });
       }
-    case filters.BetweenBigintTypeId:
+    case _filters.BetweenBigintTypeId:
       {
         const params = ast.annotations[TypeAnnotationId];
         const min = params.min;
@@ -370,29 +370,29 @@ export const getConstraints = ast => {
         return bigintConstraints(constraints);
       }
     // string
-    case filters.MinLengthTypeId:
+    case _filters.MinLengthTypeId:
       return stringConstraints({
         minLength: jsonSchema.minLength
       });
-    case filters.MaxLengthTypeId:
+    case _filters.MaxLengthTypeId:
       return stringConstraints({
         maxLength: jsonSchema.maxLength
       });
-    case filters.LengthTypeId:
+    case _filters.LengthTypeId:
       return stringConstraints({
         minLength: jsonSchema.minLength,
         maxLength: jsonSchema.maxLength
       });
     // array
-    case filters.MinItemsTypeId:
+    case _filters.MinItemsTypeId:
       return arrayConstraints({
         minLength: jsonSchema.minItems
       });
-    case filters.MaxItemsTypeId:
+    case _filters.MaxItemsTypeId:
       return arrayConstraints({
         maxLength: jsonSchema.maxItems
       });
-    case filters.ItemsCountTypeId:
+    case _filters.ItemsCountTypeId:
       return arrayConstraints({
         minLength: jsonSchema.minItems,
         maxLength: jsonSchema.maxItems
diff --git a/dist/esm/Arbitrary.js.map b/dist/esm/Arbitrary.js.map
index df6788213930d2685cc38cc321306ef79540734f..9a2400b534d69c703c8ff075fad527c12b79c9e9 100644
--- a/dist/esm/Arbitrary.js.map
+++ b/dist/esm/Arbitrary.js.map
@@ -1 +1 @@
-{"version":3,"file":"Arbitrary.js","names":["Option","Predicate","ReadonlyArray","AST","Internal","filters","hooks","InternalSchema","Parser","ArbitraryHookId","arbitrary","handler","self","make","setAnnotation","ast","schema","go","depthSize","record","fc","key","value","options","isSuspend","oneof","constant","array","tuple","minLength","maxLength","map","tuples","out","k","v","getHook","getAnnotation","getRefinementFromArbitrary","constraints","combineConstraints","getConstraints","from","hook","isSome","_tag","typeParameters","p","Error","format","literal","symbol","undefined","anything","string","float","integer","boolean","bigInt","s","Symbol","for","object","number","noDefaultInfinity","filter","n","Number","isNaN","components","head","span","spans","isStringKeyword","type","push","join","elements","hasOptionals","element","isOptional","rest","e","output","arb","indexes","chain","booleans","i","b","reverse","entries","splice","length","tail","as","j","a","propertySignaturesTypes","propertySignatures","f","indexSignatures","is","parameter","arbs","requiredKeys","ps","name","o","d","types","t","enums","_","isNone","defaultParseOption","get","memoizeThunk","to","numberConstraints","isNumber","min","Math","fround","max","stringConstraints","integerConstraints","arrayConstraints","bigintConstraints","TypeAnnotationId","annotations","jsonSchema","JSONSchemaAnnotationId","GreaterThanTypeId","GreaterThanOrEqualToTypeId","exclusiveMinimum","minimum","LessThanTypeId","LessThanOrEqualToTypeId","exclusiveMaximum","maximum","IntTypeId","BetweenTypeId","GreaterThanBigintTypeId","GreaterThanOrEqualToBigintTypeId","params","LessThanBigintTypeId","LessThanOrEqualToBigintTypeId","BetweenBigintTypeId","isBigInt","MinLengthTypeId","MaxLengthTypeId","LengthTypeId","MinItemsTypeId","minItems","MaxItemsTypeId","maxItems","ItemsCountTypeId","c1","c2","c","getMax","getMin","n1","n2"],"sources":["../../src/Arbitrary.ts"],"sourcesContent":[null],"mappings":"AAAA;;;AAIA,OAAO,KAAKA,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,SAAS,MAAM,kBAAkB;AAC7C,OAAO,KAAKC,aAAa,MAAM,sBAAsB;AAErD,OAAO,KAAKC,GAAG,MAAM,UAAU;AAC/B,OAAO,KAAKC,QAAQ,MAAM,mBAAmB;AAC7C,OAAO,KAAKC,OAAO,MAAM,uBAAuB;AAChD,OAAO,KAAKC,KAAK,MAAM,qBAAqB;AAC5C,OAAO,KAAKC,cAAc,MAAM,sBAAsB;AACtD,OAAO,KAAKC,MAAM,MAAM,aAAa;AAWrC;;;;AAIA,OAAO,MAAMC,eAAe,GAAkBH,KAAK,CAACG,eAAe;AAQnE;;;;AAIA,OAAO,MAAMC,SAAS,GAChBC,OAAiE,IAC9DC,IAA4B,IACjCL,cAAc,CAACM,IAAI,CAACV,GAAG,CAACW,aAAa,CAACF,IAAI,CAACG,GAAG,EAAEN,eAAe,EAAEE,OAAO,CAAC,CAAC;AAE9E;;;;;;AAMA,OAAO,MAAME,IAAI,GAAaG,MAA8B,IAAmBC,EAAE,CAACD,MAAM,CAACD,GAAG,EAAE,EAAE,CAAC;AAEjG,MAAMG,SAAS,GAAG,CAAC;AAEnB,MAAMC,MAAM,GAAGA,CACbC,EAAoB,EACpBC,GAA2B,EAC3BC,KAA6B,EAC7BC,OAAgB,KACiC;EACjD,OAAO,CAACA,OAAO,CAACC,SAAS,GACvBJ,EAAE,CAACK,KAAK,CACN;IAAEP;EAAS,CAAE,EACbE,EAAE,CAACM,QAAQ,CAAC,EAAE,CAAC,EACfN,EAAE,CAACO,KAAK,CAACP,EAAE,CAACQ,KAAK,CAACP,GAAG,EAAEC,KAAK,CAAC,EAAE;IAAEO,SAAS,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAC,CAAE,CAAC,CAC/D,GACDV,EAAE,CAACO,KAAK,CAACP,EAAE,CAACQ,KAAK,CAACP,GAAG,EAAEC,KAAK,CAAC,CAAC,EAAES,GAAG,CAAEC,MAAM,IAAI;IAC7C,MAAMC,GAAG,GAAoB,EAAS;IACtC,KAAK,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,IAAIH,MAAM,EAAE;MAC3BC,GAAG,CAACC,CAAC,CAAC,GAAGC,CAAC;IACZ;IACA,OAAOF,GAAG;EACZ,CAAC,CAAC;AACN,CAAC;AAED,MAAMG,OAAO,gBAAGjC,GAAG,CAACkC,aAAa,CAE/B5B,eAAe,CAAC;AAOlB,MAAM6B,0BAA0B,GAAGA,CAACvB,GAAmB,EAAEQ,OAAgB,KAAI;EAC3E,MAAMgB,WAAW,GAAGC,kBAAkB,CAACjB,OAAO,CAACgB,WAAW,EAAEE,cAAc,CAAC1B,GAAG,CAAC,CAAC;EAChF,OAAOE,EAAE,CAACF,GAAG,CAAC2B,IAAI,EAAEH,WAAW,GAAG;IAAE,GAAGhB,OAAO;IAAEgB;EAAW,CAAE,GAAGhB,OAAO,CAAC;AAC1E,CAAC;AAED,MAAMN,EAAE,GAAGA,CAACF,GAAY,EAAEQ,OAAgB,KAAoB;EAC5D,MAAMoB,IAAI,GAAGP,OAAO,CAACrB,GAAG,CAAC;EACzB,IAAIf,MAAM,CAAC4C,MAAM,CAACD,IAAI,CAAC,EAAE;IACvB,QAAQ5B,GAAG,CAAC8B,IAAI;MACd,KAAK,aAAa;QAChB,OAAOF,IAAI,CAACrB,KAAK,CAAC,GAAGP,GAAG,CAAC+B,cAAc,CAACf,GAAG,CAAEgB,CAAC,IAAK9B,EAAE,CAAC8B,CAAC,EAAExB,OAAO,CAAC,CAAC,CAAC;MACrE,KAAK,YAAY;QACf,OAAOoB,IAAI,CAACrB,KAAK,CAACgB,0BAA0B,CAACvB,GAAG,EAAEQ,OAAO,CAAC,CAAC;MAC7D;QACE,OAAOoB,IAAI,CAACrB,KAAK,EAAE;IACvB;EACF;EACA,QAAQP,GAAG,CAAC8B,IAAI;IACd,KAAK,aAAa;MAAE;QAClB,MAAM,IAAIG,KAAK,CAAC,oEAAoE7C,GAAG,CAAC8C,MAAM,CAAClC,GAAG,CAAC,GAAG,CAAC;MACzG;IACA,KAAK,SAAS;MACZ,OAAQK,EAAE,IAAKA,EAAE,CAACM,QAAQ,CAACX,GAAG,CAACmC,OAAO,CAAC;IACzC,KAAK,cAAc;MACjB,OAAQ9B,EAAE,IAAKA,EAAE,CAACM,QAAQ,CAACX,GAAG,CAACoC,MAAM,CAAC;IACxC,KAAK,kBAAkB;IACvB,KAAK,aAAa;MAChB,OAAQ/B,EAAE,IAAKA,EAAE,CAACM,QAAQ,CAAC0B,SAAS,CAAC;IACvC,KAAK,cAAc;MACjB,OAAO,MAAK;QACV,MAAM,IAAIJ,KAAK,CAAC,uCAAuC,CAAC;MAC1D,CAAC;IACH,KAAK,gBAAgB;IACrB,KAAK,YAAY;MACf,OAAQ5B,EAAE,IAAKA,EAAE,CAACiC,QAAQ,EAAE;IAC9B,KAAK,eAAe;MAClB,OAAQjC,EAAE,IAAI;QACZ,IAAIG,OAAO,CAACgB,WAAW,EAAE;UACvB,QAAQhB,OAAO,CAACgB,WAAW,CAACM,IAAI;YAC9B,KAAK,mBAAmB;cACtB,OAAOzB,EAAE,CAACkC,MAAM,CAAC/B,OAAO,CAACgB,WAAW,CAACA,WAAW,CAAC;UACrD;QACF;QACA,OAAOnB,EAAE,CAACkC,MAAM,EAAE;MACpB,CAAC;IACH,KAAK,eAAe;MAClB,OAAQlC,EAAE,IAAI;QACZ,IAAIG,OAAO,CAACgB,WAAW,EAAE;UACvB,QAAQhB,OAAO,CAACgB,WAAW,CAACM,IAAI;YAC9B,KAAK,mBAAmB;cACtB,OAAOzB,EAAE,CAACmC,KAAK,CAAChC,OAAO,CAACgB,WAAW,CAACA,WAAW,CAAC;YAClD,KAAK,oBAAoB;cACvB,OAAOnB,EAAE,CAACoC,OAAO,CAACjC,OAAO,CAACgB,WAAW,CAACA,WAAW,CAAC;UACtD;QACF;QACA,OAAOnB,EAAE,CAACmC,KAAK,EAAE;MACnB,CAAC;IACH,KAAK,gBAAgB;MACnB,OAAQnC,EAAE,IAAKA,EAAE,CAACqC,OAAO,EAAE;IAC7B,KAAK,eAAe;MAClB,OAAQrC,EAAE,IAAI;QACZ,IAAIG,OAAO,CAACgB,WAAW,EAAE;UACvB,QAAQhB,OAAO,CAACgB,WAAW,CAACM,IAAI;YAC9B,KAAK,mBAAmB;cACtB,OAAOzB,EAAE,CAACsC,MAAM,CAACnC,OAAO,CAACgB,WAAW,CAACA,WAAW,CAAC;UACrD;QACF;QACA,OAAOnB,EAAE,CAACsC,MAAM,EAAE;MACpB,CAAC;IACH,KAAK,eAAe;MAClB,OAAQtC,EAAE,IAAKA,EAAE,CAACkC,MAAM,EAAE,CAACvB,GAAG,CAAE4B,CAAC,IAAKC,MAAM,CAACC,GAAG,CAACF,CAAC,CAAC,CAAC;IACtD,KAAK,eAAe;MAClB,OAAQvC,EAAE,IAAKA,EAAE,CAACK,KAAK,CAACL,EAAE,CAAC0C,MAAM,EAAE,EAAE1C,EAAE,CAACO,KAAK,CAACP,EAAE,CAACiC,QAAQ,EAAE,CAAC,CAAC;IAC/D,KAAK,iBAAiB;MAAE;QACtB,OAAQjC,EAAE,IAAI;UACZ,MAAMkC,MAAM,GAAGlC,EAAE,CAACkC,MAAM,CAAC;YAAExB,SAAS,EAAE;UAAC,CAAE,CAAC;UAC1C,MAAMiC,MAAM,GAAG3C,EAAE,CAACmC,KAAK,CAAC;YAAES,iBAAiB,EAAE;UAAI,CAAE,CAAC,CAACC,MAAM,CAAEC,CAAC,IAAK,CAACC,MAAM,CAACC,KAAK,CAACF,CAAC,CAAC,CAAC;UACpF,MAAMG,UAAU,GAAgD,CAACjD,EAAE,CAACM,QAAQ,CAACX,GAAG,CAACuD,IAAI,CAAC,CAAC;UACvF,KAAK,MAAMC,IAAI,IAAIxD,GAAG,CAACyD,KAAK,EAAE;YAC5B,IAAIrE,GAAG,CAACsE,eAAe,CAACF,IAAI,CAACG,IAAI,CAAC,EAAE;cAClCL,UAAU,CAACM,IAAI,CAACrB,MAAM,CAAC;YACzB,CAAC,MAAM;cACLe,UAAU,CAACM,IAAI,CAACZ,MAAM,CAAC;YACzB;YACAM,UAAU,CAACM,IAAI,CAACvD,EAAE,CAACM,QAAQ,CAAC6C,IAAI,CAACrB,OAAO,CAAC,CAAC;UAC5C;UACA,OAAO9B,EAAE,CAACQ,KAAK,CAAC,GAAGyC,UAAU,CAAC,CAACtC,GAAG,CAAEyC,KAAK,IAAKA,KAAK,CAACI,IAAI,CAAC,EAAE,CAAC,CAAC;QAC/D,CAAC;MACH;IACA,KAAK,OAAO;MAAE;QACZ,MAAMC,QAAQ,GAA0B,EAAE;QAC1C,IAAIC,YAAY,GAAG,KAAK;QACxB,KAAK,MAAMC,OAAO,IAAIhE,GAAG,CAAC8D,QAAQ,EAAE;UAClCA,QAAQ,CAACF,IAAI,CAAC1D,EAAE,CAAC8D,OAAO,CAACL,IAAI,EAAEnD,OAAO,CAAC,CAAC;UACxC,IAAIwD,OAAO,CAACC,UAAU,EAAE;YACtBF,YAAY,GAAG,IAAI;UACrB;QACF;QACA,MAAMG,IAAI,GAAGjF,MAAM,CAAC+B,GAAG,CAAChB,GAAG,CAACkE,IAAI,EAAE/E,aAAa,CAAC6B,GAAG,CAAEmD,CAAC,IAAKjE,EAAE,CAACiE,CAAC,EAAE3D,OAAO,CAAC,CAAC,CAAC;QAC3E,OAAQH,EAAE,IAAI;UACZ;UACA;UACA;UACA,IAAI+D,MAAM,GAAG/D,EAAE,CAACQ,KAAK,CAAC,GAAGiD,QAAQ,CAAC9C,GAAG,CAAEqD,GAAG,IAAKA,GAAG,CAAChE,EAAE,CAAC,CAAC,CAAC;UACxD,IAAI0D,YAAY,EAAE;YAChB,MAAMO,OAAO,GAAGjE,EAAE,CAACQ,KAAK,CACtB,GAAGb,GAAG,CAAC8D,QAAQ,CAAC9C,GAAG,CAAEgD,OAAO,IAAKA,OAAO,CAACC,UAAU,GAAG5D,EAAE,CAACqC,OAAO,EAAE,GAAGrC,EAAE,CAACM,QAAQ,CAAC,IAAI,CAAC,CAAC,CACxF;YACDyD,MAAM,GAAGA,MAAM,CAACG,KAAK,CAAE1D,KAAK,IAC1ByD,OAAO,CAACtD,GAAG,CAAEwD,QAAQ,IAAI;cACvB,KAAK,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,IAAIF,QAAQ,CAACG,OAAO,EAAE,CAACC,OAAO,EAAE,EAAE;gBACjD,IAAI,CAACF,CAAC,EAAE;kBACN7D,KAAK,CAACgE,MAAM,CAACL,QAAQ,CAACM,MAAM,GAAGL,CAAC,EAAE,CAAC,CAAC;gBACtC;cACF;cACA,OAAO5D,KAAK;YACd,CAAC,CAAC,CACH;UACH;UAEA;UACA;UACA;UACA,IAAI5B,MAAM,CAAC4C,MAAM,CAACqC,IAAI,CAAC,EAAE;YACvB,MAAM,CAACX,IAAI,EAAE,GAAGwB,IAAI,CAAC,GAAGb,IAAI,CAAC3D,KAAK;YAClC,MAAM8D,GAAG,GAAGd,IAAI,CAAClD,EAAE,CAAC;YACpB,MAAMmB,WAAW,GAAGhB,OAAO,CAACgB,WAAW;YACvC4C,MAAM,GAAGA,MAAM,CAACG,KAAK,CAAES,EAAE,IAAI;cAC3B,IAAI9D,GAAG,GAAGb,EAAE,CAACO,KAAK,CAACyD,GAAG,CAAC;cACvB,IAAI7D,OAAO,CAACC,SAAS,EAAE;gBACrBS,GAAG,GAAGb,EAAE,CAACK,KAAK,CACZ;kBAAEP;gBAAS,CAAE,EACbE,EAAE,CAACM,QAAQ,CAAC,EAAE,CAAC,EACfN,EAAE,CAACO,KAAK,CAACyD,GAAG,EAAE;kBAAEvD,SAAS,EAAE,CAAC;kBAAEC,SAAS,EAAE;gBAAC,CAAE,CAAC,CAC9C;cACH,CAAC,MAAM,IAAIS,WAAW,IAAIA,WAAW,CAACM,IAAI,KAAK,kBAAkB,EAAE;gBACjEZ,GAAG,GAAGb,EAAE,CAACO,KAAK,CAACyD,GAAG,EAAE7C,WAAW,CAACA,WAAW,CAAC;cAC9C;cACA,OAAON,GAAG,CAACF,GAAG,CAAEkD,IAAI,IAAK,CAAC,GAAGc,EAAE,EAAE,GAAGd,IAAI,CAAC,CAAC;YAC5C,CAAC,CAAC;YACF;YACA;YACA;YACA,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACD,MAAM,EAAEG,CAAC,EAAE,EAAE;cACpCb,MAAM,GAAGA,MAAM,CAACG,KAAK,CAAES,EAAE,IAAKD,IAAI,CAACE,CAAC,CAAC,CAAC5E,EAAE,CAAC,CAACW,GAAG,CAAEkE,CAAC,IAAK,CAAC,GAAGF,EAAE,EAAEE,CAAC,CAAC,CAAC,CAAC;YACnE;UACF;UAEA,OAAOd,MAAM;QACf,CAAC;MACH;IACA,KAAK,aAAa;MAAE;QAClB,MAAMe,uBAAuB,GAAGnF,GAAG,CAACoF,kBAAkB,CAACpE,GAAG,CAAEqE,CAAC,IAAKnF,EAAE,CAACmF,CAAC,CAAC1B,IAAI,EAAEnD,OAAO,CAAC,CAAC;QACtF,MAAM8E,eAAe,GAAGtF,GAAG,CAACsF,eAAe,CAACtE,GAAG,CAAEuE,EAAE,IACjD,CAACrF,EAAE,CAACqF,EAAE,CAACC,SAAS,EAAEhF,OAAO,CAAC,EAAEN,EAAE,CAACqF,EAAE,CAAC5B,IAAI,EAAEnD,OAAO,CAAC,CAAU,CAC3D;QACD,OAAQH,EAAE,IAAI;UACZ,MAAMoF,IAAI,GAAQ,EAAE;UACpB,MAAMC,YAAY,GAAuB,EAAE;UAC3C;UACA;UACA;UACA,KAAK,IAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGU,uBAAuB,CAACL,MAAM,EAAEL,CAAC,EAAE,EAAE;YACvD,MAAMkB,EAAE,GAAG3F,GAAG,CAACoF,kBAAkB,CAACX,CAAC,CAAC;YACpC,MAAMmB,IAAI,GAAGD,EAAE,CAACC,IAAI;YACpB,IAAI,CAACD,EAAE,CAAC1B,UAAU,EAAE;cAClByB,YAAY,CAAC9B,IAAI,CAACgC,IAAI,CAAC;YACzB;YACAH,IAAI,CAACG,IAAI,CAAC,GAAGT,uBAAuB,CAACV,CAAC,CAAC,CAACpE,EAAE,CAAC;UAC7C;UACA,IAAI+D,MAAM,GAAG/D,EAAE,CAACD,MAAM,CAAWqF,IAAI,EAAE;YAAEC;UAAY,CAAE,CAAC;UACxD;UACA;UACA;UACA,KAAK,IAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGa,eAAe,CAACR,MAAM,EAAEL,CAAC,EAAE,EAAE;YAC/C,MAAMe,SAAS,GAAGF,eAAe,CAACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAACpE,EAAE,CAAC;YAC3C,MAAMsD,IAAI,GAAG2B,eAAe,CAACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAACpE,EAAE,CAAC;YACtC+D,MAAM,GAAGA,MAAM,CAACG,KAAK,CAAEsB,CAAC,IAAI;cAC1B,OAAOzF,MAAM,CAACC,EAAE,EAAEmF,SAAS,EAAE7B,IAAI,EAAEnD,OAAO,CAAC,CAACQ,GAAG,CAAE8E,CAAC,KAAM;gBAAE,GAAGA,CAAC;gBAAE,GAAGD;cAAC,CAAE,CAAC,CAAC;YAC1E,CAAC,CAAC;UACJ;UAEA,OAAOzB,MAAM;QACf,CAAC;MACH;IACA,KAAK,OAAO;MAAE;QACZ,MAAM2B,KAAK,GAAG/F,GAAG,CAAC+F,KAAK,CAAC/E,GAAG,CAAEgF,CAAC,IAAK9F,EAAE,CAAC8F,CAAC,EAAExF,OAAO,CAAC,CAAC;QAClD,OAAQH,EAAE,IAAKA,EAAE,CAACK,KAAK,CAAC;UAAEP;QAAS,CAAE,EAAE,GAAG4F,KAAK,CAAC/E,GAAG,CAAEqD,GAAG,IAAKA,GAAG,CAAChE,EAAE,CAAC,CAAC,CAAC;MACxE;IACA,KAAK,OAAO;MAAE;QACZ,IAAIL,GAAG,CAACiG,KAAK,CAACnB,MAAM,KAAK,CAAC,EAAE;UAC1B,MAAM,IAAI7C,KAAK,CAAC,6CAA6C,CAAC;QAChE;QACA,OAAQ5B,EAAE,IAAKA,EAAE,CAACK,KAAK,CAAC,GAAGV,GAAG,CAACiG,KAAK,CAACjF,GAAG,CAAC,CAAC,CAACkF,CAAC,EAAE3F,KAAK,CAAC,KAAKF,EAAE,CAACM,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC;MAC/E;IACA,KAAK,YAAY;MAAE;QACjB,MAAMoB,IAAI,GAAGJ,0BAA0B,CAACvB,GAAG,EAAEQ,OAAO,CAAC;QACrD,OAAQH,EAAE,IAAKsB,IAAI,CAACtB,EAAE,CAAC,CAAC6C,MAAM,CAAEgC,CAAC,IAAKjG,MAAM,CAACkH,MAAM,CAACnG,GAAG,CAACkD,MAAM,CAACgC,CAAC,EAAEzF,MAAM,CAAC2G,kBAAkB,EAAEpG,GAAG,CAAC,CAAC,CAAC;MACrG;IACA,KAAK,SAAS;MAAE;QACd,MAAMqG,GAAG,GAAGhH,QAAQ,CAACiH,YAAY,CAAC,MAAMpG,EAAE,CAACF,GAAG,CAACqF,CAAC,EAAE,EAAE;UAAE,GAAG7E,OAAO;UAAEC,SAAS,EAAE;QAAI,CAAE,CAAC,CAAC;QACrF,OAAQJ,EAAE,IAAKA,EAAE,CAACM,QAAQ,CAAC,IAAI,CAAC,CAAC4D,KAAK,CAAC,MAAM8B,GAAG,EAAE,CAAChG,EAAE,CAAC,CAAC;MACzD;IACA,KAAK,WAAW;MACd,OAAOH,EAAE,CAACF,GAAG,CAACuG,EAAE,EAAE/F,OAAO,CAAC;EAC9B;AACF,CAAC;AAOD;AACA,OAAO,MAAMgG,iBAAiB,GAC5BhF,WAA6C,IACxB;EACrB,IAAItC,SAAS,CAACuH,QAAQ,CAACjF,WAAW,CAACkF,GAAG,CAAC,EAAE;IACvClF,WAAW,CAACkF,GAAG,GAAGC,IAAI,CAACC,MAAM,CAACpF,WAAW,CAACkF,GAAG,CAAC;EAChD;EACA,IAAIxH,SAAS,CAACuH,QAAQ,CAACjF,WAAW,CAACqF,GAAG,CAAC,EAAE;IACvCrF,WAAW,CAACqF,GAAG,GAAGF,IAAI,CAACC,MAAM,CAACpF,WAAW,CAACqF,GAAG,CAAC;EAChD;EACA,OAAO;IAAE/E,IAAI,EAAE,mBAAmB;IAAEN;EAAW,CAAE;AACnD,CAAC;AAOD;AACA,OAAO,MAAMsF,iBAAiB,GAC5BtF,WAA6C,IACxB;EACrB,OAAO;IAAEM,IAAI,EAAE,mBAAmB;IAAEN;EAAW,CAAE;AACnD,CAAC;AAOD;AACA,OAAO,MAAMuF,kBAAkB,GAC7BvF,WAA8C,IACxB;EACtB,OAAO;IAAEM,IAAI,EAAE,oBAAoB;IAAEN;EAAW,CAAE;AACpD,CAAC;AAOD;AACA,OAAO,MAAMwF,gBAAgB,GAC3BxF,WAA4C,IACxB;EACpB,OAAO;IAAEM,IAAI,EAAE,kBAAkB;IAAEN;EAAW,CAAE;AAClD,CAAC;AAOD;AACA,OAAO,MAAMyF,iBAAiB,GAC5BzF,WAA6C,IACxB;EACrB,OAAO;IAAEM,IAAI,EAAE,mBAAmB;IAAEN;EAAW,CAAE;AACnD,CAAC;AAUD;AACA,OAAO,MAAME,cAAc,GAAI1B,GAAmB,IAA6B;EAC7E,MAAMkH,gBAAgB,GAAGlH,GAAG,CAACmH,WAAW,CAAC/H,GAAG,CAAC8H,gBAAgB,CAAC;EAC9D,MAAME,UAAU,GAAQpH,GAAG,CAACmH,WAAW,CAAC/H,GAAG,CAACiI,sBAAsB,CAAC;EACnE,QAAQH,gBAAgB;IACtB;IACA,KAAK5H,OAAO,CAACgI,iBAAiB;IAC9B,KAAKhI,OAAO,CAACiI,0BAA0B;MACrC,OAAOf,iBAAiB,CAAC;QAAEE,GAAG,EAAEU,UAAU,CAACI,gBAAgB,IAAIJ,UAAU,CAACK;MAAO,CAAE,CAAC;IACtF,KAAKnI,OAAO,CAACoI,cAAc;IAC3B,KAAKpI,OAAO,CAACqI,uBAAuB;MAClC,OAAOnB,iBAAiB,CAAC;QAAEK,GAAG,EAAEO,UAAU,CAACQ,gBAAgB,IAAIR,UAAU,CAACS;MAAO,CAAE,CAAC;IACtF,KAAKvI,OAAO,CAACwI,SAAS;MACpB,OAAOf,kBAAkB,CAAC,EAAE,CAAC;IAC/B,KAAKzH,OAAO,CAACyI,aAAa;MAAE;QAC1B,MAAMrB,GAAG,GAAGU,UAAU,CAACK,OAAO;QAC9B,MAAMZ,GAAG,GAAGO,UAAU,CAACS,OAAO;QAC9B,MAAMrG,WAAW,GAAqC,EAAE;QACxD,IAAItC,SAAS,CAACuH,QAAQ,CAACC,GAAG,CAAC,EAAE;UAC3BlF,WAAW,CAACkF,GAAG,GAAGA,GAAG;QACvB;QACA,IAAIxH,SAAS,CAACuH,QAAQ,CAACI,GAAG,CAAC,EAAE;UAC3BrF,WAAW,CAACqF,GAAG,GAAGA,GAAG;QACvB;QACA,OAAOL,iBAAiB,CAAChF,WAAW,CAAC;MACvC;IACA;IACA,KAAKlC,OAAO,CAAC0I,uBAAuB;IACpC,KAAK1I,OAAO,CAAC2I,gCAAgC;MAAE;QAC7C,MAAMC,MAAM,GAAQlI,GAAG,CAACmH,WAAW,CAACD,gBAAgB,CAAC;QACrD,OAAOD,iBAAiB,CAAC;UAAEP,GAAG,EAAEwB,MAAM,CAACxB;QAAG,CAAE,CAAC;MAC/C;IACA,KAAKpH,OAAO,CAAC6I,oBAAoB;IACjC,KAAK7I,OAAO,CAAC8I,6BAA6B;MAAE;QAC1C,MAAMF,MAAM,GAAQlI,GAAG,CAACmH,WAAW,CAACD,gBAAgB,CAAC;QACrD,OAAOD,iBAAiB,CAAC;UAAEJ,GAAG,EAAEqB,MAAM,CAACrB;QAAG,CAAE,CAAC;MAC/C;IACA,KAAKvH,OAAO,CAAC+I,mBAAmB;MAAE;QAChC,MAAMH,MAAM,GAAQlI,GAAG,CAACmH,WAAW,CAACD,gBAAgB,CAAC;QACrD,MAAMR,GAAG,GAAGwB,MAAM,CAACxB,GAAG;QACtB,MAAMG,GAAG,GAAGqB,MAAM,CAACrB,GAAG;QACtB,MAAMrF,WAAW,GAAqC,EAAE;QACxD,IAAItC,SAAS,CAACoJ,QAAQ,CAAC5B,GAAG,CAAC,EAAE;UAC3BlF,WAAW,CAACkF,GAAG,GAAGA,GAAG;QACvB;QACA,IAAIxH,SAAS,CAACoJ,QAAQ,CAACzB,GAAG,CAAC,EAAE;UAC3BrF,WAAW,CAACqF,GAAG,GAAGA,GAAG;QACvB;QACA,OAAOI,iBAAiB,CAACzF,WAAW,CAAC;MACvC;IACA;IACA,KAAKlC,OAAO,CAACiJ,eAAe;MAC1B,OAAOzB,iBAAiB,CAAC;QAAEhG,SAAS,EAAEsG,UAAU,CAACtG;MAAS,CAAE,CAAC;IAC/D,KAAKxB,OAAO,CAACkJ,eAAe;MAC1B,OAAO1B,iBAAiB,CAAC;QAAE/F,SAAS,EAAEqG,UAAU,CAACrG;MAAS,CAAE,CAAC;IAC/D,KAAKzB,OAAO,CAACmJ,YAAY;MACvB,OAAO3B,iBAAiB,CAAC;QAAEhG,SAAS,EAAEsG,UAAU,CAACtG,SAAS;QAAEC,SAAS,EAAEqG,UAAU,CAACrG;MAAS,CAAE,CAAC;IAChG;IACA,KAAKzB,OAAO,CAACoJ,cAAc;MACzB,OAAO1B,gBAAgB,CAAC;QAAElG,SAAS,EAAEsG,UAAU,CAACuB;MAAQ,CAAE,CAAC;IAC7D,KAAKrJ,OAAO,CAACsJ,cAAc;MACzB,OAAO5B,gBAAgB,CAAC;QAAEjG,SAAS,EAAEqG,UAAU,CAACyB;MAAQ,CAAE,CAAC;IAC7D,KAAKvJ,OAAO,CAACwJ,gBAAgB;MAC3B,OAAO9B,gBAAgB,CAAC;QAAElG,SAAS,EAAEsG,UAAU,CAACuB,QAAQ;QAAE5H,SAAS,EAAEqG,UAAU,CAACyB;MAAQ,CAAE,CAAC;EAC/F;AACF,CAAC;AAED;AACA,OAAO,MAAMpH,kBAAkB,GAAGA,CAChCsH,EAA2B,EAC3BC,EAA2B,KACA;EAC3B,IAAID,EAAE,KAAK1G,SAAS,EAAE;IACpB,OAAO2G,EAAE;EACX;EACA,IAAIA,EAAE,KAAK3G,SAAS,EAAE;IACpB,OAAO0G,EAAE;EACX;EACA,QAAQA,EAAE,CAACjH,IAAI;IACb,KAAK,kBAAkB;MAAE;QACvB,QAAQkH,EAAE,CAAClH,IAAI;UACb,KAAK,kBAAkB;YAAE;cACvB,MAAMmH,CAAC,GAAoC;gBACzC,GAAGF,EAAE,CAACvH,WAAW;gBACjB,GAAGwH,EAAE,CAACxH;eACP;cACD,MAAMV,SAAS,GAAGoI,MAAM,CAACH,EAAE,CAACvH,WAAW,CAACV,SAAS,EAAEkI,EAAE,CAACxH,WAAW,CAACV,SAAS,CAAC;cAC5E,IAAI5B,SAAS,CAACuH,QAAQ,CAAC3F,SAAS,CAAC,EAAE;gBACjCmI,CAAC,CAACnI,SAAS,GAAGA,SAAS;cACzB;cACA,MAAMC,SAAS,GAAGoI,MAAM,CAACJ,EAAE,CAACvH,WAAW,CAACT,SAAS,EAAEiI,EAAE,CAACxH,WAAW,CAACT,SAAS,CAAC;cAC5E,IAAI7B,SAAS,CAACuH,QAAQ,CAAC1F,SAAS,CAAC,EAAE;gBACjCkI,CAAC,CAAClI,SAAS,GAAGA,SAAS;cACzB;cACA,OAAOiG,gBAAgB,CAACiC,CAAC,CAAC;YAC5B;QACF;QACA;MACF;IACA,KAAK,mBAAmB;MAAE;QACxB,QAAQD,EAAE,CAAClH,IAAI;UACb,KAAK,mBAAmB;YAAE;cACxB,MAAMmH,CAAC,GAAqC;gBAC1C,GAAGF,EAAE,CAACvH,WAAW;gBACjB,GAAGwH,EAAE,CAACxH;eACP;cACD,MAAMkF,GAAG,GAAGwC,MAAM,CAACH,EAAE,CAACvH,WAAW,CAACkF,GAAG,EAAEsC,EAAE,CAACxH,WAAW,CAACkF,GAAG,CAAC;cAC1D,IAAIxH,SAAS,CAACuH,QAAQ,CAACC,GAAG,CAAC,EAAE;gBAC3BuC,CAAC,CAACvC,GAAG,GAAGA,GAAG;cACb;cACA,MAAMG,GAAG,GAAGsC,MAAM,CAACJ,EAAE,CAACvH,WAAW,CAACqF,GAAG,EAAEmC,EAAE,CAACxH,WAAW,CAACqF,GAAG,CAAC;cAC1D,IAAI3H,SAAS,CAACuH,QAAQ,CAACI,GAAG,CAAC,EAAE;gBAC3BoC,CAAC,CAACpC,GAAG,GAAGA,GAAG;cACb;cACA,OAAOL,iBAAiB,CAACyC,CAAC,CAAC;YAC7B;UACA,KAAK,oBAAoB;YAAE;cACzB,MAAMA,CAAC,GAAsC;gBAAE,GAAGD,EAAE,CAACxH;cAAW,CAAE;cAClE,MAAMkF,GAAG,GAAGwC,MAAM,CAACH,EAAE,CAACvH,WAAW,CAACkF,GAAG,EAAEsC,EAAE,CAACxH,WAAW,CAACkF,GAAG,CAAC;cAC1D,IAAIxH,SAAS,CAACuH,QAAQ,CAACC,GAAG,CAAC,EAAE;gBAC3BuC,CAAC,CAACvC,GAAG,GAAGA,GAAG;cACb;cACA,MAAMG,GAAG,GAAGsC,MAAM,CAACJ,EAAE,CAACvH,WAAW,CAACqF,GAAG,EAAEmC,EAAE,CAACxH,WAAW,CAACqF,GAAG,CAAC;cAC1D,IAAI3H,SAAS,CAACuH,QAAQ,CAACI,GAAG,CAAC,EAAE;gBAC3BoC,CAAC,CAACpC,GAAG,GAAGA,GAAG;cACb;cACA,OAAOE,kBAAkB,CAACkC,CAAC,CAAC;YAC9B;QACF;QACA;MACF;IACA,KAAK,mBAAmB;MAAE;QACxB,QAAQD,EAAE,CAAClH,IAAI;UACb,KAAK,mBAAmB;YAAE;cACxB,MAAMmH,CAAC,GAAqC;gBAC1C,GAAGF,EAAE,CAACvH,WAAW;gBACjB,GAAGwH,EAAE,CAACxH;eACP;cACD,MAAMkF,GAAG,GAAGwC,MAAM,CAACH,EAAE,CAACvH,WAAW,CAACkF,GAAG,EAAEsC,EAAE,CAACxH,WAAW,CAACkF,GAAG,CAAC;cAC1D,IAAIxH,SAAS,CAACoJ,QAAQ,CAAC5B,GAAG,CAAC,EAAE;gBAC3BuC,CAAC,CAACvC,GAAG,GAAGA,GAAG;cACb;cACA,MAAMG,GAAG,GAAGsC,MAAM,CAACJ,EAAE,CAACvH,WAAW,CAACqF,GAAG,EAAEmC,EAAE,CAACxH,WAAW,CAACqF,GAAG,CAAC;cAC1D,IAAI3H,SAAS,CAACoJ,QAAQ,CAACzB,GAAG,CAAC,EAAE;gBAC3BoC,CAAC,CAACpC,GAAG,GAAGA,GAAG;cACb;cACA,OAAOI,iBAAiB,CAACgC,CAAC,CAAC;YAC7B;QACF;QACA;MACF;IACA,KAAK,mBAAmB;MAAE;QACxB,QAAQD,EAAE,CAAClH,IAAI;UACb,KAAK,mBAAmB;YAAE;cACxB,MAAMmH,CAAC,GAAqC;gBAC1C,GAAGF,EAAE,CAACvH,WAAW;gBACjB,GAAGwH,EAAE,CAACxH;eACP;cACD,MAAMV,SAAS,GAAGoI,MAAM,CAACH,EAAE,CAACvH,WAAW,CAACV,SAAS,EAAEkI,EAAE,CAACxH,WAAW,CAACV,SAAS,CAAC;cAC5E,IAAI5B,SAAS,CAACuH,QAAQ,CAAC3F,SAAS,CAAC,EAAE;gBACjCmI,CAAC,CAACnI,SAAS,GAAGA,SAAS;cACzB;cACA,MAAMC,SAAS,GAAGoI,MAAM,CAACJ,EAAE,CAACvH,WAAW,CAACT,SAAS,EAAEiI,EAAE,CAACxH,WAAW,CAACT,SAAS,CAAC;cAC5E,IAAI7B,SAAS,CAACuH,QAAQ,CAAC1F,SAAS,CAAC,EAAE;gBACjCkI,CAAC,CAAClI,SAAS,GAAGA,SAAS;cACzB;cACA,OAAO+F,iBAAiB,CAACmC,CAAC,CAAC;YAC7B;QACF;QACA;MACF;IACA,KAAK,oBAAoB;MAAE;QACzB,QAAQD,EAAE,CAAClH,IAAI;UACb,KAAK,mBAAmB;UACxB,KAAK,oBAAoB;YAAE;cACzB,MAAMmH,CAAC,GAAsC;gBAAE,GAAGF,EAAE,CAACvH;cAAW,CAAE;cAClE,MAAMkF,GAAG,GAAGwC,MAAM,CAACH,EAAE,CAACvH,WAAW,CAACkF,GAAG,EAAEsC,EAAE,CAACxH,WAAW,CAACkF,GAAG,CAAC;cAC1D,IAAIxH,SAAS,CAACuH,QAAQ,CAACC,GAAG,CAAC,EAAE;gBAC3BuC,CAAC,CAACvC,GAAG,GAAGA,GAAG;cACb;cACA,MAAMG,GAAG,GAAGsC,MAAM,CAACJ,EAAE,CAACvH,WAAW,CAACqF,GAAG,EAAEmC,EAAE,CAACxH,WAAW,CAACqF,GAAG,CAAC;cAC1D,IAAI3H,SAAS,CAACuH,QAAQ,CAACI,GAAG,CAAC,EAAE;gBAC3BoC,CAAC,CAACpC,GAAG,GAAGA,GAAG;cACb;cACA,OAAOE,kBAAkB,CAACkC,CAAC,CAAC;YAC9B;QACF;QACA;MACF;EACF;AACF,CAAC;AAID,SAASC,MAAMA,CACbE,EAA+B,EAC/BC,EAA+B;EAE/B,OAAOD,EAAE,KAAK/G,SAAS,GAAGgH,EAAE,GAAGA,EAAE,KAAKhH,SAAS,GAAG+G,EAAE,GAAGA,EAAE,IAAIC,EAAE,GAAGA,EAAE,GAAGD,EAAE;AAC3E;AAIA,SAASD,MAAMA,CACbC,EAA+B,EAC/BC,EAA+B;EAE/B,OAAOD,EAAE,KAAK/G,SAAS,GAAGgH,EAAE,GAAGA,EAAE,KAAKhH,SAAS,GAAG+G,EAAE,GAAGA,EAAE,IAAIC,EAAE,GAAGD,EAAE,GAAGC,EAAE;AAC3E"}
\ No newline at end of file
+{"version":3,"file":"Arbitrary.js","names":["Option","Predicate","ReadonlyArray","AST","_filters","_hooks","_util","ArbitraryHookId","arbitrary","handler","self","annotations","make","schema","go","ast","depthSize","record","fc","key","value","options","isSuspend","oneof","constant","array","tuple","minLength","maxLength","map","tuples","out","k","v","getHook","getAnnotation","getRefinementFromArbitrary","constraints","combineConstraints","getConstraints","from","hook","isSome","_tag","typeParameters","p","Error","literal","symbol","undefined","anything","string","float","integer","boolean","bigInt","s","Symbol","for","object","number","noDefaultInfinity","filter","n","Number","isNaN","components","head","span","spans","isStringKeyword","type","push","join","elements","hasOptionals","element","isOptional","rest","e","output","arb","indexes","chain","booleans","i","b","reverse","entries","splice","length","isNonEmptyReadonlyArray","tail","as","j","a","propertySignaturesTypes","propertySignatures","f","indexSignatures","is","parameter","arbs","requiredKeys","ps","name","o","d","types","t","enums","_","isNone","defaultParseOption","get","memoizeThunk","to","numberConstraints","isNumber","min","Math","fround","max","stringConstraints","integerConstraints","arrayConstraints","bigintConstraints","TypeAnnotationId","jsonSchema","JSONSchemaAnnotationId","GreaterThanTypeId","GreaterThanOrEqualToTypeId","exclusiveMinimum","minimum","LessThanTypeId","LessThanOrEqualToTypeId","exclusiveMaximum","maximum","IntTypeId","BetweenTypeId","GreaterThanBigintTypeId","GreaterThanOrEqualToBigintTypeId","params","LessThanBigintTypeId","LessThanOrEqualToBigintTypeId","BetweenBigintTypeId","isBigInt","MinLengthTypeId","MaxLengthTypeId","LengthTypeId","MinItemsTypeId","minItems","MaxItemsTypeId","maxItems","ItemsCountTypeId","c1","c2","c","getMax","getMin","n1","n2"],"sources":["../../src/Arbitrary.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/ArrayFormatter.js b/dist/esm/ArrayFormatter.js
index f97d203fefcc5cd1eb1825f2e9bd620a0b8313d5..ec73e87f724fb74867a430393a7bd9292ddc8fe9 100644
--- a/dist/esm/ArrayFormatter.js
+++ b/dist/esm/ArrayFormatter.js
@@ -1,113 +1,117 @@
 /**
  * @since 1.0.0
  */
-import * as Option from "effect/Option";
+import * as Effect from "effect/Effect";
 import * as ReadonlyArray from "effect/ReadonlyArray";
-import * as AST from "./AST.js";
 import * as TreeFormatter from "./TreeFormatter.js";
+/**
+ * @category formatting
+ * @since 1.0.0
+ */
+export const formatIssueEffect = issue => go(issue);
+/**
+ * @category formatting
+ * @since 1.0.0
+ */
+export const formatIssue = issue => Effect.runSync(formatIssueEffect(issue));
+/**
+ * @category formatting
+ * @since 1.0.0
+ */
+export const formatErrorEffect = error => formatIssueEffect(error.error);
+/**
+ * @category formatting
+ * @since 1.0.0
+ */
+export const formatError = error => formatIssue(error.error);
 const go = (e, path = []) => {
   const _tag = e._tag;
   switch (_tag) {
     case "Type":
-      return [{
+      return Effect.map(TreeFormatter.formatTypeMessage(e), message => [{
         _tag,
         path,
-        message: TreeFormatter.formatTypeMessage(e)
-      }];
+        message
+      }]);
     case "Forbidden":
-      return [{
+      return Effect.succeed([{
         _tag,
         path,
         message: TreeFormatter.formatForbiddenMessage(e)
-      }];
+      }]);
     case "Unexpected":
-      return [{
+      return Effect.succeed([{
         _tag,
         path,
-        message: `is unexpected, expected ${AST.format(e.ast, true)}`
-      }];
+        message: `is unexpected, expected ${e.ast.toString(true)}`
+      }]);
     case "Missing":
-      return [{
+      return Effect.succeed([{
         _tag,
         path,
         message: "is missing"
-      }];
+      }]);
     case "Union":
-      return Option.match(TreeFormatter.getMessage(e), {
-        onNone: () => ReadonlyArray.flatMap(e.errors, e => {
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () => Effect.map(Effect.forEach(e.errors, e => {
           switch (e._tag) {
             case "Member":
               return go(e.error, path);
             default:
               return go(e, path);
           }
-        }),
-        onSome: message => [{
+        }), ReadonlyArray.flatten),
+        onSuccess: message => Effect.succeed([{
           _tag,
           path,
           message
-        }]
+        }])
       });
-    case "Tuple":
-      return Option.match(TreeFormatter.getMessage(e), {
-        onNone: () => ReadonlyArray.flatMap(e.errors, index => go(index.error, [...path, index.index])),
-        onSome: message => [{
+    case "TupleType":
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () => Effect.map(Effect.forEach(e.errors, index => go(index.error, [...path, index.index])), ReadonlyArray.flatten),
+        onSuccess: message => Effect.succeed([{
           _tag,
           path,
           message
-        }]
+        }])
       });
     case "TypeLiteral":
-      return Option.match(TreeFormatter.getMessage(e), {
-        onNone: () => ReadonlyArray.flatMap(e.errors, key => go(key.error, [...path, key.key])),
-        onSome: message => [{
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () => Effect.map(Effect.forEach(e.errors, key => go(key.error, [...path, key.key])), ReadonlyArray.flatten),
+        onSuccess: message => Effect.succeed([{
           _tag,
           path,
           message
-        }]
+        }])
       });
-    case "Transform":
-      return Option.match(TreeFormatter.getTransformMessage(e), {
-        onNone: () => go(e.error, path),
-        onSome: message => [{
+    case "Transformation":
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () => go(e.error, path),
+        onSuccess: message => Effect.succeed([{
           _tag,
           path,
           message
-        }]
+        }])
       });
     case "Refinement":
-      return Option.match(TreeFormatter.getRefinementMessage(e), {
-        onNone: () => go(e.error, path),
-        onSome: message => [{
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () => go(e.error, path),
+        onSuccess: message => Effect.succeed([{
           _tag,
           path,
           message
-        }]
+        }])
       });
     case "Declaration":
-      return Option.match(TreeFormatter.getMessage(e), {
-        onNone: () => go(e.error, path),
-        onSome: message => [{
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () => go(e.error, path),
+        onSuccess: message => Effect.succeed([{
           _tag,
           path,
           message
-        }]
+        }])
       });
   }
 };
-/**
- * @category formatting
- * @since 1.0.0
- */
-export const formatIssues = issues => ReadonlyArray.flatMap(issues, e => go(e));
-/**
- * @category formatting
- * @since 1.0.0
- */
-export const formatIssue = error => formatIssues([error]);
-/**
- * @category formatting
- * @since 1.0.0
- */
-export const formatError = error => formatIssue(error.error);
 //# sourceMappingURL=ArrayFormatter.js.map
\ No newline at end of file
diff --git a/dist/esm/ArrayFormatter.js.map b/dist/esm/ArrayFormatter.js.map
index ad27bb691c9396e5343d813a9e86209dda1ef3ce..adcd37bd85a9ea0b3ab97107b39f43a5220e4f28 100644
--- a/dist/esm/ArrayFormatter.js.map
+++ b/dist/esm/ArrayFormatter.js.map
@@ -1 +1 @@
-{"version":3,"file":"ArrayFormatter.js","names":["Option","ReadonlyArray","AST","TreeFormatter","go","e","path","_tag","message","formatTypeMessage","formatForbiddenMessage","format","ast","match","getMessage","onNone","flatMap","errors","error","onSome","index","key","getTransformMessage","getRefinementMessage","formatIssues","issues","formatIssue","formatError"],"sources":["../../src/ArrayFormatter.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"ArrayFormatter.js","names":["Effect","ReadonlyArray","TreeFormatter","formatIssueEffect","issue","go","formatIssue","runSync","formatErrorEffect","error","formatError","e","path","_tag","map","formatTypeMessage","message","succeed","formatForbiddenMessage","ast","toString","matchEffect","getMessage","onFailure","forEach","errors","flatten","onSuccess","index","key"],"sources":["../../src/ArrayFormatter.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/Equivalence.js b/dist/esm/Equivalence.js
index d6b2fdb69692b9f38724e0dc7c275c6c4f7e4465..3ab5a989387121a032806d597585e669fd23e064 100644
--- a/dist/esm/Equivalence.js
+++ b/dist/esm/Equivalence.js
@@ -7,20 +7,22 @@ import * as Option from "effect/Option";
 import * as Predicate from "effect/Predicate";
 import * as ReadonlyArray from "effect/ReadonlyArray";
 import * as AST from "./AST.js";
-import * as Internal from "./internal/ast.js";
-import * as hooks from "./internal/hooks.js";
-import * as InternalSchema from "./internal/schema.js";
+import * as _hooks from "./internal/hooks.js";
+import * as _schema from "./internal/schema.js";
+import * as _util from "./internal/util.js";
 import * as Parser from "./Parser.js";
 /**
  * @category hooks
  * @since 1.0.0
  */
-export const EquivalenceHookId = hooks.EquivalenceHookId;
+export const EquivalenceHookId = _hooks.EquivalenceHookId;
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const equivalence = handler => self => InternalSchema.make(AST.setAnnotation(self.ast, EquivalenceHookId, handler));
+export const equivalence = handler => self => self.annotations({
+  [EquivalenceHookId]: handler
+});
 /**
  * @category Equivalence
  * @since 1.0.0
@@ -42,7 +44,7 @@ const go = ast => {
   switch (ast._tag) {
     case "NeverKeyword":
       throw new Error("cannot build an Equivalence for `never`");
-    case "Transform":
+    case "Transformation":
       return go(ast.to);
     case "Declaration":
     case "Literal":
@@ -64,13 +66,13 @@ const go = ast => {
       return go(ast.from);
     case "Suspend":
       {
-        const get = Internal.memoizeThunk(() => go(ast.f()));
+        const get = _util.memoizeThunk(() => go(ast.f()));
         return (a, b) => get()(a, b);
       }
-    case "Tuple":
+    case "TupleType":
       {
         const elements = ast.elements.map(element => go(element.type));
-        const rest = Option.map(ast.rest, ReadonlyArray.map(go));
+        const rest = ast.rest.map(go);
         return Equivalence.make((a, b) => {
           const len = a.length;
           if (len !== b.length) {
@@ -88,8 +90,8 @@ const go = ast => {
           // ---------------------------------------------
           // handle rest element
           // ---------------------------------------------
-          if (Option.isSome(rest)) {
-            const [head, ...tail] = rest.value;
+          if (ReadonlyArray.isNonEmptyReadonlyArray(rest)) {
+            const [head, ...tail] = rest;
             for (; i < len - tail.length; i++) {
               if (!head(a[i], b[i])) {
                 return false;
@@ -169,7 +171,7 @@ const go = ast => {
     case "Union":
       {
         const searchTree = Parser.getSearchTree(ast.types, true);
-        const ownKeys = Internal.ownKeys(searchTree.keys);
+        const ownKeys = _util.ownKeys(searchTree.keys);
         const len = ownKeys.length;
         return Equivalence.make((a, b) => {
           let candidates = [];
@@ -188,7 +190,7 @@ const go = ast => {
           if (searchTree.otherwise.length > 0) {
             candidates = candidates.concat(searchTree.otherwise);
           }
-          const tuples = candidates.map(ast => [go(ast), Parser.is(InternalSchema.make(ast))]);
+          const tuples = candidates.map(ast => [go(ast), Parser.is(_schema.make(ast))]);
           for (let i = 0; i < tuples.length; i++) {
             const [equivalence, is] = tuples[i];
             if (is(a) && is(b)) {
diff --git a/dist/esm/Equivalence.js.map b/dist/esm/Equivalence.js.map
index 1aa6dd1a84589a0c1d138114c16c656155e57d5c..63e1ab54563fc6730e83f1149eb032c3edc02fdc 100644
--- a/dist/esm/Equivalence.js.map
+++ b/dist/esm/Equivalence.js.map
@@ -1 +1 @@
-{"version":3,"file":"Equivalence.js","names":["Equal","Equivalence","Option","Predicate","ReadonlyArray","AST","Internal","hooks","InternalSchema","Parser","EquivalenceHookId","equivalence","handler","self","make","setAnnotation","ast","schema","go","getHook","getAnnotation","hook","isSome","_tag","value","typeParameters","map","from","Error","to","equals","get","memoizeThunk","f","a","b","elements","element","type","rest","len","length","i","Math","min","head","tail","j","propertySignatures","indexSignatures","ps","is","aStringKeys","Object","keys","aSymbolKeys","getOwnPropertySymbols","name","aHas","prototype","hasOwnProperty","call","bHas","isOptional","bSymbolKeys","bStringKeys","base","getParameterBase","parameter","isSymbol","isSymbolKeyword","aKeys","key","searchTree","getSearchTree","types","ownKeys","candidates","isRecord","buckets","literal","String","concat","otherwise","tuples"],"sources":["../../src/Equivalence.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"Equivalence.js","names":["Equal","Equivalence","Option","Predicate","ReadonlyArray","AST","_hooks","_schema","_util","Parser","EquivalenceHookId","equivalence","handler","self","annotations","make","schema","go","ast","getHook","getAnnotation","hook","isSome","_tag","value","typeParameters","map","from","Error","to","equals","get","memoizeThunk","f","a","b","elements","element","type","rest","len","length","i","Math","min","isNonEmptyReadonlyArray","head","tail","j","propertySignatures","indexSignatures","ps","is","aStringKeys","Object","keys","aSymbolKeys","getOwnPropertySymbols","name","aHas","prototype","hasOwnProperty","call","bHas","isOptional","bSymbolKeys","bStringKeys","base","getParameterBase","parameter","isSymbol","isSymbolKeyword","aKeys","key","searchTree","getSearchTree","types","ownKeys","candidates","isRecord","buckets","literal","String","concat","otherwise","tuples"],"sources":["../../src/Equivalence.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/JSONSchema.js b/dist/esm/JSONSchema.js
index 69da0b313d627e44e9e8bec1d2bc6db1f0e21280..a9006ccd41e7fc56e8ca28b399da6736a5f14869 100644
--- a/dist/esm/JSONSchema.js
+++ b/dist/esm/JSONSchema.js
@@ -3,7 +3,6 @@
  */
 import * as Option from "effect/Option";
 import * as Predicate from "effect/Predicate";
-import * as ReadonlyArray from "effect/ReadonlyArray";
 import * as ReadonlyRecord from "effect/ReadonlyRecord";
 import * as AST from "./AST.js";
 /**
@@ -48,7 +47,7 @@ export const goRoot = ast => {
   return out;
 };
 const goWithIdentifier = (ast, $defs) => {
-  const identifier = AST.getIdentifierAnnotation(ast);
+  const identifier = AST.getJSONIdentifier(ast);
   return Option.match(identifier, {
     onNone: () => goWithMetaData(ast, $defs),
     onSome: id => {
@@ -78,7 +77,7 @@ const goWithMetaData = (ast, $defs) => {
 const pruneUndefinedKeyword = ps => {
   const type = ps.type;
   if (ps.isOptional && AST.isUnion(type) && Option.isNone(AST.getJSONSchemaAnnotation(type))) {
-    return AST.createUnion(type.types.filter(type => !AST.isUndefinedKeyword(type)), type.annotations);
+    return AST.Union.make(type.types.filter(type => !AST.isUndefinedKeyword(type)), type.annotations);
   }
   return type;
 };
@@ -159,10 +158,10 @@ const go = (ast, $defs) => {
       throw new Error("cannot build a JSON Schema for `bigint` without a JSON Schema annotation");
     case "SymbolKeyword":
       throw new Error("cannot build a JSON Schema for `symbol` without a JSON Schema annotation");
-    case "Tuple":
+    case "TupleType":
       {
         const elements = ast.elements.map(e => goWithIdentifier(e.type, $defs));
-        const rest = Option.map(ast.rest, ReadonlyArray.map(ast => goWithIdentifier(ast, $defs)));
+        const rest = ast.rest.map(ast => goWithIdentifier(ast, $defs));
         const output = {
           type: "array"
         };
@@ -177,8 +176,8 @@ const go = (ast, $defs) => {
         // ---------------------------------------------
         // handle rest element
         // ---------------------------------------------
-        if (Option.isSome(rest)) {
-          const head = rest.value[0];
+        if (rest.length > 0) {
+          const head = rest[0];
           if (len > 0) {
             output.additionalItems = head;
           } else {
@@ -187,7 +186,7 @@ const go = (ast, $defs) => {
           // ---------------------------------------------
           // handle post rest elements
           // ---------------------------------------------
-          if (rest.value.length > 1) {
+          if (rest.length > 1) {
             throw new Error("Generating a JSON Schema for post-rest elements is not currently supported. You're welcome to contribute by submitting a Pull Request.");
           }
         } else {
@@ -230,10 +229,10 @@ const go = (ast, $defs) => {
                   };
                   break;
                 }
-                throw new Error(`Unsupported index signature parameter (${AST.format(parameter)})`);
+                throw new Error(`Unsupported index signature parameter (${parameter})`);
               }
             case "SymbolKeyword":
-              throw new Error(`Unsupported index signature parameter (${AST.format(parameter)})`);
+              throw new Error(`Unsupported index signature parameter (${parameter})`);
           }
         }
         const propertySignatures = ast.propertySignatures.map(ps => {
@@ -253,7 +252,7 @@ const go = (ast, $defs) => {
         // ---------------------------------------------
         for (let i = 0; i < propertySignatures.length; i++) {
           const name = ast.propertySignatures[i].name;
-          if (typeof name === "string") {
+          if (Predicate.isString(name)) {
             output.properties[name] = propertySignatures[i];
             // ---------------------------------------------
             // handle optional property signatures
@@ -342,13 +341,13 @@ const go = (ast, $defs) => {
       }
     case "Suspend":
       {
-        const identifier = Option.orElse(AST.getIdentifierAnnotation(ast), () => AST.getIdentifierAnnotation(ast.f()));
+        const identifier = Option.orElse(AST.getJSONIdentifier(ast), () => AST.getJSONIdentifier(ast.f()));
         if (Option.isNone(identifier)) {
           throw new Error("Generating a JSON Schema for suspended schemas requires an identifier annotation");
         }
         return goWithIdentifier(ast.f(), $defs);
       }
-    case "Transform":
+    case "Transformation":
       return goWithIdentifier(ast.to, $defs);
   }
 };
diff --git a/dist/esm/JSONSchema.js.map b/dist/esm/JSONSchema.js.map
index 3f4b601099892bbc0f2aa98b4ec73468f5b99b27..6ef4cee88d15eca327aa7ad09ccc199452408e2d 100644
--- a/dist/esm/JSONSchema.js.map
+++ b/dist/esm/JSONSchema.js.map
@@ -1 +1 @@
-{"version":3,"file":"JSONSchema.js","names":["Option","Predicate","ReadonlyArray","ReadonlyRecord","AST","make","schema","goRoot","ast","anyJsonSchema","$id","unknownJsonSchema","objectJsonSchema","empty","$schema","$defs","jsonSchema","goWithIdentifier","out","isEmptyRecord","identifier","getIdentifierAnnotation","match","onNone","goWithMetaData","onSome","id","$ref","DEFINITION_PREFIX","has","getMetaData","annotated","getSomes","description","getDescriptionAnnotation","title","getTitleAnnotation","examples","getExamplesAnnotation","default","getDefaultAnnotation","go","pruneUndefinedKeyword","ps","type","isOptional","isUnion","isNone","getJSONSchemaAnnotation","createUnion","types","filter","isUndefinedKeyword","annotations","hook","isSome","_tag","from","value","Error","literal","const","isString","isNumber","isBoolean","elements","map","e","rest","output","len","length","minItems","element","items","head","additionalItems","maxItems","propertySignatures","indexSignatures","additionalProperties","undefined","patternProperties","is","parameter","getTemplateLiteralRegex","source","pattern","format","required","properties","i","name","push","String","enums","anyOf","Object","keys","enum","$comment","oneOf","regex","orElse","f","to"],"sources":["../../src/JSONSchema.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"JSONSchema.js","names":["Option","Predicate","ReadonlyRecord","AST","make","schema","goRoot","ast","anyJsonSchema","$id","unknownJsonSchema","objectJsonSchema","empty","$schema","$defs","jsonSchema","goWithIdentifier","out","isEmptyRecord","identifier","getJSONIdentifier","match","onNone","goWithMetaData","onSome","id","$ref","DEFINITION_PREFIX","has","getMetaData","annotated","getSomes","description","getDescriptionAnnotation","title","getTitleAnnotation","examples","getExamplesAnnotation","default","getDefaultAnnotation","go","pruneUndefinedKeyword","ps","type","isOptional","isUnion","isNone","getJSONSchemaAnnotation","Union","types","filter","isUndefinedKeyword","annotations","hook","isSome","_tag","from","value","Error","literal","const","isString","isNumber","isBoolean","elements","map","e","rest","output","len","length","minItems","element","items","head","additionalItems","maxItems","propertySignatures","indexSignatures","additionalProperties","undefined","patternProperties","is","parameter","getTemplateLiteralRegex","source","pattern","required","properties","i","name","push","String","enums","anyOf","Object","keys","enum","$comment","oneOf","regex","orElse","f","to"],"sources":["../../src/JSONSchema.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/ParseResult.js b/dist/esm/ParseResult.js
index 1beff337505023c0a9522c3dc2df969d35feab65..e1069765a99cd62181dd35c4f97951579b756d93 100644
--- a/dist/esm/ParseResult.js
+++ b/dist/esm/ParseResult.js
@@ -6,7 +6,6 @@ import * as Effect from "effect/Effect";
 import * as Either from "effect/Either";
 import { dual } from "effect/Function";
 import * as Inspectable from "effect/Inspectable";
-import * as InternalParser from "./internal/parser.js";
 import * as TreeFormatter from "./TreeFormatter.js";
 /**
  * @since 1.0.0
@@ -66,96 +65,124 @@ _try as try };
  * @since 1.0.0
  */
 export const fromOption = Either.fromOption;
+export {
 /**
- * @category constructors
+ * Error that occurs when a declaration has an error.
+ *
+ * @category model
  * @since 1.0.0
  */
-export const transform = InternalParser.transform;
+Declaration,
 /**
- * @category constructors
+ * @category optimisation
  * @since 1.0.0
  */
-export const type = InternalParser.type;
+eitherOrUndefined,
 /**
- * @category constructors
+ * @category optimisation
  * @since 1.0.0
  */
-export const forbidden = InternalParser.forbidden;
+flatMap,
 /**
- * @category constructors
+ * The `Forbidden` variant of the `ParseIssue` type represents a forbidden operation, such as when encountering an Effect that is not allowed to execute (e.g., using `runSync`).
+ *
+ * @category model
  * @since 1.0.0
  */
-export const declaration = InternalParser.declaration;
+Forbidden,
 /**
- * @category constructors
+ * The `Index` error indicates that there was an error at a specific index in an array or tuple.
+ *
+ * @category model
  * @since 1.0.0
  */
-export const refinement = InternalParser.refinement;
+Index,
 /**
- * @category constructors
+ * The `Key` variant of the `ParseIssue` type represents an error that occurs when a key in a type literal or record is invalid.
+ *
+ * @category model
  * @since 1.0.0
  */
-export const tuple = (ast, actual, errors) => ({
-  _tag: "Tuple",
-  ast,
-  actual,
-  errors
-});
+Key,
 /**
- * @category constructors
+ * @category optimisation
  * @since 1.0.0
  */
-export const typeLiteral = InternalParser.typeLiteral;
+map,
 /**
- * @category constructors
+ * @category optimisation
  * @since 1.0.0
  */
-export const index = InternalParser.index;
+mapError,
 /**
- * @category constructors
+ * Error that occurs when a member in a union has an error.
+ *
+ * @category model
  * @since 1.0.0
  */
-export const key = InternalParser.key;
+Member,
 /**
- * @category constructors
+ * Error that occurs when a required key or index is missing.
+ *
+ * @category model
  * @since 1.0.0
  */
-export const missing = InternalParser.missing;
+Missing,
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const unexpected = InternalParser.unexpected;
+missing,
 /**
- * @category constructors
+ * Error that occurs when a refinement has an error.
+ *
+ * @category model
  * @since 1.0.0
  */
-export const union = InternalParser.union;
+Refinement,
 /**
- * @category constructors
+ * Error that occurs when a transformation has an error.
+ *
+ * @category model
  * @since 1.0.0
  */
-export const member = InternalParser.member;
+Transformation,
 /**
- * @category optimisation
+ * Error that occurs when an array or tuple has an error.
+ *
+ * @category model
  * @since 1.0.0
  */
-export const eitherOrUndefined = InternalParser.eitherOrUndefined;
+Tuple,
 /**
- * @category optimisation
+ * The `Type` variant of the `ParseIssue` type represents an error that occurs when the `actual` value is not of the expected type.
+ * The `ast` field specifies the expected type, and the `actual` field contains the value that caused the error.
+ *
+ * @category model
  * @since 1.0.0
  */
-export const flatMap = InternalParser.flatMap;
+Type,
 /**
- * @category optimisation
+ * Error that occurs when a type literal or record has an error.
+ *
+ * @category model
  * @since 1.0.0
  */
-export const map = InternalParser.map;
+TypeLiteral,
 /**
- * @category optimisation
+ * Error that occurs when an unexpected key or index is present.
+ *
+ * @category model
+ * @since 1.0.0
+ */
+Unexpected,
+/**
+ * Error that occurs when a union has an error.
+ *
+ * @category model
  * @since 1.0.0
  */
-export const mapError = InternalParser.mapError;
+Union } from "./internal/parseResult.js";
 /**
  * @category optimisation
  * @since 1.0.0
diff --git a/dist/esm/ParseResult.js.map b/dist/esm/ParseResult.js.map
index 144f5f607aa6924fa53036fe5e8fc499437e33ed..e932deaccb6fa22daaa489d795c2c78b7bdc9c06 100644
--- a/dist/esm/ParseResult.js.map
+++ b/dist/esm/ParseResult.js.map
@@ -1 +1 @@
-{"version":3,"file":"ParseResult.js","names":["TaggedError","Effect","Either","dual","Inspectable","InternalParser","TreeFormatter","ParseError","message","toString","formatIssue","error","toJSON","_id","NodeInspectSymbol","parseError","issue","succeed","right","fail","left","_try","try","fromOption","transform","type","forbidden","declaration","refinement","tuple","ast","actual","errors","_tag","typeLiteral","index","key","missing","unexpected","union","member","eitherOrUndefined","flatMap","map","mapError","mapBoth","self","options","s","onFailure","onSuccess","orElse","f","catchAll","decode","decodeUnknown","decodeUnknownEither","decodeUnknownOption","decodeUnknownPromise","decodeUnknownSync","encode","encodeUnknown","encodeUnknownEither","encodeUnknownOption","encodeUnknownPromise","encodeUnknownSync"],"sources":["../../src/ParseResult.ts"],"sourcesContent":[null],"mappings":"AAAA;;;AAIA,SAASA,WAAW,QAAQ,aAAa;AACzC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,MAAM,MAAM,eAAe;AAEvC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,KAAKC,WAAW,MAAM,oBAAoB;AAIjD,OAAO,KAAKC,cAAc,MAAM,sBAAsB;AACtD,OAAO,KAAKC,aAAa,MAAM,oBAAoB;AAEnD;;;AAGA,OAAM,MAAOC,UAAW,SAAQP,WAAW,CAAC,YAAY,CAAiC;EACvF,IAAIQ,OAAOA,CAAA;IACT,OAAO,IAAI,CAACC,QAAQ,EAAE;EACxB;EACA;;;EAGAA,QAAQA,CAAA;IACN,OAAOH,aAAa,CAACI,WAAW,CAAC,IAAI,CAACC,KAAK,CAAC;EAC9C;EACA;;;EAGAC,MAAMA,CAAA;IACJ,OAAO;MACLC,GAAG,EAAE,YAAY;MACjBL,OAAO,EAAE,IAAI,CAACC,QAAQ;KACvB;EACH;EACA;;;EAGA,CAACL,WAAW,CAACU,iBAAiB,IAAC;IAC7B,OAAO,IAAI,CAACF,MAAM,EAAE;EACtB;;AAGF;;;;AAIA,OAAO,MAAMG,UAAU,GAAIC,KAAiB,IAAiB,IAAIT,UAAU,CAAC;EAAEI,KAAK,EAAEK;AAAK,CAAE,CAAC;AAE7F;;;;AAIA,OAAO,MAAMC,OAAO,GAA8Cf,MAAM,CAACgB,KAAK;AAE9E;;;;AAIA,OAAO,MAAMC,IAAI,GAA4DjB,MAAM,CAACkB,IAAI;AAExF,MAAMC,IAAI,GAG2BnB,MAAM,CAACoB,GAAG;AAE/C;AACE;;;;AAIAD,IAAI,IAAIC,GAAG;AAGb;;;;AAIA,OAAO,MAAMC,UAAU,GAGnBrB,MAAM,CAACqB,UAAU;AAgCrB;;;;AAIA,OAAO,MAAMC,SAAS,GAAGnB,cAAc,CAACmB,SAAS;AAgBjD;;;;AAIA,OAAO,MAAMC,IAAI,GAAGpB,cAAc,CAACoB,IAAI;AAevC;;;;AAIA,OAAO,MAAMC,SAAS,GAAGrB,cAAc,CAACqB,SAAS;AAejD;;;;AAIA,OAAO,MAAMC,WAAW,GAAGtB,cAAc,CAACsB,WAAW;AAgBrD;;;;AAIA,OAAO,MAAMC,UAAU,GAAGvB,cAAc,CAACuB,UAAU;AAenD;;;;AAIA,OAAO,MAAMC,KAAK,GAAGA,CACnBC,GAAc,EACdC,MAAe,EACfC,MAAkD,MACvC;EAAEC,IAAI,EAAE,OAAO;EAAEH,GAAG;EAAEC,MAAM;EAAEC;AAAM,CAAE,CAAC;AAepD;;;;AAIA,OAAO,MAAME,WAAW,GAAG7B,cAAc,CAAC6B,WAAW;AAcrD;;;;AAIA,OAAO,MAAMC,KAAK,GAAG9B,cAAc,CAAC8B,KAAK;AAczC;;;;AAIA,OAAO,MAAMC,GAAG,GAAG/B,cAAc,CAAC+B,GAAG;AAYrC;;;;AAIA,OAAO,MAAMC,OAAO,GAAYhC,cAAc,CAACgC,OAAO;AAatD;;;;AAIA,OAAO,MAAMC,UAAU,GAAGjC,cAAc,CAACiC,UAAU;AAenD;;;;AAIA,OAAO,MAAMC,KAAK,GAAGlC,cAAc,CAACkC,KAAK;AAczC;;;;AAIA,OAAO,MAAMC,MAAM,GAAGnC,cAAc,CAACmC,MAAM;AAE3C;;;;AAIA,OAAO,MAAMC,iBAAiB,GAAGpC,cAAc,CAACoC,iBAAiB;AAEjE;;;;AAIA,OAAO,MAAMC,OAAO,GAAGrC,cAAc,CAACqC,OAAO;AAE7C;;;;AAIA,OAAO,MAAMC,GAAG,GAAGtC,cAAc,CAACsC,GAAG;AAErC;;;;AAIA,OAAO,MAAMC,QAAQ,GAAGvC,cAAc,CAACuC,QAAQ;AAE/C;;;;AAIA,OAAO,MAAMC,OAAO,gBAQhB1C,IAAI,CAAC,CAAC,EAAE,CACV2C,IAA4B,EAC5BC,OAA+E,KACnD;EAC5B,MAAMC,CAAC,GAAQF,IAAI;EACnB,IAAIE,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;IACxB,OAAO9C,MAAM,CAACkB,IAAI,CAAC2B,OAAO,CAACE,SAAS,CAACD,CAAC,CAAC5B,IAAI,CAAC,CAAC;EAC/C;EACA,IAAI4B,CAAC,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;IACzB,OAAO9C,MAAM,CAACgB,KAAK,CAAC6B,OAAO,CAACG,SAAS,CAACF,CAAC,CAAC9B,KAAK,CAAC,CAAC;EACjD;EACA,OAAOjB,MAAM,CAAC4C,OAAO,CAACC,IAAI,EAAEC,OAAO,CAAC;AACtC,CAAC,CAAC;AAEF;;;;AAIA,OAAO,MAAMI,MAAM,gBAQfhD,IAAI,CAAC,CAAC,EAAE,CACV2C,IAA4B,EAC5BM,CAAsC,KACD;EACrC,MAAMJ,CAAC,GAAQF,IAAI;EACnB,IAAIE,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;IACxB,OAAOI,CAAC,CAACJ,CAAC,CAAC5B,IAAI,CAAC;EAClB;EACA,IAAI4B,CAAC,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;IACzB,OAAOA,CAAC;EACV;EACA,OAAO/C,MAAM,CAACoD,QAAQ,CAACP,IAAI,EAAEM,CAAC,CAAC;AACjC,CAAC,CAAC;AAEF;AACA;AACE;;;;AAIAE,MAAM;AACN;;;;AAIAC,aAAa;AACb;;;;AAIAC,mBAAmB;AACnB;;;;AAIAC,mBAAmB;AACnB;;;;AAIAC,oBAAoB;AACpB;;;;AAIAC,iBAAiB;AACjB;;;;AAIAC,MAAM;AACN;;;;AAIAC,aAAa;AACb;;;;AAIAC,mBAAmB;AACnB;;;;AAIAC,mBAAmB;AACnB;;;;AAIAC,oBAAoB;AACpB;;;;AAIAC,iBAAiB,QACZ,aAAa"}
\ No newline at end of file
+{"version":3,"file":"ParseResult.js","names":["TaggedError","Effect","Either","dual","Inspectable","TreeFormatter","ParseError","message","toString","formatIssue","error","toJSON","_id","NodeInspectSymbol","parseError","issue","succeed","right","fail","left","_try","try","fromOption","Declaration","eitherOrUndefined","flatMap","Forbidden","Index","Key","map","mapError","Member","Missing","missing","Refinement","Transformation","Tuple","Type","TypeLiteral","Unexpected","Union","mapBoth","self","options","s","onFailure","onSuccess","orElse","f","catchAll","decode","decodeUnknown","decodeUnknownEither","decodeUnknownOption","decodeUnknownPromise","decodeUnknownSync","encode","encodeUnknown","encodeUnknownEither","encodeUnknownOption","encodeUnknownPromise","encodeUnknownSync"],"sources":["../../src/ParseResult.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/Parser.js b/dist/esm/Parser.js
index b2611e16166defd3a385ff3d0f246c200bfe6997..e4c081baba91dfc536249eb71e25b3576c719147 100644
--- a/dist/esm/Parser.js
+++ b/dist/esm/Parser.js
@@ -8,8 +8,8 @@ import * as Option from "effect/Option";
 import * as Predicate from "effect/Predicate";
 import * as ReadonlyArray from "effect/ReadonlyArray";
 import * as AST from "./AST.js";
-import * as Internal from "./internal/ast.js";
-import * as InternalParser from "./internal/parser.js";
+import * as _parseResult from "./internal/parseResult.js";
+import * as _util from "./internal/util.js";
 import * as TreeFormatter from "./TreeFormatter.js";
 /** @internal */
 export const mergeParseOptions = (a, b) => {
@@ -128,17 +128,17 @@ export const decode = decodeUnknown;
  * @category validation
  * @since 1.0.0
  */
-export const validateSync = (schema, options) => getSync(AST.to(schema.ast), true, options);
+export const validateSync = (schema, options) => getSync(AST.typeAST(schema.ast), true, options);
 /**
  * @category validation
  * @since 1.0.0
  */
-export const validateOption = (schema, options) => getOption(AST.to(schema.ast), true, options);
+export const validateOption = (schema, options) => getOption(AST.typeAST(schema.ast), true, options);
 /**
  * @category validation
  * @since 1.0.0
  */
-export const validateEither = (schema, options) => getEither(AST.to(schema.ast), true, options);
+export const validateEither = (schema, options) => getEither(AST.typeAST(schema.ast), true, options);
 /**
  * @category validation
  * @since 1.0.0
@@ -151,13 +151,13 @@ export const validatePromise = (schema, options) => {
  * @category validation
  * @since 1.0.0
  */
-export const validate = (schema, options) => getEffect(AST.to(schema.ast), true, options);
+export const validate = (schema, options) => getEffect(AST.typeAST(schema.ast), true, options);
 /**
  * @category validation
  * @since 1.0.0
  */
 export const is = (schema, options) => {
-  const parser = goMemo(AST.to(schema.ast), true);
+  const parser = goMemo(AST.typeAST(schema.ast), true);
   return (u, overrideOptions) => Either.isRight(parser(u, {
     ...mergeParseOptions(options, overrideOptions),
     isExact: true
@@ -168,7 +168,7 @@ export const is = (schema, options) => {
  * @since 1.0.0
  */
 export const asserts = (schema, options) => {
-  const parser = goMemo(AST.to(schema.ast), true);
+  const parser = goMemo(AST.typeAST(schema.ast), true);
   return (u, overrideOptions) => {
     const result = parser(u, {
       ...mergeParseOptions(options, overrideOptions),
@@ -204,10 +204,6 @@ export const encodePromise = encodeUnknownPromise;
  * @since 1.0.0
  */
 export const encode = encodeUnknown;
-/**
- * @since 1.0.0"
- */
-export const defaultParseOption = {};
 const decodeMemoMap = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for("@effect/schema/Parser/decodeMemoMap"), () => new WeakMap());
 const encodeMemoMap = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for("@effect/schema/Parser/encodeMemoMap"), () => new WeakMap());
 const goMemo = (ast, isDecoding) => {
@@ -228,27 +224,27 @@ const go = (ast, isDecoding) => {
       {
         if (isDecoding) {
           const from = goMemo(ast.from, true);
-          return (i, options) => handleForbidden(InternalParser.flatMap(InternalParser.mapError(from(i, options), e => InternalParser.refinement(ast, i, "From", e)), a => Option.match(ast.filter(a, options ?? defaultParseOption, ast), {
+          return (i, options) => handleForbidden(_parseResult.flatMap(_parseResult.mapError(from(i, options), e => new _parseResult.Refinement(ast, i, "From", e)), a => Option.match(ast.filter(a, options ?? AST.defaultParseOption, ast), {
             onNone: () => Either.right(a),
-            onSome: e => Either.left(InternalParser.refinement(ast, i, "Predicate", e))
+            onSome: e => Either.left(new _parseResult.Refinement(ast, i, "Predicate", e))
           })), ast, i, options);
         } else {
-          const from = goMemo(AST.to(ast), true);
+          const from = goMemo(AST.typeAST(ast), true);
           const to = goMemo(dropRightRefinement(ast.from), false);
-          return (i, options) => handleForbidden(InternalParser.flatMap(from(i, options), a => to(a, options)), ast, i, options);
+          return (i, options) => handleForbidden(_parseResult.flatMap(from(i, options), a => to(a, options)), ast, i, options);
         }
       }
-    case "Transform":
+    case "Transformation":
       {
         const transform = getFinalTransformation(ast.transformation, isDecoding);
         const from = isDecoding ? goMemo(ast.from, true) : goMemo(ast.to, false);
         const to = isDecoding ? goMemo(ast.to, true) : goMemo(ast.from, false);
-        return (i1, options) => handleForbidden(InternalParser.flatMap(InternalParser.mapError(from(i1, options), e => InternalParser.transform(ast, i1, isDecoding ? "From" : "To", e)), a => InternalParser.flatMap(InternalParser.mapError(transform(a, options ?? defaultParseOption, ast), e => InternalParser.transform(ast, i1, "Transformation", e)), i2 => InternalParser.mapError(to(i2, options), e => InternalParser.transform(ast, i1, isDecoding ? "To" : "From", e)))), ast, i1, options);
+        return (i1, options) => handleForbidden(_parseResult.flatMap(_parseResult.mapError(from(i1, options), e => new _parseResult.Transformation(ast, i1, isDecoding ? "Encoded" : "Type", e)), a => _parseResult.flatMap(_parseResult.mapError(transform(a, options ?? AST.defaultParseOption, ast), e => new _parseResult.Transformation(ast, i1, "Transformation", e)), i2 => _parseResult.mapError(to(i2, options), e => new _parseResult.Transformation(ast, i1, isDecoding ? "Type" : "Encoded", e)))), ast, i1, options);
       }
     case "Declaration":
       {
         const parse = isDecoding ? ast.decodeUnknown(...ast.typeParameters) : ast.encodeUnknown(...ast.typeParameters);
-        return (i, options) => handleForbidden(InternalParser.mapError(parse(i, options ?? defaultParseOption, ast), e => InternalParser.declaration(ast, i, e)), ast, i, options);
+        return (i, options) => handleForbidden(_parseResult.mapError(parse(i, options ?? AST.defaultParseOption, ast), e => new _parseResult.Declaration(ast, i, e)), ast, i, options);
       }
     case "Literal":
       return fromRefinement(ast, u => u === ast.literal);
@@ -282,20 +278,20 @@ const go = (ast, isDecoding) => {
         const regex = AST.getTemplateLiteralRegex(ast);
         return fromRefinement(ast, u => Predicate.isString(u) && regex.test(u));
       }
-    case "Tuple":
+    case "TupleType":
       {
         const elements = ast.elements.map(e => goMemo(e.type, isDecoding));
-        const rest = Option.map(ast.rest, ReadonlyArray.map(ast => goMemo(ast, isDecoding)));
+        const rest = ast.rest.map(ast => goMemo(ast, isDecoding));
         let requiredLen = ast.elements.filter(e => !e.isOptional).length;
-        if (Option.isSome(ast.rest)) {
-          requiredLen += ast.rest.value.length - 1;
+        if (ast.rest.length > 0) {
+          requiredLen += ast.rest.length - 1;
         }
-        const expectedAST = AST.createUnion(ast.elements.map((_, i) => AST.createLiteral(i)));
+        const expectedAST = AST.Union.make(ast.elements.map((_, i) => new AST.Literal(i)));
         const concurrency = getConcurrency(ast);
         const batching = getBatching(ast);
         return (input, options) => {
           if (!Array.isArray(input)) {
-            return Either.left(InternalParser.type(ast, input));
+            return Either.left(new _parseResult.Type(ast, input));
           }
           const allErrors = options?.errors === "all";
           const es = [];
@@ -305,25 +301,25 @@ const go = (ast, isDecoding) => {
           // ---------------------------------------------
           const len = input.length;
           for (let i = len; i <= requiredLen - 1; i++) {
-            const e = InternalParser.index(i, InternalParser.missing);
+            const e = new _parseResult.Index(i, _parseResult.missing);
             if (allErrors) {
               es.push([stepKey++, e]);
               continue;
             } else {
-              return Either.left(InternalParser.tuple(ast, input, [e]));
+              return Either.left(new _parseResult.Tuple(ast, input, [e]));
             }
           }
           // ---------------------------------------------
           // handle excess indexes
           // ---------------------------------------------
-          if (Option.isNone(ast.rest)) {
+          if (ast.rest.length === 0) {
             for (let i = ast.elements.length; i <= len - 1; i++) {
-              const e = InternalParser.index(i, InternalParser.unexpected(expectedAST));
+              const e = new _parseResult.Index(i, new _parseResult.Unexpected(expectedAST));
               if (allErrors) {
                 es.push([stepKey++, e]);
                 continue;
               } else {
-                return Either.left(InternalParser.tuple(ast, input, [e]));
+                return Either.left(new _parseResult.Tuple(ast, input, [e]));
               }
             }
           }
@@ -342,16 +338,16 @@ const go = (ast, isDecoding) => {
             } else {
               const parser = elements[i];
               const te = parser(input[i], options);
-              const eu = InternalParser.eitherOrUndefined(te);
+              const eu = _parseResult.eitherOrUndefined(te);
               if (eu) {
                 if (Either.isLeft(eu)) {
                   // the input element is present but is not valid
-                  const e = InternalParser.index(i, eu.left);
+                  const e = new _parseResult.Index(i, eu.left);
                   if (allErrors) {
                     es.push([stepKey++, e]);
                     continue;
                   } else {
-                    return Either.left(InternalParser.tuple(ast, input, [e]));
+                    return Either.left(new _parseResult.Tuple(ast, input, [e]));
                   }
                 }
                 output.push([stepKey++, eu.right]);
@@ -367,12 +363,12 @@ const go = (ast, isDecoding) => {
                 }) => Effect.flatMap(Effect.either(te), t => {
                   if (Either.isLeft(t)) {
                     // the input element is present but is not valid
-                    const e = InternalParser.index(index, t.left);
+                    const e = new _parseResult.Index(index, t.left);
                     if (allErrors) {
                       es.push([nk, e]);
                       return Effect.unit;
                     } else {
-                      return Either.left(InternalParser.tuple(ast, input, [e]));
+                      return Either.left(new _parseResult.Tuple(ast, input, [e]));
                     }
                   }
                   output.push([nk, t.right]);
@@ -384,19 +380,19 @@ const go = (ast, isDecoding) => {
           // ---------------------------------------------
           // handle rest element
           // ---------------------------------------------
-          if (Option.isSome(rest)) {
-            const [head, ...tail] = rest.value;
+          if (ReadonlyArray.isNonEmptyReadonlyArray(rest)) {
+            const [head, ...tail] = rest;
             for (; i < len - tail.length; i++) {
               const te = head(input[i], options);
-              const eu = InternalParser.eitherOrUndefined(te);
+              const eu = _parseResult.eitherOrUndefined(te);
               if (eu) {
                 if (Either.isLeft(eu)) {
-                  const e = InternalParser.index(i, eu.left);
+                  const e = new _parseResult.Index(i, eu.left);
                   if (allErrors) {
                     es.push([stepKey++, e]);
                     continue;
                   } else {
-                    return Either.left(InternalParser.tuple(ast, input, [e]));
+                    return Either.left(new _parseResult.Tuple(ast, input, [e]));
                   }
                 } else {
                   output.push([stepKey++, eu.right]);
@@ -412,12 +408,12 @@ const go = (ast, isDecoding) => {
                   output
                 }) => Effect.flatMap(Effect.either(te), t => {
                   if (Either.isLeft(t)) {
-                    const e = InternalParser.index(index, t.left);
+                    const e = new _parseResult.Index(index, t.left);
                     if (allErrors) {
                       es.push([nk, e]);
                       return Effect.unit;
                     } else {
-                      return Either.left(InternalParser.tuple(ast, input, [e]));
+                      return Either.left(new _parseResult.Tuple(ast, input, [e]));
                     }
                   } else {
                     output.push([nk, t.right]);
@@ -435,16 +431,16 @@ const go = (ast, isDecoding) => {
                 continue;
               } else {
                 const te = tail[j](input[i], options);
-                const eu = InternalParser.eitherOrUndefined(te);
+                const eu = _parseResult.eitherOrUndefined(te);
                 if (eu) {
                   if (Either.isLeft(eu)) {
                     // the input element is present but is not valid
-                    const e = InternalParser.index(i, eu.left);
+                    const e = new _parseResult.Index(i, eu.left);
                     if (allErrors) {
                       es.push([stepKey++, e]);
                       continue;
                     } else {
-                      return Either.left(InternalParser.tuple(ast, input, [e]));
+                      return Either.left(new _parseResult.Tuple(ast, input, [e]));
                     }
                   }
                   output.push([stepKey++, eu.right]);
@@ -460,12 +456,12 @@ const go = (ast, isDecoding) => {
                   }) => Effect.flatMap(Effect.either(te), t => {
                     if (Either.isLeft(t)) {
                       // the input element is present but is not valid
-                      const e = InternalParser.index(index, t.left);
+                      const e = new _parseResult.Index(index, t.left);
                       if (allErrors) {
                         es.push([nk, e]);
                         return Effect.unit;
                       } else {
-                        return Either.left(InternalParser.tuple(ast, input, [e]));
+                        return Either.left(new _parseResult.Tuple(ast, input, [e]));
                       }
                     }
                     output.push([nk, t.right]);
@@ -481,7 +477,7 @@ const go = (ast, isDecoding) => {
           const computeResult = ({
             es,
             output
-          }) => ReadonlyArray.isNonEmptyArray(es) ? Either.left(InternalParser.tuple(ast, input, sortByIndex(es))) : Either.right(sortByIndex(output));
+          }) => ReadonlyArray.isNonEmptyArray(es) ? Either.left(new _parseResult.Tuple(ast, input, sortByIndex(es))) : Either.right(sortByIndex(output));
           if (queue && queue.length > 0) {
             const cqueue = queue;
             return Effect.suspend(() => {
@@ -514,13 +510,13 @@ const go = (ast, isDecoding) => {
           expectedKeys[ps.name] = null;
         }
         const indexSignatures = ast.indexSignatures.map(is => [goMemo(is.parameter, isDecoding), goMemo(is.type, isDecoding), is.parameter]);
-        const expectedAST = AST.createUnion(ast.indexSignatures.map(is => is.parameter).concat(Internal.ownKeys(expectedKeys).map(key => Predicate.isSymbol(key) ? AST.createUniqueSymbol(key) : AST.createLiteral(key))));
+        const expectedAST = AST.Union.make(ast.indexSignatures.map(is => is.parameter).concat(_util.ownKeys(expectedKeys).map(key => Predicate.isSymbol(key) ? new AST.UniqueSymbol(key) : new AST.Literal(key))));
         const expected = goMemo(expectedAST, isDecoding);
         const concurrency = getConcurrency(ast);
         const batching = getBatching(ast);
         return (input, options) => {
           if (!Predicate.isRecord(input)) {
-            return Either.left(InternalParser.type(ast, input));
+            return Either.left(new _parseResult.Type(ast, input));
           }
           const allErrors = options?.errors === "all";
           const es = [];
@@ -532,17 +528,17 @@ const go = (ast, isDecoding) => {
           const onExcessPropertyPreserve = options?.onExcessProperty === "preserve";
           const output = {};
           if (onExcessPropertyError || onExcessPropertyPreserve) {
-            for (const key of Internal.ownKeys(input)) {
-              const eu = InternalParser.eitherOrUndefined(expected(key, options));
+            for (const key of _util.ownKeys(input)) {
+              const eu = _parseResult.eitherOrUndefined(expected(key, options));
               if (Either.isLeft(eu)) {
                 // key is unexpected
                 if (onExcessPropertyError) {
-                  const e = InternalParser.key(key, InternalParser.unexpected(expectedAST));
+                  const e = new _parseResult.Key(key, new _parseResult.Unexpected(expectedAST));
                   if (allErrors) {
                     es.push([stepKey++, e]);
                     continue;
                   } else {
-                    return Either.left(InternalParser.typeLiteral(ast, input, [e]));
+                    return Either.left(new _parseResult.TypeLiteral(ast, input, [e]));
                   }
                 } else {
                   // preserve key
@@ -561,26 +557,26 @@ const go = (ast, isDecoding) => {
               if (ps.isOptional) {
                 continue;
               } else if (isExact) {
-                const e = InternalParser.key(name, InternalParser.missing);
+                const e = new _parseResult.Key(name, _parseResult.missing);
                 if (allErrors) {
                   es.push([stepKey++, e]);
                   continue;
                 } else {
-                  return Either.left(InternalParser.typeLiteral(ast, input, [e]));
+                  return Either.left(new _parseResult.TypeLiteral(ast, input, [e]));
                 }
               }
             }
             const parser = propertySignatures[i][0];
             const te = parser(input[name], options);
-            const eu = InternalParser.eitherOrUndefined(te);
+            const eu = _parseResult.eitherOrUndefined(te);
             if (eu) {
               if (Either.isLeft(eu)) {
-                const e = InternalParser.key(name, hasKey ? eu.left : InternalParser.missing);
+                const e = new _parseResult.Key(name, hasKey ? eu.left : _parseResult.missing);
                 if (allErrors) {
                   es.push([stepKey++, e]);
                   continue;
                 } else {
-                  return Either.left(InternalParser.typeLiteral(ast, input, [e]));
+                  return Either.left(new _parseResult.TypeLiteral(ast, input, [e]));
                 }
               }
               output[name] = eu.right;
@@ -595,12 +591,12 @@ const go = (ast, isDecoding) => {
                 output
               }) => Effect.flatMap(Effect.either(te), t => {
                 if (Either.isLeft(t)) {
-                  const e = InternalParser.key(index, hasKey ? t.left : InternalParser.missing);
+                  const e = new _parseResult.Key(index, hasKey ? t.left : _parseResult.missing);
                   if (allErrors) {
                     es.push([nk, e]);
                     return Effect.unit;
                   } else {
-                    return Either.left(InternalParser.typeLiteral(ast, input, [e]));
+                    return Either.left(new _parseResult.TypeLiteral(ast, input, [e]));
                   }
                 }
                 output[index] = t.right;
@@ -615,26 +611,26 @@ const go = (ast, isDecoding) => {
             const indexSignature = indexSignatures[i];
             const parameter = indexSignature[0];
             const type = indexSignature[1];
-            const keys = Internal.getKeysForIndexSignature(input, indexSignature[2]);
+            const keys = _util.getKeysForIndexSignature(input, indexSignature[2]);
             for (const key of keys) {
               // ---------------------------------------------
               // handle keys
               // ---------------------------------------------
-              const keu = InternalParser.eitherOrUndefined(parameter(key, options));
+              const keu = _parseResult.eitherOrUndefined(parameter(key, options));
               if (keu && Either.isRight(keu)) {
                 // ---------------------------------------------
                 // handle values
                 // ---------------------------------------------
                 const vpr = type(input[key], options);
-                const veu = InternalParser.eitherOrUndefined(vpr);
+                const veu = _parseResult.eitherOrUndefined(vpr);
                 if (veu) {
                   if (Either.isLeft(veu)) {
-                    const e = InternalParser.key(key, veu.left);
+                    const e = new _parseResult.Key(key, veu.left);
                     if (allErrors) {
                       es.push([stepKey++, e]);
                       continue;
                     } else {
-                      return Either.left(InternalParser.typeLiteral(ast, input, [e]));
+                      return Either.left(new _parseResult.TypeLiteral(ast, input, [e]));
                     }
                   } else {
                     if (!Object.prototype.hasOwnProperty.call(expectedKeys, key)) {
@@ -652,12 +648,12 @@ const go = (ast, isDecoding) => {
                     output
                   }) => Effect.flatMap(Effect.either(vpr), tv => {
                     if (Either.isLeft(tv)) {
-                      const e = InternalParser.key(index, tv.left);
+                      const e = new _parseResult.Key(index, tv.left);
                       if (allErrors) {
                         es.push([nk, e]);
                         return Effect.unit;
                       } else {
-                        return Either.left(InternalParser.typeLiteral(ast, input, [e]));
+                        return Either.left(new _parseResult.TypeLiteral(ast, input, [e]));
                       }
                     } else {
                       if (!Object.prototype.hasOwnProperty.call(expectedKeys, key)) {
@@ -676,7 +672,7 @@ const go = (ast, isDecoding) => {
           const computeResult = ({
             es,
             output
-          }) => ReadonlyArray.isNonEmptyArray(es) ? Either.left(InternalParser.typeLiteral(ast, input, sortByIndex(es))) : Either.right(output);
+          }) => ReadonlyArray.isNonEmptyArray(es) ? Either.left(new _parseResult.TypeLiteral(ast, input, sortByIndex(es))) : Either.right(output);
           if (queue && queue.length > 0) {
             const cqueue = queue;
             return Effect.suspend(() => {
@@ -700,7 +696,7 @@ const go = (ast, isDecoding) => {
     case "Union":
       {
         const searchTree = getSearchTree(ast.types, isDecoding);
-        const ownKeys = Internal.ownKeys(searchTree.keys);
+        const ownKeys = _util.ownKeys(searchTree.keys);
         const len = ownKeys.length;
         const map = new Map();
         for (let i = 0; i < ast.types.length; i++) {
@@ -726,14 +722,16 @@ const go = (ast, isDecoding) => {
                     // retrive the minimal set of candidates for decoding
                     candidates = candidates.concat(buckets[literal]);
                   } else {
-                    es.push([stepKey++, InternalParser.typeLiteral(AST.createTypeLiteral([AST.createPropertySignature(name, searchTree.keys[name].ast, false, true)], []), input, [InternalParser.key(name, InternalParser.type(searchTree.keys[name].ast, input[name]))])]);
+                    const literals = AST.Union.make(searchTree.keys[name].literals);
+                    es.push([stepKey++, new _parseResult.TypeLiteral(new AST.TypeLiteral([new AST.PropertySignature(name, literals, false, true)], []), input, [new _parseResult.Key(name, new _parseResult.Type(literals, input[name]))])]);
                   }
                 } else {
-                  es.push([stepKey++, InternalParser.typeLiteral(AST.createTypeLiteral([AST.createPropertySignature(name, searchTree.keys[name].ast, false, true)], []), input, [InternalParser.key(name, InternalParser.missing)])]);
+                  const literals = AST.Union.make(searchTree.keys[name].literals);
+                  es.push([stepKey++, new _parseResult.TypeLiteral(new AST.TypeLiteral([new AST.PropertySignature(name, literals, false, true)], []), input, [new _parseResult.Key(name, _parseResult.missing)])]);
                 }
               }
             } else {
-              es.push([stepKey++, InternalParser.type(ast, input)]);
+              es.push([stepKey++, new _parseResult.Type(ast, input)]);
             }
           }
           if (searchTree.otherwise.length > 0) {
@@ -746,12 +744,12 @@ const go = (ast, isDecoding) => {
             // the members of a union are ordered based on which one should be decoded first,
             // therefore if one member has added a task, all subsequent members must
             // also add a task to the queue even if they are synchronous
-            const eu = !queue || queue.length === 0 ? InternalParser.eitherOrUndefined(pr) : undefined;
+            const eu = !queue || queue.length === 0 ? _parseResult.eitherOrUndefined(pr) : undefined;
             if (eu) {
               if (Either.isRight(eu)) {
                 return Either.right(eu.right);
               } else {
-                es.push([stepKey++, InternalParser.member(candidate, eu.left)]);
+                es.push([stepKey++, new _parseResult.Member(candidate, eu.left)]);
               }
             } else {
               const nk = stepKey++;
@@ -766,7 +764,7 @@ const go = (ast, isDecoding) => {
                     if (Either.isRight(t)) {
                       state.finalResult = Either.right(t.right);
                     } else {
-                      state.es.push([nk, InternalParser.member(candidate, t.left)]);
+                      state.es.push([nk, new _parseResult.Member(candidate, t.left)]);
                     }
                     return Effect.unit;
                   });
@@ -777,9 +775,9 @@ const go = (ast, isDecoding) => {
           // ---------------------------------------------
           // compute output
           // ---------------------------------------------
-          const computeResult = es => ReadonlyArray.isNonEmptyArray(es) ? es.length === 1 && es[0][1]._tag === "Type" ? Either.left(es[0][1]) : Either.left(InternalParser.union(ast, input, sortByIndex(es))) :
+          const computeResult = es => ReadonlyArray.isNonEmptyArray(es) ? es.length === 1 && es[0][1]._tag === "Type" ? Either.left(es[0][1]) : Either.left(new _parseResult.Union(ast, input, sortByIndex(es))) :
           // this should never happen
-          Either.left(InternalParser.type(AST.neverKeyword, input));
+          Either.left(new _parseResult.Type(AST.neverKeyword, input));
           if (queue && queue.length > 0) {
             const cqueue = queue;
             return Effect.suspend(() => {
@@ -803,21 +801,29 @@ const go = (ast, isDecoding) => {
       }
     case "Suspend":
       {
-        const get = Internal.memoizeThunk(() => goMemo(AST.mergeAnnotations(ast.f(), ast.annotations), isDecoding));
+        const get = _util.memoizeThunk(() => goMemo(AST.annotations(ast.f(), ast.annotations), isDecoding));
         return (a, options) => get()(a, options);
       }
   }
 };
-const fromRefinement = (ast, refinement) => u => refinement(u) ? Either.right(u) : Either.left(InternalParser.type(ast, u));
+const fromRefinement = (ast, refinement) => u => refinement(u) ? Either.right(u) : Either.left(new _parseResult.Type(ast, u));
 /** @internal */
 export const getLiterals = (ast, isDecoding) => {
   switch (ast._tag) {
+    case "Declaration":
+      {
+        const annotation = AST.getSurrogateSchemaAnnotation(ast);
+        if (Option.isSome(annotation)) {
+          return getLiterals(annotation.value, isDecoding);
+        }
+        break;
+      }
     case "TypeLiteral":
       {
         const out = [];
         for (let i = 0; i < ast.propertySignatures.length; i++) {
           const propertySignature = ast.propertySignatures[i];
-          const type = isDecoding ? AST.from(propertySignature.type) : AST.to(propertySignature.type);
+          const type = isDecoding ? AST.encodedAST(propertySignature.type) : AST.typeAST(propertySignature.type);
           if (AST.isLiteral(type) && !propertySignature.isOptional) {
             out.push([propertySignature.name, type]);
           }
@@ -828,7 +834,7 @@ export const getLiterals = (ast, isDecoding) => {
       return getLiterals(ast.from, isDecoding);
     case "Suspend":
       return getLiterals(ast.f(), isDecoding);
-    case "Transform":
+    case "Transformation":
       return getLiterals(isDecoding ? ast.from : ast.to, isDecoding);
   }
   return [];
@@ -859,7 +865,7 @@ export const getSearchTree = (members, isDecoding) => {
         const hash = String(literal.literal);
         keys[key] = keys[key] || {
           buckets: {},
-          ast: AST.neverKeyword
+          literals: []
         };
         const buckets = keys[key].buckets;
         if (Object.prototype.hasOwnProperty.call(buckets, hash)) {
@@ -867,10 +873,10 @@ export const getSearchTree = (members, isDecoding) => {
             continue;
           }
           buckets[hash].push(member);
-          keys[key].ast = AST.createUnion([keys[key].ast, literal]);
+          keys[key].literals.push(literal);
         } else {
           buckets[hash] = [member];
-          keys[key].ast = AST.createUnion([keys[key].ast, literal]);
+          keys[key].literals.push(literal);
           break;
         }
       }
@@ -885,7 +891,7 @@ export const getSearchTree = (members, isDecoding) => {
 };
 const dropRightRefinement = ast => AST.isRefinement(ast) ? dropRightRefinement(ast.from) : ast;
 const handleForbidden = (effect, ast, actual, options) => {
-  const eu = InternalParser.eitherOrUndefined(effect);
+  const eu = _parseResult.eitherOrUndefined(effect);
   if (eu) {
     return eu;
   }
@@ -895,7 +901,7 @@ const handleForbidden = (effect, ast, actual, options) => {
   try {
     return Effect.runSync(Effect.either(effect));
   } catch (e) {
-    return Either.left(InternalParser.forbidden(ast, actual, e instanceof Error ? e.message : undefined));
+    return Either.left(new _parseResult.Forbidden(ast, actual, "cannot be be resolved synchronously, this is caused by using runSync on an effect that performs async work"));
   }
 };
 function sortByIndex(es) {
@@ -904,12 +910,6 @@ function sortByIndex(es) {
 // -------------------------------------------------------------------------------------
 // transformations interpreter
 // -------------------------------------------------------------------------------------
-const getFinalPropertySignatureTransformation = (transformation, isDecoding) => {
-  switch (transformation._tag) {
-    case "FinalPropertySignatureTransformation":
-      return isDecoding ? transformation.decode : transformation.encode;
-  }
-};
 /** @internal */
 export const getFinalTransformation = (transformation, isDecoding) => {
   switch (transformation._tag) {
@@ -925,16 +925,16 @@ export const getFinalTransformation = (transformation, isDecoding) => {
         // ---------------------------------------------
         for (const pst of transformation.propertySignatureTransformations) {
           const [from, to] = isDecoding ? [pst.from, pst.to] : [pst.to, pst.from];
-          const transform = getFinalPropertySignatureTransformation(pst.propertySignatureTransformation, isDecoding);
+          const transformation = isDecoding ? pst.decode : pst.encode;
           const f = input => {
-            const o = transform(Object.prototype.hasOwnProperty.call(input, from) ? Option.some(input[from]) : Option.none());
+            const o = transformation(Object.prototype.hasOwnProperty.call(input, from) ? Option.some(input[from]) : Option.none());
             delete input[from];
             if (Option.isSome(o)) {
               input[to] = o.value;
             }
             return input;
           };
-          out = InternalParser.map(out, f);
+          out = _parseResult.map(out, f);
         }
         return out;
       };
diff --git a/dist/esm/Parser.js.map b/dist/esm/Parser.js.map
index 06c4a53b200013fcc315b23db497370a4613a77c..b29966e3ba56dc7deb8722d1f42e62dec792bba4 100644
--- a/dist/esm/Parser.js.map
+++ b/dist/esm/Parser.js.map
@@ -1 +1 @@
-{"version":3,"file":"Parser.js","names":["Effect","Either","globalValue","Option","Predicate","ReadonlyArray","AST","Internal","InternalParser","TreeFormatter","mergeParseOptions","a","b","undefined","out","errors","onExcessProperty","getEither","ast","isDecoding","options","parser","goMemo","u","overrideOptions","getSync","input","getOrThrowWith","e","Error","formatIssue","getOption","getRight","getEffect","isEffectAllowed","decodeUnknownSync","schema","decodeUnknownOption","decodeUnknownEither","decodeUnknownPromise","decodeUnknown","runPromise","encodeUnknownSync","encodeUnknownOption","encodeUnknownEither","encodeUnknownPromise","encodeUnknown","decodeSync","decodeOption","decodeEither","decodePromise","decode","validateSync","to","validateOption","validateEither","validatePromise","validate","is","isRight","isExact","asserts","result","isLeft","left","encodeSync","encodeOption","encodeEither","encodePromise","encode","defaultParseOption","decodeMemoMap","Symbol","for","WeakMap","encodeMemoMap","memoMap","memo","get","go","set","getConcurrency","getOrUndefined","getConcurrencyAnnotation","getBatching","getBatchingAnnotation","_tag","from","i","handleForbidden","flatMap","mapError","refinement","match","filter","onNone","right","onSome","dropRightRefinement","transform","getFinalTransformation","transformation","i1","i2","parse","typeParameters","declaration","fromRefinement","literal","symbol","isUndefined","isNever","isString","isNumber","isBoolean","isBigInt","isSymbol","isObject","enums","some","_","value","regex","getTemplateLiteralRegex","test","elements","map","type","rest","requiredLen","isOptional","length","isSome","expectedAST","createUnion","createLiteral","concurrency","batching","Array","isArray","allErrors","es","stepKey","len","index","missing","push","tuple","isNone","unexpected","output","queue","te","eu","eitherOrUndefined","nk","either","t","unit","head","tail","j","computeResult","isNonEmptyArray","sortByIndex","cqueue","suspend","state","forEach","f","discard","propertySignatures","indexSignatures","isNotNullable","expectedKeys","ps","name","parameter","concat","ownKeys","key","createUniqueSymbol","expected","isRecord","onExcessPropertyError","onExcessPropertyPreserve","typeLiteral","hasKey","Object","prototype","hasOwnProperty","call","indexSignature","keys","getKeysForIndexSignature","keu","vpr","veu","tv","assign","searchTree","getSearchTree","types","Map","candidates","buckets","String","createTypeLiteral","createPropertySignature","otherwise","candidate","pr","member","finalResult","union","neverKeyword","memoizeThunk","mergeAnnotations","annotations","getLiterals","propertySignature","isLiteral","members","tags","hash","isRefinement","effect","actual","runSync","forbidden","message","sort","getFinalPropertySignatureTransformation","pst","propertySignatureTransformations","propertySignatureTransformation","o","none"],"sources":["../../src/Parser.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"Parser.js","names":["Effect","Either","globalValue","Option","Predicate","ReadonlyArray","AST","_parseResult","_util","TreeFormatter","mergeParseOptions","a","b","undefined","out","errors","onExcessProperty","getEither","ast","isDecoding","options","parser","goMemo","u","overrideOptions","getSync","input","getOrThrowWith","e","Error","formatIssue","getOption","getRight","getEffect","isEffectAllowed","decodeUnknownSync","schema","decodeUnknownOption","decodeUnknownEither","decodeUnknownPromise","decodeUnknown","runPromise","encodeUnknownSync","encodeUnknownOption","encodeUnknownEither","encodeUnknownPromise","encodeUnknown","decodeSync","decodeOption","decodeEither","decodePromise","decode","validateSync","typeAST","validateOption","validateEither","validatePromise","validate","is","isRight","isExact","asserts","result","isLeft","left","encodeSync","encodeOption","encodeEither","encodePromise","encode","decodeMemoMap","Symbol","for","WeakMap","encodeMemoMap","memoMap","memo","get","go","set","getConcurrency","getOrUndefined","getConcurrencyAnnotation","getBatching","getBatchingAnnotation","_tag","from","i","handleForbidden","flatMap","mapError","Refinement","match","filter","defaultParseOption","onNone","right","onSome","to","dropRightRefinement","transform","getFinalTransformation","transformation","i1","Transformation","i2","parse","typeParameters","Declaration","fromRefinement","literal","symbol","isUndefined","isNever","isString","isNumber","isBoolean","isBigInt","isSymbol","isObject","enums","some","_","value","regex","getTemplateLiteralRegex","test","elements","map","type","rest","requiredLen","isOptional","length","expectedAST","Union","make","Literal","concurrency","batching","Array","isArray","Type","allErrors","es","stepKey","len","Index","missing","push","Tuple","Unexpected","output","queue","te","eu","eitherOrUndefined","nk","index","either","t","unit","isNonEmptyReadonlyArray","head","tail","j","computeResult","isNonEmptyArray","sortByIndex","cqueue","suspend","state","forEach","f","discard","propertySignatures","indexSignatures","isNotNullable","expectedKeys","ps","name","parameter","concat","ownKeys","key","UniqueSymbol","expected","isRecord","onExcessPropertyError","onExcessPropertyPreserve","Key","TypeLiteral","hasKey","Object","prototype","hasOwnProperty","call","indexSignature","keys","getKeysForIndexSignature","keu","vpr","veu","tv","assign","searchTree","getSearchTree","types","Map","candidates","buckets","String","literals","PropertySignature","otherwise","candidate","pr","Member","finalResult","neverKeyword","memoizeThunk","annotations","refinement","getLiterals","annotation","getSurrogateSchemaAnnotation","isSome","propertySignature","encodedAST","isLiteral","members","member","tags","hash","isRefinement","effect","actual","runSync","Forbidden","sort","pst","propertySignatureTransformations","o","none"],"sources":["../../src/Parser.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/Pretty.js b/dist/esm/Pretty.js
index b3d179cd6740b604f949c09b5a7a47360a86c76e..b76ad4aa7a22b921ec779c438b8e2cd4d88a52b6 100644
--- a/dist/esm/Pretty.js
+++ b/dist/esm/Pretty.js
@@ -4,20 +4,22 @@
 import * as Option from "effect/Option";
 import * as ReadonlyArray from "effect/ReadonlyArray";
 import * as AST from "./AST.js";
-import * as Internal from "./internal/ast.js";
-import * as hooks from "./internal/hooks.js";
-import * as InternalSchema from "./internal/schema.js";
+import * as _hooks from "./internal/hooks.js";
+import * as _schema from "./internal/schema.js";
+import * as _util from "./internal/util.js";
 import * as Parser from "./Parser.js";
 /**
  * @category hooks
  * @since 1.0.0
  */
-export const PrettyHookId = hooks.PrettyHookId;
+export const PrettyHookId = _hooks.PrettyHookId;
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const pretty = handler => self => InternalSchema.make(AST.setAnnotation(self.ast, PrettyHookId, handler));
+export const pretty = handler => self => self.annotations({
+  [PrettyHookId]: handler
+});
 /**
  * @category prettify
  * @since 1.0.0
@@ -30,7 +32,7 @@ const getMatcher = defaultPretty => ast => Option.match(getHook(ast), {
 });
 const toString = /*#__PURE__*/getMatcher(a => String(a));
 const stringify = /*#__PURE__*/getMatcher(a => JSON.stringify(a));
-const formatUnknown = /*#__PURE__*/getMatcher(AST.formatUnknown);
+const formatUnknown = /*#__PURE__*/getMatcher(_util.formatUnknown);
 /**
  * @since 1.0.0
  */
@@ -40,7 +42,7 @@ export const match = {
     if (Option.isSome(hook)) {
       return hook.value(...ast.typeParameters.map(go));
     }
-    throw new Error(`cannot build a Pretty for a declaration without annotations (${AST.format(ast)})`);
+    throw new Error(`cannot build a Pretty for a declaration without annotations (${ast})`);
   },
   "VoidKeyword": /*#__PURE__*/getMatcher(() => "void(0)"),
   "NeverKeyword": /*#__PURE__*/getMatcher(() => {
@@ -59,13 +61,13 @@ export const match = {
   "BooleanKeyword": toString,
   "BigIntKeyword": /*#__PURE__*/getMatcher(a => `${String(a)}n`),
   "Enums": stringify,
-  "Tuple": (ast, go) => {
+  "TupleType": (ast, go) => {
     const hook = getHook(ast);
     if (Option.isSome(hook)) {
       return hook.value();
     }
     const elements = ast.elements.map(e => go(e.type));
-    const rest = Option.map(ast.rest, ReadonlyArray.map(go));
+    const rest = ast.rest.map(go);
     return input => {
       const output = [];
       let i = 0;
@@ -84,8 +86,8 @@ export const match = {
       // ---------------------------------------------
       // handle rest element
       // ---------------------------------------------
-      if (Option.isSome(rest)) {
-        const [head, ...tail] = rest.value;
+      if (ReadonlyArray.isNonEmptyReadonlyArray(rest)) {
+        const [head, ...tail] = rest;
         for (; i < input.length - tail.length; i++) {
           output.push(head(input[i]));
         }
@@ -130,7 +132,7 @@ export const match = {
       if (indexSignatureTypes.length > 0) {
         for (let i = 0; i < indexSignatureTypes.length; i++) {
           const type = indexSignatureTypes[i];
-          const keys = Internal.getKeysForIndexSignature(input, ast.indexSignatures[i].parameter);
+          const keys = _util.getKeysForIndexSignature(input, ast.indexSignatures[i].parameter);
           for (const key of keys) {
             if (Object.prototype.hasOwnProperty.call(expectedKeys, key)) {
               continue;
@@ -147,7 +149,7 @@ export const match = {
     if (Option.isSome(hook)) {
       return hook.value();
     }
-    const types = ast.types.map(ast => [Parser.is(InternalSchema.make(ast)), go(ast)]);
+    const types = ast.types.map(ast => [Parser.is(_schema.make(ast)), go(ast)]);
     return a => {
       const index = types.findIndex(([is]) => is(a));
       return types[index][1](a);
@@ -156,7 +158,7 @@ export const match = {
   "Suspend": (ast, go) => {
     return Option.match(getHook(ast), {
       onNone: () => {
-        const get = Internal.memoizeThunk(() => go(ast.f()));
+        const get = _util.memoizeThunk(() => go(ast.f()));
         return a => get()(a);
       },
       onSome: handler => handler()
@@ -168,7 +170,7 @@ export const match = {
       onSome: handler => handler()
     });
   },
-  "Transform": (ast, go) => {
+  "Transformation": (ast, go) => {
     return Option.match(getHook(ast), {
       onNone: () => go(ast.to),
       onSome: handler => handler()
diff --git a/dist/esm/Pretty.js.map b/dist/esm/Pretty.js.map
index ea51fe6f1ad94b66ed126e6d5f7c8ec0d941c1b1..cb8d8fef8982e21da0211a30273cc50b0ba23837 100644
--- a/dist/esm/Pretty.js.map
+++ b/dist/esm/Pretty.js.map
@@ -1 +1 @@
-{"version":3,"file":"Pretty.js","names":["Option","ReadonlyArray","AST","Internal","hooks","InternalSchema","Parser","PrettyHookId","pretty","handler","self","make","setAnnotation","ast","schema","compile","getHook","getAnnotation","getMatcher","defaultPretty","match","onNone","onSome","toString","a","String","stringify","JSON","formatUnknown","Declaration","go","hook","isSome","value","typeParameters","map","Error","format","literal","Tuple","elements","e","type","rest","input","output","i","length","isOptional","push","head","tail","j","join","TypeLiteral","propertySignaturesTypes","propertySignatures","f","indexSignatureTypes","indexSignatures","is","expectedKeys","name","ps","Object","prototype","hasOwnProperty","call","getPrettyPropertyKey","keys","getKeysForIndexSignature","parameter","key","isNonEmptyReadonlyArray","Union","types","index","findIndex","Suspend","get","memoizeThunk","Refinement","from","Transform","to","getCompiler"],"sources":["../../src/Pretty.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"Pretty.js","names":["Option","ReadonlyArray","AST","_hooks","_schema","_util","Parser","PrettyHookId","pretty","handler","self","annotations","make","schema","compile","ast","getHook","getAnnotation","getMatcher","defaultPretty","match","onNone","onSome","toString","a","String","stringify","JSON","formatUnknown","Declaration","go","hook","isSome","value","typeParameters","map","Error","literal","TupleType","elements","e","type","rest","input","output","i","length","isOptional","push","isNonEmptyReadonlyArray","head","tail","j","join","TypeLiteral","propertySignaturesTypes","propertySignatures","f","indexSignatureTypes","indexSignatures","is","expectedKeys","name","ps","Object","prototype","hasOwnProperty","call","getPrettyPropertyKey","keys","getKeysForIndexSignature","parameter","key","Union","types","index","findIndex","Suspend","get","memoizeThunk","Refinement","from","Transformation","to","getCompiler"],"sources":["../../src/Pretty.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/Schema.js b/dist/esm/Schema.js
index dafbb202ee675c4a0ac60b41128e82e4f3670c9a..b36129cb39044534253616085ad529ad24bff8a8 100644
--- a/dist/esm/Schema.js
+++ b/dist/esm/Schema.js
@@ -1,20 +1,20 @@
 /**
  * @since 1.0.0
  */
-import * as BigDecimal from "effect/BigDecimal";
-import * as BigInt_ from "effect/BigInt";
+import * as _bigDecimal from "effect/BigDecimal";
+import * as _bigInt from "effect/BigInt";
 import * as Brand from "effect/Brand";
 import * as Cause from "effect/Cause";
 import * as Chunk from "effect/Chunk";
 import * as Data from "effect/Data";
-import * as Duration from "effect/Duration";
+import * as _duration from "effect/Duration";
 import * as Effect from "effect/Effect";
 import * as Either from "effect/Either";
 import * as Encoding from "effect/Encoding";
 import * as Equal from "effect/Equal";
 import * as Equivalence from "effect/Equivalence";
 import * as Exit from "effect/Exit";
-import * as FiberId from "effect/FiberId";
+import * as _fiberId from "effect/FiberId";
 import { dual, identity } from "effect/Function";
 import * as HashMap from "effect/HashMap";
 import * as HashSet from "effect/HashSet";
@@ -25,26 +25,30 @@ import { pipeArguments } from "effect/Pipeable";
 import * as Predicate from "effect/Predicate";
 import * as ReadonlyArray from "effect/ReadonlyArray";
 import * as Request from "effect/Request";
-import * as Secret from "effect/Secret";
+import * as _secret from "effect/Secret";
 import * as SortedSet from "effect/SortedSet";
 import * as S from "effect/String";
 import * as arbitrary from "./Arbitrary.js";
-import * as ArrayFormatter from "./ArrayFormatter.js";
 import * as AST from "./AST.js";
 import * as _equivalence from "./Equivalence.js";
-import * as Internal from "./internal/ast.js";
-import * as filters from "./internal/filters.js";
-import * as hooks from "./internal/hooks.js";
-import * as InternalSchema from "./internal/schema.js";
-import * as InternalSerializable from "./internal/serializable.js";
+import * as _filters from "./internal/filters.js";
+import * as _hooks from "./internal/hooks.js";
+import * as _schema from "./internal/schema.js";
+import * as _serializable from "./internal/serializable.js";
+import * as _util from "./internal/util.js";
 import * as Parser from "./Parser.js";
 import * as ParseResult from "./ParseResult.js";
 import * as Pretty from "./Pretty.js";
+import * as TreeFormatter from "./TreeFormatter.js";
 /**
  * @since 1.0.0
  * @category symbol
  */
-export const TypeId = InternalSchema.TypeId;
+export const TypeId = _schema.TypeId;
+/**
+ * @since 1.0.0
+ */
+export const asSchema = schema => schema;
 /**
  * @category hashing
  * @since 1.0.0
@@ -54,15 +58,15 @@ export const hash = schema => AST.hash(schema.ast);
  * @category formatting
  * @since 1.0.0
  */
-export const format = schema => AST.format(schema.ast);
+export const format = schema => String(schema.ast);
 /**
  * @since 1.0.0
  */
-export const from = schema => make(AST.from(schema.ast));
+export const encodedSchema = schema => make(AST.encodedAST(schema.ast));
 /**
  * @since 1.0.0
  */
-export const to = schema => make(AST.to(schema.ast));
+export const typeSchema = schema => make(AST.typeAST(schema.ast));
 /* c8 ignore start */
 export {
 /**
@@ -234,18 +238,28 @@ export const validatePromise = (schema, options) => {
  * @category guards
  * @since 1.0.0
  */
-export const isSchema = u => Predicate.isObject(u) && TypeId in u && "ast" in u;
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const make = InternalSchema.make;
-const makeLiteral = value => make(AST.createLiteral(value));
+export const isSchema = u => Predicate.hasProperty(u, TypeId) && Predicate.isObject(u[TypeId]);
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const literal = (...literals) => union(...literals.map(literal => makeLiteral(literal)));
+export const make = _schema.make;
+class $literal extends _schema.Schema {
+  literals;
+  static ast = literals => {
+    return AST.isMembers(literals) ? AST.Union.make(AST.mapMembers(literals, literal => new AST.Literal(literal))) : new AST.Literal(literals[0]);
+  };
+  constructor(literals, ast = $literal.ast(literals)) {
+    super(ast);
+    this.literals = literals;
+  }
+  annotations(annotations) {
+    return new $literal(this.literals, _schema.annotations(this.ast, annotations));
+  }
+}
+export function literal(...literals) {
+  return ReadonlyArray.isNonEmptyReadonlyArray(literals) ? new $literal(literals) : never;
+}
 /**
  * Creates a new `Schema` from a literal schema.
  *
@@ -267,12 +281,12 @@ export const pickLiteral = (...literals) => _schema => literal(...literals);
  * @category constructors
  * @since 1.0.0
  */
-export const uniqueSymbol = (symbol, annotations) => make(AST.createUniqueSymbol(symbol, annotations));
+export const uniqueSymbolFromSelf = symbol => make(new AST.UniqueSymbol(symbol));
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const enums = enums => make(AST.createEnums(Object.keys(enums).filter(key => typeof enums[enums[key]] !== "number").map(key => [key, enums[key]])));
+export const enums = enums => make(new AST.Enums(Object.keys(enums).filter(key => typeof enums[enums[key]] !== "number").map(key => [key, enums[key]])));
 /**
  * @category constructors
  * @since 1.0.0
@@ -282,22 +296,16 @@ export const templateLiteral = (...[head, ...tail]) => {
   for (const span of tail) {
     types = ReadonlyArray.flatMap(types, a => getTemplateLiterals(span.ast).map(b => combineTemplateLiterals(a, b)));
   }
-  return make(AST.createUnion(types));
+  return make(AST.Union.make(types));
 };
 const combineTemplateLiterals = (a, b) => {
   if (AST.isLiteral(a)) {
-    return AST.isLiteral(b) ? AST.createLiteral(String(a.literal) + String(b.literal)) : AST.createTemplateLiteral(String(a.literal) + b.head, b.spans);
+    return AST.isLiteral(b) ? new AST.Literal(String(a.literal) + String(b.literal)) : AST.TemplateLiteral.make(String(a.literal) + b.head, b.spans);
   }
   if (AST.isLiteral(b)) {
-    return AST.createTemplateLiteral(a.head, ReadonlyArray.modifyNonEmptyLast(a.spans, span => ({
-      ...span,
-      literal: span.literal + String(b.literal)
-    })));
+    return AST.TemplateLiteral.make(a.head, ReadonlyArray.modifyNonEmptyLast(a.spans, span => new AST.TemplateLiteralSpan(span.type, span.literal + String(b.literal))));
   }
-  return AST.createTemplateLiteral(a.head, ReadonlyArray.appendAll(ReadonlyArray.modifyNonEmptyLast(a.spans, span => ({
-    ...span,
-    literal: span.literal + String(b.head)
-  })), b.spans));
+  return AST.TemplateLiteral.make(a.head, ReadonlyArray.appendAll(ReadonlyArray.modifyNonEmptyLast(a.spans, span => new AST.TemplateLiteralSpan(span.type, span.literal + String(b.head))), b.spans));
 };
 const getTemplateLiterals = ast => {
   switch (ast._tag) {
@@ -305,21 +313,18 @@ const getTemplateLiterals = ast => {
       return [ast];
     case "NumberKeyword":
     case "StringKeyword":
-      return [AST.createTemplateLiteral("", [{
-        type: ast,
-        literal: ""
-      }])];
+      return [AST.TemplateLiteral.make("", [new AST.TemplateLiteralSpan(ast, "")])];
     case "Union":
       return ReadonlyArray.flatMap(ast.types, getTemplateLiterals);
     default:
-      throw new Error(`templateLiteral: unsupported template literal span (${AST.format(ast)})`);
+      throw new Error(`templateLiteral: unsupported template literal span (${ast})`);
   }
 };
-const declareConstructor = (typeParameters, decodeUnknown, encodeUnknown, annotations) => make(AST.createDeclaration(typeParameters.map(tp => tp.ast), (...typeParameters) => decodeUnknown(...typeParameters.map(ast => make(ast))), (...typeParameters) => encodeUnknown(...typeParameters.map(ast => make(ast))), toAnnotations(annotations)));
+const declareConstructor = (typeParameters, decodeUnknown, encodeUnknown, annotations) => make(new AST.Declaration(typeParameters.map(tp => tp.ast), (...typeParameters) => decodeUnknown(...typeParameters.map(make)), (...typeParameters) => encodeUnknown(...typeParameters.map(make)), _schema.toASTAnnotations(annotations)));
 const declarePrimitive = (is, annotations) => {
-  const decodeUnknown = () => (input, _, ast) => is(input) ? ParseResult.succeed(input) : ParseResult.fail(ParseResult.type(ast, input));
+  const decodeUnknown = () => (input, _, ast) => is(input) ? ParseResult.succeed(input) : ParseResult.fail(new ParseResult.Type(ast, input));
   const encodeUnknown = decodeUnknown;
-  return make(AST.createDeclaration([], decodeUnknown, encodeUnknown, toAnnotations(annotations)));
+  return make(new AST.Declaration([], decodeUnknown, encodeUnknown, _schema.toASTAnnotations(annotations)));
 };
 /**
  * The constraint `R extends Schema.Context<P[number]>` enforces dependencies solely from `typeParameters`.
@@ -349,20 +354,18 @@ export const BrandTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/Brand"
  * @category constructors
  * @since 1.0.0
  */
-export const fromBrand = (constructor, options) => self => {
-  return make(AST.createRefinement(self.ast, (a, _, ast) => {
-    const either = constructor.either(a);
-    return Either.isLeft(either) ? Option.some(ParseResult.type(ast, a, either.left.map(v => v.message).join(", "))) : Option.none();
-  }, toAnnotations({
-    typeId: {
-      id: BrandTypeId,
-      annotation: {
-        constructor
-      }
-    },
-    ...options
-  })));
-};
+export const fromBrand = (constructor, annotations) => self => make(new AST.Refinement(self.ast, (a, _, ast) => {
+  const either = constructor.either(a);
+  return Either.isLeft(either) ? Option.some(new ParseResult.Type(ast, a, either.left.map(v => v.message).join(", "))) : Option.none();
+}, _schema.toASTAnnotations({
+  typeId: {
+    id: BrandTypeId,
+    annotation: {
+      constructor
+    }
+  },
+  ...annotations
+})));
 /**
  * @category type id
  * @since 1.0.0
@@ -372,7 +375,7 @@ export const InstanceOfTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/I
  * @category constructors
  * @since 1.0.0
  */
-export const instanceOf = (constructor, options) => declare(u => u instanceof constructor, {
+export const instanceOf = (constructor, annotations) => declare(u => u instanceof constructor, {
   title: constructor.name,
   description: `an instance of ${constructor.name}`,
   pretty: () => String,
@@ -382,27 +385,27 @@ export const instanceOf = (constructor, options) => declare(u => u instanceof co
       constructor
     }
   },
-  ...options
+  ...annotations
 });
-const _undefined = /*#__PURE__*/make(AST.undefinedKeyword);
-const _void = /*#__PURE__*/make(AST.voidKeyword);
-const _null = /*#__PURE__*/make(AST._null);
+const $undefined = /*#__PURE__*/make(AST.undefinedKeyword);
+const $void = /*#__PURE__*/make(AST.voidKeyword);
+const $null = /*#__PURE__*/make(AST._null);
 export {
 /**
  * @category primitives
  * @since 1.0.0
  */
-_null as null,
+$null as null,
 /**
  * @category primitives
  * @since 1.0.0
  */
-_undefined as undefined,
+$undefined as undefined,
 /**
  * @category primitives
  * @since 1.0.0
  */
-_void as void };
+$void as void };
 /**
  * @category primitives
  * @since 1.0.0
@@ -448,229 +451,407 @@ export const symbolFromSelf = /*#__PURE__*/make(AST.symbolKeyword);
  * @since 1.0.0
  */
 export const object = /*#__PURE__*/make(AST.objectKeyword);
+class $union extends _schema.Schema {
+  members;
+  static ast = members => {
+    return AST.Union.make(members.map(m => m.ast));
+  };
+  constructor(members, ast = $union.ast(members)) {
+    super(ast);
+    this.members = members;
+  }
+  annotations(annotations) {
+    return new $union(this.members, _schema.annotations(this.ast, annotations));
+  }
+}
+export function union(...members) {
+  return AST.isMembers(members) ? new $union(members) : ReadonlyArray.isNonEmptyReadonlyArray(members) ? members[0] : never;
+}
 /**
  * @category combinators
  * @since 1.0.0
  */
-export const union = (...members) => make(AST.createUnion(members.map(m => m.ast)));
+export const nullable = self => union(self, $null);
 /**
  * @category combinators
  * @since 1.0.0
  */
-export const nullable = self => union(_null, self);
+export const orUndefined = self => union(self, $undefined);
 /**
  * @category combinators
  * @since 1.0.0
  */
-export const orUndefined = self => make(AST.orUndefined(self.ast));
+export const nullish = self => union(self, $null, $undefined);
 /**
  * @category combinators
  * @since 1.0.0
  */
-export const nullish = self => union(_null, _undefined, self);
+export const keyof = self => make(AST.keyof(self.ast)).annotations({
+  description: `keyof<${format(self)}>`
+});
 /**
- * @category combinators
  * @since 1.0.0
  */
-export const keyof = schema => make(AST.keyof(schema.ast));
+export const optionalElement = self => new $OptionalElement(self);
+class $OptionalElement {
+  optionalElement;
+  [TypeId];
+  constructor(optionalElement) {
+    this.optionalElement = optionalElement;
+  }
+}
+class $tupleType extends _schema.Schema {
+  elements;
+  rest;
+  static ast = (elements, rest) => {
+    return new AST.TupleType(elements.map(schema => isSchema(schema) ? new AST.Element(schema.ast, false) : new AST.Element(schema.optionalElement.ast, true)), rest.map(e => e.ast), true);
+  };
+  constructor(elements, rest, ast = $tupleType.ast(elements, rest)) {
+    super(ast);
+    this.elements = elements;
+    this.rest = rest;
+  }
+  annotations(annotations) {
+    return new $tupleType(this.elements, this.rest, _schema.annotations(this.ast, annotations));
+  }
+}
+class $tuple extends $tupleType {
+  elements;
+  constructor(elements, ast) {
+    super(elements, [], ast);
+    this.elements = elements;
+  }
+  annotations(annotations) {
+    return new $tuple(this.elements, _schema.annotations(this.ast, annotations));
+  }
+}
+export function tuple(...args) {
+  return Array.isArray(args[0]) ? new $tupleType(args[0], args.slice(1)) : new $tuple(args);
+}
+class $array extends $tupleType {
+  value;
+  constructor(value, ast) {
+    super([], [value], ast);
+    this.value = value;
+  }
+  annotations(annotations) {
+    return new $array(this.value, _schema.annotations(this.ast, annotations));
+  }
+}
+export function array(value, ...elements) {
+  return elements.length > 0 ? new $tupleType([], [value, ...elements]) : new $array(value);
+}
+class $nonEmptyArray extends $tupleType {
+  value;
+  constructor(value, ast) {
+    super([value], [value], ast);
+    this.value = value;
+  }
+  annotations(annotations) {
+    return new $nonEmptyArray(this.value, _schema.annotations(this.ast, annotations));
+  }
+}
 /**
  * @category combinators
  * @since 1.0.0
  */
-export const tuple = (...elements) => make(AST.createTuple(elements.map(schema => AST.createElement(schema.ast, false)), Option.none(), true));
+export const nonEmptyArray = value => new $nonEmptyArray(value);
 /**
- * @category combinators
+ * @category PropertySignature
  * @since 1.0.0
  */
-export const rest = rest => self => {
-  if (AST.isTuple(self.ast)) {
-    return make(AST.appendRestElement(self.ast, rest.ast));
+export class PropertySignatureDeclaration {
+  ast;
+  isOptional;
+  annotations;
+  __defaultConstructor;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "PropertySignatureDeclaration";
+  constructor(ast, isOptional, annotations, __defaultConstructor) {
+    this.ast = ast;
+    this.isOptional = isOptional;
+    this.annotations = annotations;
+    this.__defaultConstructor = __defaultConstructor;
   }
-  throw new Error("`rest` is not supported on this schema");
-};
+}
+/**
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export class PropertySignatureTransformation {
+  fromKey;
+  from;
+  to;
+  decode;
+  encode;
+  /**
+   * @since 1.0.0
+   */
+  _tag = "PropertySignatureTransformation";
+  constructor(fromKey, from, to, decode, encode) {
+    this.fromKey = fromKey;
+    this.from = from;
+    this.to = to;
+    this.decode = decode;
+    this.encode = encode;
+  }
+}
 /**
- * @category combinators
  * @since 1.0.0
+ * @category symbol
  */
-export const element = element => self => {
-  if (AST.isTuple(self.ast)) {
-    return make(AST.appendElement(self.ast, AST.createElement(element.ast, false)));
+export const PropertySignatureTypeId = _schema.PropertySignatureTypeId;
+const propertySignatureAnnotations = (ast, annotations) => {
+  switch (ast._tag) {
+    case "PropertySignatureDeclaration":
+      return new PropertySignatureDeclaration(ast.ast, ast.isOptional, {
+        ...ast.annotations,
+        ...annotations
+      });
+    case "PropertySignatureTransformation":
+      return new PropertySignatureTransformation(ast.fromKey, ast.from, new PropertySignatureDeclaration(ast.to.ast, ast.to.isOptional, {
+        ...ast.to.annotations,
+        ...annotations
+      }), ast.decode, ast.encode);
   }
-  throw new Error("`element` is not supported on this schema");
 };
+class $PropertySignature {
+  ast;
+  [TypeId];
+  [PropertySignatureTypeId] = null;
+  _Key;
+  _EncodedToken;
+  _TypeToken;
+  _HasDefault;
+  constructor(ast) {
+    this.ast = ast;
+  }
+  pipe() {
+    return pipeArguments(this, arguments);
+  }
+  annotations(annotations) {
+    return new $PropertySignature(propertySignatureAnnotations(this.ast, _schema.toASTAnnotations(annotations)));
+  }
+}
 /**
- * @category combinators
+ * @category PropertySignature
  * @since 1.0.0
  */
-export const optionalElement = element => self => {
-  if (AST.isTuple(self.ast)) {
-    return make(AST.appendElement(self.ast, AST.createElement(element.ast, true)));
-  }
-  throw new Error("`optionalElement` is not supported on this schema");
-};
+export const propertySignature = (schema, options) => new $PropertySignature(new PropertySignatureDeclaration(schema.ast, options?.isOptional ?? false, _schema.toASTAnnotations(options?.annotations), options?.default));
 /**
- * @category combinators
+ * @category PropertySignature
  * @since 1.0.0
  */
-export const array = item => make(AST.createTuple([], Option.some([item.ast]), true));
+export const propertySignatureTransformation = (from, to, decode, encode) => new $PropertySignature(new PropertySignatureTransformation(from.key, new PropertySignatureDeclaration(from.schema.ast, from.isOptional, _schema.toASTAnnotations(from.annotations)), new PropertySignatureDeclaration(to.schema.ast, to.isOptional), decode, encode));
 /**
- * @category combinators
+ * @category PropertySignature
  * @since 1.0.0
  */
-export const nonEmptyArray = item => tuple(item).pipe(rest(item));
-/** @internal */
-export class PropertySignatureImpl {
-  propertySignatureAST;
-  [TypeId] = InternalSchema.variance;
-  FromIsOptional;
-  ToIsOptional;
-  constructor(propertySignatureAST) {
-    this.propertySignatureAST = propertySignatureAST;
-  }
-  pipe() {
-    return pipeArguments(this, arguments);
+export const fromKey = /*#__PURE__*/dual(2, (self, key) => {
+  const ast = self.ast;
+  switch (ast._tag) {
+    case "PropertySignatureDeclaration":
+      {
+        return new $PropertySignature(new PropertySignatureTransformation(key, ast, new PropertySignatureDeclaration(AST.typeAST(ast.ast), ast.isOptional), identity, identity));
+      }
+    case "PropertySignatureTransformation":
+      return new $PropertySignature(new PropertySignatureTransformation(key, ast.from, ast.to, ast.decode, ast.encode));
   }
-}
+});
 /**
+ * - `decode`: `none` as argument means: the value is missing in the input
+ * - `encode`: `none` as return value means: the value will be missing in the output
+ *
+ * @category PropertySignature
  * @since 1.0.0
  */
-export const propertySignatureAnnotations = annotations => self => {
-  if (isSchema(self)) {
-    return new PropertySignatureImpl({
-      _tag: "Declaration",
-      from: self.ast,
-      isOptional: false,
-      annotations: toAnnotations(annotations)
-    });
-  }
-  return new PropertySignatureImpl({
-    ...self.propertySignatureAST,
-    annotations: toAnnotations(annotations)
-  });
-};
+export const optionalToRequired = (from, to, decode, encode) => new $PropertySignature(new PropertySignatureTransformation(undefined, new PropertySignatureDeclaration(from.ast, true), new PropertySignatureDeclaration(to.ast, false), o => Option.some(decode(o)), Option.flatMap(encode)));
 /**
- * @category optional
+ * - `decode`:
+ *   - `none` as argument means: the value is missing in the input
+ *   - `none` as return value means: the value will be missing in the output
+ * - `encode`:
+ *   - `none` as argument means: the value is missing in the input
+ *   - `none` as return value means: the value will be missing in the output
+ *
+ * @category PropertySignature
  * @since 1.0.0
  */
-export const optionalToRequired = (from, to, decode,
-// `none` here means: the value is missing in the input
-encode,
-// `none` here means: the value will be missing in the output
-annotations) => new PropertySignatureImpl({
-  _tag: "OptionalToRequired",
-  from: from.ast,
-  to: to.ast,
-  decode: o => Option.some(decode(o)),
-  encode: Option.flatMap(encode),
-  annotations: toAnnotations(annotations)
-});
+export const optionalToOptional = (from, to, decode, encode) => new $PropertySignature(new PropertySignatureTransformation(undefined, new PropertySignatureDeclaration(from.ast, true), new PropertySignatureDeclaration(to.ast, true), decode, encode));
 /**
+ * @category PropertySignature
  * @since 1.0.0
  */
 export const optional = (schema, options) => {
   const isExact = options?.exact;
-  const value = options?.default;
+  const defaultValue = options?.default;
   const isNullable = options?.nullable;
   const asOption = options?.as == "Option";
-  const annotations = options?.annotations;
   if (isExact) {
-    if (value) {
+    if (defaultValue) {
       if (isNullable) {
-        return optionalToRequired(nullable(schema), to(schema), Option.match({
-          onNone: value,
-          onSome: a => a === null ? value() : a
-        }), Option.some, annotations);
+        return optionalToRequired(nullable(schema), typeSchema(schema), Option.match({
+          onNone: defaultValue,
+          onSome: a => a === null ? defaultValue() : a
+        }), Option.some);
       } else {
-        return optionalToRequired(schema, to(schema), Option.match({
-          onNone: value,
+        return optionalToRequired(schema, typeSchema(schema), Option.match({
+          onNone: defaultValue,
           onSome: identity
-        }), Option.some, annotations);
+        }), Option.some);
+      }
+    } else if (asOption) {
+      if (isNullable) {
+        return optionalToRequired(nullable(schema), optionFromSelf(typeSchema(schema)), Option.filter(Predicate.isNotNull), identity);
+      } else {
+        return optionalToRequired(schema, optionFromSelf(typeSchema(schema)), identity, identity);
       }
     } else {
-      if (asOption) {
-        if (isNullable) {
-          return optionalToRequired(nullable(schema), optionFromSelf(to(schema)), Option.filter(Predicate.isNotNull), identity, annotations);
-        } else {
-          return optionalToRequired(schema, optionFromSelf(to(schema)), identity, identity, annotations);
-        }
+      if (isNullable) {
+        return optionalToOptional(nullable(schema), typeSchema(schema), Option.filter(Predicate.isNotNull), identity);
+      } else {
+        return propertySignature(schema, {
+          isOptional: true
+        });
       }
-      return new PropertySignatureImpl({
-        _tag: "Declaration",
-        from: schema.ast,
-        isOptional: true,
-        annotations: toAnnotations(annotations)
-      });
     }
   } else {
-    if (value) {
+    if (defaultValue) {
+      if (isNullable) {
+        return optionalToRequired(nullish(schema), typeSchema(schema), Option.match({
+          onNone: defaultValue,
+          onSome: a => a == null ? defaultValue() : a
+        }), Option.some);
+      } else {
+        return optionalToRequired(orUndefined(schema), typeSchema(schema), Option.match({
+          onNone: defaultValue,
+          onSome: a => a === undefined ? defaultValue() : a
+        }), Option.some);
+      }
+    } else if (asOption) {
       if (isNullable) {
-        return optionalToRequired(nullish(schema), to(schema), Option.match({
-          onNone: value,
-          onSome: a => a == null ? value() : a
-        }), Option.some, annotations);
+        return optionalToRequired(nullish(schema), optionFromSelf(typeSchema(schema)), Option.filter(a => a != null), identity);
       } else {
-        return optionalToRequired(orUndefined(schema), to(schema), Option.match({
-          onNone: value,
-          onSome: a => a === undefined ? value() : a
-        }), Option.some, annotations);
+        return optionalToRequired(orUndefined(schema), optionFromSelf(typeSchema(schema)), Option.filter(Predicate.isNotUndefined), identity);
       }
     } else {
-      if (asOption) {
-        if (isNullable) {
-          return optionalToRequired(nullish(schema), optionFromSelf(to(schema)), Option.filter(a => a != null), identity, annotations);
+      if (isNullable) {
+        return optionalToOptional(nullish(schema), orUndefined(typeSchema(schema)), Option.filter(Predicate.isNotNull), identity);
+      } else {
+        return propertySignature(orUndefined(schema), {
+          isOptional: true
+        });
+      }
+    }
+  }
+};
+const isPropertySignature = u => Predicate.hasProperty(u, PropertySignatureTypeId);
+class $typeLiteral extends _schema.Schema {
+  fields;
+  records;
+  static ast = (fields, records) => {
+    const ownKeys = _util.ownKeys(fields);
+    const pss = [];
+    if (ownKeys.length > 0) {
+      const from = [];
+      const to = [];
+      const transformations = [];
+      for (let i = 0; i < ownKeys.length; i++) {
+        const key = ownKeys[i];
+        const field = fields[key];
+        if (isPropertySignature(field)) {
+          const ast = field.ast;
+          switch (ast._tag) {
+            case "PropertySignatureDeclaration":
+              {
+                const type = ast.ast;
+                const isOptional = ast.isOptional;
+                const toAnnotations = ast.annotations;
+                from.push(new AST.PropertySignature(key, type, isOptional, true));
+                to.push(new AST.PropertySignature(key, AST.typeAST(type), isOptional, true, toAnnotations));
+                pss.push(new AST.PropertySignature(key, type, isOptional, true, toAnnotations));
+                break;
+              }
+            case "PropertySignatureTransformation":
+              {
+                const fromKey = ast.fromKey ?? key;
+                from.push(new AST.PropertySignature(fromKey, ast.from.ast, ast.from.isOptional, true, ast.from.annotations));
+                to.push(new AST.PropertySignature(key, ast.to.ast, ast.to.isOptional, true, ast.to.annotations));
+                transformations.push(new AST.PropertySignatureTransformation(fromKey, key, ast.decode, ast.encode));
+                break;
+              }
+          }
         } else {
-          return optionalToRequired(orUndefined(schema), optionFromSelf(to(schema)), Option.filter(Predicate.isNotUndefined), identity, annotations);
+          from.push(new AST.PropertySignature(key, field.ast, false, true));
+          to.push(new AST.PropertySignature(key, AST.typeAST(field.ast), false, true));
+          pss.push(new AST.PropertySignature(key, field.ast, false, true));
         }
       }
-      return new PropertySignatureImpl({
-        _tag: "Declaration",
-        from: orUndefined(schema).ast,
-        isOptional: true,
-        annotations: toAnnotations(annotations)
-      });
+      if (ReadonlyArray.isNonEmptyReadonlyArray(transformations)) {
+        const issFrom = [];
+        const issTo = [];
+        for (const r of records) {
+          const {
+            indexSignatures,
+            propertySignatures
+          } = AST.record(r.key.ast, r.value.ast);
+          propertySignatures.forEach(ps => {
+            from.push(ps);
+            to.push(new AST.PropertySignature(ps.name, AST.typeAST(ps.type), ps.isOptional, ps.isReadonly, ps.annotations));
+          });
+          indexSignatures.forEach(is => {
+            issFrom.push(is);
+            issTo.push(new AST.IndexSignature(is.parameter, AST.typeAST(is.type), is.isReadonly));
+          });
+        }
+        return new AST.Transformation(new AST.TypeLiteral(from, issFrom), new AST.TypeLiteral(to, issTo), new AST.TypeLiteralTransformation(transformations));
+      }
     }
+    const iss = [];
+    for (const r of records) {
+      const {
+        indexSignatures,
+        propertySignatures
+      } = AST.record(r.key.ast, r.value.ast);
+      propertySignatures.forEach(ps => pss.push(ps));
+      indexSignatures.forEach(is => iss.push(is));
+    }
+    return new AST.TypeLiteral(pss, iss);
+  };
+  constructor(fields, records, ast = $typeLiteral.ast(fields, records)) {
+    super(ast);
+    this.fields = fields;
+    this.records = records;
   }
-};
+  annotations(annotations) {
+    return new $typeLiteral(this.fields, this.records, _schema.annotations(this.ast, annotations));
+  }
+}
+export function struct(fields, ...records) {
+  return new $typeLiteral(fields, records);
+}
+class $record extends $typeLiteral {
+  key;
+  value;
+  constructor(key, value, ast) {
+    super({}, [{
+      key,
+      value
+    }], ast);
+    this.key = key;
+    this.value = value;
+  }
+  annotations(annotations) {
+    return new $record(this.key, this.value, _schema.annotations(this.ast, annotations));
+  }
+}
 /**
  * @category combinators
  * @since 1.0.0
  */
-export const struct = fields => {
-  const ownKeys = Internal.ownKeys(fields);
-  const pss = [];
-  const pssFrom = [];
-  const pssTo = [];
-  const psTransformations = [];
-  for (let i = 0; i < ownKeys.length; i++) {
-    const key = ownKeys[i];
-    const field = fields[key];
-    if ("propertySignatureAST" in field) {
-      const psAst = field.propertySignatureAST;
-      const from = psAst.from;
-      const annotations = psAst.annotations;
-      switch (psAst._tag) {
-        case "Declaration":
-          pss.push(AST.createPropertySignature(key, from, psAst.isOptional, true, annotations));
-          pssFrom.push(AST.createPropertySignature(key, from, psAst.isOptional, true));
-          pssTo.push(AST.createPropertySignature(key, AST.to(from), psAst.isOptional, true, annotations));
-          break;
-        case "OptionalToRequired":
-          pssFrom.push(AST.createPropertySignature(key, from, true, true));
-          pssTo.push(AST.createPropertySignature(key, psAst.to, false, true, annotations));
-          psTransformations.push(AST.createPropertySignatureTransform(key, key, AST.createFinalPropertySignatureTransformation(psAst.decode, psAst.encode)));
-          break;
-      }
-    } else {
-      pss.push(AST.createPropertySignature(key, field.ast, false, true));
-      pssFrom.push(AST.createPropertySignature(key, field.ast, false, true));
-      pssTo.push(AST.createPropertySignature(key, AST.to(field.ast), false, true));
-    }
-  }
-  if (ReadonlyArray.isNonEmptyReadonlyArray(psTransformations)) {
-    return make(AST.createTransform(AST.createTypeLiteral(pssFrom, []), AST.createTypeLiteral(pssTo, []), AST.createTypeLiteralTransformation(psTransformations)));
-  }
-  return make(AST.createTypeLiteral(pss, []));
-};
+export const record = (key, value) => new $record(key, value);
 /**
  * @category struct transformations
  * @since 1.0.0
@@ -681,7 +862,7 @@ export const pick = (...keys) => self => {
     if (AST.isTypeLiteralTransformation(ast.transformation)) {
       const propertySignatureTransformations = ast.transformation.propertySignatureTransformations.filter(t => keys.includes(t.to));
       if (ReadonlyArray.isNonEmptyReadonlyArray(propertySignatureTransformations)) {
-        return make(AST.createTransform(AST.pick(ast.from, keys), AST.pick(ast.to, keys), AST.createTypeLiteralTransformation(propertySignatureTransformations)));
+        return make(new AST.Transformation(AST.pick(ast.from, keys), AST.pick(ast.to, keys), new AST.TypeLiteralTransformation(propertySignatureTransformations)));
       } else {
         return make(AST.pick(ast.from, keys));
       }
@@ -700,7 +881,7 @@ export const omit = (...keys) => self => {
     if (AST.isTypeLiteralTransformation(ast.transformation)) {
       const propertySignatureTransformations = ast.transformation.propertySignatureTransformations.filter(t => !keys.includes(t.to));
       if (ReadonlyArray.isNonEmptyReadonlyArray(propertySignatureTransformations)) {
-        return make(AST.createTransform(AST.omit(ast.from, keys), AST.omit(ast.to, keys), AST.createTypeLiteralTransformation(propertySignatureTransformations)));
+        return make(new AST.Transformation(AST.omit(ast.from, keys), AST.omit(ast.to, keys), new AST.TypeLiteralTransformation(propertySignatureTransformations)));
       } else {
         return make(AST.omit(ast.from, keys));
       }
@@ -755,18 +936,30 @@ export const pluck = /*#__PURE__*/dual(args => isSchema(args[0]), (schema, key,
     const ps = AST.getPropertyKeyIndexedAccess(schema.ast, key);
     return make(ps.isOptional ? AST.orUndefined(ps.type) : ps.type);
   } else {
-    const ps = AST.getPropertyKeyIndexedAccess(to(schema).ast, key);
+    const ps = AST.getPropertyKeyIndexedAccess(typeSchema(schema).ast, key);
     const value = make(ps.isOptional ? AST.orUndefined(ps.type) : ps.type);
     return transform(schema, value, a => a[key], ak => ps.isOptional && ak === undefined ? {} : {
       [key]: ak
     });
   }
 });
-const appendBrandAnnotation = (ast, brand, options) => {
-  const annotations = toAnnotations(options);
-  const brands = ast.annotations[AST.BrandAnnotationId];
-  annotations[AST.BrandAnnotationId] = brands ? [...brands, brand] : [brand];
-  return AST.mergeAnnotations(ast, annotations);
+const makeBrandSchema = (self, annotations) => {
+  const ast = AST.annotations(self, _schema.toASTAnnotations(annotations));
+  const _validateEither = validateEither(make(ast));
+  const refined = Brand.refined(unbranded => Either.match(_validateEither(unbranded), {
+    onLeft: e => Option.some(Brand.error(TreeFormatter.formatError(e), e)),
+    onRight: () => Option.none()
+  }));
+  // make refined a BrandSchema...
+  refined[TypeId] = _schema.variance;
+  refined.ast = ast;
+  refined.pipe = function () {
+    return pipeArguments(this, arguments);
+  };
+  refined.annotations = annotations => {
+    return makeBrandSchema(ast, annotations);
+  };
+  return refined;
 };
 /**
  * Returns a nominal branded schema by applying a brand to a given schema.
@@ -782,33 +975,20 @@ const appendBrandAnnotation = (ast, brand, options) => {
  * import * as Schema from "@effect/schema/Schema"
  *
  * const Int = Schema.number.pipe(Schema.int(), Schema.brand("Int"))
- * type Int = Schema.Schema.To<typeof Int> // number & Brand<"Int">
+ * type Int = Schema.Schema.Type<typeof Int> // number & Brand<"Int">
  *
  * @category combinators
  * @since 1.0.0
  */
-export const brand = (brand, options) => self => {
-  const ast = appendBrandAnnotation(self.ast, brand, options);
-  const schema = make(ast);
-  const validateSync = Parser.validateSync(schema);
-  const validateOption = Parser.validateOption(schema);
-  const _validateEither = validateEither(schema);
-  const is = Parser.is(schema);
-  const out = Object.assign(input => validateSync(input), {
-    [Brand.RefinedConstructorsTypeId]: Brand.RefinedConstructorsTypeId,
-    [TypeId]: InternalSchema.variance,
-    ast,
-    option: input => validateOption(input),
-    either: input => Either.mapLeft(_validateEither(input), e => ArrayFormatter.formatError(e).map(err => ({
-      meta: err.path,
-      message: err.message
-    }))),
-    is: input => is(input),
-    pipe() {
-      return pipeArguments(this, arguments);
-    }
+export const brand = (brand, annotations) => self => {
+  const brandAnnotation = Option.match(AST.getBrandAnnotation(self.ast), {
+    onNone: () => [brand],
+    onSome: brands => [...brands, brand]
+  });
+  return makeBrandSchema(self.ast, {
+    ...annotations,
+    [AST.BrandAnnotationId]: brandAnnotation
   });
-  return out;
 };
 /**
  * @category combinators
@@ -832,47 +1012,52 @@ export const mutable = schema => {
   const ast = AST.mutable(schema.ast);
   return ast === schema.ast ? schema : make(ast);
 };
-/**
- * @category combinators
- * @since 1.0.0
- */
-export const record = (key, value) => make(AST.createRecord(key.ast, value.ast, true));
-/** @internal */
-export const intersectUnionMembers = (xs, ys) => {
-  return AST.createUnion(xs.flatMap(x => {
-    return ys.map(y => {
-      if (AST.isTypeLiteral(x)) {
-        if (AST.isTypeLiteral(y)) {
-          // isTypeLiteral(x) && isTypeLiteral(y)
-          return AST.createTypeLiteral(x.propertySignatures.concat(y.propertySignatures), x.indexSignatures.concat(y.indexSignatures));
-        } else if (AST.isTransform(y) && AST.isTypeLiteralTransformation(y.transformation) && AST.isTypeLiteral(y.from) && AST.isTypeLiteral(y.to)) {
-          // isTypeLiteral(x) && isTransform(y)
-          const from = AST.createTypeLiteral(x.propertySignatures.concat(y.from.propertySignatures), x.indexSignatures.concat(y.from.indexSignatures));
-          const to = AST.createTypeLiteral(AST.getToPropertySignatures(x.propertySignatures).concat(y.to.propertySignatures), AST.getToIndexSignatures(x.indexSignatures).concat(y.to.indexSignatures));
-          return AST.createTransform(from, to, AST.createTypeLiteralTransformation(y.transformation.propertySignatureTransformations));
-        }
-      } else if (AST.isTransform(x) && AST.isTypeLiteralTransformation(x.transformation) && AST.isTypeLiteral(x.from) && AST.isTypeLiteral(x.to)) {
-        if (AST.isTypeLiteral(y)) {
-          // isTransform(x) && isTypeLiteral(y)
-          const from = AST.createTypeLiteral(x.from.propertySignatures.concat(y.propertySignatures), x.from.indexSignatures.concat(y.indexSignatures));
-          const to = AST.createTypeLiteral(x.to.propertySignatures.concat(AST.getToPropertySignatures(y.propertySignatures)), x.to.indexSignatures.concat(AST.getToIndexSignatures(y.indexSignatures)));
-          return AST.createTransform(from, to, AST.createTypeLiteralTransformation(x.transformation.propertySignatureTransformations));
-        } else if (AST.isTransform(y) && AST.isTypeLiteralTransformation(y.transformation) && AST.isTypeLiteral(y.from) && AST.isTypeLiteral(y.to)) {
-          // isTransform(x) && isTransform(y)
-          const from = AST.createTypeLiteral(x.from.propertySignatures.concat(y.from.propertySignatures), x.from.indexSignatures.concat(y.from.indexSignatures));
-          const to = AST.createTypeLiteral(x.to.propertySignatures.concat(y.to.propertySignatures), x.to.indexSignatures.concat(y.to.indexSignatures));
-          return AST.createTransform(from, to, AST.createTypeLiteralTransformation(x.transformation.propertySignatureTransformations.concat(y.transformation.propertySignatureTransformations)));
-        }
+const getExtendErrorMessage = (x, y, path) => `cannot extend \`${x}\` with \`${y}\` (path [${path?.join(", ")}])`;
+const intersectTypeLiterals = (x, y, path) => {
+  if (AST.isTypeLiteral(x) && AST.isTypeLiteral(y)) {
+    const propertySignatures = [...x.propertySignatures];
+    for (const ps of y.propertySignatures) {
+      const name = ps.name;
+      const i = propertySignatures.findIndex(ps => ps.name === name);
+      if (i === -1) {
+        propertySignatures.push(ps);
+      } else {
+        const {
+          isOptional,
+          type
+        } = propertySignatures[i];
+        path = [...path, _util.formatUnknown(name)];
+        propertySignatures[i] = new AST.PropertySignature(name, extendAST(type, ps.type, path), isOptional, true);
       }
-      throw new Error("`extend` can only handle type literals or unions of type literals");
-    });
-  }));
+    }
+    return new AST.TypeLiteral(propertySignatures, x.indexSignatures.concat(y.indexSignatures));
+  }
+  throw new Error(getExtendErrorMessage(x, y, path));
 };
+const extendAST = (x, y, path) => intersectUnionMembers(AST.isUnion(x) ? x.types : [x], AST.isUnion(y) ? y.types : [y], path);
+const intersectUnionMembers = (xs, ys, path) => AST.Union.make(xs.flatMap(x => {
+  return ys.map(y => {
+    if (AST.isTypeLiteral(x)) {
+      if (AST.isTypeLiteral(y)) {
+        return intersectTypeLiterals(x, y, path);
+      } else if (AST.isTransform(y) && AST.isTypeLiteralTransformation(y.transformation)) {
+        return new AST.Transformation(intersectTypeLiterals(x, y.from, path), intersectTypeLiterals(AST.typeAST(x), y.to, path), new AST.TypeLiteralTransformation(y.transformation.propertySignatureTransformations));
+      }
+    } else if (AST.isTransform(x) && AST.isTypeLiteralTransformation(x.transformation)) {
+      if (AST.isTypeLiteral(y)) {
+        return new AST.Transformation(intersectTypeLiterals(x.from, y, path), intersectTypeLiterals(x.to, AST.typeAST(y), path), new AST.TypeLiteralTransformation(x.transformation.propertySignatureTransformations));
+      } else if (AST.isTransform(y) && AST.isTypeLiteralTransformation(y.transformation)) {
+        return new AST.Transformation(intersectTypeLiterals(x.from, y.from, path), intersectTypeLiterals(x.to, y.to, path), new AST.TypeLiteralTransformation(x.transformation.propertySignatureTransformations.concat(y.transformation.propertySignatureTransformations)));
+      }
+    }
+    throw new Error(getExtendErrorMessage(x, y, path));
+  });
+}));
 /**
  * @category combinators
  * @since 1.0.0
  */
-export const extend = /*#__PURE__*/dual(2, (self, that) => make(intersectUnionMembers(AST.isUnion(self.ast) ? self.ast.types : [self.ast], AST.isUnion(that.ast) ? that.ast.types : [that.ast])));
+export const extend = /*#__PURE__*/dual(2, (self, that) => make(extendAST(self.ast, that.ast, [])));
 /**
  * @category combinators
  * @since 1.0.0
@@ -882,15 +1067,27 @@ export const compose = /*#__PURE__*/dual(args => isSchema(args[1]), (from, to) =
  * @category combinators
  * @since 1.0.0
  */
-export const suspend = (f, annotations) => make(AST.createSuspend(() => f().ast, annotations));
-export function filter(predicate, options) {
-  return self => make(AST.createRefinement(self.ast, (a, options, ast) => {
+export const suspend = (f, annotations) => make(new AST.Suspend(() => f().ast, _schema.toASTAnnotations(annotations)));
+export function filter(predicate, annotations) {
+  return self => make(new AST.Refinement(self.ast, (a, options, ast) => {
     const out = predicate(a, options, ast);
     if (Predicate.isBoolean(out)) {
-      return out ? Option.none() : Option.some(ParseResult.type(ast, a));
+      return out ? Option.none() : Option.some(new ParseResult.Type(ast, a));
     }
     return out;
-  }, toAnnotations(options)));
+  }, _schema.toASTAnnotations(annotations)));
+}
+class $transformOrFail extends _schema.Schema {
+  from;
+  to;
+  constructor(from, to, ast) {
+    super(ast);
+    this.from = from;
+    this.to = to;
+  }
+  annotations(annotations) {
+    return new $transformOrFail(this.from, this.to, _schema.annotations(this.ast, annotations));
+  }
 }
 /**
  * Create a new `Schema` by transforming the input and output of an existing `Schema`
@@ -899,7 +1096,7 @@ export function filter(predicate, options) {
  * @category combinators
  * @since 1.0.0
  */
-export const transformOrFail = /*#__PURE__*/dual(args => isSchema(args[0]) && isSchema(args[1]), (from, to, decode, encode) => make(AST.createTransform(from.ast, to.ast, AST.createFinalTransformation(decode, encode))));
+export const transformOrFail = /*#__PURE__*/dual(args => isSchema(args[0]) && isSchema(args[1]), (from, to, decode, encode) => new $transformOrFail(from, to, new AST.Transformation(from.ast, to.ast, new AST.FinalTransformation(decode, encode))));
 /**
  * Create a new `Schema` by transforming the input and output of an existing `Schema`
  * using the provided mapping functions.
@@ -922,24 +1119,9 @@ export const transform = /*#__PURE__*/dual(args => isSchema(args[0]) && isSchema
  * @since 1.0.0
  */
 export const transformLiteral = (from, to) => transform(literal(from), literal(to), () => to, () => from);
-/**
- * Creates a new `Schema` which maps between corresponding literal values.
- *
- * @example
- * import * as S from "@effect/schema/Schema"
- *
- * const Animal = S.transformLiterals(
- *   [0, "cat"],
- *   [1, "dog"],
- *   [2, "cow"]
- * )
- *
- * assert.deepStrictEqual(S.decodeSync(Animal)(1), "dog")
- *
- * @category constructors
- * @since 1.0.0
- */
-export const transformLiterals = (...pairs) => union(...pairs.map(([from, to]) => transformLiteral(from, to)));
+export function transformLiterals(...pairs) {
+  return union(...pairs.map(([from, to]) => transformLiteral(from, to)));
+}
 /**
  * Attaches a property signature with the specified key and value to the schema.
  * This API is useful when you want to add a property to your schema which doesn't describe the shape of the input,
@@ -968,83 +1150,55 @@ export const transformLiterals = (...pairs) => union(...pairs.map(([from, to]) =
  * @category combinators
  * @since 1.0.0
  */
-export const attachPropertySignature = /*#__PURE__*/dual(args => isSchema(args[0]), (schema, key, value, options) => {
-  const attached = extend(to(schema), struct({
-    [key]: Predicate.isSymbol(value) ? uniqueSymbol(value) : literal(value)
+export const attachPropertySignature = /*#__PURE__*/dual(args => isSchema(args[0]), (schema, key, value, annotations) => {
+  const attached = extend(typeSchema(schema), struct({
+    [key]: Predicate.isSymbol(value) ? uniqueSymbolFromSelf(value) : literal(value)
   })).ast;
-  return make(AST.createTransform(schema.ast, options ? AST.mergeAnnotations(attached, toAnnotations(options)) : attached, AST.createTypeLiteralTransformation([AST.createPropertySignatureTransform(key, key, AST.createFinalPropertySignatureTransformation(() => Option.some(value), () => Option.none()))])));
+  return make(new AST.Transformation(schema.ast, annotations ? AST.annotations(attached, _schema.toASTAnnotations(annotations)) : attached, new AST.TypeLiteralTransformation([new AST.PropertySignatureTransformation(key, key, () => Option.some(value), () => Option.none())])));
 });
-const toAnnotations = options => {
-  if (!options) {
-    return {};
-  }
-  const out = {};
-  // symbols are reserved for custom annotations
-  const custom = Object.getOwnPropertySymbols(options);
-  for (const sym of custom) {
-    out[sym] = options[sym];
-  }
-  // string keys are reserved as /schema namespace
-  if (options.typeId !== undefined) {
-    const typeId = options.typeId;
-    if (typeof typeId === "object") {
-      out[AST.TypeAnnotationId] = typeId.id;
-      out[typeId.id] = typeId.annotation;
-    } else {
-      out[AST.TypeAnnotationId] = typeId;
-    }
-  }
-  const move = (from, to) => {
-    if (options[from] !== undefined) {
-      out[to] = options[from];
-    }
-  };
-  move("message", AST.MessageAnnotationId);
-  move("identifier", AST.IdentifierAnnotationId);
-  move("title", AST.TitleAnnotationId);
-  move("description", AST.DescriptionAnnotationId);
-  move("examples", AST.ExamplesAnnotationId);
-  move("default", AST.DefaultAnnotationId);
-  move("documentation", AST.DocumentationAnnotationId);
-  move("jsonSchema", AST.JSONSchemaAnnotationId);
-  move("arbitrary", hooks.ArbitraryHookId);
-  move("pretty", hooks.PrettyHookId);
-  move("equivalence", hooks.EquivalenceHookId);
-  move("concurrency", AST.ConcurrencyAnnotationId);
-  move("batching", AST.BatchingAnnotationId);
-  return out;
-};
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const annotations = annotations => self => make(AST.mergeAnnotations(self.ast, annotations));
+export const annotations = /*#__PURE__*/dual(2, (self, annotations) => self.annotations(annotations));
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const message = message => self => make(AST.setAnnotation(self.ast, AST.MessageAnnotationId, message));
+export const message = message => self => self.annotations({
+  [AST.MessageAnnotationId]: message
+});
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const identifier = identifier => self => make(AST.setAnnotation(self.ast, AST.IdentifierAnnotationId, identifier));
+export const identifier = identifier => self => self.annotations({
+  [AST.IdentifierAnnotationId]: identifier
+});
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const title = title => self => make(AST.setAnnotation(self.ast, AST.TitleAnnotationId, title));
+export const title = title => self => self.annotations({
+  [AST.TitleAnnotationId]: title
+});
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const description = description => self => make(AST.setAnnotation(self.ast, AST.DescriptionAnnotationId, description));
+export const description = description => self => self.annotations({
+  [AST.DescriptionAnnotationId]: description
+});
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const examples = examples => self => make(AST.setAnnotation(self.ast, AST.ExamplesAnnotationId, examples));
-const _default = value => self => make(AST.setAnnotation(self.ast, AST.DefaultAnnotationId, value));
+export const examples = examples => self => self.annotations({
+  [AST.ExamplesAnnotationId]: examples
+});
+const _default = value => self => self.annotations({
+  [AST.DefaultAnnotationId]: value
+});
 export {
 /**
  * @category annotations
@@ -1055,7 +1209,9 @@ _default as default };
  * @category annotations
  * @since 1.0.0
  */
-export const documentation = documentation => self => make(AST.setAnnotation(self.ast, AST.DocumentationAnnotationId, documentation));
+export const documentation = documentation => self => self.annotations({
+  [AST.DocumentationAnnotationId]: documentation
+});
 /**
  * Attaches a JSON Schema annotation to a schema that represents a refinement.
  *
@@ -1064,22 +1220,30 @@ export const documentation = documentation => self => make(AST.setAnnotation(sel
  * @category annotations
  * @since 1.0.0
  */
-export const jsonSchema = jsonSchema => self => make(AST.setAnnotation(self.ast, AST.JSONSchemaAnnotationId, jsonSchema));
+export const jsonSchema = jsonSchema => self => self.annotations({
+  [AST.JSONSchemaAnnotationId]: jsonSchema
+});
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const equivalence = equivalence => self => make(AST.setAnnotation(self.ast, hooks.EquivalenceHookId, () => equivalence));
+export const equivalence = equivalence => self => self.annotations({
+  [_hooks.EquivalenceHookId]: () => equivalence
+});
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const concurrency = concurrency => self => make(AST.setAnnotation(self.ast, AST.ConcurrencyAnnotationId, concurrency));
+export const concurrency = concurrency => self => self.annotations({
+  [AST.ConcurrencyAnnotationId]: concurrency
+});
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const batching = batching => self => make(AST.setAnnotation(self.ast, AST.BatchingAnnotationId, batching));
+export const batching = batching => self => self.annotations({
+  [AST.BatchingAnnotationId]: batching
+});
 /**
  * @category renaming
  * @since 1.0.0
@@ -1101,44 +1265,44 @@ export const TrimmedTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/Trim
  * @category string filters
  * @since 1.0.0
  */
-export const trimmed = options => self => self.pipe(filter(a => a === a.trim(), {
+export const trimmed = annotations => self => self.pipe(filter(a => a === a.trim(), {
   typeId: TrimmedTypeId,
   description: "a string with no leading or trailing whitespace",
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
-export const MaxLengthTypeId = filters.MaxLengthTypeId;
+export const MaxLengthTypeId = _filters.MaxLengthTypeId;
 /**
  * @category string filters
  * @since 1.0.0
  */
-export const maxLength = (maxLength, options) => self => self.pipe(filter(a => a.length <= maxLength, {
+export const maxLength = (maxLength, annotations) => self => self.pipe(filter(a => a.length <= maxLength, {
   typeId: MaxLengthTypeId,
   description: `a string at most ${maxLength} character(s) long`,
   jsonSchema: {
     maxLength
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
-export const MinLengthTypeId = filters.MinLengthTypeId;
+export const MinLengthTypeId = _filters.MinLengthTypeId;
 /**
  * @category string filters
  * @since 1.0.0
  */
-export const minLength = (minLength, options) => self => self.pipe(filter(a => a.length >= minLength, {
+export const minLength = (minLength, annotations) => self => self.pipe(filter(a => a.length >= minLength, {
   typeId: MinLengthTypeId,
   description: `a string at least ${minLength} character(s) long`,
   jsonSchema: {
     minLength
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
@@ -1149,7 +1313,7 @@ export const PatternTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/Patt
  * @category string filters
  * @since 1.0.0
  */
-export const pattern = (regex, options) => self => {
+export const pattern = (regex, annotations) => self => {
   const pattern = regex.source;
   return self.pipe(filter(a => {
     // The following line ensures that `lastIndex` is reset to `0` in case the user has specified the `g` flag
@@ -1167,7 +1331,7 @@ export const pattern = (regex, options) => self => {
       pattern
     },
     arbitrary: () => fc => fc.stringMatching(regex),
-    ...options
+    ...annotations
   }));
 };
 /**
@@ -1179,7 +1343,7 @@ export const StartsWithTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/S
  * @category string filters
  * @since 1.0.0
  */
-export const startsWith = (startsWith, options) => self => self.pipe(filter(a => a.startsWith(startsWith), {
+export const startsWith = (startsWith, annotations) => self => self.pipe(filter(a => a.startsWith(startsWith), {
   typeId: {
     id: StartsWithTypeId,
     annotation: {
@@ -1190,7 +1354,7 @@ export const startsWith = (startsWith, options) => self => self.pipe(filter(a =>
   jsonSchema: {
     pattern: `^${startsWith}`
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
@@ -1201,7 +1365,7 @@ export const EndsWithTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/End
  * @category string filters
  * @since 1.0.0
  */
-export const endsWith = (endsWith, options) => self => self.pipe(filter(a => a.endsWith(endsWith), {
+export const endsWith = (endsWith, annotations) => self => self.pipe(filter(a => a.endsWith(endsWith), {
   typeId: {
     id: EndsWithTypeId,
     annotation: {
@@ -1212,7 +1376,7 @@ export const endsWith = (endsWith, options) => self => self.pipe(filter(a => a.e
   jsonSchema: {
     pattern: `^.*${endsWith}$`
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
@@ -1223,7 +1387,7 @@ export const IncludesTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/Inc
  * @category string filters
  * @since 1.0.0
  */
-export const includes = (searchString, options) => self => self.pipe(filter(a => a.includes(searchString), {
+export const includes = (searchString, annotations) => self => self.pipe(filter(a => a.includes(searchString), {
   typeId: {
     id: IncludesTypeId,
     annotation: {
@@ -1234,7 +1398,7 @@ export const includes = (searchString, options) => self => self.pipe(filter(a =>
   jsonSchema: {
     pattern: `.*${searchString}.*`
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
@@ -1247,10 +1411,10 @@ export const LowercasedTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/L
  * @category string filters
  * @since 1.0.0
  */
-export const lowercased = options => self => self.pipe(filter(a => a === a.toLowerCase(), {
+export const lowercased = annotations => self => self.pipe(filter(a => a === a.toLowerCase(), {
   typeId: LowercasedTypeId,
   description: "a lowercase string",
-  ...options
+  ...annotations
 }));
 /**
  * @category string constructors
@@ -1271,10 +1435,10 @@ export const UppercasedTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/U
  * @category string filters
  * @since 1.0.0
  */
-export const uppercased = options => self => self.pipe(filter(a => a === a.toUpperCase(), {
+export const uppercased = annotations => self => self.pipe(filter(a => a === a.toUpperCase(), {
   typeId: UppercasedTypeId,
   description: "an uppercase string",
-  ...options
+  ...annotations
 }));
 /**
  * @category string constructors
@@ -1288,19 +1452,19 @@ export const Uppercased = /*#__PURE__*/string.pipe( /*#__PURE__*/uppercased({
  * @category type id
  * @since 1.0.0
  */
-export const LengthTypeId = filters.LengthTypeId;
+export const LengthTypeId = _filters.LengthTypeId;
 /**
  * @category string filters
  * @since 1.0.0
  */
-export const length = (length, options) => self => self.pipe(filter(a => a.length === length, {
+export const length = (length, annotations) => self => self.pipe(filter(a => a.length === length, {
   typeId: LengthTypeId,
   description: length === 1 ? `a single character` : `a string ${length} character(s) long`,
   jsonSchema: {
     minLength: length,
     maxLength: length
   },
-  ...options
+  ...annotations
 }));
 /**
  * A schema representing a single character.
@@ -1308,14 +1472,16 @@ export const length = (length, options) => self => self.pipe(filter(a => a.lengt
  * @category string constructors
  * @since 1.0.0
  */
-export const Char = /*#__PURE__*/string.pipe( /*#__PURE__*/length(1), /*#__PURE__*/identifier("Char"));
+export const Char = /*#__PURE__*/string.pipe( /*#__PURE__*/length(1, {
+  identifier: "Char"
+}));
 /**
  * @category string filters
  * @since 1.0.0
  */
-export const nonEmpty = options => minLength(1, {
+export const nonEmpty = annotations => minLength(1, {
   description: "a non empty string",
-  ...options
+  ...annotations
 });
 /**
  * This schema converts a string to lowercase.
@@ -1323,14 +1489,18 @@ export const nonEmpty = options => minLength(1, {
  * @category string transformations
  * @since 1.0.0
  */
-export const Lowercase = /*#__PURE__*/transform(string, Lowercased, s => s.toLowerCase(), identity).pipe( /*#__PURE__*/identifier("Lowercase"));
+export const Lowercase = /*#__PURE__*/transform(string, Lowercased, s => s.toLowerCase(), identity).annotations({
+  identifier: "Lowercase"
+});
 /**
  * This schema converts a string to uppercase.
  *
  * @category string transformations
  * @since 1.0.0
  */
-export const Uppercase = /*#__PURE__*/transform(string, Uppercased, s => s.toUpperCase(), identity).pipe( /*#__PURE__*/identifier("Uppercase"));
+export const Uppercase = /*#__PURE__*/transform(string, Uppercased, s => s.toUpperCase(), identity).annotations({
+  identifier: "Uppercase"
+});
 /**
  * @category string constructors
  * @since 1.0.0
@@ -1345,7 +1515,9 @@ export const Trimmed = /*#__PURE__*/string.pipe( /*#__PURE__*/trimmed({
  * @category string transformations
  * @since 1.0.0
  */
-export const Trim = /*#__PURE__*/transform(string, Trimmed, s => s.trim(), identity).pipe( /*#__PURE__*/identifier("Trim"));
+export const Trim = /*#__PURE__*/transform(string, Trimmed, s => s.trim(), identity).annotations({
+  identifier: "Trim"
+});
 /**
  * Returns a achema that allows splitting a string into an array of strings.
  *
@@ -1353,11 +1525,11 @@ export const Trim = /*#__PURE__*/transform(string, Trimmed, s => s.trim(), ident
  * @since 1.0.0
  */
 export const split = separator => transform(string, array(string), S.split(separator), ReadonlyArray.join(separator));
-const JsonString = /*#__PURE__*/string.pipe( /*#__PURE__*/annotations({
+const JsonString = /*#__PURE__*/string.annotations({
   [AST.IdentifierAnnotationId]: "JsonString",
   [AST.TitleAnnotationId]: "JsonString",
   [AST.DescriptionAnnotationId]: "a JSON string"
-}));
+});
 /**
  * The `parseJson` combinator provides a method to convert JSON strings into the `unknown` type using the underlying
  * functionality of `JSON.parse`. It also utilizes `JSON.stringify` for encoding.
@@ -1382,10 +1554,10 @@ export const parseJson = (schema, o) => {
   const options = schema;
   return transformOrFail(JsonString, unknown, (s, _, ast) => ParseResult.try({
     try: () => JSON.parse(s, options?.reviver),
-    catch: e => ParseResult.type(ast, s, e.message)
+    catch: e => new ParseResult.Type(ast, s, e.message)
   }), (u, _, ast) => ParseResult.try({
     try: () => JSON.stringify(u, options?.replacer, options?.space),
-    catch: e => ParseResult.type(ast, u, e.message)
+    catch: e => new ParseResult.Type(ast, u, e.message)
   }));
 };
 /**
@@ -1452,48 +1624,48 @@ export const FiniteTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/Finit
  * @category number filters
  * @since 1.0.0
  */
-export const finite = options => self => self.pipe(filter(a => Number.isFinite(a), {
+export const finite = annotations => self => self.pipe(filter(a => Number.isFinite(a), {
   typeId: FiniteTypeId,
   description: "a finite number",
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
-export const GreaterThanTypeId = filters.GreaterThanTypeId;
+export const GreaterThanTypeId = _filters.GreaterThanTypeId;
 /**
  * This filter checks whether the provided number is greater than the specified minimum.
  *
  * @category number filters
  * @since 1.0.0
  */
-export const greaterThan = (min, options) => self => self.pipe(filter(a => a > min, {
+export const greaterThan = (min, annotations) => self => self.pipe(filter(a => a > min, {
   typeId: GreaterThanTypeId,
   description: min === 0 ? "a positive number" : `a number greater than ${min}`,
   jsonSchema: {
     exclusiveMinimum: min
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
-export const GreaterThanOrEqualToTypeId = filters.GreaterThanOrEqualToTypeId;
+export const GreaterThanOrEqualToTypeId = _filters.GreaterThanOrEqualToTypeId;
 /**
  * This filter checks whether the provided number is greater than or equal to the specified minimum.
  *
  * @category number filters
  * @since 1.0.0
  */
-export const greaterThanOrEqualTo = (min, options) => self => self.pipe(filter(a => a >= min, {
+export const greaterThanOrEqualTo = (min, annotations) => self => self.pipe(filter(a => a >= min, {
   typeId: GreaterThanOrEqualToTypeId,
   description: min === 0 ? "a non-negative number" : `a number greater than or equal to ${min}`,
   jsonSchema: {
     minimum: min
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
@@ -1504,90 +1676,90 @@ export const MultipleOfTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/M
  * @category number filters
  * @since 1.0.0
  */
-export const multipleOf = (divisor, options) => self => self.pipe(filter(a => N.remainder(a, divisor) === 0, {
+export const multipleOf = (divisor, annotations) => self => self.pipe(filter(a => N.remainder(a, divisor) === 0, {
   typeId: MultipleOfTypeId,
   description: `a number divisible by ${divisor}`,
   jsonSchema: {
     multipleOf: Math.abs(divisor)
   },
   // spec requires positive divisor
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
-export const IntTypeId = filters.IntTypeId;
+export const IntTypeId = _filters.IntTypeId;
 /**
  * @category number filters
  * @since 1.0.0
  */
-export const int = options => self => self.pipe(filter(a => Number.isSafeInteger(a), {
+export const int = annotations => self => self.pipe(filter(a => Number.isSafeInteger(a), {
   typeId: IntTypeId,
   title: "integer",
   description: "an integer",
   jsonSchema: {
     type: "integer"
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
-export const LessThanTypeId = filters.LessThanTypeId;
+export const LessThanTypeId = _filters.LessThanTypeId;
 /**
  * This filter checks whether the provided number is less than the specified maximum.
  *
  * @category number filters
  * @since 1.0.0
  */
-export const lessThan = (max, options) => self => self.pipe(filter(a => a < max, {
+export const lessThan = (max, annotations) => self => self.pipe(filter(a => a < max, {
   typeId: LessThanTypeId,
   description: max === 0 ? "a negative number" : `a number less than ${max}`,
   jsonSchema: {
     exclusiveMaximum: max
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
-export const LessThanOrEqualToTypeId = filters.LessThanOrEqualToTypeId;
+export const LessThanOrEqualToTypeId = _filters.LessThanOrEqualToTypeId;
 /**
  * This schema checks whether the provided number is less than or equal to the specified maximum.
  *
  * @category number filters
  * @since 1.0.0
  */
-export const lessThanOrEqualTo = (max, options) => self => self.pipe(filter(a => a <= max, {
+export const lessThanOrEqualTo = (max, annotations) => self => self.pipe(filter(a => a <= max, {
   typeId: LessThanOrEqualToTypeId,
   description: max === 0 ? "a non-positive number" : `a number less than or equal to ${max}`,
   jsonSchema: {
     maximum: max
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
-export const BetweenTypeId = filters.BetweenTypeId;
+export const BetweenTypeId = _filters.BetweenTypeId;
 /**
  * This filter checks whether the provided number falls within the specified minimum and maximum values.
  *
  * @category number filters
  * @since 1.0.0
  */
-export const between = (min, max, options) => self => self.pipe(filter(a => a >= min && a <= max, {
+export const between = (min, max, annotations) => self => self.pipe(filter(a => a >= min && a <= max, {
   typeId: BetweenTypeId,
   description: `a number between ${min} and ${max}`,
   jsonSchema: {
     maximum: max,
     minimum: min
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
@@ -1598,38 +1770,38 @@ export const NonNaNTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/NonNa
  * @category number filters
  * @since 1.0.0
  */
-export const nonNaN = options => self => self.pipe(filter(a => !Number.isNaN(a), {
+export const nonNaN = annotations => self => self.pipe(filter(a => !Number.isNaN(a), {
   typeId: NonNaNTypeId,
   description: "a number excluding NaN",
-  ...options
+  ...annotations
 }));
 /**
  * @category number filters
  * @since 1.0.0
  */
-export const positive = options => greaterThan(0, options);
+export const positive = annotations => greaterThan(0, annotations);
 /**
  * @category number filters
  * @since 1.0.0
  */
-export const negative = options => lessThan(0, options);
+export const negative = annotations => lessThan(0, annotations);
 /**
  * @category number filters
  * @since 1.0.0
  */
-export const nonPositive = options => lessThanOrEqualTo(0, options);
+export const nonPositive = annotations => lessThanOrEqualTo(0, annotations);
 /**
  * @category number filters
  * @since 1.0.0
  */
-export const nonNegative = options => greaterThanOrEqualTo(0, options);
+export const nonNegative = annotations => greaterThanOrEqualTo(0, annotations);
 /**
  * Clamps a number between a minimum and a maximum value.
  *
  * @category number transformations
  * @since 1.0.0
  */
-export const clamp = (minimum, maximum) => self => transform(self, self.pipe(to, between(minimum, maximum)), self => N.clamp(self, {
+export const clamp = (minimum, maximum) => self => transform(self, self.pipe(typeSchema, between(minimum, maximum)), self => N.clamp(self, {
   minimum,
   maximum
 }), identity, {
@@ -1645,7 +1817,9 @@ export const clamp = (minimum, maximum) => self => transform(self, self.pipe(to,
  * @category number constructors
  * @since 1.0.0
  */
-export const NumberFromString = /*#__PURE__*/transformOrFail(string, number, (s, _, ast) => ParseResult.fromOption(N.parse(s), () => ParseResult.type(ast, s)), n => ParseResult.succeed(String(n))).pipe( /*#__PURE__*/identifier("NumberFromString"));
+export const NumberFromString = /*#__PURE__*/transformOrFail(string, number, (s, _, ast) => ParseResult.fromOption(N.parse(s), () => new ParseResult.Type(ast, s)), n => ParseResult.succeed(String(n))).annotations({
+  identifier: "NumberFromString"
+});
 /**
  * @category number constructors
  * @since 1.0.0
@@ -1747,17 +1921,19 @@ export const Not = /*#__PURE__*/transform(boolean, boolean, self => !self, self
  */
 export const symbol = /*#__PURE__*/transform(string, symbolFromSelf, s => Symbol.for(s), sym => sym.description, {
   strict: false
-}).pipe( /*#__PURE__*/identifier("symbol"));
+}).annotations({
+  identifier: "symbol"
+});
 /**
  * @category type id
  * @since 1.0.0
  */
-export const GreaterThanBigintTypeId = filters.GreaterThanBigintTypeId;
+export const GreaterThanBigintTypeId = _filters.GreaterThanBigintTypeId;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-export const greaterThanBigint = (min, options) => self => self.pipe(filter(a => a > min, {
+export const greaterThanBigint = (min, annotations) => self => self.pipe(filter(a => a > min, {
   typeId: {
     id: GreaterThanBigintTypeId,
     annotation: {
@@ -1765,18 +1941,18 @@ export const greaterThanBigint = (min, options) => self => self.pipe(filter(a =>
     }
   },
   description: min === 0n ? "a positive bigint" : `a bigint greater than ${min}n`,
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
-export const GreaterThanOrEqualToBigintTypeId = filters.GreaterThanOrEqualToBigintTypeId;
+export const GreaterThanOrEqualToBigintTypeId = _filters.GreaterThanOrEqualToBigintTypeId;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-export const greaterThanOrEqualToBigint = (min, options) => self => self.pipe(filter(a => a >= min, {
+export const greaterThanOrEqualToBigint = (min, annotations) => self => self.pipe(filter(a => a >= min, {
   typeId: {
     id: GreaterThanOrEqualToBigintTypeId,
     annotation: {
@@ -1784,18 +1960,18 @@ export const greaterThanOrEqualToBigint = (min, options) => self => self.pipe(fi
     }
   },
   description: min === 0n ? "a non-negative bigint" : `a bigint greater than or equal to ${min}n`,
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
-export const LessThanBigintTypeId = filters.LessThanBigintTypeId;
+export const LessThanBigintTypeId = _filters.LessThanBigintTypeId;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-export const lessThanBigint = (max, options) => self => self.pipe(filter(a => a < max, {
+export const lessThanBigint = (max, annotations) => self => self.pipe(filter(a => a < max, {
   typeId: {
     id: LessThanBigintTypeId,
     annotation: {
@@ -1803,18 +1979,18 @@ export const lessThanBigint = (max, options) => self => self.pipe(filter(a => a
     }
   },
   description: max === 0n ? "a negative bigint" : `a bigint less than ${max}n`,
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
-export const LessThanOrEqualToBigintTypeId = filters.LessThanOrEqualToBigintTypeId;
+export const LessThanOrEqualToBigintTypeId = _filters.LessThanOrEqualToBigintTypeId;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-export const lessThanOrEqualToBigint = (max, options) => self => self.pipe(filter(a => a <= max, {
+export const lessThanOrEqualToBigint = (max, annotations) => self => self.pipe(filter(a => a <= max, {
   typeId: {
     id: LessThanOrEqualToBigintTypeId,
     annotation: {
@@ -1822,18 +1998,18 @@ export const lessThanOrEqualToBigint = (max, options) => self => self.pipe(filte
     }
   },
   description: max === 0n ? "a non-positive bigint" : `a bigint less than or equal to ${max}n`,
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
-export const BetweenBigintTypeId = filters.BetweenBigintTypeId;
+export const BetweenBigintTypeId = _filters.BetweenBigintTypeId;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-export const betweenBigint = (min, max, options) => self => self.pipe(filter(a => a >= min && a <= max, {
+export const betweenBigint = (min, max, annotations) => self => self.pipe(filter(a => a >= min && a <= max, {
   typeId: {
     id: BetweenBigintTypeId,
     annotation: {
@@ -1842,35 +2018,35 @@ export const betweenBigint = (min, max, options) => self => self.pipe(filter(a =
     }
   },
   description: `a bigint between ${min}n and ${max}n`,
-  ...options
+  ...annotations
 }));
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-export const positiveBigint = options => greaterThanBigint(0n, options);
+export const positiveBigint = annotations => greaterThanBigint(0n, annotations);
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-export const negativeBigint = options => lessThanBigint(0n, options);
+export const negativeBigint = annotations => lessThanBigint(0n, annotations);
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-export const nonNegativeBigint = options => greaterThanOrEqualToBigint(0n, options);
+export const nonNegativeBigint = annotations => greaterThanOrEqualToBigint(0n, annotations);
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-export const nonPositiveBigint = options => lessThanOrEqualToBigint(0n, options);
+export const nonPositiveBigint = annotations => lessThanOrEqualToBigint(0n, annotations);
 /**
  * Clamps a bigint between a minimum and a maximum value.
  *
  * @category bigint transformations
  * @since 1.0.0
  */
-export const clampBigint = (minimum, maximum) => self => transform(self, self.pipe(to, betweenBigint(minimum, maximum)), self => BigInt_.clamp(self, {
+export const clampBigint = (minimum, maximum) => self => transform(self, self.pipe(typeSchema, betweenBigint(minimum, maximum)), self => _bigInt.clamp(self, {
   minimum,
   maximum
 }), identity, {
@@ -1886,13 +2062,15 @@ export const clampBigint = (minimum, maximum) => self => transform(self, self.pi
  */
 export const bigint = /*#__PURE__*/transformOrFail(string, bigintFromSelf, (s, _, ast) => {
   if (s.trim() === "") {
-    return ParseResult.fail(ParseResult.type(ast, s));
+    return ParseResult.fail(new ParseResult.Type(ast, s));
   }
   return ParseResult.try({
     try: () => BigInt(s),
-    catch: () => ParseResult.type(ast, s)
+    catch: () => new ParseResult.Type(ast, s)
   });
-}, n => ParseResult.succeed(String(n))).pipe( /*#__PURE__*/identifier("bigint"));
+}, n => ParseResult.succeed(String(n))).annotations({
+  identifier: "bigint"
+});
 /**
  * @category bigint constructors
  * @since 1.0.0
@@ -1967,37 +2145,39 @@ export const NonNegativeBigint = /*#__PURE__*/bigint.pipe( /*#__PURE__*/nonNegat
  */
 export const BigintFromNumber = /*#__PURE__*/transformOrFail(number, bigintFromSelf, (n, _, ast) => ParseResult.try({
   try: () => BigInt(n),
-  catch: () => ParseResult.type(ast, n)
-}), (b, _, ast) => ParseResult.fromOption(BigInt_.toNumber(b), () => ParseResult.type(ast, b))).pipe( /*#__PURE__*/identifier("BigintFromNumber"));
+  catch: () => new ParseResult.Type(ast, n)
+}), (b, _, ast) => ParseResult.fromOption(_bigInt.toNumber(b), () => new ParseResult.Type(ast, b))).annotations({
+  identifier: "BigintFromNumber"
+});
 /**
  * @category Secret constructors
  * @since 1.0.0
  */
-export const SecretFromSelf = /*#__PURE__*/declare(Secret.isSecret, {
+export const SecretFromSelf = /*#__PURE__*/declare(_secret.isSecret, {
   identifier: "SecretFromSelf",
   pretty: () => secret => String(secret),
-  arbitrary: () => fc => fc.string().map(_ => Secret.fromString(_))
+  arbitrary: () => fc => fc.string().map(_ => _secret.fromString(_))
 });
-const _Secret = /*#__PURE__*/transform(string, SecretFromSelf, str => Secret.fromString(str), secret => Secret.value(secret), {
-  strict: false
-}).pipe( /*#__PURE__*/identifier("Secret"));
-export {
 /**
  * A schema that transforms a `string` into a `Secret`.
  *
  * @category Secret transformations
  * @since 1.0.0
  */
-_Secret as Secret };
+export const Secret = /*#__PURE__*/transform(string, SecretFromSelf, str => _secret.fromString(str), secret => _secret.value(secret), {
+  strict: false
+}).annotations({
+  identifier: "Secret"
+});
 /**
  * @category Duration constructors
  * @since 1.0.0
  */
-export const DurationFromSelf = /*#__PURE__*/declare(Duration.isDuration, {
+export const DurationFromSelf = /*#__PURE__*/declare(_duration.isDuration, {
   identifier: "DurationFromSelf",
   pretty: () => String,
-  arbitrary: () => fc => fc.oneof(fc.constant(Duration.infinity), fc.bigUint().map(_ => Duration.nanos(_)), fc.bigUint().map(_ => Duration.micros(_)), fc.maxSafeNat().map(_ => Duration.millis(_)), fc.maxSafeNat().map(_ => Duration.seconds(_)), fc.maxSafeNat().map(_ => Duration.minutes(_)), fc.maxSafeNat().map(_ => Duration.hours(_)), fc.maxSafeNat().map(_ => Duration.days(_)), fc.maxSafeNat().map(_ => Duration.weeks(_))),
-  equivalence: () => Duration.Equivalence
+  arbitrary: () => fc => fc.oneof(fc.constant(_duration.infinity), fc.bigUint().map(_ => _duration.nanos(_)), fc.bigUint().map(_ => _duration.micros(_)), fc.maxSafeNat().map(_ => _duration.millis(_)), fc.maxSafeNat().map(_ => _duration.seconds(_)), fc.maxSafeNat().map(_ => _duration.minutes(_)), fc.maxSafeNat().map(_ => _duration.hours(_)), fc.maxSafeNat().map(_ => _duration.days(_)), fc.maxSafeNat().map(_ => _duration.weeks(_))),
+  equivalence: () => _duration.Equivalence
 });
 /**
  * A schema that transforms a `bigint` tuple into a `Duration`.
@@ -2006,10 +2186,12 @@ export const DurationFromSelf = /*#__PURE__*/declare(Duration.isDuration, {
  * @category Duration transformations
  * @since 1.0.0
  */
-export const DurationFromNanos = /*#__PURE__*/transformOrFail(bigintFromSelf, DurationFromSelf, nanos => ParseResult.succeed(Duration.nanos(nanos)), (duration, _, ast) => Option.match(Duration.toNanos(duration), {
-  onNone: () => ParseResult.fail(ParseResult.type(ast, duration)),
+export const DurationFromNanos = /*#__PURE__*/transformOrFail(bigintFromSelf, DurationFromSelf, nanos => ParseResult.succeed(_duration.nanos(nanos)), (duration, _, ast) => Option.match(_duration.toNanos(duration), {
+  onNone: () => ParseResult.fail(new ParseResult.Type(ast, duration)),
   onSome: val => ParseResult.succeed(val)
-})).pipe( /*#__PURE__*/identifier("DurationFromNanos"));
+})).annotations({
+  identifier: "DurationFromNanos"
+});
 /**
  * A schema that transforms a `number` tuple into a `Duration`.
  * Treats the value as the number of milliseconds.
@@ -2017,7 +2199,9 @@ export const DurationFromNanos = /*#__PURE__*/transformOrFail(bigintFromSelf, Du
  * @category Duration transformations
  * @since 1.0.0
  */
-export const DurationFromMillis = /*#__PURE__*/transform(number, DurationFromSelf, ms => Duration.millis(ms), n => Duration.toMillis(n)).pipe( /*#__PURE__*/identifier("DurationFromMillis"));
+export const DurationFromMillis = /*#__PURE__*/transform(number, DurationFromSelf, ms => _duration.millis(ms), n => _duration.toMillis(n)).annotations({
+  identifier: "DurationFromMillis"
+});
 const hrTime = /*#__PURE__*/tuple( /*#__PURE__*/NonNegative.pipe( /*#__PURE__*/finite({
   [AST.TitleAnnotationId]: "seconds",
   [AST.DescriptionAnnotationId]: "seconds"
@@ -2025,22 +2209,22 @@ const hrTime = /*#__PURE__*/tuple( /*#__PURE__*/NonNegative.pipe( /*#__PURE__*/f
   [AST.TitleAnnotationId]: "nanos",
   [AST.DescriptionAnnotationId]: "nanos"
 })));
-const _Duration = /*#__PURE__*/transform(hrTime, DurationFromSelf, ([seconds, nanos]) => Duration.nanos(BigInt(seconds) * BigInt(1e9) + BigInt(nanos)), duration => Duration.toHrTime(duration)).pipe( /*#__PURE__*/identifier("Duration"));
-export {
 /**
  * A schema that transforms a `[number, number]` tuple into a `Duration`.
  *
  * @category Duration transformations
  * @since 1.0.0
  */
-_Duration as Duration };
+export const Duration = /*#__PURE__*/transform(hrTime, DurationFromSelf, ([seconds, nanos]) => _duration.nanos(BigInt(seconds) * BigInt(1e9) + BigInt(nanos)), duration => _duration.toHrTime(duration)).annotations({
+  identifier: "Duration"
+});
 /**
  * Clamps a `Duration` between a minimum and a maximum value.
  *
  * @category Duration transformations
  * @since 1.0.0
  */
-export const clampDuration = (minimum, maximum) => self => transform(self, self.pipe(to, betweenDuration(minimum, maximum)), self => Duration.clamp(self, {
+export const clampDuration = (minimum, maximum) => self => transform(self, self.pipe(typeSchema, betweenDuration(minimum, maximum)), self => _duration.clamp(self, {
   minimum,
   maximum
 }), identity, {
@@ -2055,15 +2239,15 @@ export const LessThanDurationTypeId = /*#__PURE__*/Symbol.for("@effect/schema/Ty
  * @category Duration filters
  * @since 1.0.0
  */
-export const lessThanDuration = (max, options) => self => self.pipe(filter(a => Duration.lessThan(a, max), {
+export const lessThanDuration = (max, annotations) => self => self.pipe(filter(a => _duration.lessThan(a, max), {
   typeId: {
     id: LessThanDurationTypeId,
     annotation: {
       max
     }
   },
-  description: `a Duration less than ${Duration.decode(max)}`,
-  ...options
+  description: `a Duration less than ${_duration.decode(max)}`,
+  ...annotations
 }));
 /**
  * @category type id
@@ -2074,15 +2258,15 @@ export const LessThanOrEqualToDurationTypeId = /*#__PURE__*/Symbol.for("@effect/
  * @category Duration filters
  * @since 1.0.0
  */
-export const lessThanOrEqualToDuration = (max, options) => self => self.pipe(filter(a => Duration.lessThanOrEqualTo(a, max), {
+export const lessThanOrEqualToDuration = (max, annotations) => self => self.pipe(filter(a => _duration.lessThanOrEqualTo(a, max), {
   typeId: {
     id: LessThanDurationTypeId,
     annotation: {
       max
     }
   },
-  description: `a Duration less than or equal to ${Duration.decode(max)}`,
-  ...options
+  description: `a Duration less than or equal to ${_duration.decode(max)}`,
+  ...annotations
 }));
 /**
  * @category type id
@@ -2093,15 +2277,15 @@ export const GreaterThanDurationTypeId = /*#__PURE__*/Symbol.for("@effect/schema
  * @category Duration filters
  * @since 1.0.0
  */
-export const greaterThanDuration = (min, options) => self => self.pipe(filter(a => Duration.greaterThan(a, min), {
+export const greaterThanDuration = (min, annotations) => self => self.pipe(filter(a => _duration.greaterThan(a, min), {
   typeId: {
     id: GreaterThanDurationTypeId,
     annotation: {
       min
     }
   },
-  description: `a Duration greater than ${Duration.decode(min)}`,
-  ...options
+  description: `a Duration greater than ${_duration.decode(min)}`,
+  ...annotations
 }));
 /**
  * @category type id
@@ -2112,15 +2296,15 @@ export const GreaterThanOrEqualToDurationTypeId = /*#__PURE__*/Symbol.for("@effe
  * @category Duration filters
  * @since 1.0.0
  */
-export const greaterThanOrEqualToDuration = (min, options) => self => self.pipe(filter(a => Duration.greaterThanOrEqualTo(a, min), {
+export const greaterThanOrEqualToDuration = (min, annotations) => self => self.pipe(filter(a => _duration.greaterThanOrEqualTo(a, min), {
   typeId: {
     id: GreaterThanOrEqualToDurationTypeId,
     annotation: {
       min
     }
   },
-  description: `a Duration greater than or equal to ${Duration.decode(min)}`,
-  ...options
+  description: `a Duration greater than or equal to ${_duration.decode(min)}`,
+  ...annotations
 }));
 /**
  * @category type id
@@ -2131,7 +2315,7 @@ export const BetweenDurationTypeId = /*#__PURE__*/Symbol.for("@effect/schema/Typ
  * @category Duration filters
  * @since 1.0.0
  */
-export const betweenDuration = (minimum, maximum, options) => self => self.pipe(filter(a => Duration.between(a, {
+export const betweenDuration = (minimum, maximum, annotations) => self => self.pipe(filter(a => _duration.between(a, {
   minimum,
   maximum
 }), {
@@ -2142,8 +2326,8 @@ export const betweenDuration = (minimum, maximum, options) => self => self.pipe(
       minimum
     }
   },
-  description: `a Duration between ${Duration.decode(minimum)} and ${Duration.decode(maximum)}`,
-  ...options
+  description: `a Duration between ${_duration.decode(minimum)} and ${_duration.decode(maximum)}`,
+  ...annotations
 }));
 /**
  * @category Uint8Array constructors
@@ -2158,7 +2342,11 @@ export const Uint8ArrayFromSelf = /*#__PURE__*/declare(Predicate.isUint8Array, {
 const _Uint8Array = /*#__PURE__*/transform(array(number.pipe(between(0, 255, {
   title: "8-bit unsigned integer",
   description: "a 8-bit unsigned integer"
-}))).pipe(description("an array of 8-bit unsigned integers")), Uint8ArrayFromSelf, a => Uint8Array.from(a), arr => Array.from(arr)).pipe( /*#__PURE__*/identifier("Uint8Array"));
+}))).annotations({
+  description: "an array of 8-bit unsigned integers"
+}), Uint8ArrayFromSelf, a => Uint8Array.from(a), arr => Array.from(arr)).annotations({
+  identifier: "Uint8Array"
+});
 export {
 /**
  * A schema that transforms a `number` array into a `Uint8Array`.
@@ -2167,9 +2355,11 @@ export {
  * @since 1.0.0
  */
 _Uint8Array as Uint8Array };
-const makeEncodingTransformation = (id, decode, encode) => transformOrFail(string, Uint8ArrayFromSelf, (s, _, ast) => Either.mapLeft(decode(s), decodeException => ParseResult.type(ast, s, decodeException.message)), u => ParseResult.succeed(encode(u)), {
+const makeEncodingTransformation = (id, decode, encode) => transformOrFail(string, Uint8ArrayFromSelf, (s, _, ast) => Either.mapLeft(decode(s), decodeException => new ParseResult.Type(ast, s, decodeException.message)), u => ParseResult.succeed(encode(u)), {
   strict: false
-}).pipe(identifier(id));
+}).annotations({
+  identifier: id
+});
 /**
  * @category Encoding transformations
  * @since 1.0.0
@@ -2189,53 +2379,53 @@ export const Hex = /*#__PURE__*/makeEncodingTransformation("Hex", Encoding.decod
  * @category type id
  * @since 1.0.0
  */
-export const MinItemsTypeId = filters.MinItemsTypeId;
+export const MinItemsTypeId = _filters.MinItemsTypeId;
 /**
  * @category ReadonlyArray filters
  * @since 1.0.0
  */
-export const minItems = (n, options) => self => self.pipe(filter(a => a.length >= n, {
+export const minItems = (n, annotations) => self => self.pipe(filter(a => a.length >= n, {
   typeId: MinItemsTypeId,
   description: `an array of at least ${n} items`,
   jsonSchema: {
     minItems: n
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
-export const MaxItemsTypeId = filters.MaxItemsTypeId;
+export const MaxItemsTypeId = _filters.MaxItemsTypeId;
 /**
  * @category ReadonlyArray filters
  * @since 1.0.0
  */
-export const maxItems = (n, options) => self => self.pipe(filter(a => a.length <= n, {
+export const maxItems = (n, annotations) => self => self.pipe(filter(a => a.length <= n, {
   typeId: MaxItemsTypeId,
   description: `an array of at most ${n} items`,
   jsonSchema: {
     maxItems: n
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category type id
  * @since 1.0.0
  */
-export const ItemsCountTypeId = filters.ItemsCountTypeId;
+export const ItemsCountTypeId = _filters.ItemsCountTypeId;
 /**
  * @category ReadonlyArray filters
  * @since 1.0.0
  */
-export const itemsCount = (n, options) => self => self.pipe(filter(a => a.length === n, {
+export const itemsCount = (n, annotations) => self => self.pipe(filter(a => a.length === n, {
   typeId: ItemsCountTypeId,
   description: `an array of exactly ${n} items`,
   jsonSchema: {
     minItems: n,
     maxItems: n
   },
-  ...options
+  ...annotations
 }));
 /**
  * @category ReadonlyArray transformations
@@ -2248,7 +2438,7 @@ export const getNumberIndexedAccess = self => make(AST.getNumberIndexedAccess(se
  * @category ReadonlyArray transformations
  * @since 1.0.0
  */
-export const head = self => transform(self, optionFromSelf(getNumberIndexedAccess(to(self))), ReadonlyArray.head, Option.match({
+export const head = self => transform(self, optionFromSelf(getNumberIndexedAccess(typeSchema(self))), ReadonlyArray.head, Option.match({
   onNone: () => [],
   onSome: ReadonlyArray.of
 }));
@@ -2260,7 +2450,7 @@ export const head = self => transform(self, optionFromSelf(getNumberIndexedAcces
  * @category ReadonlyArray transformations
  * @since 1.0.0
  */
-export const headOr = /*#__PURE__*/dual(args => isSchema(args[0]), (self, fallback) => transformOrFail(self, getNumberIndexedAccess(to(self)), (as, _, ast) => as.length > 0 ? ParseResult.succeed(as[0]) : fallback ? ParseResult.succeed(fallback()) : ParseResult.fail(ParseResult.type(ast, as)), a => ParseResult.succeed(ReadonlyArray.of(a))));
+export const headOr = /*#__PURE__*/dual(args => isSchema(args[0]), (self, fallback) => transformOrFail(self, getNumberIndexedAccess(typeSchema(self)), (as, _, ast) => as.length > 0 ? ParseResult.succeed(as[0]) : fallback ? ParseResult.succeed(fallback()) : ParseResult.fail(new ParseResult.Type(ast, as)), a => ParseResult.succeed(ReadonlyArray.of(a))));
 /**
  * @category type id
  * @since 1.0.0
@@ -2272,10 +2462,10 @@ export const ValidDateTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/Va
  * @category Date filters
  * @since 1.0.0
  */
-export const validDate = options => self => self.pipe(filter(a => !Number.isNaN(a.getTime()), {
+export const validDate = annotations => self => self.pipe(filter(a => !Number.isNaN(a.getTime()), {
   typeId: ValidDateTypeId,
   description: "a valid Date",
-  ...options
+  ...annotations
 }));
 /**
  * Represents a schema for handling potentially **invalid** `Date` instances (e.g., `new Date("Invalid Date")` is not rejected).
@@ -2308,7 +2498,9 @@ export const ValidDateFromSelf = /*#__PURE__*/DateFromSelf.pipe( /*#__PURE__*/va
  * @category Date transformations
  * @since 1.0.0
  */
-export const DateFromString = /*#__PURE__*/transform(string, DateFromSelf, s => new Date(s), n => n.toISOString()).pipe( /*#__PURE__*/identifier("DateFromString"));
+export const DateFromString = /*#__PURE__*/transform(string, DateFromSelf, s => new Date(s), n => n.toISOString()).annotations({
+  identifier: "DateFromString"
+});
 const _Date = /*#__PURE__*/DateFromString.pipe( /*#__PURE__*/validDate({
   identifier: "Date"
 }));
@@ -2320,24 +2512,30 @@ export {
  * @since 1.0.0
  */
 _Date as Date };
-const OptionNoneFrom = /*#__PURE__*/struct({
-  _tag: /*#__PURE__*/literal("None")
+const OptionNoneEncoded = /*#__PURE__*/struct({
+  _tag: literal("None")
+}).annotations({
+  description: "NoneEncoded"
 });
-const optionSomeFrom = value => struct({
+const optionSomeEncoded = value => struct({
   _tag: literal("Some"),
   value
+}).annotations({
+  description: `SomeEncoded<${format(value)}>`
+});
+const optionEncoded = value => union(OptionNoneEncoded, optionSomeEncoded(value)).annotations({
+  description: `OptionEncoded<${format(value)}>`
 });
-const optionFrom = value => union(OptionNoneFrom, optionSomeFrom(value));
 const optionDecode = input => input._tag === "None" ? Option.none() : Option.some(input.value);
 const optionArbitrary = value => {
-  const arb = arbitrary.make(optionFrom(schemaFromArbitrary(value)));
+  const arb = arbitrary.make(optionEncoded(schemaFromArbitrary(value)));
   return fc => arb(fc).map(optionDecode);
 };
 const optionPretty = value => Option.match({
   onNone: () => "none()",
   onSome: a => `some(${value(a)})`
 });
-const optionParse = decodeUnknown => (u, options, ast) => Option.isOption(u) ? Option.isNone(u) ? ParseResult.succeed(Option.none()) : ParseResult.map(decodeUnknown(u.value, options), Option.some) : ParseResult.fail(ParseResult.type(ast, u));
+const optionParse = decodeUnknown => (u, options, ast) => Option.isOption(u) ? Option.isNone(u) ? ParseResult.succeed(Option.none()) : ParseResult.map(decodeUnknown(u.value, options), Option.some) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category Option transformations
  * @since 1.0.0
@@ -2350,56 +2548,76 @@ export const optionFromSelf = value => {
     equivalence: Option.getEquivalence
   });
 };
+const makeNoneEncoded = {
+  _tag: "None"
+};
+const makeSomeEncoded = value => ({
+  _tag: "Some",
+  value
+});
 /**
  * @category Option transformations
  * @since 1.0.0
  */
-export const option = value => transform(optionFrom(value), optionFromSelf(to(value)), optionDecode, Option.match({
-  onNone: () => ({
-    _tag: "None"
-  }),
-  onSome: value => ({
-    _tag: "Some",
-    value
-  })
-}));
+export const option = value => {
+  const _value = asSchema(value);
+  return transform(optionEncoded(_value), optionFromSelf(typeSchema(_value)), optionDecode, Option.match({
+    onNone: () => makeNoneEncoded,
+    onSome: makeSomeEncoded
+  }));
+};
 /**
  * @category Option transformations
  * @since 1.0.0
  */
-export const optionFromNullable = value => transform(nullable(value), optionFromSelf(to(value)), Option.fromNullable, Option.getOrNull);
+export const optionFromNullable = value => {
+  const _value = asSchema(value);
+  return transform(nullable(_value), optionFromSelf(typeSchema(_value)), Option.fromNullable, Option.getOrNull);
+};
 /**
  * @category Option transformations
  * @since 1.0.0
  */
-export const optionFromNullish = (value, onNoneEncoding) => transform(nullish(value), optionFromSelf(to(value)), Option.fromNullable, onNoneEncoding === null ? Option.getOrNull : Option.getOrUndefined);
+export const optionFromNullish = (value, onNoneEncoding) => {
+  const _value = asSchema(value);
+  return transform(nullish(_value), optionFromSelf(typeSchema(_value)), Option.fromNullable, onNoneEncoding === null ? Option.getOrNull : Option.getOrUndefined);
+};
 /**
  * @category Option transformations
  * @since 1.0.0
  */
-export const optionFromOrUndefined = value => transform(orUndefined(value), optionFromSelf(to(value)), Option.fromNullable, Option.getOrUndefined);
-const rightFrom = right => struct({
+export const optionFromOrUndefined = value => {
+  const _value = asSchema(value);
+  return transform(orUndefined(_value), optionFromSelf(typeSchema(_value)), Option.fromNullable, Option.getOrUndefined);
+};
+const rightEncoded = right => struct({
   _tag: literal("Right"),
   right
-}).pipe(description(`RightFrom<${format(right)}>`));
-const leftFrom = left => struct({
+}).annotations({
+  description: `RightEncoded<${format(right)}>`
+});
+const leftEncoded = left => struct({
   _tag: literal("Left"),
   left
-}).pipe(description(`LeftFrom<${format(left)}>`));
-const eitherFrom = (left, right) => union(rightFrom(right), leftFrom(left)).pipe(description(`EitherFrom<${format(left)}, ${format(right)}>`));
+}).annotations({
+  description: `LeftEncoded<${format(left)}>`
+});
+const eitherEncoded = (right, left) => union(rightEncoded(right), leftEncoded(left)).annotations({
+  description: `EitherEncoded<${format(left)}, ${format(right)}>`
+});
 const eitherDecode = input => input._tag === "Left" ? Either.left(input.left) : Either.right(input.right);
-const eitherArbitrary = (left, right) => {
-  const arb = arbitrary.make(eitherFrom(schemaFromArbitrary(left), schemaFromArbitrary(right)));
+const eitherArbitrary = (right, left) => {
+  const arb = arbitrary.make(eitherEncoded(schemaFromArbitrary(right), schemaFromArbitrary(left)));
   return fc => arb(fc).map(eitherDecode);
 };
-const eitherPretty = (left, right) => Either.match({
+const eitherPretty = (right, left) => Either.match({
   onLeft: e => `left(${left(e)})`,
   onRight: a => `right(${right(a)})`
 });
-const eitherParse = (decodeUnknownLeft, parseright) => (u, options, ast) => Either.isEither(u) ? Either.match(u, {
+const eitherParse = (parseRight, decodeUnknownLeft) => (u, options, ast) => Either.isEither(u) ? Either.match(u, {
   onLeft: left => ParseResult.map(decodeUnknownLeft(left, options), Either.left),
-  onRight: right => ParseResult.map(parseright(right, options), Either.right)
-}) : ParseResult.fail(ParseResult.type(ast, u));
+  onRight: right => ParseResult.map(parseRight(right, options), Either.right)
+}) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category Either transformations
  * @since 1.0.0
@@ -2408,18 +2626,18 @@ export const eitherFromSelf = ({
   left,
   right
 }) => {
-  return declare([left, right], (left, right) => eitherParse(ParseResult.decodeUnknown(left), ParseResult.decodeUnknown(right)), (left, right) => eitherParse(ParseResult.encodeUnknown(left), ParseResult.encodeUnknown(right)), {
+  return declare([right, left], (right, left) => eitherParse(ParseResult.decodeUnknown(right), ParseResult.decodeUnknown(left)), (right, left) => eitherParse(ParseResult.encodeUnknown(right), ParseResult.encodeUnknown(left)), {
     description: `Either<${format(left)}, ${format(right)}>`,
     pretty: eitherPretty,
     arbitrary: eitherArbitrary,
-    equivalence: Either.getEquivalence
+    equivalence: (right, left) => Either.getEquivalence(left, right)
   });
 };
-const makeLeftFrom = left => ({
+const makeLeftEncoded = left => ({
   _tag: "Left",
   left
 });
-const makeRightFrom = right => ({
+const makeRightEncoded = right => ({
   _tag: "Right",
   right
 });
@@ -2430,13 +2648,17 @@ const makeRightFrom = right => ({
 export const either = ({
   left,
   right
-}) => transform(eitherFrom(left, right), eitherFromSelf({
-  left: to(left),
-  right: to(right)
-}), eitherDecode, Either.match({
-  onLeft: makeLeftFrom,
-  onRight: makeRightFrom
-}));
+}) => {
+  const _right = asSchema(right);
+  const _left = asSchema(left);
+  return transform(eitherEncoded(_right, _left), eitherFromSelf({
+    left: typeSchema(_left),
+    right: typeSchema(_right)
+  }), eitherDecode, Either.match({
+    onLeft: makeLeftEncoded,
+    onRight: makeRightEncoded
+  }));
+};
 /**
  * @example
  * import * as Schema from "@effect/schema/Schema"
@@ -2451,16 +2673,18 @@ export const eitherFromUnion = ({
   left,
   right
 }) => {
-  const toleft = to(left);
-  const toright = to(right);
-  const fromLeft = transform(left, leftFrom(toleft), makeLeftFrom, l => l.left);
-  const fromRight = transform(right, rightFrom(toright), makeRightFrom, r => r.right);
+  const _right = asSchema(right);
+  const _left = asSchema(left);
+  const toright = typeSchema(_right);
+  const toleft = typeSchema(_left);
+  const fromRight = transform(_right, rightEncoded(toright), makeRightEncoded, r => r.right);
+  const fromLeft = transform(_left, leftEncoded(toleft), makeLeftEncoded, l => l.left);
   return transform(union(fromRight, fromLeft), eitherFromSelf({
     left: toleft,
     right: toright
   }), from => from._tag === "Left" ? Either.left(from.left) : Either.right(from.right), Either.match({
-    onLeft: makeLeftFrom,
-    onRight: makeRightFrom
+    onLeft: makeLeftEncoded,
+    onRight: makeRightEncoded
   }));
 };
 const readonlyMapArbitrary = (key, value) => fc => fc.array(fc.tuple(key(fc), value(fc))).map(as => new Map(as));
@@ -2469,7 +2693,7 @@ const readonlyMapEquivalence = (key, value) => {
   const arrayEquivalence = ReadonlyArray.getEquivalence(Equivalence.make(([ka, va], [kb, vb]) => key(ka, kb) && value(va, vb)));
   return Equivalence.make((a, b) => arrayEquivalence(Array.from(a.entries()), Array.from(b.entries())));
 };
-const readonlyMapParse = decodeUnknown => (u, options, ast) => Predicate.isMap(u) ? ParseResult.map(decodeUnknown(Array.from(u.entries()), options), as => new Map(as)) : ParseResult.fail(ParseResult.type(ast, u));
+const readonlyMapParse = decodeUnknown => (u, options, ast) => Predicate.isMap(u) ? ParseResult.map(decodeUnknown(Array.from(u.entries()), options), as => new Map(as)) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category ReadonlyMap transformations
  * @since 1.0.0
@@ -2492,24 +2716,28 @@ export const readonlyMapFromSelf = ({
 export const readonlyMap = ({
   key,
   value
-}) => transform(array(tuple(key, value)), readonlyMapFromSelf({
-  key: to(key),
-  value: to(value)
-}), as => new Map(as), map => Array.from(map.entries()));
+}) => {
+  const _key = asSchema(key);
+  const _value = asSchema(value);
+  return transform(array(tuple(_key, _value)), readonlyMapFromSelf({
+    key: typeSchema(_key),
+    value: typeSchema(_value)
+  }), as => new Map(as), map => Array.from(map.entries()));
+};
 const readonlySetArbitrary = item => fc => fc.array(item(fc)).map(as => new Set(as));
 const readonlySetPretty = item => set => `new Set([${Array.from(set.values()).map(a => item(a)).join(", ")}])`;
 const readonlySetEquivalence = item => {
   const arrayEquivalence = ReadonlyArray.getEquivalence(item);
   return Equivalence.make((a, b) => arrayEquivalence(Array.from(a.values()), Array.from(b.values())));
 };
-const readonlySetParse = decodeUnknown => (u, options, ast) => Predicate.isSet(u) ? ParseResult.map(decodeUnknown(Array.from(u.values()), options), as => new Set(as)) : ParseResult.fail(ParseResult.type(ast, u));
+const readonlySetParse = decodeUnknown => (u, options, ast) => Predicate.isSet(u) ? ParseResult.map(decodeUnknown(Array.from(u.values()), options), as => new Set(as)) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category ReadonlySet transformations
  * @since 1.0.0
  */
-export const readonlySetFromSelf = item => {
-  return declare([item], item => readonlySetParse(ParseResult.decodeUnknown(array(item))), item => readonlySetParse(ParseResult.encodeUnknown(array(item))), {
-    description: `ReadonlySet<${format(item)}>`,
+export const readonlySetFromSelf = value => {
+  return declare([value], item => readonlySetParse(ParseResult.decodeUnknown(array(item))), item => readonlySetParse(ParseResult.encodeUnknown(array(item))), {
+    description: `ReadonlySet<${format(value)}>`,
     pretty: readonlySetPretty,
     arbitrary: readonlySetArbitrary,
     equivalence: readonlySetEquivalence
@@ -2519,49 +2747,32 @@ export const readonlySetFromSelf = item => {
  * @category ReadonlySet transformations
  * @since 1.0.0
  */
-export const readonlySet = item => transform(array(item), readonlySetFromSelf(to(item)), as => new Set(as), set => Array.from(set));
-const sortedSetArbitrary = (item, ord) => fc => fc.array(item(fc)).map(as => SortedSet.fromIterable(as, ord));
-const sortedSetPretty = item => set => `new SortedSet([${Array.from(SortedSet.values(set)).map(a => item(a)).join(", ")}])`;
-const sortedSetParse = (decodeUnknown, ord) => (u, options, ast) => SortedSet.isSortedSet(u) ? ParseResult.map(decodeUnknown(Array.from(SortedSet.values(u)), options), as => SortedSet.fromIterable(as, ord)) : ParseResult.fail(ParseResult.type(ast, u));
-/**
- * @category SortedSet transformations
- * @since 1.0.0
- */
-export const sortedSetFromSelf = (item, ordA, ordI) => {
-  return declare([item], item => sortedSetParse(ParseResult.decodeUnknown(array(item)), ordA), item => sortedSetParse(ParseResult.encodeUnknown(array(item)), ordI), {
-    description: `SortedSet<${format(item)}>`,
-    pretty: sortedSetPretty,
-    arbitrary: arb => sortedSetArbitrary(arb, ordA),
-    equivalence: () => SortedSet.getEquivalence()
-  });
+export const readonlySet = value => {
+  const _value = asSchema(value);
+  return transform(array(_value), readonlySetFromSelf(typeSchema(_value)), as => new Set(as), set => Array.from(set));
 };
-/**
- * @category SortedSet transformations
- * @since 1.0.0
- */
-export const sortedSet = (item, ordA) => transform(array(item), sortedSetFromSelf(to(item), ordA, ordA), as => SortedSet.fromIterable(as, ordA), set => Array.from(SortedSet.values(set)));
-const bigDecimalPretty = () => val => `BigDecimal(${BigDecimal.format(BigDecimal.normalize(val))})`;
-const bigDecimalArbitrary = () => fc => fc.tuple(fc.bigInt(), fc.integer()).map(([value, scale]) => BigDecimal.make(value, scale));
+const bigDecimalPretty = () => val => `BigDecimal(${_bigDecimal.format(_bigDecimal.normalize(val))})`;
+const bigDecimalArbitrary = () => fc => fc.tuple(fc.bigInt(), fc.integer()).map(([value, scale]) => _bigDecimal.make(value, scale));
 /**
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export const BigDecimalFromSelf = /*#__PURE__*/declare(BigDecimal.isBigDecimal, {
+export const BigDecimalFromSelf = /*#__PURE__*/declare(_bigDecimal.isBigDecimal, {
   identifier: "BigDecimalFromSelf",
   pretty: bigDecimalPretty,
   arbitrary: bigDecimalArbitrary,
-  equivalence: () => BigDecimal.Equivalence
+  equivalence: () => _bigDecimal.Equivalence
 });
-const _BigDecimal = /*#__PURE__*/transformOrFail(string, BigDecimalFromSelf, (num, _, ast) => BigDecimal.fromString(num).pipe(Option.match({
-  onNone: () => ParseResult.fail(ParseResult.type(ast, num)),
-  onSome: val => ParseResult.succeed(BigDecimal.normalize(val))
-})), val => ParseResult.succeed(BigDecimal.format(BigDecimal.normalize(val)))).pipe( /*#__PURE__*/identifier("BigDecimal"));
-export {
 /**
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-_BigDecimal as BigDecimal };
+export const BigDecimal = /*#__PURE__*/transformOrFail(string, BigDecimalFromSelf, (num, _, ast) => _bigDecimal.fromString(num).pipe(Option.match({
+  onNone: () => ParseResult.fail(new ParseResult.Type(ast, num)),
+  onSome: val => ParseResult.succeed(_bigDecimal.normalize(val))
+})), val => ParseResult.succeed(_bigDecimal.format(_bigDecimal.normalize(val)))).annotations({
+  identifier: "BigDecimal"
+});
 /**
  * A schema that transforms a `number` into a `BigDecimal`.
  * When encoding, this Schema will produce incorrect results if the BigDecimal exceeds the 64-bit range of a number.
@@ -2569,7 +2780,9 @@ _BigDecimal as BigDecimal };
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-export const BigDecimalFromNumber = /*#__PURE__*/transformOrFail(number, BigDecimalFromSelf, num => ParseResult.succeed(BigDecimal.fromNumber(num)), val => ParseResult.succeed(BigDecimal.unsafeToNumber(val))).pipe( /*#__PURE__*/identifier("BigDecimalFromNumber"));
+export const BigDecimalFromNumber = /*#__PURE__*/transformOrFail(number, BigDecimalFromSelf, num => ParseResult.succeed(_bigDecimal.fromNumber(num)), val => ParseResult.succeed(_bigDecimal.unsafeToNumber(val))).annotations({
+  identifier: "BigDecimalFromNumber"
+});
 /**
  * @category type id
  * @since 1.0.0
@@ -2579,15 +2792,15 @@ export const GreaterThanBigDecimalTypeId = /*#__PURE__*/Symbol.for("@effect/sche
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const greaterThanBigDecimal = (min, options) => self => self.pipe(filter(a => BigDecimal.greaterThan(a, min), {
+export const greaterThanBigDecimal = (min, annotations) => self => self.pipe(filter(a => _bigDecimal.greaterThan(a, min), {
   typeId: {
     id: GreaterThanBigDecimalTypeId,
     annotation: {
       min
     }
   },
-  description: `a BigDecimal greater than ${BigDecimal.format(min)}`,
-  ...options
+  description: `a BigDecimal greater than ${_bigDecimal.format(min)}`,
+  ...annotations
 }));
 /**
  * @category type id
@@ -2598,15 +2811,15 @@ export const GreaterThanOrEqualToBigDecimalTypeId = /*#__PURE__*/Symbol.for("@ef
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const greaterThanOrEqualToBigDecimal = (min, options) => self => self.pipe(filter(a => BigDecimal.greaterThanOrEqualTo(a, min), {
+export const greaterThanOrEqualToBigDecimal = (min, annotations) => self => self.pipe(filter(a => _bigDecimal.greaterThanOrEqualTo(a, min), {
   typeId: {
     id: GreaterThanOrEqualToBigDecimalTypeId,
     annotation: {
       min
     }
   },
-  description: `a BigDecimal greater than or equal to ${BigDecimal.format(min)}`,
-  ...options
+  description: `a BigDecimal greater than or equal to ${_bigDecimal.format(min)}`,
+  ...annotations
 }));
 /**
  * @category type id
@@ -2617,15 +2830,15 @@ export const LessThanBigDecimalTypeId = /*#__PURE__*/Symbol.for("@effect/schema/
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const lessThanBigDecimal = (max, options) => self => self.pipe(filter(a => BigDecimal.lessThan(a, max), {
+export const lessThanBigDecimal = (max, annotations) => self => self.pipe(filter(a => _bigDecimal.lessThan(a, max), {
   typeId: {
     id: LessThanBigDecimalTypeId,
     annotation: {
       max
     }
   },
-  description: `a BigDecimal less than ${BigDecimal.format(max)}`,
-  ...options
+  description: `a BigDecimal less than ${_bigDecimal.format(max)}`,
+  ...annotations
 }));
 /**
  * @category type id
@@ -2636,15 +2849,15 @@ export const LessThanOrEqualToBigDecimalTypeId = /*#__PURE__*/Symbol.for("@effec
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const lessThanOrEqualToBigDecimal = (max, options) => self => self.pipe(filter(a => BigDecimal.lessThanOrEqualTo(a, max), {
+export const lessThanOrEqualToBigDecimal = (max, annotations) => self => self.pipe(filter(a => _bigDecimal.lessThanOrEqualTo(a, max), {
   typeId: {
     id: LessThanOrEqualToBigDecimalTypeId,
     annotation: {
       max
     }
   },
-  description: `a BigDecimal less than or equal to ${BigDecimal.format(max)}`,
-  ...options
+  description: `a BigDecimal less than or equal to ${_bigDecimal.format(max)}`,
+  ...annotations
 }));
 /**
  * @category type id
@@ -2655,13 +2868,13 @@ export const PositiveBigDecimalTypeId = /*#__PURE__*/Symbol.for("@effect/schema/
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const positiveBigDecimal = options => self => self.pipe(filter(a => BigDecimal.isPositive(a), {
+export const positiveBigDecimal = annotations => self => self.pipe(filter(a => _bigDecimal.isPositive(a), {
   typeId: {
     id: PositiveBigDecimalTypeId,
     annotation: {}
   },
   description: `a positive BigDecimal`,
-  ...options
+  ...annotations
 }));
 /**
  * @category BigDecimal constructors
@@ -2680,13 +2893,13 @@ export const NonNegativeBigDecimalTypeId = /*#__PURE__*/Symbol.for("@effect/sche
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const nonNegativeBigDecimal = options => self => self.pipe(filter(a => a.value >= 0n, {
+export const nonNegativeBigDecimal = annotations => self => self.pipe(filter(a => a.value >= 0n, {
   typeId: {
     id: NonNegativeBigDecimalTypeId,
     annotation: {}
   },
   description: `a non-negative BigDecimal`,
-  ...options
+  ...annotations
 }));
 /**
  * @category BigDecimal constructors
@@ -2705,13 +2918,13 @@ export const NegativeBigDecimalTypeId = /*#__PURE__*/Symbol.for("@effect/schema/
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const negativeBigDecimal = options => self => self.pipe(filter(a => BigDecimal.isNegative(a), {
+export const negativeBigDecimal = annotations => self => self.pipe(filter(a => _bigDecimal.isNegative(a), {
   typeId: {
     id: NegativeBigDecimalTypeId,
     annotation: {}
   },
   description: `a negative BigDecimal`,
-  ...options
+  ...annotations
 }));
 /**
  * @category BigDecimal constructors
@@ -2730,13 +2943,13 @@ export const NonPositiveBigDecimalTypeId = /*#__PURE__*/Symbol.for("@effect/sche
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const nonPositiveBigDecimal = options => self => self.pipe(filter(a => a.value <= 0n, {
+export const nonPositiveBigDecimal = annotations => self => self.pipe(filter(a => a.value <= 0n, {
   typeId: {
     id: NonPositiveBigDecimalTypeId,
     annotation: {}
   },
   description: `a non-positive BigDecimal`,
-  ...options
+  ...annotations
 }));
 /**
  * @category BigDecimal constructors
@@ -2755,7 +2968,7 @@ export const BetweenBigDecimalTypeId = /*#__PURE__*/Symbol.for("@effect/schema/T
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const betweenBigDecimal = (minimum, maximum, options) => self => self.pipe(filter(a => BigDecimal.between(a, {
+export const betweenBigDecimal = (minimum, maximum, annotations) => self => self.pipe(filter(a => _bigDecimal.between(a, {
   minimum,
   maximum
 }), {
@@ -2766,8 +2979,8 @@ export const betweenBigDecimal = (minimum, maximum, options) => self => self.pip
       minimum
     }
   },
-  description: `a BigDecimal between ${BigDecimal.format(minimum)} and ${BigDecimal.format(maximum)}`,
-  ...options
+  description: `a BigDecimal between ${_bigDecimal.format(minimum)} and ${_bigDecimal.format(maximum)}`,
+  ...annotations
 }));
 /**
  * Clamps a `BigDecimal` between a minimum and a maximum value.
@@ -2775,7 +2988,7 @@ export const betweenBigDecimal = (minimum, maximum, options) => self => self.pip
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-export const clampBigDecimal = (minimum, maximum) => self => transform(self, self.pipe(to, betweenBigDecimal(minimum, maximum)), self => BigDecimal.clamp(self, {
+export const clampBigDecimal = (minimum, maximum) => self => transform(self, self.pipe(typeSchema, betweenBigDecimal(minimum, maximum)), self => _bigDecimal.clamp(self, {
   minimum,
   maximum
 }), identity, {
@@ -2787,19 +3000,19 @@ export const clampBigDecimal = (minimum, maximum) => self => transform(self, sel
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-export const negateBigDecimal = self => transform(self, to(self), self => BigDecimal.negate(self), self => BigDecimal.negate(self), {
+export const negateBigDecimal = self => transform(self, typeSchema(self), self => _bigDecimal.negate(self), self => _bigDecimal.negate(self), {
   strict: false
 });
 const chunkArbitrary = item => fc => fc.array(item(fc)).map(Chunk.fromIterable);
 const chunkPretty = item => c => `Chunk(${Chunk.toReadonlyArray(c).map(item).join(", ")})`;
-const chunkParse = decodeUnknown => (u, options, ast) => Chunk.isChunk(u) ? Chunk.isEmpty(u) ? ParseResult.succeed(Chunk.empty()) : ParseResult.map(decodeUnknown(Chunk.toReadonlyArray(u), options), Chunk.fromIterable) : ParseResult.fail(ParseResult.type(ast, u));
+const chunkParse = decodeUnknown => (u, options, ast) => Chunk.isChunk(u) ? Chunk.isEmpty(u) ? ParseResult.succeed(Chunk.empty()) : ParseResult.map(decodeUnknown(Chunk.toReadonlyArray(u), options), Chunk.fromIterable) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category Chunk transformations
  * @since 1.0.0
  */
-export const chunkFromSelf = item => {
-  return declare([item], item => chunkParse(ParseResult.decodeUnknown(array(item))), item => chunkParse(ParseResult.encodeUnknown(array(item))), {
-    description: `Chunk<${format(item)}>`,
+export const chunkFromSelf = value => {
+  return declare([value], item => chunkParse(ParseResult.decodeUnknown(array(item))), item => chunkParse(ParseResult.encodeUnknown(array(item))), {
+    description: `Chunk<${format(value)}>`,
     pretty: chunkPretty,
     arbitrary: chunkArbitrary,
     equivalence: Chunk.getEquivalence
@@ -2809,11 +3022,14 @@ export const chunkFromSelf = item => {
  * @category Chunk transformations
  * @since 1.0.0
  */
-export const chunk = item => transform(array(item), chunkFromSelf(to(item)), as => as.length === 0 ? Chunk.empty() : Chunk.fromIterable(as), Chunk.toReadonlyArray);
+export const chunk = value => {
+  const _value = asSchema(value);
+  return transform(array(_value), chunkFromSelf(typeSchema(_value)), as => as.length === 0 ? Chunk.empty() : Chunk.fromIterable(as), Chunk.toReadonlyArray);
+};
 const toData = a => Array.isArray(a) ? Data.array(a) : Data.struct(a);
 const dataArbitrary = item => fc => item(fc).map(toData);
 const dataPretty = item => d => `Data(${item(d)})`;
-const dataParse = decodeUnknown => (u, options, ast) => Equal.isEqual(u) ? ParseResult.map(decodeUnknown(u, options), toData) : ParseResult.fail(ParseResult.type(ast, u));
+const dataParse = decodeUnknown => (u, options, ast) => Equal.isEqual(u) ? ParseResult.map(decodeUnknown(u, options), toData) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category Data transformations
  * @since 1.0.0
@@ -2829,145 +3045,238 @@ export const dataFromSelf = item => {
  * @category Data transformations
  * @since 1.0.0
  */
-export const data = item => transform(item, dataFromSelf(to(item)), toData, a => Array.isArray(a) ? Array.from(a) : Object.assign({}, a), {
+export const data = item => transform(item, dataFromSelf(typeSchema(item)), toData, a => Array.isArray(a) ? Array.from(a) : Object.assign({}, a), {
   strict: false
 });
+const TAG = "_tag";
 /**
  * @category classes
  * @since 1.0.0
  */
-export const Class = () => fields => makeClass(struct(fields), fields, Data.Class);
+export const Class = identifier => (fields, annotations) => makeClass({
+  kind: "Class",
+  identifier,
+  fields,
+  Base: Data.Class,
+  annotations
+});
 /**
  * @category classes
  * @since 1.0.0
  */
-export const TaggedClass = () => (tag, fields) => {
-  const fieldsWithTag = {
-    ...fields,
-    _tag: literal(tag)
-  };
-  return makeClass(struct(fieldsWithTag), fieldsWithTag, Data.Class, {
-    _tag: tag
+export const TaggedClass = identifier => (tag, fields, annotations) => {
+  return makeClass({
+    kind: "TaggedClass",
+    identifier: identifier ?? tag,
+    fields: extendFields({
+      [TAG]: literal(tag)
+    }, fields),
+    Base: Data.Class,
+    tag: {
+      [TAG]: tag
+    },
+    annotations
   });
 };
 /**
  * @category classes
  * @since 1.0.0
  */
-export const TaggedError = () => (tag, fields) => {
-  const fieldsWithTag = {
-    ...fields,
-    _tag: literal(tag)
-  };
-  return makeClass(struct(fieldsWithTag), fieldsWithTag, Data.Error, {
-    _tag: tag
+export const TaggedError = identifier => (tag, fields, annotations) => {
+  return makeClass({
+    kind: "TaggedError",
+    identifier: identifier ?? tag,
+    fields: extendFields({
+      [TAG]: literal(tag)
+    }, fields),
+    Base: Data.Error,
+    tag: {
+      [TAG]: tag
+    },
+    annotations
   });
 };
 /**
  * @category classes
  * @since 1.0.0
  */
-export const TaggedRequest = () => (tag, Failure, Success, fields) => {
+export const TaggedRequest = identifier => (tag, Failure, Success, fields, annotations) => {
   class SerializableRequest extends Request.Class {
-    get [InternalSerializable.symbol]() {
+    get [_serializable.symbol]() {
       return this.constructor;
     }
-    get [InternalSerializable.symbolResult]() {
+    get [_serializable.symbolResult]() {
       return {
         Failure,
         Success
       };
     }
   }
-  const fieldsWithTag = {
-    ...fields,
-    _tag: literal(tag)
-  };
-  return makeClass(struct(fieldsWithTag), fieldsWithTag, SerializableRequest, {
-    _tag: tag
+  return makeClass({
+    kind: "TaggedRequest",
+    identifier: identifier ?? tag,
+    fields: extendFields({
+      [TAG]: literal(tag)
+    }, fields),
+    Base: SerializableRequest,
+    tag: {
+      [TAG]: tag
+    },
+    annotations
   });
 };
-const makeClass = (selfSchema, selfFields, Base, tag) => {
-  const validate = Parser.validateSync(selfSchema);
-  return class extends Base {
-    constructor(props, disableValidation = false, outer = true) {
+const extendFields = (a, b) => {
+  const out = {
+    ...a
+  };
+  for (const name of _util.ownKeys(b)) {
+    if (name in a) {
+      throw new Error(AST.getDuplicatePropertySignatureErrorMessage(name));
+    }
+    out[name] = b[name];
+  }
+  return out;
+};
+const makeClass = ({
+  Base,
+  annotations,
+  fields,
+  fromSchema,
+  identifier,
+  kind,
+  tag
+}) => {
+  const schema = fromSchema ?? struct(fields);
+  const validate = Parser.validateSync(schema);
+  const cls = class extends Base {
+    constructor(props = {}, disableValidation = false) {
       if (tag !== undefined) {
-        props = outer ? {
+        props = {
           ...props,
           ...tag
-        } : {
-          ...tag,
-          ...props
         };
       }
       if (disableValidation !== true) {
         props = validate(props);
       }
-      super(props, true, false);
+      super(props, true);
+      const classSymbol = Symbol.for(`@effect/schema/${kind}/${this.constructor.identifier}`);
+      Object.defineProperty(this, classSymbol, {
+        value: classSymbol
+      });
     }
-    static [TypeId] = InternalSchema.variance;
+    static [TypeId] = _schema.variance;
+    static get identifier() {
+      return identifier || this.name;
+    }
+    static get classSymbol() {
+      return Symbol.for(`@effect/schema/${kind}/${this.identifier}`);
+    }
+    // get [classSymbol]() {
+    //   return classSymbol
+    // }
     toString() {
       return Pretty.make(this.constructor)(this);
     }
     static pipe() {
       return pipeArguments(this, arguments);
     }
+    static annotations(annotations) {
+      return make(this.ast).annotations(annotations);
+    }
+    static fields = fields;
     static get ast() {
-      const toSchema = to(selfSchema);
+      const toSchema = typeSchema(schema);
+      const guard = Parser.is(toSchema);
+      const fallbackInstanceOf = u => Predicate.hasProperty(u, this.classSymbol) && guard(u);
+      const identifier = this.identifier;
       const encode = Parser.encodeUnknown(toSchema);
       const pretty = Pretty.make(toSchema);
       const arb = arbitrary.make(toSchema);
       const equivalence = _equivalence.make(toSchema);
-      const declaration = declare([], () => (input, _, ast) => input instanceof this ? ParseResult.succeed(input) : ParseResult.fail(ParseResult.type(ast, input)), () => (input, _, ast) => input instanceof this ? ParseResult.succeed(input) : ParseResult.mapError(ParseResult.map(encode(input), props => new this(props, true)), () => ParseResult.type(ast, input)), {
-        identifier: this.name,
-        title: this.name,
-        description: `an instance of ${this.name}`,
-        pretty: () => self => `${self.constructor.name}(${pretty(self)})`,
+      const declaration = declare([], () => (input, _, ast) => input instanceof this || fallbackInstanceOf(input) ? ParseResult.succeed(input) : ParseResult.fail(new ParseResult.Type(ast, input)), () => (input, options) => input instanceof this ? ParseResult.succeed(input) : ParseResult.map(encode(input, options), props => new this(props, true)), {
+        identifier,
+        title: identifier,
+        description: `an instance of ${identifier}`,
+        pretty: () => self => `${identifier}(${pretty(self)})`,
         arbitrary: () => fc => arb(fc).map(props => new this(props)),
-        equivalence: () => equivalence
+        equivalence: () => equivalence,
+        [AST.SurrogateAnnotationId]: toSchema.ast,
+        ...annotations
       });
-      const transformation = transform(selfSchema, declaration, input => new this(input, true), identity);
+      const transformation = transform(schema, declaration, input => new this(input, true), identity);
       return transformation.ast;
     }
-    static struct = selfSchema;
-    static extend() {
-      return fields => {
-        const newFields = {
-          ...selfFields,
-          ...fields
-        };
-        return makeClass(struct(newFields), newFields, this, "_tag" in fields ? undefined : tag);
+    static struct = schema;
+    static extend(identifier) {
+      return (newFields, annotations) => {
+        const extendedFields = extendFields(fields, newFields);
+        return makeClass({
+          kind,
+          identifier,
+          fields: extendedFields,
+          Base: this,
+          tag,
+          annotations
+        });
       };
     }
-    static transformOrFail() {
-      return (fields, decode, encode) => {
-        const newFields = {
-          ...selfFields,
-          ...fields
-        };
-        return makeClass(transformOrFail(selfSchema, to(struct(newFields)), decode, encode), newFields, this, "_tag" in fields ? undefined : tag);
+    static transformOrFail(identifier) {
+      return (newFields, decode, encode, annotations) => {
+        const transformedFields = extendFields(fields, newFields);
+        return makeClass({
+          kind,
+          identifier,
+          fromSchema: transformOrFail(schema, typeSchema(struct(transformedFields)), decode, encode),
+          fields: transformedFields,
+          Base: this,
+          tag,
+          annotations
+        });
       };
     }
-    static transformOrFailFrom() {
-      return (fields, decode, encode) => {
-        const newFields = {
-          ...selfFields,
-          ...fields
-        };
-        return makeClass(transformOrFail(from(selfSchema), struct(newFields), decode, encode), newFields, this, "_tag" in fields ? undefined : tag);
+    static transformOrFailFrom(identifier) {
+      return (newFields, decode, encode, annotations) => {
+        const transformedFields = extendFields(fields, newFields);
+        return makeClass({
+          kind,
+          identifier,
+          fromSchema: transformOrFail(encodedSchema(schema), struct(transformedFields), decode, encode),
+          fields: transformedFields,
+          Base: this,
+          tag,
+          annotations
+        });
+      };
+    }
+  };
+  return class extends cls {
+    constructor(props = {}, disableValidation = false) {
+      const p = {
+        ...props
       };
+      Object.entries(fields).forEach(([k, v]) => {
+        if (p[k] === undefined && v.ast._tag === "PropertySignatureDeclaration" && v.ast.__defaultConstructor) {
+          p[k] = v.ast.__defaultConstructor();
+        }
+      });
+      super(p, disableValidation);
     }
   };
 };
-const FiberIdCompositeFrom = /*#__PURE__*/struct({
+const FiberIdCompositeEncoded = /*#__PURE__*/struct({
   _tag: literal("Composite"),
-  left: suspend(() => FiberIdFrom),
-  right: suspend(() => FiberIdFrom)
-}).pipe( /*#__PURE__*/identifier("FiberIdCompositeFrom"));
-const FiberIdNoneFrom = /*#__PURE__*/struct({
+  left: suspend(() => FiberIdEncoded),
+  right: suspend(() => FiberIdEncoded)
+}).annotations({
+  identifier: "FiberIdCompositeEncoded"
+});
+const FiberIdNoneEncoded = /*#__PURE__*/struct({
   _tag: literal("None")
-}).pipe( /*#__PURE__*/identifier("FiberIdNoneFrom"));
-const FiberIdRuntimeFrom = /*#__PURE__*/struct({
+}).annotations({
+  identifier: "FiberIdNoneEncoded"
+});
+const FiberIdRuntimeEncoded = /*#__PURE__*/struct({
   _tag: literal("Runtime"),
   id: Int.pipe(nonNegative({
     title: "id",
@@ -2977,9 +3286,13 @@ const FiberIdRuntimeFrom = /*#__PURE__*/struct({
     title: "startTimeMillis",
     description: "startTimeMillis"
   }))
-}).pipe( /*#__PURE__*/identifier("FiberIdRuntimeFrom"));
-const FiberIdFrom = /*#__PURE__*/union(FiberIdCompositeFrom, FiberIdNoneFrom, FiberIdRuntimeFrom).pipe( /*#__PURE__*/identifier("FiberIdFrom"));
-const fiberIdFromArbitrary = /*#__PURE__*/arbitrary.make(FiberIdFrom);
+}).annotations({
+  identifier: "FiberIdRuntimeEncoded"
+});
+const FiberIdEncoded = /*#__PURE__*/union(FiberIdCompositeEncoded, FiberIdNoneEncoded, FiberIdRuntimeEncoded).annotations({
+  identifier: "FiberIdEncoded"
+});
+const fiberIdFromArbitrary = /*#__PURE__*/arbitrary.make(FiberIdEncoded);
 const fiberIdArbitrary = fc => fiberIdFromArbitrary(fc).map(fiberIdDecode);
 const fiberIdPretty = fiberId => {
   switch (fiberId._tag) {
@@ -2995,7 +3308,7 @@ const fiberIdPretty = fiberId => {
  * @category FiberId constructors
  * @since 1.0.0
  */
-export const FiberIdFromSelf = /*#__PURE__*/declare(FiberId.isFiberId, {
+export const FiberIdFromSelf = /*#__PURE__*/declare(_fiberId.isFiberId, {
   identifier: "FiberIdFromSelf",
   pretty: () => fiberIdPretty,
   arbitrary: () => fiberIdArbitrary
@@ -3003,11 +3316,11 @@ export const FiberIdFromSelf = /*#__PURE__*/declare(FiberId.isFiberId, {
 const fiberIdDecode = input => {
   switch (input._tag) {
     case "Composite":
-      return FiberId.composite(fiberIdDecode(input.left), fiberIdDecode(input.right));
+      return _fiberId.composite(fiberIdDecode(input.left), fiberIdDecode(input.right));
     case "None":
-      return FiberId.none;
+      return _fiberId.none;
     case "Runtime":
-      return FiberId.runtime(input.id, input.startTimeMillis);
+      return _fiberId.runtime(input.id, input.startTimeMillis);
   }
 };
 const fiberIdEncode = input => {
@@ -3030,45 +3343,47 @@ const fiberIdEncode = input => {
       };
   }
 };
-const _FiberId = /*#__PURE__*/transform(FiberIdFrom, FiberIdFromSelf, fiberIdDecode, fiberIdEncode).pipe( /*#__PURE__*/identifier("FiberId"));
-export {
 /**
  * @category FiberId transformations
  * @since 1.0.0
  */
-_FiberId as FiberId };
-const causeDieFrom = defect => struct({
+export const FiberId = /*#__PURE__*/transform(FiberIdEncoded, FiberIdFromSelf, fiberIdDecode, fiberIdEncode).annotations({
+  identifier: "FiberId"
+});
+const causeDieEncoded = defect => struct({
   _tag: literal("Die"),
   defect
 });
-const CauseEmptyFrom = /*#__PURE__*/struct({
+const CauseEmptyEncoded = /*#__PURE__*/struct({
   _tag: /*#__PURE__*/literal("Empty")
 });
-const causeFailFrom = error => struct({
+const causeFailEncoded = error => struct({
   _tag: literal("Fail"),
   error
 });
-const CauseInterruptFrom = /*#__PURE__*/struct({
+const CauseInterruptEncoded = /*#__PURE__*/struct({
   _tag: /*#__PURE__*/literal("Interrupt"),
-  fiberId: FiberIdFrom
+  fiberId: FiberIdEncoded
 });
-const causeParallelFrom = causeFrom => struct({
+const causeParallelEncoded = causeEncoded => struct({
   _tag: literal("Parallel"),
-  left: causeFrom,
-  right: causeFrom
+  left: causeEncoded,
+  right: causeEncoded
 });
-const causeSequentialFrom = causeFrom => struct({
+const causeSequentialEncoded = causeEncoded => struct({
   _tag: literal("Sequential"),
-  left: causeFrom,
-  right: causeFrom
+  left: causeEncoded,
+  right: causeEncoded
 });
-const causeFrom = (error, defect) => {
+const causeEncoded = (error, defect) => {
   const recur = suspend(() => out);
-  const out = union(causeDieFrom(defect), CauseEmptyFrom, causeFailFrom(error), CauseInterruptFrom, causeParallelFrom(recur), causeSequentialFrom(recur)).pipe(description(`CauseFrom<${format(error)}>`));
+  const out = union(causeDieEncoded(defect), CauseEmptyEncoded, causeFailEncoded(error), CauseInterruptEncoded, causeParallelEncoded(recur), causeSequentialEncoded(recur)).annotations({
+    description: `CauseEncoded<${format(error)}>`
+  });
   return out;
 };
 const causeArbitrary = (error, defect) => {
-  const arb = arbitrary.make(causeFrom(schemaFromArbitrary(error), schemaFromArbitrary(defect)));
+  const arb = arbitrary.make(causeEncoded(schemaFromArbitrary(error), schemaFromArbitrary(defect)));
   return fc => arb(fc).map(causeDecode);
 };
 const causePretty = error => cause => {
@@ -3090,7 +3405,7 @@ const causePretty = error => cause => {
   };
   return f(cause);
 };
-const causeParse = decodeUnknown => (u, options, ast) => Cause.isCause(u) ? ParseResult.map(decodeUnknown(causeEncode(u), options), causeDecode) : ParseResult.fail(ParseResult.type(ast, u));
+const causeParse = decodeUnknown => (u, options, ast) => Cause.isCause(u) ? ParseResult.map(decodeUnknown(causeEncode(u), options), causeDecode) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category Cause transformations
  * @since 1.0.0
@@ -3099,7 +3414,7 @@ export const causeFromSelf = ({
   defect = unknown,
   error
 }) => {
-  return declare([error, defect], (error, defect) => causeParse(ParseResult.decodeUnknown(causeFrom(error, defect))), (error, defect) => causeParse(ParseResult.encodeUnknown(causeFrom(error, defect))), {
+  return declare([error, defect], (error, defect) => causeParse(ParseResult.decodeUnknown(causeEncoded(error, defect))), (error, defect) => causeParse(ParseResult.encodeUnknown(causeEncoded(error, defect))), {
     description: `Cause<${format(error)}>`,
     pretty: causePretty,
     arbitrary: causeArbitrary
@@ -3169,19 +3484,22 @@ const causeDefectPretty = /*#__PURE__*/transform(unknown, unknown, identity, def
 export const cause = ({
   defect = causeDefectPretty,
   error
-}) => transform(causeFrom(error, defect), causeFromSelf({
-  error: to(error),
-  defect: to(defect)
-}), causeDecode, causeEncode);
-const exitFailureFrom = (error, defect) => struct({
+}) => {
+  const _error = asSchema(error);
+  return transform(causeEncoded(_error, defect), causeFromSelf({
+    error: typeSchema(_error),
+    defect: typeSchema(defect)
+  }), causeDecode, causeEncode);
+};
+const exitFailureEncoded = (error, defect) => struct({
   _tag: literal("Failure"),
-  cause: causeFrom(error, defect)
+  cause: causeEncoded(error, defect)
 });
-const exitSuccessFrom = value => struct({
+const exitSuccessEncoded = value => struct({
   _tag: literal("Success"),
   value
 });
-const exitFrom = (error, value, defect) => union(exitFailureFrom(error, defect), exitSuccessFrom(value));
+const exitEncoded = (value, error, defect) => union(exitFailureEncoded(error, defect), exitSuccessEncoded(value));
 const exitDecode = input => {
   switch (input._tag) {
     case "Failure":
@@ -3190,15 +3508,15 @@ const exitDecode = input => {
       return Exit.succeed(input.value);
   }
 };
-const exitArbitrary = (error, value, defect) => {
-  const arb = arbitrary.make(exitFrom(schemaFromArbitrary(error), schemaFromArbitrary(value), schemaFromArbitrary(defect)));
+const exitArbitrary = (value, error, defect) => {
+  const arb = arbitrary.make(exitEncoded(schemaFromArbitrary(value), schemaFromArbitrary(error), schemaFromArbitrary(defect)));
   return fc => arb(fc).map(exitDecode);
 };
-const exitPretty = (error, value) => exit => exit._tag === "Failure" ? `Exit.failCause(${causePretty(error)(exit.cause)})` : `Exit.succeed(${value(exit.value)})`;
-const exitParse = (decodeUnknownCause, decodeUnknownValue) => (u, options, ast) => Exit.isExit(u) ? Exit.match(u, {
+const exitPretty = (value, error) => exit => exit._tag === "Failure" ? `Exit.failCause(${causePretty(error)(exit.cause)})` : `Exit.succeed(${value(exit.value)})`;
+const exitParse = (decodeUnknownValue, decodeUnknownCause) => (u, options, ast) => Exit.isExit(u) ? Exit.match(u, {
   onFailure: cause => ParseResult.map(decodeUnknownCause(cause, options), Exit.failCause),
   onSuccess: value => ParseResult.map(decodeUnknownValue(value, options), Exit.succeed)
-}) : ParseResult.fail(ParseResult.type(ast, u));
+}) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category Exit transformations
  * @since 1.0.0
@@ -3207,13 +3525,13 @@ export const exitFromSelf = ({
   defect = unknown,
   failure,
   success
-}) => declare([failure, success, defect], (failure, success, defect) => exitParse(ParseResult.decodeUnknown(causeFromSelf({
+}) => declare([success, failure, defect], (success, failure, defect) => exitParse(ParseResult.decodeUnknown(success), ParseResult.decodeUnknown(causeFromSelf({
   error: failure,
   defect
-})), ParseResult.decodeUnknown(success)), (failure, success, defect) => exitParse(ParseResult.encodeUnknown(causeFromSelf({
+}))), (success, failure, defect) => exitParse(ParseResult.encodeUnknown(success), ParseResult.encodeUnknown(causeFromSelf({
   error: failure,
   defect
-})), ParseResult.encodeUnknown(success)), {
+}))), {
   description: `Exit<${format(failure)}, ${format(success)}>`,
   pretty: exitPretty,
   arbitrary: exitArbitrary
@@ -3226,31 +3544,35 @@ export const exit = ({
   defect = causeDefectPretty,
   failure,
   success
-}) => transform(exitFrom(failure, success, defect), exitFromSelf({
-  failure: to(failure),
-  success: to(success),
-  defect: to(defect)
-}), exitDecode, exit => exit._tag === "Failure" ? {
-  _tag: "Failure",
-  cause: exit.cause
-} : {
-  _tag: "Success",
-  value: exit.value
-});
+}) => {
+  const _success = asSchema(success);
+  const _failure = asSchema(failure);
+  return transform(exitEncoded(_success, _failure, defect), exitFromSelf({
+    failure: typeSchema(_failure),
+    success: typeSchema(_success),
+    defect: typeSchema(defect)
+  }), exitDecode, exit => exit._tag === "Failure" ? {
+    _tag: "Failure",
+    cause: exit.cause
+  } : {
+    _tag: "Success",
+    value: exit.value
+  });
+};
 const hashSetArbitrary = item => fc => fc.array(item(fc)).map(as => HashSet.fromIterable(as));
 const hashSetPretty = item => set => `HashSet(${Array.from(set).map(a => item(a)).join(", ")})`;
 const hashSetEquivalence = item => {
   const arrayEquivalence = ReadonlyArray.getEquivalence(item);
   return Equivalence.make((a, b) => arrayEquivalence(Array.from(a), Array.from(b)));
 };
-const hashSetParse = decodeUnknown => (u, options, ast) => HashSet.isHashSet(u) ? ParseResult.map(decodeUnknown(Array.from(u), options), as => HashSet.fromIterable(as)) : ParseResult.fail(ParseResult.type(ast, u));
+const hashSetParse = decodeUnknown => (u, options, ast) => HashSet.isHashSet(u) ? ParseResult.map(decodeUnknown(Array.from(u), options), as => HashSet.fromIterable(as)) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category HashSet transformations
  * @since 1.0.0
  */
-export const hashSetFromSelf = item => {
-  return declare([item], item => hashSetParse(ParseResult.decodeUnknown(array(item))), item => hashSetParse(ParseResult.encodeUnknown(array(item))), {
-    description: `HashSet<${format(item)}>`,
+export const hashSetFromSelf = value => {
+  return declare([value], item => hashSetParse(ParseResult.decodeUnknown(array(item))), item => hashSetParse(ParseResult.encodeUnknown(array(item))), {
+    description: `HashSet<${format(value)}>`,
     pretty: hashSetPretty,
     arbitrary: hashSetArbitrary,
     equivalence: hashSetEquivalence
@@ -3260,14 +3582,17 @@ export const hashSetFromSelf = item => {
  * @category HashSet transformations
  * @since 1.0.0
  */
-export const hashSet = item => transform(array(item), hashSetFromSelf(to(item)), as => HashSet.fromIterable(as), set => Array.from(set));
+export const hashSet = value => {
+  const _value = asSchema(value);
+  return transform(array(_value), hashSetFromSelf(typeSchema(_value)), as => HashSet.fromIterable(as), set => Array.from(set));
+};
 const hashMapArbitrary = (key, value) => fc => fc.array(fc.tuple(key(fc), value(fc))).map(as => HashMap.fromIterable(as));
 const hashMapPretty = (key, value) => map => `HashMap([${Array.from(map).map(([k, v]) => `[${key(k)}, ${value(v)}]`).join(", ")}])`;
 const hashMapEquivalence = (key, value) => {
   const arrayEquivalence = ReadonlyArray.getEquivalence(Equivalence.make(([ka, va], [kb, vb]) => key(ka, kb) && value(va, vb)));
   return Equivalence.make((a, b) => arrayEquivalence(Array.from(a), Array.from(b)));
 };
-const hashMapParse = decodeUnknown => (u, options, ast) => HashMap.isHashMap(u) ? ParseResult.map(decodeUnknown(Array.from(u), options), as => HashMap.fromIterable(as)) : ParseResult.fail(ParseResult.type(ast, u));
+const hashMapParse = decodeUnknown => (u, options, ast) => HashMap.isHashMap(u) ? ParseResult.map(decodeUnknown(Array.from(u), options), as => HashMap.fromIterable(as)) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category HashMap transformations
  * @since 1.0.0
@@ -3290,24 +3615,28 @@ export const hashMapFromSelf = ({
 export const hashMap = ({
   key,
   value
-}) => transform(array(tuple(key, value)), hashMapFromSelf({
-  key: to(key),
-  value: to(value)
-}), as => HashMap.fromIterable(as), map => Array.from(map));
+}) => {
+  const _key = asSchema(key);
+  const _value = asSchema(value);
+  return transform(array(tuple(_key, _value)), hashMapFromSelf({
+    key: typeSchema(_key),
+    value: typeSchema(_value)
+  }), as => HashMap.fromIterable(as), map => Array.from(map));
+};
 const listArbitrary = item => fc => fc.array(item(fc)).map(as => List.fromIterable(as));
 const listPretty = item => set => `List(${Array.from(set).map(a => item(a)).join(", ")})`;
 const listEquivalence = item => {
   const arrayEquivalence = ReadonlyArray.getEquivalence(item);
   return Equivalence.make((a, b) => arrayEquivalence(Array.from(a), Array.from(b)));
 };
-const listParse = decodeUnknown => (u, options, ast) => List.isList(u) ? ParseResult.map(decodeUnknown(Array.from(u), options), as => List.fromIterable(as)) : ParseResult.fail(ParseResult.type(ast, u));
+const listParse = decodeUnknown => (u, options, ast) => List.isList(u) ? ParseResult.map(decodeUnknown(Array.from(u), options), as => List.fromIterable(as)) : ParseResult.fail(new ParseResult.Type(ast, u));
 /**
  * @category List transformations
  * @since 1.0.0
  */
-export const listFromSelf = item => {
-  return declare([item], item => listParse(ParseResult.decodeUnknown(array(item))), item => listParse(ParseResult.encodeUnknown(array(item))), {
-    description: `List<${format(item)}>`,
+export const listFromSelf = value => {
+  return declare([value], item => listParse(ParseResult.decodeUnknown(array(item))), item => listParse(ParseResult.encodeUnknown(array(item))), {
+    description: `List<${format(value)}>`,
     pretty: listPretty,
     arbitrary: listArbitrary,
     equivalence: listEquivalence
@@ -3317,8 +3646,35 @@ export const listFromSelf = item => {
  * @category List transformations
  * @since 1.0.0
  */
-export const list = item => transform(array(item), listFromSelf(to(item)), as => List.fromIterable(as), set => Array.from(set));
-const schemaFromArbitrary = value => suspend(() => any).pipe(annotations({
-  [hooks.ArbitraryHookId]: () => value
-}));
+export const list = value => {
+  const _value = asSchema(value);
+  return transform(array(_value), listFromSelf(typeSchema(_value)), as => List.fromIterable(as), set => Array.from(set));
+};
+const sortedSetArbitrary = (item, ord) => fc => fc.array(item(fc)).map(as => SortedSet.fromIterable(as, ord));
+const sortedSetPretty = item => set => `new SortedSet([${Array.from(SortedSet.values(set)).map(a => item(a)).join(", ")}])`;
+const sortedSetParse = (decodeUnknown, ord) => (u, options, ast) => SortedSet.isSortedSet(u) ? ParseResult.map(decodeUnknown(Array.from(SortedSet.values(u)), options), as => SortedSet.fromIterable(as, ord)) : ParseResult.fail(new ParseResult.Type(ast, u));
+/**
+ * @category SortedSet transformations
+ * @since 1.0.0
+ */
+export const sortedSetFromSelf = (value, ordA, ordI) => {
+  return declare([value], item => sortedSetParse(ParseResult.decodeUnknown(array(item)), ordA), item => sortedSetParse(ParseResult.encodeUnknown(array(item)), ordI), {
+    description: `SortedSet<${format(value)}>`,
+    pretty: sortedSetPretty,
+    arbitrary: arb => sortedSetArbitrary(arb, ordA),
+    equivalence: () => SortedSet.getEquivalence()
+  });
+};
+/**
+ * @category SortedSet transformations
+ * @since 1.0.0
+ */
+export const sortedSet = (value, ordA) => {
+  const _value = asSchema(value);
+  const to = typeSchema(_value);
+  return transform(array(_value), sortedSetFromSelf(to, ordA, ordA), as => SortedSet.fromIterable(as, ordA), set => Array.from(SortedSet.values(set)));
+};
+const schemaFromArbitrary = value => suspend(() => any).annotations({
+  [_hooks.ArbitraryHookId]: () => value
+});
 //# sourceMappingURL=Schema.js.map
\ No newline at end of file
diff --git a/dist/esm/Schema.js.map b/dist/esm/Schema.js.map
index 83bc307a2ff59c349fc48d3f51ddfb8a68e66e73..b4bd6d53868a915fd081769051e625edd7a6accf 100644
--- a/dist/esm/Schema.js.map
+++ b/dist/esm/Schema.js.map
@@ -1 +1 @@
-{"version":3,"file":"Schema.js","names":["BigDecimal","BigInt_","Brand","Cause","Chunk","Data","Duration","Effect","Either","Encoding","Equal","Equivalence","Exit","FiberId","dual","identity","HashMap","HashSet","List","N","Option","pipeArguments","Predicate","ReadonlyArray","Request","Secret","SortedSet","S","arbitrary","ArrayFormatter","AST","_equivalence","Internal","filters","hooks","InternalSchema","InternalSerializable","Parser","ParseResult","Pretty","TypeId","hash","schema","ast","format","from","make","to","asserts","decodeOption","decodeSync","decodeUnknownOption","decodeUnknownSync","encodeOption","encodeSync","encodeUnknownOption","encodeUnknownSync","is","validateOption","validateSync","encodeUnknown","options","u","overrideOptions","mapError","parseError","encodeUnknownEither","mapLeft","encodeUnknownPromise","parser","runPromise","encode","encodeEither","encodePromise","decodeUnknown","decodeUnknownEither","decodeUnknownPromise","decode","decodeEither","decodePromise","validate","validateEither","validatePromise","isSchema","isObject","makeLiteral","value","createLiteral","literal","literals","union","map","pickLiteral","_schema","uniqueSymbol","symbol","annotations","createUniqueSymbol","enums","createEnums","Object","keys","filter","key","templateLiteral","head","tail","types","getTemplateLiterals","span","flatMap","a","b","combineTemplateLiterals","createUnion","isLiteral","String","createTemplateLiteral","spans","modifyNonEmptyLast","appendAll","_tag","type","Error","declareConstructor","typeParameters","createDeclaration","tp","toAnnotations","declarePrimitive","input","_","succeed","fail","declare","Array","isArray","arguments","BrandTypeId","Symbol","for","fromBrand","constructor","self","createRefinement","either","isLeft","some","left","v","message","join","none","typeId","id","annotation","InstanceOfTypeId","instanceOf","title","name","description","pretty","_undefined","undefinedKeyword","_void","voidKeyword","_null","null","undefined","void","never","neverKeyword","unknown","unknownKeyword","any","anyKeyword","string","stringKeyword","number","numberKeyword","boolean","booleanKeyword","bigintFromSelf","bigIntKeyword","symbolFromSelf","symbolKeyword","object","objectKeyword","members","m","nullable","orUndefined","nullish","keyof","tuple","elements","createTuple","createElement","rest","isTuple","appendRestElement","element","appendElement","optionalElement","array","item","nonEmptyArray","pipe","PropertySignatureImpl","propertySignatureAST","variance","FromIsOptional","ToIsOptional","propertySignatureAnnotations","isOptional","optionalToRequired","o","optional","isExact","exact","default","isNullable","asOption","as","match","onNone","onSome","optionFromSelf","isNotNull","isNotUndefined","struct","fields","ownKeys","pss","pssFrom","pssTo","psTransformations","i","length","field","psAst","push","createPropertySignature","createPropertySignatureTransform","createFinalPropertySignatureTransformation","isNonEmptyReadonlyArray","createTransform","createTypeLiteral","createTypeLiteralTransformation","pick","isTransform","isTypeLiteralTransformation","transformation","propertySignatureTransformations","t","includes","omit","pluck","args","ps","getPropertyKeyIndexedAccess","transform","ak","appendBrandAnnotation","brand","brands","BrandAnnotationId","mergeAnnotations","_validateEither","out","assign","RefinedConstructorsTypeId","option","e","formatError","err","meta","path","partial","required","mutable","record","createRecord","intersectUnionMembers","xs","ys","x","y","isTypeLiteral","propertySignatures","concat","indexSignatures","getToPropertySignatures","getToIndexSignatures","extend","that","isUnion","compose","suspend","f","createSuspend","predicate","isBoolean","transformOrFail","createFinalTransformation","fromA","toI","transformLiteral","transformLiterals","pairs","attachPropertySignature","attached","isSymbol","custom","getOwnPropertySymbols","sym","TypeAnnotationId","move","MessageAnnotationId","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","DocumentationAnnotationId","JSONSchemaAnnotationId","ArbitraryHookId","PrettyHookId","EquivalenceHookId","ConcurrencyAnnotationId","BatchingAnnotationId","setAnnotation","identifier","examples","_default","documentation","jsonSchema","equivalence","concurrency","batching","rename","mapping","TrimmedTypeId","trimmed","trim","MaxLengthTypeId","maxLength","MinLengthTypeId","minLength","PatternTypeId","pattern","regex","source","lastIndex","test","fc","stringMatching","StartsWithTypeId","startsWith","JSON","stringify","EndsWithTypeId","endsWith","IncludesTypeId","searchString","LowercasedTypeId","lowercased","toLowerCase","Lowercased","UppercasedTypeId","uppercased","toUpperCase","Uppercased","LengthTypeId","Char","nonEmpty","Lowercase","s","Uppercase","Trimmed","Trim","split","separator","JsonString","parseJson","try","parse","reviver","catch","replacer","space","NonEmpty","UUIDTypeId","uuidRegex","UUID","uuid","ULIDTypeId","ulidRegex","ULID","ulid","FiniteTypeId","finite","Number","isFinite","GreaterThanTypeId","greaterThan","min","exclusiveMinimum","GreaterThanOrEqualToTypeId","greaterThanOrEqualTo","minimum","MultipleOfTypeId","multipleOf","divisor","remainder","Math","abs","IntTypeId","int","isSafeInteger","LessThanTypeId","lessThan","max","exclusiveMaximum","LessThanOrEqualToTypeId","lessThanOrEqualTo","maximum","BetweenTypeId","between","NonNaNTypeId","nonNaN","isNaN","positive","negative","nonPositive","nonNegative","clamp","strict","NumberFromString","fromOption","n","Finite","Int","NonNaN","Positive","Negative","NonPositive","NonNegative","JsonNumberTypeId","JsonNumber","Not","GreaterThanBigintTypeId","greaterThanBigint","GreaterThanOrEqualToBigintTypeId","greaterThanOrEqualToBigint","LessThanBigintTypeId","lessThanBigint","LessThanOrEqualToBigintTypeId","lessThanOrEqualToBigint","BetweenBigintTypeId","betweenBigint","positiveBigint","negativeBigint","nonNegativeBigint","nonPositiveBigint","clampBigint","bigint","BigInt","PositiveBigintFromSelf","PositiveBigint","NegativeBigintFromSelf","NegativeBigint","NonPositiveBigintFromSelf","NonPositiveBigint","NonNegativeBigintFromSelf","NonNegativeBigint","BigintFromNumber","toNumber","SecretFromSelf","isSecret","secret","fromString","_Secret","str","DurationFromSelf","isDuration","oneof","constant","infinity","bigUint","nanos","micros","maxSafeNat","millis","seconds","minutes","hours","days","weeks","DurationFromNanos","duration","toNanos","val","DurationFromMillis","ms","toMillis","hrTime","_Duration","toHrTime","clampDuration","betweenDuration","LessThanDurationTypeId","lessThanDuration","LessThanOrEqualToDurationTypeId","lessThanOrEqualToDuration","GreaterThanDurationTypeId","greaterThanDuration","GreaterThanOrEqualToDurationTypeId","greaterThanOrEqualToDuration","BetweenDurationTypeId","Uint8ArrayFromSelf","isUint8Array","u8arr","uint8Array","getEquivalence","equals","_Uint8Array","Uint8Array","arr","makeEncodingTransformation","decodeException","Base64","decodeBase64","encodeBase64","Base64Url","decodeBase64Url","encodeBase64Url","Hex","decodeHex","encodeHex","MinItemsTypeId","minItems","MaxItemsTypeId","maxItems","ItemsCountTypeId","itemsCount","getNumberIndexedAccess","of","headOr","fallback","ValidDateTypeId","validDate","getTime","DateFromSelf","isDate","date","noInvalidDate","Date","ValidDateFromSelf","DateFromString","toISOString","_Date","OptionNoneFrom","optionSomeFrom","optionFrom","optionDecode","optionArbitrary","arb","schemaFromArbitrary","optionPretty","optionParse","isOption","isNone","optionFromNullable","fromNullable","getOrNull","optionFromNullish","onNoneEncoding","getOrUndefined","optionFromOrUndefined","rightFrom","right","leftFrom","eitherFrom","eitherDecode","eitherArbitrary","eitherPretty","onLeft","onRight","eitherParse","decodeUnknownLeft","parseright","isEither","eitherFromSelf","makeLeftFrom","makeRightFrom","eitherFromUnion","toleft","toright","fromLeft","l","fromRight","r","readonlyMapArbitrary","Map","readonlyMapPretty","entries","k","readonlyMapEquivalence","arrayEquivalence","ka","va","kb","vb","readonlyMapParse","isMap","readonlyMapFromSelf","readonlyMap","readonlySetArbitrary","Set","readonlySetPretty","set","values","readonlySetEquivalence","readonlySetParse","isSet","readonlySetFromSelf","readonlySet","sortedSetArbitrary","ord","fromIterable","sortedSetPretty","sortedSetParse","isSortedSet","sortedSetFromSelf","ordA","ordI","sortedSet","bigDecimalPretty","normalize","bigDecimalArbitrary","bigInt","integer","scale","BigDecimalFromSelf","isBigDecimal","_BigDecimal","num","BigDecimalFromNumber","fromNumber","unsafeToNumber","GreaterThanBigDecimalTypeId","greaterThanBigDecimal","GreaterThanOrEqualToBigDecimalTypeId","greaterThanOrEqualToBigDecimal","LessThanBigDecimalTypeId","lessThanBigDecimal","LessThanOrEqualToBigDecimalTypeId","lessThanOrEqualToBigDecimal","PositiveBigDecimalTypeId","positiveBigDecimal","isPositive","PositiveBigDecimalFromSelf","NonNegativeBigDecimalTypeId","nonNegativeBigDecimal","NonNegativeBigDecimalFromSelf","NegativeBigDecimalTypeId","negativeBigDecimal","isNegative","NegativeBigDecimalFromSelf","NonPositiveBigDecimalTypeId","nonPositiveBigDecimal","NonPositiveBigDecimalFromSelf","BetweenBigDecimalTypeId","betweenBigDecimal","clampBigDecimal","negateBigDecimal","negate","chunkArbitrary","chunkPretty","c","toReadonlyArray","chunkParse","isChunk","isEmpty","empty","chunkFromSelf","chunk","toData","dataArbitrary","dataPretty","d","dataParse","isEqual","dataFromSelf","data","Class","makeClass","TaggedClass","tag","fieldsWithTag","TaggedError","TaggedRequest","Failure","Success","SerializableRequest","symbolResult","selfSchema","selfFields","Base","props","disableValidation","outer","toString","toSchema","declaration","newFields","transformOrFailFrom","FiberIdCompositeFrom","FiberIdFrom","FiberIdNoneFrom","FiberIdRuntimeFrom","startTimeMillis","fiberIdFromArbitrary","fiberIdArbitrary","fiberIdDecode","fiberIdPretty","fiberId","FiberIdFromSelf","isFiberId","composite","runtime","fiberIdEncode","_FiberId","causeDieFrom","defect","CauseEmptyFrom","causeFailFrom","error","CauseInterruptFrom","causeParallelFrom","causeFrom","causeSequentialFrom","recur","causeArbitrary","causeDecode","causePretty","cause","causeParse","isCause","causeEncode","causeFromSelf","die","interrupt","parallel","sequential","causeDefectPretty","exitFailureFrom","exitSuccessFrom","exitFrom","exitDecode","failCause","exitArbitrary","exitPretty","exit","exitParse","decodeUnknownCause","decodeUnknownValue","isExit","onFailure","onSuccess","exitFromSelf","failure","success","hashSetArbitrary","hashSetPretty","hashSetEquivalence","hashSetParse","isHashSet","hashSetFromSelf","hashSet","hashMapArbitrary","hashMapPretty","hashMapEquivalence","hashMapParse","isHashMap","hashMapFromSelf","hashMap","listArbitrary","listPretty","listEquivalence","listParse","isList","listFromSelf","list"],"sources":["../../src/Schema.ts"],"sourcesContent":[null],"mappings":"AAAA;;;AAIA,OAAO,KAAKA,UAAU,MAAM,mBAAmB;AAC/C,OAAO,KAAKC,OAAO,MAAM,eAAe;AACxC,OAAO,KAAKC,KAAK,MAAM,cAAc;AACrC,OAAO,KAAKC,KAAK,MAAM,cAAc;AACrC,OAAO,KAAKC,KAAK,MAAM,cAAc;AACrC,OAAO,KAAKC,IAAI,MAAM,aAAa;AACnC,OAAO,KAAKC,QAAQ,MAAM,iBAAiB;AAC3C,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,QAAQ,MAAM,iBAAiB;AAC3C,OAAO,KAAKC,KAAK,MAAM,cAAc;AACrC,OAAO,KAAKC,WAAW,MAAM,oBAAoB;AACjD,OAAO,KAAKC,IAAI,MAAM,aAAa;AACnC,OAAO,KAAKC,OAAO,MAAM,gBAAgB;AAEzC,SAASC,IAAI,EAAEC,QAAQ,QAAQ,iBAAiB;AAChD,OAAO,KAAKC,OAAO,MAAM,gBAAgB;AACzC,OAAO,KAAKC,OAAO,MAAM,gBAAgB;AACzC,OAAO,KAAKC,IAAI,MAAM,aAAa;AACnC,OAAO,KAAKC,CAAC,MAAM,eAAe;AAClC,OAAO,KAAKC,MAAM,MAAM,eAAe;AAGvC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,KAAKC,SAAS,MAAM,kBAAkB;AAC7C,OAAO,KAAKC,aAAa,MAAM,sBAAsB;AACrD,OAAO,KAAKC,OAAO,MAAM,gBAAgB;AACzC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,SAAS,MAAM,kBAAkB;AAC7C,OAAO,KAAKC,CAAC,MAAM,eAAe;AAGlC,OAAO,KAAKC,SAAS,MAAM,gBAAgB;AAC3C,OAAO,KAAKC,cAAc,MAAM,qBAAqB;AAErD,OAAO,KAAKC,GAAG,MAAM,UAAU;AAC/B,OAAO,KAAKC,YAAY,MAAM,kBAAkB;AAChD,OAAO,KAAKC,QAAQ,MAAM,mBAAmB;AAC7C,OAAO,KAAKC,OAAO,MAAM,uBAAuB;AAChD,OAAO,KAAKC,KAAK,MAAM,qBAAqB;AAC5C,OAAO,KAAKC,cAAc,MAAM,sBAAsB;AACtD,OAAO,KAAKC,oBAAoB,MAAM,4BAA4B;AAClE,OAAO,KAAKC,MAAM,MAAM,aAAa;AACrC,OAAO,KAAKC,WAAW,MAAM,kBAAkB;AAC/C,OAAO,KAAKC,MAAM,MAAM,aAAa;AAGrC;;;;AAIA,OAAO,MAAMC,MAAM,GAAkBL,cAAc,CAACK,MAAM;AAgB1D;;;;AAIA,OAAO,MAAMC,IAAI,GAAaC,MAAuB,IAAaZ,GAAG,CAACW,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC;AAEtF;;;;AAIA,OAAO,MAAMC,MAAM,GAAaF,MAAuB,IAAaZ,GAAG,CAACc,MAAM,CAACF,MAAM,CAACC,GAAG,CAAC;AAyC1F;;;AAGA,OAAO,MAAME,IAAI,GAAaH,MAAuB,IAAgBI,IAAI,CAAChB,GAAG,CAACe,IAAI,CAACH,MAAM,CAACC,GAAG,CAAC,CAAC;AAE/F;;;AAGA,OAAO,MAAMI,EAAE,GAAaL,MAAuB,IAAgBI,IAAI,CAAChB,GAAG,CAACiB,EAAE,CAACL,MAAM,CAACC,GAAG,CAAC,CAAC;AAE3F;AACA;AACE;;;;AAIAK,OAAO;AACP;;;;AAIAC,YAAY;AACZ;;;;AAIAC,UAAU;AACV;;;;AAIAC,mBAAmB;AACnB;;;;AAIAC,iBAAiB;AACjB;;;;AAIAC,YAAY;AACZ;;;;AAIAC,UAAU;AACV;;;;AAIAC,mBAAmB;AACnB;;;;AAIAC,iBAAiB;AACjB;;;;AAIAC,EAAE;AACF;;;;AAIAC,cAAc;AACd;;;;AAIAC,YAAY,QACP,aAAa;AACpB;AAEA;;;;AAIA,OAAO,MAAMC,aAAa,GAAGA,CAC3BlB,MAAuB,EACvBmB,OAAsB,KACpB;EACF,MAAMD,aAAa,GAAGvB,MAAM,CAACuB,aAAa,CAAClB,MAAM,EAAEmB,OAAO,CAAC;EAC3D,OAAO,CAACC,CAAU,EAAEC,eAA8B,KAChDzB,WAAW,CAAC0B,QAAQ,CAACJ,aAAa,CAACE,CAAC,EAAEC,eAAe,CAAC,EAAEzB,WAAW,CAAC2B,UAAU,CAAC;AACnF,CAAC;AAED;;;;AAIA,OAAO,MAAMC,mBAAmB,GAAGA,CACjCxB,MAA2B,EAC3BmB,OAAsB,KACpB;EACF,MAAMK,mBAAmB,GAAG7B,MAAM,CAAC6B,mBAAmB,CAACxB,MAAM,EAAEmB,OAAO,CAAC;EACvE,OAAO,CAACC,CAAU,EAAEC,eAA8B,KAChDvD,MAAM,CAAC2D,OAAO,CAACD,mBAAmB,CAACJ,CAAC,EAAEC,eAAe,CAAC,EAAEzB,WAAW,CAAC2B,UAAU,CAAC;AACnF,CAAC;AAED;;;;AAIA,OAAO,MAAMG,oBAAoB,GAAGA,CAClC1B,MAA2B,EAC3BmB,OAAsB,KACpB;EACF,MAAMQ,MAAM,GAAGT,aAAa,CAAClB,MAAM,EAAEmB,OAAO,CAAC;EAC7C,OAAO,CAACC,CAAU,EAAEC,eAA8B,KAAiBxD,MAAM,CAAC+D,UAAU,CAACD,MAAM,CAACP,CAAC,EAAEC,eAAe,CAAC,CAAC;AAClH,CAAC;AAED;;;;AAIA,OAAO,MAAMQ,MAAM,GAG0EX,aAAa;AAE1G;;;;AAIA,OAAO,MAAMY,YAAY,GAGiEN,mBAAmB;AAE7G;;;;AAIA,OAAO,MAAMO,aAAa,GAGkCL,oBAAoB;AAEhF;;;;AAIA,OAAO,MAAMM,aAAa,GAAGA,CAC3BhC,MAAuB,EACvBmB,OAAsB,KACpB;EACF,MAAMa,aAAa,GAAGpC,WAAW,CAACoC,aAAa,CAAChC,MAAM,EAAEmB,OAAO,CAAC;EAChE,OAAO,CAACC,CAAU,EAAEC,eAA8B,KAChDzB,WAAW,CAAC0B,QAAQ,CAACU,aAAa,CAACZ,CAAC,EAAEC,eAAe,CAAC,EAAEzB,WAAW,CAAC2B,UAAU,CAAC;AACnF,CAAC;AAED;;;;AAIA,OAAO,MAAMU,mBAAmB,GAAGA,CACjCjC,MAA2B,EAC3BmB,OAAsB,KACpB;EACF,MAAMc,mBAAmB,GAAGrC,WAAW,CAACqC,mBAAmB,CAACjC,MAAM,EAAEmB,OAAO,CAAC;EAC5E,OAAO,CAACC,CAAU,EAAEC,eAA8B,KAChDvD,MAAM,CAAC2D,OAAO,CAACQ,mBAAmB,CAACb,CAAC,EAAEC,eAAe,CAAC,EAAEzB,WAAW,CAAC2B,UAAU,CAAC;AACnF,CAAC;AAED;;;;AAIA,OAAO,MAAMW,oBAAoB,GAAGA,CAClClC,MAA2B,EAC3BmB,OAAsB,KACpB;EACF,MAAMQ,MAAM,GAAGK,aAAa,CAAChC,MAAM,EAAEmB,OAAO,CAAC;EAC7C,OAAO,CAACC,CAAU,EAAEC,eAA8B,KAAiBxD,MAAM,CAAC+D,UAAU,CAACD,MAAM,CAACP,CAAC,EAAEC,eAAe,CAAC,CAAC;AAClH,CAAC;AAED;;;;AAIA,OAAO,MAAMc,MAAM,GAG0EH,aAAa;AAE1G;;;;AAIA,OAAO,MAAMI,YAAY,GAGiEH,mBAAmB;AAE7G;;;;AAIA,OAAO,MAAMI,aAAa,GAGkCH,oBAAoB;AAEhF;;;;AAIA,OAAO,MAAMI,QAAQ,GAAGA,CACtBtC,MAAuB,EACvBmB,OAAsB,KACpB;EACF,MAAMmB,QAAQ,GAAG3C,MAAM,CAAC2C,QAAQ,CAACtC,MAAM,EAAEmB,OAAO,CAAC;EACjD,OAAO,CAACC,CAAU,EAAEC,eAA8B,KAChDzB,WAAW,CAAC0B,QAAQ,CAACgB,QAAQ,CAAClB,CAAC,EAAEC,eAAe,CAAC,EAAEzB,WAAW,CAAC2B,UAAU,CAAC;AAC9E,CAAC;AAED;;;;AAIA,OAAO,MAAMgB,cAAc,GAAGA,CAC5BvC,MAAuB,EACvBmB,OAAsB,KACpB;EACF,MAAMoB,cAAc,GAAG5C,MAAM,CAAC4C,cAAc,CAACvC,MAAM,EAAEmB,OAAO,CAAC;EAC7D,OAAO,CAACC,CAAU,EAAEC,eAA8B,KAChDvD,MAAM,CAAC2D,OAAO,CAACc,cAAc,CAACnB,CAAC,EAAEC,eAAe,CAAC,EAAEzB,WAAW,CAAC2B,UAAU,CAAC;AAC9E,CAAC;AAED;;;;AAIA,OAAO,MAAMiB,eAAe,GAAGA,CAC7BxC,MAA2B,EAC3BmB,OAAsB,KACpB;EACF,MAAMQ,MAAM,GAAGW,QAAQ,CAACtC,MAAM,EAAEmB,OAAO,CAAC;EACxC,OAAO,CAACC,CAAU,EAAEC,eAA8B,KAAiBxD,MAAM,CAAC+D,UAAU,CAACD,MAAM,CAACP,CAAC,EAAEC,eAAe,CAAC,CAAC;AAClH,CAAC;AAED;;;;;;AAMA,OAAO,MAAMoB,QAAQ,GAAIrB,CAAU,IACjCxC,SAAS,CAAC8D,QAAQ,CAACtB,CAAC,CAAC,IAAItB,MAAM,IAAIsB,CAAC,IAAI,KAAK,IAAIA,CAAC;AAEpD;;;;AAIA,OAAO,MAAMhB,IAAI,GAA+CX,cAAc,CAACW,IAAI;AAEnF,MAAMuC,WAAW,GAAsCC,KAAc,IACnExC,IAAI,CAAChB,GAAG,CAACyD,aAAa,CAACD,KAAK,CAAC,CAAC;AAEhC;;;;AAIA,OAAO,MAAME,OAAO,GAAGA,CACrB,GAAGC,QAAkB,KACQC,KAAK,CAAC,GAAGD,QAAQ,CAACE,GAAG,CAAEH,OAAO,IAAKH,WAAW,CAACG,OAAO,CAAC,CAAC,CAAC;AAExF;;;;;;;;;;;;;;;;AAgBA,OAAO,MAAMI,WAAW,GACtBA,CAAyD,GAAGH,QAAW,KAChEI,OAAwB,IAAwBL,OAAO,CAAC,GAAGC,QAAQ,CAAC;AAE7E;;;;AAIA,OAAO,MAAMK,YAAY,GAAGA,CAC1BC,MAAS,EACTC,WAA6B,KACflD,IAAI,CAAChB,GAAG,CAACmE,kBAAkB,CAACF,MAAM,EAAEC,WAAW,CAAC,CAAC;AAEjE;;;;AAIA,OAAO,MAAME,KAAK,GAChBA,KAAQ,IAERpD,IAAI,CACFhB,GAAG,CAACqE,WAAW,CACbC,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,MAAM,CACtBC,GAAG,IAAK,OAAOL,KAAK,CAACA,KAAK,CAACK,GAAG,CAAC,CAAC,KAAK,QAAQ,CAC/C,CAACZ,GAAG,CAAEY,GAAG,IAAK,CAACA,GAAG,EAAEL,KAAK,CAACK,GAAG,CAAC,CAAC,CAAC,CAClC,CACF;AAUH;;;;AAIA,OAAO,MAAMC,eAAe,GAAGA,CAC7B,GAAG,CAACC,IAAI,EAAE,GAAGC,IAAI,CAAI,KACgC;EACrD,IAAIC,KAAK,GAAqDC,mBAAmB,CAACH,IAAI,CAAC9D,GAAG,CAAC;EAC3F,KAAK,MAAMkE,IAAI,IAAIH,IAAI,EAAE;IACvBC,KAAK,GAAGpF,aAAa,CAACuF,OAAO,CAC3BH,KAAK,EACJI,CAAC,IAAKH,mBAAmB,CAACC,IAAI,CAAClE,GAAG,CAAC,CAACgD,GAAG,CAAEqB,CAAC,IAAKC,uBAAuB,CAACF,CAAC,EAAEC,CAAC,CAAC,CAAC,CAC/E;EACH;EACA,OAAOlE,IAAI,CAAChB,GAAG,CAACoF,WAAW,CAACP,KAAK,CAAC,CAAC;AACrC,CAAC;AAED,MAAMM,uBAAuB,GAAGA,CAC9BF,CAAoC,EACpCC,CAAoC,KACC;EACrC,IAAIlF,GAAG,CAACqF,SAAS,CAACJ,CAAC,CAAC,EAAE;IACpB,OAAOjF,GAAG,CAACqF,SAAS,CAACH,CAAC,CAAC,GACrBlF,GAAG,CAACyD,aAAa,CAAC6B,MAAM,CAACL,CAAC,CAACvB,OAAO,CAAC,GAAG4B,MAAM,CAACJ,CAAC,CAACxB,OAAO,CAAC,CAAC,GACxD1D,GAAG,CAACuF,qBAAqB,CAACD,MAAM,CAACL,CAAC,CAACvB,OAAO,CAAC,GAAGwB,CAAC,CAACP,IAAI,EAAEO,CAAC,CAACM,KAAK,CAAC;EAClE;EACA,IAAIxF,GAAG,CAACqF,SAAS,CAACH,CAAC,CAAC,EAAE;IACpB,OAAOlF,GAAG,CAACuF,qBAAqB,CAC9BN,CAAC,CAACN,IAAI,EACNlF,aAAa,CAACgG,kBAAkB,CAC9BR,CAAC,CAACO,KAAK,EACNT,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAErB,OAAO,EAAEqB,IAAI,CAACrB,OAAO,GAAG4B,MAAM,CAACJ,CAAC,CAACxB,OAAO;IAAC,CAAE,CAAC,CACnE,CACF;EACH;EACA,OAAO1D,GAAG,CAACuF,qBAAqB,CAC9BN,CAAC,CAACN,IAAI,EACNlF,aAAa,CAACiG,SAAS,CACrBjG,aAAa,CAACgG,kBAAkB,CAC9BR,CAAC,CAACO,KAAK,EACNT,IAAI,KAAM;IAAE,GAAGA,IAAI;IAAErB,OAAO,EAAEqB,IAAI,CAACrB,OAAO,GAAG4B,MAAM,CAACJ,CAAC,CAACP,IAAI;EAAC,CAAE,CAAC,CAChE,EACDO,CAAC,CAACM,KAAK,CACR,CACF;AACH,CAAC;AAED,MAAMV,mBAAmB,GACvBjE,GAAY,IACwC;EACpD,QAAQA,GAAG,CAAC8E,IAAI;IACd,KAAK,SAAS;MACZ,OAAO,CAAC9E,GAAG,CAAC;IACd,KAAK,eAAe;IACpB,KAAK,eAAe;MAClB,OAAO,CAACb,GAAG,CAACuF,qBAAqB,CAAC,EAAE,EAAE,CAAC;QAAEK,IAAI,EAAE/E,GAAG;QAAE6C,OAAO,EAAE;MAAE,CAAE,CAAC,CAAC,CAAC;IACtE,KAAK,OAAO;MACV,OAAOjE,aAAa,CAACuF,OAAO,CAACnE,GAAG,CAACgE,KAAK,EAAEC,mBAAmB,CAAC;IAC9D;MACE,MAAM,IAAIe,KAAK,CAAC,uDAAuD7F,GAAG,CAACc,MAAM,CAACD,GAAG,CAAC,GAAG,CAAC;EAC9F;AACF,CAAC;AAED,MAAMiF,kBAAkB,GAAGA,CAKzBC,cAAiB,EACjBnD,aAEqH,EACrHd,aAEqH,EACrHoC,WAAsC,KAEtClD,IAAI,CAAChB,GAAG,CAACgG,iBAAiB,CACxBD,cAAc,CAAClC,GAAG,CAAEoC,EAAE,IAAKA,EAAE,CAACpF,GAAG,CAAC,EAClC,CAAC,GAAGkF,cAAc,KAAKnD,aAAa,CAAC,GAAGmD,cAAc,CAAClC,GAAG,CAAEhD,GAAG,IAAKG,IAAI,CAACH,GAAG,CAAC,CAAQ,CAAC,EACtF,CAAC,GAAGkF,cAAc,KAAKjE,aAAa,CAAC,GAAGiE,cAAc,CAAClC,GAAG,CAAEhD,GAAG,IAAKG,IAAI,CAACH,GAAG,CAAC,CAAQ,CAAC,EACtFqF,aAAa,CAAChC,WAAW,CAAC,CAC3B,CAAC;AAEJ,MAAMiC,gBAAgB,GAAGA,CACvBxE,EAAkC,EAClCuC,WAAuC,KAC1B;EACb,MAAMtB,aAAa,GAAGA,CAAA,KAAM,CAACwD,KAAc,EAAEC,CAAe,EAAExF,GAAoB,KAChFc,EAAE,CAACyE,KAAK,CAAC,GAAG5F,WAAW,CAAC8F,OAAO,CAACF,KAAK,CAAC,GAAG5F,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEuF,KAAK,CAAC,CAAC;EACzF,MAAMtE,aAAa,GAAGc,aAAa;EACnC,OAAO5B,IAAI,CAAChB,GAAG,CAACgG,iBAAiB,CAAC,EAAE,EAAEpD,aAAa,EAAEd,aAAa,EAAEoE,aAAa,CAAChC,WAAW,CAAC,CAAC,CAAC;AAClG,CAAC;AAeD;;;;;;;AAOA,OAAO,MAAMsC,OAAO,GAuBhB,SAAAA,CAAA;EACF,IAAIC,KAAK,CAACC,OAAO,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;IAC/B,MAAMZ,cAAc,GAAGY,SAAS,CAAC,CAAC,CAAC;IACnC,MAAM/D,aAAa,GAAG+D,SAAS,CAAC,CAAC,CAAC;IAClC,MAAM7E,aAAa,GAAG6E,SAAS,CAAC,CAAC,CAAC;IAClC,MAAMzC,WAAW,GAAGyC,SAAS,CAAC,CAAC,CAAC;IAChC,OAAOb,kBAAkB,CAACC,cAAc,EAAEnD,aAAa,EAAEd,aAAa,EAAEoC,WAAW,CAAC;EACtF;EACA,MAAMvC,EAAE,GAAGgF,SAAS,CAAC,CAAC,CAAC;EACvB,MAAMzC,WAAW,GAAGyC,SAAS,CAAC,CAAC,CAAC;EAChC,OAAOR,gBAAgB,CAACxE,EAAE,EAAEuC,WAAW,CAAC;AAC1C,CAAQ;AAER;;;;AAIA,OAAO,MAAM0C,WAAW,gBAAGC,MAAM,CAACC,GAAG,CAAC,6BAA6B,CAAC;AAEpE;;;;AAIA,OAAO,MAAMC,SAAS,GAAGA,CACvBC,WAAuC,EACvCjF,OAAqD,KAEZkF,IAAqB,IAAyB;EACvF,OAAOjG,IAAI,CAAChB,GAAG,CAACkH,gBAAgB,CAC9BD,IAAI,CAACpG,GAAG,EACR,CAACoE,CAAI,EAAEoB,CAAe,EAAExF,GAAY,KAA2C;IAC7E,MAAMsG,MAAM,GAAGH,WAAW,CAACG,MAAM,CAAClC,CAAC,CAAC;IACpC,OAAOvG,MAAM,CAAC0I,MAAM,CAACD,MAAM,CAAC,GAC1B7H,MAAM,CAAC+H,IAAI,CAAC7G,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEoE,CAAC,EAAEkC,MAAM,CAACG,IAAI,CAACzD,GAAG,CAAE0D,CAAC,IAAKA,CAAC,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GACnFnI,MAAM,CAACoI,IAAI,EAAE;EACjB,CAAC,EACDxB,aAAa,CAAC;IAAEyB,MAAM,EAAE;MAAEC,EAAE,EAAEhB,WAAW;MAAEiB,UAAU,EAAE;QAAEb;MAAW;IAAE,CAAE;IAAE,GAAGjF;EAAO,CAAE,CAAC,CACxF,CAAC;AACJ,CAAC;AAED;;;;AAIA,OAAO,MAAM+F,gBAAgB,gBAAGjB,MAAM,CAACC,GAAG,CAAC,kCAAkC,CAAC;AAE9E;;;;AAIA,OAAO,MAAMiB,UAAU,GAAGA,CACxBf,WAAc,EACdjF,OAAiD,KAEjDyE,OAAO,CACJxE,CAAC,IAA2BA,CAAC,YAAYgF,WAAW,EACrD;EACEgB,KAAK,EAAEhB,WAAW,CAACiB,IAAI;EACvBC,WAAW,EAAE,kBAAkBlB,WAAW,CAACiB,IAAI,EAAE;EACjDE,MAAM,EAAEA,CAAA,KAAsC7C,MAAM;EACpDqC,MAAM,EAAE;IAAEC,EAAE,EAAEE,gBAAgB;IAAED,UAAU,EAAE;MAAEb;IAAW;EAAE,CAAE;EAC7D,GAAGjF;CACJ,CACF;AAEH,MAAMqG,UAAU,gBAAsBpH,IAAI,CAAChB,GAAG,CAACqI,gBAAgB,CAAC;AAEhE,MAAMC,KAAK,gBAAiBtH,IAAI,CAAChB,GAAG,CAACuI,WAAW,CAAC;AAEjD,MAAMC,KAAK,gBAAiBxH,IAAI,CAAChB,GAAG,CAACwI,KAAK,CAAC;AAE3C;AACE;;;;AAIAA,KAAK,IAAIC,IAAI;AACb;;;;AAIAL,UAAU,IAAIM,SAAS;AACvB;;;;AAIAJ,KAAK,IAAIK,IAAI;AAGf;;;;AAIA,OAAO,MAAMC,KAAK,gBAAkB5H,IAAI,CAAChB,GAAG,CAAC6I,YAAY,CAAC;AAE1D;;;;AAIA,OAAO,MAAMC,OAAO,gBAAoB9H,IAAI,CAAChB,GAAG,CAAC+I,cAAc,CAAC;AAEhE;;;;AAIA,OAAO,MAAMC,GAAG,gBAAgBhI,IAAI,CAAChB,GAAG,CAACiJ,UAAU,CAAC;AAEpD;;;;AAIA,OAAO,MAAMC,MAAM,gBAAmBlI,IAAI,CAAChB,GAAG,CAACmJ,aAAa,CAAC;AAE7D;;;;AAIA,OAAO,MAAMC,MAAM,gBAAmBpI,IAAI,CAAChB,GAAG,CAACqJ,aAAa,CAAC;AAE7D;;;;AAIA,OAAO,MAAMC,OAAO,gBAAoBtI,IAAI,CAAChB,GAAG,CAACuJ,cAAc,CAAC;AAEhE;;;;AAIA,OAAO,MAAMC,cAAc,gBAAmBxI,IAAI,CAAChB,GAAG,CAACyJ,aAAa,CAAC;AAErE;;;;AAIA,OAAO,MAAMC,cAAc,gBAAmB1I,IAAI,CAAChB,GAAG,CAAC2J,aAAa,CAAC;AAErE;;;;AAIA,OAAO,MAAMC,MAAM,gBAAmB5I,IAAI,CAAChB,GAAG,CAAC6J,aAAa,CAAC;AAE7D;;;;AAIA,OAAO,MAAMjG,KAAK,GAAGA,CACnB,GAAGkG,OAAgB,KAEnB9I,IAAI,CAAChB,GAAG,CAACoF,WAAW,CAAC0E,OAAO,CAACjG,GAAG,CAAEkG,CAAC,IAAKA,CAAC,CAAClJ,GAAG,CAAC,CAAC,CAAC;AAElD;;;;AAIA,OAAO,MAAMmJ,QAAQ,GAAa/C,IAAqB,IAAoCrD,KAAK,CAAC4E,KAAK,EAAEvB,IAAI,CAAC;AAE7G;;;;AAIA,OAAO,MAAMgD,WAAW,GACtBhD,IAAqB,IACuBjG,IAAI,CAAChB,GAAG,CAACiK,WAAW,CAAChD,IAAI,CAACpG,GAAG,CAAC,CAAC;AAE7E;;;;AAIA,OAAO,MAAMqJ,OAAO,GAClBjD,IAAqB,IACqCrD,KAAK,CAAC4E,KAAK,EAAEJ,UAAU,EAAEnB,IAAI,CAAC;AAE1F;;;;AAIA,OAAO,MAAMkD,KAAK,GAAavJ,MAAuB,IAAsBI,IAAI,CAAChB,GAAG,CAACmK,KAAK,CAACvJ,MAAM,CAACC,GAAG,CAAC,CAAC;AAEvG;;;;AAIA,OAAO,MAAMuJ,KAAK,GAAGA,CACnB,GAAGC,QAAkB,KAMrBrJ,IAAI,CACFhB,GAAG,CAACsK,WAAW,CACbD,QAAQ,CAACxG,GAAG,CAAEjD,MAAM,IAAKZ,GAAG,CAACuK,aAAa,CAAC3J,MAAM,CAACC,GAAG,EAAE,KAAK,CAAC,CAAC,EAC9DvB,MAAM,CAACoI,IAAI,EAAE,EACb,IAAI,CACL,CACF;AAEH;;;;AAIA,OAAO,MAAM8C,IAAI,GACHA,IAAuB,IAEjCvD,IAAsB,IAC0D;EAChF,IAAIjH,GAAG,CAACyK,OAAO,CAACxD,IAAI,CAACpG,GAAG,CAAC,EAAE;IACzB,OAAOG,IAAI,CAAChB,GAAG,CAAC0K,iBAAiB,CAACzD,IAAI,CAACpG,GAAG,EAAE2J,IAAI,CAAC3J,GAAG,CAAC,CAAC;EACxD;EACA,MAAM,IAAIgF,KAAK,CAAC,wCAAwC,CAAC;AAC3D,CAAC;AAEH;;;;AAIA,OAAO,MAAM8E,OAAO,GACNA,OAA0B,IAEpC1D,IAAsB,IACsC;EAC5D,IAAIjH,GAAG,CAACyK,OAAO,CAACxD,IAAI,CAACpG,GAAG,CAAC,EAAE;IACzB,OAAOG,IAAI,CAAChB,GAAG,CAAC4K,aAAa,CAAC3D,IAAI,CAACpG,GAAG,EAAEb,GAAG,CAACuK,aAAa,CAACI,OAAO,CAAC9J,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;EACjF;EACA,MAAM,IAAIgF,KAAK,CAAC,2CAA2C,CAAC;AAC9D,CAAC;AAEH;;;;AAIA,OAAO,MAAMgF,eAAe,GACdF,OAA0B,IAEpC1D,IAAsB,IACwC;EAC9D,IAAIjH,GAAG,CAACyK,OAAO,CAACxD,IAAI,CAACpG,GAAG,CAAC,EAAE;IACzB,OAAOG,IAAI,CAAChB,GAAG,CAAC4K,aAAa,CAAC3D,IAAI,CAACpG,GAAG,EAAEb,GAAG,CAACuK,aAAa,CAACI,OAAO,CAAC9J,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;EAChF;EACA,MAAM,IAAIgF,KAAK,CAAC,mDAAmD,CAAC;AACtE,CAAC;AAEH;;;;AAIA,OAAO,MAAMiF,KAAK,GAAaC,IAAqB,IAClD/J,IAAI,CAAChB,GAAG,CAACsK,WAAW,CAAC,EAAE,EAAEhL,MAAM,CAAC+H,IAAI,CAAC,CAAC0D,IAAI,CAAClK,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AAE1D;;;;AAIA,OAAO,MAAMmK,aAAa,GACxBD,IAAqB,IAC+CX,KAAK,CAACW,IAAI,CAAC,CAACE,IAAI,CAACT,IAAI,CAACO,IAAI,CAAC,CAAC;AA4BlG;AACA,OAAM,MAAOG,qBAAqB;EAMrBC,oBAAA;EALF,CAACzK,MAAM,IAA0CL,cAAc,CAAC+K,QAAQ;EACxEC,cAAc;EACdC,YAAY;EAErBtE,YACWmE,oBAA0C;IAA1C,KAAAA,oBAAoB,GAApBA,oBAAoB;EAC5B;EAEHF,IAAIA,CAAA;IACF,OAAO1L,aAAa,CAAC,IAAI,EAAEoH,SAAS,CAAC;EACvC;;AAGF;;;AAGA,OAAO,MAAM4E,4BAA4B,GAAIrH,WAA2B,IAEtE+C,IAAO,IACuF;EAC9F,IAAI5D,QAAQ,CAAC4D,IAAI,CAAC,EAAE;IAClB,OAAO,IAAIiE,qBAAqB,CAAC;MAC/BvF,IAAI,EAAE,aAAa;MACnB5E,IAAI,EAAEkG,IAAI,CAACpG,GAAG;MACd2K,UAAU,EAAE,KAAK;MACjBtH,WAAW,EAAEgC,aAAa,CAAChC,WAAW;KACvC,CAAQ;EACX;EACA,OAAO,IAAIgH,qBAAqB,CAAC;IAC/B,GAAIjE,IAAY,CAACkE,oBAAoB;IACrCjH,WAAW,EAAEgC,aAAa,CAAChC,WAAW;GACvC,CAAQ;AACX,CAAC;AAED;;;;AAIA,OAAO,MAAMuH,kBAAkB,GAAGA,CAChC1K,IAAqB,EACrBE,EAAa,EACb8B,MAAkC;AAAE;AACpCN,MAAkC;AAAE;AACpCyB,WAA4B,KAE5B,IAAIgH,qBAAqB,CAAC;EACxBvF,IAAI,EAAE,oBAAoB;EAC1B5E,IAAI,EAAEA,IAAI,CAACF,GAAG;EACdI,EAAE,EAAEA,EAAE,CAACJ,GAAG;EACVkC,MAAM,EAAG2I,CAAC,IAAKpM,MAAM,CAAC+H,IAAI,CAACtE,MAAM,CAAC2I,CAAC,CAAC,CAAC;EACrCjJ,MAAM,EAAEnD,MAAM,CAAC0F,OAAO,CAACvC,MAAM,CAAC;EAC9ByB,WAAW,EAAEgC,aAAa,CAAChC,WAAW;CACvC,CAAC;AAEJ;;;AAGA,OAAO,MAAMyH,QAAQ,GA8EjBA,CACF/K,MAAuB,EACvBmB,OAMC,KAC2C;EAC5C,MAAM6J,OAAO,GAAG7J,OAAO,EAAE8J,KAAK;EAC9B,MAAMrI,KAAK,GAAGzB,OAAO,EAAE+J,OAAO;EAC9B,MAAMC,UAAU,GAAGhK,OAAO,EAAEiI,QAAQ;EACpC,MAAMgC,QAAQ,GAAGjK,OAAO,EAAEkK,EAAE,IAAI,QAAQ;EACxC,MAAM/H,WAAW,GAAGnC,OAAO,EAAEmC,WAAW;EAExC,IAAI0H,OAAO,EAAE;IACX,IAAIpI,KAAK,EAAE;MACT,IAAIuI,UAAU,EAAE;QACd,OAAON,kBAAkB,CACvBzB,QAAQ,CAACpJ,MAAM,CAAC,EAChBK,EAAE,CAACL,MAAM,CAAC,EACVtB,MAAM,CAAC4M,KAAK,CAAC;UAAEC,MAAM,EAAE3I,KAAK;UAAE4I,MAAM,EAAGnH,CAAC,IAAKA,CAAC,KAAK,IAAI,GAAGzB,KAAK,EAAE,GAAGyB;QAAC,CAAE,CAAC,EACxE3F,MAAM,CAAC+H,IAAI,EACXnD,WAAW,CACZ;MACH,CAAC,MAAM;QACL,OAAOuH,kBAAkB,CACvB7K,MAAM,EACNK,EAAE,CAACL,MAAM,CAAC,EACVtB,MAAM,CAAC4M,KAAK,CAAC;UAAEC,MAAM,EAAE3I,KAAK;UAAE4I,MAAM,EAAEnN;QAAQ,CAAE,CAAC,EACjDK,MAAM,CAAC+H,IAAI,EACXnD,WAAW,CACZ;MACH;IACF,CAAC,MAAM;MACL,IAAI8H,QAAQ,EAAE;QACZ,IAAID,UAAU,EAAE;UACd,OAAON,kBAAkB,CACvBzB,QAAQ,CAACpJ,MAAM,CAAC,EAChByL,cAAc,CAACpL,EAAE,CAACL,MAAM,CAAC,CAAC,EAC1BtB,MAAM,CAACkF,MAAM,CAAChF,SAAS,CAAC8M,SAAS,CAAC,EAClCrN,QAAQ,EACRiF,WAAW,CACZ;QACH,CAAC,MAAM;UACL,OAAOuH,kBAAkB,CACvB7K,MAAM,EACNyL,cAAc,CAACpL,EAAE,CAACL,MAAM,CAAC,CAAC,EAC1B3B,QAAQ,EACRA,QAAQ,EACRiF,WAAW,CACZ;QACH;MACF;MACA,OAAO,IAAIgH,qBAAqB,CAAC;QAC/BvF,IAAI,EAAE,aAAa;QACnB5E,IAAI,EAAEH,MAAM,CAACC,GAAG;QAChB2K,UAAU,EAAE,IAAI;QAChBtH,WAAW,EAAEgC,aAAa,CAAChC,WAAW;OACvC,CAAC;IACJ;EACF,CAAC,MAAM;IACL,IAAIV,KAAK,EAAE;MACT,IAAIuI,UAAU,EAAE;QACd,OAAON,kBAAkB,CACvBvB,OAAO,CAACtJ,MAAM,CAAC,EACfK,EAAE,CAACL,MAAM,CAAC,EACVtB,MAAM,CAAC4M,KAAK,CAAC;UAAEC,MAAM,EAAE3I,KAAK;UAAE4I,MAAM,EAAGnH,CAAC,IAAMA,CAAC,IAAI,IAAI,GAAGzB,KAAK,EAAE,GAAGyB;QAAE,CAAE,CAAC,EACzE3F,MAAM,CAAC+H,IAAI,EACXnD,WAAW,CACZ;MACH,CAAC,MAAM;QACL,OAAOuH,kBAAkB,CACvBxB,WAAW,CAACrJ,MAAM,CAAC,EACnBK,EAAE,CAACL,MAAM,CAAC,EACVtB,MAAM,CAAC4M,KAAK,CAAC;UAAEC,MAAM,EAAE3I,KAAK;UAAE4I,MAAM,EAAGnH,CAAC,IAAMA,CAAC,KAAKyD,SAAS,GAAGlF,KAAK,EAAE,GAAGyB;QAAE,CAAE,CAAC,EAC/E3F,MAAM,CAAC+H,IAAI,EACXnD,WAAW,CACZ;MACH;IACF,CAAC,MAAM;MACL,IAAI8H,QAAQ,EAAE;QACZ,IAAID,UAAU,EAAE;UACd,OAAON,kBAAkB,CACvBvB,OAAO,CAACtJ,MAAM,CAAC,EACfyL,cAAc,CAACpL,EAAE,CAACL,MAAM,CAAC,CAAC,EAC1BtB,MAAM,CAACkF,MAAM,CAAES,CAAuB,IAAaA,CAAC,IAAI,IAAI,CAAC,EAC7DhG,QAAQ,EACRiF,WAAW,CACZ;QACH,CAAC,MAAM;UACL,OAAOuH,kBAAkB,CACvBxB,WAAW,CAACrJ,MAAM,CAAC,EACnByL,cAAc,CAACpL,EAAE,CAACL,MAAM,CAAC,CAAC,EAC1BtB,MAAM,CAACkF,MAAM,CAAChF,SAAS,CAAC+M,cAAc,CAAC,EACvCtN,QAAQ,EACRiF,WAAW,CACZ;QACH;MACF;MACA,OAAO,IAAIgH,qBAAqB,CAAC;QAC/BvF,IAAI,EAAE,aAAa;QACnB5E,IAAI,EAAEkJ,WAAW,CAACrJ,MAAM,CAAC,CAACC,GAAG;QAC7B2K,UAAU,EAAE,IAAI;QAChBtH,WAAW,EAAEgC,aAAa,CAAChC,WAAW;OACvC,CAAC;IACJ;EACF;AACF,CAAC;AA+CD;;;;AAIA,OAAO,MAAMsI,MAAM,GACjBC,MAAc,IAC4F;EAC1G,MAAMC,OAAO,GAAGxM,QAAQ,CAACwM,OAAO,CAACD,MAAM,CAAC;EACxC,MAAME,GAAG,GAAiC,EAAE;EAC5C,MAAMC,OAAO,GAAiC,EAAE;EAChD,MAAMC,KAAK,GAAiC,EAAE;EAC9C,MAAMC,iBAAiB,GAA0C,EAAE;EACnE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,OAAO,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;IACvC,MAAMtI,GAAG,GAAGiI,OAAO,CAACK,CAAC,CAAC;IACtB,MAAME,KAAK,GAAGR,MAAM,CAAChI,GAAG,CAAQ;IAChC,IAAI,sBAAsB,IAAIwI,KAAK,EAAE;MACnC,MAAMC,KAAK,GAAyBD,KAAK,CAAC9B,oBAAoB;MAC9D,MAAMpK,IAAI,GAAGmM,KAAK,CAACnM,IAAI;MACvB,MAAMmD,WAAW,GAAGgJ,KAAK,CAAChJ,WAAW;MACrC,QAAQgJ,KAAK,CAACvH,IAAI;QAChB,KAAK,aAAa;UAChBgH,GAAG,CAACQ,IAAI,CAACnN,GAAG,CAACoN,uBAAuB,CAAC3I,GAAG,EAAE1D,IAAI,EAAEmM,KAAK,CAAC1B,UAAU,EAAE,IAAI,EAAEtH,WAAW,CAAC,CAAC;UACrF0I,OAAO,CAACO,IAAI,CAACnN,GAAG,CAACoN,uBAAuB,CAAC3I,GAAG,EAAE1D,IAAI,EAAEmM,KAAK,CAAC1B,UAAU,EAAE,IAAI,CAAC,CAAC;UAC5EqB,KAAK,CAACM,IAAI,CACRnN,GAAG,CAACoN,uBAAuB,CAAC3I,GAAG,EAAEzE,GAAG,CAACiB,EAAE,CAACF,IAAI,CAAC,EAAEmM,KAAK,CAAC1B,UAAU,EAAE,IAAI,EAAEtH,WAAW,CAAC,CACpF;UACD;QACF,KAAK,oBAAoB;UACvB0I,OAAO,CAACO,IAAI,CAACnN,GAAG,CAACoN,uBAAuB,CAAC3I,GAAG,EAAE1D,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;UAChE8L,KAAK,CAACM,IAAI,CAACnN,GAAG,CAACoN,uBAAuB,CAAC3I,GAAG,EAAEyI,KAAK,CAACjM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAEiD,WAAW,CAAC,CAAC;UAChF4I,iBAAiB,CAACK,IAAI,CACpBnN,GAAG,CAACqN,gCAAgC,CAClC5I,GAAG,EACHA,GAAG,EACHzE,GAAG,CAACsN,0CAA0C,CAACJ,KAAK,CAACnK,MAAM,EAAEmK,KAAK,CAACzK,MAAM,CAAC,CAC3E,CACF;UACD;MACJ;IACF,CAAC,MAAM;MACLkK,GAAG,CAACQ,IAAI,CAACnN,GAAG,CAACoN,uBAAuB,CAAC3I,GAAG,EAAEwI,KAAK,CAACpM,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;MAClE+L,OAAO,CAACO,IAAI,CAACnN,GAAG,CAACoN,uBAAuB,CAAC3I,GAAG,EAAEwI,KAAK,CAACpM,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;MACtEgM,KAAK,CAACM,IAAI,CAACnN,GAAG,CAACoN,uBAAuB,CAAC3I,GAAG,EAAEzE,GAAG,CAACiB,EAAE,CAACgM,KAAK,CAACpM,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IAC9E;EACF;EACA,IAAIpB,aAAa,CAAC8N,uBAAuB,CAACT,iBAAiB,CAAC,EAAE;IAC5D,OAAO9L,IAAI,CACThB,GAAG,CAACwN,eAAe,CACjBxN,GAAG,CAACyN,iBAAiB,CAACb,OAAO,EAAE,EAAE,CAAC,EAClC5M,GAAG,CAACyN,iBAAiB,CAACZ,KAAK,EAAE,EAAE,CAAC,EAChC7M,GAAG,CAAC0N,+BAA+B,CACjCZ,iBAAiB,CAClB,CACF,CACF;EACH;EACA,OAAO9L,IAAI,CAAChB,GAAG,CAACyN,iBAAiB,CAACd,GAAG,EAAE,EAAE,CAAC,CAAC;AAC7C,CAAC;AAED;;;;AAIA,OAAO,MAAMgB,IAAI,GAAGA,CAAyC,GAAGpJ,IAAU,KAExE0C,IAAqB,IAC0D;EAC/E,MAAMpG,GAAG,GAAGoG,IAAI,CAACpG,GAAG;EACpB,IAAIb,GAAG,CAAC4N,WAAW,CAAC/M,GAAG,CAAC,EAAE;IACxB,IAAIb,GAAG,CAAC6N,2BAA2B,CAAChN,GAAG,CAACiN,cAAc,CAAC,EAAE;MACvD,MAAMC,gCAAgC,GAAGlN,GAAG,CAACiN,cAAc,CAACC,gCAAgC,CACzFvJ,MAAM,CAAEwJ,CAAC,IAAMzJ,IAAmC,CAAC0J,QAAQ,CAACD,CAAC,CAAC/M,EAAE,CAAC,CAAC;MACrE,IAAIxB,aAAa,CAAC8N,uBAAuB,CAACQ,gCAAgC,CAAC,EAAE;QAC3E,OAAO/M,IAAI,CACThB,GAAG,CAACwN,eAAe,CACjBxN,GAAG,CAAC2N,IAAI,CAAC9M,GAAG,CAACE,IAAI,EAAEwD,IAAI,CAAC,EACxBvE,GAAG,CAAC2N,IAAI,CAAC9M,GAAG,CAACI,EAAE,EAAEsD,IAAI,CAAC,EACtBvE,GAAG,CAAC0N,+BAA+B,CAACK,gCAAgC,CAAC,CACtE,CACF;MACH,CAAC,MAAM;QACL,OAAO/M,IAAI,CAAChB,GAAG,CAAC2N,IAAI,CAAC9M,GAAG,CAACE,IAAI,EAAEwD,IAAI,CAAC,CAAC;MACvC;IACF;IACA,MAAM,IAAIsB,KAAK,CAAC,iDAAiD,CAAC;EACpE;EACA,OAAO7E,IAAI,CAAChB,GAAG,CAAC2N,IAAI,CAAC9M,GAAG,EAAE0D,IAAI,CAAC,CAAC;AAClC,CAAC;AAED;;;;AAIA,OAAO,MAAM2J,IAAI,GAAGA,CAAyC,GAAG3J,IAAU,KAExE0C,IAAqB,IAC0D;EAC/E,MAAMpG,GAAG,GAAGoG,IAAI,CAACpG,GAAG;EACpB,IAAIb,GAAG,CAAC4N,WAAW,CAAC/M,GAAG,CAAC,EAAE;IACxB,IAAIb,GAAG,CAAC6N,2BAA2B,CAAChN,GAAG,CAACiN,cAAc,CAAC,EAAE;MACvD,MAAMC,gCAAgC,GAAGlN,GAAG,CAACiN,cAAc,CAACC,gCAAgC,CACzFvJ,MAAM,CAAEwJ,CAAC,IAAK,CAAEzJ,IAAmC,CAAC0J,QAAQ,CAACD,CAAC,CAAC/M,EAAE,CAAC,CAAC;MACtE,IAAIxB,aAAa,CAAC8N,uBAAuB,CAACQ,gCAAgC,CAAC,EAAE;QAC3E,OAAO/M,IAAI,CACThB,GAAG,CAACwN,eAAe,CACjBxN,GAAG,CAACkO,IAAI,CAACrN,GAAG,CAACE,IAAI,EAAEwD,IAAI,CAAC,EACxBvE,GAAG,CAACkO,IAAI,CAACrN,GAAG,CAACI,EAAE,EAAEsD,IAAI,CAAC,EACtBvE,GAAG,CAAC0N,+BAA+B,CAACK,gCAAgC,CAAC,CACtE,CACF;MACH,CAAC,MAAM;QACL,OAAO/M,IAAI,CAAChB,GAAG,CAACkO,IAAI,CAACrN,GAAG,CAACE,IAAI,EAAEwD,IAAI,CAAC,CAAC;MACvC;IACF;IACA,MAAM,IAAIsB,KAAK,CAAC,iDAAiD,CAAC;EACpE;EACA,OAAO7E,IAAI,CAAChB,GAAG,CAACkO,IAAI,CAACrN,GAAG,EAAE0D,IAAI,CAAC,CAAC;AAClC,CAAC;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,OAAO,MAAM4J,KAAK,gBAYdnP,IAAI,CACLoP,IAAI,IAAK/K,QAAQ,CAAC+K,IAAI,CAAC,CAAC,CAAC,CAAC,EAC3B,CACExN,MAAuB,EACvB6D,GAAM,EACN1C,OAA4C,KACtB;EACtB,IAAIA,OAAO,IAAIA,OAAO,CAAC+L,cAAc,IAAI,KAAK,EAAE;IAC9C,MAAMO,EAAE,GAAGrO,GAAG,CAACsO,2BAA2B,CAAC1N,MAAM,CAACC,GAAG,EAAE4D,GAAG,CAAC;IAC3D,OAAOzD,IAAI,CAACqN,EAAE,CAAC7C,UAAU,GAAGxL,GAAG,CAACiK,WAAW,CAACoE,EAAE,CAACzI,IAAI,CAAC,GAAGyI,EAAE,CAACzI,IAAI,CAAC;EACjE,CAAC,MAAM;IACL,MAAMyI,EAAE,GAAGrO,GAAG,CAACsO,2BAA2B,CAACrN,EAAE,CAACL,MAAM,CAAC,CAACC,GAAG,EAAE4D,GAAG,CAAC;IAC/D,MAAMjB,KAAK,GAAGxC,IAAI,CAAgBqN,EAAE,CAAC7C,UAAU,GAAGxL,GAAG,CAACiK,WAAW,CAACoE,EAAE,CAACzI,IAAI,CAAC,GAAGyI,EAAE,CAACzI,IAAI,CAAC;IACrF,OAAO2I,SAAS,CACd3N,MAAM,EACN4C,KAAK,EACJyB,CAAC,IAAKA,CAAC,CAACR,GAAG,CAAC,EACZ+J,EAAE,IAAKH,EAAE,CAAC7C,UAAU,IAAIgD,EAAE,KAAK9F,SAAS,GAAG,EAAE,GAAG;MAAE,CAACjE,GAAG,GAAG+J;IAAE,CAAS,CACtE;EACH;AACF,CAAC,CACF;AAQD,MAAMC,qBAAqB,GAAGA,CAC5B5N,GAAY,EACZ6N,KAAQ,EACR3M,OAAwB,KACb;EACX,MAAMmC,WAAW,GAAGgC,aAAa,CAACnE,OAAO,CAAC;EAC1C,MAAM4M,MAAM,GAAG9N,GAAG,CAACqD,WAAW,CAAClE,GAAG,CAAC4O,iBAAiB,CAA8B;EAClF1K,WAAW,CAAClE,GAAG,CAAC4O,iBAAiB,CAAC,GAAGD,MAAM,GAAG,CAAC,GAAGA,MAAM,EAAED,KAAK,CAAC,GAAG,CAACA,KAAK,CAAC;EAC1E,OAAO1O,GAAG,CAAC6O,gBAAgB,CAAChO,GAAG,EAAEqD,WAAW,CAAC;AAC/C,CAAC;AAED;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,MAAMwK,KAAK,GAChBA,CAA+BA,KAAQ,EAAE3M,OAAwB,KAC7DkF,IAAyB,IAA+C;EAC1E,MAAMpG,GAAG,GAAG4N,qBAAqB,CAACxH,IAAI,CAACpG,GAAG,EAAE6N,KAAK,EAAE3M,OAAO,CAAC;EAC3D,MAAMnB,MAAM,GAAGI,IAAI,CAAcH,GAAG,CAAC;EACrC,MAAMgB,YAAY,GAAGtB,MAAM,CAACsB,YAAY,CAACjB,MAAM,CAAC;EAChD,MAAMgB,cAAc,GAAGrB,MAAM,CAACqB,cAAc,CAAChB,MAAM,CAAC;EACpD,MAAMkO,eAAe,GAAG3L,cAAc,CAACvC,MAAM,CAAC;EAC9C,MAAMe,EAAE,GAAGpB,MAAM,CAACoB,EAAE,CAACf,MAAM,CAAC;EAC5B,MAAMmO,GAAG,GAAQzK,MAAM,CAAC0K,MAAM,CAAE5I,KAAc,IAAKvE,YAAY,CAACuE,KAAK,CAAC,EAAE;IACtE,CAAChI,KAAK,CAAC6Q,yBAAyB,GAAG7Q,KAAK,CAAC6Q,yBAAyB;IAClE,CAACvO,MAAM,GAAGL,cAAc,CAAC+K,QAAQ;IACjCvK,GAAG;IACHqO,MAAM,EAAG9I,KAAc,IAAKxE,cAAc,CAACwE,KAAK,CAAC;IACjDe,MAAM,EAAGf,KAAc,IACrB1H,MAAM,CAAC2D,OAAO,CACZyM,eAAe,CAAC1I,KAAK,CAAC,EACrB+I,CAAC,IACApP,cAAc,CAACqP,WAAW,CAACD,CAAC,CAAC,CAACtL,GAAG,CAAEwL,GAAG,KAAM;MAC1CC,IAAI,EAAED,GAAG,CAACE,IAAI;MACd/H,OAAO,EAAE6H,GAAG,CAAC7H;KACd,CAAC,CAAC,CACN;IACH7F,EAAE,EAAGyE,KAAc,IAAkCzE,EAAE,CAACyE,KAAK,CAAC;IAC9D6E,IAAIA,CAAA;MACF,OAAO1L,aAAa,CAAC,IAAI,EAAEoH,SAAS,CAAC;IACvC;GACD,CAAC;EACF,OAAOoI,GAAG;AACZ,CAAC;AAEH;;;;AAIA,OAAO,MAAMS,OAAO,GAQhBA,CACFvI,IAAqB,EACrBlF,OAAkC,KACIf,IAAI,CAAChB,GAAG,CAACwP,OAAO,CAACvI,IAAI,CAACpG,GAAG,EAAEkB,OAAO,CAAC,CAAC;AAE5E;;;;AAIA,OAAO,MAAM0N,QAAQ,GACnBxI,IAAqB,IACiDjG,IAAI,CAAChB,GAAG,CAACyP,QAAQ,CAACxI,IAAI,CAACpG,GAAG,CAAC,CAAC;AAEpG;;;;;;;;AAQA,OAAO,MAAM6O,OAAO,GAClB9O,MAAuB,IACkC;EACzD,MAAMC,GAAG,GAAGb,GAAG,CAAC0P,OAAO,CAAC9O,MAAM,CAACC,GAAG,CAAC;EACnC,OAAOA,GAAG,KAAKD,MAAM,CAACC,GAAG,GAAGD,MAAa,GAAGI,IAAI,CAACH,GAAG,CAAC;AACvD,CAAC;AAED;;;;AAIA,OAAO,MAAM8O,MAAM,GAAGA,CACpBlL,GAAuB,EACvBjB,KAAyB,KAEzBxC,IAAI,CAAChB,GAAG,CAAC4P,YAAY,CAACnL,GAAG,CAAC5D,GAAG,EAAE2C,KAAK,CAAC3C,GAAG,EAAE,IAAI,CAAC,CAAC;AAElD;AACA,OAAO,MAAMgP,qBAAqB,GAAGA,CAACC,EAA0B,EAAEC,EAA0B,KAAI;EAC9F,OAAO/P,GAAG,CAACoF,WAAW,CACpB0K,EAAE,CAAC9K,OAAO,CAAEgL,CAAC,IAAI;IACf,OAAOD,EAAE,CAAClM,GAAG,CAAEoM,CAAC,IAAI;MAClB,IAAIjQ,GAAG,CAACkQ,aAAa,CAACF,CAAC,CAAC,EAAE;QACxB,IAAIhQ,GAAG,CAACkQ,aAAa,CAACD,CAAC,CAAC,EAAE;UACxB;UACA,OAAOjQ,GAAG,CAACyN,iBAAiB,CAC1BuC,CAAC,CAACG,kBAAkB,CAACC,MAAM,CAACH,CAAC,CAACE,kBAAkB,CAAC,EACjDH,CAAC,CAACK,eAAe,CAACD,MAAM,CAACH,CAAC,CAACI,eAAe,CAAC,CAC5C;QACH,CAAC,MAAM,IACLrQ,GAAG,CAAC4N,WAAW,CAACqC,CAAC,CAAC,IAAIjQ,GAAG,CAAC6N,2BAA2B,CAACoC,CAAC,CAACnC,cAAc,CAAC,IACvE9N,GAAG,CAACkQ,aAAa,CAACD,CAAC,CAAClP,IAAI,CAAC,IAAIf,GAAG,CAACkQ,aAAa,CAACD,CAAC,CAAChP,EAAE,CAAC,EACpD;UACA;UACA,MAAMF,IAAI,GAAGf,GAAG,CAACyN,iBAAiB,CAChCuC,CAAC,CAACG,kBAAkB,CAACC,MAAM,CAACH,CAAC,CAAClP,IAAI,CAACoP,kBAAkB,CAAC,EACtDH,CAAC,CAACK,eAAe,CAACD,MAAM,CAACH,CAAC,CAAClP,IAAI,CAACsP,eAAe,CAAC,CACjD;UACD,MAAMpP,EAAE,GAAGjB,GAAG,CAACyN,iBAAiB,CAC9BzN,GAAG,CAACsQ,uBAAuB,CAACN,CAAC,CAACG,kBAAkB,CAAC,CAACC,MAAM,CAACH,CAAC,CAAChP,EAAE,CAACkP,kBAAkB,CAAC,EACjFnQ,GAAG,CAACuQ,oBAAoB,CAACP,CAAC,CAACK,eAAe,CAAC,CAACD,MAAM,CAACH,CAAC,CAAChP,EAAE,CAACoP,eAAe,CAAC,CACzE;UACD,OAAOrQ,GAAG,CAACwN,eAAe,CACxBzM,IAAI,EACJE,EAAE,EACFjB,GAAG,CAAC0N,+BAA+B,CACjCuC,CAAC,CAACnC,cAAc,CAACC,gCAAgC,CAClD,CACF;QACH;MACF,CAAC,MAAM,IACL/N,GAAG,CAAC4N,WAAW,CAACoC,CAAC,CAAC,IAAIhQ,GAAG,CAAC6N,2BAA2B,CAACmC,CAAC,CAAClC,cAAc,CAAC,IACvE9N,GAAG,CAACkQ,aAAa,CAACF,CAAC,CAACjP,IAAI,CAAC,IAAIf,GAAG,CAACkQ,aAAa,CAACF,CAAC,CAAC/O,EAAE,CAAC,EACpD;QACA,IAAIjB,GAAG,CAACkQ,aAAa,CAACD,CAAC,CAAC,EAAE;UACxB;UACA,MAAMlP,IAAI,GAAGf,GAAG,CAACyN,iBAAiB,CAChCuC,CAAC,CAACjP,IAAI,CAACoP,kBAAkB,CAACC,MAAM,CAACH,CAAC,CAACE,kBAAkB,CAAC,EACtDH,CAAC,CAACjP,IAAI,CAACsP,eAAe,CAACD,MAAM,CAACH,CAAC,CAACI,eAAe,CAAC,CACjD;UACD,MAAMpP,EAAE,GAAGjB,GAAG,CAACyN,iBAAiB,CAC9BuC,CAAC,CAAC/O,EAAE,CAACkP,kBAAkB,CAACC,MAAM,CAACpQ,GAAG,CAACsQ,uBAAuB,CAACL,CAAC,CAACE,kBAAkB,CAAC,CAAC,EACjFH,CAAC,CAAC/O,EAAE,CAACoP,eAAe,CAACD,MAAM,CAACpQ,GAAG,CAACuQ,oBAAoB,CAACN,CAAC,CAACI,eAAe,CAAC,CAAC,CACzE;UACD,OAAOrQ,GAAG,CAACwN,eAAe,CACxBzM,IAAI,EACJE,EAAE,EACFjB,GAAG,CAAC0N,+BAA+B,CACjCsC,CAAC,CAAClC,cAAc,CAACC,gCAAgC,CAClD,CACF;QACH,CAAC,MAAM,IACL/N,GAAG,CAAC4N,WAAW,CAACqC,CAAC,CAAC,IAAIjQ,GAAG,CAAC6N,2BAA2B,CAACoC,CAAC,CAACnC,cAAc,CAAC,IACvE9N,GAAG,CAACkQ,aAAa,CAACD,CAAC,CAAClP,IAAI,CAAC,IAAIf,GAAG,CAACkQ,aAAa,CAACD,CAAC,CAAChP,EAAE,CAAC,EACpD;UACA;UACA,MAAMF,IAAI,GAAGf,GAAG,CAACyN,iBAAiB,CAChCuC,CAAC,CAACjP,IAAI,CAACoP,kBAAkB,CAACC,MAAM,CAACH,CAAC,CAAClP,IAAI,CAACoP,kBAAkB,CAAC,EAC3DH,CAAC,CAACjP,IAAI,CAACsP,eAAe,CAACD,MAAM,CAACH,CAAC,CAAClP,IAAI,CAACsP,eAAe,CAAC,CACtD;UACD,MAAMpP,EAAE,GAAGjB,GAAG,CAACyN,iBAAiB,CAC9BuC,CAAC,CAAC/O,EAAE,CAACkP,kBAAkB,CAACC,MAAM,CAACH,CAAC,CAAChP,EAAE,CAACkP,kBAAkB,CAAC,EACvDH,CAAC,CAAC/O,EAAE,CAACoP,eAAe,CAACD,MAAM,CAACH,CAAC,CAAChP,EAAE,CAACoP,eAAe,CAAC,CAClD;UACD,OAAOrQ,GAAG,CAACwN,eAAe,CACxBzM,IAAI,EACJE,EAAE,EACFjB,GAAG,CAAC0N,+BAA+B,CACjCsC,CAAC,CAAClC,cAAc,CAACC,gCAAgC,CAACqC,MAAM,CACtDH,CAAC,CAACnC,cAAc,CAACC,gCAAgC,CAClD,CACF,CACF;QACH;MACF;MACA,MAAM,IAAIlI,KAAK,CAAC,mEAAmE,CAAC;IACtF,CAAC,CAAC;EACJ,CAAC,CAAC,CACH;AACH,CAAC;AAED;;;;AAIA,OAAO,MAAM2K,MAAM,gBAQfxR,IAAI,CACN,CAAC,EACD,CACEiI,IAAsB,EACtBwJ,IAAuB,KAEvBzP,IAAI,CACF6O,qBAAqB,CACnB7P,GAAG,CAAC0Q,OAAO,CAACzJ,IAAI,CAACpG,GAAG,CAAC,GAAGoG,IAAI,CAACpG,GAAG,CAACgE,KAAK,GAAG,CAACoC,IAAI,CAACpG,GAAG,CAAC,EACnDb,GAAG,CAAC0Q,OAAO,CAACD,IAAI,CAAC5P,GAAG,CAAC,GAAG4P,IAAI,CAAC5P,GAAG,CAACgE,KAAK,GAAG,CAAC4L,IAAI,CAAC5P,GAAG,CAAC,CACpD,CACF,CACJ;AAED;;;;AAIA,OAAO,MAAM8P,OAAO,gBAQhB3R,IAAI,CACLoP,IAAI,IAAK/K,QAAQ,CAAC+K,IAAI,CAAC,CAAC,CAAC,CAAC,EAC3B,CAAqBrN,IAAsB,EAAEE,EAAoB,KAC/DD,IAAI,CAAChB,GAAG,CAAC2Q,OAAO,CAAC5P,IAAI,CAACF,GAAG,EAAEI,EAAE,CAACJ,GAAG,CAAC,CAAC,CACtC;AAED;;;;AAIA,OAAO,MAAM+P,OAAO,GAAGA,CACrBC,CAAwB,EACxB3M,WAA6B,KACTlD,IAAI,CAAChB,GAAG,CAAC8Q,aAAa,CAAC,MAAMD,CAAC,EAAE,CAAChQ,GAAG,EAAEqD,WAAW,CAAC,CAAC;AAkBzE,OAAM,SAAUM,MAAMA,CACpBuM,SAA4D,EAC5DhP,OAA8B;EAE9B,OAAQkF,IAAI,IACVjG,IAAI,CAAChB,GAAG,CAACkH,gBAAgB,CACvBD,IAAI,CAACpG,GAAG,EACR,CAACoE,CAAC,EAAElD,OAAO,EAAElB,GAAG,KAAI;IAClB,MAAMkO,GAAG,GAAGgC,SAAS,CAAC9L,CAAC,EAAElD,OAAO,EAAElB,GAAG,CAAC;IACtC,IAAIrB,SAAS,CAACwR,SAAS,CAACjC,GAAG,CAAC,EAAE;MAC5B,OAAOA,GAAG,GACNzP,MAAM,CAACoI,IAAI,EAAE,GACbpI,MAAM,CAAC+H,IAAI,CAAC7G,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEoE,CAAC,CAAC,CAAC;IAC3C;IACA,OAAO8J,GAAG;EACZ,CAAC,EACD7I,aAAa,CAACnE,OAAO,CAAC,CACvB,CAAC;AACN;AAEA;;;;;;;AAOA,OAAO,MAAMkP,eAAe,gBAiCxBjS,IAAI,CAAEoP,IAAI,IAAK/K,QAAQ,CAAC+K,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI/K,QAAQ,CAAC+K,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CACzDrN,IAAiC,EACjCE,EAAyB,EACzB8B,MAAmH,EACnHN,MAAiH,KAEjHzB,IAAI,CACFhB,GAAG,CAACwN,eAAe,CACjBzM,IAAI,CAACF,GAAG,EACRI,EAAE,CAACJ,GAAG,EACNb,GAAG,CAACkR,yBAAyB,CAACnO,MAAM,EAAEN,MAAM,CAAC,CAC9C,CACF,CAAC;AAEJ;;;;;;;AAOA,OAAO,MAAM8L,SAAS,gBAyBlBvP,IAAI,CACLoP,IAAI,IAAK/K,QAAQ,CAAC+K,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI/K,QAAQ,CAAC+K,IAAI,CAAC,CAAC,CAAC,CAAC,EAChD,CACErN,IAAiC,EACjCE,EAAyB,EACzB8B,MAA6B,EAC7BN,MAA2B,KAE3BwO,eAAe,CAAClQ,IAAI,EAAEE,EAAE,EAAGkQ,KAAK,IAAK3Q,WAAW,CAAC8F,OAAO,CAACvD,MAAM,CAACoO,KAAK,CAAC,CAAC,EAAGC,GAAG,IAAK5Q,WAAW,CAAC8F,OAAO,CAAC7D,MAAM,CAAC2O,GAAG,CAAC,CAAC,CAAC,CACtH;AAED;;;;;;;;;;;;;AAaA,OAAO,MAAMC,gBAAgB,GAAGA,CAC9BtQ,IAAU,EACVE,EAAM,KACsBsN,SAAS,CAAC7K,OAAO,CAAC3C,IAAI,CAAC,EAAE2C,OAAO,CAACzC,EAAE,CAAC,EAAE,MAAMA,EAAE,EAAE,MAAMF,IAAI,CAAC;AAEzF;;;;;;;;;;;;;;;;;AAiBA,OAAO,MAAMuQ,iBAAiB,GAAGA,CAG/B,GAAGC,KAAQ,KACmC3N,KAAK,CAAC,GAAG2N,KAAK,CAAC1N,GAAG,CAAC,CAAC,CAAC9C,IAAI,EAAEE,EAAE,CAAC,KAAKoQ,gBAAgB,CAACtQ,IAAI,EAAEE,EAAE,CAAC,CAAC,CAAC;AAE/G;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,OAAO,MAAMuQ,uBAAuB,gBAchCxS,IAAI,CACLoP,IAAI,IAAK/K,QAAQ,CAAC+K,IAAI,CAAC,CAAC,CAAC,CAAC,EAC3B,CACExN,MAAuB,EACvB6D,GAAM,EACNjB,KAAQ,EACRzB,OAAwB,KACgC;EACxD,MAAM0P,QAAQ,GAAGjB,MAAM,CACrBvP,EAAE,CAACL,MAAM,CAAC,EACV4L,MAAM,CAAC;IAAE,CAAC/H,GAAG,GAAGjF,SAAS,CAACkS,QAAQ,CAAClO,KAAK,CAAC,GAAGQ,YAAY,CAACR,KAAK,CAAC,GAAGE,OAAO,CAACF,KAAK;EAAC,CAAE,CAAC,CACpF,CAAC3C,GAAG;EACL,OAAOG,IAAI,CAAChB,GAAG,CAACwN,eAAe,CAC7B5M,MAAM,CAACC,GAAG,EACVkB,OAAO,GAAG/B,GAAG,CAAC6O,gBAAgB,CAAC4C,QAAQ,EAAEvL,aAAa,CAACnE,OAAO,CAAC,CAAC,GAAG0P,QAAQ,EAC3EzR,GAAG,CAAC0N,+BAA+B,CACjC,CACE1N,GAAG,CAACqN,gCAAgC,CAClC5I,GAAG,EACHA,GAAG,EACHzE,GAAG,CAACsN,0CAA0C,CAC5C,MAAMhO,MAAM,CAAC+H,IAAI,CAAC7D,KAAK,CAAC,EACxB,MAAMlE,MAAM,CAACoI,IAAI,EAAE,CACpB,CACF,CACF,CACF,CACF,CAAC;AACJ,CAAC,CACF;AAED,MAAMxB,aAAa,GACjBnE,OAAsC,IACV;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ,OAAO,EAAE;EACX;EACA,MAAMgN,GAAG,GAA6B,EAAE;EAExC;EACA,MAAM4C,MAAM,GAAGrN,MAAM,CAACsN,qBAAqB,CAAC7P,OAAO,CAAC;EACpD,KAAK,MAAM8P,GAAG,IAAIF,MAAM,EAAE;IACxB5C,GAAG,CAAC8C,GAAG,CAAC,GAAG9P,OAAO,CAAC8P,GAAG,CAAC;EACzB;EAEA;EACA,IAAI9P,OAAO,CAAC4F,MAAM,KAAKe,SAAS,EAAE;IAChC,MAAMf,MAAM,GAAG5F,OAAO,CAAC4F,MAAM;IAC7B,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAC9BoH,GAAG,CAAC/O,GAAG,CAAC8R,gBAAgB,CAAC,GAAGnK,MAAM,CAACC,EAAE;MACrCmH,GAAG,CAACpH,MAAM,CAACC,EAAE,CAAC,GAAGD,MAAM,CAACE,UAAU;IACpC,CAAC,MAAM;MACLkH,GAAG,CAAC/O,GAAG,CAAC8R,gBAAgB,CAAC,GAAGnK,MAAM;IACpC;EACF;EACA,MAAMoK,IAAI,GAAGA,CAAChR,IAA0B,EAAEE,EAAU,KAAI;IACtD,IAAIc,OAAO,CAAChB,IAAI,CAAC,KAAK2H,SAAS,EAAE;MAC/BqG,GAAG,CAAC9N,EAAE,CAAC,GAAGc,OAAO,CAAChB,IAAI,CAAC;IACzB;EACF,CAAC;EACDgR,IAAI,CAAC,SAAS,EAAE/R,GAAG,CAACgS,mBAAmB,CAAC;EACxCD,IAAI,CAAC,YAAY,EAAE/R,GAAG,CAACiS,sBAAsB,CAAC;EAC9CF,IAAI,CAAC,OAAO,EAAE/R,GAAG,CAACkS,iBAAiB,CAAC;EACpCH,IAAI,CAAC,aAAa,EAAE/R,GAAG,CAACmS,uBAAuB,CAAC;EAChDJ,IAAI,CAAC,UAAU,EAAE/R,GAAG,CAACoS,oBAAoB,CAAC;EAC1CL,IAAI,CAAC,SAAS,EAAE/R,GAAG,CAACqS,mBAAmB,CAAC;EACxCN,IAAI,CAAC,eAAe,EAAE/R,GAAG,CAACsS,yBAAyB,CAAC;EACpDP,IAAI,CAAC,YAAY,EAAE/R,GAAG,CAACuS,sBAAsB,CAAC;EAC9CR,IAAI,CAAC,WAAW,EAAE3R,KAAK,CAACoS,eAAe,CAAC;EACxCT,IAAI,CAAC,QAAQ,EAAE3R,KAAK,CAACqS,YAAY,CAAC;EAClCV,IAAI,CAAC,aAAa,EAAE3R,KAAK,CAACsS,iBAAiB,CAAC;EAC5CX,IAAI,CAAC,aAAa,EAAE/R,GAAG,CAAC2S,uBAAuB,CAAC;EAChDZ,IAAI,CAAC,UAAU,EAAE/R,GAAG,CAAC4S,oBAAoB,CAAC;EAE1C,OAAO7D,GAAG;AACZ,CAAC;AA4BD;;;;AAIA,OAAO,MAAM7K,WAAW,GAAIA,WAA4B,IAAe+C,IAAqB,IAC1FjG,IAAI,CAAChB,GAAG,CAAC6O,gBAAgB,CAAC5H,IAAI,CAACpG,GAAG,EAAEqD,WAAW,CAAC,CAAC;AAEnD;;;;AAIA,OAAO,MAAMsD,OAAO,GAAIA,OAA8B,IAAeP,IAAqB,IACxFjG,IAAI,CAAChB,GAAG,CAAC6S,aAAa,CAAC5L,IAAI,CAACpG,GAAG,EAAEb,GAAG,CAACgS,mBAAmB,EAAExK,OAAO,CAAC,CAAC;AAErE;;;;AAIA,OAAO,MAAMsL,UAAU,GAAIA,UAAoC,IAAe7L,IAAqB,IACjGjG,IAAI,CAAChB,GAAG,CAAC6S,aAAa,CAAC5L,IAAI,CAACpG,GAAG,EAAEb,GAAG,CAACiS,sBAAsB,EAAEa,UAAU,CAAC,CAAC;AAE3E;;;;AAIA,OAAO,MAAM9K,KAAK,GAAIA,KAA0B,IAAef,IAAqB,IAClFjG,IAAI,CAAChB,GAAG,CAAC6S,aAAa,CAAC5L,IAAI,CAACpG,GAAG,EAAEb,GAAG,CAACkS,iBAAiB,EAAElK,KAAK,CAAC,CAAC;AAEjE;;;;AAIA,OAAO,MAAME,WAAW,GACrBA,WAAsC,IAAejB,IAAqB,IACzEjG,IAAI,CAAChB,GAAG,CAAC6S,aAAa,CAAC5L,IAAI,CAACpG,GAAG,EAAEb,GAAG,CAACmS,uBAAuB,EAAEjK,WAAW,CAAC,CAAC;AAE/E;;;;AAIA,OAAO,MAAM6K,QAAQ,GAAIA,QAAgC,IAAe9L,IAAqB,IAC3FjG,IAAI,CAAChB,GAAG,CAAC6S,aAAa,CAAC5L,IAAI,CAACpG,GAAG,EAAEb,GAAG,CAACoS,oBAAoB,EAAEW,QAAQ,CAAC,CAAC;AAEvE,MAAMC,QAAQ,GAAOxP,KAAQ,IAAYyD,IAAqB,IAC5DjG,IAAI,CAAChB,GAAG,CAAC6S,aAAa,CAAC5L,IAAI,CAACpG,GAAG,EAAEb,GAAG,CAACqS,mBAAmB,EAAE7O,KAAK,CAAC,CAAC;AAEnE;AACE;;;;AAIAwP,QAAQ,IAAIlH,OAAO;AAGrB;;;;AAIA,OAAO,MAAMmH,aAAa,GACvBA,aAA0C,IAAehM,IAAqB,IAC7EjG,IAAI,CAAChB,GAAG,CAAC6S,aAAa,CAAC5L,IAAI,CAACpG,GAAG,EAAEb,GAAG,CAACsS,yBAAyB,EAAEW,aAAa,CAAC,CAAC;AAEnF;;;;;;;;AAQA,OAAO,MAAMC,UAAU,GAAIA,UAAoC,IAAejM,IAAqB,IACjGjG,IAAI,CAAChB,GAAG,CAAC6S,aAAa,CAAC5L,IAAI,CAACpG,GAAG,EAAEb,GAAG,CAACuS,sBAAsB,EAAEW,UAAU,CAAC,CAAC;AAE3E;;;;AAIA,OAAO,MAAMC,WAAW,GAClBA,WAAuC,IAAYlM,IAAqB,IAC1EjG,IAAI,CAAChB,GAAG,CAAC6S,aAAa,CAAC5L,IAAI,CAACpG,GAAG,EAAET,KAAK,CAACsS,iBAAiB,EAAE,MAAMS,WAAW,CAAC,CAAC;AAEjF;;;;AAIA,OAAO,MAAMC,WAAW,GACrBA,WAAsC,IAAenM,IAAqB,IACzEjG,IAAI,CAAChB,GAAG,CAAC6S,aAAa,CAAC5L,IAAI,CAACpG,GAAG,EAAEb,GAAG,CAAC2S,uBAAuB,EAAES,WAAW,CAAC,CAAC;AAE/E;;;;AAIA,OAAO,MAAMC,QAAQ,GAAIA,QAAgC,IAAepM,IAAqB,IAC3FjG,IAAI,CAAChB,GAAG,CAAC6S,aAAa,CAAC5L,IAAI,CAACpG,GAAG,EAAEb,GAAG,CAAC4S,oBAAoB,EAAES,QAAQ,CAAC,CAAC;AAUvE;;;;AAIA,OAAO,MAAMC,MAAM,gBAoBftU,IAAI,CACN,CAAC,EACD,CAQEiI,IAAqB,EACrBsM,OAAU,KAC8B;EACxC,OAAOvS,IAAI,CAAChB,GAAG,CAACsT,MAAM,CAACrM,IAAI,CAACpG,GAAG,EAAE0S,OAAO,CAAC,CAAC;AAC5C,CAAC,CACF;AAED;;;;AAIA,OAAO,MAAMC,aAAa,gBAAG3M,MAAM,CAACC,GAAG,CAAC,+BAA+B,CAAC;AAExE;;;;;;;;;AASA,OAAO,MAAM2M,OAAO,GACC1R,OAA8B,IAAYkF,IAAqB,IAChFA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAaA,CAAC,KAAKA,CAAC,CAACyO,IAAI,EAAE,EAAE;EACpC/L,MAAM,EAAE6L,aAAa;EACrBtL,WAAW,EAAE,iDAAiD;EAC9D,GAAGnG;CACJ,CAAC,CACH;AAEL;;;;AAIA,OAAO,MAAM4R,eAAe,GAAkBxT,OAAO,CAACwT,eAAe;AAQrE;;;;AAIA,OAAO,MAAMC,SAAS,GAAGA,CACvBA,SAAiB,EACjB7R,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CACHS,CAAC,IAAaA,CAAC,CAAC+H,MAAM,IAAI4G,SAAS,EACpC;EACEjM,MAAM,EAAEgM,eAAe;EACvBzL,WAAW,EAAE,oBAAoB0L,SAAS,oBAAoB;EAC9DV,UAAU,EAAE;IAAEU;EAAS,CAAE;EACzB,GAAG7R;CACJ,CACF,CACF;AAEH;;;;AAIA,OAAO,MAAM8R,eAAe,GAAkB1T,OAAO,CAAC0T,eAAe;AAQrE;;;;AAIA,OAAO,MAAMC,SAAS,GAAGA,CACvBA,SAAiB,EACjB/R,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CACHS,CAAC,IAAaA,CAAC,CAAC+H,MAAM,IAAI8G,SAAS,EACpC;EACEnM,MAAM,EAAEkM,eAAe;EACvB3L,WAAW,EAAE,qBAAqB4L,SAAS,oBAAoB;EAC/DZ,UAAU,EAAE;IAAEY;EAAS,CAAE;EACzB,GAAG/R;CACJ,CACF,CACF;AAEH;;;;AAIA,OAAO,MAAMgS,aAAa,gBAAGlN,MAAM,CAACC,GAAG,CAAC,+BAA+B,CAAC;AAExE;;;;AAIA,OAAO,MAAMkN,OAAO,GAAGA,CACrBC,KAAa,EACblS,OAA8B,KAEzBkF,IAAqB,IAAqB;EAC/C,MAAM+M,OAAO,GAAGC,KAAK,CAACC,MAAM;EAC5B,OAAOjN,IAAI,CAACgE,IAAI,CACdzG,MAAM,CACHS,CAAC,IAAY;IACZ;IACAgP,KAAK,CAACE,SAAS,GAAG,CAAC;IACnB,OAAOF,KAAK,CAACG,IAAI,CAACnP,CAAC,CAAC;EACtB,CAAC,EACD;IACE0C,MAAM,EAAE;MAAEC,EAAE,EAAEmM,aAAa;MAAElM,UAAU,EAAE;QAAEoM;MAAK;IAAE,CAAE;IACpD/L,WAAW,EAAE,iCAAiC8L,OAAO,EAAE;IACvDd,UAAU,EAAE;MAAEc;IAAO,CAAE;IACvBlU,SAAS,EAAEA,CAAA,KAAOuU,EAAE,IAAKA,EAAE,CAACC,cAAc,CAACL,KAAK,CAAQ;IACxD,GAAGlS;GACJ,CACF,CACF;AACH,CAAC;AAED;;;;AAIA,OAAO,MAAMwS,gBAAgB,gBAAG1N,MAAM,CAACC,GAAG,CAAC,kCAAkC,CAAC;AAE9E;;;;AAIA,OAAO,MAAM0N,UAAU,GAAGA,CACxBA,UAAkB,EAClBzS,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CACHS,CAAC,IAAaA,CAAC,CAACuP,UAAU,CAACA,UAAU,CAAC,EACvC;EACE7M,MAAM,EAAE;IAAEC,EAAE,EAAE2M,gBAAgB;IAAE1M,UAAU,EAAE;MAAE2M;IAAU;EAAE,CAAE;EAC5DtM,WAAW,EAAE,0BAA0BuM,IAAI,CAACC,SAAS,CAACF,UAAU,CAAC,EAAE;EACnEtB,UAAU,EAAE;IAAEc,OAAO,EAAE,IAAIQ,UAAU;EAAE,CAAE;EACzC,GAAGzS;CACJ,CACF,CACF;AAEH;;;;AAIA,OAAO,MAAM4S,cAAc,gBAAG9N,MAAM,CAACC,GAAG,CAAC,gCAAgC,CAAC;AAE1E;;;;AAIA,OAAO,MAAM8N,QAAQ,GAAGA,CACtBA,QAAgB,EAChB7S,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CACHS,CAAC,IAAaA,CAAC,CAAC2P,QAAQ,CAACA,QAAQ,CAAC,EACnC;EACEjN,MAAM,EAAE;IAAEC,EAAE,EAAE+M,cAAc;IAAE9M,UAAU,EAAE;MAAE+M;IAAQ;EAAE,CAAE;EACxD1M,WAAW,EAAE,wBAAwBuM,IAAI,CAACC,SAAS,CAACE,QAAQ,CAAC,EAAE;EAC/D1B,UAAU,EAAE;IAAEc,OAAO,EAAE,MAAMY,QAAQ;EAAG,CAAE;EAC1C,GAAG7S;CACJ,CACF,CACF;AAEH;;;;AAIA,OAAO,MAAM8S,cAAc,gBAAGhO,MAAM,CAACC,GAAG,CAAC,gCAAgC,CAAC;AAE1E;;;;AAIA,OAAO,MAAMmH,QAAQ,GAAGA,CACtB6G,YAAoB,EACpB/S,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CACHS,CAAC,IAAaA,CAAC,CAACgJ,QAAQ,CAAC6G,YAAY,CAAC,EACvC;EACEnN,MAAM,EAAE;IAAEC,EAAE,EAAEiN,cAAc;IAAEhN,UAAU,EAAE;MAAEoG,QAAQ,EAAE6G;IAAY;EAAE,CAAE;EACtE5M,WAAW,EAAE,sBAAsBuM,IAAI,CAACC,SAAS,CAACI,YAAY,CAAC,EAAE;EACjE5B,UAAU,EAAE;IAAEc,OAAO,EAAE,KAAKc,YAAY;EAAI,CAAE;EAC9C,GAAG/S;CACJ,CACF,CACF;AAEH;;;;AAIA,OAAO,MAAMgT,gBAAgB,gBAAGlO,MAAM,CAACC,GAAG,CAAC,kCAAkC,CAAC;AAE9E;;;;;;AAMA,OAAO,MAAMkO,UAAU,GACFjT,OAA8B,IAAYkF,IAAqB,IAChFA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAaA,CAAC,KAAKA,CAAC,CAACgQ,WAAW,EAAE,EAAE;EAC3CtN,MAAM,EAAEoN,gBAAgB;EACxB7M,WAAW,EAAE,oBAAoB;EACjC,GAAGnG;CACJ,CAAC,CACH;AAEL;;;;AAIA,OAAO,MAAMmT,UAAU,gBAAmBhM,MAAM,CAAC+B,IAAI,eACnD+J,UAAU,CAAC;EAAElC,UAAU,EAAE,YAAY;EAAE9K,KAAK,EAAE;AAAY,CAAE,CAAC,CAC9D;AAED;;;;AAIA,OAAO,MAAMmN,gBAAgB,gBAAGtO,MAAM,CAACC,GAAG,CAAC,kCAAkC,CAAC;AAE9E;;;;;;AAMA,OAAO,MAAMsO,UAAU,GACFrT,OAA8B,IAAYkF,IAAqB,IAChFA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAaA,CAAC,KAAKA,CAAC,CAACoQ,WAAW,EAAE,EAAE;EAC3C1N,MAAM,EAAEwN,gBAAgB;EACxBjN,WAAW,EAAE,qBAAqB;EAClC,GAAGnG;CACJ,CAAC,CACH;AAEL;;;;AAIA,OAAO,MAAMuT,UAAU,gBAAmBpM,MAAM,CAAC+B,IAAI,eACnDmK,UAAU,CAAC;EAAEtC,UAAU,EAAE,YAAY;EAAE9K,KAAK,EAAE;AAAY,CAAE,CAAC,CAC9D;AAED;;;;AAIA,OAAO,MAAMuN,YAAY,GAAkBpV,OAAO,CAACoV,YAAY;AAQ/D;;;;AAIA,OAAO,MAAMvI,MAAM,GAAGA,CACpBA,MAAc,EACdjL,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAaA,CAAC,CAAC+H,MAAM,KAAKA,MAAM,EAAE;EACzCrF,MAAM,EAAE4N,YAAY;EACpBrN,WAAW,EAAE8E,MAAM,KAAK,CAAC,GAAG,oBAAoB,GAAG,YAAYA,MAAM,oBAAoB;EACzFkG,UAAU,EAAE;IAAEY,SAAS,EAAE9G,MAAM;IAAE4G,SAAS,EAAE5G;EAAM,CAAE;EACpD,GAAGjL;CACJ,CAAC,CACH;AAEH;;;;;;AAMA,OAAO,MAAMyT,IAAI,gBAAGtM,MAAM,CAAC+B,IAAI,eAAC+B,MAAM,CAAC,CAAC,CAAC,eAAE8F,UAAU,CAAC,MAAM,CAAC,CAAC;AAE9D;;;;AAIA,OAAO,MAAM2C,QAAQ,GACnB1T,OAA8B,IAE9B+R,SAAS,CAAC,CAAC,EAAE;EACX5L,WAAW,EAAE,oBAAoB;EACjC,GAAGnG;CACJ,CAAC;AAEJ;;;;;;AAMA,OAAO,MAAM2T,SAAS,gBAAmBnH,SAAS,CAChDrF,MAAM,EACNgM,UAAU,EACTS,CAAC,IAAKA,CAAC,CAACV,WAAW,EAAE,EACtBhW,QAAQ,CACT,CAACgM,IAAI,eAAC6H,UAAU,CAAC,WAAW,CAAC,CAAC;AAE/B;;;;;;AAMA,OAAO,MAAM8C,SAAS,gBAAmBrH,SAAS,CAChDrF,MAAM,EACNoM,UAAU,EACTK,CAAC,IAAKA,CAAC,CAACN,WAAW,EAAE,EACtBpW,QAAQ,CACT,CAACgM,IAAI,eAAC6H,UAAU,CAAC,WAAW,CAAC,CAAC;AAE/B;;;;AAIA,OAAO,MAAM+C,OAAO,gBAAmB3M,MAAM,CAAC+B,IAAI,eAChDwI,OAAO,CAAC;EAAEX,UAAU,EAAE,SAAS;EAAE9K,KAAK,EAAE;AAAS,CAAE,CAAC,CACrD;AAED;;;;;;AAMA,OAAO,MAAM8N,IAAI,gBAAmBvH,SAAS,CAC3CrF,MAAM,EACN2M,OAAO,EACNF,CAAC,IAAKA,CAAC,CAACjC,IAAI,EAAE,EACfzU,QAAQ,CACT,CAACgM,IAAI,eAAC6H,UAAU,CAAC,MAAM,CAAC,CAAC;AAE1B;;;;;;AAMA,OAAO,MAAMiD,KAAK,GAAIC,SAAiB,IACrCzH,SAAS,CACPrF,MAAM,EACN4B,KAAK,CAAC5B,MAAM,CAAC,EACbrJ,CAAC,CAACkW,KAAK,CAACC,SAAS,CAAC,EAClBvW,aAAa,CAACgI,IAAI,CAACuO,SAAS,CAAC,CAC9B;AAWH,MAAMC,UAAU,gBAAG/M,MAAM,CAAC+B,IAAI,eAAC/G,WAAW,CAAC;EACzC,CAAClE,GAAG,CAACiS,sBAAsB,GAAG,YAAY;EAC1C,CAACjS,GAAG,CAACkS,iBAAiB,GAAG,YAAY;EACrC,CAAClS,GAAG,CAACmS,uBAAuB,GAAG;CAChC,CAAC,CAAC;AAEH;;;;;;;;;;;;;;;;;AAiBA,OAAO,MAAM+D,SAAS,GAGlBA,CAAUtV,MAA2C,EAAE8K,CAAoB,KAAI;EACjF,IAAIrI,QAAQ,CAACzC,MAAM,CAAC,EAAE;IACpB,OAAO+P,OAAO,CAACuF,SAAS,CAACxK,CAAC,CAAC,EAAE9K,MAAM,CAAQ;EAC7C;EACA,MAAMmB,OAAO,GAAiCnB,MAAa;EAC3D,OAAOqQ,eAAe,CACpBgF,UAAU,EACVnN,OAAO,EACP,CAAC6M,CAAC,EAAEtP,CAAC,EAAExF,GAAG,KACRL,WAAW,CAAC2V,GAAG,CAAC;IACdA,GAAG,EAAEA,CAAA,KAAM1B,IAAI,CAAC2B,KAAK,CAACT,CAAC,EAAE5T,OAAO,EAAEsU,OAAO,CAAC;IAC1CC,KAAK,EAAGnH,CAAM,IAAK3O,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAE8U,CAAC,EAAExG,CAAC,CAAC3H,OAAO;GACtD,CAAC,EACJ,CAACxF,CAAC,EAAEqE,CAAC,EAAExF,GAAG,KACRL,WAAW,CAAC2V,GAAG,CAAC;IACdA,GAAG,EAAEA,CAAA,KAAM1B,IAAI,CAACC,SAAS,CAAC1S,CAAC,EAAED,OAAO,EAAEwU,QAAQ,EAAExU,OAAO,EAAEyU,KAAK,CAAC;IAC/DF,KAAK,EAAGnH,CAAM,IAAK3O,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEmB,CAAC,EAAEmN,CAAC,CAAC3H,OAAO;GACtD,CAAC,CACL;AACH,CAAC;AAED;;;;AAIA,OAAO,MAAMiP,QAAQ,gBAAmBvN,MAAM,CAAC+B,IAAI,eACjDwK,QAAQ,CAAC;EAAE3C,UAAU,EAAE,UAAU;EAAE9K,KAAK,EAAE;AAAU,CAAE,CAAC,CACxD;AAED;;;;AAIA,OAAO,MAAM0O,UAAU,gBAAG7P,MAAM,CAACC,GAAG,CAAC,4BAA4B,CAAC;AAElE,MAAM6P,SAAS,GAAG,gFAAgF;AAElG;;;;;;;;AAQA,OAAO,MAAMC,IAAI,gBAAmB1N,MAAM,CAAC+B,IAAI,eAC7C+I,OAAO,CAAC2C,SAAS,EAAE;EACjBhP,MAAM,EAAE+O,UAAU;EAClB5D,UAAU,EAAE,MAAM;EAClB9K,KAAK,EAAE,MAAM;EACbE,WAAW,EAAE,iCAAiC;EAC9CpI,SAAS,EAAEA,CAAA,KAA0BuU,EAAE,IAAKA,EAAE,CAACwC,IAAI;CACpD,CAAC,CACH;AAED;;;;AAIA,OAAO,MAAMC,UAAU,gBAAGjQ,MAAM,CAACC,GAAG,CAAC,4BAA4B,CAAC;AAElE,MAAMiQ,SAAS,GAAG,gCAAgC;AAElD;;;;;;;;;AASA,OAAO,MAAMC,IAAI,gBAAmB9N,MAAM,CAAC+B,IAAI,eAC7C+I,OAAO,CAAC+C,SAAS,EAAE;EACjBpP,MAAM,EAAEmP,UAAU;EAClBhE,UAAU,EAAE,MAAM;EAClB9K,KAAK,EAAE,MAAM;EACbE,WAAW,EAAE,4DAA4D;EACzEpI,SAAS,EAAEA,CAAA,KAA0BuU,EAAE,IAAKA,EAAE,CAAC4C,IAAI;CACpD,CAAC,CACH;AAED;;;;AAIA,OAAO,MAAMC,YAAY,gBAAGrQ,MAAM,CAACC,GAAG,CAAC,8BAA8B,CAAC;AAEtE;;;;;;;;AAQA,OAAO,MAAMqQ,MAAM,GACEpV,OAA8B,IAAYkF,IAAqB,IAChFA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAamS,MAAM,CAACC,QAAQ,CAACpS,CAAC,CAAC,EAAE;EACxC0C,MAAM,EAAEuP,YAAY;EACpBhP,WAAW,EAAE,iBAAiB;EAC9B,GAAGnG;CACJ,CAAC,CACH;AAEL;;;;AAIA,OAAO,MAAMuV,iBAAiB,GAAkBnX,OAAO,CAACmX,iBAAiB;AAQzE;;;;;;AAMA,OAAO,MAAMC,WAAW,GAAGA,CACzBC,GAAW,EACXzV,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAaA,CAAC,GAAGuS,GAAG,EAAE;EAC7B7P,MAAM,EAAE2P,iBAAiB;EACzBpP,WAAW,EAAEsP,GAAG,KAAK,CAAC,GAAG,mBAAmB,GAAG,yBAAyBA,GAAG,EAAE;EAC7EtE,UAAU,EAAE;IAAEuE,gBAAgB,EAAED;EAAG,CAAE;EACrC,GAAGzV;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAM2V,0BAA0B,GAAkBvX,OAAO,CAACuX,0BAA0B;AAQ3F;;;;;;AAMA,OAAO,MAAMC,oBAAoB,GAAGA,CAClCH,GAAW,EACXzV,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAaA,CAAC,IAAIuS,GAAG,EAAE;EAC9B7P,MAAM,EAAE+P,0BAA0B;EAClCxP,WAAW,EAAEsP,GAAG,KAAK,CAAC,GAAG,uBAAuB,GAAG,qCAAqCA,GAAG,EAAE;EAC7FtE,UAAU,EAAE;IAAE0E,OAAO,EAAEJ;EAAG,CAAE;EAC5B,GAAGzV;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAM8V,gBAAgB,gBAAGhR,MAAM,CAACC,GAAG,CAAC,kCAAkC,CAAC;AAE9E;;;;AAIA,OAAO,MAAMgR,UAAU,GAAGA,CACxBC,OAAe,EACfhW,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAa5F,CAAC,CAAC2Y,SAAS,CAAC/S,CAAC,EAAE8S,OAAO,CAAC,KAAK,CAAC,EAAE;EACnDpQ,MAAM,EAAEkQ,gBAAgB;EACxB3P,WAAW,EAAE,yBAAyB6P,OAAO,EAAE;EAC/C7E,UAAU,EAAE;IAAE4E,UAAU,EAAEG,IAAI,CAACC,GAAG,CAACH,OAAO;EAAC,CAAE;EAAE;EAC/C,GAAGhW;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMoW,SAAS,GAAkBhY,OAAO,CAACgY,SAAS;AAQzD;;;;AAIA,OAAO,MAAMC,GAAG,GACKrW,OAA8B,IAAYkF,IAAqB,IAChFA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAamS,MAAM,CAACiB,aAAa,CAACpT,CAAC,CAAC,EAAE;EAC7C0C,MAAM,EAAEwQ,SAAS;EACjBnQ,KAAK,EAAE,SAAS;EAChBE,WAAW,EAAE,YAAY;EACzBgL,UAAU,EAAE;IAAEtN,IAAI,EAAE;EAAS,CAAE;EAC/B,GAAG7D;CACJ,CAAC,CACH;AAEL;;;;AAIA,OAAO,MAAMuW,cAAc,GAAkBnY,OAAO,CAACmY,cAAc;AAQnE;;;;;;AAMA,OAAO,MAAMC,QAAQ,GACnBA,CAAmBC,GAAW,EAAEzW,OAA8B,KAAYkF,IAAqB,IAC7FA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAaA,CAAC,GAAGuT,GAAG,EAAE;EAC7B7Q,MAAM,EAAE2Q,cAAc;EACtBpQ,WAAW,EAAEsQ,GAAG,KAAK,CAAC,GAAG,mBAAmB,GAAG,sBAAsBA,GAAG,EAAE;EAC1EtF,UAAU,EAAE;IAAEuF,gBAAgB,EAAED;EAAG,CAAE;EACrC,GAAGzW;CACJ,CAAC,CACH;AAEL;;;;AAIA,OAAO,MAAM2W,uBAAuB,GAAkBvY,OAAO,CAACuY,uBAAuB;AAQrF;;;;;;AAMA,OAAO,MAAMC,iBAAiB,GAAGA,CAC/BH,GAAW,EACXzW,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAaA,CAAC,IAAIuT,GAAG,EAAE;EAC9B7Q,MAAM,EAAE+Q,uBAAuB;EAC/BxQ,WAAW,EAAEsQ,GAAG,KAAK,CAAC,GAAG,uBAAuB,GAAG,kCAAkCA,GAAG,EAAE;EAC1FtF,UAAU,EAAE;IAAE0F,OAAO,EAAEJ;EAAG,CAAE;EAC5B,GAAGzW;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAM8W,aAAa,GAAkB1Y,OAAO,CAAC0Y,aAAa;AAQjE;;;;;;AAMA,OAAO,MAAMC,OAAO,GAAGA,CACrBtB,GAAW,EACXgB,GAAW,EACXzW,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAaA,CAAC,IAAIuS,GAAG,IAAIvS,CAAC,IAAIuT,GAAG,EAAE;EAC1C7Q,MAAM,EAAEkR,aAAa;EACrB3Q,WAAW,EAAE,oBAAoBsP,GAAG,QAAQgB,GAAG,EAAE;EACjDtF,UAAU,EAAE;IAAE0F,OAAO,EAAEJ,GAAG;IAAEZ,OAAO,EAAEJ;EAAG,CAAE;EAC1C,GAAGzV;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMgX,YAAY,gBAAGlS,MAAM,CAACC,GAAG,CAAC,8BAA8B,CAAC;AAEtE;;;;AAIA,OAAO,MAAMkS,MAAM,GACEjX,OAA8B,IAAYkF,IAAqB,IAChFA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAa,CAACmS,MAAM,CAAC6B,KAAK,CAAChU,CAAC,CAAC,EAAE;EACtC0C,MAAM,EAAEoR,YAAY;EACpB7Q,WAAW,EAAE,wBAAwB;EACrC,GAAGnG;CACJ,CAAC,CACH;AAEL;;;;AAIA,OAAO,MAAMmX,QAAQ,GACnBnX,OAA8B,IACuBwV,WAAW,CAAC,CAAC,EAAExV,OAAO,CAAC;AAE9E;;;;AAIA,OAAO,MAAMoX,QAAQ,GACnBpX,OAA8B,IACuBwW,QAAQ,CAAC,CAAC,EAAExW,OAAO,CAAC;AAE3E;;;;AAIA,OAAO,MAAMqX,WAAW,GACtBrX,OAA8B,IACuB4W,iBAAiB,CAAC,CAAC,EAAE5W,OAAO,CAAC;AAEpF;;;;AAIA,OAAO,MAAMsX,WAAW,GACtBtX,OAA8B,IACuB4V,oBAAoB,CAAC,CAAC,EAAE5V,OAAO,CAAC;AAEvF;;;;;;AAMA,OAAO,MAAMuX,KAAK,GAChBA,CAAC1B,OAAe,EAAEgB,OAAe,KAA8B3R,IAAqB,IAClFsH,SAAS,CACPtH,IAAI,EACJA,IAAI,CAACgE,IAAI,CAAChK,EAAE,EAAE6X,OAAO,CAAClB,OAAO,EAAEgB,OAAO,CAAC,CAAC,EACvC3R,IAAI,IAAK5H,CAAC,CAACia,KAAK,CAACrS,IAAI,EAAE;EAAE2Q,OAAO;EAAEgB;AAAO,CAAE,CAAC,EAC7C3Z,QAAQ,EACR;EAAEsa,MAAM,EAAE;AAAK,CAAE,CAClB;AAEL;;;;;;;;;;AAUA,OAAO,MAAMC,gBAAgB,gBAA2BvI,eAAe,CACrE/H,MAAM,EACNE,MAAM,EACN,CAACuM,CAAC,EAAEtP,CAAC,EAAExF,GAAG,KAAKL,WAAW,CAACiZ,UAAU,CAACpa,CAAC,CAAC+W,KAAK,CAACT,CAAC,CAAC,EAAE,MAAMnV,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAE8U,CAAC,CAAC,CAAC,EAChF+D,CAAC,IAAKlZ,WAAW,CAAC8F,OAAO,CAAChB,MAAM,CAACoU,CAAC,CAAC,CAAC,CACtC,CAACzO,IAAI,eAAC6H,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAEtC;;;;AAIA,OAAO,MAAM6G,MAAM,gBAAmBvQ,MAAM,CAAC6B,IAAI,eAACkM,MAAM,CAAC;EAAErE,UAAU,EAAE,QAAQ;EAAE9K,KAAK,EAAE;AAAQ,CAAE,CAAC,CAAC;AAEpG;;;;AAIA,OAAO,MAAM4R,GAAG,gBAAmBxQ,MAAM,CAAC6B,IAAI,eAACmN,GAAG,CAAC;EAAEtF,UAAU,EAAE,KAAK;EAAE9K,KAAK,EAAE;AAAK,CAAE,CAAC,CAAC;AAExF;;;;AAIA,OAAO,MAAM6R,MAAM,gBAAmBzQ,MAAM,CAAC6B,IAAI,eAAC+N,MAAM,CAAC;EAAElG,UAAU,EAAE,QAAQ;EAAE9K,KAAK,EAAE;AAAQ,CAAE,CAAC,CAAC;AAEpG;;;;AAIA,OAAO,MAAM8R,QAAQ,gBAAmB1Q,MAAM,CAAC6B,IAAI,eACjDiO,QAAQ,CAAC;EAAEpG,UAAU,EAAE,UAAU;EAAE9K,KAAK,EAAE;AAAU,CAAE,CAAC,CACxD;AAED;;;;AAIA,OAAO,MAAM+R,QAAQ,gBAAmB3Q,MAAM,CAAC6B,IAAI,eACjDkO,QAAQ,CAAC;EAAErG,UAAU,EAAE,UAAU;EAAE9K,KAAK,EAAE;AAAU,CAAE,CAAC,CACxD;AAED;;;;AAIA,OAAO,MAAMgS,WAAW,gBAAmB5Q,MAAM,CAAC6B,IAAI,eACpDmO,WAAW,CAAC;EAAEtG,UAAU,EAAE,aAAa;EAAE9K,KAAK,EAAE;AAAa,CAAE,CAAC,CACjE;AAED;;;;AAIA,OAAO,MAAMiS,WAAW,gBAAmB7Q,MAAM,CAAC6B,IAAI,eACpDoO,WAAW,CAAC;EAAEvG,UAAU,EAAE,aAAa;EAAE9K,KAAK,EAAE;AAAa,CAAE,CAAC,CACjE;AAED;;;;AAIA,OAAO,MAAMkS,gBAAgB,gBAAGrT,MAAM,CAACC,GAAG,CAAC,kCAAkC,CAAC;AAE9E;;;;;;;;;;;;;;;;;;AAkBA,OAAO,MAAMqT,UAAU,gBAAmB/Q,MAAM,CAAC6B,IAAI,eACnDzG,MAAM,CAAEkV,CAAC,IAAK,CAACtC,MAAM,CAAC6B,KAAK,CAACS,CAAC,CAAC,IAAItC,MAAM,CAACC,QAAQ,CAACqC,CAAC,CAAC,EAAE;EACpD/R,MAAM,EAAEuS,gBAAgB;EACxBpH,UAAU,EAAE,YAAY;EACxB9K,KAAK,EAAE,wBAAwB;EAC/BE,WAAW,EAAE,mEAAmE;EAChFgL,UAAU,EAAE;IAAEtN,IAAI,EAAE;EAAQ;CAC7B,CAAC,CACH;AAED;;;;AAIA,OAAO,MAAMwU,GAAG,gBAAoB7L,SAAS,CAC3CjF,OAAO,EACPA,OAAO,EACNrC,IAAI,IAAK,CAACA,IAAI,EACdA,IAAI,IAAK,CAACA,IAAI,CAChB;AAED;;;;;;AAMA,OAAO,MAAMhD,MAAM,gBAA2BsK,SAAS,CACrDrF,MAAM,EACNQ,cAAc,EACbiM,CAAC,IAAK9O,MAAM,CAACC,GAAG,CAAC6O,CAAC,CAAC,EACnB9D,GAAG,IAAKA,GAAG,CAAC3J,WAAW,EACxB;EAAEqR,MAAM,EAAE;AAAK,CAAE,CAClB,CAACtO,IAAI,eAAC6H,UAAU,CAAC,QAAQ,CAAC,CAAC;AAE5B;;;;AAIA,OAAO,MAAMuH,uBAAuB,GAAkBla,OAAO,CAACka,uBAAuB;AAQrF;;;;AAIA,OAAO,MAAMC,iBAAiB,GAAGA,CAC/B9C,GAAW,EACXzV,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAaA,CAAC,GAAGuS,GAAG,EAAE;EAC7B7P,MAAM,EAAE;IAAEC,EAAE,EAAEyS,uBAAuB;IAAExS,UAAU,EAAE;MAAE2P;IAAG;EAAE,CAAE;EAC5DtP,WAAW,EAAEsP,GAAG,KAAK,EAAE,GAAG,mBAAmB,GAAG,yBAAyBA,GAAG,GAAG;EAC/E,GAAGzV;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMwY,gCAAgC,GAAkBpa,OAAO,CAACoa,gCAAgC;AAQvG;;;;AAIA,OAAO,MAAMC,0BAA0B,GAAGA,CACxChD,GAAW,EACXzV,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAaA,CAAC,IAAIuS,GAAG,EAAE;EAC9B7P,MAAM,EAAE;IAAEC,EAAE,EAAE2S,gCAAgC;IAAE1S,UAAU,EAAE;MAAE2P;IAAG;EAAE,CAAE;EACrEtP,WAAW,EAAEsP,GAAG,KAAK,EAAE,GACnB,uBAAuB,GACvB,qCAAqCA,GAAG,GAAG;EAC/C,GAAGzV;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAM0Y,oBAAoB,GAAkBta,OAAO,CAACsa,oBAAoB;AAQ/E;;;;AAIA,OAAO,MAAMC,cAAc,GAAGA,CAC5BlC,GAAW,EACXzW,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAaA,CAAC,GAAGuT,GAAG,EAAE;EAC7B7Q,MAAM,EAAE;IAAEC,EAAE,EAAE6S,oBAAoB;IAAE5S,UAAU,EAAE;MAAE2Q;IAAG;EAAE,CAAE;EACzDtQ,WAAW,EAAEsQ,GAAG,KAAK,EAAE,GAAG,mBAAmB,GAAG,sBAAsBA,GAAG,GAAG;EAC5E,GAAGzW;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAM4Y,6BAA6B,GAAkBxa,OAAO,CAACwa,6BAA6B;AAQjG;;;;AAIA,OAAO,MAAMC,uBAAuB,GAAGA,CACrCpC,GAAW,EACXzW,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAaA,CAAC,IAAIuT,GAAG,EAAE;EAC9B7Q,MAAM,EAAE;IAAEC,EAAE,EAAE+S,6BAA6B;IAAE9S,UAAU,EAAE;MAAE2Q;IAAG;EAAE,CAAE;EAClEtQ,WAAW,EAAEsQ,GAAG,KAAK,EAAE,GAAG,uBAAuB,GAAG,kCAAkCA,GAAG,GAAG;EAC5F,GAAGzW;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAM8Y,mBAAmB,GAAkB1a,OAAO,CAAC0a,mBAAmB;AAQ7E;;;;AAIA,OAAO,MAAMC,aAAa,GAAGA,CAC3BtD,GAAW,EACXgB,GAAW,EACXzW,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAaA,CAAC,IAAIuS,GAAG,IAAIvS,CAAC,IAAIuT,GAAG,EAAE;EAC1C7Q,MAAM,EAAE;IAAEC,EAAE,EAAEiT,mBAAmB;IAAEhT,UAAU,EAAE;MAAE2Q,GAAG;MAAEhB;IAAG;EAAE,CAAE;EAC7DtP,WAAW,EAAE,oBAAoBsP,GAAG,SAASgB,GAAG,GAAG;EACnD,GAAGzW;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMgZ,cAAc,GACzBhZ,OAA8B,IACuBuY,iBAAiB,CAAC,EAAE,EAAEvY,OAAO,CAAC;AAErF;;;;AAIA,OAAO,MAAMiZ,cAAc,GACzBjZ,OAA8B,IACuB2Y,cAAc,CAAC,EAAE,EAAE3Y,OAAO,CAAC;AAElF;;;;AAIA,OAAO,MAAMkZ,iBAAiB,GAC5BlZ,OAA8B,IACuByY,0BAA0B,CAAC,EAAE,EAAEzY,OAAO,CAAC;AAE9F;;;;AAIA,OAAO,MAAMmZ,iBAAiB,GAC5BnZ,OAA8B,IACuB6Y,uBAAuB,CAAC,EAAE,EAAE7Y,OAAO,CAAC;AAE3F;;;;;;AAMA,OAAO,MAAMoZ,WAAW,GACtBA,CAACvD,OAAe,EAAEgB,OAAe,KAA8B3R,IAAqB,IAClFsH,SAAS,CACPtH,IAAI,EACJA,IAAI,CAACgE,IAAI,CAAChK,EAAE,EAAE6Z,aAAa,CAAClD,OAAO,EAAEgB,OAAO,CAAC,CAAC,EAC7C3R,IAAI,IAAK9I,OAAO,CAACmb,KAAK,CAACrS,IAAI,EAAE;EAAE2Q,OAAO;EAAEgB;AAAO,CAAE,CAAC,EACnD3Z,QAAQ,EACR;EAAEsa,MAAM,EAAE;AAAK,CAAE,CAClB;AAEL;;;;;;;;AAQA,OAAO,MAAM6B,MAAM,gBAA2BnK,eAAe,CAC3D/H,MAAM,EACNM,cAAc,EACd,CAACmM,CAAC,EAAEtP,CAAC,EAAExF,GAAG,KAAI;EACZ,IAAI8U,CAAC,CAACjC,IAAI,EAAE,KAAK,EAAE,EAAE;IACnB,OAAOlT,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAE8U,CAAC,CAAC,CAAC;EACnD;EAEA,OAAOnV,WAAW,CAAC2V,GAAG,CAAC;IACrBA,GAAG,EAAEA,CAAA,KAAMkF,MAAM,CAAC1F,CAAC,CAAC;IACpBW,KAAK,EAAEA,CAAA,KAAM9V,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAE8U,CAAC;GACrC,CAAC;AACJ,CAAC,EACA+D,CAAC,IAAKlZ,WAAW,CAAC8F,OAAO,CAAChB,MAAM,CAACoU,CAAC,CAAC,CAAC,CACtC,CAACzO,IAAI,eAAC6H,UAAU,CAAC,QAAQ,CAAC,CAAC;AAE5B;;;;AAIA,OAAO,MAAMwI,sBAAsB,gBAAmB9R,cAAc,CAACyB,IAAI,eACvE8P,cAAc,CAAC;EAAEjI,UAAU,EAAE,wBAAwB;EAAE9K,KAAK,EAAE;AAAwB,CAAE,CAAC,CAC1F;AAED;;;;AAIA,OAAO,MAAMuT,cAAc,gBAA2BH,MAAM,CAACnQ,IAAI,eAC/D8P,cAAc,CAAC;EAAEjI,UAAU,EAAE,gBAAgB;EAAE9K,KAAK,EAAE;AAAgB,CAAE,CAAC,CAC1E;AAED;;;;AAIA,OAAO,MAAMwT,sBAAsB,gBAAmBhS,cAAc,CAACyB,IAAI,eACvE+P,cAAc,CAAC;EAAElI,UAAU,EAAE,wBAAwB;EAAE9K,KAAK,EAAE;AAAwB,CAAE,CAAC,CAC1F;AAED;;;;AAIA,OAAO,MAAMyT,cAAc,gBAA2BL,MAAM,CAACnQ,IAAI,eAC/D+P,cAAc,CAAC;EAAElI,UAAU,EAAE,gBAAgB;EAAE9K,KAAK,EAAE;AAAgB,CAAE,CAAC,CAC1E;AAED;;;;AAIA,OAAO,MAAM0T,yBAAyB,gBAAmBlS,cAAc,CAACyB,IAAI,eAC1EiQ,iBAAiB,CAAC;EAAEpI,UAAU,EAAE,2BAA2B;EAAE9K,KAAK,EAAE;AAA2B,CAAE,CAAC,CACnG;AAED;;;;AAIA,OAAO,MAAM2T,iBAAiB,gBAA2BP,MAAM,CAACnQ,IAAI,eAClEiQ,iBAAiB,CAAC;EAAEpI,UAAU,EAAE,mBAAmB;EAAE9K,KAAK,EAAE;AAAmB,CAAE,CAAC,CACnF;AAED;;;;AAIA,OAAO,MAAM4T,yBAAyB,gBAAmBpS,cAAc,CAACyB,IAAI,eAC1EgQ,iBAAiB,CAAC;EAAEnI,UAAU,EAAE,2BAA2B;EAAE9K,KAAK,EAAE;AAA2B,CAAE,CAAC,CACnG;AAED;;;;AAIA,OAAO,MAAM6T,iBAAiB,gBAA2BT,MAAM,CAACnQ,IAAI,eAClEgQ,iBAAiB,CAAC;EAAEnI,UAAU,EAAE,mBAAmB;EAAE9K,KAAK,EAAE;AAAmB,CAAE,CAAC,CACnF;AAED;;;;;;;;AAQA,OAAO,MAAM8T,gBAAgB,gBAA2B7K,eAAe,CACrE7H,MAAM,EACNI,cAAc,EACd,CAACkQ,CAAC,EAAErT,CAAC,EAAExF,GAAG,KACRL,WAAW,CAAC2V,GAAG,CAAC;EACdA,GAAG,EAAEA,CAAA,KAAMkF,MAAM,CAAC3B,CAAC,CAAC;EACpBpD,KAAK,EAAEA,CAAA,KAAM9V,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAE6Y,CAAC;CACrC,CAAC,EACJ,CAACxU,CAAC,EAAEmB,CAAC,EAAExF,GAAG,KAAKL,WAAW,CAACiZ,UAAU,CAACtb,OAAO,CAAC4d,QAAQ,CAAC7W,CAAC,CAAC,EAAE,MAAM1E,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEqE,CAAC,CAAC,CAAC,CAC3F,CAAC+F,IAAI,eAAC6H,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAEtC;;;;AAIA,OAAO,MAAMkJ,cAAc,gBAA0BxV,OAAO,CAC1D7G,MAAM,CAACsc,QAAQ,EACf;EACEnJ,UAAU,EAAE,gBAAgB;EAC5B3K,MAAM,EAAEA,CAAA,KAAqC+T,MAAM,IAAK5W,MAAM,CAAC4W,MAAM,CAAC;EACtEpc,SAAS,EAAEA,CAAA,KAAiCuU,EAAE,IAAKA,EAAE,CAACnL,MAAM,EAAE,CAACrF,GAAG,CAAEwC,CAAC,IAAK1G,MAAM,CAACwc,UAAU,CAAC9V,CAAC,CAAC;CAC/F,CACF;AAED,MAAM+V,OAAO,gBAAkC7N,SAAS,CACtDrF,MAAM,EACN8S,cAAc,EACbK,GAAG,IAAK1c,MAAM,CAACwc,UAAU,CAACE,GAAG,CAAC,EAC9BH,MAAM,IAAKvc,MAAM,CAAC6D,KAAK,CAAC0Y,MAAM,CAAC,EAChC;EAAE3C,MAAM,EAAE;AAAK,CAAE,CAClB,CAACtO,IAAI,eAAC6H,UAAU,CAAC,QAAQ,CAAC,CAAC;AAE5B;AACE;;;;;;AAMAsJ,OAAO,IAAIzc,MAAM;AAGnB;;;;AAIA,OAAO,MAAM2c,gBAAgB,gBAA8B9V,OAAO,CAChEhI,QAAQ,CAAC+d,UAAU,EACnB;EACEzJ,UAAU,EAAE,kBAAkB;EAC9B3K,MAAM,EAAEA,CAAA,KAAwC7C,MAAM;EACtDxF,SAAS,EAAEA,CAAA,KAAqCuU,EAAE,IAChDA,EAAE,CAACmI,KAAK,CACNnI,EAAE,CAACoI,QAAQ,CAACje,QAAQ,CAACke,QAAQ,CAAC,EAC9BrI,EAAE,CAACsI,OAAO,EAAE,CAAC9Y,GAAG,CAAEwC,CAAC,IAAK7H,QAAQ,CAACoe,KAAK,CAACvW,CAAC,CAAC,CAAC,EAC1CgO,EAAE,CAACsI,OAAO,EAAE,CAAC9Y,GAAG,CAAEwC,CAAC,IAAK7H,QAAQ,CAACqe,MAAM,CAACxW,CAAC,CAAC,CAAC,EAC3CgO,EAAE,CAACyI,UAAU,EAAE,CAACjZ,GAAG,CAAEwC,CAAC,IAAK7H,QAAQ,CAACue,MAAM,CAAC1W,CAAC,CAAC,CAAC,EAC9CgO,EAAE,CAACyI,UAAU,EAAE,CAACjZ,GAAG,CAAEwC,CAAC,IAAK7H,QAAQ,CAACwe,OAAO,CAAC3W,CAAC,CAAC,CAAC,EAC/CgO,EAAE,CAACyI,UAAU,EAAE,CAACjZ,GAAG,CAAEwC,CAAC,IAAK7H,QAAQ,CAACye,OAAO,CAAC5W,CAAC,CAAC,CAAC,EAC/CgO,EAAE,CAACyI,UAAU,EAAE,CAACjZ,GAAG,CAAEwC,CAAC,IAAK7H,QAAQ,CAAC0e,KAAK,CAAC7W,CAAC,CAAC,CAAC,EAC7CgO,EAAE,CAACyI,UAAU,EAAE,CAACjZ,GAAG,CAAEwC,CAAC,IAAK7H,QAAQ,CAAC2e,IAAI,CAAC9W,CAAC,CAAC,CAAC,EAC5CgO,EAAE,CAACyI,UAAU,EAAE,CAACjZ,GAAG,CAAEwC,CAAC,IAAK7H,QAAQ,CAAC4e,KAAK,CAAC/W,CAAC,CAAC,CAAC,CAC9C;EACH8M,WAAW,EAAEA,CAAA,KAAkD3U,QAAQ,CAACK;CACzE,CACF;AAED;;;;;;;AAOA,OAAO,MAAMwe,iBAAiB,gBAAsCpM,eAAe,CACjFzH,cAAc,EACd8S,gBAAgB,EACfM,KAAK,IAAKpc,WAAW,CAAC8F,OAAO,CAAC9H,QAAQ,CAACoe,KAAK,CAACA,KAAK,CAAC,CAAC,EACrD,CAACU,QAAQ,EAAEjX,CAAC,EAAExF,GAAG,KACfvB,MAAM,CAAC4M,KAAK,CAAC1N,QAAQ,CAAC+e,OAAO,CAACD,QAAQ,CAAC,EAAE;EACvCnR,MAAM,EAAEA,CAAA,KAAM3L,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEyc,QAAQ,CAAC,CAAC;EAC/DlR,MAAM,EAAGoR,GAAG,IAAKhd,WAAW,CAAC8F,OAAO,CAACkX,GAAG;CACzC,CAAC,CACL,CAACvS,IAAI,eAAC6H,UAAU,CAAC,mBAAmB,CAAC,CAAC;AAEvC;;;;;;;AAOA,OAAO,MAAM2K,kBAAkB,gBAAsClP,SAAS,CAC5EnF,MAAM,EACNkT,gBAAgB,EACfoB,EAAE,IAAKlf,QAAQ,CAACue,MAAM,CAACW,EAAE,CAAC,EAC1BhE,CAAC,IAAKlb,QAAQ,CAACmf,QAAQ,CAACjE,CAAC,CAAC,CAC5B,CAACzO,IAAI,eAAC6H,UAAU,CAAC,oBAAoB,CAAC,CAAC;AAExC,MAAM8K,MAAM,gBAAsDxT,KAAK,eACrE6P,WAAW,CAAChP,IAAI,eACdkM,MAAM,CAAC;EACL,CAACnX,GAAG,CAACkS,iBAAiB,GAAG,SAAS;EAClC,CAAClS,GAAG,CAACmS,uBAAuB,GAAG;CAChC,CAAC,CACH,eACD8H,WAAW,CAAChP,IAAI,eACdkM,MAAM,CAAC;EACL,CAACnX,GAAG,CAACkS,iBAAiB,GAAG,OAAO;EAChC,CAAClS,GAAG,CAACmS,uBAAuB,GAAG;CAChC,CAAC,CACH,CACF;AAED,MAAM0L,SAAS,gBAAyEtP,SAAS,CAC/FqP,MAAM,EACNtB,gBAAgB,EAChB,CAAC,CAACU,OAAO,EAAEJ,KAAK,CAAC,KAAKpe,QAAQ,CAACoe,KAAK,CAACvB,MAAM,CAAC2B,OAAO,CAAC,GAAG3B,MAAM,CAAC,GAAG,CAAC,GAAGA,MAAM,CAACuB,KAAK,CAAC,CAAC,EAClFU,QAAQ,IAAK9e,QAAQ,CAACsf,QAAQ,CAACR,QAAQ,CAAC,CAC1C,CAACrS,IAAI,eAAC6H,UAAU,CAAC,UAAU,CAAC,CAAC;AAE9B;AACE;;;;;;AAMA+K,SAAS,IAAIrf,QAAQ;AAGvB;;;;;;AAMA,OAAO,MAAMuf,aAAa,GACxBA,CAACnG,OAA+B,EAAEgB,OAA+B,KAC7B3R,IAAqB,IACvDsH,SAAS,CACPtH,IAAI,EACJA,IAAI,CAACgE,IAAI,CAAChK,EAAE,EAAE+c,eAAe,CAACpG,OAAO,EAAEgB,OAAO,CAAC,CAAC,EAC/C3R,IAAI,IAAKzI,QAAQ,CAAC8a,KAAK,CAACrS,IAAI,EAAE;EAAE2Q,OAAO;EAAEgB;AAAO,CAAE,CAAC,EACpD3Z,QAAQ,EACR;EAAEsa,MAAM,EAAE;AAAK,CAAE,CAClB;AAEL;;;;AAIA,OAAO,MAAM0E,sBAAsB,gBAAGpX,MAAM,CAACC,GAAG,CAAC,wCAAwC,CAAC;AAE1F;;;;AAIA,OAAO,MAAMoX,gBAAgB,GAAGA,CAC9B1F,GAA2B,EAC3BzW,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAazG,QAAQ,CAAC+Z,QAAQ,CAACtT,CAAC,EAAEuT,GAAG,CAAC,EAAE;EAC/C7Q,MAAM,EAAE;IAAEC,EAAE,EAAEqW,sBAAsB;IAAEpW,UAAU,EAAE;MAAE2Q;IAAG;EAAE,CAAE;EAC3DtQ,WAAW,EAAE,wBAAwB1J,QAAQ,CAACuE,MAAM,CAACyV,GAAG,CAAC,EAAE;EAC3D,GAAGzW;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMoc,+BAA+B,gBAAGtX,MAAM,CAACC,GAAG,CACvD,iDAAiD,CAClD;AAED;;;;AAIA,OAAO,MAAMsX,yBAAyB,GAAGA,CACvC5F,GAA2B,EAC3BzW,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAazG,QAAQ,CAACma,iBAAiB,CAAC1T,CAAC,EAAEuT,GAAG,CAAC,EAAE;EACxD7Q,MAAM,EAAE;IAAEC,EAAE,EAAEqW,sBAAsB;IAAEpW,UAAU,EAAE;MAAE2Q;IAAG;EAAE,CAAE;EAC3DtQ,WAAW,EAAE,oCAAoC1J,QAAQ,CAACuE,MAAM,CAACyV,GAAG,CAAC,EAAE;EACvE,GAAGzW;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMsc,yBAAyB,gBAAGxX,MAAM,CAACC,GAAG,CAAC,2CAA2C,CAAC;AAEhG;;;;AAIA,OAAO,MAAMwX,mBAAmB,GAAGA,CACjC9G,GAA2B,EAC3BzV,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAazG,QAAQ,CAAC+Y,WAAW,CAACtS,CAAC,EAAEuS,GAAG,CAAC,EAAE;EAClD7P,MAAM,EAAE;IAAEC,EAAE,EAAEyW,yBAAyB;IAAExW,UAAU,EAAE;MAAE2P;IAAG;EAAE,CAAE;EAC9DtP,WAAW,EAAE,2BAA2B1J,QAAQ,CAACuE,MAAM,CAACyU,GAAG,CAAC,EAAE;EAC9D,GAAGzV;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMwc,kCAAkC,gBAAG1X,MAAM,CAACC,GAAG,CAC1D,oDAAoD,CACrD;AAED;;;;AAIA,OAAO,MAAM0X,4BAA4B,GAAGA,CAC1ChH,GAA2B,EAC3BzV,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAazG,QAAQ,CAACmZ,oBAAoB,CAAC1S,CAAC,EAAEuS,GAAG,CAAC,EAAE;EAC3D7P,MAAM,EAAE;IAAEC,EAAE,EAAE2W,kCAAkC;IAAE1W,UAAU,EAAE;MAAE2P;IAAG;EAAE,CAAE;EACvEtP,WAAW,EAAE,uCAAuC1J,QAAQ,CAACuE,MAAM,CAACyU,GAAG,CAAC,EAAE;EAC1E,GAAGzV;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAM0c,qBAAqB,gBAAG5X,MAAM,CAACC,GAAG,CAAC,uCAAuC,CAAC;AAExF;;;;AAIA,OAAO,MAAMkX,eAAe,GAAGA,CAC7BpG,OAA+B,EAC/BgB,OAA+B,EAC/B7W,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAazG,QAAQ,CAACsa,OAAO,CAAC7T,CAAC,EAAE;EAAE2S,OAAO;EAAEgB;AAAO,CAAE,CAAC,EAAE;EAC/DjR,MAAM,EAAE;IAAEC,EAAE,EAAE6W,qBAAqB;IAAE5W,UAAU,EAAE;MAAE+Q,OAAO;MAAEhB;IAAO;EAAE,CAAE;EACvE1P,WAAW,EAAE,sBAAsB1J,QAAQ,CAACuE,MAAM,CAAC6U,OAAO,CAAC,QAAQpZ,QAAQ,CAACuE,MAAM,CAAC6V,OAAO,CAAC,EAAE;EAC7F,GAAG7W;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAM2c,kBAAkB,gBAAuBlY,OAAO,CAC3DhH,SAAS,CAACmf,YAAY,EACtB;EACE7L,UAAU,EAAE,oBAAoB;EAChC3K,MAAM,EAAEA,CAAA,KAAkCyW,KAAK,IAAK,kBAAkBnK,IAAI,CAACC,SAAS,CAACjO,KAAK,CAAC1F,IAAI,CAAC6d,KAAK,CAAC,CAAC,GAAG;EAC1G9e,SAAS,EAAEA,CAAA,KAA8BuU,EAAE,IAAKA,EAAE,CAACwK,UAAU,EAAE;EAC/D1L,WAAW,EAAEA,CAAA,KAA2C1T,aAAa,CAACqf,cAAc,CAAClgB,KAAK,CAACmgB,MAAM;CAClG,CACF;AAED,MAAMC,WAAW,gBAA8CzQ,SAAS,CACtEzD,KAAK,CAAC1B,MAAM,CAAC6B,IAAI,CACf6N,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE;EACd9Q,KAAK,EAAE,wBAAwB;EAC/BE,WAAW,EAAE;CACd,CAAC,CACH,CAAC,CAAC+C,IAAI,CAAC/C,WAAW,CAAC,qCAAqC,CAAC,CAAC,EAC3DwW,kBAAkB,EACjBzZ,CAAC,IAAKga,UAAU,CAACle,IAAI,CAACkE,CAAC,CAAC,EACxBia,GAAG,IAAKzY,KAAK,CAAC1F,IAAI,CAACme,GAAG,CAAC,CACzB,CAACjU,IAAI,eAAC6H,UAAU,CAAC,YAAY,CAAC,CAAC;AAEhC;AACE;;;;;;AAMAkM,WAAW,IAAIC,UAAU;AAG3B,MAAME,0BAA0B,GAAGA,CACjCvX,EAAU,EACV7E,MAA0E,EAC1EN,MAAiC,KAEjCwO,eAAe,CACb/H,MAAM,EACNwV,kBAAkB,EAClB,CAAC/I,CAAC,EAAEtP,CAAC,EAAExF,GAAG,KACRnC,MAAM,CAAC2D,OAAO,CACZU,MAAM,CAAC4S,CAAC,CAAC,EACRyJ,eAAe,IAAK5e,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAE8U,CAAC,EAAEyJ,eAAe,CAAC5X,OAAO,CAAC,CACvE,EACFxF,CAAC,IAAKxB,WAAW,CAAC8F,OAAO,CAAC7D,MAAM,CAACT,CAAC,CAAC,CAAC,EACrC;EAAEuX,MAAM,EAAE;AAAK,CAAE,CAClB,CAACtO,IAAI,CAAC6H,UAAU,CAAClL,EAAE,CAAC,CAAC;AAExB;;;;AAIA,OAAO,MAAMyX,MAAM,gBAA+BF,0BAA0B,CAC1E,QAAQ,EACRxgB,QAAQ,CAAC2gB,YAAY,EACrB3gB,QAAQ,CAAC4gB,YAAY,CACtB;AAED;;;;AAIA,OAAO,MAAMC,SAAS,gBAA+BL,0BAA0B,CAC7E,WAAW,EACXxgB,QAAQ,CAAC8gB,eAAe,EACxB9gB,QAAQ,CAAC+gB,eAAe,CACzB;AAED;;;;AAIA,OAAO,MAAMC,GAAG,gBAA+BR,0BAA0B,CACvE,KAAK,EACLxgB,QAAQ,CAACihB,SAAS,EAClBjhB,QAAQ,CAACkhB,SAAS,CACnB;AAED;;;;AAIA,OAAO,MAAMC,cAAc,GAAkB3f,OAAO,CAAC2f,cAAc;AAQnE;;;;AAIA,OAAO,MAAMC,QAAQ,GAAGA,CACtBrG,CAAS,EACT3X,OAA6C,KAExCkF,IAAoC,IACzCA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAA4BA,CAAC,CAAC+H,MAAM,IAAI0M,CAAC,EAAE;EAClD/R,MAAM,EAAEmY,cAAc;EACtB5X,WAAW,EAAE,wBAAwBwR,CAAC,QAAQ;EAC9CxG,UAAU,EAAE;IAAE6M,QAAQ,EAAErG;EAAC,CAAE;EAC3B,GAAG3X;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMie,cAAc,GAAkB7f,OAAO,CAAC6f,cAAc;AAQnE;;;;AAIA,OAAO,MAAMC,QAAQ,GAAGA,CACtBvG,CAAS,EACT3X,OAA6C,KAExCkF,IAAoC,IACzCA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAA4BA,CAAC,CAAC+H,MAAM,IAAI0M,CAAC,EAAE;EAClD/R,MAAM,EAAEqY,cAAc;EACtB9X,WAAW,EAAE,uBAAuBwR,CAAC,QAAQ;EAC7CxG,UAAU,EAAE;IAAE+M,QAAQ,EAAEvG;EAAC,CAAE;EAC3B,GAAG3X;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMme,gBAAgB,GAAkB/f,OAAO,CAAC+f,gBAAgB;AAQvE;;;;AAIA,OAAO,MAAMC,UAAU,GAAGA,CACxBzG,CAAS,EACT3X,OAA6C,KAExCkF,IAAoC,IACzCA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAA4BA,CAAC,CAAC+H,MAAM,KAAK0M,CAAC,EAAE;EACnD/R,MAAM,EAAEuY,gBAAgB;EACxBhY,WAAW,EAAE,uBAAuBwR,CAAC,QAAQ;EAC7CxG,UAAU,EAAE;IAAE6M,QAAQ,EAAErG,CAAC;IAAEuG,QAAQ,EAAEvG;EAAC,CAAE;EACxC,GAAG3X;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMqe,sBAAsB,GACjCnZ,IAAqB,IACejG,IAAI,CAAChB,GAAG,CAACogB,sBAAsB,CAACnZ,IAAI,CAACpG,GAAG,CAAC,CAAC;AAEhF;;;;;;AAMA,OAAO,MAAM8D,IAAI,GAAasC,IAAoC,IAChEsH,SAAS,CACPtH,IAAI,EACJoF,cAAc,CAAC+T,sBAAsB,CAACnf,EAAE,CAACgG,IAAI,CAAC,CAAC,CAAC,EAChDxH,aAAa,CAACkF,IAAI,EAClBrF,MAAM,CAAC4M,KAAK,CAAC;EAAEC,MAAM,EAAEA,CAAA,KAAM,EAAE;EAAEC,MAAM,EAAE3M,aAAa,CAAC4gB;AAAE,CAAE,CAAC,CAC7D;AAEH;;;;;;;;AAQA,OAAO,MAAMC,MAAM,gBAGfthB,IAAI,CACLoP,IAAI,IAAK/K,QAAQ,CAAC+K,IAAI,CAAC,CAAC,CAAC,CAAC,EAC3B,CAAUnH,IAAoC,EAAEsZ,QAAqB,KACnEtP,eAAe,CACbhK,IAAI,EACJmZ,sBAAsB,CAACnf,EAAE,CAACgG,IAAI,CAAC,CAAC,EAChC,CAACgF,EAAE,EAAE5F,CAAC,EAAExF,GAAG,KACToL,EAAE,CAACe,MAAM,GAAG,CAAC,GACTxM,WAAW,CAAC8F,OAAO,CAAC2F,EAAE,CAAC,CAAC,CAAC,CAAC,GAC1BsU,QAAQ,GACR/f,WAAW,CAAC8F,OAAO,CAACia,QAAQ,EAAE,CAAC,GAC/B/f,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEoL,EAAE,CAAC,CAAC,EAChDhH,CAAC,IAAKzE,WAAW,CAAC8F,OAAO,CAAC7G,aAAa,CAAC4gB,EAAE,CAACpb,CAAC,CAAC,CAAC,CAChD,CACJ;AAED;;;;AAIA,OAAO,MAAMub,eAAe,gBAAG3Z,MAAM,CAACC,GAAG,CAAC,iCAAiC,CAAC;AAE5E;;;;;;AAMA,OAAO,MAAM2Z,SAAS,GAAI1e,OAAiC,IAAYkF,IAAwB,IAC7FA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAK,CAACmS,MAAM,CAAC6B,KAAK,CAAChU,CAAC,CAACyb,OAAO,EAAE,CAAC,EAAE;EACxC/Y,MAAM,EAAE6Y,eAAe;EACvBtY,WAAW,EAAE,cAAc;EAC3B,GAAGnG;CACJ,CAAC,CACH;AAEH;;;;;;AAMA,OAAO,MAAM4e,YAAY,gBAAiBna,OAAO,CAC/ChH,SAAS,CAACohB,MAAM,EAChB;EACE9N,UAAU,EAAE,cAAc;EAC1B5K,WAAW,EAAE,qCAAqC;EAClDC,MAAM,EAAEA,CAAA,KAA4B0Y,IAAI,IAAK,YAAYpM,IAAI,CAACC,SAAS,CAACmM,IAAI,CAAC,GAAG;EAChF/gB,SAAS,EAAEA,CAAA,KAAwBuU,EAAE,IAAKA,EAAE,CAACwM,IAAI,CAAC;IAAEC,aAAa,EAAE;EAAK,CAAE,CAAC;EAC3E3N,WAAW,EAAEA,CAAA,KAAMtU,WAAW,CAACkiB;CAChC,CACF;AAED;;;;;;AAMA,OAAO,MAAMC,iBAAiB,gBAAiBL,YAAY,CAAC1V,IAAI,eAC9DwV,SAAS,CAAC;EACR3N,UAAU,EAAE,mBAAmB;EAC/B5K,WAAW,EAAE;CACd,CAAC,CACH;AAED;;;;;;AAMA,OAAO,MAAM+Y,cAAc,gBAAyB1S,SAAS,CAC3DrF,MAAM,EACNyX,YAAY,EACXhL,CAAC,IAAK,IAAIoL,IAAI,CAACpL,CAAC,CAAC,EACjB+D,CAAC,IAAKA,CAAC,CAACwH,WAAW,EAAE,CACvB,CAACjW,IAAI,eAAC6H,UAAU,CAAC,gBAAgB,CAAC,CAAC;AAEpC,MAAMqO,KAAK,gBAAyBF,cAAc,CAAChW,IAAI,eACrDwV,SAAS,CAAC;EAAE3N,UAAU,EAAE;AAAM,CAAE,CAAC,CAClC;AAED;AACE;;;;;;AAMAqO,KAAK,IAAIJ,IAAI;AAgBf,MAAMK,cAAc,gBAAG5U,MAAM,CAAC;EAC5B7G,IAAI,eAAEjC,OAAO,CAAC,MAAM;CACrB,CAAC;AAEF,MAAM2d,cAAc,GAAa7d,KAAsB,IACrDgJ,MAAM,CAAC;EACL7G,IAAI,EAAEjC,OAAO,CAAC,MAAM,CAAC;EACrBF;CACD,CAAC;AAEJ,MAAM8d,UAAU,GAAa9d,KAAsB,IACjDI,KAAK,CACHwd,cAAc,EACdC,cAAc,CAAC7d,KAAK,CAAC,CACtB;AAEH,MAAM+d,YAAY,GAAOnb,KAAoB,IAC3CA,KAAK,CAACT,IAAI,KAAK,MAAM,GAAGrG,MAAM,CAACoI,IAAI,EAAE,GAAGpI,MAAM,CAAC+H,IAAI,CAACjB,KAAK,CAAC5C,KAAK,CAAC;AAElE,MAAMge,eAAe,GAAOhe,KAAmB,IAAiC;EAC9E,MAAMie,GAAG,GAAG3hB,SAAS,CAACkB,IAAI,CAACsgB,UAAU,CAACI,mBAAmB,CAACle,KAAK,CAAC,CAAC,CAAC;EAClE,OAAQ6Q,EAAE,IAAKoN,GAAG,CAACpN,EAAE,CAAC,CAACxQ,GAAG,CAAC0d,YAAY,CAAC;AAC1C,CAAC;AAED,MAAMI,YAAY,GAAOne,KAAuB,IAC9ClE,MAAM,CAAC4M,KAAK,CAAC;EACXC,MAAM,EAAEA,CAAA,KAAM,QAAQ;EACtBC,MAAM,EAAGnH,CAAC,IAAK,QAAQzB,KAAK,CAACyB,CAAC,CAAC;CAChC,CAAC;AAEJ,MAAM2c,WAAW,GACRhf,aAA8C,IACrD,CAACZ,CAAC,EAAED,OAAO,EAAElB,GAAG,KACdvB,MAAM,CAACuiB,QAAQ,CAAC7f,CAAC,CAAC,GAChB1C,MAAM,CAACwiB,MAAM,CAAC9f,CAAC,CAAC,GACdxB,WAAW,CAAC8F,OAAO,CAAChH,MAAM,CAACoI,IAAI,EAAE,CAAC,GAChClH,WAAW,CAACqD,GAAG,CAACjB,aAAa,CAACZ,CAAC,CAACwB,KAAK,EAAEzB,OAAO,CAAC,EAAEzC,MAAM,CAAC+H,IAAI,CAAC,GAC/D7G,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEmB,CAAC,CAAC,CAAC;AAElD;;;;AAIA,OAAO,MAAMqK,cAAc,GACzB7I,KAAsB,IAC2B;EACjD,OAAOgD,OAAO,CACZ,CAAChD,KAAK,CAAC,EACNA,KAAK,IAAKoe,WAAW,CAACphB,WAAW,CAACoC,aAAa,CAACY,KAAK,CAAC,CAAC,EACvDA,KAAK,IAAKoe,WAAW,CAACphB,WAAW,CAACsB,aAAa,CAAC0B,KAAK,CAAC,CAAC,EACxD;IACE0E,WAAW,EAAE,UAAUpH,MAAM,CAAC0C,KAAK,CAAC,GAAG;IACvC2E,MAAM,EAAEwZ,YAAY;IACpB7hB,SAAS,EAAE0hB,eAAe;IAC1BrO,WAAW,EAAE7T,MAAM,CAACwf;GACrB,CACF;AACH,CAAC;AAED;;;;AAIA,OAAO,MAAM5P,MAAM,GACjB1L,KAAsB,IAEtB+K,SAAS,CACP+S,UAAU,CAAC9d,KAAK,CAAC,EACjB6I,cAAc,CAACpL,EAAE,CAACuC,KAAK,CAAC,CAAC,EACzB+d,YAAY,EACZjiB,MAAM,CAAC4M,KAAK,CAAC;EACXC,MAAM,EAAEA,CAAA,MAAQ;IACdxG,IAAI,EAAE;GACP,CAAW;EACZyG,MAAM,EAAG5I,KAAK,KAAO;IACnBmC,IAAI,EAAE,MAAM;IACZnC;GACD;CACF,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMue,kBAAkB,GAC7Bve,KAAsB,IAEtB+K,SAAS,CAACvE,QAAQ,CAACxG,KAAK,CAAC,EAAE6I,cAAc,CAACpL,EAAE,CAACuC,KAAK,CAAC,CAAC,EAAElE,MAAM,CAAC0iB,YAAY,EAAE1iB,MAAM,CAAC2iB,SAAS,CAAC;AAE9F;;;;AAIA,OAAO,MAAMC,iBAAiB,GAAGA,CAC/B1e,KAAsB,EACtB2e,cAAgC,KAEhC5T,SAAS,CACPrE,OAAO,CAAC1G,KAAK,CAAC,EACd6I,cAAc,CAACpL,EAAE,CAACuC,KAAK,CAAC,CAAC,EACzBlE,MAAM,CAAC0iB,YAAY,EACnBG,cAAc,KAAK,IAAI,GAAG7iB,MAAM,CAAC2iB,SAAS,GAAG3iB,MAAM,CAAC8iB,cAAc,CACnE;AAEH;;;;AAIA,OAAO,MAAMC,qBAAqB,GAChC7e,KAAsB,IAEtB+K,SAAS,CAACtE,WAAW,CAACzG,KAAK,CAAC,EAAE6I,cAAc,CAACpL,EAAE,CAACuC,KAAK,CAAC,CAAC,EAAElE,MAAM,CAAC0iB,YAAY,EAAE1iB,MAAM,CAAC8iB,cAAc,CAAC;AA0BtG,MAAME,SAAS,GAAcC,KAAuB,IAClD/V,MAAM,CAAC;EACL7G,IAAI,EAAEjC,OAAO,CAAC,OAAO,CAAC;EACtB6e;CACD,CAAC,CAACtX,IAAI,CAAC/C,WAAW,CAAC,aAAapH,MAAM,CAACyhB,KAAK,CAAC,GAAG,CAAC,CAAC;AAErD,MAAMC,QAAQ,GAAclb,IAAsB,IAChDkF,MAAM,CAAC;EACL7G,IAAI,EAAEjC,OAAO,CAAC,MAAM,CAAC;EACrB4D;CACD,CAAC,CAAC2D,IAAI,CAAC/C,WAAW,CAAC,YAAYpH,MAAM,CAACwG,IAAI,CAAC,GAAG,CAAC,CAAC;AAEnD,MAAMmb,UAAU,GAAGA,CACjBnb,IAAuB,EACvBib,KAAwB,KAExB3e,KAAK,CAAC0e,SAAS,CAACC,KAAK,CAAC,EAAEC,QAAQ,CAAClb,IAAI,CAAC,CAAC,CAAC2D,IAAI,CAC1C/C,WAAW,CAAC,cAAcpH,MAAM,CAACwG,IAAI,CAAC,KAAKxG,MAAM,CAACyhB,KAAK,CAAC,GAAG,CAAC,CAC7D;AAEH,MAAMG,YAAY,GAAUtc,KAAuB,IACjDA,KAAK,CAACT,IAAI,KAAK,MAAM,GAAGjH,MAAM,CAAC4I,IAAI,CAAClB,KAAK,CAACkB,IAAI,CAAC,GAAG5I,MAAM,CAAC6jB,KAAK,CAACnc,KAAK,CAACmc,KAAK,CAAC;AAE7E,MAAMI,eAAe,GAAGA,CACtBrb,IAAkB,EAClBib,KAAmB,KACe;EAClC,MAAMd,GAAG,GAAG3hB,SAAS,CAACkB,IAAI,CAACyhB,UAAU,CAACf,mBAAmB,CAACpa,IAAI,CAAC,EAAEoa,mBAAmB,CAACa,KAAK,CAAC,CAAC,CAAC;EAC7F,OAAQlO,EAAE,IAAKoN,GAAG,CAACpN,EAAE,CAAC,CAACxQ,GAAG,CAAC6e,YAAY,CAAC;AAC1C,CAAC;AAED,MAAME,YAAY,GAAGA,CACnBtb,IAAsB,EACtBib,KAAuB,KAEvB7jB,MAAM,CAACwN,KAAK,CAAC;EACX2W,MAAM,EAAG1T,CAAC,IAAK,QAAQ7H,IAAI,CAAC6H,CAAC,CAAC,GAAG;EACjC2T,OAAO,EAAG7d,CAAC,IAAK,SAASsd,KAAK,CAACtd,CAAC,CAAC;CAClC,CAAC;AAEJ,MAAM8d,WAAW,GAAGA,CAClBC,iBAAmD,EACnDC,UAA4C,KAE9C,CAACjhB,CAAC,EAAED,OAAO,EAAElB,GAAG,KACdnC,MAAM,CAACwkB,QAAQ,CAAClhB,CAAC,CAAC,GAChBtD,MAAM,CAACwN,KAAK,CAAClK,CAAC,EAAE;EACd6gB,MAAM,EAAGvb,IAAI,IAAK9G,WAAW,CAACqD,GAAG,CAACmf,iBAAiB,CAAC1b,IAAI,EAAEvF,OAAO,CAAC,EAAErD,MAAM,CAAC4I,IAAI,CAAC;EAChFwb,OAAO,EAAGP,KAAK,IAAK/hB,WAAW,CAACqD,GAAG,CAACof,UAAU,CAACV,KAAK,EAAExgB,OAAO,CAAC,EAAErD,MAAM,CAAC6jB,KAAK;CAC7E,CAAC,GACA/hB,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEmB,CAAC,CAAC,CAAC;AAEhD;;;;AAIA,OAAO,MAAMmhB,cAAc,GAAGA,CAAuB;EAAE7b,IAAI;EAAEib;AAAK,CAGjE,KAAiE;EAChE,OAAO/b,OAAO,CACZ,CAACc,IAAI,EAAEib,KAAK,CAAC,EACb,CAACjb,IAAI,EAAEib,KAAK,KAAKQ,WAAW,CAACviB,WAAW,CAACoC,aAAa,CAAC0E,IAAI,CAAC,EAAE9G,WAAW,CAACoC,aAAa,CAAC2f,KAAK,CAAC,CAAC,EAC/F,CAACjb,IAAI,EAAEib,KAAK,KAAKQ,WAAW,CAACviB,WAAW,CAACsB,aAAa,CAACwF,IAAI,CAAC,EAAE9G,WAAW,CAACsB,aAAa,CAACygB,KAAK,CAAC,CAAC,EAC/F;IACEra,WAAW,EAAE,UAAUpH,MAAM,CAACwG,IAAI,CAAC,KAAKxG,MAAM,CAACyhB,KAAK,CAAC,GAAG;IACxDpa,MAAM,EAAEya,YAAY;IACpB9iB,SAAS,EAAE6iB,eAAe;IAC1BxP,WAAW,EAAEzU,MAAM,CAACogB;GACrB,CACF;AACH,CAAC;AAED,MAAMsE,YAAY,GAAO9b,IAAO,KAAO;EACrC3B,IAAI,EAAE,MAAM;EACZ2B;CACD,CAAW;AACZ,MAAM+b,aAAa,GAAOd,KAAQ,KAAO;EACvC5c,IAAI,EAAE,OAAO;EACb4c;CACD,CAAW;AAEZ;;;;AAIA,OAAO,MAAMpb,MAAM,GAAGA,CAAuB;EAAEG,IAAI;EAAEib;AAAK,CAGzD,KACChU,SAAS,CACPkU,UAAU,CAACnb,IAAI,EAAEib,KAAK,CAAC,EACvBY,cAAc,CAAC;EAAE7b,IAAI,EAAErG,EAAE,CAACqG,IAAI,CAAC;EAAEib,KAAK,EAAEthB,EAAE,CAACshB,KAAK;AAAC,CAAE,CAAC,EACpDG,YAAY,EACZhkB,MAAM,CAACwN,KAAK,CAAC;EAAE2W,MAAM,EAAEO,YAAY;EAAEN,OAAO,EAAEO;AAAa,CAAE,CAAC,CAC/D;AAEH;;;;;;;;;;AAUA,OAAO,MAAMC,eAAe,GAAGA,CAAyB;EAAEhc,IAAI;EAAEib;AAAK,CAGpE,KAAqD;EACpD,MAAMgB,MAAM,GAAGtiB,EAAE,CAACqG,IAAI,CAAC;EACvB,MAAMkc,OAAO,GAAGviB,EAAE,CAACshB,KAAK,CAAC;EACzB,MAAMkB,QAAQ,GAAGlV,SAAS,CAACjH,IAAI,EAAEkb,QAAQ,CAACe,MAAM,CAAC,EAAEH,YAAY,EAAGM,CAAC,IAAKA,CAAC,CAACpc,IAAI,CAAC;EAC/E,MAAMqc,SAAS,GAAGpV,SAAS,CAACgU,KAAK,EAAED,SAAS,CAACkB,OAAO,CAAC,EAAEH,aAAa,EAAGO,CAAC,IAAKA,CAAC,CAACrB,KAAK,CAAC;EACrF,OAAOhU,SAAS,CACd3K,KAAK,CAAC+f,SAAS,EAAEF,QAAQ,CAAC,EAC1BN,cAAc,CAAC;IAAE7b,IAAI,EAAEic,MAAM;IAAEhB,KAAK,EAAEiB;EAAO,CAAE,CAAC,EAC/CziB,IAAI,IAAKA,IAAI,CAAC4E,IAAI,KAAK,MAAM,GAAGjH,MAAM,CAAC4I,IAAI,CAACvG,IAAI,CAACuG,IAAI,CAAC,GAAG5I,MAAM,CAAC6jB,KAAK,CAACxhB,IAAI,CAACwhB,KAAK,CAAC,EAClF7jB,MAAM,CAACwN,KAAK,CAAC;IAAE2W,MAAM,EAAEO,YAAY;IAAEN,OAAO,EAAEO;EAAa,CAAE,CAAC,CAC/D;AACH,CAAC;AAED,MAAMQ,oBAAoB,GAAGA,CAC3Bpf,GAAiB,EACjBjB,KAAmB,KAEpB6Q,EAAE,IAAKA,EAAE,CAACvJ,KAAK,CAACuJ,EAAE,CAACjK,KAAK,CAAC3F,GAAG,CAAC4P,EAAE,CAAC,EAAE7Q,KAAK,CAAC6Q,EAAE,CAAC,CAAC,CAAC,CAACxQ,GAAG,CAAEoI,EAAE,IAAK,IAAI6X,GAAG,CAAC7X,EAAE,CAAC,CAAC;AAEvE,MAAM8X,iBAAiB,GAAGA,CACxBtf,GAAqB,EACrBjB,KAAuB,KAExBK,GAAG,IACF,YACE4C,KAAK,CAAC1F,IAAI,CAAC8C,GAAG,CAACmgB,OAAO,EAAE,CAAC,CACtBngB,GAAG,CAAC,CAAC,CAACogB,CAAC,EAAE1c,CAAC,CAAC,KAAK,IAAI9C,GAAG,CAACwf,CAAC,CAAC,KAAKzgB,KAAK,CAAC+D,CAAC,CAAC,GAAG,CAAC,CAC3CE,IAAI,CAAC,IAAI,CACd,IAAI;AAEN,MAAMyc,sBAAsB,GAAGA,CAC7Bzf,GAA+B,EAC/BjB,KAAiC,KACa;EAC9C,MAAM2gB,gBAAgB,GAAG1kB,aAAa,CAACqf,cAAc,CACnDjgB,WAAW,CAACmC,IAAI,CAAS,CAAC,CAACojB,EAAE,EAAEC,EAAE,CAAC,EAAE,CAACC,EAAE,EAAEC,EAAE,CAAC,KAAK9f,GAAG,CAAC2f,EAAE,EAAEE,EAAE,CAAC,IAAI9gB,KAAK,CAAC6gB,EAAE,EAAEE,EAAE,CAAC,CAAC,CAC/E;EACD,OAAO1lB,WAAW,CAACmC,IAAI,CAAC,CAACiE,CAAC,EAAEC,CAAC,KAAKif,gBAAgB,CAAC1d,KAAK,CAAC1F,IAAI,CAACkE,CAAC,CAAC+e,OAAO,EAAE,CAAC,EAAEvd,KAAK,CAAC1F,IAAI,CAACmE,CAAC,CAAC8e,OAAO,EAAE,CAAC,CAAC,CAAC;AACvG,CAAC;AAED,MAAMQ,gBAAgB,GACpB5hB,aAA2E,IAE7E,CAACZ,CAAC,EAAED,OAAO,EAAElB,GAAG,KACdrB,SAAS,CAACilB,KAAK,CAACziB,CAAC,CAAC,GAChBxB,WAAW,CAACqD,GAAG,CAACjB,aAAa,CAAC6D,KAAK,CAAC1F,IAAI,CAACiB,CAAC,CAACgiB,OAAO,EAAE,CAAC,EAAEjiB,OAAO,CAAC,EAAGkK,EAAE,IAAwB,IAAI6X,GAAG,CAAC7X,EAAE,CAAC,CAAC,GACtGzL,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEmB,CAAC,CAAC,CAAC;AAEhD;;;;AAIA,OAAO,MAAM0iB,mBAAmB,GAAGA,CAAuB;EAAEjgB,GAAG;EAAEjB;AAAK,CAGrE,KAA6D;EAC5D,OAAOgD,OAAO,CACZ,CAAC/B,GAAG,EAAEjB,KAAK,CAAC,EACZ,CAACiB,GAAG,EAAEjB,KAAK,KAAKghB,gBAAgB,CAAChkB,WAAW,CAACoC,aAAa,CAACkI,KAAK,CAACV,KAAK,CAAC3F,GAAG,EAAEjB,KAAK,CAAC,CAAC,CAAC,CAAC,EACrF,CAACiB,GAAG,EAAEjB,KAAK,KAAKghB,gBAAgB,CAAChkB,WAAW,CAACsB,aAAa,CAACgJ,KAAK,CAACV,KAAK,CAAC3F,GAAG,EAAEjB,KAAK,CAAC,CAAC,CAAC,CAAC,EACrF;IACE0E,WAAW,EAAE,eAAepH,MAAM,CAAC2D,GAAG,CAAC,KAAK3D,MAAM,CAAC0C,KAAK,CAAC,GAAG;IAC5D2E,MAAM,EAAE4b,iBAAiB;IACzBjkB,SAAS,EAAE+jB,oBAAoB;IAC/B1Q,WAAW,EAAE+Q;GACd,CACF;AACH,CAAC;AAED;;;;AAIA,OAAO,MAAMS,WAAW,GAAGA,CAAuB;EAAElgB,GAAG;EAAEjB;AAAK,CAG7D,KACC+K,SAAS,CACPzD,KAAK,CAACV,KAAK,CAAC3F,GAAG,EAAEjB,KAAK,CAAC,CAAC,EACxBkhB,mBAAmB,CAAC;EAAEjgB,GAAG,EAAExD,EAAE,CAACwD,GAAG,CAAC;EAAEjB,KAAK,EAAEvC,EAAE,CAACuC,KAAK;AAAC,CAAE,CAAC,EACtDyI,EAAE,IAAK,IAAI6X,GAAG,CAAC7X,EAAE,CAAC,EAClBpI,GAAG,IAAK4C,KAAK,CAAC1F,IAAI,CAAC8C,GAAG,CAACmgB,OAAO,EAAE,CAAC,CACnC;AAEH,MAAMY,oBAAoB,GAAO7Z,IAAkB,IAAiCsJ,EAAE,IACpFA,EAAE,CAACvJ,KAAK,CAACC,IAAI,CAACsJ,EAAE,CAAC,CAAC,CAACxQ,GAAG,CAAEoI,EAAE,IAAK,IAAI4Y,GAAG,CAAC5Y,EAAE,CAAC,CAAC;AAE7C,MAAM6Y,iBAAiB,GAAO/Z,IAAsB,IAAqCga,GAAG,IAC1F,YAAYte,KAAK,CAAC1F,IAAI,CAACgkB,GAAG,CAACC,MAAM,EAAE,CAAC,CAACnhB,GAAG,CAAEoB,CAAC,IAAK8F,IAAI,CAAC9F,CAAC,CAAC,CAAC,CAACwC,IAAI,CAAC,IAAI,CAAC,IAAI;AAEzE,MAAMwd,sBAAsB,GAC1Bla,IAAgC,IACW;EAC3C,MAAMoZ,gBAAgB,GAAG1kB,aAAa,CAACqf,cAAc,CAAC/T,IAAI,CAAC;EAC3D,OAAOlM,WAAW,CAACmC,IAAI,CAAC,CAACiE,CAAC,EAAEC,CAAC,KAAKif,gBAAgB,CAAC1d,KAAK,CAAC1F,IAAI,CAACkE,CAAC,CAAC+f,MAAM,EAAE,CAAC,EAAEve,KAAK,CAAC1F,IAAI,CAACmE,CAAC,CAAC8f,MAAM,EAAE,CAAC,CAAC,CAAC;AACrG,CAAC;AAED,MAAME,gBAAgB,GACpBtiB,aAA6D,IAE/D,CAACZ,CAAC,EAAED,OAAO,EAAElB,GAAG,KACdrB,SAAS,CAAC2lB,KAAK,CAACnjB,CAAC,CAAC,GAChBxB,WAAW,CAACqD,GAAG,CAACjB,aAAa,CAAC6D,KAAK,CAAC1F,IAAI,CAACiB,CAAC,CAACgjB,MAAM,EAAE,CAAC,EAAEjjB,OAAO,CAAC,EAAGkK,EAAE,IAAqB,IAAI4Y,GAAG,CAAC5Y,EAAE,CAAC,CAAC,GAClGzL,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEmB,CAAC,CAAC,CAAC;AAEhD;;;;AAIA,OAAO,MAAMojB,mBAAmB,GAC9Bra,IAAqB,IACwB;EAC7C,OAAOvE,OAAO,CACZ,CAACuE,IAAI,CAAC,EACLA,IAAI,IAAKma,gBAAgB,CAAC1kB,WAAW,CAACoC,aAAa,CAACkI,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,EACjEA,IAAI,IAAKma,gBAAgB,CAAC1kB,WAAW,CAACsB,aAAa,CAACgJ,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,EAClE;IACE7C,WAAW,EAAE,eAAepH,MAAM,CAACiK,IAAI,CAAC,GAAG;IAC3C5C,MAAM,EAAE2c,iBAAiB;IACzBhlB,SAAS,EAAE8kB,oBAAoB;IAC/BzR,WAAW,EAAE8R;GACd,CACF;AACH,CAAC;AAED;;;;AAIA,OAAO,MAAMI,WAAW,GAAata,IAAqB,IACxDwD,SAAS,CACPzD,KAAK,CAACC,IAAI,CAAC,EACXqa,mBAAmB,CAACnkB,EAAE,CAAC8J,IAAI,CAAC,CAAC,EAC5BkB,EAAE,IAAK,IAAI4Y,GAAG,CAAC5Y,EAAE,CAAC,EAClB8Y,GAAG,IAAKte,KAAK,CAAC1F,IAAI,CAACgkB,GAAG,CAAC,CACzB;AAEH,MAAMO,kBAAkB,GAAGA,CAAIva,IAAkB,EAAEwa,GAAmB,KAAyClR,EAAE,IAC/GA,EAAE,CAACvJ,KAAK,CAACC,IAAI,CAACsJ,EAAE,CAAC,CAAC,CAACxQ,GAAG,CAAEoI,EAAE,IAAKrM,SAAS,CAAC4lB,YAAY,CAACvZ,EAAE,EAAEsZ,GAAG,CAAC,CAAC;AAEjE,MAAME,eAAe,GAAO1a,IAAsB,IAA6Cga,GAAG,IAChG,kBAAkBte,KAAK,CAAC1F,IAAI,CAACnB,SAAS,CAAColB,MAAM,CAACD,GAAG,CAAC,CAAC,CAAClhB,GAAG,CAAEoB,CAAC,IAAK8F,IAAI,CAAC9F,CAAC,CAAC,CAAC,CAACwC,IAAI,CAAC,IAAI,CAAC,IAAI;AAExF,MAAMie,cAAc,GAAGA,CACrB9iB,aAA6D,EAC7D2iB,GAAmB,KAErB,CAACvjB,CAAC,EAAED,OAAO,EAAElB,GAAG,KACdjB,SAAS,CAAC+lB,WAAW,CAAC3jB,CAAC,CAAC,GACtBxB,WAAW,CAACqD,GAAG,CAACjB,aAAa,CAAC6D,KAAK,CAAC1F,IAAI,CAACnB,SAAS,CAAColB,MAAM,CAAChjB,CAAC,CAAC,CAAC,EAAED,OAAO,CAAC,EAAGkK,EAAE,IAC1ErM,SAAS,CAAC4lB,YAAY,CAACvZ,EAAE,EAAEsZ,GAAG,CAAC,CAAC,GAChC/kB,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEmB,CAAC,CAAC,CAAC;AAEhD;;;;AAIA,OAAO,MAAM4jB,iBAAiB,GAAGA,CAC/B7a,IAAqB,EACrB8a,IAAoB,EACpBC,IAAoB,KACyC;EAC7D,OAAOtf,OAAO,CACZ,CAACuE,IAAI,CAAC,EACLA,IAAI,IAAK2a,cAAc,CAACllB,WAAW,CAACoC,aAAa,CAACkI,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE8a,IAAI,CAAC,EACrE9a,IAAI,IAAK2a,cAAc,CAACllB,WAAW,CAACsB,aAAa,CAACgJ,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE+a,IAAI,CAAC,EACtE;IACE5d,WAAW,EAAE,aAAapH,MAAM,CAACiK,IAAI,CAAC,GAAG;IACzC5C,MAAM,EAAEsd,eAAe;IACvB3lB,SAAS,EAAG2hB,GAAG,IAAK6D,kBAAkB,CAAC7D,GAAG,EAAEoE,IAAI,CAAC;IACjD1S,WAAW,EAAEA,CAAA,KAAMvT,SAAS,CAACkf,cAAc;GAC5C,CACF;AACH,CAAC;AAED;;;;AAIA,OAAO,MAAMiH,SAAS,GAAGA,CACvBhb,IAAqB,EACrB8a,IAAoB,KAEpBtX,SAAS,CACPzD,KAAK,CAACC,IAAI,CAAC,EACX6a,iBAAiB,CAAC3kB,EAAE,CAAC8J,IAAI,CAAC,EAAE8a,IAAI,EAAEA,IAAI,CAAC,EACtC5Z,EAAE,IAAKrM,SAAS,CAAC4lB,YAAY,CAACvZ,EAAE,EAAE4Z,IAAI,CAAC,EACvCd,GAAG,IAAKte,KAAK,CAAC1F,IAAI,CAACnB,SAAS,CAAColB,MAAM,CAACD,GAAG,CAAC,CAAC,CAC3C;AAEH,MAAMiB,gBAAgB,GAAGA,CAAA,KAA6CxI,GAAG,IACvE,cAActf,UAAU,CAAC4C,MAAM,CAAC5C,UAAU,CAAC+nB,SAAS,CAACzI,GAAG,CAAC,CAAC,GAAG;AAE/D,MAAM0I,mBAAmB,GAAGA,CAAA,KAAyC7R,EAAE,IACrEA,EAAE,CAACjK,KAAK,CAACiK,EAAE,CAAC8R,MAAM,EAAE,EAAE9R,EAAE,CAAC+R,OAAO,EAAE,CAAC,CAACviB,GAAG,CAAC,CAAC,CAACL,KAAK,EAAE6iB,KAAK,CAAC,KAAKnoB,UAAU,CAAC8C,IAAI,CAACwC,KAAK,EAAE6iB,KAAK,CAAC,CAAC;AAE5F;;;;AAIA,OAAO,MAAMC,kBAAkB,gBAAkC9f,OAAO,CACtEtI,UAAU,CAACqoB,YAAY,EACvB;EACEzT,UAAU,EAAE,oBAAoB;EAChC3K,MAAM,EAAE6d,gBAAgB;EACxBlmB,SAAS,EAAEomB,mBAAmB;EAC9B/S,WAAW,EAAEA,CAAA,KAAMjV,UAAU,CAACW;CAC/B,CACF;AAED,MAAM2nB,WAAW,gBAA0CvV,eAAe,CACxE/H,MAAM,EACNod,kBAAkB,EAClB,CAACG,GAAG,EAAEpgB,CAAC,EAAExF,GAAG,KACV3C,UAAU,CAACie,UAAU,CAACsK,GAAG,CAAC,CAACxb,IAAI,CAAC3L,MAAM,CAAC4M,KAAK,CAAC;EAC3CC,MAAM,EAAEA,CAAA,KAAM3L,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAE4lB,GAAG,CAAC,CAAC;EAC1Dra,MAAM,EAAGoR,GAAG,IAAKhd,WAAW,CAAC8F,OAAO,CAACpI,UAAU,CAAC+nB,SAAS,CAACzI,GAAG,CAAC;CAC/D,CAAC,CAAC,EACJA,GAAG,IAAKhd,WAAW,CAAC8F,OAAO,CAACpI,UAAU,CAAC4C,MAAM,CAAC5C,UAAU,CAAC+nB,SAAS,CAACzI,GAAG,CAAC,CAAC,CAAC,CAC3E,CAACvS,IAAI,eAAC6H,UAAU,CAAC,YAAY,CAAC,CAAC;AAEhC;AACE;;;;AAIA0T,WAAW,IAAItoB,UAAU;AAG3B;;;;;;;AAOA,OAAO,MAAMwoB,oBAAoB,gBAA0CzV,eAAe,CACxF7H,MAAM,EACNkd,kBAAkB,EACjBG,GAAG,IAAKjmB,WAAW,CAAC8F,OAAO,CAACpI,UAAU,CAACyoB,UAAU,CAACF,GAAG,CAAC,CAAC,EACvDjJ,GAAG,IAAKhd,WAAW,CAAC8F,OAAO,CAACpI,UAAU,CAAC0oB,cAAc,CAACpJ,GAAG,CAAC,CAAC,CAC7D,CAACvS,IAAI,eAAC6H,UAAU,CAAC,sBAAsB,CAAC,CAAC;AAE1C;;;;AAIA,OAAO,MAAM+T,2BAA2B,gBAAGhgB,MAAM,CAACC,GAAG,CAAC,6CAA6C,CAAC;AAEpG;;;;AAIA,OAAO,MAAMggB,qBAAqB,GAAGA,CACnCtP,GAA0B,EAC1BzV,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAa/G,UAAU,CAACqZ,WAAW,CAACtS,CAAC,EAAEuS,GAAG,CAAC,EAAE;EACpD7P,MAAM,EAAE;IAAEC,EAAE,EAAEif,2BAA2B;IAAEhf,UAAU,EAAE;MAAE2P;IAAG;EAAE,CAAE;EAChEtP,WAAW,EAAE,6BAA6BhK,UAAU,CAAC4C,MAAM,CAAC0W,GAAG,CAAC,EAAE;EAClE,GAAGzV;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMglB,oCAAoC,gBAAGlgB,MAAM,CAACC,GAAG,CAC5D,sDAAsD,CACvD;AAED;;;;AAIA,OAAO,MAAMkgB,8BAA8B,GAAGA,CAC5CxP,GAA0B,EAC1BzV,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAa/G,UAAU,CAACyZ,oBAAoB,CAAC1S,CAAC,EAAEuS,GAAG,CAAC,EAAE;EAC7D7P,MAAM,EAAE;IAAEC,EAAE,EAAEmf,oCAAoC;IAAElf,UAAU,EAAE;MAAE2P;IAAG;EAAE,CAAE;EACzEtP,WAAW,EAAE,yCAAyChK,UAAU,CAAC4C,MAAM,CAAC0W,GAAG,CAAC,EAAE;EAC9E,GAAGzV;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMklB,wBAAwB,gBAAGpgB,MAAM,CAACC,GAAG,CAAC,0CAA0C,CAAC;AAE9F;;;;AAIA,OAAO,MAAMogB,kBAAkB,GAAGA,CAChC1O,GAA0B,EAC1BzW,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAa/G,UAAU,CAACqa,QAAQ,CAACtT,CAAC,EAAEuT,GAAG,CAAC,EAAE;EACjD7Q,MAAM,EAAE;IAAEC,EAAE,EAAEqf,wBAAwB;IAAEpf,UAAU,EAAE;MAAE2Q;IAAG;EAAE,CAAE;EAC7DtQ,WAAW,EAAE,0BAA0BhK,UAAU,CAAC4C,MAAM,CAAC0X,GAAG,CAAC,EAAE;EAC/D,GAAGzW;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMolB,iCAAiC,gBAAGtgB,MAAM,CAACC,GAAG,CACzD,mDAAmD,CACpD;AAED;;;;AAIA,OAAO,MAAMsgB,2BAA2B,GAAGA,CACzC5O,GAA0B,EAC1BzW,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAa/G,UAAU,CAACya,iBAAiB,CAAC1T,CAAC,EAAEuT,GAAG,CAAC,EAAE;EAC1D7Q,MAAM,EAAE;IAAEC,EAAE,EAAEuf,iCAAiC;IAAEtf,UAAU,EAAE;MAAE2Q;IAAG;EAAE,CAAE;EACtEtQ,WAAW,EAAE,sCAAsChK,UAAU,CAAC4C,MAAM,CAAC0X,GAAG,CAAC,EAAE;EAC3E,GAAGzW;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMslB,wBAAwB,gBAAGxgB,MAAM,CAACC,GAAG,CAChD,0CAA0C,CAC3C;AAED;;;;AAIA,OAAO,MAAMwgB,kBAAkB,GAC7BvlB,OAA8B,IAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAa/G,UAAU,CAACqpB,UAAU,CAACtiB,CAAC,CAAC,EAAE;EAC9C0C,MAAM,EAAE;IAAEC,EAAE,EAAEyf,wBAAwB;IAAExf,UAAU,EAAE;EAAE,CAAE;EACxDK,WAAW,EAAE,uBAAuB;EACpC,GAAGnG;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMylB,0BAA0B,gBAAGlB,kBAAkB,CAACrb,IAAI,eAC/Dqc,kBAAkB,CAAC;EACjBxU,UAAU,EAAE,4BAA4B;EACxC9K,KAAK,EAAE;CACR,CAAC,CACH;AAED;;;;AAIA,OAAO,MAAMyf,2BAA2B,gBAAG5gB,MAAM,CAACC,GAAG,CACnD,6CAA6C,CAC9C;AAED;;;;AAIA,OAAO,MAAM4gB,qBAAqB,GAChC3lB,OAA8B,IAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAaA,CAAC,CAACzB,KAAK,IAAI,EAAE,EAAE;EACnCmE,MAAM,EAAE;IAAEC,EAAE,EAAE6f,2BAA2B;IAAE5f,UAAU,EAAE;EAAE,CAAE;EAC3DK,WAAW,EAAE,2BAA2B;EACxC,GAAGnG;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAM4lB,6BAA6B,gBAAGrB,kBAAkB,CAACrb,IAAI,eAClEyc,qBAAqB,CAAC;EACpB5U,UAAU,EAAE,+BAA+B;EAC3C9K,KAAK,EAAE;CACR,CAAC,CACH;AAED;;;;AAIA,OAAO,MAAM4f,wBAAwB,gBAAG/gB,MAAM,CAACC,GAAG,CAChD,0CAA0C,CAC3C;AAED;;;;AAIA,OAAO,MAAM+gB,kBAAkB,GAC7B9lB,OAA8B,IAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAa/G,UAAU,CAAC4pB,UAAU,CAAC7iB,CAAC,CAAC,EAAE;EAC9C0C,MAAM,EAAE;IAAEC,EAAE,EAAEggB,wBAAwB;IAAE/f,UAAU,EAAE;EAAE,CAAE;EACxDK,WAAW,EAAE,uBAAuB;EACpC,GAAGnG;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMgmB,0BAA0B,gBAAGzB,kBAAkB,CAACrb,IAAI,eAC/D4c,kBAAkB,CAAC;EACjB/U,UAAU,EAAE,4BAA4B;EACxC9K,KAAK,EAAE;CACR,CAAC,CACH;AAED;;;;AAIA,OAAO,MAAMggB,2BAA2B,gBAAGnhB,MAAM,CAACC,GAAG,CACnD,6CAA6C,CAC9C;AAED;;;;AAIA,OAAO,MAAMmhB,qBAAqB,GAChClmB,OAA8B,IAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAaA,CAAC,CAACzB,KAAK,IAAI,EAAE,EAAE;EACnCmE,MAAM,EAAE;IAAEC,EAAE,EAAEogB,2BAA2B;IAAEngB,UAAU,EAAE;EAAE,CAAE;EAC3DK,WAAW,EAAE,2BAA2B;EACxC,GAAGnG;CACJ,CAAC,CACH;AAEH;;;;AAIA,OAAO,MAAMmmB,6BAA6B,gBAAG5B,kBAAkB,CAACrb,IAAI,eAClEgd,qBAAqB,CAAC;EACpBnV,UAAU,EAAE,+BAA+B;EAC3C9K,KAAK,EAAE;CACR,CAAC,CACH;AAED;;;;AAIA,OAAO,MAAMmgB,uBAAuB,gBAAGthB,MAAM,CAACC,GAAG,CAAC,yCAAyC,CAAC;AAE5F;;;;AAIA,OAAO,MAAMshB,iBAAiB,GAAGA,CAC/BxQ,OAA8B,EAC9BgB,OAA8B,EAC9B7W,OAA8B,KAEzBkF,IAAqB,IAC1BA,IAAI,CAACgE,IAAI,CACPzG,MAAM,CAAES,CAAC,IAAa/G,UAAU,CAAC4a,OAAO,CAAC7T,CAAC,EAAE;EAAE2S,OAAO;EAAEgB;AAAO,CAAE,CAAC,EAAE;EACjEjR,MAAM,EAAE;IAAEC,EAAE,EAAEugB,uBAAuB;IAAEtgB,UAAU,EAAE;MAAE+Q,OAAO;MAAEhB;IAAO;EAAE,CAAE;EACzE1P,WAAW,EAAE,wBAAwBhK,UAAU,CAAC4C,MAAM,CAAC8W,OAAO,CAAC,QAAQ1Z,UAAU,CAAC4C,MAAM,CAAC8X,OAAO,CAAC,EAAE;EACnG,GAAG7W;CACJ,CAAC,CACH;AAEH;;;;;;AAMA,OAAO,MAAMsmB,eAAe,GAC1BA,CAACzQ,OAA8B,EAAEgB,OAA8B,KACvB3R,IAAqB,IAC3DsH,SAAS,CACPtH,IAAI,EACJA,IAAI,CAACgE,IAAI,CAAChK,EAAE,EAAEmnB,iBAAiB,CAACxQ,OAAO,EAAEgB,OAAO,CAAC,CAAC,EACjD3R,IAAI,IAAK/I,UAAU,CAACob,KAAK,CAACrS,IAAI,EAAE;EAAE2Q,OAAO;EAAEgB;AAAO,CAAE,CAAC,EACtD3Z,QAAQ,EACR;EAAEsa,MAAM,EAAE;AAAK,CAAE,CAClB;AAEL;;;;;;AAMA,OAAO,MAAM+O,gBAAgB,GAC3BrhB,IAAqB,IAErBsH,SAAS,CACPtH,IAAI,EACJhG,EAAE,CAACgG,IAAI,CAAC,EACPA,IAAI,IAAK/I,UAAU,CAACqqB,MAAM,CAACthB,IAAI,CAAC,EAChCA,IAAI,IAAK/I,UAAU,CAACqqB,MAAM,CAACthB,IAAI,CAAC,EACjC;EAAEsS,MAAM,EAAE;AAAK,CAAE,CAClB;AAEH,MAAMiP,cAAc,GAAOzd,IAAkB,IAAiCsJ,EAAE,IAC9EA,EAAE,CAACvJ,KAAK,CAACC,IAAI,CAACsJ,EAAE,CAAC,CAAC,CAACxQ,GAAG,CAACvF,KAAK,CAACknB,YAAY,CAAC;AAE5C,MAAMiD,WAAW,GAAO1d,IAAsB,IAAqC2d,CAAC,IAClF,SAASpqB,KAAK,CAACqqB,eAAe,CAACD,CAAC,CAAC,CAAC7kB,GAAG,CAACkH,IAAI,CAAC,CAACtD,IAAI,CAAC,IAAI,CAAC,GAAG;AAE3D,MAAMmhB,UAAU,GACdhmB,aAA6D,IAE/D,CAACZ,CAAC,EAAED,OAAO,EAAElB,GAAG,KACdvC,KAAK,CAACuqB,OAAO,CAAC7mB,CAAC,CAAC,GACd1D,KAAK,CAACwqB,OAAO,CAAC9mB,CAAC,CAAC,GACdxB,WAAW,CAAC8F,OAAO,CAAChI,KAAK,CAACyqB,KAAK,EAAE,CAAC,GAChCvoB,WAAW,CAACqD,GAAG,CAACjB,aAAa,CAACtE,KAAK,CAACqqB,eAAe,CAAC3mB,CAAC,CAAC,EAAED,OAAO,CAAC,EAAEzD,KAAK,CAACknB,YAAY,CAAC,GACvFhlB,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEmB,CAAC,CAAC,CAAC;AAEhD;;;;AAIA,OAAO,MAAMgnB,aAAa,GAAaje,IAAqB,IAA+C;EACzG,OAAOvE,OAAO,CACZ,CAACuE,IAAI,CAAC,EACLA,IAAI,IAAK6d,UAAU,CAACpoB,WAAW,CAACoC,aAAa,CAACkI,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,EAC3DA,IAAI,IAAK6d,UAAU,CAACpoB,WAAW,CAACsB,aAAa,CAACgJ,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,EAC5D;IACE7C,WAAW,EAAE,SAASpH,MAAM,CAACiK,IAAI,CAAC,GAAG;IACrC5C,MAAM,EAAEsgB,WAAW;IACnB3oB,SAAS,EAAE0oB,cAAc;IACzBrV,WAAW,EAAE7U,KAAK,CAACwgB;GACpB,CACF;AACH,CAAC;AAED;;;;AAIA,OAAO,MAAMmK,KAAK,GAAale,IAAqB,IAClDwD,SAAS,CACPzD,KAAK,CAACC,IAAI,CAAC,EACXie,aAAa,CAAC/nB,EAAE,CAAC8J,IAAI,CAAC,CAAC,EACtBkB,EAAE,IAAKA,EAAE,CAACe,MAAM,KAAK,CAAC,GAAG1O,KAAK,CAACyqB,KAAK,EAAE,GAAGzqB,KAAK,CAACknB,YAAY,CAACvZ,EAAE,CAAC,EAChE3N,KAAK,CAACqqB,eAAe,CACtB;AAEH,MAAMO,MAAM,GAAkEjkB,CAAI,IAChFwB,KAAK,CAACC,OAAO,CAACzB,CAAC,CAAC,GAAG1G,IAAI,CAACuM,KAAK,CAAC7F,CAAC,CAAC,GAAG1G,IAAI,CAACiO,MAAM,CAACvH,CAAC,CAAC;AAEnD,MAAMkkB,aAAa,GACjBpe,IAAkB,IAEnBsJ,EAAE,IAAKtJ,IAAI,CAACsJ,EAAE,CAAC,CAACxQ,GAAG,CAACqlB,MAAM,CAAC;AAE5B,MAAME,UAAU,GACdre,IAAsB,IAEvBse,CAAC,IAAK,QAAQte,IAAI,CAACse,CAAC,CAAC,GAAG;AAEzB,MAAMC,SAAS,GACb1mB,aAA8C,IAEhD,CAACZ,CAAC,EAAED,OAAO,EAAElB,GAAG,KACdjC,KAAK,CAAC2qB,OAAO,CAACvnB,CAAC,CAAC,GACdxB,WAAW,CAACqD,GAAG,CAACjB,aAAa,CAACZ,CAAC,EAAED,OAAO,CAAC,EAAEmnB,MAAM,CAAC,GAChD1oB,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEmB,CAAC,CAAC,CAAC;AAEhD;;;;AAIA,OAAO,MAAMwnB,YAAY,GAKvBze,IAAqB,IACF;EACnB,OAAOvE,OAAO,CACZ,CAACuE,IAAI,CAAC,EACLA,IAAI,IAAKue,SAAS,CAAC9oB,WAAW,CAACoC,aAAa,CAACmI,IAAI,CAAC,CAAC,EACnDA,IAAI,IAAKue,SAAS,CAAC9oB,WAAW,CAACsB,aAAa,CAACiJ,IAAI,CAAC,CAAC,EACpD;IACE7C,WAAW,EAAE,QAAQpH,MAAM,CAACiK,IAAI,CAAC,GAAG;IACpC5C,MAAM,EAAEihB,UAAU;IAClBtpB,SAAS,EAAEqpB;GACZ,CACF;AACH,CAAC;AAED;;;;AAIA,OAAO,MAAMM,IAAI,GAKf1e,IAAqB,IAErBwD,SAAS,CACPxD,IAAI,EACJye,YAAY,CAACvoB,EAAE,CAAC8J,IAAI,CAAC,CAAC,EACtBme,MAAM,EACLjkB,CAAC,IAAKwB,KAAK,CAACC,OAAO,CAACzB,CAAC,CAAC,GAAGwB,KAAK,CAAC1F,IAAI,CAACkE,CAAC,CAAC,GAAGX,MAAM,CAAC0K,MAAM,CAAC,EAAE,EAAE/J,CAAC,CAAC,EAC9D;EAAEsU,MAAM,EAAE;AAAK,CAAE,CAClB;AAqFH;;;;AAIA,OAAO,MAAMmQ,KAAK,GAAGA,CAAA,KAEnBjd,MAAc,IAQTkd,SAAS,CAACnd,MAAM,CAACC,MAAM,CAAC,EAAEA,MAAM,EAAElO,IAAI,CAACmrB,KAAK,CAAC;AAEpD;;;;AAIA,OAAO,MAAME,WAAW,GAAGA,CAAA,KAC3B,CACEC,GAAQ,EACRpd,MAAc,KAQV;EAEJ,MAAMqd,aAAa,GAAiB;IAAE,GAAGrd,MAAM;IAAE9G,IAAI,EAAEjC,OAAO,CAACmmB,GAAG;EAAC,CAAE;EACrE,OAAOF,SAAS,CAACnd,MAAM,CAACsd,aAAa,CAAC,EAAEA,aAAa,EAAEvrB,IAAI,CAACmrB,KAAK,EAAE;IAAE/jB,IAAI,EAAEkkB;EAAG,CAAE,CAAC;AACnF,CAAC;AAED;;;;AAIA,OAAO,MAAME,WAAW,GAAGA,CAAA,KAC3B,CACEF,GAAQ,EACRpd,MAAc,KAUV;EAEJ,MAAMqd,aAAa,GAAiB;IAAE,GAAGrd,MAAM;IAAE9G,IAAI,EAAEjC,OAAO,CAACmmB,GAAG;EAAC,CAAE;EACrE,OAAOF,SAAS,CACdnd,MAAM,CAACsd,aAAa,CAAC,EACrBA,aAAa,EACbvrB,IAAI,CAACsH,KAAK,EACV;IAAEF,IAAI,EAAEkkB;EAAG,CAAE,CACd;AACH,CAAC;AA0BD;;;;AAIA,OAAO,MAAMG,aAAa,GACxBA,CAAA,KACA,CACEH,GAAQ,EACRI,OAA2B,EAC3BC,OAA2B,EAC3Bzd,MAAc,KAmBV;EAEJ,MAAM0d,mBAAoB,SAAQzqB,OAAO,CAACgqB,KAA0C;IAClF,KAAKppB,oBAAoB,CAAC2D,MAAM,IAAC;MAC/B,OAAO,IAAI,CAAC+C,WAAW;IACzB;IACA,KAAK1G,oBAAoB,CAAC8pB,YAAY,IAAC;MACrC,OAAO;QAAEH,OAAO;QAAEC;MAAO,CAAE;IAC7B;;EAEF,MAAMJ,aAAa,GAAiB;IAAE,GAAGrd,MAAM;IAAE9G,IAAI,EAAEjC,OAAO,CAACmmB,GAAG;EAAC,CAAE;EACrE,OAAOF,SAAS,CACdnd,MAAM,CAACsd,aAAa,CAAC,EACrBA,aAAa,EACbK,mBAAmB,EACnB;IAAExkB,IAAI,EAAEkkB;EAAG,CAAE,CACd;AACH,CAAC;AAEH,MAAMF,SAAS,GAAGA,CAChBU,UAA2B,EAC3BC,UAAwB,EACxBC,IAAS,EACTV,GAAS,KACF;EACP,MAAM3mB,QAAQ,GAAG3C,MAAM,CAACsB,YAAY,CAACwoB,UAAU,CAAC;EAEhD,OAAO,cAAcE,IAAI;IACvBvjB,YAAYwjB,KAAW,EAAEC,iBAAA,GAA6B,KAAK,EAAEC,KAAA,GAAiB,IAAI;MAChF,IAAIb,GAAG,KAAKnhB,SAAS,EAAE;QACrB8hB,KAAK,GAAGE,KAAK,GAAG;UAAE,GAAGF,KAAK;UAAE,GAAGX;QAAG,CAAE,GAAG;UAAE,GAAGA,GAAG;UAAE,GAAGW;QAAK,CAAE;MAC7D;MACA,IAAIC,iBAAiB,KAAK,IAAI,EAAE;QAC9BD,KAAK,GAAGtnB,QAAQ,CAACsnB,KAAK,CAAC;MACzB;MACA,KAAK,CAACA,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;IAC3B;IAEA,QAAQ9pB,MAAM,IAAIL,cAAc,CAAC+K,QAAQ;IAEzCuf,QAAQA,CAAA;MACN,OAAOlqB,MAAM,CAACO,IAAI,CAAC,IAAI,CAACgG,WAAkB,CAAC,CAAC,IAAI,CAAC;IACnD;IAEA,OAAOiE,IAAIA,CAAA;MACT,OAAO1L,aAAa,CAAC,IAAI,EAAEoH,SAAS,CAAC;IACvC;IAEA,WAAW9F,GAAGA,CAAA;MACZ,MAAM+pB,QAAQ,GAAG3pB,EAAE,CAACopB,UAAU,CAAC;MAC/B,MAAM5nB,MAAM,GAAGlC,MAAM,CAACuB,aAAa,CAAC8oB,QAAQ,CAAC;MAC7C,MAAMziB,MAAM,GAAG1H,MAAM,CAACO,IAAI,CAAC4pB,QAAQ,CAAC;MACpC,MAAMnJ,GAAG,GAAG3hB,SAAS,CAACkB,IAAI,CAAC4pB,QAAQ,CAAC;MACpC,MAAMzX,WAAW,GAAGlT,YAAY,CAACe,IAAI,CAAC4pB,QAAQ,CAAC;MAC/C,MAAMC,WAAW,GAA4BrkB,OAAO,CAClD,EAAE,EACF,MAAM,CAACJ,KAAK,EAAEC,CAAC,EAAExF,GAAG,KAClBuF,KAAK,YAAY,IAAI,GAAG5F,WAAW,CAAC8F,OAAO,CAACF,KAAK,CAAC,GAAG5F,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEuF,KAAK,CAAC,CAAC,EACrG,MAAM,CAACA,KAAK,EAAEC,CAAC,EAAExF,GAAG,KAClBuF,KAAK,YAAY,IAAI,GACjB5F,WAAW,CAAC8F,OAAO,CAACF,KAAK,CAAC,GAC1B5F,WAAW,CAAC0B,QAAQ,CACpB1B,WAAW,CAACqD,GAAG,CACbpB,MAAM,CAAC2D,KAAK,CAAC,EACZokB,KAAK,IAAK,IAAI,IAAI,CAACA,KAAK,EAAE,IAAI,CAAC,CACjC,EACD,MAAMhqB,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEuF,KAAK,CAAC,CACnC,EACL;QACE0M,UAAU,EAAE,IAAI,CAAC7K,IAAI;QACrBD,KAAK,EAAE,IAAI,CAACC,IAAI;QAChBC,WAAW,EAAE,kBAAkB,IAAI,CAACD,IAAI,EAAE;QAC1CE,MAAM,EAAEA,CAAA,KAAOlB,IAAS,IAAK,GAAGA,IAAI,CAACD,WAAW,CAACiB,IAAI,IAAIE,MAAM,CAAClB,IAAI,CAAC,GAAG;QACxEnH,SAAS,EAAEA,CAAA,KAAOuU,EAAO,IAAKoN,GAAG,CAACpN,EAAE,CAAC,CAACxQ,GAAG,CAAE2mB,KAAU,IAAK,IAAI,IAAI,CAACA,KAAK,CAAC,CAAC;QAC1ErX,WAAW,EAAEA,CAAA,KAAMA;OACpB,CACF;MACD,MAAMrF,cAAc,GAAGS,SAAS,CAC9B8b,UAAU,EACVQ,WAAW,EACVzkB,KAAK,IAAK,IAAI,IAAI,CAACA,KAAK,EAAE,IAAI,CAAC,EAChCnH,QAAQ,CACT;MACD,OAAO6O,cAAc,CAACjN,GAAG;IAC3B;IAEA,OAAO2L,MAAM,GAAG6d,UAAU;IAE1B,OAAO7Z,MAAMA,CAAA;MACX,OAAQ/D,MAAoB,IAAI;QAC9B,MAAMqe,SAAS,GAAiB;UAAE,GAAGR,UAAU;UAAE,GAAG7d;QAAM,CAAE;QAC5D,OAAOkd,SAAS,CACdnd,MAAM,CAACse,SAAS,CAAC,EACjBA,SAAS,EACT,IAAI,EACJ,MAAM,IAAIre,MAAM,GAAG/D,SAAS,GAAGmhB,GAAG,CACnC;MACH,CAAC;IACH;IAEA,OAAO5Y,eAAeA,CAAA;MACpB,OAAO,CAACxE,MAAW,EAAE1J,MAAW,EAAEN,MAAW,KAAI;QAC/C,MAAMqoB,SAAS,GAAG;UAAE,GAAGR,UAAU;UAAE,GAAG7d;QAAM,CAAE;QAC9C,OAAOkd,SAAS,CACd1Y,eAAe,CACboZ,UAAU,EACVppB,EAAE,CAACuL,MAAM,CAACse,SAAS,CAAC,CAAC,EACrB/nB,MAAM,EACNN,MAAM,CACP,EACDqoB,SAAS,EACT,IAAI,EACJ,MAAM,IAAIre,MAAM,GAAG/D,SAAS,GAAGmhB,GAAG,CACnC;MACH,CAAC;IACH;IAEA,OAAOkB,mBAAmBA,CAAA;MACxB,OAAO,CAACte,MAAoB,EAAE1J,MAAW,EAAEN,MAAW,KAAI;QACxD,MAAMqoB,SAAS,GAAiB;UAAE,GAAGR,UAAU;UAAE,GAAG7d;QAAM,CAAE;QAC5D,OAAOkd,SAAS,CACd1Y,eAAe,CACblQ,IAAI,CAACspB,UAAU,CAAC,EAChB7d,MAAM,CAACse,SAAS,CAAC,EACjB/nB,MAAM,EACNN,MAAM,CACP,EACDqoB,SAAS,EACT,IAAI,EACJ,MAAM,IAAIre,MAAM,GAAG/D,SAAS,GAAGmhB,GAAG,CACnC;MACH,CAAC;IACH;GACD;AACH,CAAC;AAqBD,MAAMmB,oBAAoB,gBAAGxe,MAAM,CAAC;EAClC7G,IAAI,EAAEjC,OAAO,CAAC,WAAW,CAAC;EAC1B4D,IAAI,EAAEsJ,OAAO,CAAC,MAAMqa,WAAW,CAAC;EAChC1I,KAAK,EAAE3R,OAAO,CAAC,MAAMqa,WAAW;CACjC,CAAC,CAAChgB,IAAI,eAAC6H,UAAU,CAAC,sBAAsB,CAAC,CAAC;AAE3C,MAAMoY,eAAe,gBAAG1e,MAAM,CAAC;EAC7B7G,IAAI,EAAEjC,OAAO,CAAC,MAAM;CACrB,CAAC,CAACuH,IAAI,eAAC6H,UAAU,CAAC,iBAAiB,CAAC,CAAC;AAEtC,MAAMqY,kBAAkB,gBAAG3e,MAAM,CAAC;EAChC7G,IAAI,EAAEjC,OAAO,CAAC,SAAS,CAAC;EACxBkE,EAAE,EAAEgS,GAAG,CAAC3O,IAAI,CAACoO,WAAW,CAAC;IACvBrR,KAAK,EAAE,IAAI;IACXE,WAAW,EAAE;GACd,CAAC,CAAC;EACHkjB,eAAe,EAAExR,GAAG,CAAC3O,IAAI,CAACoO,WAAW,CAAC;IACpCrR,KAAK,EAAE,iBAAiB;IACxBE,WAAW,EAAE;GACd,CAAC;CACH,CAAC,CAAC+C,IAAI,eAAC6H,UAAU,CAAC,oBAAoB,CAAC,CAAC;AAEzC,MAAMmY,WAAW,gBAAwBrnB,KAAK,CAC5ConB,oBAAoB,EACpBE,eAAe,EACfC,kBAAkB,CACnB,CAAClgB,IAAI,eAAC6H,UAAU,CAAC,aAAa,CAAC,CAAC;AAEjC,MAAMuY,oBAAoB,gBAAGvrB,SAAS,CAACkB,IAAI,CAACiqB,WAAW,CAAC;AAExD,MAAMK,gBAAgB,GAAgCjX,EAAE,IAAKgX,oBAAoB,CAAChX,EAAE,CAAC,CAACxQ,GAAG,CAAC0nB,aAAa,CAAC;AAExG,MAAMC,aAAa,GAAoCC,OAAO,IAAI;EAChE,QAAQA,OAAO,CAAC9lB,IAAI;IAClB,KAAK,MAAM;MACT,OAAO,cAAc;IACvB,KAAK,SAAS;MACZ,OAAO,mBAAmB8lB,OAAO,CAAC7jB,EAAE,KAAK6jB,OAAO,CAACL,eAAe,GAAG;IACrE,KAAK,WAAW;MACd,OAAO,qBAAqBI,aAAa,CAACC,OAAO,CAAClJ,KAAK,CAAC,KAAKiJ,aAAa,CAACC,OAAO,CAACnkB,IAAI,CAAC,GAAG;EAC/F;AACF,CAAC;AAED;;;;AAIA,OAAO,MAAMokB,eAAe,gBAA4BllB,OAAO,CAC7DzH,OAAO,CAAC4sB,SAAS,EACjB;EACE7Y,UAAU,EAAE,iBAAiB;EAC7B3K,MAAM,EAAEA,CAAA,KAAMqjB,aAAa;EAC3B1rB,SAAS,EAAEA,CAAA,KAAMwrB;CAClB,CACF;AAED,MAAMC,aAAa,GAAInlB,KAAkB,IAAqB;EAC5D,QAAQA,KAAK,CAACT,IAAI;IAChB,KAAK,WAAW;MACd,OAAO5G,OAAO,CAAC6sB,SAAS,CAACL,aAAa,CAACnlB,KAAK,CAACkB,IAAI,CAAC,EAAEikB,aAAa,CAACnlB,KAAK,CAACmc,KAAK,CAAC,CAAC;IACjF,KAAK,MAAM;MACT,OAAOxjB,OAAO,CAAC2I,IAAI;IACrB,KAAK,SAAS;MACZ,OAAO3I,OAAO,CAAC8sB,OAAO,CAACzlB,KAAK,CAACwB,EAAE,EAAExB,KAAK,CAACglB,eAAe,CAAC;EAC3D;AACF,CAAC;AAED,MAAMU,aAAa,GAAI1lB,KAAsB,IAAiB;EAC5D,QAAQA,KAAK,CAACT,IAAI;IAChB,KAAK,MAAM;MACT,OAAO;QAAEA,IAAI,EAAE;MAAM,CAAE;IACzB,KAAK,SAAS;MACZ,OAAO;QAAEA,IAAI,EAAE,SAAS;QAAEiC,EAAE,EAAExB,KAAK,CAACwB,EAAE;QAAEwjB,eAAe,EAAEhlB,KAAK,CAACglB;MAAe,CAAE;IAClF,KAAK,WAAW;MACd,OAAO;QACLzlB,IAAI,EAAE,WAAW;QACjB2B,IAAI,EAAEwkB,aAAa,CAAC1lB,KAAK,CAACkB,IAAI,CAAC;QAC/Bib,KAAK,EAAEuJ,aAAa,CAAC1lB,KAAK,CAACmc,KAAK;OACjC;EACL;AACF,CAAC;AAED,MAAMwJ,QAAQ,gBAAyCxd,SAAS,CAC9D0c,WAAW,EACXS,eAAe,EACfH,aAAa,EACbO,aAAa,CACd,CAAC7gB,IAAI,eAAC6H,UAAU,CAAC,SAAS,CAAC,CAAC;AAE7B;AACE;;;;AAIAiZ,QAAQ,IAAIhtB,OAAO;AAkCrB,MAAMitB,YAAY,GAAOC,MAAmC,IAC1Dzf,MAAM,CAAC;EACL7G,IAAI,EAAEjC,OAAO,CAAC,KAAK,CAAC;EACpBuoB;CACD,CAAC;AAEJ,MAAMC,cAAc,gBAAG1f,MAAM,CAAC;EAC5B7G,IAAI,eAAEjC,OAAO,CAAC,OAAO;CACtB,CAAC;AAEF,MAAMyoB,aAAa,GAAcC,KAAuB,IACtD5f,MAAM,CAAC;EACL7G,IAAI,EAAEjC,OAAO,CAAC,MAAM,CAAC;EACrB0oB;CACD,CAAC;AAEJ,MAAMC,kBAAkB,gBAAG7f,MAAM,CAAC;EAChC7G,IAAI,eAAEjC,OAAO,CAAC,WAAW,CAAC;EAC1B+nB,OAAO,EAAER;CACV,CAAC;AAEF,MAAMqB,iBAAiB,GAAcC,SAAiD,IACpF/f,MAAM,CAAC;EACL7G,IAAI,EAAEjC,OAAO,CAAC,UAAU,CAAC;EACzB4D,IAAI,EAAEilB,SAAS;EACfhK,KAAK,EAAEgK;CACR,CAAC;AAEJ,MAAMC,mBAAmB,GAAcD,SAAiD,IACtF/f,MAAM,CAAC;EACL7G,IAAI,EAAEjC,OAAO,CAAC,YAAY,CAAC;EAC3B4D,IAAI,EAAEilB,SAAS;EACfhK,KAAK,EAAEgK;CACR,CAAC;AAEJ,MAAMA,SAAS,GAAGA,CAChBH,KAAwB,EACxBH,MAAoC,KACY;EAChD,MAAMQ,KAAK,GAAG7b,OAAO,CAAC,MAAM7B,GAAG,CAAC;EAChC,MAAMA,GAAG,GAAiDnL,KAAK,CAC7DooB,YAAY,CAACC,MAAM,CAAC,EACpBC,cAAc,EACdC,aAAa,CAACC,KAAK,CAAC,EACpBC,kBAAkB,EAClBC,iBAAiB,CAACG,KAAK,CAAC,EACxBD,mBAAmB,CAACC,KAAK,CAAC,CAC3B,CAACxhB,IAAI,CAAC/C,WAAW,CAAC,aAAapH,MAAM,CAACsrB,KAAK,CAAC,GAAG,CAAC,CAAC;EAClD,OAAOrd,GAAG;AACZ,CAAC;AAED,MAAM2d,cAAc,GAAGA,CACrBN,KAAmB,EACnBH,MAA0B,KACG;EAC7B,MAAMxK,GAAG,GAAG3hB,SAAS,CAACkB,IAAI,CAACurB,SAAS,CAAC7K,mBAAmB,CAAC0K,KAAK,CAAC,EAAE1K,mBAAmB,CAACuK,MAAM,CAAC,CAAC,CAAC;EAC9F,OAAQ5X,EAAE,IAAKoN,GAAG,CAACpN,EAAE,CAAC,CAACxQ,GAAG,CAAC8oB,WAAW,CAAC;AACzC,CAAC;AAED,MAAMC,WAAW,GAAOR,KAAuB,IAAqCS,KAAK,IAAI;EAC3F,MAAMhc,CAAC,GAAIgc,KAAqB,IAAY;IAC1C,QAAQA,KAAK,CAAClnB,IAAI;MAChB,KAAK,OAAO;QACV,OAAO,aAAa;MACtB,KAAK,KAAK;QACR,OAAO,aAAatH,KAAK,CAAC8J,MAAM,CAAC0kB,KAAK,CAAC,GAAG;MAC5C,KAAK,WAAW;QACd,OAAO,mBAAmBrB,aAAa,CAACqB,KAAK,CAACpB,OAAO,CAAC,GAAG;MAC3D,KAAK,MAAM;QACT,OAAO,cAAcW,KAAK,CAACS,KAAK,CAACT,KAAK,CAAC,GAAG;MAC5C,KAAK,YAAY;QACf,OAAO,oBAAoBvb,CAAC,CAACgc,KAAK,CAACvlB,IAAI,CAAC,KAAKuJ,CAAC,CAACgc,KAAK,CAACtK,KAAK,CAAC,GAAG;MAChE,KAAK,UAAU;QACb,OAAO,kBAAkB1R,CAAC,CAACgc,KAAK,CAACvlB,IAAI,CAAC,KAAKuJ,CAAC,CAACgc,KAAK,CAACtK,KAAK,CAAC,GAAG;IAChE;EACF,CAAC;EACD,OAAO1R,CAAC,CAACgc,KAAK,CAAC;AACjB,CAAC;AAED,MAAMC,UAAU,GACdlqB,aAAyD,IAE3D,CAACZ,CAAC,EAAED,OAAO,EAAElB,GAAG,KACdxC,KAAK,CAAC0uB,OAAO,CAAC/qB,CAAC,CAAC,GACdxB,WAAW,CAACqD,GAAG,CAACjB,aAAa,CAACoqB,WAAW,CAAChrB,CAAC,CAAC,EAAED,OAAO,CAAC,EAAE4qB,WAAW,CAAC,GAClEnsB,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEmB,CAAC,CAAC,CAAC;AAEhD;;;;AAIA,OAAO,MAAMirB,aAAa,GAAGA,CAAuB;EAAEhB,MAAM,GAAGnjB,OAAO;EAAEsjB;AAAK,CAG5E,KAAqD;EACpD,OAAO5lB,OAAO,CACZ,CAAC4lB,KAAK,EAAEH,MAAM,CAAC,EACf,CAACG,KAAK,EAAEH,MAAM,KAAKa,UAAU,CAACtsB,WAAW,CAACoC,aAAa,CAAC2pB,SAAS,CAACH,KAAK,EAAEH,MAAM,CAAC,CAAC,CAAC,EAClF,CAACG,KAAK,EAAEH,MAAM,KAAKa,UAAU,CAACtsB,WAAW,CAACsB,aAAa,CAACyqB,SAAS,CAACH,KAAK,EAAEH,MAAM,CAAC,CAAC,CAAC,EAClF;IACE/jB,WAAW,EAAE,SAASpH,MAAM,CAACsrB,KAAK,CAAC,GAAG;IACtCjkB,MAAM,EAAEykB,WAAW;IACnB9sB,SAAS,EAAE4sB;GACZ,CACF;AACH,CAAC;AAED,SAASC,WAAWA,CAAIE,KAAmB;EACzC,QAAQA,KAAK,CAAClnB,IAAI;IAChB,KAAK,KAAK;MACR,OAAOtH,KAAK,CAAC6uB,GAAG,CAACL,KAAK,CAACZ,MAAM,CAAC;IAChC,KAAK,OAAO;MACV,OAAO5tB,KAAK,CAAC0qB,KAAK;IACpB,KAAK,WAAW;MACd,OAAO1qB,KAAK,CAAC8uB,SAAS,CAAC5B,aAAa,CAACsB,KAAK,CAACpB,OAAO,CAAC,CAAC;IACtD,KAAK,MAAM;MACT,OAAOptB,KAAK,CAACkI,IAAI,CAACsmB,KAAK,CAACT,KAAK,CAAC;IAChC,KAAK,UAAU;MACb,OAAO/tB,KAAK,CAAC+uB,QAAQ,CAACT,WAAW,CAACE,KAAK,CAACvlB,IAAI,CAAC,EAAEqlB,WAAW,CAACE,KAAK,CAACtK,KAAK,CAAC,CAAC;IAC1E,KAAK,YAAY;MACf,OAAOlkB,KAAK,CAACgvB,UAAU,CAACV,WAAW,CAACE,KAAK,CAACvlB,IAAI,CAAC,EAAEqlB,WAAW,CAACE,KAAK,CAACtK,KAAK,CAAC,CAAC;EAC9E;AACF;AAEA,SAASyK,WAAWA,CAAIH,KAAqB;EAC3C,QAAQA,KAAK,CAAClnB,IAAI;IAChB,KAAK,OAAO;MACV,OAAO;QAAEA,IAAI,EAAE;MAAO,CAAE;IAC1B,KAAK,KAAK;MACR,OAAO;QAAEA,IAAI,EAAE,KAAK;QAAEsmB,MAAM,EAAEY,KAAK,CAACZ;MAAM,CAAE;IAC9C,KAAK,WAAW;MACd,OAAO;QAAEtmB,IAAI,EAAE,WAAW;QAAE8lB,OAAO,EAAEoB,KAAK,CAACpB;MAAO,CAAE;IACtD,KAAK,MAAM;MACT,OAAO;QAAE9lB,IAAI,EAAE,MAAM;QAAEymB,KAAK,EAAES,KAAK,CAACT;MAAK,CAAE;IAC7C,KAAK,YAAY;MACf,OAAO;QACLzmB,IAAI,EAAE,YAAY;QAClB2B,IAAI,EAAE0lB,WAAW,CAACH,KAAK,CAACvlB,IAAI,CAAC;QAC7Bib,KAAK,EAAEyK,WAAW,CAACH,KAAK,CAACtK,KAAK;OAC/B;IACH,KAAK,UAAU;MACb,OAAO;QACL5c,IAAI,EAAE,UAAU;QAChB2B,IAAI,EAAE0lB,WAAW,CAACH,KAAK,CAACvlB,IAAI,CAAC;QAC7Bib,KAAK,EAAEyK,WAAW,CAACH,KAAK,CAACtK,KAAK;OAC/B;EACL;AACF;AAEA,MAAM+K,iBAAiB,gBAAoB/e,SAAS,CAClDzF,OAAO,EACPA,OAAO,EACP7J,QAAQ,EACPgtB,MAAM,IAAI;EACT,IAAIzsB,SAAS,CAAC8D,QAAQ,CAAC2oB,MAAM,CAAC,EAAE;IAC9B,OAAO5tB,KAAK,CAAC8J,MAAM,CAAC9J,KAAK,CAAC6uB,GAAG,CAACjB,MAAM,CAAC,CAAC;EACxC;EACA,OAAO3mB,MAAM,CAAC2mB,MAAM,CAAC;AACvB,CAAC,CACF;AAED;;;;AAIA,OAAO,MAAMY,KAAK,GAAGA,CAAwB;EAAEZ,MAAM,GAAGqB,iBAAiB;EAAElB;AAAK,CAG/E,KACC7d,SAAS,CACPge,SAAS,CAACH,KAAK,EAAEH,MAAM,CAAC,EACxBgB,aAAa,CAAC;EAAEb,KAAK,EAAEnrB,EAAE,CAACmrB,KAAK,CAAC;EAAEH,MAAM,EAAEhrB,EAAE,CAACgrB,MAAM;AAAC,CAAE,CAAC,EACvDU,WAAW,EACXK,WAAW,CACZ;AAgBH,MAAMO,eAAe,GAAGA,CACtBnB,KAAwB,EACxBH,MAAoC,KAEpCzf,MAAM,CAAC;EACL7G,IAAI,EAAEjC,OAAO,CAAC,SAAS,CAAC;EACxBmpB,KAAK,EAAEN,SAAS,CAACH,KAAK,EAAEH,MAAM;CAC/B,CAAC;AAEJ,MAAMuB,eAAe,GACnBhqB,KAAuB,IAEvBgJ,MAAM,CAAC;EACL7G,IAAI,EAAEjC,OAAO,CAAC,SAAS,CAAC;EACxBF;CACD,CAAC;AAEJ,MAAMiqB,QAAQ,GAAGA,CACfrB,KAAwB,EACxB5oB,KAAwB,EACxByoB,MAAoC,KAEpCroB,KAAK,CACH2pB,eAAe,CAACnB,KAAK,EAAEH,MAAM,CAAC,EAC9BuB,eAAe,CAAChqB,KAAK,CAAC,CACvB;AAEH,MAAMkqB,UAAU,GAAUtnB,KAAqB,IAAqB;EAClE,QAAQA,KAAK,CAACT,IAAI;IAChB,KAAK,SAAS;MACZ,OAAO7G,IAAI,CAAC6uB,SAAS,CAAChB,WAAW,CAACvmB,KAAK,CAACymB,KAAK,CAAC,CAAC;IACjD,KAAK,SAAS;MACZ,OAAO/tB,IAAI,CAACwH,OAAO,CAACF,KAAK,CAAC5C,KAAK,CAAC;EACpC;AACF,CAAC;AAED,MAAMoqB,aAAa,GAAGA,CACpBxB,KAAmB,EACnB5oB,KAAmB,EACnByoB,MAA0B,KACI;EAC9B,MAAMxK,GAAG,GAAG3hB,SAAS,CAACkB,IAAI,CACxBysB,QAAQ,CAAC/L,mBAAmB,CAAC0K,KAAK,CAAC,EAAE1K,mBAAmB,CAACle,KAAK,CAAC,EAAEke,mBAAmB,CAACuK,MAAM,CAAC,CAAC,CAC9F;EACD,OAAQ5X,EAAE,IAAKoN,GAAG,CAACpN,EAAE,CAAC,CAACxQ,GAAG,CAAC6pB,UAAU,CAAC;AACxC,CAAC;AAED,MAAMG,UAAU,GAAGA,CAAOzB,KAAuB,EAAE5oB,KAAuB,KAAsCsqB,IAAI,IAClHA,IAAI,CAACnoB,IAAI,KAAK,SAAS,GACnB,kBAAkBinB,WAAW,CAACR,KAAK,CAAC,CAAC0B,IAAI,CAACjB,KAAK,CAAC,GAAG,GACnD,gBAAgBrpB,KAAK,CAACsqB,IAAI,CAACtqB,KAAK,CAAC,GAAG;AAE1C,MAAMuqB,SAAS,GAAGA,CAChBC,kBAAiE,EACjEC,kBAAoD,KAEtD,CAACjsB,CAAC,EAAED,OAAO,EAAElB,GAAG,KACd/B,IAAI,CAACovB,MAAM,CAAClsB,CAAC,CAAC,GACZlD,IAAI,CAACoN,KAAK,CAAClK,CAAC,EAAE;EACZmsB,SAAS,EAAGtB,KAAK,IAAKrsB,WAAW,CAACqD,GAAG,CAACmqB,kBAAkB,CAACnB,KAAK,EAAE9qB,OAAO,CAAC,EAAEjD,IAAI,CAAC6uB,SAAS,CAAC;EACzFS,SAAS,EAAG5qB,KAAK,IAAKhD,WAAW,CAACqD,GAAG,CAACoqB,kBAAkB,CAACzqB,KAAK,EAAEzB,OAAO,CAAC,EAAEjD,IAAI,CAACwH,OAAO;CACvF,CAAC,GACA9F,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEmB,CAAC,CAAC,CAAC;AAEhD;;;;AAIA,OAAO,MAAMqsB,YAAY,GAAGA,CAAmC;EAAEpC,MAAM,GAAGnjB,OAAO;EAAEwlB,OAAO;EAAEC;AAAO,CAIlG,KACC/nB,OAAO,CACL,CAAC8nB,OAAO,EAAEC,OAAO,EAAEtC,MAAM,CAAC,EAC1B,CAACqC,OAAO,EAAEC,OAAO,EAAEtC,MAAM,KACvB8B,SAAS,CACPvtB,WAAW,CAACoC,aAAa,CAACqqB,aAAa,CAAC;EAAEb,KAAK,EAAEkC,OAAO;EAAErC;AAAM,CAAE,CAAC,CAAC,EACpEzrB,WAAW,CAACoC,aAAa,CAAC2rB,OAAO,CAAC,CACnC,EACH,CAACD,OAAO,EAAEC,OAAO,EAAEtC,MAAM,KACvB8B,SAAS,CACPvtB,WAAW,CAACsB,aAAa,CAACmrB,aAAa,CAAC;EAAEb,KAAK,EAAEkC,OAAO;EAAErC;AAAM,CAAE,CAAC,CAAC,EACpEzrB,WAAW,CAACsB,aAAa,CAACysB,OAAO,CAAC,CACnC,EACH;EACErmB,WAAW,EAAE,QAAQpH,MAAM,CAACwtB,OAAO,CAAC,KAAKxtB,MAAM,CAACytB,OAAO,CAAC,GAAG;EAC3DpmB,MAAM,EAAE0lB,UAAU;EAClB/tB,SAAS,EAAE8tB;CACZ,CACF;AAEH;;;;AAIA,OAAO,MAAME,IAAI,GAAGA,CAAmC;EAAE7B,MAAM,GAAGqB,iBAAiB;EAAEgB,OAAO;EAAEC;AAAO,CAIpG,KACChgB,SAAS,CACPkf,QAAQ,CAACa,OAAO,EAAEC,OAAO,EAAEtC,MAAM,CAAC,EAClCoC,YAAY,CAAC;EAAEC,OAAO,EAAErtB,EAAE,CAACqtB,OAAO,CAAC;EAAEC,OAAO,EAAEttB,EAAE,CAACstB,OAAO,CAAC;EAAEtC,MAAM,EAAEhrB,EAAE,CAACgrB,MAAM;AAAC,CAAE,CAAC,EAChFyB,UAAU,EACTI,IAAI,IACHA,IAAI,CAACnoB,IAAI,KAAK,SAAS,GACnB;EAAEA,IAAI,EAAE,SAAS;EAAEknB,KAAK,EAAEiB,IAAI,CAACjB;AAAK,CAAW,GAC/C;EAAElnB,IAAI,EAAE,SAAS;EAAEnC,KAAK,EAAEsqB,IAAI,CAACtqB;AAAK,CAAW,CACtD;AAEH,MAAMgrB,gBAAgB,GAAOzjB,IAAkB,IAAqCsJ,EAAE,IACpFA,EAAE,CAACvJ,KAAK,CAACC,IAAI,CAACsJ,EAAE,CAAC,CAAC,CAACxQ,GAAG,CAAEoI,EAAE,IAAK9M,OAAO,CAACqmB,YAAY,CAACvZ,EAAE,CAAC,CAAC;AAE1D,MAAMwiB,aAAa,GAAO1jB,IAAsB,IAAyCga,GAAG,IAC1F,WAAWte,KAAK,CAAC1F,IAAI,CAACgkB,GAAG,CAAC,CAAClhB,GAAG,CAAEoB,CAAC,IAAK8F,IAAI,CAAC9F,CAAC,CAAC,CAAC,CAACwC,IAAI,CAAC,IAAI,CAAC,GAAG;AAE9D,MAAMinB,kBAAkB,GACtB3jB,IAAgC,IACe;EAC/C,MAAMoZ,gBAAgB,GAAG1kB,aAAa,CAACqf,cAAc,CAAC/T,IAAI,CAAC;EAC3D,OAAOlM,WAAW,CAACmC,IAAI,CAAC,CAACiE,CAAC,EAAEC,CAAC,KAAKif,gBAAgB,CAAC1d,KAAK,CAAC1F,IAAI,CAACkE,CAAC,CAAC,EAAEwB,KAAK,CAAC1F,IAAI,CAACmE,CAAC,CAAC,CAAC,CAAC;AACnF,CAAC;AAED,MAAMypB,YAAY,GAChB/rB,aAA6D,IAE/D,CAACZ,CAAC,EAAED,OAAO,EAAElB,GAAG,KACd1B,OAAO,CAACyvB,SAAS,CAAC5sB,CAAC,CAAC,GAClBxB,WAAW,CAACqD,GAAG,CACbjB,aAAa,CAAC6D,KAAK,CAAC1F,IAAI,CAACiB,CAAC,CAAC,EAAED,OAAO,CAAC,EACpCkK,EAAE,IAAyB9M,OAAO,CAACqmB,YAAY,CAACvZ,EAAE,CAAC,CACrD,GACCzL,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEmB,CAAC,CAAC,CAAC;AAEhD;;;;AAIA,OAAO,MAAM6sB,eAAe,GAC1B9jB,IAAqB,IACgC;EACrD,OAAOvE,OAAO,CACZ,CAACuE,IAAI,CAAC,EACLA,IAAI,IAAK4jB,YAAY,CAACnuB,WAAW,CAACoC,aAAa,CAACkI,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,EAC7DA,IAAI,IAAK4jB,YAAY,CAACnuB,WAAW,CAACsB,aAAa,CAACgJ,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,EAC9D;IACE7C,WAAW,EAAE,WAAWpH,MAAM,CAACiK,IAAI,CAAC,GAAG;IACvC5C,MAAM,EAAEsmB,aAAa;IACrB3uB,SAAS,EAAE0uB,gBAAgB;IAC3Brb,WAAW,EAAEub;GACd,CACF;AACH,CAAC;AAED;;;;AAIA,OAAO,MAAMI,OAAO,GAAa/jB,IAAqB,IACpDwD,SAAS,CACPzD,KAAK,CAACC,IAAI,CAAC,EACX8jB,eAAe,CAAC5tB,EAAE,CAAC8J,IAAI,CAAC,CAAC,EACxBkB,EAAE,IAAK9M,OAAO,CAACqmB,YAAY,CAACvZ,EAAE,CAAC,EAC/B8Y,GAAG,IAAKte,KAAK,CAAC1F,IAAI,CAACgkB,GAAG,CAAC,CACzB;AAEH,MAAMgK,gBAAgB,GAAGA,CACvBtqB,GAAiB,EACjBjB,KAAmB,KAEpB6Q,EAAE,IAAKA,EAAE,CAACvJ,KAAK,CAACuJ,EAAE,CAACjK,KAAK,CAAC3F,GAAG,CAAC4P,EAAE,CAAC,EAAE7Q,KAAK,CAAC6Q,EAAE,CAAC,CAAC,CAAC,CAACxQ,GAAG,CAAEoI,EAAE,IAAK/M,OAAO,CAACsmB,YAAY,CAACvZ,EAAE,CAAC,CAAC;AAEpF,MAAM+iB,aAAa,GAAGA,CACpBvqB,GAAqB,EACrBjB,KAAuB,KAExBK,GAAG,IACF,YACE4C,KAAK,CAAC1F,IAAI,CAAC8C,GAAG,CAAC,CACZA,GAAG,CAAC,CAAC,CAACogB,CAAC,EAAE1c,CAAC,CAAC,KAAK,IAAI9C,GAAG,CAACwf,CAAC,CAAC,KAAKzgB,KAAK,CAAC+D,CAAC,CAAC,GAAG,CAAC,CAC3CE,IAAI,CAAC,IAAI,CACd,IAAI;AAEN,MAAMwnB,kBAAkB,GAAGA,CACzBxqB,GAA+B,EAC/BjB,KAAiC,KACiB;EAClD,MAAM2gB,gBAAgB,GAAG1kB,aAAa,CAACqf,cAAc,CACnDjgB,WAAW,CAACmC,IAAI,CAAS,CAAC,CAACojB,EAAE,EAAEC,EAAE,CAAC,EAAE,CAACC,EAAE,EAAEC,EAAE,CAAC,KAAK9f,GAAG,CAAC2f,EAAE,EAAEE,EAAE,CAAC,IAAI9gB,KAAK,CAAC6gB,EAAE,EAAEE,EAAE,CAAC,CAAC,CAC/E;EACD,OAAO1lB,WAAW,CAACmC,IAAI,CAAC,CAACiE,CAAC,EAAEC,CAAC,KAAKif,gBAAgB,CAAC1d,KAAK,CAAC1F,IAAI,CAACkE,CAAC,CAAC,EAAEwB,KAAK,CAAC1F,IAAI,CAACmE,CAAC,CAAC,CAAC,CAAC;AACnF,CAAC;AAED,MAAMgqB,YAAY,GAChBtsB,aAA2E,IAE7E,CAACZ,CAAC,EAAED,OAAO,EAAElB,GAAG,KACd3B,OAAO,CAACiwB,SAAS,CAACntB,CAAC,CAAC,GAClBxB,WAAW,CAACqD,GAAG,CAACjB,aAAa,CAAC6D,KAAK,CAAC1F,IAAI,CAACiB,CAAC,CAAC,EAAED,OAAO,CAAC,EAAGkK,EAAE,IAA4B/M,OAAO,CAACsmB,YAAY,CAACvZ,EAAE,CAAC,CAAC,GAC7GzL,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEmB,CAAC,CAAC,CAAC;AAEhD;;;;AAIA,OAAO,MAAMotB,eAAe,GAAGA,CAAuB;EAAE3qB,GAAG;EAAEjB;AAAK,CAGjE,KAAqE;EACpE,OAAOgD,OAAO,CACZ,CAAC/B,GAAG,EAAEjB,KAAK,CAAC,EACZ,CAACiB,GAAG,EAAEjB,KAAK,KAAK0rB,YAAY,CAAC1uB,WAAW,CAACoC,aAAa,CAACkI,KAAK,CAACV,KAAK,CAAC3F,GAAG,EAAEjB,KAAK,CAAC,CAAC,CAAC,CAAC,EACjF,CAACiB,GAAG,EAAEjB,KAAK,KAAK0rB,YAAY,CAAC1uB,WAAW,CAACsB,aAAa,CAACgJ,KAAK,CAACV,KAAK,CAAC3F,GAAG,EAAEjB,KAAK,CAAC,CAAC,CAAC,CAAC,EACjF;IACE0E,WAAW,EAAE,WAAWpH,MAAM,CAAC2D,GAAG,CAAC,KAAK3D,MAAM,CAAC0C,KAAK,CAAC,GAAG;IACxD2E,MAAM,EAAE6mB,aAAa;IACrBlvB,SAAS,EAAEivB,gBAAgB;IAC3B5b,WAAW,EAAE8b;GACd,CACF;AACH,CAAC;AAED;;;;AAIA,OAAO,MAAMI,OAAO,GAAGA,CAAuB;EAAE5qB,GAAG;EAAEjB;AAAK,CAGzD,KACC+K,SAAS,CACPzD,KAAK,CAACV,KAAK,CAAC3F,GAAG,EAAEjB,KAAK,CAAC,CAAC,EACxB4rB,eAAe,CAAC;EAAE3qB,GAAG,EAAExD,EAAE,CAACwD,GAAG,CAAC;EAAEjB,KAAK,EAAEvC,EAAE,CAACuC,KAAK;AAAC,CAAE,CAAC,EAClDyI,EAAE,IAAK/M,OAAO,CAACsmB,YAAY,CAACvZ,EAAE,CAAC,EAC/BpI,GAAG,IAAK4C,KAAK,CAAC1F,IAAI,CAAC8C,GAAG,CAAC,CACzB;AAEH,MAAMyrB,aAAa,GAAOvkB,IAAkB,IAA+BsJ,EAAE,IAC3EA,EAAE,CAACvJ,KAAK,CAACC,IAAI,CAACsJ,EAAE,CAAC,CAAC,CAACxQ,GAAG,CAAEoI,EAAE,IAAK7M,IAAI,CAAComB,YAAY,CAACvZ,EAAE,CAAC,CAAC;AAEvD,MAAMsjB,UAAU,GAAOxkB,IAAsB,IAAmCga,GAAG,IACjF,QAAQte,KAAK,CAAC1F,IAAI,CAACgkB,GAAG,CAAC,CAAClhB,GAAG,CAAEoB,CAAC,IAAK8F,IAAI,CAAC9F,CAAC,CAAC,CAAC,CAACwC,IAAI,CAAC,IAAI,CAAC,GAAG;AAE3D,MAAM+nB,eAAe,GACnBzkB,IAAgC,IACS;EACzC,MAAMoZ,gBAAgB,GAAG1kB,aAAa,CAACqf,cAAc,CAAC/T,IAAI,CAAC;EAC3D,OAAOlM,WAAW,CAACmC,IAAI,CAAC,CAACiE,CAAC,EAAEC,CAAC,KAAKif,gBAAgB,CAAC1d,KAAK,CAAC1F,IAAI,CAACkE,CAAC,CAAC,EAAEwB,KAAK,CAAC1F,IAAI,CAACmE,CAAC,CAAC,CAAC,CAAC;AACnF,CAAC;AAED,MAAMuqB,SAAS,GACb7sB,aAA6D,IAE/D,CAACZ,CAAC,EAAED,OAAO,EAAElB,GAAG,KACdzB,IAAI,CAACswB,MAAM,CAAC1tB,CAAC,CAAC,GACZxB,WAAW,CAACqD,GAAG,CACbjB,aAAa,CAAC6D,KAAK,CAAC1F,IAAI,CAACiB,CAAC,CAAC,EAAED,OAAO,CAAC,EACpCkK,EAAE,IAAmB7M,IAAI,CAAComB,YAAY,CAACvZ,EAAE,CAAC,CAC5C,GACCzL,WAAW,CAAC+F,IAAI,CAAC/F,WAAW,CAACoF,IAAI,CAAC/E,GAAG,EAAEmB,CAAC,CAAC,CAAC;AAEhD;;;;AAIA,OAAO,MAAM2tB,YAAY,GACvB5kB,IAAqB,IACoB;EACzC,OAAOvE,OAAO,CACZ,CAACuE,IAAI,CAAC,EACLA,IAAI,IAAK0kB,SAAS,CAACjvB,WAAW,CAACoC,aAAa,CAACkI,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,EAC1DA,IAAI,IAAK0kB,SAAS,CAACjvB,WAAW,CAACsB,aAAa,CAACgJ,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,EAC3D;IACE7C,WAAW,EAAE,QAAQpH,MAAM,CAACiK,IAAI,CAAC,GAAG;IACpC5C,MAAM,EAAEonB,UAAU;IAClBzvB,SAAS,EAAEwvB,aAAa;IACxBnc,WAAW,EAAEqc;GACd,CACF;AACH,CAAC;AAED;;;;AAIA,OAAO,MAAMI,IAAI,GAAa7kB,IAAqB,IACjDwD,SAAS,CACPzD,KAAK,CAACC,IAAI,CAAC,EACX4kB,YAAY,CAAC1uB,EAAE,CAAC8J,IAAI,CAAC,CAAC,EACrBkB,EAAE,IAAK7M,IAAI,CAAComB,YAAY,CAACvZ,EAAE,CAAC,EAC5B8Y,GAAG,IAAKte,KAAK,CAAC1F,IAAI,CAACgkB,GAAG,CAAC,CACzB;AAEH,MAAMrD,mBAAmB,GAAOle,KAAmB,IACjDoN,OAAO,CAAc,MAAM5H,GAAG,CAAC,CAACiC,IAAI,CAAC/G,WAAW,CAAC;EAC/C,CAAC9D,KAAK,CAACoS,eAAe,GAAG,MAAMhP;CAChC,CAAC,CAAC"}
\ No newline at end of file
+{"version":3,"file":"Schema.js","names":["_bigDecimal","_bigInt","Brand","Cause","Chunk","Data","_duration","Effect","Either","Encoding","Equal","Equivalence","Exit","_fiberId","dual","identity","HashMap","HashSet","List","N","Option","pipeArguments","Predicate","ReadonlyArray","Request","_secret","SortedSet","S","arbitrary","AST","_equivalence","_filters","_hooks","_schema","_serializable","_util","Parser","ParseResult","Pretty","TreeFormatter","TypeId","asSchema","schema","hash","ast","format","String","encodedSchema","make","encodedAST","typeSchema","typeAST","asserts","decodeOption","decodeSync","decodeUnknownOption","decodeUnknownSync","encodeOption","encodeSync","encodeUnknownOption","encodeUnknownSync","is","validateOption","validateSync","encodeUnknown","options","u","overrideOptions","mapError","parseError","encodeUnknownEither","mapLeft","encodeUnknownPromise","parser","runPromise","encode","encodeEither","encodePromise","decodeUnknown","decodeUnknownEither","decodeUnknownPromise","decode","decodeEither","decodePromise","validate","validateEither","validatePromise","isSchema","hasProperty","isObject","$literal","Schema","literals","isMembers","Union","mapMembers","literal","Literal","constructor","annotations","isNonEmptyReadonlyArray","never","pickLiteral","uniqueSymbolFromSelf","symbol","UniqueSymbol","enums","Enums","Object","keys","filter","key","map","templateLiteral","head","tail","types","getTemplateLiterals","span","flatMap","a","b","combineTemplateLiterals","isLiteral","TemplateLiteral","spans","modifyNonEmptyLast","TemplateLiteralSpan","type","appendAll","_tag","Error","declareConstructor","typeParameters","Declaration","tp","toASTAnnotations","declarePrimitive","input","_","succeed","fail","Type","declare","Array","isArray","arguments","BrandTypeId","Symbol","for","fromBrand","self","Refinement","either","isLeft","some","left","v","message","join","none","typeId","id","annotation","InstanceOfTypeId","instanceOf","title","name","description","pretty","$undefined","undefinedKeyword","$void","voidKeyword","$null","_null","null","undefined","void","neverKeyword","unknown","unknownKeyword","any","anyKeyword","string","stringKeyword","number","numberKeyword","boolean","booleanKeyword","bigintFromSelf","bigIntKeyword","symbolFromSelf","symbolKeyword","object","objectKeyword","$union","members","m","union","nullable","orUndefined","nullish","keyof","optionalElement","$OptionalElement","$tupleType","elements","rest","TupleType","Element","e","$tuple","tuple","args","slice","$array","value","array","length","$nonEmptyArray","nonEmptyArray","PropertySignatureDeclaration","isOptional","__defaultConstructor","PropertySignatureTransformation","fromKey","from","to","PropertySignatureTypeId","propertySignatureAnnotations","$PropertySignature","_Key","_EncodedToken","_TypeToken","_HasDefault","pipe","propertySignature","default","propertySignatureTransformation","optionalToRequired","o","optionalToOptional","optional","isExact","exact","defaultValue","isNullable","asOption","as","match","onNone","onSome","optionFromSelf","isNotNull","isNotUndefined","isPropertySignature","$typeLiteral","fields","records","ownKeys","pss","transformations","i","field","toAnnotations","push","PropertySignature","issFrom","issTo","r","indexSignatures","propertySignatures","record","forEach","ps","isReadonly","IndexSignature","parameter","Transformation","TypeLiteral","TypeLiteralTransformation","iss","struct","$record","pick","isTransform","isTypeLiteralTransformation","transformation","propertySignatureTransformations","t","includes","omit","pluck","getPropertyKeyIndexedAccess","transform","ak","makeBrandSchema","_validateEither","refined","unbranded","onLeft","error","formatError","onRight","variance","brand","brandAnnotation","getBrandAnnotation","brands","BrandAnnotationId","partial","required","mutable","getExtendErrorMessage","x","y","path","intersectTypeLiterals","isTypeLiteral","findIndex","formatUnknown","extendAST","concat","intersectUnionMembers","isUnion","xs","ys","extend","that","compose","suspend","f","Suspend","predicate","out","isBoolean","$transformOrFail","transformOrFail","FinalTransformation","fromA","toI","transformLiteral","transformLiterals","pairs","attachPropertySignature","attached","isSymbol","MessageAnnotationId","identifier","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","examples","ExamplesAnnotationId","_default","DefaultAnnotationId","documentation","DocumentationAnnotationId","jsonSchema","JSONSchemaAnnotationId","equivalence","EquivalenceHookId","concurrency","ConcurrencyAnnotationId","batching","BatchingAnnotationId","rename","mapping","TrimmedTypeId","trimmed","trim","MaxLengthTypeId","maxLength","MinLengthTypeId","minLength","PatternTypeId","pattern","regex","source","lastIndex","test","fc","stringMatching","StartsWithTypeId","startsWith","JSON","stringify","EndsWithTypeId","endsWith","IncludesTypeId","searchString","LowercasedTypeId","lowercased","toLowerCase","Lowercased","UppercasedTypeId","uppercased","toUpperCase","Uppercased","LengthTypeId","Char","nonEmpty","Lowercase","s","Uppercase","Trimmed","Trim","split","separator","JsonString","parseJson","try","parse","reviver","catch","replacer","space","NonEmpty","UUIDTypeId","uuidRegex","UUID","uuid","ULIDTypeId","ulidRegex","ULID","ulid","FiniteTypeId","finite","Number","isFinite","GreaterThanTypeId","greaterThan","min","exclusiveMinimum","GreaterThanOrEqualToTypeId","greaterThanOrEqualTo","minimum","MultipleOfTypeId","multipleOf","divisor","remainder","Math","abs","IntTypeId","int","isSafeInteger","LessThanTypeId","lessThan","max","exclusiveMaximum","LessThanOrEqualToTypeId","lessThanOrEqualTo","maximum","BetweenTypeId","between","NonNaNTypeId","nonNaN","isNaN","positive","negative","nonPositive","nonNegative","clamp","strict","NumberFromString","fromOption","n","Finite","Int","NonNaN","Positive","Negative","NonPositive","NonNegative","JsonNumberTypeId","JsonNumber","Not","sym","GreaterThanBigintTypeId","greaterThanBigint","GreaterThanOrEqualToBigintTypeId","greaterThanOrEqualToBigint","LessThanBigintTypeId","lessThanBigint","LessThanOrEqualToBigintTypeId","lessThanOrEqualToBigint","BetweenBigintTypeId","betweenBigint","positiveBigint","negativeBigint","nonNegativeBigint","nonPositiveBigint","clampBigint","bigint","BigInt","PositiveBigintFromSelf","PositiveBigint","NegativeBigintFromSelf","NegativeBigint","NonPositiveBigintFromSelf","NonPositiveBigint","NonNegativeBigintFromSelf","NonNegativeBigint","BigintFromNumber","toNumber","SecretFromSelf","isSecret","secret","fromString","Secret","str","DurationFromSelf","isDuration","oneof","constant","infinity","bigUint","nanos","micros","maxSafeNat","millis","seconds","minutes","hours","days","weeks","DurationFromNanos","duration","toNanos","val","DurationFromMillis","ms","toMillis","hrTime","Duration","toHrTime","clampDuration","betweenDuration","LessThanDurationTypeId","lessThanDuration","LessThanOrEqualToDurationTypeId","lessThanOrEqualToDuration","GreaterThanDurationTypeId","greaterThanDuration","GreaterThanOrEqualToDurationTypeId","greaterThanOrEqualToDuration","BetweenDurationTypeId","Uint8ArrayFromSelf","isUint8Array","u8arr","uint8Array","getEquivalence","equals","_Uint8Array","Uint8Array","arr","makeEncodingTransformation","decodeException","Base64","decodeBase64","encodeBase64","Base64Url","decodeBase64Url","encodeBase64Url","Hex","decodeHex","encodeHex","MinItemsTypeId","minItems","MaxItemsTypeId","maxItems","ItemsCountTypeId","itemsCount","getNumberIndexedAccess","of","headOr","fallback","ValidDateTypeId","validDate","getTime","DateFromSelf","isDate","date","noInvalidDate","Date","ValidDateFromSelf","DateFromString","toISOString","_Date","OptionNoneEncoded","optionSomeEncoded","optionEncoded","optionDecode","optionArbitrary","arb","schemaFromArbitrary","optionPretty","optionParse","isOption","isNone","makeNoneEncoded","makeSomeEncoded","option","_value","optionFromNullable","fromNullable","getOrNull","optionFromNullish","onNoneEncoding","getOrUndefined","optionFromOrUndefined","rightEncoded","right","leftEncoded","eitherEncoded","eitherDecode","eitherArbitrary","eitherPretty","eitherParse","parseRight","decodeUnknownLeft","isEither","eitherFromSelf","makeLeftEncoded","makeRightEncoded","_right","_left","eitherFromUnion","toright","toleft","fromRight","fromLeft","l","readonlyMapArbitrary","Map","readonlyMapPretty","entries","k","readonlyMapEquivalence","arrayEquivalence","ka","va","kb","vb","readonlyMapParse","isMap","readonlyMapFromSelf","readonlyMap","_key","readonlySetArbitrary","item","Set","readonlySetPretty","set","values","readonlySetEquivalence","readonlySetParse","isSet","readonlySetFromSelf","readonlySet","bigDecimalPretty","normalize","bigDecimalArbitrary","bigInt","integer","scale","BigDecimalFromSelf","isBigDecimal","BigDecimal","num","BigDecimalFromNumber","fromNumber","unsafeToNumber","GreaterThanBigDecimalTypeId","greaterThanBigDecimal","GreaterThanOrEqualToBigDecimalTypeId","greaterThanOrEqualToBigDecimal","LessThanBigDecimalTypeId","lessThanBigDecimal","LessThanOrEqualToBigDecimalTypeId","lessThanOrEqualToBigDecimal","PositiveBigDecimalTypeId","positiveBigDecimal","isPositive","PositiveBigDecimalFromSelf","NonNegativeBigDecimalTypeId","nonNegativeBigDecimal","NonNegativeBigDecimalFromSelf","NegativeBigDecimalTypeId","negativeBigDecimal","isNegative","NegativeBigDecimalFromSelf","NonPositiveBigDecimalTypeId","nonPositiveBigDecimal","NonPositiveBigDecimalFromSelf","BetweenBigDecimalTypeId","betweenBigDecimal","clampBigDecimal","negateBigDecimal","negate","chunkArbitrary","fromIterable","chunkPretty","c","toReadonlyArray","chunkParse","isChunk","isEmpty","empty","chunkFromSelf","chunk","toData","dataArbitrary","dataPretty","d","dataParse","isEqual","dataFromSelf","data","assign","TAG","Class","makeClass","kind","Base","TaggedClass","tag","extendFields","TaggedError","TaggedRequest","Failure","Success","SerializableRequest","symbolResult","getDuplicatePropertySignatureErrorMessage","fromSchema","cls","props","disableValidation","classSymbol","defineProperty","toString","toSchema","guard","fallbackInstanceOf","declaration","SurrogateAnnotationId","newFields","extendedFields","transformedFields","transformOrFailFrom","p","FiberIdCompositeEncoded","FiberIdEncoded","FiberIdNoneEncoded","FiberIdRuntimeEncoded","startTimeMillis","fiberIdFromArbitrary","fiberIdArbitrary","fiberIdDecode","fiberIdPretty","fiberId","FiberIdFromSelf","isFiberId","composite","runtime","fiberIdEncode","FiberId","causeDieEncoded","defect","CauseEmptyEncoded","causeFailEncoded","CauseInterruptEncoded","causeParallelEncoded","causeEncoded","causeSequentialEncoded","recur","causeArbitrary","causeDecode","causePretty","cause","causeParse","isCause","causeEncode","causeFromSelf","die","interrupt","parallel","sequential","causeDefectPretty","_error","exitFailureEncoded","exitSuccessEncoded","exitEncoded","exitDecode","failCause","exitArbitrary","exitPretty","exit","exitParse","decodeUnknownValue","decodeUnknownCause","isExit","onFailure","onSuccess","exitFromSelf","failure","success","_success","_failure","hashSetArbitrary","hashSetPretty","hashSetEquivalence","hashSetParse","isHashSet","hashSetFromSelf","hashSet","hashMapArbitrary","hashMapPretty","hashMapEquivalence","hashMapParse","isHashMap","hashMapFromSelf","hashMap","listArbitrary","listPretty","listEquivalence","listParse","isList","listFromSelf","list","sortedSetArbitrary","ord","sortedSetPretty","sortedSetParse","isSortedSet","sortedSetFromSelf","ordA","ordI","sortedSet","ArbitraryHookId"],"sources":["../../src/Schema.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/Serializable.js b/dist/esm/Serializable.js
index c051eb36177e58696ae4a340fd2963f149f483d0..7cf3d6acd023e8a27d349bee255526159f65ae19 100644
--- a/dist/esm/Serializable.js
+++ b/dist/esm/Serializable.js
@@ -1,12 +1,12 @@
 import { dual } from "effect/Function";
 import { globalValue } from "effect/GlobalValue";
-import * as Internal from "./internal/serializable.js";
+import * as _serializable from "./internal/serializable.js";
 import * as Schema from "./Schema.js";
 /**
  * @since 1.0.0
  * @category symbol
  */
-export const symbol = Internal.symbol;
+export const symbol = _serializable.symbol;
 /**
  * @since 1.0.0
  * @category accessor
@@ -16,7 +16,7 @@ export const selfSchema = self => self[symbol];
  * @since 1.0.0
  * @category symbol
  */
-export const symbolResult = Internal.symbolResult;
+export const symbolResult = _serializable.symbolResult;
 /**
  * @since 1.0.0
  * @category accessor
diff --git a/dist/esm/Serializable.js.map b/dist/esm/Serializable.js.map
index 64359124374ed55250d81a53b9107778a5e55ee2..90f2944776bca8c5b0aa6248c2839eebe3124927 100644
--- a/dist/esm/Serializable.js.map
+++ b/dist/esm/Serializable.js.map
@@ -1 +1 @@
-{"version":3,"file":"Serializable.js","names":["dual","globalValue","Internal","Schema","symbol","selfSchema","self","symbolResult","failureSchema","Failure","successSchema","Success","exitSchemaCache","WeakMap","exitSchema","proto","Object","getPrototypeOf","exit","failure","success","schema","get","undefined","set","serialize","encode","deserialize","value","decodeUnknown","serializeFailure","deserializeFailure","serializeSuccess","deserializeSuccess","serializeExit","deserializeExit"],"sources":["../../src/Serializable.ts"],"sourcesContent":[null],"mappings":"AAOA,SAASA,IAAI,QAAQ,iBAAiB;AACtC,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAO,KAAKC,QAAQ,MAAM,4BAA4B;AAEtD,OAAO,KAAKC,MAAM,MAAM,aAAa;AAErC;;;;AAIA,OAAO,MAAMC,MAAM,GAAkBF,QAAQ,CAACE,MAAa;AAqB3D;;;;AAIA,OAAO,MAAMC,UAAU,GAAaC,IAA2B,IAA6BA,IAAI,CAACF,MAAM,CAAC;AAExG;;;;AAIA,OAAO,MAAMG,YAAY,GAAkBL,QAAQ,CAACK,YAAmB;AAwBvE;;;;AAIA,OAAO,MAAMC,aAAa,GACxBF,IAAiC,IACLA,IAAI,CAACC,YAAY,CAAC,CAACE,OAAO;AAExD;;;;AAIA,OAAO,MAAMC,aAAa,GACxBJ,IAAiC,IACLA,IAAI,CAACC,YAAY,CAAC,CAACI,OAAO;AAExD,MAAMC,eAAe,gBAAGX,WAAW,CACjC,6CAA6C,EAC7C,MAAM,IAAIY,OAAO,EAAwC,CAC1D;AAED;;;;AAIA,OAAO,MAAMC,UAAU,GACrBR,IAAiC,IAC6B;EAC9D,MAAMS,KAAK,GAAGC,MAAM,CAACC,cAAc,CAACX,IAAI,CAAC;EACzC,IAAI,EAAEC,YAAY,IAAIQ,KAAK,CAAC,EAAE;IAC5B,OAAOZ,MAAM,CAACe,IAAI,CAAC;MAAEC,OAAO,EAAEX,aAAa,CAACF,IAAI,CAAC;MAAEc,OAAO,EAAEV,aAAa,CAACJ,IAAI;IAAC,CAAE,CAAC;EACpF;EACA,IAAIe,MAAM,GAAGT,eAAe,CAACU,GAAG,CAACP,KAAK,CAAC;EACvC,IAAIM,MAAM,KAAKE,SAAS,EAAE;IACxBF,MAAM,GAAGlB,MAAM,CAACe,IAAI,CAAC;MAAEC,OAAO,EAAEX,aAAa,CAACF,IAAI,CAAC;MAAEc,OAAO,EAAEV,aAAa,CAACJ,IAAI;IAAC,CAAE,CAAC;IACpFM,eAAe,CAACY,GAAG,CAACT,KAAK,EAAEM,MAAM,CAAC;EACpC;EACA,OAAOA,MAAM;AACf,CAAC;AAuBD;;;;AAIA,OAAO,MAAMI,SAAS,GACpBnB,IAA2B,IACqBH,MAAM,CAACuB,MAAM,CAACpB,IAAI,CAACF,MAAM,CAAC,CAAC,CAACE,IAAS,CAAC;AAExF;;;;AAIA,OAAO,MAAMqB,WAAW,gBAKpB3B,IAAI,CAQN,CAAC,EAAE,CAACM,IAAI,EAAEsB,KAAK,KAAKzB,MAAM,CAAC0B,aAAa,CAACvB,IAAI,CAACF,MAAM,CAAC,CAAC,CAACwB,KAAK,CAAC,CAAC;AAEhE;;;;AAIA,OAAO,MAAME,gBAAgB,gBAQzB9B,IAAI,CAQN,CAAC,EAAE,CAACM,IAAI,EAAEsB,KAAK,KAAKzB,MAAM,CAACuB,MAAM,CAACpB,IAAI,CAACC,YAAY,CAAC,CAACE,OAAO,CAAC,CAACmB,KAAK,CAAC,CAAC;AAEvE;;;;AAIA,OAAO,MAAMG,kBAAkB,gBAQ3B/B,IAAI,CAQN,CAAC,EAAE,CAACM,IAAI,EAAEsB,KAAK,KAAKzB,MAAM,CAAC0B,aAAa,CAACvB,IAAI,CAACC,YAAY,CAAC,CAACE,OAAO,CAAC,CAACmB,KAAK,CAAC,CAAC;AAE9E;;;;AAIA,OAAO,MAAMI,gBAAgB,gBAQzBhC,IAAI,CAQN,CAAC,EAAE,CAACM,IAAI,EAAEsB,KAAK,KAAKzB,MAAM,CAACuB,MAAM,CAACpB,IAAI,CAACC,YAAY,CAAC,CAACI,OAAO,CAAC,CAACiB,KAAK,CAAC,CAAC;AAEvE;;;;AAIA,OAAO,MAAMK,kBAAkB,gBAU3BjC,IAAI,CAQN,CAAC,EAAE,CAACM,IAAI,EAAEsB,KAAK,KAAKzB,MAAM,CAAC0B,aAAa,CAACvB,IAAI,CAACC,YAAY,CAAC,CAACI,OAAO,CAAC,CAACiB,KAAK,CAAC,CAAC;AAE9E;;;;AAIA,OAAO,MAAMM,aAAa,gBAUtBlC,IAAI,CAQN,CAAC,EAAE,CAACM,IAAI,EAAEsB,KAAK,KAAKzB,MAAM,CAACuB,MAAM,CAACZ,UAAU,CAACR,IAAI,CAAC,CAAC,CAACsB,KAAK,CAAC,CAAC;AAE7D;;;;AAIA,OAAO,MAAMO,eAAe,gBAQxBnC,IAAI,CAQN,CAAC,EAAE,CAACM,IAAI,EAAEsB,KAAK,KAAKzB,MAAM,CAAC0B,aAAa,CAACf,UAAU,CAACR,IAAI,CAAC,CAAC,CAACsB,KAAK,CAAC,CAAC"}
\ No newline at end of file
+{"version":3,"file":"Serializable.js","names":["dual","globalValue","_serializable","Schema","symbol","selfSchema","self","symbolResult","failureSchema","Failure","successSchema","Success","exitSchemaCache","WeakMap","exitSchema","proto","Object","getPrototypeOf","exit","failure","success","schema","get","undefined","set","serialize","encode","deserialize","value","decodeUnknown","serializeFailure","deserializeFailure","serializeSuccess","deserializeSuccess","serializeExit","deserializeExit"],"sources":["../../src/Serializable.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/TreeFormatter.js b/dist/esm/TreeFormatter.js
index 267adf242a8a9fc0e62aa44938f09afd062a9feb..018a2a46a86a46904fff7832ebc09541d8c1a2cd 100644
--- a/dist/esm/TreeFormatter.js
+++ b/dist/esm/TreeFormatter.js
@@ -1,8 +1,11 @@
 /**
  * @since 1.0.0
  */
+import * as Effect from "effect/Effect";
 import * as Option from "effect/Option";
+import * as Predicate from "effect/Predicate";
 import * as AST from "./AST.js";
+import * as _util from "./internal/util.js";
 const make = (value, forest = []) => ({
   value,
   forest
@@ -11,15 +14,17 @@ const make = (value, forest = []) => ({
  * @category formatting
  * @since 1.0.0
  */
-export const formatIssues = issues => {
-  const forest = issues.map(go);
-  return drawTree(forest.length === 1 ? forest[0] : make(`error(s) found`, forest));
-};
+export const formatIssueEffect = issue => Effect.map(go(issue), tree => drawTree(tree));
+/**
+ * @category formatting
+ * @since 1.0.0
+ */
+export const formatIssue = issue => Effect.runSync(formatIssueEffect(issue));
 /**
  * @category formatting
  * @since 1.0.0
  */
-export const formatIssue = issue => formatIssues([issue]);
+export const formatErrorEffect = error => formatIssueEffect(error.error);
 /**
  * @category formatting
  * @since 1.0.0
@@ -40,12 +45,12 @@ const draw = (indentation, forest) => {
 };
 const formatTransformationKind = kind => {
   switch (kind) {
-    case "From":
-      return "From side transformation failure";
+    case "Encoded":
+      return "Encoded side transformation failure";
     case "Transformation":
       return "Transformation process failure";
-    case "To":
-      return "To side transformation failure";
+    case "Type":
+      return "Type side transformation failure";
   }
 };
 const formatRefinementKind = kind => {
@@ -56,85 +61,80 @@ const formatRefinementKind = kind => {
       return "Predicate refinement failure";
   }
 };
-/** @internal */
-export const getMessage = issue => Option.flatMap(AST.getMessageAnnotation(issue.ast), annotation => Option.fromNullable(annotation(issue)));
-/** @internal */
-export const formatTypeMessage = e => getMessage(e).pipe(Option.orElse(() => e.message), Option.getOrElse(() => `Expected ${AST.format(e.ast, true)}, actual ${AST.formatUnknown(e.actual)}`));
-/** @internal */
-export const formatForbiddenMessage = e => Option.getOrElse(e.message, () => "is forbidden");
-const getParseIssueMessage = (issue, orElse) => {
+const getPrevMessage = issue => {
   switch (issue._tag) {
     case "Refinement":
-      return Option.orElse(getRefinementMessage(issue), orElse);
-    case "Transform":
-      return Option.orElse(getTransformMessage(issue), orElse);
-    case "Tuple":
-    case "TypeLiteral":
-    case "Union":
-    case "Type":
-      return Option.orElse(getMessage(issue), orElse);
+      {
+        if (issue.kind === "From") {
+          return getMessage(issue.error);
+        }
+        break;
+      }
+    case "Transformation":
+      return getMessage(issue.error);
   }
-  return orElse();
+  return Option.none();
 };
+const getCurrentMessage = issue => AST.getMessageAnnotation(issue.ast).pipe(Effect.flatMap(annotation => {
+  const out = annotation(issue);
+  return Predicate.isString(out) ? Effect.succeed(out) : out;
+}));
 /** @internal */
-export const getRefinementMessage = e => {
-  if (e.kind === "From") {
-    return getParseIssueMessage(e.error, () => getMessage(e));
-  }
-  return getMessage(e);
-};
+export const getMessage = issue => Effect.catchAll(getPrevMessage(issue), () => getCurrentMessage(issue));
+/** @internal */
+export const formatTypeMessage = e => getMessage(e).pipe(Effect.orElse(() => e.message), Effect.catchAll(() => Effect.succeed(`Expected ${e.ast.toString(true)}, actual ${_util.formatUnknown(e.actual)}`)));
 /** @internal */
-export const getTransformMessage = e => getParseIssueMessage(e.error, () => getMessage(e));
+export const formatForbiddenMessage = e => Option.getOrElse(e.message, () => "is forbidden");
 const go = e => {
   switch (e._tag) {
     case "Type":
-      return make(formatTypeMessage(e));
+      return Effect.map(formatTypeMessage(e), make);
     case "Forbidden":
-      return make(AST.format(e.ast), [make(formatForbiddenMessage(e))]);
+      return Effect.succeed(make(String(e.ast), [make(formatForbiddenMessage(e))]));
     case "Unexpected":
-      return make(`is unexpected, expected ${AST.format(e.ast, true)}`);
+      return Effect.succeed(make(`is unexpected, expected ${e.ast.toString(true)}`));
     case "Missing":
-      return make("is missing");
+      return Effect.succeed(make("is missing"));
     case "Union":
-      return Option.match(getMessage(e), {
-        onNone: () => make(AST.format(e.ast), e.errors.map(e => {
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () => Effect.map(Effect.forEach(e.errors, e => {
           switch (e._tag) {
             case "Member":
-              return make(`Union member`, [go(e.error)]);
+              return Effect.map(go(e.error), tree => make(`Union member`, [tree]));
             default:
               return go(e);
           }
-        })),
-        onSome: make
+        }), forest => make(String(e.ast), forest)),
+        onSuccess: message => Effect.succeed(make(message))
       });
-    case "Tuple":
-      return Option.match(getMessage(e), {
-        onNone: () => make(AST.format(e.ast), e.errors.map(index => make(`[${index.index}]`, [go(index.error)]))),
-        onSome: make
+    case "TupleType":
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () => Effect.map(Effect.forEach(e.errors, index => Effect.map(go(index.error), tree => make(`[${index.index}]`, [tree]))), forest => make(String(e.ast), forest)),
+        onSuccess: message => Effect.succeed(make(message))
       });
     case "TypeLiteral":
-      return Option.match(getMessage(e), {
-        onNone: () => make(AST.format(e.ast), e.errors.map(key => make(`[${AST.formatUnknown(key.key)}]`, [go(key.error)]))),
-        onSome: make
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () => Effect.map(Effect.forEach(e.errors, key => Effect.map(go(key.error), tree => make(`[${_util.formatUnknown(key.key)}]`, [tree]))), forest => make(String(e.ast), forest)),
+        onSuccess: message => Effect.succeed(make(message))
       });
-    case "Transform":
-      return Option.match(getTransformMessage(e), {
-        onNone: () => make(AST.format(e.ast), [make(formatTransformationKind(e.kind), [go(e.error)])]),
-        onSome: make
+    case "Transformation":
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () => Effect.map(go(e.error), tree => make(String(e.ast), [make(formatTransformationKind(e.kind), [tree])])),
+        onSuccess: message => Effect.succeed(make(message))
       });
     case "Refinement":
-      return Option.match(getRefinementMessage(e), {
-        onNone: () => make(AST.format(e.ast), [make(formatRefinementKind(e.kind), [go(e.error)])]),
-        onSome: make
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () => Effect.map(go(e.error), tree => make(String(e.ast), [make(formatRefinementKind(e.kind), [tree])])),
+        onSuccess: message => Effect.succeed(make(message))
       });
     case "Declaration":
-      return Option.match(getMessage(e), {
-        onNone: () => {
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () => {
           const error = e.error;
           const shouldSkipDefaultMessage = error._tag === "Type" && error.ast === e.ast;
-          return shouldSkipDefaultMessage ? go(error) : make(AST.format(e.ast), [go(e.error)]);
+          return shouldSkipDefaultMessage ? go(error) : Effect.map(go(e.error), tree => make(String(e.ast), [tree]));
         },
-        onSome: make
+        onSuccess: message => Effect.succeed(make(message))
       });
   }
 };
diff --git a/dist/esm/TreeFormatter.js.map b/dist/esm/TreeFormatter.js.map
index 87bbf7bee5c839140ef07912b897beede344b911..4984bbfe786c77f2bfff513474be36d1aeb967ff 100644
--- a/dist/esm/TreeFormatter.js.map
+++ b/dist/esm/TreeFormatter.js.map
@@ -1 +1 @@
-{"version":3,"file":"TreeFormatter.js","names":["Option","AST","make","value","forest","formatIssues","issues","map","go","drawTree","length","formatIssue","issue","formatError","error","tree","draw","indentation","r","len","i","isLast","formatTransformationKind","kind","formatRefinementKind","getMessage","flatMap","getMessageAnnotation","ast","annotation","fromNullable","formatTypeMessage","e","pipe","orElse","message","getOrElse","format","formatUnknown","actual","formatForbiddenMessage","getParseIssueMessage","_tag","getRefinementMessage","getTransformMessage","match","onNone","errors","onSome","index","key","shouldSkipDefaultMessage"],"sources":["../../src/TreeFormatter.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"TreeFormatter.js","names":["Effect","Option","Predicate","AST","_util","make","value","forest","formatIssueEffect","issue","map","go","tree","drawTree","formatIssue","runSync","formatErrorEffect","error","formatError","draw","indentation","r","len","length","i","isLast","formatTransformationKind","kind","formatRefinementKind","getPrevMessage","_tag","getMessage","none","getCurrentMessage","getMessageAnnotation","ast","pipe","flatMap","annotation","out","isString","succeed","catchAll","formatTypeMessage","e","orElse","message","toString","formatUnknown","actual","formatForbiddenMessage","getOrElse","String","matchEffect","onFailure","forEach","errors","onSuccess","index","key","shouldSkipDefaultMessage"],"sources":["../../src/TreeFormatter.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/index.js b/dist/esm/index.js
index a507a92311279a5972d4b8444a769b8ec416fc18..dc1a496b4702cce1aaa55c359900f4a669d255b8 100644
--- a/dist/esm/index.js
+++ b/dist/esm/index.js
@@ -14,10 +14,6 @@ export * as ArrayFormatter from "./ArrayFormatter.js";
  * @since 1.0.0
  */
 export * as Equivalence from "./Equivalence.js";
-/**
- * @since 1.0.0
- */
-export * as Format from "./Format.js";
 /**
  * @since 1.0.0
  */
diff --git a/dist/esm/index.js.map b/dist/esm/index.js.map
index 41e31678c558cbe4cf9322114094bdb922a62261..e6b0a120b6605b6b0bafa9f932651bce986d5461 100644
--- a/dist/esm/index.js.map
+++ b/dist/esm/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","names":["AST","Arbitrary","ArrayFormatter","Equivalence","Format","JSONSchema","ParseResult","Parser","Pretty","Schema","Serializable","TreeFormatter"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"AAAA;;;AAGA,OAAO,KAAKA,GAAG,MAAM,UAAU;AAE/B;;;AAGA,OAAO,KAAKC,SAAS,MAAM,gBAAgB;AAE3C;;;AAGA,OAAO,KAAKC,cAAc,MAAM,qBAAqB;AAErD;;;AAGA,OAAO,KAAKC,WAAW,MAAM,kBAAkB;AAE/C;;;AAGA,OAAO,KAAKC,MAAM,MAAM,aAAa;AAErC;;;AAGA,OAAO,KAAKC,UAAU,MAAM,iBAAiB;AAE7C;;;AAGA,OAAO,KAAKC,WAAW,MAAM,kBAAkB;AAE/C;;;AAGA,OAAO,KAAKC,MAAM,MAAM,aAAa;AAErC;;;AAGA,OAAO,KAAKC,MAAM,MAAM,aAAa;AAErC;;;AAGA,OAAO,KAAKC,MAAM,MAAM,aAAa;AAErC;;;;;AAKA,OAAO,KAAKC,YAAY,MAAM,mBAAmB;AAEjD;;;AAGA,OAAO,KAAKC,aAAa,MAAM,oBAAoB"}
\ No newline at end of file
+{"version":3,"file":"index.js","names":["AST","Arbitrary","ArrayFormatter","Equivalence","JSONSchema","ParseResult","Parser","Pretty","Schema","Serializable","TreeFormatter"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"AAAA;;;AAGA,OAAO,KAAKA,GAAG,MAAM,UAAU;AAE/B;;;AAGA,OAAO,KAAKC,SAAS,MAAM,gBAAgB;AAE3C;;;AAGA,OAAO,KAAKC,cAAc,MAAM,qBAAqB;AAErD;;;AAGA,OAAO,KAAKC,WAAW,MAAM,kBAAkB;AAE/C;;;AAGA,OAAO,KAAKC,UAAU,MAAM,iBAAiB;AAE7C;;;AAGA,OAAO,KAAKC,WAAW,MAAM,kBAAkB;AAE/C;;;AAGA,OAAO,KAAKC,MAAM,MAAM,aAAa;AAErC;;;AAGA,OAAO,KAAKC,MAAM,MAAM,aAAa;AAErC;;;AAGA,OAAO,KAAKC,MAAM,MAAM,aAAa;AAErC;;;;;AAKA,OAAO,KAAKC,YAAY,MAAM,mBAAmB;AAEjD;;;AAGA,OAAO,KAAKC,aAAa,MAAM,oBAAoB"}
\ No newline at end of file
diff --git a/dist/esm/internal/filters.js.map b/dist/esm/internal/filters.js.map
index a2723a2bfa8d4013e9e0486068d5f6060489c2d0..bd3760a75180f294084836f713d4e917d4693df0 100644
--- a/dist/esm/internal/filters.js.map
+++ b/dist/esm/internal/filters.js.map
@@ -1 +1 @@
-{"version":3,"file":"filters.js","names":["GreaterThanTypeId","Symbol","for","GreaterThanOrEqualToTypeId","LessThanTypeId","LessThanOrEqualToTypeId","IntTypeId","BetweenTypeId","GreaterThanBigintTypeId","GreaterThanOrEqualToBigintTypeId","LessThanBigintTypeId","LessThanOrEqualToBigintTypeId","BetweenBigintTypeId","MinLengthTypeId","MaxLengthTypeId","LengthTypeId","MinItemsTypeId","MaxItemsTypeId","ItemsCountTypeId"],"sources":["../../../src/internal/filters.ts"],"sourcesContent":[null],"mappings":"AAKA;AACA,OAAO,MAAMA,iBAAiB,gBAA6BC,MAAM,CAACC,GAAG,CACnE,mCAAmC,CACR;AAE7B;AACA,OAAO,MAAMC,0BAA0B,gBAAsCF,MAAM,CAACC,GAAG,CACrF,4CAA4C,CACR;AAEtC;AACA,OAAO,MAAME,cAAc,gBAA0BH,MAAM,CAACC,GAAG,CAC7D,gCAAgC,CACR;AAE1B;AACA,OAAO,MAAMG,uBAAuB,gBAAmCJ,MAAM,CAACC,GAAG,CAC/E,yCAAyC,CACR;AAEnC;AACA,OAAO,MAAMI,SAAS,gBAAqBL,MAAM,CAACC,GAAG,CACnD,2BAA2B,CACR;AAErB;AACA,OAAO,MAAMK,aAAa,gBAAyBN,MAAM,CAACC,GAAG,CAC3D,+BAA+B,CACR;AAEzB;AACA,OAAO,MAAMM,uBAAuB,gBAAmCP,MAAM,CAACC,GAAG,CAC/E,yCAAyC,CACR;AAEnC;AACA,OAAO,MAAMO,gCAAgC,gBAA4CR,MAAM,CAACC,GAAG,CACjG,kDAAkD,CACR;AAE5C;AACA,OAAO,MAAMQ,oBAAoB,gBAAgCT,MAAM,CAACC,GAAG,CACzE,sCAAsC,CACR;AAEhC;AACA,OAAO,MAAMS,6BAA6B,gBAAyCV,MAAM,CAACC,GAAG,CAC3F,+CAA+C,CACR;AAEzC;AACA,OAAO,MAAMU,mBAAmB,gBAA+BX,MAAM,CAACC,GAAG,CACvE,qCAAqC,CACR;AAE/B;AACA,OAAO,MAAMW,eAAe,gBAA2BZ,MAAM,CAACC,GAAG,CAC/D,iCAAiC,CACR;AAE3B;AACA,OAAO,MAAMY,eAAe,gBAA2Bb,MAAM,CAACC,GAAG,CAC/D,iCAAiC,CACR;AAE3B;AACA,OAAO,MAAMa,YAAY,gBAAwBd,MAAM,CAACC,GAAG,CACzD,8BAA8B,CACR;AAExB;AACA,OAAO,MAAMc,cAAc,gBAA0Bf,MAAM,CAACC,GAAG,CAC7D,gCAAgC,CACR;AAE1B;AACA,OAAO,MAAMe,cAAc,gBAA0BhB,MAAM,CAACC,GAAG,CAC7D,gCAAgC,CACR;AAE1B;AACA,OAAO,MAAMgB,gBAAgB,gBAA4BjB,MAAM,CAACC,GAAG,CACjE,kCAAkC,CACR"}
\ No newline at end of file
+{"version":3,"file":"filters.js","names":["GreaterThanTypeId","Symbol","for","GreaterThanOrEqualToTypeId","LessThanTypeId","LessThanOrEqualToTypeId","IntTypeId","BetweenTypeId","GreaterThanBigintTypeId","GreaterThanOrEqualToBigintTypeId","LessThanBigintTypeId","LessThanOrEqualToBigintTypeId","BetweenBigintTypeId","MinLengthTypeId","MaxLengthTypeId","LengthTypeId","MinItemsTypeId","MaxItemsTypeId","ItemsCountTypeId"],"sources":["../../../src/internal/filters.ts"],"sourcesContent":[null],"mappings":"AAEA;AACA,OAAO,MAAMA,iBAAiB,gBAA6BC,MAAM,CAACC,GAAG,CACnE,mCAAmC,CACR;AAE7B;AACA,OAAO,MAAMC,0BAA0B,gBAAsCF,MAAM,CAACC,GAAG,CACrF,4CAA4C,CACR;AAEtC;AACA,OAAO,MAAME,cAAc,gBAA0BH,MAAM,CAACC,GAAG,CAC7D,gCAAgC,CACR;AAE1B;AACA,OAAO,MAAMG,uBAAuB,gBAAmCJ,MAAM,CAACC,GAAG,CAC/E,yCAAyC,CACR;AAEnC;AACA,OAAO,MAAMI,SAAS,gBAAqBL,MAAM,CAACC,GAAG,CACnD,2BAA2B,CACR;AAErB;AACA,OAAO,MAAMK,aAAa,gBAAyBN,MAAM,CAACC,GAAG,CAC3D,+BAA+B,CACR;AAEzB;AACA,OAAO,MAAMM,uBAAuB,gBAAmCP,MAAM,CAACC,GAAG,CAC/E,yCAAyC,CACR;AAEnC;AACA,OAAO,MAAMO,gCAAgC,gBAA4CR,MAAM,CAACC,GAAG,CACjG,kDAAkD,CACR;AAE5C;AACA,OAAO,MAAMQ,oBAAoB,gBAAgCT,MAAM,CAACC,GAAG,CACzE,sCAAsC,CACR;AAEhC;AACA,OAAO,MAAMS,6BAA6B,gBAAyCV,MAAM,CAACC,GAAG,CAC3F,+CAA+C,CACR;AAEzC;AACA,OAAO,MAAMU,mBAAmB,gBAA+BX,MAAM,CAACC,GAAG,CACvE,qCAAqC,CACR;AAE/B;AACA,OAAO,MAAMW,eAAe,gBAA2BZ,MAAM,CAACC,GAAG,CAC/D,iCAAiC,CACR;AAE3B;AACA,OAAO,MAAMY,eAAe,gBAA2Bb,MAAM,CAACC,GAAG,CAC/D,iCAAiC,CACR;AAE3B;AACA,OAAO,MAAMa,YAAY,gBAAwBd,MAAM,CAACC,GAAG,CACzD,8BAA8B,CACR;AAExB;AACA,OAAO,MAAMc,cAAc,gBAA0Bf,MAAM,CAACC,GAAG,CAC7D,gCAAgC,CACR;AAE1B;AACA,OAAO,MAAMe,cAAc,gBAA0BhB,MAAM,CAACC,GAAG,CAC7D,gCAAgC,CACR;AAE1B;AACA,OAAO,MAAMgB,gBAAgB,gBAA4BjB,MAAM,CAACC,GAAG,CACjE,kCAAkC,CACR"}
\ No newline at end of file
diff --git a/dist/esm/internal/hooks.js.map b/dist/esm/internal/hooks.js.map
index d33cd2627c75376de85e87712799ca91fffc2dbe..1b6f47bfc74e7fa99e60c5e9f55f87eee10bd5ee 100644
--- a/dist/esm/internal/hooks.js.map
+++ b/dist/esm/internal/hooks.js.map
@@ -1 +1 @@
-{"version":3,"file":"hooks.js","names":["ArbitraryHookId","Symbol","for","PrettyHookId","EquivalenceHookId"],"sources":["../../../src/internal/hooks.ts"],"sourcesContent":[null],"mappings":"AAOA;AACA,OAAO,MAAMA,eAAe,gBAA8BC,MAAM,CAACC,GAAG,CAClE,gCAAgC,CACJ;AAE9B;AACA,OAAO,MAAMC,YAAY,gBAAwBF,MAAM,CAACC,GAAG,CACzD,6BAA6B,CACP;AAExB;AACA,OAAO,MAAME,iBAAiB,gBAAkCH,MAAM,CAACC,GAAG,CACxE,kCAAkC,CACF"}
\ No newline at end of file
+{"version":3,"file":"hooks.js","names":["ArbitraryHookId","Symbol","for","PrettyHookId","EquivalenceHookId"],"sources":["../../../src/internal/hooks.ts"],"sourcesContent":[null],"mappings":"AAIA;AACA,OAAO,MAAMA,eAAe,gBAA8BC,MAAM,CAACC,GAAG,CAClE,gCAAgC,CACJ;AAE9B;AACA,OAAO,MAAMC,YAAY,gBAAwBF,MAAM,CAACC,GAAG,CACzD,6BAA6B,CACP;AAExB;AACA,OAAO,MAAME,iBAAiB,gBAAkCH,MAAM,CAACC,GAAG,CACxE,kCAAkC,CACF"}
\ No newline at end of file
diff --git a/dist/esm/internal/parseResult.js b/dist/esm/internal/parseResult.js
new file mode 100644
index 0000000000000000000000000000000000000000..0dfff4befa1cd0b901bcf6763f271d1d8b08fe6f
--- /dev/null
+++ b/dist/esm/internal/parseResult.js
@@ -0,0 +1,189 @@
+import * as Effect from "effect/Effect";
+import * as Either from "effect/Either";
+import { dual } from "effect/Function";
+import * as Option from "effect/Option";
+/** @internal */
+export class Declaration {
+  ast;
+  actual;
+  error;
+  _tag = "Declaration";
+  constructor(ast, actual, error) {
+    this.ast = ast;
+    this.actual = actual;
+    this.error = error;
+  }
+}
+/** @internal */
+export class Refinement {
+  ast;
+  actual;
+  kind;
+  error;
+  _tag = "Refinement";
+  constructor(ast, actual, kind, error) {
+    this.ast = ast;
+    this.actual = actual;
+    this.kind = kind;
+    this.error = error;
+  }
+}
+/** @internal */
+export class Tuple {
+  ast;
+  actual;
+  errors;
+  _tag = "TupleType";
+  constructor(ast, actual, errors) {
+    this.ast = ast;
+    this.actual = actual;
+    this.errors = errors;
+  }
+}
+/** @internal */
+export class Index {
+  index;
+  error;
+  _tag = "Index";
+  constructor(index, error) {
+    this.index = index;
+    this.error = error;
+  }
+}
+/** @internal */
+export class TypeLiteral {
+  ast;
+  actual;
+  errors;
+  _tag = "TypeLiteral";
+  constructor(ast, actual, errors) {
+    this.ast = ast;
+    this.actual = actual;
+    this.errors = errors;
+  }
+}
+/** @internal */
+export class Key {
+  key;
+  error;
+  _tag = "Key";
+  constructor(key, error) {
+    this.key = key;
+    this.error = error;
+  }
+}
+/** @internal */
+export class Unexpected {
+  ast;
+  _tag = "Unexpected";
+  constructor(ast) {
+    this.ast = ast;
+  }
+}
+/** @internal */
+export class Transformation {
+  ast;
+  actual;
+  kind;
+  error;
+  _tag = "Transformation";
+  constructor(ast, actual, kind, error) {
+    this.ast = ast;
+    this.actual = actual;
+    this.kind = kind;
+    this.error = error;
+  }
+}
+/** @internal */
+export class Type {
+  ast;
+  actual;
+  _tag = "Type";
+  message;
+  constructor(ast, actual, message) {
+    this.ast = ast;
+    this.actual = actual;
+    this.message = Option.fromNullable(message);
+  }
+}
+/** @internal */
+export class Forbidden {
+  ast;
+  actual;
+  _tag = "Forbidden";
+  message;
+  constructor(ast, actual, message) {
+    this.ast = ast;
+    this.actual = actual;
+    this.message = Option.fromNullable(message);
+  }
+}
+/** @internal */
+export class Missing {
+  _tag = "Missing";
+}
+/** @internal */
+export const missing = /*#__PURE__*/new Missing();
+/** @internal */
+export class Member {
+  ast;
+  error;
+  _tag = "Member";
+  constructor(ast, error) {
+    this.ast = ast;
+    this.error = error;
+  }
+}
+/** @internal */
+export class Union {
+  ast;
+  actual;
+  errors;
+  _tag = "Union";
+  constructor(ast, actual, errors) {
+    this.ast = ast;
+    this.actual = actual;
+    this.errors = errors;
+  }
+}
+/** @internal */
+export const flatMap = /*#__PURE__*/dual(2, (self, f) => {
+  const s = self;
+  if (s["_tag"] === "Left") {
+    return s;
+  }
+  if (s["_tag"] === "Right") {
+    return f(s.right);
+  }
+  return Effect.flatMap(self, f);
+});
+/** @internal */
+export const map = /*#__PURE__*/dual(2, (self, f) => {
+  const s = self;
+  if (s["_tag"] === "Left") {
+    return s;
+  }
+  if (s["_tag"] === "Right") {
+    return Either.right(f(s.right));
+  }
+  return Effect.map(self, f);
+});
+/** @internal */
+export const mapError = /*#__PURE__*/dual(2, (self, f) => {
+  const s = self;
+  if (s["_tag"] === "Left") {
+    return Either.left(f(s.left));
+  }
+  if (s["_tag"] === "Right") {
+    return s;
+  }
+  return Effect.mapError(self, f);
+});
+/** @internal */
+export const eitherOrUndefined = self => {
+  const s = self;
+  if (s["_tag"] === "Left" || s["_tag"] === "Right") {
+    return s;
+  }
+};
+//# sourceMappingURL=parseResult.js.map
\ No newline at end of file
diff --git a/dist/esm/internal/parseResult.js.map b/dist/esm/internal/parseResult.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..e8a46bc3f9eefdd3b39df0e70fcf12eebc6242b2
--- /dev/null
+++ b/dist/esm/internal/parseResult.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"parseResult.js","names":["Effect","Either","dual","Option","Declaration","ast","actual","error","_tag","constructor","Refinement","kind","Tuple","errors","Index","index","TypeLiteral","Key","key","Unexpected","Transformation","Type","message","fromNullable","Forbidden","Missing","missing","Member","Union","flatMap","self","f","s","right","map","mapError","left","eitherOrUndefined"],"sources":["../../../src/internal/parseResult.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAO,KAAKA,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,KAAKC,MAAM,MAAM,eAAe;AAevC;AACA,OAAM,MAAOC,WAAW;EAEDC,GAAA;EAA+BC,MAAA;EAA0BC,KAAA;EADrEC,IAAI,GAAG,aAAa;EAC7BC,YAAqBJ,GAAoB,EAAWC,MAAe,EAAWC,KAAiB;IAA1E,KAAAF,GAAG,GAAHA,GAAG;IAA4B,KAAAC,MAAM,GAANA,MAAM;IAAoB,KAAAC,KAAK,GAALA,KAAK;EAAe;;AAGpG;AACA,OAAM,MAAOG,UAAU;EAGVL,GAAA;EACAC,MAAA;EACAK,IAAA;EACAJ,KAAA;EALFC,IAAI,GAAG,YAAY;EAC5BC,YACWJ,GAA4B,EAC5BC,MAAe,EACfK,IAA0B,EAC1BJ,KAAiB;IAHjB,KAAAF,GAAG,GAAHA,GAAG;IACH,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAK,IAAI,GAAJA,IAAI;IACJ,KAAAJ,KAAK,GAALA,KAAK;EACb;;AAGL;AACA,OAAM,MAAOK,KAAK;EAGLP,GAAA;EACAC,MAAA;EACAO,MAAA;EAJFL,IAAI,GAAG,WAAW;EAC3BC,YACWJ,GAAkB,EAClBC,MAAe,EACfO,MAAkD;IAFlD,KAAAR,GAAG,GAAHA,GAAG;IACH,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAO,MAAM,GAANA,MAAM;EACd;;AAGL;AACA,OAAM,MAAOC,KAAK;EAEKC,KAAA;EAAwBR,KAAA;EADpCC,IAAI,GAAG,OAAO;EACvBC,YAAqBM,KAAa,EAAWR,KAAwC;IAAhE,KAAAQ,KAAK,GAALA,KAAK;IAAmB,KAAAR,KAAK,GAALA,KAAK;EAAsC;;AAG1F;AACA,OAAM,MAAOS,WAAW;EAGXX,GAAA;EACAC,MAAA;EACAO,MAAA;EAJFL,IAAI,GAAG,aAAa;EAC7BC,YACWJ,GAAoB,EACpBC,MAAe,EACfO,MAAgD;IAFhD,KAAAR,GAAG,GAAHA,GAAG;IACH,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAO,MAAM,GAANA,MAAM;EACd;;AAGL;AACA,OAAM,MAAOI,GAAG;EAEOC,GAAA;EAA2BX,KAAA;EADvCC,IAAI,GAAG,KAAK;EACrBC,YAAqBS,GAAgB,EAAWX,KAAwC;IAAnE,KAAAW,GAAG,GAAHA,GAAG;IAAwB,KAAAX,KAAK,GAALA,KAAK;EAAsC;;AAG7F;AACA,OAAM,MAAOY,UAAU;EAEAd,GAAA;EADZG,IAAI,GAAG,YAAY;EAC5BC,YAAqBJ,GAAY;IAAZ,KAAAA,GAAG,GAAHA,GAAG;EAAY;;AAGtC;AACA,OAAM,MAAOe,cAAc;EAGdf,GAAA;EACAC,MAAA;EACAK,IAAA;EACAJ,KAAA;EALFC,IAAI,GAAG,gBAAgB;EAChCC,YACWJ,GAAuB,EACvBC,MAAe,EACfK,IAA2C,EAC3CJ,KAAiB;IAHjB,KAAAF,GAAG,GAAHA,GAAG;IACH,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAK,IAAI,GAAJA,IAAI;IACJ,KAAAJ,KAAK,GAALA,KAAK;EACb;;AAGL;AACA,OAAM,MAAOc,IAAI;EAGMhB,GAAA;EAAuBC,MAAA;EAFnCE,IAAI,GAAG,MAAM;EACbc,OAAO;EAChBb,YAAqBJ,GAAY,EAAWC,MAAe,EAAEgB,OAAgB;IAAxD,KAAAjB,GAAG,GAAHA,GAAG;IAAoB,KAAAC,MAAM,GAANA,MAAM;IAChD,IAAI,CAACgB,OAAO,GAAGnB,MAAM,CAACoB,YAAY,CAACD,OAAO,CAAC;EAC7C;;AAGF;AACA,OAAM,MAAOE,SAAS;EAGCnB,GAAA;EAAuBC,MAAA;EAFnCE,IAAI,GAAG,WAAW;EAClBc,OAAO;EAChBb,YAAqBJ,GAAY,EAAWC,MAAe,EAAEgB,OAAgB;IAAxD,KAAAjB,GAAG,GAAHA,GAAG;IAAoB,KAAAC,MAAM,GAANA,MAAM;IAChD,IAAI,CAACgB,OAAO,GAAGnB,MAAM,CAACoB,YAAY,CAACD,OAAO,CAAC;EAC7C;;AAGF;AACA,OAAM,MAAOG,OAAO;EACTjB,IAAI,GAAG,SAAS;;AAG3B;AACA,OAAO,MAAMkB,OAAO,gBAAY,IAAID,OAAO,EAAE;AAE7C;AACA,OAAM,MAAOE,MAAM;EAEItB,GAAA;EAAuBE,KAAA;EADnCC,IAAI,GAAG,QAAQ;EACxBC,YAAqBJ,GAAY,EAAWE,KAAiB;IAAxC,KAAAF,GAAG,GAAHA,GAAG;IAAoB,KAAAE,KAAK,GAALA,KAAK;EAAe;;AAGlE;AACA,OAAM,MAAOqB,KAAK;EAGLvB,GAAA;EACAC,MAAA;EACAO,MAAA;EAJFL,IAAI,GAAG,OAAO;EACvBC,YACWJ,GAAc,EACdC,MAAe,EACfO,MAAwE;IAFxE,KAAAR,GAAG,GAAHA,GAAG;IACH,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAO,MAAM,GAANA,MAAM;EACd;;AAGL;AACA,OAAO,MAAMgB,OAAO,gBAQhB3B,IAAI,CAAC,CAAC,EAAE,CACV4B,IAA4B,EAC5BC,CAAqC,KACD;EACpC,MAAMC,CAAC,GAAQF,IAAI;EACnB,IAAIE,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;IACxB,OAAOA,CAAC;EACV;EACA,IAAIA,CAAC,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;IACzB,OAAOD,CAAC,CAACC,CAAC,CAACC,KAAK,CAAC;EACnB;EACA,OAAOjC,MAAM,CAAC6B,OAAO,CAACC,IAAI,EAAEC,CAAC,CAAC;AAChC,CAAC,CAAC;AAEF;AACA,OAAO,MAAMG,GAAG,gBAGZhC,IAAI,CAAC,CAAC,EAAE,CAAa4B,IAA4B,EAAEC,CAAc,KAA4B;EAC/F,MAAMC,CAAC,GAAQF,IAAI;EACnB,IAAIE,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;IACxB,OAAOA,CAAC;EACV;EACA,IAAIA,CAAC,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;IACzB,OAAO/B,MAAM,CAACgC,KAAK,CAACF,CAAC,CAACC,CAAC,CAACC,KAAK,CAAC,CAAC;EACjC;EACA,OAAOjC,MAAM,CAACkC,GAAG,CAACJ,IAAI,EAAEC,CAAC,CAAC;AAC5B,CAAC,CAAC;AAEF;AACA,OAAO,MAAMI,QAAQ,gBAGjBjC,IAAI,CAAC,CAAC,EAAE,CAAc4B,IAA4B,EAAEC,CAAe,KAA6B;EAClG,MAAMC,CAAC,GAAQF,IAAI;EACnB,IAAIE,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;IACxB,OAAO/B,MAAM,CAACmC,IAAI,CAACL,CAAC,CAACC,CAAC,CAACI,IAAI,CAAC,CAAC;EAC/B;EACA,IAAIJ,CAAC,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;IACzB,OAAOA,CAAC;EACV;EACA,OAAOhC,MAAM,CAACmC,QAAQ,CAACL,IAAI,EAAEC,CAAC,CAAC;AACjC,CAAC,CAAC;AAEF;AACA,OAAO,MAAMM,iBAAiB,GAC5BP,IAA4B,IACO;EACnC,MAAME,CAAC,GAAQF,IAAI;EACnB,IAAIE,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,IAAIA,CAAC,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;IACjD,OAAOA,CAAC;EACV;AACF,CAAC"}
\ No newline at end of file
diff --git a/dist/esm/internal/schema.js b/dist/esm/internal/schema.js
index 4d8a4ed408051bdc57dd25dbac92dac9b930ac4d..35228c85d9d2db3ada358f6ca3bc1fce7913aa6b 100644
--- a/dist/esm/internal/schema.js
+++ b/dist/esm/internal/schema.js
@@ -1,11 +1,53 @@
-/**
- * @since 1.0.0
- */
 import { pipeArguments } from "effect/Pipeable";
+import * as AST from "../AST.js";
+import * as _hooks from "./hooks.js";
 /** @internal */
 export const TypeId = /*#__PURE__*/Symbol.for("@effect/schema/Schema");
 /** @internal */
-export const make = ast => new SchemaImpl(ast);
+export const PropertySignatureTypeId = /*#__PURE__*/Symbol.for("@effect/schema/PropertySignature");
+/** @internal */
+export const make = ast => new Schema(ast);
+/** @internal */
+export const toASTAnnotations = annotations => {
+  if (!annotations) {
+    return {};
+  }
+  const out = {};
+  // symbols are reserved for custom annotations
+  const custom = Object.getOwnPropertySymbols(annotations);
+  for (const sym of custom) {
+    out[sym] = annotations[sym];
+  }
+  // string keys are reserved as /schema namespace
+  if (annotations.typeId !== undefined) {
+    const typeId = annotations.typeId;
+    if (typeof typeId === "object") {
+      out[AST.TypeAnnotationId] = typeId.id;
+      out[typeId.id] = typeId.annotation;
+    } else {
+      out[AST.TypeAnnotationId] = typeId;
+    }
+  }
+  const move = (from, to) => {
+    if (annotations[from] !== undefined) {
+      out[to] = annotations[from];
+    }
+  };
+  move("message", AST.MessageAnnotationId);
+  move("identifier", AST.IdentifierAnnotationId);
+  move("title", AST.TitleAnnotationId);
+  move("description", AST.DescriptionAnnotationId);
+  move("examples", AST.ExamplesAnnotationId);
+  move("default", AST.DefaultAnnotationId);
+  move("documentation", AST.DocumentationAnnotationId);
+  move("jsonSchema", AST.JSONSchemaAnnotationId);
+  move("arbitrary", _hooks.ArbitraryHookId);
+  move("pretty", _hooks.PrettyHookId);
+  move("equivalence", _hooks.EquivalenceHookId);
+  move("concurrency", AST.ConcurrencyAnnotationId);
+  move("batching", AST.BatchingAnnotationId);
+  return out;
+};
 /** @internal */
 export const variance = {
   /* c8 ignore next */
@@ -15,7 +57,10 @@ export const variance = {
   /* c8 ignore next */
   _R: _ => _
 };
-class SchemaImpl {
+/** @internal */
+export const annotations = (ast, annotations) => AST.annotations(ast, toASTAnnotations(annotations));
+/** @internal */
+export class Schema {
   ast;
   [TypeId] = variance;
   constructor(ast) {
@@ -24,5 +69,11 @@ class SchemaImpl {
   pipe() {
     return pipeArguments(this, arguments);
   }
+  annotations(a) {
+    return new Schema(annotations(this.ast, a));
+  }
+  toString() {
+    return String(this.ast);
+  }
 }
 //# sourceMappingURL=schema.js.map
\ No newline at end of file
diff --git a/dist/esm/internal/schema.js.map b/dist/esm/internal/schema.js.map
index e61118a6a4509a49db6a0d2729d96cb82be83f9f..d9b087ba42d8f4b04c54348f8dbc588d8692c484 100644
--- a/dist/esm/internal/schema.js.map
+++ b/dist/esm/internal/schema.js.map
@@ -1 +1 @@
-{"version":3,"file":"schema.js","names":["pipeArguments","TypeId","Symbol","for","make","ast","SchemaImpl","variance","_A","_","_I","_R","constructor","pipe","arguments"],"sources":["../../../src/internal/schema.ts"],"sourcesContent":[null],"mappings":"AAAA;;;AAIA,SAASA,aAAa,QAAQ,iBAAiB;AAI/C;AACA,OAAO,MAAMC,MAAM,gBAAkBC,MAAM,CAACC,GAAG,CAAC,uBAAuB,CAAkB;AAEzF;AACA,OAAO,MAAMC,IAAI,GAAaC,GAAY,IAA6B,IAAIC,UAAU,CAACD,GAAG,CAAC;AAE1F;AACA,OAAO,MAAME,QAAQ,GAAG;EACtB;EACAC,EAAE,EAAGC,CAAM,IAAKA,CAAC;EACjB;EACAC,EAAE,EAAGD,CAAM,IAAKA,CAAC;EACjB;EACAE,EAAE,EAAGF,CAAQ,IAAKA;CACnB;AAED,MAAMH,UAAU;EAEOD,GAAA;EADZ,CAACJ,MAAM,IAAIM,QAAQ;EAC5BK,YAAqBP,GAAY;IAAZ,KAAAA,GAAG,GAAHA,GAAG;EAAY;EACpCQ,IAAIA,CAAA;IACF,OAAOb,aAAa,CAAC,IAAI,EAAEc,SAAS,CAAC;EACvC"}
\ No newline at end of file
+{"version":3,"file":"schema.js","names":["pipeArguments","AST","_hooks","TypeId","Symbol","for","PropertySignatureTypeId","make","ast","Schema","toASTAnnotations","annotations","out","custom","Object","getOwnPropertySymbols","sym","typeId","undefined","TypeAnnotationId","id","annotation","move","from","to","MessageAnnotationId","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","DocumentationAnnotationId","JSONSchemaAnnotationId","ArbitraryHookId","PrettyHookId","EquivalenceHookId","ConcurrencyAnnotationId","BatchingAnnotationId","variance","_A","_","_I","_R","constructor","pipe","arguments","a","toString","String"],"sources":["../../../src/internal/schema.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/internal/util.js b/dist/esm/internal/util.js
new file mode 100644
index 0000000000000000000000000000000000000000..a8a89251bf7575118fc386c9e519c31076c8592e
--- /dev/null
+++ b/dist/esm/internal/util.js
@@ -0,0 +1,51 @@
+import * as Predicate from "effect/Predicate";
+/** @internal */
+export const getKeysForIndexSignature = (input, parameter) => {
+  switch (parameter._tag) {
+    case "StringKeyword":
+    case "TemplateLiteral":
+      return Object.keys(input);
+    case "SymbolKeyword":
+      return Object.getOwnPropertySymbols(input);
+    case "Refinement":
+      return getKeysForIndexSignature(input, parameter.from);
+  }
+};
+/** @internal */
+export const ownKeys = o => Object.keys(o).concat(Object.getOwnPropertySymbols(o));
+/** @internal */
+export const memoizeThunk = f => {
+  let done = false;
+  let a;
+  return () => {
+    if (done) {
+      return a;
+    }
+    a = f();
+    done = true;
+    return a;
+  };
+};
+/** @internal */
+export const formatUnknown = u => {
+  if (Predicate.isString(u)) {
+    return JSON.stringify(u);
+  } else if (Predicate.isNumber(u) || u == null || Predicate.isBoolean(u) || Predicate.isSymbol(u) || Predicate.isDate(u)) {
+    return String(u);
+  } else if (Predicate.isBigInt(u)) {
+    return String(u) + "n";
+  } else if (!Array.isArray(u) && Predicate.hasProperty(u, "toString") && Predicate.isFunction(u["toString"]) && u["toString"] !== Object.prototype.toString) {
+    return u["toString"]();
+  }
+  try {
+    JSON.stringify(u);
+    if (Array.isArray(u)) {
+      return `[${u.map(formatUnknown).join(",")}]`;
+    } else {
+      return `{${ownKeys(u).map(k => `${Predicate.isString(k) ? JSON.stringify(k) : String(k)}:${formatUnknown(u[k])}`).join(",")}}`;
+    }
+  } catch (e) {
+    return String(u);
+  }
+};
+//# sourceMappingURL=util.js.map
\ No newline at end of file
diff --git a/dist/esm/internal/util.js.map b/dist/esm/internal/util.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..64cbbaa1d7bcaa2a868a6bb984a6d11054afda06
--- /dev/null
+++ b/dist/esm/internal/util.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"util.js","names":["Predicate","getKeysForIndexSignature","input","parameter","_tag","Object","keys","getOwnPropertySymbols","from","ownKeys","o","concat","memoizeThunk","f","done","a","formatUnknown","u","isString","JSON","stringify","isNumber","isBoolean","isSymbol","isDate","String","isBigInt","Array","isArray","hasProperty","isFunction","prototype","toString","map","join","k","e"],"sources":["../../../src/internal/util.ts"],"sourcesContent":[null],"mappings":"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"}
\ No newline at end of file
diff --git a/package.json b/package.json
index 61518a52fb685a6f7fbc87081caf992602fd0067..35c54bb1b9e4b3eae12e319c5b3d7b80aa703076 100644
--- a/package.json
+++ b/package.json
@@ -10,8 +10,8 @@
   },
   "sideEffects": [],
   "peerDependencies": {
-    "fast-check": "^3.13.2",
-    "effect": "^2.4.3"
+    "effect": "^2.4.3",
+    "fast-check": "^3.13.2"
   },
   "main": "./dist/cjs/index.js",
   "module": "./dist/esm/index.js",
@@ -43,11 +43,6 @@
       "import": "./dist/esm/Equivalence.js",
       "default": "./dist/cjs/Equivalence.js"
     },
-    "./Format": {
-      "types": "./dist/dts/Format.d.ts",
-      "import": "./dist/esm/Format.js",
-      "default": "./dist/cjs/Format.js"
-    },
     "./JSONSchema": {
       "types": "./dist/dts/JSONSchema.d.ts",
       "import": "./dist/esm/JSONSchema.js",
@@ -98,9 +93,6 @@
       "Equivalence": [
         "./dist/dts/Equivalence.d.ts"
       ],
-      "Format": [
-        "./dist/dts/Format.d.ts"
-      ],
       "JSONSchema": [
         "./dist/dts/JSONSchema.d.ts"
       ],
diff --git a/src/AST.ts b/src/AST.ts
index 60d699e4669cf1e7ab71f1d0052b008a2ddecdab..ab90e32680532c00a28447ffa1b5b7afc0d5e9be 100644
--- a/src/AST.ts
+++ b/src/AST.ts
@@ -3,7 +3,7 @@
  */
 
 import type { Effect } from "effect/Effect"
-import { dual, identity, pipe } from "effect/Function"
+import { dual, identity } from "effect/Function"
 import { globalValue } from "effect/GlobalValue"
 import * as Hash from "effect/Hash"
 import * as Number from "effect/Number"
@@ -12,9 +12,39 @@ import * as Order from "effect/Order"
 import * as Predicate from "effect/Predicate"
 import * as ReadonlyArray from "effect/ReadonlyArray"
 import type { Concurrency } from "effect/Types"
-import * as Internal from "./internal/ast.js"
+import * as _util from "./internal/util.js"
 import type { ParseIssue } from "./ParseResult.js"
 
+/**
+ * @category model
+ * @since 1.0.0
+ */
+export type AST =
+  | Declaration
+  | Literal
+  | UniqueSymbol
+  | UndefinedKeyword
+  | VoidKeyword
+  | NeverKeyword
+  | UnknownKeyword
+  | AnyKeyword
+  | StringKeyword
+  | NumberKeyword
+  | BooleanKeyword
+  | BigIntKeyword
+  | SymbolKeyword
+  | ObjectKeyword
+  | Enums
+  | TemplateLiteral
+  // possible transformations
+  | Refinement
+  | TupleType
+  | TypeLiteral
+  | Union
+  | Suspend
+  // transformations
+  | Transformation
+
 // -------------------------------------------------------------------------------------
 // annotations
 // -------------------------------------------------------------------------------------
@@ -23,7 +53,7 @@ import type { ParseIssue } from "./ParseResult.js"
  * @category annotations
  * @since 1.0.0
  */
-export type BrandAnnotation = ReadonlyArray<string>
+export type BrandAnnotation = ReadonlyArray.NonEmptyReadonlyArray<string | symbol>
 
 /**
  * @category annotations
@@ -47,7 +77,7 @@ export const TypeAnnotationId = Symbol.for("@effect/schema/annotation/Type")
  * @category annotations
  * @since 1.0.0
  */
-export type MessageAnnotation = (issue: ParseIssue) => string
+export type MessageAnnotation = (issue: ParseIssue) => string | Effect<string>
 
 /**
  * @category annotations
@@ -95,7 +125,7 @@ export const DescriptionAnnotationId = Symbol.for("@effect/schema/annotation/Des
  * @category annotations
  * @since 1.0.0
  */
-export type ExamplesAnnotation = ReadonlyArray<unknown>
+export type ExamplesAnnotation<A> = ReadonlyArray.NonEmptyReadonlyArray<A>
 
 /**
  * @category annotations
@@ -107,7 +137,7 @@ export const ExamplesAnnotationId = Symbol.for("@effect/schema/annotation/Exampl
  * @category annotations
  * @since 1.0.0
  */
-export type DefaultAnnotation = unknown
+export type DefaultAnnotation<A> = A
 
 /**
  * @category annotations
@@ -163,6 +193,26 @@ export type BatchingAnnotation = boolean | "inherit" | undefined
  */
 export const BatchingAnnotationId = Symbol.for("@effect/schema/annotation/Batching")
 
+/** @internal */
+export const SurrogateAnnotationId = Symbol.for("@effect/schema/annotation/Surrogate")
+
+/** @internal */
+export const JSONIdentifierAnnotationId = Symbol.for("@effect/schema/annotation/JSONIdentifier")
+
+/**
+ * Used by:
+ *
+ * - AST.keyof
+ * - AST.getPropertyKeyIndexedAccess
+ * - AST.getPropertyKeys
+ * - AST.getPropertySignatures
+ * - AST.getWeight
+ * - Parser.getLiterals
+ *
+ * @internal
+ */
+export type SurrogateAnnotation = AST
+
 /**
  * @category annotations
  * @since 1.0.0
@@ -198,147 +248,119 @@ export const getAnnotation: {
  * @category annotations
  * @since 1.0.0
  */
-export const getMessageAnnotation = getAnnotation<MessageAnnotation>(
-  MessageAnnotationId
-)
+export const getBrandAnnotation = getAnnotation<BrandAnnotation>(BrandAnnotationId)
 
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const getTitleAnnotation = getAnnotation<TitleAnnotation>(
-  TitleAnnotationId
-)
+export const getMessageAnnotation = getAnnotation<MessageAnnotation>(MessageAnnotationId)
 
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const getIdentifierAnnotation = getAnnotation<IdentifierAnnotation>(
-  IdentifierAnnotationId
-)
+export const getTitleAnnotation = getAnnotation<TitleAnnotation>(TitleAnnotationId)
 
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const getDescriptionAnnotation = getAnnotation<DescriptionAnnotation>(
-  DescriptionAnnotationId
-)
+export const getIdentifierAnnotation = getAnnotation<IdentifierAnnotation>(IdentifierAnnotationId)
 
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const getExamplesAnnotation = getAnnotation<ExamplesAnnotation>(
-  ExamplesAnnotationId
-)
+export const getDescriptionAnnotation = getAnnotation<DescriptionAnnotation>(DescriptionAnnotationId)
 
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const getDefaultAnnotation = getAnnotation<DefaultAnnotation>(
-  DefaultAnnotationId
-)
+export const getExamplesAnnotation = getAnnotation<ExamplesAnnotation<unknown>>(ExamplesAnnotationId)
 
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const getJSONSchemaAnnotation = getAnnotation<JSONSchemaAnnotation>(
-  JSONSchemaAnnotationId
-)
+export const getDefaultAnnotation = getAnnotation<DefaultAnnotation<unknown>>(DefaultAnnotationId)
 
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const getDocumentationAnnotation = getAnnotation<DocumentationAnnotation>(
-  DocumentationAnnotationId
-)
+export const getJSONSchemaAnnotation = getAnnotation<JSONSchemaAnnotation>(JSONSchemaAnnotationId)
 
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const getConcurrencyAnnotation = getAnnotation<ConcurrencyAnnotation>(
-  ConcurrencyAnnotationId
-)
+export const getDocumentationAnnotation = getAnnotation<DocumentationAnnotation>(DocumentationAnnotationId)
 
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const getBatchingAnnotation = getAnnotation<BatchingAnnotation>(
-  BatchingAnnotationId
-)
-
-// -------------------------------------------------------------------------------------
-// model
-// -------------------------------------------------------------------------------------
+export const getConcurrencyAnnotation = getAnnotation<ConcurrencyAnnotation>(ConcurrencyAnnotationId)
 
 /**
- * @category model
+ * @category annotations
  * @since 1.0.0
  */
-export type AST =
-  | Declaration
-  | Literal
-  | UniqueSymbol
-  | UndefinedKeyword
-  | VoidKeyword
-  | NeverKeyword
-  | UnknownKeyword
-  | AnyKeyword
-  | StringKeyword
-  | NumberKeyword
-  | BooleanKeyword
-  | BigIntKeyword
-  | SymbolKeyword
-  | ObjectKeyword
-  | Enums
-  | TemplateLiteral
-  // possible transformations
-  | Refinement<AST>
-  | Tuple
-  | TypeLiteral
-  | Union
-  | Suspend
-  // transformations
-  | Transform
+export const getBatchingAnnotation = getAnnotation<BatchingAnnotation>(BatchingAnnotationId)
+
+/** @internal */
+export const getSurrogateSchemaAnnotation = getAnnotation<SurrogateAnnotation>(SurrogateAnnotationId)
+
+/** @internal */
+export const getJSONIdentifierAnnotation = getAnnotation<IdentifierAnnotation>(JSONIdentifierAnnotationId)
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface Declaration extends Annotated {
-  readonly _tag: "Declaration"
-  readonly typeParameters: ReadonlyArray<AST>
-  readonly decodeUnknown: (
-    ...typeParameters: ReadonlyArray<AST>
-  ) => (input: unknown, options: ParseOptions, self: Declaration) => Effect<any, ParseIssue, any>
-  readonly encodeUnknown: (
-    ...typeParameters: ReadonlyArray<AST>
-  ) => (input: unknown, options: ParseOptions, self: Declaration) => Effect<any, ParseIssue, any>
+export class Declaration implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "Declaration"
+  constructor(
+    readonly typeParameters: ReadonlyArray<AST>,
+    readonly decodeUnknown: (
+      ...typeParameters: ReadonlyArray<AST>
+    ) => (input: unknown, options: ParseOptions, self: Declaration) => Effect<any, ParseIssue, any>,
+    readonly encodeUnknown: (
+      ...typeParameters: ReadonlyArray<AST>
+    ) => (input: unknown, options: ParseOptions, self: Declaration) => Effect<any, ParseIssue, any>,
+    readonly annotations: Annotations = {}
+  ) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => "<declaration schema>")
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      typeParameters: this.typeParameters.map((ast) => ast.toJSON()),
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const createDeclaration = (
-  typeParameters: ReadonlyArray<AST>,
-  decodeUnknown: Declaration["decodeUnknown"],
-  encodeUnknown: Declaration["encodeUnknown"],
-  annotations: Annotations = {}
-): Declaration => ({ _tag: "Declaration", typeParameters, decodeUnknown, encodeUnknown, annotations })
+const createASTGuard = <T extends AST["_tag"]>(tag: T) => (ast: AST): ast is Extract<AST, { _tag: T }> =>
+  ast._tag === tag
 
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isDeclaration = (ast: AST): ast is Declaration => ast._tag === "Declaration"
+export const isDeclaration: (ast: AST) => ast is Declaration = createASTGuard("Declaration")
 
 /**
  * @category model
@@ -350,28 +372,38 @@ export type LiteralValue = string | number | boolean | null | bigint
  * @category model
  * @since 1.0.0
  */
-export interface Literal extends Annotated {
-  readonly _tag: "Literal"
-  readonly literal: LiteralValue
+export class Literal implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "Literal"
+  constructor(readonly literal: LiteralValue, readonly annotations: Annotations = {}) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => _util.formatUnknown(this.literal))
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      literal: Predicate.isBigInt(this.literal) ? String(this.literal) : this.literal,
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const createLiteral = (
-  literal: LiteralValue,
-  annotations: Annotations = {}
-): Literal => ({ _tag: "Literal", literal, annotations })
-
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isLiteral = (ast: AST): ast is Literal => ast._tag === "Literal"
+export const isLiteral: (ast: AST) => ast is Literal = createASTGuard("Literal")
 
 /** @internal */
-export const _null = createLiteral(null, {
+export const _null = new Literal(null, {
   [IdentifierAnnotationId]: "null"
 })
 
@@ -379,434 +411,739 @@ export const _null = createLiteral(null, {
  * @category model
  * @since 1.0.0
  */
-export interface UniqueSymbol extends Annotated {
-  readonly _tag: "UniqueSymbol"
-  readonly symbol: symbol
+export class UniqueSymbol implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "UniqueSymbol"
+  constructor(readonly symbol: symbol, readonly annotations: Annotations = {}) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => _util.formatUnknown(this.symbol))
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      symbol: String(this.symbol),
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const createUniqueSymbol = (
-  symbol: symbol,
-  annotations: Annotations = {}
-): UniqueSymbol => ({ _tag: "UniqueSymbol", symbol, annotations })
-
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isUniqueSymbol = (ast: AST): ast is UniqueSymbol => ast._tag === "UniqueSymbol"
+export const isUniqueSymbol: (ast: AST) => ast is UniqueSymbol = createASTGuard("UniqueSymbol")
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface UndefinedKeyword extends Annotated {
-  readonly _tag: "UndefinedKeyword"
+export class UndefinedKeyword implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "UndefinedKeyword"
+  constructor(readonly annotations: Annotations = {}) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return formatKeyword(this, verbose)
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const undefinedKeyword: UndefinedKeyword = {
-  _tag: "UndefinedKeyword",
-  annotations: {
-    [TitleAnnotationId]: "undefined"
-  }
-}
+export const undefinedKeyword: UndefinedKeyword = new UndefinedKeyword({
+  [TitleAnnotationId]: "undefined"
+})
 
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isUndefinedKeyword = (ast: AST): ast is UndefinedKeyword => ast._tag === "UndefinedKeyword"
+export const isUndefinedKeyword: (ast: AST) => ast is UndefinedKeyword = createASTGuard("UndefinedKeyword")
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface VoidKeyword extends Annotated {
-  readonly _tag: "VoidKeyword"
+export class VoidKeyword implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "VoidKeyword"
+  constructor(readonly annotations: Annotations = {}) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return formatKeyword(this, verbose)
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const voidKeyword: VoidKeyword = {
-  _tag: "VoidKeyword",
-  annotations: {
-    [TitleAnnotationId]: "void"
-  }
-}
+export const voidKeyword: VoidKeyword = new VoidKeyword({
+  [TitleAnnotationId]: "void"
+})
 
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isVoidKeyword = (ast: AST): ast is VoidKeyword => ast._tag === "VoidKeyword"
+export const isVoidKeyword: (ast: AST) => ast is VoidKeyword = createASTGuard("VoidKeyword")
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface NeverKeyword extends Annotated {
-  readonly _tag: "NeverKeyword"
+export class NeverKeyword implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "NeverKeyword"
+  constructor(readonly annotations: Annotations = {}) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return formatKeyword(this, verbose)
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const neverKeyword: NeverKeyword = {
-  _tag: "NeverKeyword",
-  annotations: {
-    [TitleAnnotationId]: "never"
-  }
-}
+export const neverKeyword: NeverKeyword = new NeverKeyword({
+  [TitleAnnotationId]: "never"
+})
 
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isNeverKeyword = (ast: AST): ast is NeverKeyword => ast._tag === "NeverKeyword"
+export const isNeverKeyword: (ast: AST) => ast is NeverKeyword = createASTGuard("NeverKeyword")
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface UnknownKeyword extends Annotated {
-  readonly _tag: "UnknownKeyword"
+export class UnknownKeyword implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "UnknownKeyword"
+  constructor(readonly annotations: Annotations = {}) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return formatKeyword(this, verbose)
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const unknownKeyword: UnknownKeyword = {
-  _tag: "UnknownKeyword",
-  annotations: {
-    [TitleAnnotationId]: "unknown"
-  }
-}
+export const unknownKeyword: UnknownKeyword = new UnknownKeyword({
+  [TitleAnnotationId]: "unknown"
+})
 
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isUnknownKeyword = (ast: AST): ast is UnknownKeyword => ast._tag === "UnknownKeyword"
+export const isUnknownKeyword: (ast: AST) => ast is UnknownKeyword = createASTGuard("UnknownKeyword")
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface AnyKeyword extends Annotated {
-  readonly _tag: "AnyKeyword"
+export class AnyKeyword implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "AnyKeyword"
+  constructor(readonly annotations: Annotations = {}) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return formatKeyword(this, verbose)
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const anyKeyword: AnyKeyword = {
-  _tag: "AnyKeyword",
-  annotations: {
-    [TitleAnnotationId]: "any"
-  }
-}
+export const anyKeyword: AnyKeyword = new AnyKeyword({
+  [TitleAnnotationId]: "any"
+})
 
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isAnyKeyword = (ast: AST): ast is AnyKeyword => ast._tag === "AnyKeyword"
+export const isAnyKeyword: (ast: AST) => ast is AnyKeyword = createASTGuard("AnyKeyword")
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface StringKeyword extends Annotated {
-  readonly _tag: "StringKeyword"
+export class StringKeyword implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "StringKeyword"
+  constructor(readonly annotations: Annotations = {}) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return formatKeyword(this, verbose)
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const stringKeyword: StringKeyword = {
-  _tag: "StringKeyword",
-  annotations: {
-    [TitleAnnotationId]: "string",
-    [DescriptionAnnotationId]: "a string"
-  }
-}
+export const stringKeyword: StringKeyword = new StringKeyword({
+  [TitleAnnotationId]: "string",
+  [DescriptionAnnotationId]: "a string"
+})
 
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isStringKeyword = (ast: AST): ast is StringKeyword => ast._tag === "StringKeyword"
+export const isStringKeyword: (ast: AST) => ast is StringKeyword = createASTGuard("StringKeyword")
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface NumberKeyword extends Annotated {
-  readonly _tag: "NumberKeyword"
+export class NumberKeyword implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "NumberKeyword"
+  constructor(readonly annotations: Annotations = {}) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return formatKeyword(this, verbose)
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const numberKeyword: NumberKeyword = {
-  _tag: "NumberKeyword",
-  annotations: {
-    [TitleAnnotationId]: "number",
-    [DescriptionAnnotationId]: "a number"
-  }
-}
+export const numberKeyword: NumberKeyword = new NumberKeyword({
+  [TitleAnnotationId]: "number",
+  [DescriptionAnnotationId]: "a number"
+})
 
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isNumberKeyword = (ast: AST): ast is NumberKeyword => ast._tag === "NumberKeyword"
+export const isNumberKeyword: (ast: AST) => ast is NumberKeyword = createASTGuard("NumberKeyword")
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface BooleanKeyword extends Annotated {
-  readonly _tag: "BooleanKeyword"
+export class BooleanKeyword implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "BooleanKeyword"
+  constructor(readonly annotations: Annotations = {}) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return formatKeyword(this, verbose)
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const booleanKeyword: BooleanKeyword = {
-  _tag: "BooleanKeyword",
-  annotations: {
-    [TitleAnnotationId]: "boolean",
-    [DescriptionAnnotationId]: "a boolean"
-  }
-}
+export const booleanKeyword: BooleanKeyword = new BooleanKeyword({
+  [TitleAnnotationId]: "boolean",
+  [DescriptionAnnotationId]: "a boolean"
+})
 
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isBooleanKeyword = (ast: AST): ast is BooleanKeyword => ast._tag === "BooleanKeyword"
+export const isBooleanKeyword: (ast: AST) => ast is BooleanKeyword = createASTGuard("BooleanKeyword")
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface BigIntKeyword extends Annotated {
-  readonly _tag: "BigIntKeyword"
+export class BigIntKeyword implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "BigIntKeyword"
+  constructor(readonly annotations: Annotations = {}) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return formatKeyword(this, verbose)
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const bigIntKeyword: BigIntKeyword = {
-  _tag: "BigIntKeyword",
-  annotations: {
-    [TitleAnnotationId]: "bigint",
-    [DescriptionAnnotationId]: "a bigint"
-  }
-}
+export const bigIntKeyword: BigIntKeyword = new BigIntKeyword({
+  [TitleAnnotationId]: "bigint",
+  [DescriptionAnnotationId]: "a bigint"
+})
 
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isBigIntKeyword = (ast: AST): ast is BigIntKeyword => ast._tag === "BigIntKeyword"
+export const isBigIntKeyword: (ast: AST) => ast is BigIntKeyword = createASTGuard("BigIntKeyword")
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface SymbolKeyword extends Annotated {
-  readonly _tag: "SymbolKeyword"
+export class SymbolKeyword implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "SymbolKeyword"
+  constructor(readonly annotations: Annotations = {}) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return formatKeyword(this, verbose)
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const symbolKeyword: SymbolKeyword = {
-  _tag: "SymbolKeyword",
-  annotations: {
-    [TitleAnnotationId]: "symbol",
-    [DescriptionAnnotationId]: "a symbol"
-  }
-}
+export const symbolKeyword: SymbolKeyword = new SymbolKeyword({
+  [TitleAnnotationId]: "symbol",
+  [DescriptionAnnotationId]: "a symbol"
+})
 
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isSymbolKeyword = (ast: AST): ast is SymbolKeyword => ast._tag === "SymbolKeyword"
+export const isSymbolKeyword: (ast: AST) => ast is SymbolKeyword = createASTGuard("SymbolKeyword")
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface ObjectKeyword extends Annotated {
-  readonly _tag: "ObjectKeyword"
+export class ObjectKeyword implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "ObjectKeyword"
+  constructor(readonly annotations: Annotations = {}) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return formatKeyword(this, verbose)
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const objectKeyword: ObjectKeyword = {
-  _tag: "ObjectKeyword",
-  annotations: {
-    [IdentifierAnnotationId]: "object",
-    [TitleAnnotationId]: "object",
-    [DescriptionAnnotationId]: "an object in the TypeScript meaning, i.e. the `object` type"
-  }
-}
+export const objectKeyword: ObjectKeyword = new ObjectKeyword({
+  [IdentifierAnnotationId]: "object",
+  [TitleAnnotationId]: "object",
+  [DescriptionAnnotationId]: "an object in the TypeScript meaning, i.e. the `object` type"
+})
 
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isObjectKeyword = (ast: AST): ast is ObjectKeyword => ast._tag === "ObjectKeyword"
+export const isObjectKeyword: (ast: AST) => ast is ObjectKeyword = createASTGuard("ObjectKeyword")
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface Enums extends Annotated {
-  readonly _tag: "Enums"
-  readonly enums: ReadonlyArray<readonly [string, string | number]>
+export class Enums implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "Enums"
+  constructor(
+    readonly enums: ReadonlyArray<readonly [string, string | number]>,
+    readonly annotations: Annotations = {}
+  ) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return Option.getOrElse(
+      getExpected(this, verbose),
+      () => `<enum ${this.enums.length} value(s): ${this.enums.map((_, value) => JSON.stringify(value)).join(" | ")}>`
+    )
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      enums: this.enums,
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const createEnums = (
-  enums: ReadonlyArray<readonly [string, string | number]>,
-  annotations: Annotations = {}
-): Enums => ({ _tag: "Enums", enums, annotations })
-
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isEnums = (ast: AST): ast is Enums => ast._tag === "Enums"
+export const isEnums: (ast: AST) => ast is Enums = createASTGuard("Enums")
 
 /**
+ * @category model
  * @since 1.0.0
  */
-export interface TemplateLiteralSpan {
-  readonly type: StringKeyword | NumberKeyword
-  readonly literal: string
+export class TemplateLiteralSpan {
+  constructor(readonly type: StringKeyword | NumberKeyword, readonly literal: string) {}
+  /**
+   * @since 1.0.0
+   */
+  toString() {
+    switch (this.type._tag) {
+      case "StringKeyword":
+        return "${string}"
+      case "NumberKeyword":
+        return "${number}"
+    }
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      type: this.type.toJSON(),
+      literal: this.literal
+    }
+  }
 }
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface TemplateLiteral extends Annotated {
-  readonly _tag: "TemplateLiteral"
-  readonly head: string
-  readonly spans: ReadonlyArray.NonEmptyReadonlyArray<TemplateLiteralSpan>
+export class TemplateLiteral implements Annotated {
+  static make = (
+    head: string,
+    spans: ReadonlyArray<TemplateLiteralSpan>,
+    annotations: Annotations = {}
+  ): TemplateLiteral | Literal =>
+    ReadonlyArray.isNonEmptyReadonlyArray(spans) ?
+      new TemplateLiteral(head, spans, annotations) :
+      new Literal(head)
+
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "TemplateLiteral"
+  private constructor(
+    readonly head: string,
+    readonly spans: ReadonlyArray.NonEmptyReadonlyArray<TemplateLiteralSpan>,
+    readonly annotations: Annotations = {}
+  ) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => formatTemplateLiteral(this))
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      head: this.head,
+      spans: this.spans.map((span) => span.toJSON()),
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const createTemplateLiteral = (
-  head: string,
-  spans: ReadonlyArray<TemplateLiteralSpan>,
-  annotations: Annotations = {}
-): TemplateLiteral | Literal =>
-  ReadonlyArray.isNonEmptyReadonlyArray(spans) ?
-    { _tag: "TemplateLiteral", head, spans, annotations } :
-    createLiteral(head)
+const formatTemplateLiteral = (ast: TemplateLiteral): string =>
+  "`" + ast.head + ast.spans.map((span) => String(span) + span.literal).join("") +
+  "`"
 
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isTemplateLiteral = (ast: AST): ast is TemplateLiteral => ast._tag === "TemplateLiteral"
+export const isTemplateLiteral: (ast: AST) => ast is TemplateLiteral = createASTGuard("TemplateLiteral")
 
 /**
+ * @category model
  * @since 1.0.0
  */
-export interface Element {
-  readonly type: AST
-  readonly isOptional: boolean
+export class Element {
+  constructor(readonly type: AST, readonly isOptional: boolean) {}
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      type: this.type.toJSON(),
+      isOptional: this.isOptional
+    }
+  }
 }
 
-/**
- * @since 1.0.0
- */
-export const createElement = (
-  type: AST,
-  isOptional: boolean
-): Element => ({ type, isOptional })
-
 /**
  * @category model
  * @since 1.0.0
  */
-export interface Tuple extends Annotated {
-  readonly _tag: "Tuple"
-  readonly elements: ReadonlyArray<Element>
-  readonly rest: Option.Option<ReadonlyArray.NonEmptyReadonlyArray<AST>>
-  readonly isReadonly: boolean
+export class TupleType implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "TupleType"
+  constructor(
+    readonly elements: ReadonlyArray<Element>,
+    readonly rest: ReadonlyArray<AST>,
+    readonly isReadonly: boolean,
+    readonly annotations: Annotations = {}
+  ) {
+    let hasOptionalElement = false
+    let hasIllegalRequiredElement = false
+    for (const e of elements) {
+      if (e.isOptional) {
+        hasOptionalElement = true
+      } else if (hasOptionalElement) {
+        hasIllegalRequiredElement = true
+        break
+      }
+    }
+    if (hasIllegalRequiredElement || (hasOptionalElement && rest.length > 1)) {
+      throw new Error("A required element cannot follow an optional element. ts(1257)")
+    }
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => formatTuple(this))
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      elements: this.elements.map((e) => e.toJSON()),
+      rest: this.rest.map((ast) => ast.toJSON()),
+      isReadonly: this.isReadonly,
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const createTuple = (
-  elements: ReadonlyArray<Element>,
-  rest: Option.Option<ReadonlyArray.NonEmptyReadonlyArray<AST>>,
-  isReadonly: boolean,
-  annotations: Annotations = {}
-): Tuple => ({ _tag: "Tuple", elements, rest, isReadonly, annotations })
+const formatTuple = (ast: TupleType): string => {
+  const formattedElements = ast.elements.map((element) => String(element.type) + (element.isOptional ? "?" : ""))
+    .join(", ")
+  return ReadonlyArray.matchLeft(ast.rest, {
+    onEmpty: () => `readonly [${formattedElements}]`,
+    onNonEmpty: (head, tail) => {
+      const formattedHead = String(head)
+      const wrappedHead = formattedHead.includes(" | ") ? `(${formattedHead})` : formattedHead
+
+      if (tail.length > 0) {
+        const formattedTail = tail.map(String).join(", ")
+        if (ast.elements.length > 0) {
+          return `readonly [${formattedElements}, ...${wrappedHead}[], ${formattedTail}]`
+        } else {
+          return `readonly [...${wrappedHead}[], ${formattedTail}]`
+        }
+      } else {
+        if (ast.elements.length > 0) {
+          return `readonly [${formattedElements}, ...${wrappedHead}[]]`
+        } else {
+          return `ReadonlyArray<${formattedHead}>`
+        }
+      }
+    }
+  })
+}
 
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isTuple = (ast: AST): ast is Tuple => ast._tag === "Tuple"
+export const isTupleType: (ast: AST) => ast is TupleType = createASTGuard("TupleType")
 
 /**
+ * @category model
  * @since 1.0.0
  */
-export interface PropertySignature extends Annotated {
-  readonly name: PropertyKey
-  readonly type: AST
-  readonly isOptional: boolean
-  readonly isReadonly: boolean
+export class PropertySignature implements Annotated {
+  constructor(
+    readonly name: PropertyKey,
+    readonly type: AST,
+    readonly isOptional: boolean,
+    readonly isReadonly: boolean,
+    readonly annotations: Annotations = {}
+  ) {}
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      name: String(this.name),
+      type: this.type.toJSON(),
+      isOptional: this.isOptional,
+      isReadonly: this.isReadonly,
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
-/**
- * @since 1.0.0
- */
-export const createPropertySignature = (
-  name: PropertyKey,
-  type: AST,
-  isOptional: boolean,
-  isReadonly: boolean,
-  annotations: Annotations = {}
-): PropertySignature => ({ name, type, isOptional, isReadonly, annotations })
-
 /**
  * @since 1.0.0
  */
@@ -823,88 +1160,143 @@ export const isParameter = (ast: AST): ast is Parameter => {
       return true
     case "Refinement":
       return isParameter(ast.from)
-    default:
-      return false
   }
+  return false
 }
 
 /**
+ * @category model
  * @since 1.0.0
  */
-export interface IndexSignature {
+export class IndexSignature {
+  /**
+   * @since 1.0.0
+   */
   readonly parameter: Parameter
-  readonly type: AST
-  readonly isReadonly: boolean
-}
-
-/**
- * @since 1.0.0
- */
-export const createIndexSignature = (
-  parameter: AST,
-  type: AST,
-  isReadonly: boolean
-): IndexSignature => {
-  if (isParameter(parameter)) {
-    return ({ parameter, type, isReadonly })
+  constructor(
+    parameter: AST,
+    readonly type: AST,
+    readonly isReadonly: boolean
+  ) {
+    if (isParameter(parameter)) {
+      this.parameter = parameter
+    } else {
+      throw new Error(
+        "An index signature parameter type must be `string`, `symbol`, a template literal type or a refinement of the previous types"
+      )
+    }
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      parameter: this.parameter.toJSON(),
+      type: this.type.toJSON(),
+      isReadonly: this.isReadonly
+    }
   }
-  throw new Error(
-    "An index signature parameter type must be 'string', 'symbol', a template literal type or a refinement of the previous types"
-  )
 }
 
+/** @internal */
+export const getDuplicatePropertySignatureErrorMessage = (name: PropertyKey): string =>
+  `Duplicate property signature ${_util.formatUnknown(name)}`
+
+const getDuplicateIndexSignatureErrorMessage = (name: string): string =>
+  `Duplicate index signature for type \`${name}\``
+
 /**
  * @category model
  * @since 1.0.0
  */
-export interface TypeLiteral extends Annotated {
-  readonly _tag: "TypeLiteral"
+export class TypeLiteral implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "TypeLiteral"
+  /**
+   * @since 1.0.0
+   */
   readonly propertySignatures: ReadonlyArray<PropertySignature>
+  /**
+   * @since 1.0.0
+   */
   readonly indexSignatures: ReadonlyArray<IndexSignature>
-}
-
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const createTypeLiteral = (
-  propertySignatures: ReadonlyArray<PropertySignature>,
-  indexSignatures: ReadonlyArray<IndexSignature>,
-  annotations: Annotations = {}
-): TypeLiteral => {
-  // check for duplicate property signatures
-  const keys: Record<PropertyKey, null> = {}
-  for (let i = 0; i < propertySignatures.length; i++) {
-    const name = propertySignatures[i].name
-    if (Object.prototype.hasOwnProperty.call(keys, name)) {
-      throw new Error(`Duplicate property signature ${String(name)}`)
-    }
-    keys[name] = null
-  }
-  // check for duplicate index signatures
-  const parameters = {
-    string: false,
-    symbol: false
-  }
-  for (let i = 0; i < indexSignatures.length; i++) {
-    const parameter = getParameterBase(indexSignatures[i].parameter)
-    if (isStringKeyword(parameter)) {
-      if (parameters.string) {
-        throw new Error("Duplicate index signature for type `string`")
+  constructor(
+    propertySignatures: ReadonlyArray<PropertySignature>,
+    indexSignatures: ReadonlyArray<IndexSignature>,
+    readonly annotations: Annotations = {}
+  ) {
+    // check for duplicate property signatures
+    const keys: Record<PropertyKey, null> = {}
+    for (let i = 0; i < propertySignatures.length; i++) {
+      const name = propertySignatures[i].name
+      if (Object.prototype.hasOwnProperty.call(keys, name)) {
+        throw new Error(getDuplicatePropertySignatureErrorMessage(name))
       }
-      parameters.string = true
-    } else if (isSymbolKeyword(parameter)) {
-      if (parameters.symbol) {
-        throw new Error("Duplicate index signature for type `symbol`")
+      keys[name] = null
+    }
+    // check for duplicate index signatures
+    const parameters = {
+      string: false,
+      symbol: false
+    }
+    for (let i = 0; i < indexSignatures.length; i++) {
+      const parameter = getParameterBase(indexSignatures[i].parameter)
+      if (isStringKeyword(parameter)) {
+        if (parameters.string) {
+          throw new Error(getDuplicateIndexSignatureErrorMessage("string"))
+        }
+        parameters.string = true
+      } else if (isSymbolKeyword(parameter)) {
+        if (parameters.symbol) {
+          throw new Error(getDuplicateIndexSignatureErrorMessage("symbol"))
+        }
+        parameters.symbol = true
       }
-      parameters.symbol = true
     }
+
+    this.propertySignatures = sortPropertySignatures(propertySignatures)
+    this.indexSignatures = sortIndexSignatures(indexSignatures)
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => formatTypeLiteral(this))
   }
-  return {
-    _tag: "TypeLiteral",
-    propertySignatures: sortPropertySignatures(propertySignatures),
-    indexSignatures: sortIndexSignatures(indexSignatures),
-    annotations
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      propertySignatures: this.propertySignatures.map((ps) => ps.toJSON()),
+      indexSignatures: this.indexSignatures.map((ps) => ps.toJSON()),
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
+}
+
+const formatTypeLiteral = (ast: TypeLiteral): string => {
+  const formattedPropertySignatures = ast.propertySignatures.map((ps) =>
+    String(ps.name) + (ps.isOptional ? "?" : "") + ": " + ps.type
+  ).join("; ")
+  if (ast.indexSignatures.length > 0) {
+    const formattedIndexSignatures = ast.indexSignatures.map((is) =>
+      `[x: ${getParameterBase(is.parameter)}]: ${is.type}`
+    ).join("; ")
+    if (ast.propertySignatures.length > 0) {
+      return `{ ${formattedPropertySignatures}; ${formattedIndexSignatures} }`
+    } else {
+      return `{ ${formattedIndexSignatures} }`
+    }
+  } else {
+    if (ast.propertySignatures.length > 0) {
+      return `{ ${formattedPropertySignatures} }`
+    } else {
+      return "{}"
+    }
   }
 }
 
@@ -912,111 +1304,201 @@ export const createTypeLiteral = (
  * @category guards
  * @since 1.0.0
  */
-export const isTypeLiteral = (ast: AST): ast is TypeLiteral => ast._tag === "TypeLiteral"
+export const isTypeLiteral: (ast: AST) => ast is TypeLiteral = createASTGuard("TypeLiteral")
+
+const flatten = (candidates: ReadonlyArray<AST>): Array<AST> =>
+  ReadonlyArray.flatMap(candidates, (ast: AST) => {
+    switch (ast._tag) {
+      case "Union":
+        return ast.types
+      default:
+        return [ast]
+    }
+  })
 
 /**
  * @since 1.0.0
  */
 export type Members<A> = readonly [A, A, ...Array<A>]
 
-/**
- * @category model
- * @since 1.0.0
- */
-export interface Union extends Annotated {
-  readonly _tag: "Union"
-  readonly types: Members<AST>
+const prettyUnion = (ss: ReadonlyArray<string>): string => Array.from(new Set(ss)).join(" | ")
+
+const getDefaultUnionDescription = (candidates: ReadonlyArray<AST>): string | undefined => {
+  const nested: Array<string> = []
+  let other = false
+  for (const c of candidates) {
+    if (isUnion(c)) {
+      const expected = getExpected(c, false)
+      if (Option.isSome(expected)) {
+        nested.push(expected.value)
+        continue
+      }
+    }
+    other = true
+  }
+  if (nested.length > 0) {
+    return prettyUnion(nested.concat(other ? ["..."] : []))
+  }
 }
 
-const isMembers = <A>(as: ReadonlyArray<A>): as is readonly [A, A, ...Array<A>] => as.length > 1
-
 /**
- * @category constructors
+ * @category model
  * @since 1.0.0
  */
-export const createUnion = (
-  candidates: ReadonlyArray<AST>,
-  annotations: Annotations = {}
-): AST => {
-  const types = unify(candidates)
-  if (isMembers(types)) {
-    return {
-      _tag: "Union",
-      types: sortUnionMembers(types),
-      annotations
+export class Union implements Annotated {
+  static make = (
+    candidates: ReadonlyArray<AST>,
+    annotations?: Annotations
+  ): AST => {
+    const types = unify(flatten(candidates))
+    if (isMembers(types)) {
+      const defaultDescription = getDefaultUnionDescription(candidates)
+      if (defaultDescription) {
+        annotations = { [DescriptionAnnotationId]: defaultDescription, ...annotations }
+      }
+      return new Union(sortUnionMembers(types), annotations)
     }
+    if (ReadonlyArray.isNonEmptyReadonlyArray(types)) {
+      return types[0]
+    }
+    return neverKeyword
   }
-  if (ReadonlyArray.isNonEmptyReadonlyArray(types)) {
-    return types[0]
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "Union"
+  private constructor(readonly types: Members<AST>, readonly annotations: Annotations = {}) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return Option.getOrElse(
+      getExpected(this, verbose),
+      () => prettyUnion(this.types.map(String))
+    )
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      types: this.types.map((ast) => ast.toJSON()),
+      annotations: toJSONAnnotations(this.annotations)
+    }
   }
-  return neverKeyword
 }
 
+/** @internal */
+export const mapMembers = <A, B>(members: Members<A>, f: (a: A) => B): Members<B> => members.map(f) as any
+
+/** @internal */
+export const isMembers = <A>(as: ReadonlyArray<A>): as is readonly [A, A, ...Array<A>] => as.length > 1
+
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isUnion = (ast: AST): ast is Union => ast._tag === "Union"
+export const isUnion: (ast: AST) => ast is Union = createASTGuard("Union")
+
+const toJSONMemoMap = globalValue(
+  Symbol.for("@effect/schema/AST/toJSONMemoMap"),
+  () => new WeakMap<AST, object>()
+)
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface Suspend extends Annotated {
-  readonly _tag: "Suspend"
-  readonly f: () => AST
+export class Suspend implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "Suspend"
+  constructor(readonly f: () => AST, readonly annotations: Annotations = {}) {
+    this.f = _util.memoizeThunk(f)
+  }
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return getExpected(this, verbose).pipe(
+      Option.orElse(() =>
+        Option.flatMap(
+          Option.liftThrowable(this.f)(),
+          (ast) => getExpected(ast, verbose)
+        )
+      ),
+      Option.getOrElse(() => "<suspended schema>")
+    )
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    const ast = this.f()
+    let out = toJSONMemoMap.get(ast)
+    if (out) {
+      return out
+    }
+    toJSONMemoMap.set(ast, { _tag: this._tag })
+    out = {
+      _tag: this._tag,
+      ast: ast.toJSON(),
+      annotations: toJSONAnnotations(this.annotations)
+    }
+    toJSONMemoMap.set(ast, out)
+    return out
+  }
 }
 
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const createSuspend = (
-  f: () => AST,
-  annotations: Annotations = {}
-): Suspend => ({
-  _tag: "Suspend",
-  f: Internal.memoizeThunk(f),
-  annotations
-})
-
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isSuspend = (ast: AST): ast is Suspend => ast._tag === "Suspend"
+export const isSuspend: (ast: AST) => ast is Suspend = createASTGuard("Suspend")
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface Refinement<From = AST> extends Annotated {
-  readonly _tag: "Refinement"
-  readonly from: From
-  readonly filter: (
-    input: any,
-    options: ParseOptions,
-    self: Refinement
-  ) => Option.Option<ParseIssue>
-}
-
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const createRefinement = <From extends AST>(
-  from: From,
-  filter: Refinement["filter"],
-  annotations: Annotations = {}
-): Refinement<From> => {
-  return { _tag: "Refinement", from, filter, annotations }
+export class Refinement<From extends AST = AST> implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "Refinement"
+  constructor(
+    readonly from: From,
+    readonly filter: (
+      input: any,
+      options: ParseOptions,
+      self: Refinement
+    ) => Option.Option<ParseIssue>,
+    readonly annotations: Annotations = {}
+  ) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return Option.getOrElse(getExpected(this, verbose), () => "<refinement schema>")
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      from: this.from.toJSON(),
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
 }
 
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isRefinement = (ast: AST): ast is Refinement => ast._tag === "Refinement"
+export const isRefinement: (ast: AST) => ast is Refinement<AST> = createASTGuard("Refinement")
 
 /**
  * @category model
@@ -1030,38 +1512,58 @@ export interface ParseOptions {
 }
 
 /**
- * @category model
  * @since 1.0.0
  */
-export interface Transform extends Annotated {
-  readonly _tag: "Transform"
-  readonly from: AST
-  readonly to: AST
-  readonly transformation: Transformation
-}
+export const defaultParseOption: ParseOptions = {}
 
 /**
  * @category model
  * @since 1.0.0
  */
-export const createTransform = (
-  from: AST,
-  to: AST,
-  transformation: Transformation,
-  annotations: Annotations = {}
-): Transform => ({ _tag: "Transform", from, to, transformation, annotations })
+export class Transformation implements Annotated {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "Transformation"
+  constructor(
+    readonly from: AST,
+    readonly to: AST,
+    readonly transformation: TransformationKind,
+    readonly annotations: Annotations = {}
+  ) {}
+  /**
+   * @since 1.0.0
+   */
+  toString(verbose: boolean = false) {
+    return Option.getOrElse(
+      getExpected(this, verbose),
+      () => `(${String(this.from)} <-> ${String(this.to)})`
+    )
+  }
+  /**
+   * @since 1.0.0
+   */
+  toJSON(): object {
+    return {
+      _tag: this._tag,
+      from: this.from.toJSON(),
+      to: this.to.toJSON(),
+      annotations: toJSONAnnotations(this.annotations)
+    }
+  }
+}
 
 /**
  * @category guards
  * @since 1.0.0
  */
-export const isTransform = (ast: AST): ast is Transform => ast._tag === "Transform"
+export const isTransform: (ast: AST) => ast is Transformation = createASTGuard("Transformation")
 
 /**
  * @category model
  * @since 1.0.0
  */
-export type Transformation =
+export type TransformationKind =
   | FinalTransformation
   | ComposeTransformation
   | TypeLiteralTransformation
@@ -1070,228 +1572,133 @@ export type Transformation =
  * @category model
  * @since 1.0.0
  */
-export interface FinalTransformation {
-  readonly _tag: "FinalTransformation"
-  readonly decode: (input: any, options: ParseOptions, self: Transform) => Effect<any, ParseIssue, any>
-  readonly encode: (input: any, options: ParseOptions, self: Transform) => Effect<any, ParseIssue, any>
+export class FinalTransformation {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "FinalTransformation"
+  constructor(
+    readonly decode: (input: any, options: ParseOptions, self: Transformation) => Effect<any, ParseIssue, any>,
+    readonly encode: (input: any, options: ParseOptions, self: Transformation) => Effect<any, ParseIssue, any>
+  ) {}
 }
 
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const createFinalTransformation = (
-  decode: FinalTransformation["decode"],
-  encode: FinalTransformation["encode"]
-): FinalTransformation => ({ _tag: "FinalTransformation", decode, encode })
-
-/**
- * @category guard
- * @since 1.0.0
- */
-export const isFinalTransformation = (ast: Transformation): ast is FinalTransformation =>
-  ast._tag === "FinalTransformation"
-
-/**
- * @category model
- * @since 1.0.0
- */
-export interface ComposeTransformation {
-  readonly _tag: "ComposeTransformation"
-}
+const createTransformationGuard =
+  <T extends TransformationKind["_tag"]>(tag: T) =>
+  (ast: TransformationKind): ast is Extract<TransformationKind, { _tag: T }> => ast._tag === tag
 
 /**
- * @category constructors
- * @since 1.0.0
- */
-export const composeTransformation: ComposeTransformation = { _tag: "ComposeTransformation" }
-
-/**
- * @category guard
- * @since 1.0.0
- */
-export const isComposeTransformation = (ast: Transformation): ast is ComposeTransformation =>
-  ast._tag === "ComposeTransformation"
-
-/**
- * Represents a `PropertySignature -> PropertySignature` transformation
- *
- * The semantic of `decode` is:
- * - `none()` represents the absence of the key/value pair
- * - `some(value)` represents the presence of the key/value pair
- *
- * The semantic of `encode` is:
- * - `none()` you don't want to output the key/value pair
- * - `some(value)` you want to output the key/value pair
- *
- * @category model
- * @since 1.0.0
- */
-export interface FinalPropertySignatureTransformation {
-  readonly _tag: "FinalPropertySignatureTransformation"
-  readonly decode: (o: Option.Option<any>) => Option.Option<any>
-  readonly encode: (o: Option.Option<any>) => Option.Option<any>
-}
-
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const createFinalPropertySignatureTransformation = (
-  decode: FinalPropertySignatureTransformation["decode"],
-  encode: FinalPropertySignatureTransformation["encode"]
-): FinalPropertySignatureTransformation => ({
-  _tag: "FinalPropertySignatureTransformation",
-  decode,
-  encode
-})
-
-/**
- * @category guard
- * @since 1.0.0
- */
-export const isFinalPropertySignatureTransformation = (
-  ast: PropertySignatureTransformation
-): ast is FinalPropertySignatureTransformation => ast._tag === "FinalPropertySignatureTransformation"
-
-/**
- * @category model
- * @since 1.0.0
- */
-export type PropertySignatureTransformation = FinalPropertySignatureTransformation
-
-/**
- * @category model
- * @since 1.0.0
- */
-export interface PropertySignatureTransform {
-  readonly from: PropertyKey
-  readonly to: PropertyKey
-  readonly propertySignatureTransformation: PropertySignatureTransformation
-}
-
-/**
- * @category constructors
+ * @category guards
  * @since 1.0.0
  */
-export const createPropertySignatureTransform = (
-  from: PropertyKey,
-  to: PropertyKey,
-  propertySignatureTransformation: PropertySignatureTransformation
-): PropertySignatureTransform => ({ from, to, propertySignatureTransformation })
+export const isFinalTransformation: (ast: TransformationKind) => ast is FinalTransformation = createTransformationGuard(
+  "FinalTransformation"
+)
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface TypeLiteralTransformation {
-  readonly _tag: "TypeLiteralTransformation"
-  readonly propertySignatureTransformations: ReadonlyArray<
-    PropertySignatureTransform
-  >
+export class ComposeTransformation {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "ComposeTransformation"
 }
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const createTypeLiteralTransformation = (
-  propertySignatureTransformations: TypeLiteralTransformation["propertySignatureTransformations"]
-): TypeLiteralTransformation => {
-  // check for duplicate property signature transformations
-  const keys: Record<PropertyKey, true> = {}
-  for (const pst of propertySignatureTransformations) {
-    const key = pst.from
-    if (keys[key]) {
-      throw new Error(`Duplicate property signature transformation ${String(key)}`)
-    }
-    keys[key] = true
-  }
-
-  return {
-    _tag: "TypeLiteralTransformation",
-    propertySignatureTransformations
-  }
-}
+export const composeTransformation: ComposeTransformation = new ComposeTransformation()
 
 /**
- * @category guard
+ * @category guards
  * @since 1.0.0
  */
-export const isTypeLiteralTransformation = (
-  ast: Transformation
-): ast is TypeLiteralTransformation => ast._tag === "TypeLiteralTransformation"
-
-// -------------------------------------------------------------------------------------
-// API
-// -------------------------------------------------------------------------------------
+export const isComposeTransformation: (ast: TransformationKind) => ast is ComposeTransformation =
+  createTransformationGuard(
+    "ComposeTransformation"
+  )
 
 /**
- * Adds a group of annotations, potentially overwriting existing annotations.
+ * Represents a `PropertySignature -> PropertySignature` transformation
+ *
+ * The semantic of `decode` is:
+ * - `none()` represents the absence of the key/value pair
+ * - `some(value)` represents the presence of the key/value pair
+ *
+ * The semantic of `encode` is:
+ * - `none()` you don't want to output the key/value pair
+ * - `some(value)` you want to output the key/value pair
  *
+ * @category model
  * @since 1.0.0
  */
-export const mergeAnnotations = (ast: AST, annotations: Annotations): AST => {
-  return {
-    ...ast,
-    annotations: { ...ast.annotations, ...annotations }
-  }
+export class PropertySignatureTransformation {
+  constructor(
+    readonly from: PropertyKey,
+    readonly to: PropertyKey,
+    readonly decode: (o: Option.Option<any>) => Option.Option<any>,
+    readonly encode: (o: Option.Option<any>) => Option.Option<any>
+  ) {}
 }
 
+const getDuplicatePropertySignatureTransformationErrorMessage = (name: PropertyKey): string =>
+  `Duplicate property signature transformation ${_util.formatUnknown(name)}`
+
 /**
- * Adds an annotation, potentially overwriting the existing annotation with the specified id.
- *
+ * @category model
  * @since 1.0.0
  */
-export const setAnnotation = (ast: AST, sym: symbol, value: unknown): AST => {
-  return {
-    ...ast,
-    annotations: { ...ast.annotations, [sym]: value }
+export class TypeLiteralTransformation {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "TypeLiteralTransformation"
+  constructor(
+    readonly propertySignatureTransformations: ReadonlyArray<
+      PropertySignatureTransformation
+    >
+  ) {
+    // check for duplicate property signature transformations
+    const fromKeys: Record<PropertyKey, true> = {}
+    const toKeys: Record<PropertyKey, true> = {}
+    for (const pst of propertySignatureTransformations) {
+      const from = pst.from
+      if (fromKeys[from]) {
+        throw new Error(getDuplicatePropertySignatureTransformationErrorMessage(from))
+      }
+      fromKeys[from] = true
+      const to = pst.to
+      if (toKeys[to]) {
+        throw new Error(getDuplicatePropertySignatureTransformationErrorMessage(to))
+      }
+      toKeys[to] = true
+    }
   }
 }
 
 /**
- * Adds a rest element to the end of a tuple, or throws an exception if the rest element is already present.
- *
+ * @category guards
  * @since 1.0.0
  */
-export const appendRestElement = (
-  ast: Tuple,
-  restElement: AST
-): Tuple => {
-  if (Option.isSome(ast.rest)) {
-    // example: `type A = [...string[], ...number[]]` is illegal
-    throw new Error("A rest element cannot follow another rest element. ts(1265)")
-  }
-  return createTuple(ast.elements, Option.some([restElement]), ast.isReadonly)
-}
+export const isTypeLiteralTransformation: (ast: TransformationKind) => ast is TypeLiteralTransformation =
+  createTransformationGuard("TypeLiteralTransformation")
+
+// -------------------------------------------------------------------------------------
+// API
+// -------------------------------------------------------------------------------------
 
 /**
- * Appends an element to a tuple or throws an exception in the following cases:
- * - A required element cannot follow an optional element. ts(1257)
- * - An optional element cannot follow a rest element. ts(1266)
+ * Adds a group of annotations, potentially overwriting existing annotations.
  *
  * @since 1.0.0
  */
-export const appendElement = (
-  ast: Tuple,
-  newElement: Element
-): Tuple => {
-  if (ast.elements.some((e) => e.isOptional) && !newElement.isOptional) {
-    throw new Error("A required element cannot follow an optional element. ts(1257)")
-  }
-  return pipe(
-    ast.rest,
-    Option.match({
-      onNone: () => createTuple([...ast.elements, newElement], Option.none(), ast.isReadonly),
-      onSome: (rest) => {
-        if (newElement.isOptional) {
-          throw new Error("An optional element cannot follow a rest element. ts(1266)")
-        }
-        return createTuple(ast.elements, Option.some([...rest, newElement.type]), ast.isReadonly)
-      }
-    })
-  )
+export const annotations = (ast: AST, annotations: Annotations): AST => {
+  const d = Object.getOwnPropertyDescriptors(ast)
+  d.annotations.value = { ...ast.annotations, ...annotations }
+  return Object.create(Object.getPrototypeOf(ast), d)
 }
 
 /**
@@ -1299,7 +1706,7 @@ export const appendElement = (
  *
  * @since 1.0.0
  */
-export const keyof = (ast: AST): AST => createUnion(_keyof(ast))
+export const keyof = (ast: AST): AST => Union.make(_keyof(ast))
 
 /** @internal */
 export const getTemplateLiteralRegex = (ast: TemplateLiteral): RegExp => {
@@ -1321,6 +1728,13 @@ export const getTemplateLiteralRegex = (ast: TemplateLiteral): RegExp => {
  */
 export const getPropertySignatures = (ast: AST): Array<PropertySignature> => {
   switch (ast._tag) {
+    case "Declaration": {
+      const annotation = getSurrogateSchemaAnnotation(ast)
+      if (Option.isSome(annotation)) {
+        return getPropertySignatures(annotation.value)
+      }
+      break
+    }
     case "TypeLiteral":
       return ast.propertySignatures.slice()
     case "Suspend":
@@ -1332,7 +1746,7 @@ export const getPropertySignatures = (ast: AST): Array<PropertySignature> => {
 /** @internal */
 export const getNumberIndexedAccess = (ast: AST): AST => {
   switch (ast._tag) {
-    case "Tuple": {
+    case "TupleType": {
       let hasOptional = false
       const out: Array<AST> = []
       for (const e of ast.elements) {
@@ -1344,26 +1758,31 @@ export const getNumberIndexedAccess = (ast: AST): AST => {
       if (hasOptional) {
         out.push(undefinedKeyword)
       }
-      if (Option.isSome(ast.rest)) {
-        for (const e of ast.rest.value) {
-          out.push(e)
-        }
+      for (const e of ast.rest) {
+        out.push(e)
       }
-      return createUnion(out)
+      return Union.make(out)
     }
     case "Refinement":
       return getNumberIndexedAccess(ast.from)
     case "Union":
-      return createUnion(ast.types.map(getNumberIndexedAccess))
+      return Union.make(ast.types.map(getNumberIndexedAccess))
     case "Suspend":
       return getNumberIndexedAccess(ast.f())
   }
-  throw new Error(`getNumberIndexedAccess: unsupported schema (${format(ast)})`)
+  throw new Error(`getNumberIndexedAccess: unsupported schema (${ast})`)
 }
 
 /** @internal */
 export const getPropertyKeyIndexedAccess = (ast: AST, name: PropertyKey): PropertySignature => {
   switch (ast._tag) {
+    case "Declaration": {
+      const annotation = getSurrogateSchemaAnnotation(ast)
+      if (Option.isSome(annotation)) {
+        return getPropertyKeyIndexedAccess(annotation.value, name)
+      }
+      break
+    }
     case "TypeLiteral": {
       const ops = ReadonlyArray.findFirst(ast.propertySignatures, (ps) => ps.name === name)
       if (Option.isSome(ops)) {
@@ -1376,19 +1795,19 @@ export const getPropertyKeyIndexedAccess = (ast: AST, name: PropertyKey): Proper
               case "TemplateLiteral": {
                 const regex = getTemplateLiteralRegex(parameterBase)
                 if (regex.test(name)) {
-                  return createPropertySignature(name, is.type, false, false)
+                  return new PropertySignature(name, is.type, false, false)
                 }
                 break
               }
               case "StringKeyword":
-                return createPropertySignature(name, is.type, false, false)
+                return new PropertySignature(name, is.type, false, false)
             }
           }
         } else if (Predicate.isSymbol(name)) {
           for (const is of ast.indexSignatures) {
             const parameterBase = getParameterBase(is.parameter)
             if (isSymbolKeyword(parameterBase)) {
-              return createPropertySignature(name, is.type, false, false)
+              return new PropertySignature(name, is.type, false, false)
             }
           }
         }
@@ -1396,20 +1815,27 @@ export const getPropertyKeyIndexedAccess = (ast: AST, name: PropertyKey): Proper
       break
     }
     case "Union":
-      return createPropertySignature(
+      return new PropertySignature(
         name,
-        createUnion(ast.types.map((ast) => getPropertyKeyIndexedAccess(ast, name).type)),
+        Union.make(ast.types.map((ast) => getPropertyKeyIndexedAccess(ast, name).type)),
         false,
         true
       )
     case "Suspend":
       return getPropertyKeyIndexedAccess(ast.f(), name)
   }
-  return createPropertySignature(name, neverKeyword, false, true)
+  return new PropertySignature(name, neverKeyword, false, true)
 }
 
 const getPropertyKeys = (ast: AST): Array<PropertyKey> => {
   switch (ast._tag) {
+    case "Declaration": {
+      const annotation = getSurrogateSchemaAnnotation(ast)
+      if (Option.isSome(annotation)) {
+        return getPropertyKeys(annotation.value)
+      }
+      break
+    }
     case "TypeLiteral":
       return ast.propertySignatures.map((ps) => ps.name)
     case "Suspend":
@@ -1423,12 +1849,11 @@ const getPropertyKeys = (ast: AST): Array<PropertyKey> => {
   return []
 }
 
-/**
- * Create a record with the specified key type and value type.
- *
- * @since 1.0.0
- */
-export const createRecord = (key: AST, value: AST, isReadonly: boolean): TypeLiteral => {
+/** @internal */
+export const record = (key: AST, value: AST): {
+  propertySignatures: Array<PropertySignature>
+  indexSignatures: Array<IndexSignature>
+} => {
   const propertySignatures: Array<PropertySignature> = []
   const indexSignatures: Array<IndexSignature> = []
   const go = (key: AST): void => {
@@ -1439,27 +1864,27 @@ export const createRecord = (key: AST, value: AST, isReadonly: boolean): TypeLit
       case "SymbolKeyword":
       case "TemplateLiteral":
       case "Refinement":
-        indexSignatures.push(createIndexSignature(key, value, isReadonly))
+        indexSignatures.push(new IndexSignature(key, value, true))
         break
       case "Literal":
         if (Predicate.isString(key.literal) || Predicate.isNumber(key.literal)) {
-          propertySignatures.push(createPropertySignature(key.literal, value, false, isReadonly))
+          propertySignatures.push(new PropertySignature(key.literal, value, false, true))
         } else {
-          throw new Error(`createRecord: unsupported literal (${formatUnknown(key.literal)})`)
+          throw new Error(`createRecord: unsupported literal (${_util.formatUnknown(key.literal)})`)
         }
         break
       case "UniqueSymbol":
-        propertySignatures.push(createPropertySignature(key.symbol, value, false, isReadonly))
+        propertySignatures.push(new PropertySignature(key.symbol, value, false, true))
         break
       case "Union":
         key.types.forEach(go)
         break
       default:
-        throw new Error(`createRecord: unsupported key schema (${format(key)})`)
+        throw new Error(`createRecord: unsupported key schema (${key})`)
     }
   }
   go(key)
-  return createTypeLiteral(propertySignatures, indexSignatures)
+  return { propertySignatures, indexSignatures }
 }
 
 /**
@@ -1468,7 +1893,7 @@ export const createRecord = (key: AST, value: AST, isReadonly: boolean): TypeLit
  * @since 1.0.0
  */
 export const pick = (ast: AST, keys: ReadonlyArray<PropertyKey>): TypeLiteral =>
-  createTypeLiteral(keys.map((key) => getPropertyKeyIndexedAccess(ast, key)), [])
+  new TypeLiteral(keys.map((key) => getPropertyKeyIndexedAccess(ast, key)), [])
 
 /**
  * Equivalent at runtime to the built-in TypeScript utility type `Omit`.
@@ -1479,7 +1904,7 @@ export const omit = (ast: AST, keys: ReadonlyArray<PropertyKey>): TypeLiteral =>
   pick(ast, getPropertyKeys(ast).filter((name) => !keys.includes(name)))
 
 /** @internal */
-export const orUndefined = (ast: AST): AST => createUnion([ast, undefinedKeyword])
+export const orUndefined = (ast: AST): AST => Union.make([ast, undefinedKeyword])
 
 /**
  * Equivalent at runtime to the built-in TypeScript utility type `Partial`.
@@ -1489,31 +1914,31 @@ export const orUndefined = (ast: AST): AST => createUnion([ast, undefinedKeyword
 export const partial = (ast: AST, options?: { readonly exact: true }): AST => {
   const exact = options?.exact === true
   switch (ast._tag) {
-    case "Tuple":
-      return createTuple(
-        ast.elements.map((e) => createElement(exact ? e.type : orUndefined(e.type), true)),
-        pipe(
-          ast.rest,
-          Option.map((rest) => [createUnion([...rest, undefinedKeyword])])
-        ),
+    case "TupleType":
+      return new TupleType(
+        ast.elements.map((e) => new Element(exact ? e.type : orUndefined(e.type), true)),
+        ReadonlyArray.match(ast.rest, {
+          onEmpty: () => ast.rest,
+          onNonEmpty: (rest) => [Union.make([...rest, undefinedKeyword])]
+        }),
         ast.isReadonly
       )
     case "TypeLiteral":
-      return createTypeLiteral(
+      return new TypeLiteral(
         ast.propertySignatures.map((ps) =>
-          createPropertySignature(ps.name, exact ? ps.type : orUndefined(ps.type), true, ps.isReadonly, ps.annotations)
+          new PropertySignature(ps.name, exact ? ps.type : orUndefined(ps.type), true, ps.isReadonly, ps.annotations)
         ),
-        ast.indexSignatures.map((is) => createIndexSignature(is.parameter, orUndefined(is.type), is.isReadonly))
+        ast.indexSignatures.map((is) => new IndexSignature(is.parameter, orUndefined(is.type), is.isReadonly))
       )
     case "Union":
-      return createUnion(ast.types.map((member) => partial(member, options)))
+      return Union.make(ast.types.map((member) => partial(member, options)))
     case "Suspend":
-      return createSuspend(() => partial(ast.f(), options))
+      return new Suspend(() => partial(ast.f(), options))
     case "Declaration":
       throw new Error("`partial` cannot handle declarations")
     case "Refinement":
       throw new Error("`partial` cannot handle refinements")
-    case "Transform":
+    case "Transformation":
       throw new Error("`partial` cannot handle transformations")
   }
   return ast
@@ -1526,32 +1951,32 @@ export const partial = (ast: AST, options?: { readonly exact: true }): AST => {
  */
 export const required = (ast: AST): AST => {
   switch (ast._tag) {
-    case "Tuple":
-      return createTuple(
-        ast.elements.map((e) => createElement(e.type, false)),
-        pipe(
-          ast.rest,
-          Option.map((rest) => {
-            const u = createUnion([...rest])
-            return ReadonlyArray.map(rest, () => u)
-          })
-        ),
+    case "TupleType":
+      return new TupleType(
+        ast.elements.map((e) => new Element(e.type, false)),
+        ReadonlyArray.match(ast.rest, {
+          onEmpty: () => ast.rest,
+          onNonEmpty: (rest) => {
+            const union = Union.make([...rest])
+            return ReadonlyArray.map(rest, () => union)
+          }
+        }),
         ast.isReadonly
       )
     case "TypeLiteral":
-      return createTypeLiteral(
-        ast.propertySignatures.map((f) => createPropertySignature(f.name, f.type, false, f.isReadonly, f.annotations)),
+      return new TypeLiteral(
+        ast.propertySignatures.map((f) => new PropertySignature(f.name, f.type, false, f.isReadonly, f.annotations)),
         ast.indexSignatures
       )
     case "Union":
-      return createUnion(ast.types.map((member) => required(member)))
+      return Union.make(ast.types.map((member) => required(member)))
     case "Suspend":
-      return createSuspend(() => required(ast.f()))
+      return new Suspend(() => required(ast.f()))
     case "Declaration":
       throw new Error("`required` cannot handle declarations")
     case "Refinement":
       throw new Error("`required` cannot handle refinements")
-    case "Transform":
+    case "Transformation":
       throw new Error("`required` cannot handle transformations")
   }
   return ast
@@ -1566,24 +1991,24 @@ export const required = (ast: AST): AST => {
  */
 export const mutable = (ast: AST): AST => {
   switch (ast._tag) {
-    case "Tuple":
-      return createTuple(ast.elements, ast.rest, false, ast.annotations)
+    case "TupleType":
+      return new TupleType(ast.elements, ast.rest, false, ast.annotations)
     case "TypeLiteral":
-      return createTypeLiteral(
+      return new TypeLiteral(
         ast.propertySignatures.map((ps) =>
-          createPropertySignature(ps.name, ps.type, ps.isOptional, false, ps.annotations)
+          new PropertySignature(ps.name, ps.type, ps.isOptional, false, ps.annotations)
         ),
-        ast.indexSignatures.map((is) => createIndexSignature(is.parameter, is.type, false)),
+        ast.indexSignatures.map((is) => new IndexSignature(is.parameter, is.type, false)),
         ast.annotations
       )
     case "Union":
-      return createUnion(ast.types.map(mutable), ast.annotations)
+      return Union.make(ast.types.map(mutable), ast.annotations)
     case "Suspend":
-      return createSuspend(() => mutable(ast.f()), ast.annotations)
+      return new Suspend(() => mutable(ast.f()), ast.annotations)
     case "Refinement":
-      return createRefinement(mutable(ast.from), ast.filter, ast.annotations)
-    case "Transform":
-      return createTransform(
+      return new Refinement(mutable(ast.from), ast.filter, ast.annotations)
+    case "Transformation":
+      return new Transformation(
         mutable(ast.from),
         mutable(ast.to),
         ast.transformation,
@@ -1619,151 +2044,152 @@ export const getCompiler = <A>(match: Match<A>): Compiler<A> => {
 
 /** @internal */
 export const getToPropertySignatures = (ps: ReadonlyArray<PropertySignature>): Array<PropertySignature> =>
-  ps.map((p) => createPropertySignature(p.name, to(p.type), p.isOptional, p.isReadonly, p.annotations))
+  ps.map((p) => new PropertySignature(p.name, typeAST(p.type), p.isOptional, p.isReadonly, p.annotations))
 
 /** @internal */
 export const getToIndexSignatures = (ps: ReadonlyArray<IndexSignature>): Array<IndexSignature> =>
-  ps.map((is) => createIndexSignature(is.parameter, to(is.type), is.isReadonly))
+  ps.map((is) => new IndexSignature(is.parameter, typeAST(is.type), is.isReadonly))
 
 /**
  * @since 1.0.0
  */
-export const to = (ast: AST): AST => {
+export const typeAST = (ast: AST): AST => {
   switch (ast._tag) {
-    case "Declaration":
-      return createDeclaration(
-        ast.typeParameters.map(to),
-        ast.decodeUnknown,
-        ast.encodeUnknown,
-        ast.annotations
-      )
-    case "Tuple":
-      return createTuple(
-        ast.elements.map((e) => createElement(to(e.type), e.isOptional)),
-        Option.map(ast.rest, ReadonlyArray.map(to)),
-        ast.isReadonly,
-        ast.annotations
-      )
-    case "TypeLiteral":
-      return createTypeLiteral(
-        getToPropertySignatures(ast.propertySignatures),
-        getToIndexSignatures(ast.indexSignatures),
-        ast.annotations
-      )
-    case "Union":
-      return createUnion(ast.types.map(to), ast.annotations)
+    case "Declaration": {
+      const typeParameters = changeMap(ast.typeParameters, typeAST)
+      return typeParameters === ast.typeParameters ?
+        ast :
+        new Declaration(typeParameters, ast.decodeUnknown, ast.encodeUnknown, ast.annotations)
+    }
+    case "TupleType": {
+      const elements = changeMap(ast.elements, (e) => {
+        const type = typeAST(e.type)
+        return type === e.type ? e : new Element(type, e.isOptional)
+      })
+      const rest = changeMap(ast.rest, typeAST)
+      return elements === ast.elements && rest === ast.rest ?
+        ast :
+        new TupleType(elements, rest, ast.isReadonly, ast.annotations)
+    }
+    case "TypeLiteral": {
+      const propertySignatures = changeMap(ast.propertySignatures, (p) => {
+        const type = typeAST(p.type)
+        return type === p.type ? p : new PropertySignature(p.name, type, p.isOptional, p.isReadonly)
+      })
+      const indexSignatures = changeMap(ast.indexSignatures, (is) => {
+        const type = typeAST(is.type)
+        return type === is.type ? is : new IndexSignature(is.parameter, type, is.isReadonly)
+      })
+      return propertySignatures === ast.propertySignatures && indexSignatures === ast.indexSignatures ?
+        ast :
+        new TypeLiteral(propertySignatures, indexSignatures, ast.annotations)
+    }
+    case "Union": {
+      const types = changeMap(ast.types, typeAST)
+      return types === ast.types ? ast : Union.make(ast.types.map(typeAST), ast.annotations)
+    }
     case "Suspend":
-      return createSuspend(() => to(ast.f()), ast.annotations)
-    case "Refinement":
-      return createRefinement(to(ast.from), ast.filter, ast.annotations)
-    case "Transform":
-      return to(ast.to)
+      return new Suspend(() => typeAST(ast.f()), ast.annotations)
+    case "Refinement": {
+      const from = typeAST(ast.from)
+      return from === ast.from ?
+        ast :
+        new Refinement(from, ast.filter, ast.annotations)
+    }
+    case "Transformation":
+      return typeAST(ast.to)
   }
   return ast
 }
 
-const preserveIdentifierAnnotation = (annotated: Annotated): Annotations | undefined => {
-  return Option.match(getIdentifierAnnotation(annotated), {
+/** @internal */
+export const getJSONIdentifier = (annotated: Annotated) =>
+  Option.orElse(getJSONIdentifierAnnotation(annotated), () => getIdentifierAnnotation(annotated))
+
+const createJSONIdentifierAnnotation = (annotated: Annotated): Annotations | undefined => {
+  return Option.match(getJSONIdentifier(annotated), {
     onNone: () => undefined,
-    onSome: (identifier) => ({ [IdentifierAnnotationId]: identifier })
+    onSome: (identifier) => ({ [JSONIdentifierAnnotationId]: identifier })
   })
 }
 
+function changeMap<A>(
+  as: ReadonlyArray.NonEmptyReadonlyArray<A>,
+  f: (a: A) => A
+): ReadonlyArray.NonEmptyReadonlyArray<A>
+function changeMap<A>(as: ReadonlyArray<A>, f: (a: A) => A): ReadonlyArray<A>
+function changeMap<A>(as: ReadonlyArray<A>, f: (a: A) => A): ReadonlyArray<A> {
+  let changed = false
+  const out: Array<A> = []
+  for (const a of as) {
+    const fa = f(a)
+    if (fa !== a) {
+      changed = true
+    }
+    out.push(f(a))
+  }
+  return changed ? out : as
+}
+
 /**
  * @since 1.0.0
  */
-export const from = (ast: AST): AST => {
+export const encodedAST = (ast: AST): AST => {
   switch (ast._tag) {
-    case "Declaration":
-      return createDeclaration(
-        ast.typeParameters.map(from),
-        ast.decodeUnknown,
-        ast.encodeUnknown,
-        ast.annotations
-      )
-    case "Tuple":
-      return createTuple(
-        ast.elements.map((e) => createElement(from(e.type), e.isOptional)),
-        Option.map(ast.rest, ReadonlyArray.map(from)),
-        ast.isReadonly,
-        preserveIdentifierAnnotation(ast)
-      )
-    case "TypeLiteral":
-      return createTypeLiteral(
-        ast.propertySignatures.map((p) => createPropertySignature(p.name, from(p.type), p.isOptional, p.isReadonly)),
-        ast.indexSignatures.map((is) => createIndexSignature(is.parameter, from(is.type), is.isReadonly)),
-        preserveIdentifierAnnotation(ast)
-      )
-    case "Union":
-      return createUnion(ast.types.map(from), preserveIdentifierAnnotation(ast))
+    case "Declaration": {
+      const typeParameters = changeMap(ast.typeParameters, encodedAST)
+      return typeParameters === ast.typeParameters ?
+        ast :
+        new Declaration(typeParameters, ast.decodeUnknown, ast.encodeUnknown, ast.annotations)
+    }
+    case "TupleType": {
+      const elements = changeMap(ast.elements, (e) => {
+        const type = encodedAST(e.type)
+        return type === e.type ? e : new Element(type, e.isOptional)
+      })
+      const rest = changeMap(ast.rest, encodedAST)
+      return elements === ast.elements && rest === ast.rest ?
+        ast :
+        new TupleType(elements, rest, ast.isReadonly, createJSONIdentifierAnnotation(ast))
+    }
+    case "TypeLiteral": {
+      const propertySignatures = changeMap(ast.propertySignatures, (p) => {
+        const type = encodedAST(p.type)
+        return type === p.type ? p : new PropertySignature(p.name, type, p.isOptional, p.isReadonly)
+      })
+      const indexSignatures = changeMap(ast.indexSignatures, (is) => {
+        const type = encodedAST(is.type)
+        return type === is.type ? is : new IndexSignature(is.parameter, type, is.isReadonly)
+      })
+      return propertySignatures === ast.propertySignatures && indexSignatures === ast.indexSignatures ?
+        ast :
+        new TypeLiteral(propertySignatures, indexSignatures, createJSONIdentifierAnnotation(ast))
+    }
+    case "Union": {
+      const types = changeMap(ast.types, encodedAST)
+      return types === ast.types ? ast : Union.make(ast.types.map(encodedAST), createJSONIdentifierAnnotation(ast))
+    }
     case "Suspend":
-      return createSuspend(() => from(ast.f()), preserveIdentifierAnnotation(ast))
+      return new Suspend(() => encodedAST(ast.f()), createJSONIdentifierAnnotation(ast))
     case "Refinement":
-    case "Transform":
-      return from(ast.from)
+    case "Transformation":
+      return encodedAST(ast.from)
   }
   return ast
 }
 
-const toStringMemoSet = globalValue(
-  Symbol.for("@effect/schema/AST/toStringMemoSet"),
-  () => new WeakSet<AST>()
-)
-
-const containerASTTags = {
-  Declaration: true,
-  Refinement: true,
-  Tuple: true,
-  TypeLiteral: true,
-  Union: true,
-  Suspend: true,
-  Transform: true
+const toJSONAnnotations = (annotations: Annotations): object => {
+  const out: Record<string, unknown> = {}
+  for (const k of Object.getOwnPropertySymbols(annotations)) {
+    out[String(k)] = annotations[k]
+  }
+  return out
 }
 
-const isContainerAST = (ast: object): ast is
-  | Declaration
-  | Refinement
-  | Tuple
-  | TypeLiteral
-  | Union
-  | Suspend
-  | Transform => "_tag" in ast && Predicate.isString(ast["_tag"]) && ast["_tag"] in containerASTTags
-
-/** @internal */
-export const toString = (ast: AST): string =>
-  JSON.stringify(ast, (key, value) => {
-    if (Predicate.isSymbol(value)) {
-      return String(value)
-    }
-    if (typeof value === "object" && value !== null) {
-      if (isContainerAST(value)) {
-        if (toStringMemoSet.has(value)) {
-          return "<suspended schema>"
-        }
-        toStringMemoSet.add(value)
-        if (isSuspend(value)) {
-          const out = value.f()
-          if (toStringMemoSet.has(out)) {
-            return "<suspended schema>"
-          }
-          toStringMemoSet.add(out)
-          return out
-        }
-      } else if (key === "annotations") {
-        const out: Record<string, unknown> = {}
-        for (const k of Internal.ownKeys(value)) {
-          out[String(k)] = value[k]
-        }
-        return out
-      }
-    }
-    return value
-  }, 2)
-
 /**
  * @since 1.0.0
  */
-export const hash = (ast: AST): number => Hash.string(toString(ast))
+export const hash = (ast: AST): number => Hash.string(JSON.stringify(ast, null, 2))
 
 /** @internal */
 export const getCardinality = (ast: AST): number => {
@@ -1793,23 +2219,20 @@ export const getCardinality = (ast: AST): number => {
 }
 
 const sortPropertySignatures = ReadonlyArray.sort(
-  pipe(Number.Order, Order.mapInput((ps: PropertySignature) => getCardinality(ps.type)))
+  Order.mapInput(Number.Order, (ps: PropertySignature) => getCardinality(ps.type))
 )
 
 const sortIndexSignatures = ReadonlyArray.sort(
-  pipe(
-    Number.Order,
-    Order.mapInput((is: IndexSignature) => {
-      switch (getParameterBase(is.parameter)._tag) {
-        case "StringKeyword":
-          return 2
-        case "SymbolKeyword":
-          return 3
-        case "TemplateLiteral":
-          return 1
-      }
-    })
-  )
+  Order.mapInput(Number.Order, (is: IndexSignature) => {
+    switch (getParameterBase(is.parameter)._tag) {
+      case "StringKeyword":
+        return 2
+      case "SymbolKeyword":
+        return 3
+      case "TemplateLiteral":
+        return 1
+    }
+  })
 )
 
 type Weight = readonly [number, number, number]
@@ -1827,10 +2250,8 @@ const maxWeightAll = (weights: ReadonlyArray<Weight>): Weight => weights.reduce(
 /** @internal */
 export const getWeight = (ast: AST): Weight => {
   switch (ast._tag) {
-    case "Tuple": {
-      const y = ast.elements.length
-      const z = Option.isSome(ast.rest) ? ast.rest.value.length : 0
-      return [2, y, z]
+    case "TupleType": {
+      return [2, ast.elements.length, ast.rest.length]
     }
     case "TypeLiteral": {
       const y = ast.propertySignatures.length
@@ -1840,6 +2261,11 @@ export const getWeight = (ast: AST): Weight => {
         [4, y, z]
     }
     case "Declaration": {
+      const annotation = getSurrogateSchemaAnnotation(ast)
+      if (Option.isSome(annotation)) {
+        const [_, y, z] = getWeight(annotation.value)
+        return [6, y, z]
+      }
       return [6, 0, 0]
     }
     case "Suspend":
@@ -1850,7 +2276,7 @@ export const getWeight = (ast: AST): Weight => {
       const [x, y, z] = getWeight(ast.from)
       return [x + 1, y, z]
     }
-    case "Transform":
+    case "Transformation":
       return getWeight(ast.from)
     case "ObjectKeyword":
       return [-2, 0, 0]
@@ -1866,41 +2292,114 @@ const sortUnionMembers: (self: Members<AST>) => Members<AST> = ReadonlyArray.sor
   Order.reverse(Order.mapInput(WeightOrder, getWeight))
 ) as any
 
-const unify = (candidates: ReadonlyArray<AST>): Array<AST> => {
-  let out = pipe(
-    candidates,
-    ReadonlyArray.flatMap((ast: AST): ReadonlyArray<AST> => {
-      switch (ast._tag) {
-        case "NeverKeyword":
-          return []
-        case "Union":
-          return ast.types
-        default:
-          return [ast]
+const sortCandidates = ReadonlyArray.sort(
+  Order.mapInput(Number.Order, (ast: AST) => {
+    switch (ast._tag) {
+      case "AnyKeyword":
+        return 0
+      case "UnknownKeyword":
+        return 1
+      case "ObjectKeyword":
+        return 2
+      case "StringKeyword":
+      case "NumberKeyword":
+      case "BooleanKeyword":
+      case "BigIntKeyword":
+      case "SymbolKeyword":
+        return 3
+    }
+    return 4
+  })
+)
+
+const literalMap = {
+  string: "StringKeyword",
+  number: "NumberKeyword",
+  boolean: "BooleanKeyword",
+  bigint: "BigIntKeyword"
+} as const
+
+/** @internal */
+export const unify = (candidates: ReadonlyArray<AST>): Array<AST> => {
+  const cs = sortCandidates(candidates)
+  const out: Array<AST> = []
+  const uniques: { [K in AST["_tag"] | "{}"]?: AST } = {}
+  const literals: Array<LiteralValue | symbol> = []
+  for (const ast of cs) {
+    switch (ast._tag) {
+      case "NeverKeyword":
+        break
+      case "AnyKeyword":
+        return [anyKeyword]
+      case "UnknownKeyword":
+        return [unknownKeyword]
+      // uniques
+      case "ObjectKeyword":
+      case "UndefinedKeyword":
+      case "VoidKeyword":
+      case "StringKeyword":
+      case "NumberKeyword":
+      case "BooleanKeyword":
+      case "BigIntKeyword":
+      case "SymbolKeyword": {
+        if (!uniques[ast._tag]) {
+          uniques[ast._tag] = ast
+          out.push(ast)
+        }
+        break
       }
-    })
-  )
-  if (out.some(isAnyKeyword)) {
-    return [anyKeyword]
-  }
-  if (out.some(isUnknownKeyword)) {
-    return [unknownKeyword]
-  }
-  let i: number
-  if ((i = out.findIndex(isStringKeyword)) !== -1) {
-    out = out.filter((m, j) => j === i || (!isStringKeyword(m) && !(isLiteral(m) && typeof m.literal === "string")))
-  }
-  if ((i = out.findIndex(isNumberKeyword)) !== -1) {
-    out = out.filter((m, j) => j === i || (!isNumberKeyword(m) && !(isLiteral(m) && typeof m.literal === "number")))
-  }
-  if ((i = out.findIndex(isBooleanKeyword)) !== -1) {
-    out = out.filter((m, j) => j === i || (!isBooleanKeyword(m) && !(isLiteral(m) && typeof m.literal === "boolean")))
-  }
-  if ((i = out.findIndex(isBigIntKeyword)) !== -1) {
-    out = out.filter((m, j) => j === i || (!isBigIntKeyword(m) && !(isLiteral(m) && typeof m.literal === "bigint")))
-  }
-  if ((i = out.findIndex(isSymbolKeyword)) !== -1) {
-    out = out.filter((m, j) => j === i || (!isSymbolKeyword(m) && !isUniqueSymbol(m)))
+      case "Literal": {
+        const type = typeof ast.literal
+        switch (type) {
+          case "string":
+          case "number":
+          case "bigint":
+          case "boolean": {
+            const _tag = literalMap[type]
+            if (!uniques[_tag] && !literals.includes(ast.literal)) {
+              literals.push(ast.literal)
+              out.push(ast)
+            }
+            break
+          }
+          // null
+          case "object": {
+            if (!literals.includes(ast.literal)) {
+              literals.push(ast.literal)
+              out.push(ast)
+            }
+            break
+          }
+        }
+        break
+      }
+      case "UniqueSymbol": {
+        if (!uniques["SymbolKeyword"] && !literals.includes(ast.symbol)) {
+          literals.push(ast.symbol)
+          out.push(ast)
+        }
+        break
+      }
+      case "TupleType": {
+        if (!uniques["ObjectKeyword"]) {
+          out.push(ast)
+        }
+        break
+      }
+      case "TypeLiteral": {
+        if (ast.propertySignatures.length === 0 && ast.indexSignatures.length === 0) {
+          if (!uniques["{}"]) {
+            uniques["{}"] = ast
+            out.push(ast)
+          }
+        } else if (!uniques["ObjectKeyword"]) {
+          out.push(ast)
+        }
+        break
+      }
+      default:
+        out.push(ast)
+    }
   }
   return out
 }
@@ -1950,11 +2449,11 @@ const equals = (self: AST, that: AST) => {
     case "Enums":
       return isEnums(that) && equalsEnums(that.enums, self.enums)
     case "Refinement":
-    case "Tuple":
+    case "TupleType":
     case "TypeLiteral":
     case "Union":
     case "Suspend":
-    case "Transform":
+    case "Transformation":
     case "Declaration":
       return self === that
   }
@@ -1964,9 +2463,16 @@ const intersection = ReadonlyArray.intersectionWith(equals)
 
 const _keyof = (ast: AST): Array<AST> => {
   switch (ast._tag) {
+    case "Declaration": {
+      const annotation = getSurrogateSchemaAnnotation(ast)
+      if (Option.isSome(annotation)) {
+        return _keyof(annotation.value)
+      }
+      break
+    }
     case "TypeLiteral":
       return ast.propertySignatures.map((p): AST =>
-        Predicate.isSymbol(p.name) ? createUniqueSymbol(p.name) : createLiteral(p.name)
+        Predicate.isSymbol(p.name) ? new UniqueSymbol(p.name) : new Literal(p.name)
       ).concat(ast.indexSignatures.map((is) => getParameterBase(is.parameter)))
     case "Suspend":
       return _keyof(ast.f())
@@ -1975,44 +2481,44 @@ const _keyof = (ast: AST): Array<AST> => {
         (out: Array<AST>, ast) => intersection(out, _keyof(ast)),
         _keyof(ast.types[0])
       )
-    case "Transform":
+    case "Transformation":
       return _keyof(ast.to)
   }
-  throw new Error(`keyof: unsupported schema (${format(ast)})`)
+  throw new Error(`keyof: unsupported schema (${ast})`)
 }
 
 /** @internal */
-export const compose = (ab: AST, cd: AST): AST => createTransform(ab, cd, composeTransformation)
+export const compose = (ab: AST, cd: AST): AST => new Transformation(ab, cd, composeTransformation)
 
 /** @internal */
 export const rename = (ast: AST, mapping: { readonly [K in PropertyKey]?: PropertyKey }): AST => {
   switch (ast._tag) {
     case "TypeLiteral": {
-      const propertySignatureTransforms: Array<PropertySignatureTransform> = []
-      for (const key of Internal.ownKeys(mapping)) {
+      const propertySignatureTransformations: Array<PropertySignatureTransformation> = []
+      for (const key of _util.ownKeys(mapping)) {
         const name = mapping[key]
         if (name !== undefined) {
-          propertySignatureTransforms.push(createPropertySignatureTransform(
-            key,
-            name,
-            createFinalPropertySignatureTransformation(
+          propertySignatureTransformations.push(
+            new PropertySignatureTransformation(
+              key,
+              name,
               identity,
               identity
             )
-          ))
+          )
         }
       }
-      if (propertySignatureTransforms.length === 0) {
+      if (propertySignatureTransformations.length === 0) {
         return ast
       }
-      return createTransform(
+      return new Transformation(
         ast,
-        createTypeLiteral(
+        new TypeLiteral(
           ast.propertySignatures.map((ps) => {
             const name = mapping[ps.name]
-            return createPropertySignature(
+            return new PropertySignature(
               name === undefined ? ps.name : name,
-              to(ps.type),
+              typeAST(ps.type),
               ps.isOptional,
               ps.isReadonly,
               ps.annotations
@@ -2020,111 +2526,19 @@ export const rename = (ast: AST, mapping: { readonly [K in PropertyKey]?: Proper
           }),
           ast.indexSignatures
         ),
-        createTypeLiteralTransformation(propertySignatureTransforms)
+        new TypeLiteralTransformation(propertySignatureTransformations)
       )
     }
     case "Suspend":
-      return createSuspend(() => rename(ast.f(), mapping))
-    case "Transform":
-      return compose(ast, rename(to(ast), mapping))
-  }
-  throw new Error(`rename: cannot rename (${format(ast)})`)
-}
-
-const formatTransformation = (from: string, to: string): string => `(${from} <-> ${to})`
-
-/**
- * @category formatting
- * @since 1.0.0
- */
-export const format = (ast: AST, verbose: boolean = false): string => {
-  switch (ast._tag) {
-    case "StringKeyword":
-    case "NumberKeyword":
-    case "BooleanKeyword":
-    case "BigIntKeyword":
-    case "UndefinedKeyword":
-    case "SymbolKeyword":
-    case "ObjectKeyword":
-    case "AnyKeyword":
-    case "UnknownKeyword":
-    case "VoidKeyword":
-    case "NeverKeyword":
-      return Option.getOrElse(getExpected(ast, verbose), () => ast._tag)
-    case "Literal":
-      return Option.getOrElse(getExpected(ast, verbose), () => formatUnknown(ast.literal))
-    case "UniqueSymbol":
-      return Option.getOrElse(getExpected(ast, verbose), () => formatUnknown(ast.symbol))
-    case "Union":
-      return Option.getOrElse(
-        getExpected(ast, verbose),
-        () => ast.types.map((member) => format(member)).join(" | ")
-      )
-    case "TemplateLiteral":
-      return Option.getOrElse(getExpected(ast, verbose), () => formatTemplateLiteral(ast))
-    case "Tuple":
-      return Option.getOrElse(getExpected(ast, verbose), () => formatTuple(ast))
-    case "TypeLiteral":
-      return Option.getOrElse(getExpected(ast, verbose), () => formatTypeLiteral(ast))
-    case "Enums":
-      return Option.getOrElse(
-        getExpected(ast, verbose),
-        () => `<enum ${ast.enums.length} value(s): ${ast.enums.map((_, value) => JSON.stringify(value)).join(" | ")}>`
-      )
-    case "Suspend":
-      return getExpected(ast, verbose).pipe(
-        Option.orElse(() =>
-          Option.flatMap(
-            Option.liftThrowable(ast.f)(),
-            (ast) => getExpected(ast, verbose)
-          )
-        ),
-        Option.getOrElse(() => "<suspended schema>")
-      )
-    case "Declaration":
-      return Option.getOrElse(getExpected(ast, verbose), () => "<declaration schema>")
-    case "Refinement":
-      return Option.getOrElse(getExpected(ast, verbose), () => "<refinement schema>")
-    case "Transform":
-      return Option.getOrElse(
-        getExpected(ast, verbose),
-        () => formatTransformation(format(ast.from), format(ast.to))
-      )
-  }
-}
-
-/** @internal */
-export const formatUnknown = (u: unknown): string => {
-  if (Predicate.isString(u)) {
-    return JSON.stringify(u)
-  } else if (
-    Predicate.isNumber(u)
-    || u == null
-    || Predicate.isBoolean(u)
-    || Predicate.isSymbol(u)
-    || Predicate.isDate(u)
-  ) {
-    return String(u)
-  } else if (Predicate.isBigInt(u)) {
-    return String(u) + "n"
-  } else if (
-    !Array.isArray(u)
-    && Predicate.hasProperty(u, "toString")
-    && Predicate.isFunction(u["toString"])
-    && u["toString"] !== Object.prototype.toString
-  ) {
-    return u["toString"]()
-  }
-  try {
-    return JSON.stringify(u)
-  } catch (e) {
-    return String(u)
+      return new Suspend(() => rename(ast.f(), mapping))
+    case "Transformation":
+      return compose(ast, rename(typeAST(ast), mapping))
   }
+  throw new Error(`rename: cannot rename (${ast})`)
 }
 
-const formatTemplateLiteral = (ast: TemplateLiteral): string =>
-  "`" + ast.head + ast.spans.map((span) => formatTemplateLiteralSpan(span) + span.literal).join("") +
-  "`"
+const formatKeyword = (ast: AST, verbose: boolean = false): string =>
+  Option.getOrElse(getExpected(ast, verbose), () => ast._tag)
 
 const getExpected = (ast: AST, verbose: boolean): Option.Option<string> => {
   if (verbose) {
@@ -2139,67 +2553,10 @@ const getExpected = (ast: AST, verbose: boolean): Option.Option<string> => {
           onSome: (description) => Option.some(`${identifier} (${description})`)
         })
     })
-  }
-  return getIdentifierAnnotation(ast).pipe(
-    Option.orElse(() => getTitleAnnotation(ast)),
-    Option.orElse(() => getDescriptionAnnotation(ast))
-  )
-}
-
-const formatTuple = (ast: Tuple): string => {
-  const formattedElements = ast.elements.map((element) => format(element.type) + (element.isOptional ? "?" : ""))
-    .join(", ")
-  return Option.match(ast.rest, {
-    onNone: () => "readonly [" + formattedElements + "]",
-    onSome: ([head, ...tail]) => {
-      const formattedHead = format(head)
-      const wrappedHead = formattedHead.includes(" | ") ? "(" + formattedHead + ")" : formattedHead
-
-      if (tail.length > 0) {
-        const formattedTail = tail.map((ast) => format(ast)).join(", ")
-        if (ast.elements.length > 0) {
-          return `readonly [${formattedElements}, ...${wrappedHead}[], ${formattedTail}]`
-        } else {
-          return `readonly [...${wrappedHead}[], ${formattedTail}]`
-        }
-      } else {
-        if (ast.elements.length > 0) {
-          return `readonly [${formattedElements}, ...${wrappedHead}[]]`
-        } else {
-          return `ReadonlyArray<${formattedHead}>`
-        }
-      }
-    }
-  })
-}
-
-const formatTypeLiteral = (ast: TypeLiteral): string => {
-  const formattedPropertySignatures = ast.propertySignatures.map((ps) =>
-    String(ps.name) + (ps.isOptional ? "?" : "") + ": " + format(ps.type)
-  ).join("; ")
-  if (ast.indexSignatures.length > 0) {
-    const formattedIndexSignatures = ast.indexSignatures.map((is) =>
-      `[x: ${format(getParameterBase(is.parameter))}]: ${format(is.type)}`
-    ).join("; ")
-    if (ast.propertySignatures.length > 0) {
-      return `{ ${formattedPropertySignatures}; ${formattedIndexSignatures} }`
-    } else {
-      return `{ ${formattedIndexSignatures} }`
-    }
   } else {
-    if (ast.propertySignatures.length > 0) {
-      return `{ ${formattedPropertySignatures} }`
-    } else {
-      return "{}"
-    }
-  }
-}
-
-const formatTemplateLiteralSpan = (span: TemplateLiteralSpan): string => {
-  switch (span.type._tag) {
-    case "StringKeyword":
-      return "${string}"
-    case "NumberKeyword":
-      return "${number}"
+    return getIdentifierAnnotation(ast).pipe(
+      Option.orElse(() => getTitleAnnotation(ast)),
+      Option.orElse(() => getDescriptionAnnotation(ast))
+    )
   }
 }
diff --git a/src/Arbitrary.ts b/src/Arbitrary.ts
index 64c9548609d463969c2cc14b8965de8636eae1ff..28ad369c78bcd44d554bdf13f5b9f91c79713b69 100644
--- a/src/Arbitrary.ts
+++ b/src/Arbitrary.ts
@@ -7,11 +7,10 @@ import * as Predicate from "effect/Predicate"
 import * as ReadonlyArray from "effect/ReadonlyArray"
 import type * as FastCheck from "fast-check"
 import * as AST from "./AST.js"
-import * as Internal from "./internal/ast.js"
-import * as filters from "./internal/filters.js"
-import * as hooks from "./internal/hooks.js"
-import * as InternalSchema from "./internal/schema.js"
-import * as Parser from "./Parser.js"
+import * as _filters from "./internal/filters.js"
+import * as _hooks from "./internal/hooks.js"
+import * as _schema from "./internal/schema.js"
+import * as _util from "./internal/util.js"
 import type * as Schema from "./Schema.js"
 
 /**
@@ -26,7 +25,7 @@ export interface Arbitrary<A> {
  * @category hooks
  * @since 1.0.0
  */
-export const ArbitraryHookId: unique symbol = hooks.ArbitraryHookId
+export const ArbitraryHookId: unique symbol = _hooks.ArbitraryHookId
 
 /**
  * @category hooks
@@ -40,8 +39,7 @@ export type ArbitraryHookId = typeof ArbitraryHookId
  */
 export const arbitrary =
   <A>(handler: (...args: ReadonlyArray<Arbitrary<any>>) => Arbitrary<A>) =>
-  <I, R>(self: Schema.Schema<A, I, R>): Schema.Schema<A, I, R> =>
-    InternalSchema.make(AST.setAnnotation(self.ast, ArbitraryHookId, handler))
+  <I, R>(self: Schema.Schema<A, I, R>): Schema.Schema<A, I, R> => self.annotations({ [ArbitraryHookId]: handler })
 
 /**
  * Returns a fast-check Arbitrary for the `A` type of the provided schema.
@@ -102,7 +100,7 @@ const go = (ast: AST.AST, options: Options): Arbitrary<any> => {
   }
   switch (ast._tag) {
     case "Declaration": {
-      throw new Error(`cannot build an Arbitrary for a declaration without annotations (${AST.format(ast)})`)
+      throw new Error(`cannot build an Arbitrary for a declaration without annotations (${ast})`)
     }
     case "Literal":
       return (fc) => fc.constant(ast.literal)
@@ -172,7 +170,7 @@ const go = (ast: AST.AST, options: Options): Arbitrary<any> => {
         return fc.tuple(...components).map((spans) => spans.join(""))
       }
     }
-    case "Tuple": {
+    case "TupleType": {
       const elements: Array<Arbitrary<any>> = []
       let hasOptionals = false
       for (const element of ast.elements) {
@@ -181,7 +179,7 @@ const go = (ast: AST.AST, options: Options): Arbitrary<any> => {
           hasOptionals = true
         }
       }
-      const rest = Option.map(ast.rest, ReadonlyArray.map((e) => go(e, options)))
+      const rest = ast.rest.map((e) => go(e, options))
       return (fc) => {
         // ---------------------------------------------
         // handle elements
@@ -206,8 +204,8 @@ const go = (ast: AST.AST, options: Options): Arbitrary<any> => {
         // ---------------------------------------------
         // handle rest element
         // ---------------------------------------------
-        if (Option.isSome(rest)) {
-          const [head, ...tail] = rest.value
+        if (ReadonlyArray.isNonEmptyReadonlyArray(rest)) {
+          const [head, ...tail] = rest
           const arb = head(fc)
           const constraints = options.constraints
           output = output.chain((as) => {
@@ -280,13 +278,13 @@ const go = (ast: AST.AST, options: Options): Arbitrary<any> => {
     }
     case "Refinement": {
       const from = getRefinementFromArbitrary(ast, options)
-      return (fc) => from(fc).filter((a) => Option.isNone(ast.filter(a, Parser.defaultParseOption, ast)))
+      return (fc) => from(fc).filter((a) => Option.isNone(ast.filter(a, AST.defaultParseOption, ast)))
     }
     case "Suspend": {
-      const get = Internal.memoizeThunk(() => go(ast.f(), { ...options, isSuspend: true }))
+      const get = _util.memoizeThunk(() => go(ast.f(), { ...options, isSuspend: true }))
       return (fc) => fc.constant(null).chain(() => get()(fc))
     }
-    case "Transform":
+    case "Transformation":
       return go(ast.to, options)
   }
 }
@@ -371,15 +369,15 @@ export const getConstraints = (ast: AST.Refinement): Constraints | undefined =>
   const jsonSchema: any = ast.annotations[AST.JSONSchemaAnnotationId]
   switch (TypeAnnotationId) {
     // number
-    case filters.GreaterThanTypeId:
-    case filters.GreaterThanOrEqualToTypeId:
+    case _filters.GreaterThanTypeId:
+    case _filters.GreaterThanOrEqualToTypeId:
       return numberConstraints({ min: jsonSchema.exclusiveMinimum ?? jsonSchema.minimum })
-    case filters.LessThanTypeId:
-    case filters.LessThanOrEqualToTypeId:
+    case _filters.LessThanTypeId:
+    case _filters.LessThanOrEqualToTypeId:
       return numberConstraints({ max: jsonSchema.exclusiveMaximum ?? jsonSchema.maximum })
-    case filters.IntTypeId:
+    case _filters.IntTypeId:
       return integerConstraints({})
-    case filters.BetweenTypeId: {
+    case _filters.BetweenTypeId: {
       const min = jsonSchema.minimum
       const max = jsonSchema.maximum
       const constraints: NumberConstraints["constraints"] = {}
@@ -392,17 +390,17 @@ export const getConstraints = (ast: AST.Refinement): Constraints | undefined =>
       return numberConstraints(constraints)
     }
     // bigint
-    case filters.GreaterThanBigintTypeId:
-    case filters.GreaterThanOrEqualToBigintTypeId: {
+    case _filters.GreaterThanBigintTypeId:
+    case _filters.GreaterThanOrEqualToBigintTypeId: {
       const params: any = ast.annotations[TypeAnnotationId]
       return bigintConstraints({ min: params.min })
     }
-    case filters.LessThanBigintTypeId:
-    case filters.LessThanOrEqualToBigintTypeId: {
+    case _filters.LessThanBigintTypeId:
+    case _filters.LessThanOrEqualToBigintTypeId: {
       const params: any = ast.annotations[TypeAnnotationId]
       return bigintConstraints({ max: params.max })
     }
-    case filters.BetweenBigintTypeId: {
+    case _filters.BetweenBigintTypeId: {
       const params: any = ast.annotations[TypeAnnotationId]
       const min = params.min
       const max = params.max
@@ -416,18 +414,18 @@ export const getConstraints = (ast: AST.Refinement): Constraints | undefined =>
       return bigintConstraints(constraints)
     }
     // string
-    case filters.MinLengthTypeId:
+    case _filters.MinLengthTypeId:
       return stringConstraints({ minLength: jsonSchema.minLength })
-    case filters.MaxLengthTypeId:
+    case _filters.MaxLengthTypeId:
       return stringConstraints({ maxLength: jsonSchema.maxLength })
-    case filters.LengthTypeId:
+    case _filters.LengthTypeId:
       return stringConstraints({ minLength: jsonSchema.minLength, maxLength: jsonSchema.maxLength })
     // array
-    case filters.MinItemsTypeId:
+    case _filters.MinItemsTypeId:
       return arrayConstraints({ minLength: jsonSchema.minItems })
-    case filters.MaxItemsTypeId:
+    case _filters.MaxItemsTypeId:
       return arrayConstraints({ maxLength: jsonSchema.maxItems })
-    case filters.ItemsCountTypeId:
+    case _filters.ItemsCountTypeId:
       return arrayConstraints({ minLength: jsonSchema.minItems, maxLength: jsonSchema.maxItems })
   }
 }
diff --git a/src/ArrayFormatter.ts b/src/ArrayFormatter.ts
index 44ef88add40797703633a13101b3dbbcbb973376..f60caa911953f83931607c773c69e46bdaeb254b 100644
--- a/src/ArrayFormatter.ts
+++ b/src/ArrayFormatter.ts
@@ -2,9 +2,8 @@
  * @since 1.0.0
  */
 
-import * as Option from "effect/Option"
+import * as Effect from "effect/Effect"
 import * as ReadonlyArray from "effect/ReadonlyArray"
-import * as AST from "./AST.js"
 import type * as ParseResult from "./ParseResult.js"
 import * as TreeFormatter from "./TreeFormatter.js"
 
@@ -18,84 +17,96 @@ export interface Issue {
   readonly message: string
 }
 
+/**
+ * @category formatting
+ * @since 1.0.0
+ */
+export const formatIssueEffect = (issue: ParseResult.ParseIssue): Effect.Effect<Array<Issue>> => go(issue)
+
+/**
+ * @category formatting
+ * @since 1.0.0
+ */
+export const formatIssue = (issue: ParseResult.ParseIssue): Array<Issue> => Effect.runSync(formatIssueEffect(issue))
+
+/**
+ * @category formatting
+ * @since 1.0.0
+ */
+export const formatErrorEffect = (error: ParseResult.ParseError): Effect.Effect<Array<Issue>> =>
+  formatIssueEffect(error.error)
+
+/**
+ * @category formatting
+ * @since 1.0.0
+ */
+export const formatError = (error: ParseResult.ParseError): Array<Issue> => formatIssue(error.error)
+
 const go = (
   e: ParseResult.ParseIssue | ParseResult.Missing | ParseResult.Unexpected,
   path: ReadonlyArray<PropertyKey> = []
-): Array<Issue> => {
+): Effect.Effect<Array<Issue>> => {
   const _tag = e._tag
   switch (_tag) {
     case "Type":
-      return [{ _tag, path, message: TreeFormatter.formatTypeMessage(e) }]
+      return Effect.map(
+        TreeFormatter.formatTypeMessage(e),
+        (message) => [{ _tag, path, message }]
+      )
     case "Forbidden":
-      return [{ _tag, path, message: TreeFormatter.formatForbiddenMessage(e) }]
+      return Effect.succeed([{ _tag, path, message: TreeFormatter.formatForbiddenMessage(e) }])
     case "Unexpected":
-      return [{ _tag, path, message: `is unexpected, expected ${AST.format(e.ast, true)}` }]
+      return Effect.succeed([{ _tag, path, message: `is unexpected, expected ${e.ast.toString(true)}` }])
     case "Missing":
-      return [{ _tag, path, message: "is missing" }]
+      return Effect.succeed([{ _tag, path, message: "is missing" }])
     case "Union":
-      return Option.match(TreeFormatter.getMessage(e), {
-        onNone: () =>
-          ReadonlyArray.flatMap(e.errors, (e) => {
-            switch (e._tag) {
-              case "Member":
-                return go(e.error, path)
-              default:
-                return go(e, path)
-            }
-          }),
-        onSome: (message) => [{ _tag, path, message }]
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () =>
+          Effect.map(
+            Effect.forEach(e.errors, (e) => {
+              switch (e._tag) {
+                case "Member":
+                  return go(e.error, path)
+                default:
+                  return go(e, path)
+              }
+            }),
+            ReadonlyArray.flatten
+          ),
+        onSuccess: (message) => Effect.succeed([{ _tag, path, message }])
       })
-    case "Tuple":
-      return Option.match(TreeFormatter.getMessage(e), {
-        onNone: () =>
-          ReadonlyArray.flatMap(
-            e.errors,
-            (index) => go(index.error, [...path, index.index])
+    case "TupleType":
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () =>
+          Effect.map(
+            Effect.forEach(e.errors, (index) => go(index.error, [...path, index.index])),
+            ReadonlyArray.flatten
           ),
-        onSome: (message) => [{ _tag, path, message }]
+        onSuccess: (message) => Effect.succeed([{ _tag, path, message }])
       })
     case "TypeLiteral":
-      return Option.match(TreeFormatter.getMessage(e), {
-        onNone: () =>
-          ReadonlyArray.flatMap(
-            e.errors,
-            (key) => go(key.error, [...path, key.key])
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () =>
+          Effect.map(
+            Effect.forEach(e.errors, (key) => go(key.error, [...path, key.key])),
+            ReadonlyArray.flatten
           ),
-        onSome: (message) => [{ _tag, path, message }]
+        onSuccess: (message) => Effect.succeed([{ _tag, path, message }])
       })
-    case "Transform":
-      return Option.match(TreeFormatter.getTransformMessage(e), {
-        onNone: () => go(e.error, path),
-        onSome: (message) => [{ _tag, path, message }]
+    case "Transformation":
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () => go(e.error, path),
+        onSuccess: (message) => Effect.succeed([{ _tag, path, message }])
       })
     case "Refinement":
-      return Option.match(TreeFormatter.getRefinementMessage(e), {
-        onNone: () => go(e.error, path),
-        onSome: (message) => [{ _tag, path, message }]
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () => go(e.error, path),
+        onSuccess: (message) => Effect.succeed([{ _tag, path, message }])
       })
     case "Declaration":
-      return Option.match(TreeFormatter.getMessage(e), {
-        onNone: () => go(e.error, path),
-        onSome: (message) => [{ _tag, path, message }]
+      return Effect.matchEffect(TreeFormatter.getMessage(e), {
+        onFailure: () => go(e.error, path),
+        onSuccess: (message) => Effect.succeed([{ _tag, path, message }])
       })
   }
 }
-
-/**
- * @category formatting
- * @since 1.0.0
- */
-export const formatIssues = (issues: ReadonlyArray.NonEmptyReadonlyArray<ParseResult.ParseIssue>): Array<Issue> =>
-  ReadonlyArray.flatMap(issues, (e) => go(e))
-
-/**
- * @category formatting
- * @since 1.0.0
- */
-export const formatIssue = (error: ParseResult.ParseIssue): Array<Issue> => formatIssues([error])
-
-/**
- * @category formatting
- * @since 1.0.0
- */
-export const formatError = (error: ParseResult.ParseError): Array<Issue> => formatIssue(error.error)
diff --git a/src/Equivalence.ts b/src/Equivalence.ts
index 795dae31e22d0575fc1e323cc66397094bc029ce..f24266438afc00bd41065a9fcf88755365e7b8c9 100644
--- a/src/Equivalence.ts
+++ b/src/Equivalence.ts
@@ -8,9 +8,9 @@ import * as Option from "effect/Option"
 import * as Predicate from "effect/Predicate"
 import * as ReadonlyArray from "effect/ReadonlyArray"
 import * as AST from "./AST.js"
-import * as Internal from "./internal/ast.js"
-import * as hooks from "./internal/hooks.js"
-import * as InternalSchema from "./internal/schema.js"
+import * as _hooks from "./internal/hooks.js"
+import * as _schema from "./internal/schema.js"
+import * as _util from "./internal/util.js"
 import * as Parser from "./Parser.js"
 import type * as Schema from "./Schema.js"
 
@@ -18,7 +18,7 @@ import type * as Schema from "./Schema.js"
  * @category hooks
  * @since 1.0.0
  */
-export const EquivalenceHookId: unique symbol = hooks.EquivalenceHookId
+export const EquivalenceHookId: unique symbol = _hooks.EquivalenceHookId
 
 /**
  * @category hooks
@@ -32,8 +32,7 @@ export type EquivalenceHookId = typeof EquivalenceHookId
  */
 export const equivalence =
   <A>(handler: (...args: ReadonlyArray<Equivalence.Equivalence<any>>) => Equivalence.Equivalence<A>) =>
-  <I, R>(self: Schema.Schema<A, I, R>): Schema.Schema<A, I, R> =>
-    InternalSchema.make(AST.setAnnotation(self.ast, EquivalenceHookId, handler))
+  <I, R>(self: Schema.Schema<A, I, R>): Schema.Schema<A, I, R> => self.annotations({ [EquivalenceHookId]: handler })
 
 /**
  * @category Equivalence
@@ -62,7 +61,7 @@ const go = (ast: AST.AST): Equivalence.Equivalence<any> => {
   switch (ast._tag) {
     case "NeverKeyword":
       throw new Error("cannot build an Equivalence for `never`")
-    case "Transform":
+    case "Transformation":
       return go(ast.to)
     case "Declaration":
     case "Literal":
@@ -83,12 +82,12 @@ const go = (ast: AST.AST): Equivalence.Equivalence<any> => {
     case "Refinement":
       return go(ast.from)
     case "Suspend": {
-      const get = Internal.memoizeThunk(() => go(ast.f()))
+      const get = _util.memoizeThunk(() => go(ast.f()))
       return (a, b) => get()(a, b)
     }
-    case "Tuple": {
+    case "TupleType": {
       const elements = ast.elements.map((element) => go(element.type))
-      const rest = Option.map(ast.rest, ReadonlyArray.map(go))
+      const rest = ast.rest.map(go)
       return Equivalence.make((a, b) => {
         const len = a.length
         if (len !== b.length) {
@@ -106,8 +105,8 @@ const go = (ast: AST.AST): Equivalence.Equivalence<any> => {
         // ---------------------------------------------
         // handle rest element
         // ---------------------------------------------
-        if (Option.isSome(rest)) {
-          const [head, ...tail] = rest.value
+        if (ReadonlyArray.isNonEmptyReadonlyArray(rest)) {
+          const [head, ...tail] = rest
           for (; i < len - tail.length; i++) {
             if (!head(a[i], b[i])) {
               return false
@@ -187,7 +186,7 @@ const go = (ast: AST.AST): Equivalence.Equivalence<any> => {
     }
     case "Union": {
       const searchTree = Parser.getSearchTree(ast.types, true)
-      const ownKeys = Internal.ownKeys(searchTree.keys)
+      const ownKeys = _util.ownKeys(searchTree.keys)
       const len = ownKeys.length
       return Equivalence.make((a, b) => {
         let candidates: Array<AST.AST> = []
@@ -206,7 +205,7 @@ const go = (ast: AST.AST): Equivalence.Equivalence<any> => {
         if (searchTree.otherwise.length > 0) {
           candidates = candidates.concat(searchTree.otherwise)
         }
-        const tuples = candidates.map((ast) => [go(ast), Parser.is(InternalSchema.make(ast))] as const)
+        const tuples = candidates.map((ast) => [go(ast), Parser.is(_schema.make(ast))] as const)
         for (let i = 0; i < tuples.length; i++) {
           const [equivalence, is] = tuples[i]
           if (is(a) && is(b)) {
diff --git a/src/JSONSchema.ts b/src/JSONSchema.ts
index cb5b8ec667bd29ec73bd610a5bf87597230fa15e..6168667bf3df56747f1a57570037e3fa0a546d8c 100644
--- a/src/JSONSchema.ts
+++ b/src/JSONSchema.ts
@@ -4,9 +4,9 @@
 
 import * as Option from "effect/Option"
 import * as Predicate from "effect/Predicate"
-import * as ReadonlyArray from "effect/ReadonlyArray"
 import * as ReadonlyRecord from "effect/ReadonlyRecord"
 import * as AST from "./AST.js"
+import * as _hooks from "./internal/hooks.js"
 import type * as Schema from "./Schema.js"
 
 /**
@@ -246,7 +246,7 @@ export const goRoot = (ast: AST.AST): JsonSchema7Root => {
 }
 
 const goWithIdentifier = (ast: AST.AST, $defs: Record<string, JsonSchema7>): JsonSchema7 => {
-  const identifier = AST.getIdentifierAnnotation(ast)
+  const identifier = AST.getJSONIdentifier(ast)
   return Option.match(identifier, {
     onNone: () => goWithMetaData(ast, $defs),
     onSome: (id) => {
@@ -278,7 +278,7 @@ const goWithMetaData = (ast: AST.AST, $defs: Record<string, JsonSchema7>): JsonS
 const pruneUndefinedKeyword = (ps: AST.PropertySignature): AST.AST => {
   const type = ps.type
   if (ps.isOptional && AST.isUnion(type) && Option.isNone(AST.getJSONSchemaAnnotation(type))) {
-    return AST.createUnion(type.types.filter((type) => !AST.isUndefinedKeyword(type)), type.annotations)
+    return AST.Union.make(type.types.filter((type) => !AST.isUndefinedKeyword(type)), type.annotations)
   }
   return type
 }
@@ -336,12 +336,9 @@ const go = (ast: AST.AST, $defs: Record<string, JsonSchema7>): JsonSchema7 => {
       throw new Error("cannot build a JSON Schema for `bigint` without a JSON Schema annotation")
     case "SymbolKeyword":
       throw new Error("cannot build a JSON Schema for `symbol` without a JSON Schema annotation")
-    case "Tuple": {
+    case "TupleType": {
       const elements = ast.elements.map((e) => goWithIdentifier(e.type, $defs))
-      const rest = Option.map(
-        ast.rest,
-        ReadonlyArray.map((ast) => goWithIdentifier(ast, $defs))
-      )
+      const rest = ast.rest.map((ast) => goWithIdentifier(ast, $defs))
       const output: JsonSchema7Array = { type: "array" }
       // ---------------------------------------------
       // handle elements
@@ -354,8 +351,8 @@ const go = (ast: AST.AST, $defs: Record<string, JsonSchema7>): JsonSchema7 => {
       // ---------------------------------------------
       // handle rest element
       // ---------------------------------------------
-      if (Option.isSome(rest)) {
-        const head = rest.value[0]
+      if (rest.length > 0) {
+        const head = rest[0]
         if (len > 0) {
           output.additionalItems = head
         } else {
@@ -365,7 +362,7 @@ const go = (ast: AST.AST, $defs: Record<string, JsonSchema7>): JsonSchema7 => {
         // ---------------------------------------------
         // handle post rest elements
         // ---------------------------------------------
-        if (rest.value.length > 1) {
+        if (rest.length > 1) {
           throw new Error(
             "Generating a JSON Schema for post-rest elements is not currently supported. You're welcome to contribute by submitting a Pull Request."
           )
@@ -416,10 +413,10 @@ const go = (ast: AST.AST, $defs: Record<string, JsonSchema7>): JsonSchema7 => {
               }
               break
             }
-            throw new Error(`Unsupported index signature parameter (${AST.format(parameter)})`)
+            throw new Error(`Unsupported index signature parameter (${parameter})`)
           }
           case "SymbolKeyword":
-            throw new Error(`Unsupported index signature parameter (${AST.format(parameter)})`)
+            throw new Error(`Unsupported index signature parameter (${parameter})`)
         }
       }
       const propertySignatures = ast.propertySignatures.map((ps) => {
@@ -436,7 +433,7 @@ const go = (ast: AST.AST, $defs: Record<string, JsonSchema7>): JsonSchema7 => {
       // ---------------------------------------------
       for (let i = 0; i < propertySignatures.length; i++) {
         const name = ast.propertySignatures[i].name
-        if (typeof name === "string") {
+        if (Predicate.isString(name)) {
           output.properties[name] = propertySignatures[i]
           // ---------------------------------------------
           // handle optional property signatures
@@ -508,7 +505,7 @@ const go = (ast: AST.AST, $defs: Record<string, JsonSchema7>): JsonSchema7 => {
       }
     }
     case "Suspend": {
-      const identifier = Option.orElse(AST.getIdentifierAnnotation(ast), () => AST.getIdentifierAnnotation(ast.f()))
+      const identifier = Option.orElse(AST.getJSONIdentifier(ast), () => AST.getJSONIdentifier(ast.f()))
       if (Option.isNone(identifier)) {
         throw new Error(
           "Generating a JSON Schema for suspended schemas requires an identifier annotation"
@@ -516,7 +513,7 @@ const go = (ast: AST.AST, $defs: Record<string, JsonSchema7>): JsonSchema7 => {
       }
       return goWithIdentifier(ast.f(), $defs)
     }
-    case "Transform":
+    case "Transformation":
       return goWithIdentifier(ast.to, $defs)
   }
 }
diff --git a/src/ParseResult.ts b/src/ParseResult.ts
index 3ff3e103b0ec210b4d36675a70d4cbea6616059a..eb90ac8a83c88984c054c7e7427d3796c5912bcf 100644
--- a/src/ParseResult.ts
+++ b/src/ParseResult.ts
@@ -9,11 +9,12 @@ import type { LazyArg } from "effect/Function"
 import { dual } from "effect/Function"
 import * as Inspectable from "effect/Inspectable"
 import type * as Option from "effect/Option"
-import type * as ReadonlyArray from "effect/ReadonlyArray"
 import type * as AST from "./AST.js"
-import * as InternalParser from "./internal/parser.js"
+import type * as _parseResult from "./internal/parseResult.js"
 import * as TreeFormatter from "./TreeFormatter.js"
 
+type ParseIssue = _parseResult.ParseIssue
+
 /**
  * @since 1.0.0
  */
@@ -80,295 +81,139 @@ export {
  * @since 1.0.0
  */
 export const fromOption: {
+  (onNone: () => ParseIssue): <A>(self: Option.Option<A>) => Either.Either<A, ParseIssue>
   <A>(self: Option.Option<A>, onNone: () => ParseIssue): Either.Either<A, ParseIssue>
-  <A>(onNone: () => ParseIssue): (self: Option.Option<A>) => Either.Either<A, ParseIssue>
 } = Either.fromOption
 
-/**
- * `ParseIssue` is a type that represents the different types of errors that can occur when decoding/encoding a value.
- *
- * @category model
- * @since 1.0.0
- */
-export type ParseIssue =
-  | Declaration
-  | Refinement
-  | Tuple
-  | TypeLiteral
-  | Union
-  | Transform
-  | Type
-  | Forbidden
-
-/**
- * Error that occurs when a transformation has an error.
- *
- * @category model
- * @since 1.0.0
- */
-export interface Transform {
-  readonly _tag: "Transform"
-  readonly ast: AST.Transform
-  readonly actual: unknown
-  readonly kind: "From" | "Transformation" | "To"
-  readonly error: ParseIssue
-}
-
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const transform = InternalParser.transform
-
-/**
- * The `Type` variant of the `ParseIssue` type represents an error that occurs when the `actual` value is not of the expected type.
- * The `ast` field specifies the expected type, and the `actual` field contains the value that caused the error.
- *
- * @category model
- * @since 1.0.0
- */
-export interface Type {
-  readonly _tag: "Type"
-  readonly ast: AST.AST
-  readonly actual: unknown
-  readonly message: Option.Option<string>
-}
-
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const type = InternalParser.type
-
-/**
- * The `Forbidden` variant of the `ParseIssue` type represents an error that occurs when an Effect is encounter but disallowed from execution.
- *
- * @category model
- * @since 1.0.0
- */
-export interface Forbidden {
-  readonly _tag: "Forbidden"
-  readonly ast: AST.AST
-  readonly actual: unknown
-  readonly message: Option.Option<string>
-}
-
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const forbidden = InternalParser.forbidden
-
-/**
- * Error that occurs when a declaration has an error.
- *
- * @category model
- * @since 1.0.0
- */
-export interface Declaration {
-  readonly _tag: "Declaration"
-  readonly ast: AST.Declaration
-  readonly actual: unknown
-  readonly error: ParseIssue
-}
-
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const declaration = InternalParser.declaration
-
-/**
- * Error that occurs when a refinement has an error.
- *
- * @category model
- * @since 1.0.0
- */
-export interface Refinement {
-  readonly _tag: "Refinement"
-  readonly ast: AST.Refinement<AST.AST>
-  readonly actual: unknown
-  readonly kind: "From" | "Predicate"
-  readonly error: ParseIssue
-}
-
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const refinement = InternalParser.refinement
-
-/**
- * Error that occurs when an array or tuple has an error.
- *
- * @category model
- * @since 1.0.0
- */
-export interface Tuple {
-  readonly _tag: "Tuple"
-  readonly ast: AST.Tuple
-  readonly actual: unknown
-  readonly errors: ReadonlyArray.NonEmptyReadonlyArray<Index>
-}
-
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const tuple = (
-  ast: AST.Tuple,
-  actual: unknown,
-  errors: ReadonlyArray.NonEmptyReadonlyArray<Index>
-): Tuple => ({ _tag: "Tuple", ast, actual, errors })
-
-/**
- * Error that occurs when a type literal or record has an error.
- *
- * @category model
- * @since 1.0.0
- */
-export interface TypeLiteral {
-  readonly _tag: "TypeLiteral"
-  readonly ast: AST.TypeLiteral
-  readonly actual: unknown
-  readonly errors: ReadonlyArray.NonEmptyReadonlyArray<Key>
-}
-
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const typeLiteral = InternalParser.typeLiteral
-
-/**
- * The `Index` error indicates that there was an error at a specific index in an array or tuple.
- *
- * @category model
- * @since 1.0.0
- */
-export interface Index {
-  readonly _tag: "Index"
-  readonly index: number
-  readonly error: ParseIssue | Missing | Unexpected
-}
-
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const index = InternalParser.index
-
-/**
- * The `Key` variant of the `ParseIssue` type represents an error that occurs when a key in a type literal or record is invalid.
- *
- * @category model
- * @since 1.0.0
- */
-export interface Key {
-  readonly _tag: "Key"
-  readonly key: PropertyKey
-  readonly error: ParseIssue | Missing | Unexpected
-}
-
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const key = InternalParser.key
-
-/**
- * Error that occurs when a required key or index is missing.
- *
- * @category model
- * @since 1.0.0
- */
-export interface Missing {
-  readonly _tag: "Missing"
-}
-
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const missing: Missing = InternalParser.missing
-
-/**
- * Error that occurs when an unexpected key or index is present.
- *
- * @category model
- * @since 1.0.0
- */
-export interface Unexpected {
-  readonly _tag: "Unexpected"
-  readonly ast: AST.AST
-}
-
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const unexpected = InternalParser.unexpected
-
-/**
- * Error that occurs when a union has an error.
- *
- * @category model
- * @since 1.0.0
- */
-export interface Union {
-  readonly _tag: "Union"
-  readonly ast: AST.Union
-  readonly actual: unknown
-  readonly errors: ReadonlyArray.NonEmptyReadonlyArray<Type | TypeLiteral | Member>
-}
-
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const union = InternalParser.union
-
-/**
- * Error that occurs when a member in a union has an error.
- *
- * @category model
- * @since 1.0.0
- */
-export interface Member {
-  readonly _tag: "Member"
-  readonly ast: AST.AST
-  readonly error: ParseIssue
-}
-
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const member = InternalParser.member
-
-/**
- * @category optimisation
- * @since 1.0.0
- */
-export const eitherOrUndefined = InternalParser.eitherOrUndefined
-
-/**
- * @category optimisation
- * @since 1.0.0
- */
-export const flatMap = InternalParser.flatMap
-
-/**
- * @category optimisation
- * @since 1.0.0
- */
-export const map = InternalParser.map
+export {
+  /**
+   * Error that occurs when a declaration has an error.
+   *
+   * @category model
+   * @since 1.0.0
+   */
+  Declaration,
+  /**
+   * @category optimisation
+   * @since 1.0.0
+   */
+  eitherOrUndefined,
+  /**
+   * @category optimisation
+   * @since 1.0.0
+   */
+  flatMap,
+  /**
+   * The `Forbidden` variant of the `ParseIssue` type represents a forbidden operation, such as when encountering an Effect that is not allowed to execute (e.g., using `runSync`).
+   *
+   * @category model
+   * @since 1.0.0
+   */
+  Forbidden,
+  /**
+   * The `Index` error indicates that there was an error at a specific index in an array or tuple.
+   *
+   * @category model
+   * @since 1.0.0
+   */
+  Index,
+  /**
+   * The `Key` variant of the `ParseIssue` type represents an error that occurs when a key in a type literal or record is invalid.
+   *
+   * @category model
+   * @since 1.0.0
+   */
+  Key,
+  /**
+   * @category optimisation
+   * @since 1.0.0
+   */
+  map,
+  /**
+   * @category optimisation
+   * @since 1.0.0
+   */
+  mapError,
+  /**
+   * Error that occurs when a member in a union has an error.
+   *
+   * @category model
+   * @since 1.0.0
+   */
+  Member,
+  /**
+   * Error that occurs when a required key or index is missing.
+   *
+   * @category model
+   * @since 1.0.0
+   */
+  Missing,
+  /**
+   * @category constructors
+   * @since 1.0.0
+   */
+  missing,
+  /**
+   * Error that occurs when a refinement has an error.
+   *
+   * @category model
+   * @since 1.0.0
+   */
+  Refinement,
+  /**
+   * Error that occurs when a transformation has an error.
+   *
+   * @category model
+   * @since 1.0.0
+   */
+  Transformation,
+  /**
+   * Error that occurs when an array or tuple has an error.
+   *
+   * @category model
+   * @since 1.0.0
+   */
+  Tuple,
+  /**
+   * The `Type` variant of the `ParseIssue` type represents an error that occurs when the `actual` value is not of the expected type.
+   * The `ast` field specifies the expected type, and the `actual` field contains the value that caused the error.
+   *
+   * @category model
+   * @since 1.0.0
+   */
+  Type,
+  /**
+   * Error that occurs when a type literal or record has an error.
+   *
+   * @category model
+   * @since 1.0.0
+   */
+  TypeLiteral,
+  /**
+   * Error that occurs when an unexpected key or index is present.
+   *
+   * @category model
+   * @since 1.0.0
+   */
+  Unexpected,
+  /**
+   * Error that occurs when a union has an error.
+   *
+   * @category model
+   * @since 1.0.0
+   */
+  Union
+} from "./internal/parseResult.js"
 
-/**
- * @category optimisation
- * @since 1.0.0
- */
-export const mapError = InternalParser.mapError
+export type {
+  /**
+   * `ParseIssue` is a type that represents the different types of errors that can occur when decoding/encoding a value.
+   *
+   * @category model
+   * @since 1.0.0
+   */
+  ParseIssue
+} from "./internal/parseResult.js"
 
 /**
  * @category optimisation
diff --git a/src/Parser.ts b/src/Parser.ts
index 15c6428fc95b19a1917b8279c2d19d89f3ca39aa..425b7161c49c9c4dffce4b84ed2be64d11c217c4 100644
--- a/src/Parser.ts
+++ b/src/Parser.ts
@@ -10,8 +10,8 @@ import * as Predicate from "effect/Predicate"
 import * as ReadonlyArray from "effect/ReadonlyArray"
 import type { Concurrency, Mutable } from "effect/Types"
 import * as AST from "./AST.js"
-import * as Internal from "./internal/ast.js"
-import * as InternalParser from "./internal/parser.js"
+import * as _parseResult from "./internal/parseResult.js"
+import * as _util from "./internal/util.js"
 import type * as ParseResult from "./ParseResult.js"
 import type * as Schema from "./Schema.js"
 import * as TreeFormatter from "./TreeFormatter.js"
@@ -209,7 +209,7 @@ export const decode: <A, I, R>(
 export const validateSync = <A, I, R>(
   schema: Schema.Schema<A, I, R>,
   options?: AST.ParseOptions
-): (u: unknown, overrideOptions?: AST.ParseOptions) => A => getSync(AST.to(schema.ast), true, options)
+): (u: unknown, overrideOptions?: AST.ParseOptions) => A => getSync(AST.typeAST(schema.ast), true, options)
 
 /**
  * @category validation
@@ -218,7 +218,8 @@ export const validateSync = <A, I, R>(
 export const validateOption = <A, I, R>(
   schema: Schema.Schema<A, I, R>,
   options?: AST.ParseOptions
-): (u: unknown, overrideOptions?: AST.ParseOptions) => Option.Option<A> => getOption(AST.to(schema.ast), true, options)
+): (u: unknown, overrideOptions?: AST.ParseOptions) => Option.Option<A> =>
+  getOption(AST.typeAST(schema.ast), true, options)
 
 /**
  * @category validation
@@ -228,7 +229,7 @@ export const validateEither = <A, I, R>(
   schema: Schema.Schema<A, I, R>,
   options?: AST.ParseOptions
 ): (u: unknown, overrideOptions?: AST.ParseOptions) => Either.Either<A, ParseResult.ParseIssue> =>
-  getEither(AST.to(schema.ast), true, options)
+  getEither(AST.typeAST(schema.ast), true, options)
 
 /**
  * @category validation
@@ -250,14 +251,14 @@ export const validate = <A, I, R>(
   schema: Schema.Schema<A, I, R>,
   options?: AST.ParseOptions
 ): (a: unknown, overrideOptions?: AST.ParseOptions) => Effect.Effect<A, ParseResult.ParseIssue, R> =>
-  getEffect(AST.to(schema.ast), true, options)
+  getEffect(AST.typeAST(schema.ast), true, options)
 
 /**
  * @category validation
  * @since 1.0.0
  */
 export const is = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: AST.ParseOptions) => {
-  const parser = goMemo(AST.to(schema.ast), true)
+  const parser = goMemo(AST.typeAST(schema.ast), true)
   return (u: unknown, overrideOptions?: AST.ParseOptions): u is A =>
     Either.isRight(parser(u, { ...mergeParseOptions(options, overrideOptions), isExact: true }) as any)
 }
@@ -267,7 +268,7 @@ export const is = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: AST.ParseO
  * @since 1.0.0
  */
 export const asserts = <A, I, R>(schema: Schema.Schema<A, I, R>, options?: AST.ParseOptions) => {
-  const parser = goMemo(AST.to(schema.ast), true)
+  const parser = goMemo(AST.typeAST(schema.ast), true)
   return (u: unknown, overrideOptions?: AST.ParseOptions): asserts u is A => {
     const result: Either.Either<any, ParseResult.ParseIssue> = parser(u, {
       ...mergeParseOptions(options, overrideOptions),
@@ -334,11 +335,6 @@ interface Parser {
   (i: any, options?: InternalOptions): Effect.Effect<any, ParseResult.ParseIssue, any>
 }
 
-/**
- * @since 1.0.0"
- */
-export const defaultParseOption: AST.ParseOptions = {}
-
 const decodeMemoMap = globalValue(
   Symbol.for("@effect/schema/Parser/decodeMemoMap"),
   () => new WeakMap<AST.AST, Parser>()
@@ -372,14 +368,14 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
         const from = goMemo(ast.from, true)
         return (i, options) =>
           handleForbidden(
-            InternalParser.flatMap(
-              InternalParser.mapError(from(i, options), (e) => InternalParser.refinement(ast, i, "From", e)),
+            _parseResult.flatMap(
+              _parseResult.mapError(from(i, options), (e) => new _parseResult.Refinement(ast, i, "From", e)),
               (a) =>
                 Option.match(
-                  ast.filter(a, options ?? defaultParseOption, ast),
+                  ast.filter(a, options ?? AST.defaultParseOption, ast),
                   {
                     onNone: () => Either.right(a),
-                    onSome: (e) => Either.left(InternalParser.refinement(ast, i, "Predicate", e))
+                    onSome: (e) => Either.left(new _parseResult.Refinement(ast, i, "Predicate", e))
                   }
                 )
             ),
@@ -388,33 +384,33 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
             options
           )
       } else {
-        const from = goMemo(AST.to(ast), true)
+        const from = goMemo(AST.typeAST(ast), true)
         const to = goMemo(dropRightRefinement(ast.from), false)
         return (i, options) =>
-          handleForbidden(InternalParser.flatMap(from(i, options), (a) => to(a, options)), ast, i, options)
+          handleForbidden(_parseResult.flatMap(from(i, options), (a) => to(a, options)), ast, i, options)
       }
     }
-    case "Transform": {
+    case "Transformation": {
       const transform = getFinalTransformation(ast.transformation, isDecoding)
       const from = isDecoding ? goMemo(ast.from, true) : goMemo(ast.to, false)
       const to = isDecoding ? goMemo(ast.to, true) : goMemo(ast.from, false)
       return (i1, options) =>
         handleForbidden(
-          InternalParser.flatMap(
-            InternalParser.mapError(
+          _parseResult.flatMap(
+            _parseResult.mapError(
               from(i1, options),
-              (e) => InternalParser.transform(ast, i1, isDecoding ? "From" : "To", e)
+              (e) => new _parseResult.Transformation(ast, i1, isDecoding ? "Encoded" : "Type", e)
             ),
             (a) =>
-              InternalParser.flatMap(
-                InternalParser.mapError(
-                  transform(a, options ?? defaultParseOption, ast),
-                  (e) => InternalParser.transform(ast, i1, "Transformation", e)
+              _parseResult.flatMap(
+                _parseResult.mapError(
+                  transform(a, options ?? AST.defaultParseOption, ast),
+                  (e) => new _parseResult.Transformation(ast, i1, "Transformation", e)
                 ),
                 (i2) =>
-                  InternalParser.mapError(
+                  _parseResult.mapError(
                     to(i2, options),
-                    (e) => InternalParser.transform(ast, i1, isDecoding ? "To" : "From", e)
+                    (e) => new _parseResult.Transformation(ast, i1, isDecoding ? "Type" : "Encoded", e)
                   )
               )
           ),
@@ -429,8 +425,8 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
         : ast.encodeUnknown(...ast.typeParameters)
       return (i, options) =>
         handleForbidden(
-          InternalParser.mapError(parse(i, options ?? defaultParseOption, ast), (e) =>
-            InternalParser.declaration(ast, i, e)),
+          _parseResult.mapError(parse(i, options ?? AST.defaultParseOption, ast), (e) =>
+            new _parseResult.Declaration(ast, i, e)),
           ast,
           i,
           options
@@ -467,19 +463,19 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
       const regex = AST.getTemplateLiteralRegex(ast)
       return fromRefinement(ast, (u): u is any => Predicate.isString(u) && regex.test(u))
     }
-    case "Tuple": {
+    case "TupleType": {
       const elements = ast.elements.map((e) => goMemo(e.type, isDecoding))
-      const rest = Option.map(ast.rest, ReadonlyArray.map((ast) => goMemo(ast, isDecoding)))
+      const rest = ast.rest.map((ast) => goMemo(ast, isDecoding))
       let requiredLen = ast.elements.filter((e) => !e.isOptional).length
-      if (Option.isSome(ast.rest)) {
-        requiredLen += ast.rest.value.length - 1
+      if (ast.rest.length > 0) {
+        requiredLen += ast.rest.length - 1
       }
-      const expectedAST = AST.createUnion(ast.elements.map((_, i) => AST.createLiteral(i)))
+      const expectedAST = AST.Union.make(ast.elements.map((_, i) => new AST.Literal(i)))
       const concurrency = getConcurrency(ast)
       const batching = getBatching(ast)
       return (input: unknown, options) => {
         if (!Array.isArray(input)) {
-          return Either.left(InternalParser.type(ast, input))
+          return Either.left(new _parseResult.Type(ast, input))
         }
         const allErrors = options?.errors === "all"
         const es: Array<[number, ParseResult.Index]> = []
@@ -489,26 +485,26 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
         // ---------------------------------------------
         const len = input.length
         for (let i = len; i <= requiredLen - 1; i++) {
-          const e = InternalParser.index(i, InternalParser.missing)
+          const e = new _parseResult.Index(i, _parseResult.missing)
           if (allErrors) {
             es.push([stepKey++, e])
             continue
           } else {
-            return Either.left(InternalParser.tuple(ast, input, [e]))
+            return Either.left(new _parseResult.Tuple(ast, input, [e]))
           }
         }
 
         // ---------------------------------------------
         // handle excess indexes
         // ---------------------------------------------
-        if (Option.isNone(ast.rest)) {
+        if (ast.rest.length === 0) {
           for (let i = ast.elements.length; i <= len - 1; i++) {
-            const e = InternalParser.index(i, InternalParser.unexpected(expectedAST))
+            const e = new _parseResult.Index(i, new _parseResult.Unexpected(expectedAST))
             if (allErrors) {
               es.push([stepKey++, e])
               continue
             } else {
-              return Either.left(InternalParser.tuple(ast, input, [e]))
+              return Either.left(new _parseResult.Tuple(ast, input, [e]))
             }
           }
         }
@@ -535,16 +531,16 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
           } else {
             const parser = elements[i]
             const te = parser(input[i], options)
-            const eu = InternalParser.eitherOrUndefined(te)
+            const eu = _parseResult.eitherOrUndefined(te)
             if (eu) {
               if (Either.isLeft(eu)) {
                 // the input element is present but is not valid
-                const e = InternalParser.index(i, eu.left)
+                const e = new _parseResult.Index(i, eu.left)
                 if (allErrors) {
                   es.push([stepKey++, e])
                   continue
                 } else {
-                  return Either.left(InternalParser.tuple(ast, input, [e]))
+                  return Either.left(new _parseResult.Tuple(ast, input, [e]))
                 }
               }
               output.push([stepKey++, eu.right])
@@ -558,12 +554,12 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
                 Effect.flatMap(Effect.either(te), (t) => {
                   if (Either.isLeft(t)) {
                     // the input element is present but is not valid
-                    const e = InternalParser.index(index, t.left)
+                    const e = new _parseResult.Index(index, t.left)
                     if (allErrors) {
                       es.push([nk, e])
                       return Effect.unit
                     } else {
-                      return Either.left(InternalParser.tuple(ast, input, [e]))
+                      return Either.left(new _parseResult.Tuple(ast, input, [e]))
                     }
                   }
                   output.push([nk, t.right])
@@ -576,19 +572,19 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
         // ---------------------------------------------
         // handle rest element
         // ---------------------------------------------
-        if (Option.isSome(rest)) {
-          const [head, ...tail] = rest.value
+        if (ReadonlyArray.isNonEmptyReadonlyArray(rest)) {
+          const [head, ...tail] = rest
           for (; i < len - tail.length; i++) {
             const te = head(input[i], options)
-            const eu = InternalParser.eitherOrUndefined(te)
+            const eu = _parseResult.eitherOrUndefined(te)
             if (eu) {
               if (Either.isLeft(eu)) {
-                const e = InternalParser.index(i, eu.left)
+                const e = new _parseResult.Index(i, eu.left)
                 if (allErrors) {
                   es.push([stepKey++, e])
                   continue
                 } else {
-                  return Either.left(InternalParser.tuple(ast, input, [e]))
+                  return Either.left(new _parseResult.Tuple(ast, input, [e]))
                 }
               } else {
                 output.push([stepKey++, eu.right])
@@ -603,12 +599,12 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
                 ({ es, output }: State) =>
                   Effect.flatMap(Effect.either(te), (t) => {
                     if (Either.isLeft(t)) {
-                      const e = InternalParser.index(index, t.left)
+                      const e = new _parseResult.Index(index, t.left)
                       if (allErrors) {
                         es.push([nk, e])
                         return Effect.unit
                       } else {
-                        return Either.left(InternalParser.tuple(ast, input, [e]))
+                        return Either.left(new _parseResult.Tuple(ast, input, [e]))
                       }
                     } else {
                       output.push([nk, t.right])
@@ -627,16 +623,16 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
               continue
             } else {
               const te = tail[j](input[i], options)
-              const eu = InternalParser.eitherOrUndefined(te)
+              const eu = _parseResult.eitherOrUndefined(te)
               if (eu) {
                 if (Either.isLeft(eu)) {
                   // the input element is present but is not valid
-                  const e = InternalParser.index(i, eu.left)
+                  const e = new _parseResult.Index(i, eu.left)
                   if (allErrors) {
                     es.push([stepKey++, e])
                     continue
                   } else {
-                    return Either.left(InternalParser.tuple(ast, input, [e]))
+                    return Either.left(new _parseResult.Tuple(ast, input, [e]))
                   }
                 }
                 output.push([stepKey++, eu.right])
@@ -651,12 +647,12 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
                     Effect.flatMap(Effect.either(te), (t) => {
                       if (Either.isLeft(t)) {
                         // the input element is present but is not valid
-                        const e = InternalParser.index(index, t.left)
+                        const e = new _parseResult.Index(index, t.left)
                         if (allErrors) {
                           es.push([nk, e])
                           return Effect.unit
                         } else {
-                          return Either.left(InternalParser.tuple(ast, input, [e]))
+                          return Either.left(new _parseResult.Tuple(ast, input, [e]))
                         }
                       }
                       output.push([nk, t.right])
@@ -673,7 +669,7 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
         // ---------------------------------------------
         const computeResult = ({ es, output }: State) =>
           ReadonlyArray.isNonEmptyArray(es) ?
-            Either.left(InternalParser.tuple(ast, input, sortByIndex(es))) :
+            Either.left(new _parseResult.Tuple(ast, input, sortByIndex(es))) :
             Either.right(sortByIndex(output))
         if (queue && queue.length > 0) {
           const cqueue = queue
@@ -710,10 +706,10 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
           is.parameter
         ] as const
       )
-      const expectedAST = AST.createUnion(
+      const expectedAST = AST.Union.make(
         ast.indexSignatures.map((is): AST.AST => is.parameter).concat(
-          Internal.ownKeys(expectedKeys).map((key) =>
-            Predicate.isSymbol(key) ? AST.createUniqueSymbol(key) : AST.createLiteral(key)
+          _util.ownKeys(expectedKeys).map((key) =>
+            Predicate.isSymbol(key) ? new AST.UniqueSymbol(key) : new AST.Literal(key)
           )
         )
       )
@@ -722,7 +718,7 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
       const batching = getBatching(ast)
       return (input: unknown, options) => {
         if (!Predicate.isRecord(input)) {
-          return Either.left(InternalParser.type(ast, input))
+          return Either.left(new _parseResult.Type(ast, input))
         }
         const allErrors = options?.errors === "all"
         const es: Array<[number, ParseResult.Key]> = []
@@ -735,17 +731,17 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
         const onExcessPropertyPreserve = options?.onExcessProperty === "preserve"
         const output: any = {}
         if (onExcessPropertyError || onExcessPropertyPreserve) {
-          for (const key of Internal.ownKeys(input)) {
-            const eu = InternalParser.eitherOrUndefined(expected(key, options))!
+          for (const key of _util.ownKeys(input)) {
+            const eu = _parseResult.eitherOrUndefined(expected(key, options))!
             if (Either.isLeft(eu)) {
               // key is unexpected
               if (onExcessPropertyError) {
-                const e = InternalParser.key(key, InternalParser.unexpected(expectedAST))
+                const e = new _parseResult.Key(key, new _parseResult.Unexpected(expectedAST))
                 if (allErrors) {
                   es.push([stepKey++, e])
                   continue
                 } else {
-                  return Either.left(InternalParser.typeLiteral(ast, input, [e]))
+                  return Either.left(new _parseResult.TypeLiteral(ast, input, [e]))
                 }
               } else {
                 // preserve key
@@ -775,26 +771,26 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
             if (ps.isOptional) {
               continue
             } else if (isExact) {
-              const e = InternalParser.key(name, InternalParser.missing)
+              const e = new _parseResult.Key(name, _parseResult.missing)
               if (allErrors) {
                 es.push([stepKey++, e])
                 continue
               } else {
-                return Either.left(InternalParser.typeLiteral(ast, input, [e]))
+                return Either.left(new _parseResult.TypeLiteral(ast, input, [e]))
               }
             }
           }
           const parser = propertySignatures[i][0]
           const te = parser(input[name], options)
-          const eu = InternalParser.eitherOrUndefined(te)
+          const eu = _parseResult.eitherOrUndefined(te)
           if (eu) {
             if (Either.isLeft(eu)) {
-              const e = InternalParser.key(name, hasKey ? eu.left : InternalParser.missing)
+              const e = new _parseResult.Key(name, hasKey ? eu.left : _parseResult.missing)
               if (allErrors) {
                 es.push([stepKey++, e])
                 continue
               } else {
-                return Either.left(InternalParser.typeLiteral(ast, input, [e]))
+                return Either.left(new _parseResult.TypeLiteral(ast, input, [e]))
               }
             }
             output[name] = eu.right
@@ -808,12 +804,12 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
               ({ es, output }: State) =>
                 Effect.flatMap(Effect.either(te), (t) => {
                   if (Either.isLeft(t)) {
-                    const e = InternalParser.key(index, hasKey ? t.left : InternalParser.missing)
+                    const e = new _parseResult.Key(index, hasKey ? t.left : _parseResult.missing)
                     if (allErrors) {
                       es.push([nk, e])
                       return Effect.unit
                     } else {
-                      return Either.left(InternalParser.typeLiteral(ast, input, [e]))
+                      return Either.left(new _parseResult.TypeLiteral(ast, input, [e]))
                     }
                   }
                   output[index] = t.right
@@ -830,26 +826,26 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
           const indexSignature = indexSignatures[i]
           const parameter = indexSignature[0]
           const type = indexSignature[1]
-          const keys = Internal.getKeysForIndexSignature(input, indexSignature[2])
+          const keys = _util.getKeysForIndexSignature(input, indexSignature[2])
           for (const key of keys) {
             // ---------------------------------------------
             // handle keys
             // ---------------------------------------------
-            const keu = InternalParser.eitherOrUndefined(parameter(key, options))
+            const keu = _parseResult.eitherOrUndefined(parameter(key, options))
             if (keu && Either.isRight(keu)) {
               // ---------------------------------------------
               // handle values
               // ---------------------------------------------
               const vpr = type(input[key], options)
-              const veu = InternalParser.eitherOrUndefined(vpr)
+              const veu = _parseResult.eitherOrUndefined(vpr)
               if (veu) {
                 if (Either.isLeft(veu)) {
-                  const e = InternalParser.key(key, veu.left)
+                  const e = new _parseResult.Key(key, veu.left)
                   if (allErrors) {
                     es.push([stepKey++, e])
                     continue
                   } else {
-                    return Either.left(InternalParser.typeLiteral(ast, input, [e]))
+                    return Either.left(new _parseResult.TypeLiteral(ast, input, [e]))
                   }
                 } else {
                   if (!Object.prototype.hasOwnProperty.call(expectedKeys, key)) {
@@ -868,12 +864,12 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
                       Effect.either(vpr),
                       (tv) => {
                         if (Either.isLeft(tv)) {
-                          const e = InternalParser.key(index, tv.left)
+                          const e = new _parseResult.Key(index, tv.left)
                           if (allErrors) {
                             es.push([nk, e])
                             return Effect.unit
                           } else {
-                            return Either.left(InternalParser.typeLiteral(ast, input, [e]))
+                            return Either.left(new _parseResult.TypeLiteral(ast, input, [e]))
                           }
                         } else {
                           if (!Object.prototype.hasOwnProperty.call(expectedKeys, key)) {
@@ -893,7 +889,7 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
         // ---------------------------------------------
         const computeResult = ({ es, output }: State) =>
           ReadonlyArray.isNonEmptyArray(es) ?
-            Either.left(InternalParser.typeLiteral(ast, input, sortByIndex(es))) :
+            Either.left(new _parseResult.TypeLiteral(ast, input, sortByIndex(es))) :
             Either.right(output)
         if (queue && queue.length > 0) {
           const cqueue = queue
@@ -913,7 +909,7 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
     }
     case "Union": {
       const searchTree = getSearchTree(ast.types, isDecoding)
-      const ownKeys = Internal.ownKeys(searchTree.keys)
+      const ownKeys = _util.ownKeys(searchTree.keys)
       const len = ownKeys.length
       const map = new Map<any, Parser>()
       for (let i = 0; i < ast.types.length; i++) {
@@ -939,32 +935,34 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
                   // retrive the minimal set of candidates for decoding
                   candidates = candidates.concat(buckets[literal])
                 } else {
+                  const literals = AST.Union.make(searchTree.keys[name].literals)
                   es.push([
                     stepKey++,
-                    InternalParser.typeLiteral(
-                      AST.createTypeLiteral([
-                        AST.createPropertySignature(name, searchTree.keys[name].ast, false, true)
+                    new _parseResult.TypeLiteral(
+                      new AST.TypeLiteral([
+                        new AST.PropertySignature(name, literals, false, true)
                       ], []),
                       input,
-                      [InternalParser.key(name, InternalParser.type(searchTree.keys[name].ast, input[name]))]
+                      [new _parseResult.Key(name, new _parseResult.Type(literals, input[name]))]
                     )
                   ])
                 }
               } else {
+                const literals = AST.Union.make(searchTree.keys[name].literals)
                 es.push([
                   stepKey++,
-                  InternalParser.typeLiteral(
-                    AST.createTypeLiteral([
-                      AST.createPropertySignature(name, searchTree.keys[name].ast, false, true)
+                  new _parseResult.TypeLiteral(
+                    new AST.TypeLiteral([
+                      new AST.PropertySignature(name, literals, false, true)
                     ], []),
                     input,
-                    [InternalParser.key(name, InternalParser.missing)]
+                    [new _parseResult.Key(name, _parseResult.missing)]
                   )
                 ])
               }
             }
           } else {
-            es.push([stepKey++, InternalParser.type(ast, input)])
+            es.push([stepKey++, new _parseResult.Type(ast, input)])
           }
         }
         if (searchTree.otherwise.length > 0) {
@@ -986,12 +984,12 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
           // the members of a union are ordered based on which one should be decoded first,
           // therefore if one member has added a task, all subsequent members must
           // also add a task to the queue even if they are synchronous
-          const eu = !queue || queue.length === 0 ? InternalParser.eitherOrUndefined(pr) : undefined
+          const eu = !queue || queue.length === 0 ? _parseResult.eitherOrUndefined(pr) : undefined
           if (eu) {
             if (Either.isRight(eu)) {
               return Either.right(eu.right)
             } else {
-              es.push([stepKey++, InternalParser.member(candidate, eu.left)])
+              es.push([stepKey++, new _parseResult.Member(candidate, eu.left)])
             }
           } else {
             const nk = stepKey++
@@ -1008,7 +1006,7 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
                       if (Either.isRight(t)) {
                         state.finalResult = Either.right(t.right)
                       } else {
-                        state.es.push([nk, InternalParser.member(candidate, t.left)])
+                        state.es.push([nk, new _parseResult.Member(candidate, t.left)])
                       }
                       return Effect.unit
                     })
@@ -1025,9 +1023,9 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
           ReadonlyArray.isNonEmptyArray(es) ?
             es.length === 1 && es[0][1]._tag === "Type" ?
               Either.left(es[0][1]) :
-              Either.left(InternalParser.union(ast, input, sortByIndex(es))) :
+              Either.left(new _parseResult.Union(ast, input, sortByIndex(es))) :
             // this should never happen
-            Either.left(InternalParser.type(AST.neverKeyword, input))
+            Either.left(new _parseResult.Type(AST.neverKeyword, input))
 
         if (queue && queue.length > 0) {
           const cqueue = queue
@@ -1048,14 +1046,14 @@ const go = (ast: AST.AST, isDecoding: boolean): Parser => {
       }
     }
     case "Suspend": {
-      const get = Internal.memoizeThunk(() => goMemo(AST.mergeAnnotations(ast.f(), ast.annotations), isDecoding))
+      const get = _util.memoizeThunk(() => goMemo(AST.annotations(ast.f(), ast.annotations), isDecoding))
       return (a, options) => get()(a, options)
     }
   }
 }
 
 const fromRefinement = <A>(ast: AST.AST, refinement: (u: unknown) => u is A): Parser => (u) =>
-  refinement(u) ? Either.right(u) : Either.left(InternalParser.type(ast, u))
+  refinement(u) ? Either.right(u) : Either.left(new _parseResult.Type(ast, u))
 
 /** @internal */
 export const getLiterals = (
@@ -1063,11 +1061,18 @@ export const getLiterals = (
   isDecoding: boolean
 ): ReadonlyArray<[PropertyKey, AST.Literal]> => {
   switch (ast._tag) {
+    case "Declaration": {
+      const annotation = AST.getSurrogateSchemaAnnotation(ast)
+      if (Option.isSome(annotation)) {
+        return getLiterals(annotation.value, isDecoding)
+      }
+      break
+    }
     case "TypeLiteral": {
       const out: Array<[PropertyKey, AST.Literal]> = []
       for (let i = 0; i < ast.propertySignatures.length; i++) {
         const propertySignature = ast.propertySignatures[i]
-        const type = isDecoding ? AST.from(propertySignature.type) : AST.to(propertySignature.type)
+        const type = isDecoding ? AST.encodedAST(propertySignature.type) : AST.typeAST(propertySignature.type)
         if (AST.isLiteral(type) && !propertySignature.isOptional) {
           out.push([propertySignature.name, type])
         }
@@ -1078,7 +1083,7 @@ export const getLiterals = (
       return getLiterals(ast.from, isDecoding)
     case "Suspend":
       return getLiterals(ast.f(), isDecoding)
-    case "Transform":
+    case "Transformation":
       return getLiterals(isDecoding ? ast.from : ast.to, isDecoding)
   }
   return []
@@ -1105,7 +1110,7 @@ export const getSearchTree = (
   keys: {
     readonly [key: PropertyKey]: {
       buckets: { [literal: string]: ReadonlyArray<AST.AST> }
-      ast: AST.AST // this is for error messages
+      literals: ReadonlyArray<AST.Literal> // this is for error messages
     }
   }
   otherwise: ReadonlyArray<AST.AST>
@@ -1113,7 +1118,7 @@ export const getSearchTree = (
   const keys: {
     [key: PropertyKey]: {
       buckets: { [literal: string]: Array<AST.AST> }
-      ast: AST.AST
+      literals: Array<AST.Literal>
     }
   } = {}
   const otherwise: Array<AST.AST> = []
@@ -1124,17 +1129,17 @@ export const getSearchTree = (
       for (let j = 0; j < tags.length; j++) {
         const [key, literal] = tags[j]
         const hash = String(literal.literal)
-        keys[key] = keys[key] || { buckets: {}, ast: AST.neverKeyword }
+        keys[key] = keys[key] || { buckets: {}, literals: [] }
         const buckets = keys[key].buckets
         if (Object.prototype.hasOwnProperty.call(buckets, hash)) {
           if (j < tags.length - 1) {
             continue
           }
           buckets[hash].push(member)
-          keys[key].ast = AST.createUnion([keys[key].ast, literal])
+          keys[key].literals.push(literal)
         } else {
           buckets[hash] = [member]
-          keys[key].ast = AST.createUnion([keys[key].ast, literal])
+          keys[key].literals.push(literal)
           break
         }
       }
@@ -1153,7 +1158,7 @@ const handleForbidden = <R, A>(
   actual: unknown,
   options: InternalOptions | undefined
 ): Effect.Effect<A, ParseResult.ParseIssue, R> => {
-  const eu = InternalParser.eitherOrUndefined(effect)
+  const eu = _parseResult.eitherOrUndefined(effect)
   if (eu) {
     return eu
   }
@@ -1163,7 +1168,13 @@ const handleForbidden = <R, A>(
   try {
     return Effect.runSync(Effect.either(effect as Effect.Effect<A, ParseResult.ParseIssue>))
   } catch (e) {
-    return Either.left(InternalParser.forbidden(ast, actual, e instanceof Error ? e.message : undefined))
+    return Either.left(
+      new _parseResult.Forbidden(
+        ast,
+        actual,
+        "cannot be be resolved synchronously, this is caused by using runSync on an effect that performs async work"
+      )
+    )
   }
 }
 
@@ -1179,21 +1190,15 @@ function sortByIndex(es: Array<[number, any]>): any {
 // transformations interpreter
 // -------------------------------------------------------------------------------------
 
-const getFinalPropertySignatureTransformation = (
-  transformation: AST.PropertySignatureTransformation,
-  isDecoding: boolean
-) => {
-  switch (transformation._tag) {
-    case "FinalPropertySignatureTransformation":
-      return isDecoding ? transformation.decode : transformation.encode
-  }
-}
-
 /** @internal */
 export const getFinalTransformation = (
-  transformation: AST.Transformation,
+  transformation: AST.TransformationKind,
   isDecoding: boolean
-): (input: any, options: AST.ParseOptions, self: AST.Transform) => Effect.Effect<any, ParseResult.ParseIssue, any> => {
+): (
+  input: any,
+  options: AST.ParseOptions,
+  self: AST.Transformation
+) => Effect.Effect<any, ParseResult.ParseIssue, any> => {
   switch (transformation._tag) {
     case "FinalTransformation":
       return isDecoding ? transformation.decode : transformation.encode
@@ -1210,12 +1215,9 @@ export const getFinalTransformation = (
           const [from, to] = isDecoding ?
             [pst.from, pst.to] :
             [pst.to, pst.from]
-          const transform = getFinalPropertySignatureTransformation(
-            pst.propertySignatureTransformation,
-            isDecoding
-          )
+          const transformation = isDecoding ? pst.decode : pst.encode
           const f = (input: any) => {
-            const o = transform(
+            const o = transformation(
               Object.prototype.hasOwnProperty.call(input, from) ?
                 Option.some(input[from]) :
                 Option.none()
@@ -1226,7 +1228,7 @@ export const getFinalTransformation = (
             }
             return input
           }
-          out = InternalParser.map(out, f)
+          out = _parseResult.map(out, f)
         }
         return out
       }
diff --git a/src/Pretty.ts b/src/Pretty.ts
index b209a9956670e23e3efee5262ff6ac3ce204d154..20c78243e75c26bea470dc8eafd2c93c7f531923 100644
--- a/src/Pretty.ts
+++ b/src/Pretty.ts
@@ -4,9 +4,9 @@
 import * as Option from "effect/Option"
 import * as ReadonlyArray from "effect/ReadonlyArray"
 import * as AST from "./AST.js"
-import * as Internal from "./internal/ast.js"
-import * as hooks from "./internal/hooks.js"
-import * as InternalSchema from "./internal/schema.js"
+import * as _hooks from "./internal/hooks.js"
+import * as _schema from "./internal/schema.js"
+import * as _util from "./internal/util.js"
 import * as Parser from "./Parser.js"
 import type * as Schema from "./Schema.js"
 
@@ -22,7 +22,7 @@ export interface Pretty<To> {
  * @category hooks
  * @since 1.0.0
  */
-export const PrettyHookId: unique symbol = hooks.PrettyHookId
+export const PrettyHookId: unique symbol = _hooks.PrettyHookId
 
 /**
  * @category hooks
@@ -36,8 +36,7 @@ export type PrettyHookId = typeof PrettyHookId
  */
 export const pretty =
   <A>(handler: (...args: ReadonlyArray<Pretty<any>>) => Pretty<A>) =>
-  <I, R>(self: Schema.Schema<A, I, R>): Schema.Schema<A, I, R> =>
-    InternalSchema.make(AST.setAnnotation(self.ast, PrettyHookId, handler))
+  <I, R>(self: Schema.Schema<A, I, R>): Schema.Schema<A, I, R> => self.annotations({ [PrettyHookId]: handler })
 
 /**
  * @category prettify
@@ -59,7 +58,7 @@ const toString = getMatcher((a) => String(a))
 
 const stringify = getMatcher((a) => JSON.stringify(a))
 
-const formatUnknown = getMatcher(AST.formatUnknown)
+const formatUnknown = getMatcher(_util.formatUnknown)
 
 /**
  * @since 1.0.0
@@ -70,7 +69,7 @@ export const match: AST.Match<Pretty<any>> = {
     if (Option.isSome(hook)) {
       return hook.value(...ast.typeParameters.map(go))
     }
-    throw new Error(`cannot build a Pretty for a declaration without annotations (${AST.format(ast)})`)
+    throw new Error(`cannot build a Pretty for a declaration without annotations (${ast})`)
   },
   "VoidKeyword": getMatcher(() => "void(0)"),
   "NeverKeyword": getMatcher(() => {
@@ -93,13 +92,13 @@ export const match: AST.Match<Pretty<any>> = {
   "BooleanKeyword": toString,
   "BigIntKeyword": getMatcher((a) => `${String(a)}n`),
   "Enums": stringify,
-  "Tuple": (ast, go) => {
+  "TupleType": (ast, go) => {
     const hook = getHook(ast)
     if (Option.isSome(hook)) {
       return hook.value()
     }
     const elements = ast.elements.map((e) => go(e.type))
-    const rest = Option.map(ast.rest, ReadonlyArray.map(go))
+    const rest = ast.rest.map(go)
     return (input: ReadonlyArray<unknown>) => {
       const output: Array<string> = []
       let i = 0
@@ -118,8 +117,8 @@ export const match: AST.Match<Pretty<any>> = {
       // ---------------------------------------------
       // handle rest element
       // ---------------------------------------------
-      if (Option.isSome(rest)) {
-        const [head, ...tail] = rest.value
+      if (ReadonlyArray.isNonEmptyReadonlyArray(rest)) {
+        const [head, ...tail] = rest
         for (; i < input.length - tail.length; i++) {
           output.push(head(input[i]))
         }
@@ -167,7 +166,7 @@ export const match: AST.Match<Pretty<any>> = {
       if (indexSignatureTypes.length > 0) {
         for (let i = 0; i < indexSignatureTypes.length; i++) {
           const type = indexSignatureTypes[i]
-          const keys = Internal.getKeysForIndexSignature(input, ast.indexSignatures[i].parameter)
+          const keys = _util.getKeysForIndexSignature(input, ast.indexSignatures[i].parameter)
           for (const key of keys) {
             if (Object.prototype.hasOwnProperty.call(expectedKeys, key)) {
               continue
@@ -185,7 +184,7 @@ export const match: AST.Match<Pretty<any>> = {
     if (Option.isSome(hook)) {
       return hook.value()
     }
-    const types = ast.types.map((ast) => [Parser.is(InternalSchema.make(ast)), go(ast)] as const)
+    const types = ast.types.map((ast) => [Parser.is(_schema.make(ast)), go(ast)] as const)
     return (a) => {
       const index = types.findIndex(([is]) => is(a))
       return types[index][1](a)
@@ -194,7 +193,7 @@ export const match: AST.Match<Pretty<any>> = {
   "Suspend": (ast, go) => {
     return Option.match(getHook(ast), {
       onNone: () => {
-        const get = Internal.memoizeThunk(() => go(ast.f()))
+        const get = _util.memoizeThunk(() => go(ast.f()))
         return (a) => get()(a)
       },
       onSome: (handler) => handler()
@@ -206,7 +205,7 @@ export const match: AST.Match<Pretty<any>> = {
       onSome: (handler) => handler()
     })
   },
-  "Transform": (ast, go) => {
+  "Transformation": (ast, go) => {
     return Option.match(getHook(ast), {
       onNone: () => go(ast.to),
       onSome: (handler) => handler()
diff --git a/src/Schema.ts b/src/Schema.ts
index 598950161022d67c68491fdba9dec904b19c279f..dfd44d5757294f0d0b237b44a7a83c155f3f4357 100644
--- a/src/Schema.ts
+++ b/src/Schema.ts
@@ -2,20 +2,20 @@
  * @since 1.0.0
  */
 
-import * as BigDecimal from "effect/BigDecimal"
-import * as BigInt_ from "effect/BigInt"
+import * as _bigDecimal from "effect/BigDecimal"
+import * as _bigInt from "effect/BigInt"
 import * as Brand from "effect/Brand"
 import * as Cause from "effect/Cause"
 import * as Chunk from "effect/Chunk"
 import * as Data from "effect/Data"
-import * as Duration from "effect/Duration"
+import * as _duration from "effect/Duration"
 import * as Effect from "effect/Effect"
 import * as Either from "effect/Either"
 import * as Encoding from "effect/Encoding"
 import * as Equal from "effect/Equal"
 import * as Equivalence from "effect/Equivalence"
 import * as Exit from "effect/Exit"
-import * as FiberId from "effect/FiberId"
+import * as _fiberId from "effect/FiberId"
 import type { LazyArg } from "effect/Function"
 import { dual, identity } from "effect/Function"
 import * as HashMap from "effect/HashMap"
@@ -29,31 +29,48 @@ import { pipeArguments } from "effect/Pipeable"
 import * as Predicate from "effect/Predicate"
 import * as ReadonlyArray from "effect/ReadonlyArray"
 import * as Request from "effect/Request"
-import * as Secret from "effect/Secret"
+import * as _secret from "effect/Secret"
 import * as SortedSet from "effect/SortedSet"
 import * as S from "effect/String"
-import type { Covariant, Equals, Invariant, Mutable, NoInfer, Simplify } from "effect/Types"
+import type { Covariant, Equals, Invariant, NoInfer, UnionToIntersection } from "effect/Types"
 import type { Arbitrary } from "./Arbitrary.js"
 import * as arbitrary from "./Arbitrary.js"
-import * as ArrayFormatter from "./ArrayFormatter.js"
 import type { ParseOptions } from "./AST.js"
 import * as AST from "./AST.js"
 import * as _equivalence from "./Equivalence.js"
-import * as Internal from "./internal/ast.js"
-import * as filters from "./internal/filters.js"
-import * as hooks from "./internal/hooks.js"
-import * as InternalSchema from "./internal/schema.js"
-import * as InternalSerializable from "./internal/serializable.js"
+import * as _filters from "./internal/filters.js"
+import * as _hooks from "./internal/hooks.js"
+import * as _schema from "./internal/schema.js"
+import * as _serializable from "./internal/serializable.js"
+import * as _util from "./internal/util.js"
 import * as Parser from "./Parser.js"
 import * as ParseResult from "./ParseResult.js"
 import * as Pretty from "./Pretty.js"
 import type * as Serializable from "./Serializable.js"
+import * as TreeFormatter from "./TreeFormatter.js"
+
+/**
+ * Required to fix a bug in TypeScript@5.0, dtslint fails with:
+ * TypeScript@5.0 expected type to be:
+ *   { readonly [x: string]: number; }
+ * got:
+ *   { [x: string]: number; }
+ *
+ * @example
+ * import type { Simplify } from "effect/Types"
+ *
+ * // $ExpectType { readonly [x: string]: number; }
+ * type Test = Simplify<{ readonly [x: string]: number }>
+ *
+ * @since 1.0.0
+ */
+export type Simplify<T> = { readonly [K in keyof T]: T[K] } & {}
 
 /**
  * @since 1.0.0
  * @category symbol
  */
-export const TypeId: unique symbol = InternalSchema.TypeId
+export const TypeId: unique symbol = _schema.TypeId
 
 /**
  * @since 1.0.0
@@ -67,8 +84,38 @@ export type TypeId = typeof TypeId
  */
 export interface Schema<in out A, in out I = A, out R = never> extends Schema.Variance<A, I, R>, Pipeable {
   readonly ast: AST.AST
+  annotations(annotations: Annotations<A>): Schema<A, I, R>
+}
+
+/**
+ * @since 1.0.0
+ */
+export declare namespace Annotable {
+  /**
+   * @since 1.0.0
+   */
+  export type Self<S extends Any> = ReturnType<S["annotations"]>
+
+  /**
+   * @since 1.0.0
+   */
+  export type Any = Annotable<any, any, any, unknown> | Annotable<any, never>
+}
+
+/**
+ * @since 1.0.0
+ */
+export interface Annotable<Self extends Schema<A, I, R>, A, I = A, R = never> extends Schema<A, I, R> {
+  annotations(annotations: Annotations<A>): Self
 }
 
+/**
+ * @since 1.0.0
+ */
+export const asSchema = <S extends Schema.All>(
+  schema: S
+): Schema<Schema.Type<S>, Schema.Encoded<S>, Schema.Context<S>> => schema as any
+
 /**
  * @category hashing
  * @since 1.0.0
@@ -79,12 +126,12 @@ export const hash = <A, I, R>(schema: Schema<A, I, R>): number => AST.hash(schem
  * @category formatting
  * @since 1.0.0
  */
-export const format = <A, I, R>(schema: Schema<A, I, R>): string => AST.format(schema.ast)
+export const format = <A, I, R>(schema: Schema<A, I, R>): string => String(schema.ast)
 
 /**
  * @since 1.0.0
  */
-export declare module Schema {
+export declare namespace Schema {
   /**
    * @since 1.0.0
    */
@@ -99,36 +146,57 @@ export declare module Schema {
   /**
    * @since 1.0.0
    */
-  export type Context<S> = S extends Schema.Variance<infer _A, infer _I, infer R> ? R : never
+  export type Type<S> = S extends Schema.Variance<infer A, infer _I, infer _R> ? A : never
 
   /**
    * @since 1.0.0
    */
-  export type From<S> = S extends Schema.Variance<infer _A, infer I, infer _R> ? I : never
+  export type Encoded<S> = S extends Schema.Variance<infer _A, infer I, infer _R> ? I : never
 
   /**
    * @since 1.0.0
    */
-  export type To<S> = S extends Schema.Variance<infer A, infer _I, infer _R> ? A : never
+  export type Context<S> = S extends Schema.Variance<infer _A, infer _I, infer R> ? R : never
 
   /**
    * @since 1.0.0
    */
-  export type ToAsserts<S extends Schema<any>> = (
+  export type ToAsserts<S extends AnyNoContext> = (
     input: unknown,
     options?: AST.ParseOptions
-  ) => asserts input is Schema.To<S>
+  ) => asserts input is Schema.Type<S>
+
+  /**
+   * Any schema, except for `never`.
+   *
+   * @since 1.0.0
+   */
+  export type Any = Schema<any, any, unknown>
+
+  /**
+   * Any schema with `Context = never`, except for `never`.
+   *
+   * @since 1.0.0
+   */
+  export type AnyNoContext = Schema<any, any, never>
+
+  /**
+   * Any schema, including `never`.
+   *
+   * @since 1.0.0
+   */
+  export type All = Any | $never
 }
 
 /**
  * @since 1.0.0
  */
-export const from = <A, I, R>(schema: Schema<A, I, R>): Schema<I> => make(AST.from(schema.ast))
+export const encodedSchema = <A, I, R>(schema: Schema<A, I, R>): Schema<I> => make(AST.encodedAST(schema.ast))
 
 /**
  * @since 1.0.0
  */
-export const to = <A, I, R>(schema: Schema<A, I, R>): Schema<A> => make(AST.to(schema.ast))
+export const typeSchema = <A, I, R>(schema: Schema<A, I, R>): Schema<A> => make(AST.typeAST(schema.ast))
 
 /* c8 ignore start */
 export {
@@ -369,25 +437,60 @@ export const validatePromise = <A, I>(
  * @category guards
  * @since 1.0.0
  */
-export const isSchema = (u: unknown): u is Schema<unknown, unknown, unknown> =>
-  Predicate.isObject(u) && TypeId in u && "ast" in u
+export const isSchema = (u: unknown): u is Schema.Any =>
+  Predicate.hasProperty(u, TypeId) && Predicate.isObject(u[TypeId])
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const make: <A, I, R>(ast: AST.AST) => Schema<A, I, R> = InternalSchema.make
+export const make: <A, I = A, R = never>(ast: AST.AST) => Schema<A, I, R> = _schema.make
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface literal<Literals extends ReadonlyArray.NonEmptyReadonlyArray<AST.LiteralValue>>
+  extends Annotable<literal<Literals>, Literals[number]>
+{
+  readonly literals: Readonly<Literals>
+}
 
-const makeLiteral = <Literal extends AST.LiteralValue>(value: Literal): Schema<Literal> =>
-  make(AST.createLiteral(value))
+class $literal<Literals extends ReadonlyArray.NonEmptyReadonlyArray<AST.LiteralValue>>
+  extends _schema.Schema<Literals[number]>
+  implements literal<Literals>
+{
+  static ast = <Literals extends ReadonlyArray.NonEmptyReadonlyArray<AST.LiteralValue>>(
+    literals: Literals
+  ): AST.AST => {
+    return AST.isMembers(literals)
+      ? AST.Union.make(AST.mapMembers(literals, (literal) => new AST.Literal(literal)))
+      : new AST.Literal(literals[0])
+  }
+  constructor(readonly literals: Literals, ast: AST.AST = $literal.ast(literals)) {
+    super(ast)
+  }
+  annotations(annotations: Annotations<Literals[number]>) {
+    return new $literal(this.literals, _schema.annotations(this.ast, annotations))
+  }
+}
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const literal = <Literals extends ReadonlyArray<AST.LiteralValue>>(
+export function literal<Literals extends ReadonlyArray.NonEmptyReadonlyArray<AST.LiteralValue>>(
+  ...literals: Literals
+): literal<Literals>
+export function literal(): $never
+export function literal<Literals extends ReadonlyArray<AST.LiteralValue>>(
   ...literals: Literals
-): Schema<Literals[number]> => union(...literals.map((literal) => makeLiteral(literal)))
+): Schema<Literals[number]>
+export function literal<Literals extends ReadonlyArray<AST.LiteralValue>>(
+  ...literals: Literals
+): Schema<Literals[number]> | $never {
+  return ReadonlyArray.isNonEmptyReadonlyArray(literals) ? new $literal(literals) : never
+}
 
 /**
  * Creates a new `Schema` from a literal schema.
@@ -406,37 +509,35 @@ export const literal = <Literals extends ReadonlyArray<AST.LiteralValue>>(
  * @since 1.0.0
  */
 export const pickLiteral =
-  <A extends AST.LiteralValue, L extends ReadonlyArray<A>>(...literals: L) =>
-  <I, R>(_schema: Schema<A, I, R>): Schema<L[number]> => literal(...literals)
+  <A extends AST.LiteralValue, L extends ReadonlyArray.NonEmptyReadonlyArray<A>>(...literals: L) =>
+  <I, R>(_schema: Schema<A, I, R>): literal<[...L]> => literal(...literals)
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const uniqueSymbol = <S extends symbol>(
-  symbol: S,
-  annotations?: AST.Annotations
-): Schema<S> => make(AST.createUniqueSymbol(symbol, annotations))
+export const uniqueSymbolFromSelf = <S extends symbol>(symbol: S): Schema<S> => make(new AST.UniqueSymbol(symbol))
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface enums<A extends { [x: string]: string | number }> extends Annotable<enums<A>, A[keyof A]> {}
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const enums = <A extends { [x: string]: string | number }>(
-  enums: A
-): Schema<A[keyof A]> =>
+export const enums = <A extends { [x: string]: string | number }>(enums: A): enums<A> =>
   make(
-    AST.createEnums(
+    new AST.Enums(
       Object.keys(enums).filter(
         (key) => typeof enums[enums[key]] !== "number"
       ).map((key) => [key, enums[key]])
     )
   )
 
-/**
- * @since 1.0.0
- */
-export type Join<T> = T extends [infer Head, ...infer Tail]
+type Join<T> = T extends [infer Head, ...infer Tail]
   ? `${Head & (string | number | bigint | boolean | null | undefined)}${Tail extends [] ? ""
     : Join<Tail>}`
   : never
@@ -445,9 +546,9 @@ export type Join<T> = T extends [infer Head, ...infer Tail]
  * @category constructors
  * @since 1.0.0
  */
-export const templateLiteral = <T extends [Schema<any, any, never>, ...Array<Schema<any, any, never>>]>(
+export const templateLiteral = <T extends [Schema.AnyNoContext, ...Array<Schema.AnyNoContext>]>(
   ...[head, ...tail]: T
-): Schema<Join<{ [K in keyof T]: Schema.To<T[K]> }>> => {
+): Schema<Join<{ [K in keyof T]: Schema.Type<T[K]> }>> => {
   let types: ReadonlyArray<AST.TemplateLiteral | AST.Literal> = getTemplateLiterals(head.ast)
   for (const span of tail) {
     types = ReadonlyArray.flatMap(
@@ -455,7 +556,7 @@ export const templateLiteral = <T extends [Schema<any, any, never>, ...Array<Sch
       (a) => getTemplateLiterals(span.ast).map((b) => combineTemplateLiterals(a, b))
     )
   }
-  return make(AST.createUnion(types))
+  return make(AST.Union.make(types))
 }
 
 const combineTemplateLiterals = (
@@ -464,24 +565,24 @@ const combineTemplateLiterals = (
 ): AST.TemplateLiteral | AST.Literal => {
   if (AST.isLiteral(a)) {
     return AST.isLiteral(b) ?
-      AST.createLiteral(String(a.literal) + String(b.literal)) :
-      AST.createTemplateLiteral(String(a.literal) + b.head, b.spans)
+      new AST.Literal(String(a.literal) + String(b.literal)) :
+      AST.TemplateLiteral.make(String(a.literal) + b.head, b.spans)
   }
   if (AST.isLiteral(b)) {
-    return AST.createTemplateLiteral(
+    return AST.TemplateLiteral.make(
       a.head,
       ReadonlyArray.modifyNonEmptyLast(
         a.spans,
-        (span) => ({ ...span, literal: span.literal + String(b.literal) })
+        (span) => new AST.TemplateLiteralSpan(span.type, span.literal + String(b.literal))
       )
     )
   }
-  return AST.createTemplateLiteral(
+  return AST.TemplateLiteral.make(
     a.head,
     ReadonlyArray.appendAll(
       ReadonlyArray.modifyNonEmptyLast(
         a.spans,
-        (span) => ({ ...span, literal: span.literal + String(b.head) })
+        (span) => new AST.TemplateLiteralSpan(span.type, span.literal + String(b.head))
       ),
       b.spans
     )
@@ -496,56 +597,57 @@ const getTemplateLiterals = (
       return [ast]
     case "NumberKeyword":
     case "StringKeyword":
-      return [AST.createTemplateLiteral("", [{ type: ast, literal: "" }])]
+      return [AST.TemplateLiteral.make("", [new AST.TemplateLiteralSpan(ast, "")])]
     case "Union":
       return ReadonlyArray.flatMap(ast.types, getTemplateLiterals)
     default:
-      throw new Error(`templateLiteral: unsupported template literal span (${AST.format(ast)})`)
+      throw new Error(`templateLiteral: unsupported template literal span (${ast})`)
   }
 }
 
 const declareConstructor = <
-  const P extends ReadonlyArray<Schema<any, any, any>>,
+  const TypeParameters extends ReadonlyArray<Schema.Any>,
   I,
   A
 >(
-  typeParameters: P,
+  typeParameters: TypeParameters,
   decodeUnknown: (
-    ...typeParameters: { readonly [K in keyof P]: Schema<Schema.To<P[K]>, Schema.From<P[K]>, never> }
+    ...typeParameters: {
+      readonly [K in keyof TypeParameters]: Schema<
+        Schema.Type<TypeParameters[K]>,
+        Schema.Encoded<TypeParameters[K]>,
+        never
+      >
+    }
   ) => (input: unknown, options: ParseOptions, ast: AST.Declaration) => Effect.Effect<A, ParseResult.ParseIssue, never>,
   encodeUnknown: (
-    ...typeParameters: { readonly [K in keyof P]: Schema<Schema.To<P[K]>, Schema.From<P[K]>, never> }
+    ...typeParameters: {
+      readonly [K in keyof TypeParameters]: Schema<
+        Schema.Type<TypeParameters[K]>,
+        Schema.Encoded<TypeParameters[K]>,
+        never
+      >
+    }
   ) => (input: unknown, options: ParseOptions, ast: AST.Declaration) => Effect.Effect<I, ParseResult.ParseIssue, never>,
-  annotations?: DeclareAnnotations<P, A>
-): Schema<A, I, Schema.Context<P[number]>> =>
-  make(AST.createDeclaration(
-    typeParameters.map((tp) => tp.ast),
-    (...typeParameters) => decodeUnknown(...typeParameters.map((ast) => make(ast)) as any),
-    (...typeParameters) => encodeUnknown(...typeParameters.map((ast) => make(ast)) as any),
-    toAnnotations(annotations)
-  ))
+  annotations?: Annotations<A, TypeParameters>
+): Schema<A, I, Schema.Context<TypeParameters[number]>> =>
+  make(
+    new AST.Declaration(
+      typeParameters.map((tp) => tp.ast),
+      (...typeParameters) => decodeUnknown(...typeParameters.map(make) as any),
+      (...typeParameters) => encodeUnknown(...typeParameters.map(make) as any),
+      _schema.toASTAnnotations(annotations)
+    )
+  )
 
 const declarePrimitive = <A>(
   is: (input: unknown) => input is A,
-  annotations?: DeclareAnnotations<[], A>
+  annotations?: Annotations<A>
 ): Schema<A> => {
   const decodeUnknown = () => (input: unknown, _: ParseOptions, ast: AST.Declaration) =>
-    is(input) ? ParseResult.succeed(input) : ParseResult.fail(ParseResult.type(ast, input))
+    is(input) ? ParseResult.succeed(input) : ParseResult.fail(new ParseResult.Type(ast, input))
   const encodeUnknown = decodeUnknown
-  return make(AST.createDeclaration([], decodeUnknown, encodeUnknown, toAnnotations(annotations)))
-}
-
-/**
- * @since 1.0.0
- */
-export interface DeclareAnnotations<P extends ReadonlyArray<any>, A> extends DocAnnotations {
-  readonly message?: AST.MessageAnnotation
-  readonly typeId?: AST.TypeAnnotation | { id: AST.TypeAnnotation; annotation: unknown }
-  readonly arbitrary?: (...arbitraries: { readonly [K in keyof P]: Arbitrary<P[K]> }) => Arbitrary<A>
-  readonly pretty?: (...pretties: { readonly [K in keyof P]: Pretty.Pretty<P[K]> }) => Pretty.Pretty<A>
-  readonly equivalence?: (
-    ...equivalences: { readonly [K in keyof P]: Equivalence.Equivalence<P[K]> }
-  ) => Equivalence.Equivalence<A>
+  return make(new AST.Declaration([], decodeUnknown, encodeUnknown, _schema.toASTAnnotations(annotations)))
 }
 
 /**
@@ -558,25 +660,25 @@ export interface DeclareAnnotations<P extends ReadonlyArray<any>, A> extends Doc
 export const declare: {
   <A>(
     is: (input: unknown) => input is A,
-    annotations?: DeclareAnnotations<readonly [], A>
+    annotations?: Annotations<A>
   ): Schema<A>
-  <const P extends ReadonlyArray<Schema<any, any, any>>, I, A>(
+  <const P extends ReadonlyArray<Schema.Any>, I, A>(
     typeParameters: P,
     decodeUnknown: (
-      ...typeParameters: { readonly [K in keyof P]: Schema<Schema.To<P[K]>, Schema.From<P[K]>, never> }
+      ...typeParameters: { readonly [K in keyof P]: Schema<Schema.Type<P[K]>, Schema.Encoded<P[K]>, never> }
     ) => (
       input: unknown,
       options: ParseOptions,
       ast: AST.Declaration
     ) => Effect.Effect<A, ParseResult.ParseIssue, never>,
     encodeUnknown: (
-      ...typeParameters: { readonly [K in keyof P]: Schema<Schema.To<P[K]>, Schema.From<P[K]>, never> }
+      ...typeParameters: { readonly [K in keyof P]: Schema<Schema.Type<P[K]>, Schema.Encoded<P[K]>, never> }
     ) => (
       input: unknown,
       options: ParseOptions,
       ast: AST.Declaration
     ) => Effect.Effect<I, ParseResult.ParseIssue, never>,
-    annotations?: DeclareAnnotations<{ readonly [K in keyof P]: Schema.To<P[K]> }, A>
+    annotations?: Annotations<A, { readonly [K in keyof P]: Schema.Type<P[K]> }>
   ): Schema<A, I, Schema.Context<P[number]>>
 } = function() {
   if (Array.isArray(arguments[0])) {
@@ -603,20 +705,21 @@ export const BrandTypeId = Symbol.for("@effect/schema/TypeId/Brand")
  */
 export const fromBrand = <C extends Brand.Brand<string | symbol>>(
   constructor: Brand.Brand.Constructor<C>,
-  options?: FilterAnnotations<Brand.Brand.Unbranded<C>>
+  annotations?: FilterAnnotations<Brand.Brand.Unbranded<C>>
 ) =>
-<R, I, A extends Brand.Brand.Unbranded<C>>(self: Schema<A, I, R>): Schema<A & C, I, R> => {
-  return make(AST.createRefinement(
-    self.ast,
-    (a: A, _: ParseOptions, ast: AST.AST): Option.Option<ParseResult.ParseIssue> => {
-      const either = constructor.either(a)
-      return Either.isLeft(either) ?
-        Option.some(ParseResult.type(ast, a, either.left.map((v) => v.message).join(", "))) :
-        Option.none()
-    },
-    toAnnotations({ typeId: { id: BrandTypeId, annotation: { constructor } }, ...options })
-  ))
-}
+<R, I, A extends Brand.Brand.Unbranded<C>>(self: Schema<A, I, R>): Schema<A & C, I, R> =>
+  make(
+    new AST.Refinement(
+      self.ast,
+      (a: A, _: ParseOptions, ast: AST.AST): Option.Option<ParseResult.ParseIssue> => {
+        const either = constructor.either(a)
+        return Either.isLeft(either) ?
+          Option.some(new ParseResult.Type(ast, a, either.left.map((v) => v.message).join(", "))) :
+          Option.none()
+      },
+      _schema.toASTAnnotations({ typeId: { id: BrandTypeId, annotation: { constructor } }, ...annotations })
+    )
+  )
 
 /**
  * @category type id
@@ -624,14 +727,20 @@ export const fromBrand = <C extends Brand.Brand<string | symbol>>(
  */
 export const InstanceOfTypeId = Symbol.for("@effect/schema/TypeId/InstanceOf")
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface instanceOf<A> extends Annotable<instanceOf<A>, A> {}
+
 /**
  * @category constructors
  * @since 1.0.0
  */
 export const instanceOf = <A extends abstract new(...args: any) => any>(
   constructor: A,
-  options?: DeclareAnnotations<[], InstanceType<A>>
-): Schema<InstanceType<A>> =>
+  annotations?: Annotations<InstanceType<A>>
+): instanceOf<InstanceType<A>> =>
   declare(
     (u): u is InstanceType<A> => u instanceof constructor,
     {
@@ -639,367 +748,916 @@ export const instanceOf = <A extends abstract new(...args: any) => any>(
       description: `an instance of ${constructor.name}`,
       pretty: (): Pretty.Pretty<InstanceType<A>> => String,
       typeId: { id: InstanceOfTypeId, annotation: { constructor } },
-      ...options
+      ...annotations
     }
   )
 
-const _undefined: Schema<undefined> = make(AST.undefinedKeyword)
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $undefined extends Annotable<$undefined, undefined> {}
+
+const $undefined: $undefined = make(AST.undefinedKeyword)
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $void extends Annotable<$void, void> {}
 
-const _void: Schema<void> = make(AST.voidKeyword)
+const $void: $void = make(AST.voidKeyword)
 
-const _null: Schema<null> = make(AST._null)
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $null extends Annotable<$null, null> {}
+
+const $null: $null = make(AST._null)
 
 export {
   /**
    * @category primitives
    * @since 1.0.0
    */
-  _null as null,
+  $null as null,
   /**
    * @category primitives
    * @since 1.0.0
    */
-  _undefined as undefined,
+  $undefined as undefined,
   /**
    * @category primitives
    * @since 1.0.0
    */
-  _void as void
+  $void as void
 }
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $never extends Annotable<$never, never> {}
+
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const never: Schema<never> = make(AST.neverKeyword)
+export const never: $never = make(AST.neverKeyword)
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $unknown extends Annotable<$unknown, unknown> {}
 
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const unknown: Schema<unknown> = make(AST.unknownKeyword)
+export const unknown: $unknown = make(AST.unknownKeyword)
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $any extends Annotable<$any, any> {}
 
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const any: Schema<any> = make(AST.anyKeyword)
+export const any: $any = make(AST.anyKeyword)
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $string extends Annotable<$string, string> {}
 
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const string: Schema<string> = make(AST.stringKeyword)
+export const string: $string = make(AST.stringKeyword)
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $number extends Annotable<$number, number> {}
 
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const number: Schema<number> = make(AST.numberKeyword)
+export const number: $number = make(AST.numberKeyword)
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $boolean extends Annotable<$boolean, boolean> {}
 
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const boolean: Schema<boolean> = make(AST.booleanKeyword)
+export const boolean: $boolean = make(AST.booleanKeyword)
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface bigintFromSelf extends Annotable<bigintFromSelf, bigint> {}
 
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const bigintFromSelf: Schema<bigint> = make(AST.bigIntKeyword)
+export const bigintFromSelf: bigintFromSelf = make(AST.bigIntKeyword)
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface symbolFromSelf extends Annotable<symbolFromSelf, symbol> {}
 
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const symbolFromSelf: Schema<symbol> = make(AST.symbolKeyword)
+export const symbolFromSelf: symbolFromSelf = make(AST.symbolKeyword)
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $object extends Annotable<$object, object> {}
 
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const object: Schema<object> = make(AST.objectKeyword)
+export const object: $object = make(AST.objectKeyword)
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface union<Members extends ReadonlyArray<Schema.Any>> extends
+  Annotable<
+    union<Members>,
+    Schema.Type<Members[number]>,
+    Schema.Encoded<Members[number]>,
+    Schema.Context<Members[number]>
+  >
+{
+  readonly members: Readonly<Members>
+}
+
+class $union<Members extends ReadonlyArray<Schema.Any>>
+  extends _schema.Schema<Schema.Type<Members[number]>, Schema.Encoded<Members[number]>, Schema.Context<Members[number]>>
+  implements union<Members>
+{
+  static ast = <Members extends ReadonlyArray<Schema.Any>>(members: Members): AST.AST => {
+    return AST.Union.make(members.map((m) => m.ast))
+  }
+  constructor(readonly members: Members, ast: AST.AST = $union.ast(members)) {
+    super(ast)
+  }
+  annotations(annotations: Annotations<Schema.Type<Members[number]>>) {
+    return new $union(this.members, _schema.annotations(this.ast, annotations))
+  }
+}
 
 /**
  * @category combinators
  * @since 1.0.0
  */
-export const union = <Members extends ReadonlyArray<Schema<any, any, any>>>(
+export function union<Members extends AST.Members<Schema.Any>>(...members: Members): union<Members>
+export function union<Member extends Schema.Any>(member: Member): Member
+export function union(): $never
+export function union<Members extends ReadonlyArray<Schema.Any>>(
   ...members: Members
-): Schema<Schema.To<Members[number]>, Schema.From<Members[number]>, Schema.Context<Members[number]>> =>
-  make(AST.createUnion(members.map((m) => m.ast)))
+): Schema<Schema.Type<Members[number]>, Schema.Encoded<Members[number]>, Schema.Context<Members[number]>>
+export function union<Members extends ReadonlyArray<Schema.Any>>(
+  ...members: Members
+): Schema<Schema.Type<Members[number]>, Schema.Encoded<Members[number]>, Schema.Context<Members[number]>> | $never {
+  return AST.isMembers(members)
+    ? new $union(members)
+    : ReadonlyArray.isNonEmptyReadonlyArray(members)
+    ? members[0] as any
+    : never
+}
 
 /**
- * @category combinators
+ * @category api interface
  * @since 1.0.0
  */
-export const nullable = <A, I, R>(self: Schema<A, I, R>): Schema<A | null, I | null, R> => union(_null, self)
+export interface nullable<S extends Schema.Any> extends union<[S, $null]> {
+  annotations(annotations: Annotations<Schema.Type<S> | null>): nullable<S>
+}
 
 /**
  * @category combinators
  * @since 1.0.0
  */
-export const orUndefined = <A, I, R>(
-  self: Schema<A, I, R>
-): Schema<A | undefined, I | undefined, R> => make(AST.orUndefined(self.ast))
+export const nullable = <S extends Schema.Any>(self: S): nullable<S> => union(self, $null)
 
 /**
- * @category combinators
+ * @category api interface
  * @since 1.0.0
  */
-export const nullish = <A, I, R>(
-  self: Schema<A, I, R>
-): Schema<A | null | undefined, I | null | undefined, R> => union(_null, _undefined, self)
+export interface orUndefined<S extends Schema.Any> extends union<[S, $undefined]> {
+  annotations(annotations: Annotations<Schema.Type<S> | undefined>): orUndefined<S>
+}
 
 /**
  * @category combinators
  * @since 1.0.0
  */
-export const keyof = <A, I, R>(schema: Schema<A, I, R>): Schema<keyof A> => make(AST.keyof(schema.ast))
+export const orUndefined = <S extends Schema.Any>(self: S): orUndefined<S> => union(self, $undefined)
 
 /**
- * @category combinators
+ * @category api interface
  * @since 1.0.0
  */
-export const tuple = <Elements extends ReadonlyArray<Schema<any, any, any>>>(
-  ...elements: Elements
-): Schema<
-  { readonly [K in keyof Elements]: Schema.To<Elements[K]> },
-  { readonly [K in keyof Elements]: Schema.From<Elements[K]> },
-  Schema.Context<Elements[number]>
-> =>
-  make(
-    AST.createTuple(
-      elements.map((schema) => AST.createElement(schema.ast, false)),
-      Option.none(),
-      true
-    )
-  )
+export interface nullish<S extends Schema.Any> extends union<[S, $null, $undefined]> {
+  annotations(annotations: Annotations<Schema.Type<S> | null | undefined>): nullish<S>
+}
 
 /**
  * @category combinators
  * @since 1.0.0
  */
-export const rest =
-  <B, IB, R2>(rest: Schema<B, IB, R2>) =>
-  <A extends ReadonlyArray<any>, I extends ReadonlyArray<any>, R1>(
-    self: Schema<A, I, R1>
-  ): Schema<readonly [...A, ...Array<B>], readonly [...I, ...Array<IB>], R1 | R2> => {
-    if (AST.isTuple(self.ast)) {
-      return make(AST.appendRestElement(self.ast, rest.ast))
-    }
-    throw new Error("`rest` is not supported on this schema")
-  }
+export const nullish = <S extends Schema.Any>(self: S): nullish<S> => union(self, $null, $undefined)
 
 /**
  * @category combinators
  * @since 1.0.0
  */
-export const element =
-  <B, IB, R2>(element: Schema<B, IB, R2>) =>
-  <A extends ReadonlyArray<any>, I extends ReadonlyArray<any>, R1>(
-    self: Schema<A, I, R1>
-  ): Schema<readonly [...A, B], readonly [...I, IB], R1 | R2> => {
-    if (AST.isTuple(self.ast)) {
-      return make(AST.appendElement(self.ast, AST.createElement(element.ast, false)))
-    }
-    throw new Error("`element` is not supported on this schema")
-  }
+export const keyof = <A, I, R>(self: Schema<A, I, R>): Schema<keyof A> =>
+  make<keyof A>(AST.keyof(self.ast)).annotations({ description: `keyof<${format(self)}>` })
 
 /**
- * @category combinators
  * @since 1.0.0
  */
-export const optionalElement =
-  <B, IB, R2>(element: Schema<B, IB, R2>) =>
-  <A extends ReadonlyArray<any>, I extends ReadonlyArray<any>, R1>(
-    self: Schema<A, I, R1>
-  ): Schema<readonly [...A, B?], readonly [...I, IB?], R1 | R2> => {
-    if (AST.isTuple(self.ast)) {
-      return make(AST.appendElement(self.ast, AST.createElement(element.ast, true)))
-    }
-    throw new Error("`optionalElement` is not supported on this schema")
-  }
+export interface OptionalElement<E extends Schema.Any>
+  extends Schema.Variance<Schema.Type<E>, Schema.Encoded<E>, Schema.Context<E>>
+{
+  readonly optionalElement: E
+}
 
 /**
- * @category combinators
  * @since 1.0.0
  */
-export const array = <A, I, R>(item: Schema<A, I, R>): Schema<ReadonlyArray<A>, ReadonlyArray<I>, R> =>
-  make(AST.createTuple([], Option.some([item.ast]), true))
+export const optionalElement = <E extends Schema.Any>(self: E): OptionalElement<E> => new $OptionalElement(self)
+
+class $OptionalElement<E extends Schema.Any> implements OptionalElement<E> {
+  readonly [TypeId]!: Schema.Variance<Schema.Type<E>, Schema.Encoded<E>, Schema.Context<E>>[TypeId]
+  constructor(readonly optionalElement: E) {}
+}
 
 /**
- * @category combinators
  * @since 1.0.0
  */
-export const nonEmptyArray = <A, I, R>(
-  item: Schema<A, I, R>
-): Schema<readonly [A, ...Array<A>], readonly [I, ...Array<I>], R> => tuple(item).pipe(rest(item))
+export declare namespace TupleType {
+  type ElementsType<
+    Elements,
+    Out extends ReadonlyArray<any> = readonly []
+  > = Elements extends readonly [infer Head, ...infer Tail] ?
+    Head extends OptionalElement<infer T> ? ElementsType<Tail, readonly [...Out, Schema.Type<T>?]>
+    : ElementsType<Tail, readonly [...Out, Schema.Type<Head>]>
+    : Out
+
+  type ElementsEncoded<
+    Elements,
+    Out extends ReadonlyArray<any> = readonly []
+  > = Elements extends readonly [infer Head, ...infer Tail] ?
+    Head extends OptionalElement<infer T> ? ElementsEncoded<Tail, readonly [...Out, Schema.Encoded<T>?]>
+    : ElementsEncoded<Tail, readonly [...Out, Schema.Encoded<Head>]>
+    : Out
+
+  /**
+   * @since 1.0.0
+   */
+  export type Element = Schema.Any | OptionalElement<Schema.Any>
+
+  /**
+   * @since 1.0.0
+   */
+  export type Elements = ReadonlyArray<Element>
+
+  /**
+   * @since 1.0.0
+   */
+  export type Type<
+    Elements extends TupleType.Elements,
+    Rest extends ReadonlyArray<Schema.Any>
+  > = Rest extends [infer Head, ...infer Tail] ? Readonly<[
+      ...ElementsType<Elements>,
+      ...ReadonlyArray<Schema.Type<Head>>,
+      ...{ readonly [K in keyof Tail]: Schema.Type<Tail[K]> }
+    ]> :
+    ElementsType<Elements>
+
+  /**
+   * @since 1.0.0
+   */
+  export type Encoded<
+    Elements extends TupleType.Elements,
+    Rest extends ReadonlyArray<Schema.Any>
+  > = Rest extends [infer Head, ...infer Tail] ? Readonly<[
+      ...ElementsEncoded<Elements>,
+      ...ReadonlyArray<Schema.Encoded<Head>>,
+      ...{ readonly [K in keyof Tail]: Schema.Encoded<Tail[K]> }
+    ]> :
+    ElementsEncoded<Elements>
+}
 
 /**
+ * @category api interface
  * @since 1.0.0
  */
-export interface PropertySignature<From, FromIsOptional, To, ToIsOptional, R = never>
-  extends Schema.Variance<To, From, R>, Pipeable
+export interface tupleType<
+  Elements extends TupleType.Elements,
+  Rest extends ReadonlyArray<Schema.Any>
+> extends
+  Annotable<
+    tupleType<Elements, Rest>,
+    TupleType.Type<Elements, Rest>,
+    TupleType.Encoded<Elements, Rest>,
+    Schema.Context<Elements[number]> | Schema.Context<Rest[number]>
+  >
 {
-  readonly FromIsOptional: FromIsOptional
-  readonly ToIsOptional: ToIsOptional
+  readonly elements: Readonly<Elements>
+  readonly rest: Readonly<Rest>
 }
 
-type PropertySignatureAST =
-  | {
-    readonly _tag: "Declaration"
-    readonly from: AST.AST
-    readonly isOptional: boolean
-    readonly annotations?: AST.Annotations | undefined
+class $tupleType<
+  Elements extends TupleType.Elements,
+  Rest extends ReadonlyArray<Schema.Any>
+> extends _schema.Schema<
+  TupleType.Type<Elements, Rest>,
+  TupleType.Encoded<Elements, Rest>,
+  Schema.Context<Elements[number]> | Schema.Context<Rest[number]>
+> implements tupleType<Elements, Rest> {
+  static ast = <
+    Elements extends TupleType.Elements,
+    Rest extends ReadonlyArray<Schema.Any>
+  >(
+    elements: Elements,
+    rest: Rest
+  ): AST.AST => {
+    return new AST.TupleType(
+      elements.map((schema) =>
+        isSchema(schema) ? new AST.Element(schema.ast, false) : new AST.Element(schema.optionalElement.ast, true)
+      ),
+      rest.map((e) => e.ast),
+      true
+    )
   }
-  | {
-    readonly _tag: "OptionalToRequired"
-    readonly from: AST.AST
-    readonly to: AST.AST
-    readonly decode: AST.FinalPropertySignatureTransformation["decode"]
-    readonly encode: AST.FinalPropertySignatureTransformation["encode"]
-    readonly annotations?: AST.Annotations | undefined
+  constructor(
+    readonly elements: Elements,
+    readonly rest: Rest,
+    ast: AST.AST = $tupleType.ast(elements, rest)
+  ) {
+    super(ast)
+  }
+  annotations(
+    annotations: Annotations<TupleType.Type<Elements, Rest>>
+  ): tupleType<Elements, Rest> {
+    return new $tupleType(this.elements, this.rest, _schema.annotations(this.ast, annotations))
   }
+}
 
-/** @internal */
-export class PropertySignatureImpl<R, From, FromIsOptional, To, ToIsOptional> {
-  readonly [TypeId]: Schema.Variance<To, From, R>[TypeId] = InternalSchema.variance
-  readonly FromIsOptional!: FromIsOptional
-  readonly ToIsOptional!: ToIsOptional
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface tuple<Elements extends TupleType.Elements> extends tupleType<Elements, []> {
+  annotations(annotations: Annotations<TupleType.Type<Elements, []>>): tuple<Elements>
+}
 
-  constructor(
-    readonly propertySignatureAST: PropertySignatureAST
-  ) {}
+class $tuple<Elements extends TupleType.Elements> extends $tupleType<Elements, []> implements tuple<Elements> {
+  constructor(readonly elements: Elements, ast?: AST.AST) {
+    super(elements, [], ast)
+  }
+  annotations(annotations: Annotations<TupleType.Type<Elements, []>>) {
+    return new $tuple(this.elements, _schema.annotations(this.ast, annotations))
+  }
+}
 
-  pipe() {
-    return pipeArguments(this, arguments)
+/**
+ * @category combinators
+ * @since 1.0.0
+ */
+export function tuple<
+  const Elements extends TupleType.Elements,
+  Rest extends ReadonlyArray.NonEmptyReadonlyArray<Schema.Any>
+>(elements: Elements, ...rest: Rest): tupleType<Elements, Rest>
+export function tuple<Elements extends TupleType.Elements>(...elements: Elements): tuple<Elements>
+export function tuple(...args: ReadonlyArray<any>): any {
+  return Array.isArray(args[0])
+    ? new $tupleType(args[0], args.slice(1))
+    : new $tuple(args)
+}
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface array<Value extends Schema.Any> extends tupleType<[], [Value]> {
+  readonly value: Value
+  annotations(annotations: Annotations<TupleType.Type<[], [Value]>>): array<Value>
+}
+
+class $array<Value extends Schema.Any> extends $tupleType<[], [Value]> implements array<Value> {
+  constructor(readonly value: Value, ast?: AST.AST) {
+    super([], [value], ast)
+  }
+  annotations(annotations: Annotations<TupleType.Type<[], [Value]>>) {
+    return new $array(this.value, _schema.annotations(this.ast, annotations))
   }
 }
 
 /**
+ * @category combinators
+ * @since 1.0.0
+ */
+export function array<Value extends Schema.Any, RestElements extends ReadonlyArray.NonEmptyReadonlyArray<Schema.Any>>(
+  value: Value,
+  ...restElements: RestElements
+): tupleType<readonly [], [Value, ...RestElements]>
+export function array<Value extends Schema.Any>(value: Value): array<Value>
+export function array<Value extends Schema.Any, RestElements extends ReadonlyArray<Schema.Any>>(
+  value: Value,
+  ...elements: RestElements
+): any {
+  return elements.length > 0 ? new $tupleType([], [value, ...elements]) : new $array(value)
+}
+
+/**
+ * @category api interface
  * @since 1.0.0
  */
-export const propertySignatureAnnotations = (annotations: DocAnnotations) =>
-<S extends StructFields[PropertyKey]>(
-  self: S
-): S extends Schema<infer A, infer I, infer R> ? PropertySignature<I, false, A, false, R> : S => {
-  if (isSchema(self)) {
-    return new PropertySignatureImpl({
-      _tag: "Declaration",
-      from: self.ast,
-      isOptional: false,
-      annotations: toAnnotations(annotations)
-    }) as any
+export interface nonEmptyArray<Value extends Schema.Any> extends tupleType<[Value], [Value]> {
+  readonly value: Value
+  annotations(annotations: Annotations<TupleType.Type<[Value], [Value]>>): nonEmptyArray<Value>
+}
+
+class $nonEmptyArray<Value extends Schema.Any> extends $tupleType<[Value], [Value]> implements nonEmptyArray<Value> {
+  constructor(readonly value: Value, ast?: AST.AST) {
+    super([value], [value], ast)
   }
-  return new PropertySignatureImpl({
-    ...(self as any).propertySignatureAST,
-    annotations: toAnnotations(annotations)
-  }) as any
-}
-
-/**
- * @category optional
- * @since 1.0.0
- */
-export const optionalToRequired = <A, I, R, B>(
-  from: Schema<A, I, R>,
-  to: Schema<B>,
-  decode: (o: Option.Option<A>) => B, // `none` here means: the value is missing in the input
-  encode: (b: B) => Option.Option<A>, // `none` here means: the value will be missing in the output
-  annotations?: DocAnnotations
-): PropertySignature<I, true, B, false, R> =>
-  new PropertySignatureImpl({
-    _tag: "OptionalToRequired",
-    from: from.ast,
-    to: to.ast,
-    decode: (o) => Option.some(decode(o)),
-    encode: Option.flatMap(encode),
-    annotations: toAnnotations(annotations)
-  })
+  annotations(annotations: Annotations<TupleType.Type<[Value], [Value]>>) {
+    return new $nonEmptyArray(this.value, _schema.annotations(this.ast, annotations))
+  }
+}
 
 /**
+ * @category combinators
  * @since 1.0.0
  */
-export const optional: {
-  <A, I, R>(
-    schema: Schema<A, I, R>,
-    options: {
-      readonly exact: true
-      readonly default: () => A
-      readonly nullable: true
-      readonly annotations?: DocAnnotations | undefined
-    }
-  ): PropertySignature<I | null, true, A, false, R>
+export const nonEmptyArray = <Value extends Schema.Any>(value: Value): nonEmptyArray<Value> => new $nonEmptyArray(value)
+
+/**
+ * @since 1.0.0
+ */
+export declare namespace PropertySignature {
+  /**
+   * @since 1.0.0
+   */
+  export type Token = "?:" | ":"
+
+  /**
+   * @since 1.0.0
+   */
+  export type GetToken<B extends boolean> = B extends true ? "?:" : ":"
+
+  /**
+   * @since 1.0.0
+   */
+  export type Any<Key extends PropertyKey = PropertyKey> =
+    | PropertySignature<Token, any, Key, Token, any, any, unknown>
+    | PropertySignature<Token, never, Key, Token, never, any, unknown>
+
+  /**
+   * @since 1.0.0
+   */
+  export type AST =
+    | PropertySignatureDeclaration
+    | PropertySignatureTransformation
+}
+
+/**
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export class PropertySignatureDeclaration {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "PropertySignatureDeclaration"
+  constructor(
+    readonly ast: AST.AST,
+    readonly isOptional: boolean,
+    readonly annotations?: AST.Annotations | undefined,
+    readonly __defaultConstructor?: (() => any) | undefined
+  ) {}
+}
+
+/**
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export class PropertySignatureTransformation {
+  /**
+   * @since 1.0.0
+   */
+  readonly _tag = "PropertySignatureTransformation"
+  constructor(
+    readonly fromKey: PropertyKey | undefined,
+    readonly from: PropertySignatureDeclaration,
+    readonly to: PropertySignatureDeclaration,
+    readonly decode: AST.PropertySignatureTransformation["decode"],
+    readonly encode: AST.PropertySignatureTransformation["encode"]
+  ) {}
+}
+
+/**
+ * @since 1.0.0
+ * @category symbol
+ */
+export const PropertySignatureTypeId: unique symbol = _schema.PropertySignatureTypeId
+
+/**
+ * @since 1.0.0
+ * @category symbol
+ */
+export type PropertySignatureTypeId = typeof PropertySignatureTypeId
+
+const propertySignatureAnnotations = (
+  ast: PropertySignature.AST,
+  annotations?: AST.Annotations
+): PropertySignature.AST => {
+  switch (ast._tag) {
+    case "PropertySignatureDeclaration":
+      return new PropertySignatureDeclaration(ast.ast, ast.isOptional, { ...ast.annotations, ...annotations })
+    case "PropertySignatureTransformation":
+      return new PropertySignatureTransformation(
+        ast.fromKey,
+        ast.from,
+        new PropertySignatureDeclaration(ast.to.ast, ast.to.isOptional, { ...ast.to.annotations, ...annotations }),
+        ast.decode,
+        ast.encode
+      )
+  }
+}
+
+/**
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export interface PropertySignature<
+  TypeToken extends PropertySignature.Token,
+  Type,
+  Key extends PropertyKey,
+  EncodedToken extends PropertySignature.Token,
+  Encoded,
+  HasDefault extends boolean = false,
+  R = never
+> extends Schema.Variance<Type, Encoded, R>, Pipeable {
+  readonly [PropertySignatureTypeId]: null
+  readonly _EncodedToken: EncodedToken
+  readonly _TypeToken: TypeToken
+  readonly _Key: Key
+  readonly _HasDefault: HasDefault
+  readonly ast: PropertySignature.AST
+
+  annotations(
+    annotations: PropertySignatureAnnotations<Type>
+  ): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R>
+}
+
+class $PropertySignature<
+  TypeToken extends PropertySignature.Token,
+  Type,
+  Key extends PropertyKey,
+  EncodedToken extends PropertySignature.Token,
+  Encoded,
+  HasDefault extends boolean = false,
+  R = never
+> implements PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R> {
+  readonly [TypeId]!: Schema.Variance<Type, Encoded, R>[TypeId]
+  readonly [PropertySignatureTypeId] = null
+  readonly _Key!: Key
+  readonly _EncodedToken!: EncodedToken
+  readonly _TypeToken!: TypeToken
+  readonly _HasDefault!: HasDefault
+
+  constructor(
+    readonly ast: PropertySignature.AST
+  ) {}
+
+  pipe() {
+    return pipeArguments(this, arguments)
+  }
+
+  annotations(
+    annotations: PropertySignatureAnnotations<Type>
+  ): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R> {
+    return new $PropertySignature(propertySignatureAnnotations(this.ast, _schema.toASTAnnotations(annotations)))
+  }
+}
+
+/**
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export const propertySignature = <
+  A,
+  I,
+  R,
+  IsOptional extends boolean = false,
+  MakeDefault extends (() => A) | undefined = undefined
+>(
+  schema: Schema<A, I, R>,
+  options?: {
+    readonly isOptional?: IsOptional | undefined
+    readonly annotations?: Annotations<A> | undefined
+    readonly default?: MakeDefault
+  } | undefined
+): PropertySignature<
+  PropertySignature.GetToken<IsOptional>,
+  A,
+  never,
+  PropertySignature.GetToken<IsOptional>,
+  I,
+  MakeDefault extends undefined ? false : true,
+  R
+> =>
+  new $PropertySignature(
+    new PropertySignatureDeclaration(
+      schema.ast,
+      options?.isOptional ?? false,
+      _schema.toASTAnnotations(options?.annotations),
+      options?.default
+    )
+  )
+
+/**
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export const propertySignatureTransformation = <
+  FA,
+  FI,
+  FR,
+  FromIsOptional extends boolean,
+  TA,
+  TI,
+  TR,
+  ToIsOptional extends boolean,
+  HasDefault extends boolean,
+  const Key extends PropertyKey = never
+>(
+  from: {
+    readonly schema: Schema<FA, FI, FR>
+    readonly isOptional: FromIsOptional
+    readonly annotations?: Annotations<FA> | undefined
+    readonly hasDefault?: HasDefault
+    readonly key?: Key | undefined
+  },
+  to: {
+    readonly schema: Schema<TA, TI, TR>
+    readonly isOptional: ToIsOptional
+  },
+  decode: (o: Option.Option<FA>) => Option.Option<TI>,
+  encode: (o: Option.Option<TI>) => Option.Option<FA>
+): PropertySignature<
+  PropertySignature.GetToken<ToIsOptional>,
+  TA,
+  Key,
+  PropertySignature.GetToken<FromIsOptional>,
+  FI,
+  HasDefault,
+  FR | TR
+> =>
+  new $PropertySignature(
+    new PropertySignatureTransformation(
+      from.key,
+      new PropertySignatureDeclaration(
+        from.schema.ast,
+        from.isOptional,
+        _schema.toASTAnnotations(from.annotations)
+      ),
+      new PropertySignatureDeclaration(to.schema.ast, to.isOptional),
+      decode,
+      encode
+    )
+  )
+
+/**
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export const fromKey: {
+  <Key extends PropertyKey>(key: Key): <
+    Type,
+    TypeToken extends PropertySignature.Token,
+    Encoded,
+    EncodedToken extends PropertySignature.Token,
+    HasDefault extends boolean,
+    R
+  >(
+    self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, HasDefault, R>
+  ) => PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R>
+  <
+    Type,
+    TypeToken extends PropertySignature.Token,
+    Encoded,
+    EncodedToken extends PropertySignature.Token,
+    HasDefault extends boolean,
+    R,
+    Key extends PropertyKey
+  >(
+    self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, HasDefault, R>,
+    key: Key
+  ): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R>
+} = dual(2, <
+  Type,
+  TypeToken extends PropertySignature.Token,
+  Encoded,
+  EncodedToken extends PropertySignature.Token,
+  HasDefault extends boolean,
+  R,
+  Key extends PropertyKey
+>(
+  self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, HasDefault, R>,
+  key: Key
+): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R> => {
+  const ast = self.ast
+  switch (ast._tag) {
+    case "PropertySignatureDeclaration": {
+      return new $PropertySignature(
+        new PropertySignatureTransformation(
+          key,
+          ast,
+          new PropertySignatureDeclaration(AST.typeAST(ast.ast), ast.isOptional),
+          identity,
+          identity
+        )
+      )
+    }
+    case "PropertySignatureTransformation":
+      return new $PropertySignature(
+        new PropertySignatureTransformation(
+          key,
+          ast.from,
+          ast.to,
+          ast.decode,
+          ast.encode
+        )
+      )
+  }
+})
+
+/**
+ * - `decode`: `none` as argument means: the value is missing in the input
+ * - `encode`: `none` as return value means: the value will be missing in the output
+ *
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export const optionalToRequired = <FA, FI, FR, TA, TI, TR>(
+  from: Schema<FA, FI, FR>,
+  to: Schema<TA, TI, TR>,
+  decode: (o: Option.Option<FA>) => TI,
+  encode: (ti: TI) => Option.Option<FA>
+): PropertySignature<":", TA, never, "?:", FI, false, FR | TR> =>
+  new $PropertySignature(
+    new PropertySignatureTransformation(
+      undefined,
+      new PropertySignatureDeclaration(from.ast, true),
+      new PropertySignatureDeclaration(to.ast, false),
+      (o) => Option.some(decode(o)),
+      Option.flatMap(encode)
+    )
+  )
+
+/**
+ * - `decode`:
+ *   - `none` as argument means: the value is missing in the input
+ *   - `none` as return value means: the value will be missing in the output
+ * - `encode`:
+ *   - `none` as argument means: the value is missing in the input
+ *   - `none` as return value means: the value will be missing in the output
+ *
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export const optionalToOptional = <FA, FI, FR, TA, TI, TR>(
+  from: Schema<FA, FI, FR>,
+  to: Schema<TA, TI, TR>,
+  decode: (o: Option.Option<FA>) => Option.Option<TI>,
+  encode: (o: Option.Option<TI>) => Option.Option<FA>
+): PropertySignature<"?:", TA, never, "?:", FI, false, FR | TR> =>
+  new $PropertySignature(
+    new PropertySignatureTransformation(
+      undefined,
+      new PropertySignatureDeclaration(from.ast, true),
+      new PropertySignatureDeclaration(to.ast, true),
+      decode,
+      encode
+    )
+  )
+
+/**
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export const optional: {
   <A, I, R>(
     schema: Schema<A, I, R>,
     options: {
       readonly exact: true
       readonly default: () => A
-      readonly annotations?: DocAnnotations | undefined
+      readonly nullable: true
     }
-  ): PropertySignature<I, true, A, false, R>
+  ): PropertySignature<":", A, never, "?:", I | null, false, R>
+  <A, I, R>(
+    schema: Schema<A, I, R>,
+    options: {
+      readonly exact: true
+      readonly default: () => A
+    }
+  ): PropertySignature<":", A, never, "?:", I, false, R>
   <A, I, R>(
     schema: Schema<A, I, R>,
     options: {
       readonly exact: true
       readonly nullable: true
       readonly as: "Option"
-      readonly annotations?: DocAnnotations | undefined
     }
-  ): PropertySignature<I | null, true, Option.Option<A>, false, R>
+  ): PropertySignature<":", Option.Option<A>, never, "?:", I | null, false, R>
   <A, I, R>(
     schema: Schema<A, I, R>,
     options: {
       readonly exact: true
       readonly as: "Option"
-      readonly annotations?: DocAnnotations | undefined
     }
-  ): PropertySignature<I, true, Option.Option<A>, false, R>
+  ): PropertySignature<":", Option.Option<A>, never, "?:", I, false, R>
   <A, I, R>(
     schema: Schema<A, I, R>,
     options: {
       readonly exact: true
-      readonly annotations?: DocAnnotations | undefined
+      readonly nullable: true
     }
-  ): PropertySignature<I, true, A, true, R>
+  ): PropertySignature<"?:", A, never, "?:", I | null, false, R>
+  <A, I, R>(
+    schema: Schema<A, I, R>,
+    options: {
+      readonly exact: true
+    }
+  ): PropertySignature<"?:", A, never, "?:", I, false, R>
   <A, I, R>(
     schema: Schema<A, I, R>,
     options: {
       readonly default: () => A
       readonly nullable: true
-      readonly annotations?: DocAnnotations | undefined
     }
-  ): PropertySignature<I | null | undefined, true, A, false, R>
+  ): PropertySignature<":", A, never, "?:", I | null | undefined, false, R>
   <A, I, R>(
     schema: Schema<A, I, R>,
     options: {
       readonly nullable: true
       readonly as: "Option"
-      readonly annotations?: DocAnnotations | undefined
     }
-  ): PropertySignature<I | undefined | null, true, Option.Option<A>, false, R>
+  ): PropertySignature<":", Option.Option<A>, never, "?:", I | null | undefined, false, R>
   <A, I, R>(
     schema: Schema<A, I, R>,
     options: {
       readonly as: "Option"
-      readonly annotations?: DocAnnotations | undefined
     }
-  ): PropertySignature<I | undefined, true, Option.Option<A>, false, R>
+  ): PropertySignature<":", Option.Option<A>, never, "?:", I | undefined, false, R>
   <A, I, R>(
     schema: Schema<A, I, R>,
     options: {
       readonly default: () => A
-      readonly annotations?: DocAnnotations | undefined
     }
-  ): PropertySignature<I | undefined, true, A, false, R>
+  ): PropertySignature<":", A, never, "?:", I | undefined, false, R>
   <A, I, R>(
     schema: Schema<A, I, R>,
-    options?: {
-      readonly annotations?: DocAnnotations | undefined
+    options: {
+      readonly nullable: true
     }
-  ): PropertySignature<I | undefined, true, A | undefined, true, R>
+  ): PropertySignature<"?:", A | undefined, never, "?:", I | null | undefined, false, R>
+  <A, I, R>(
+    schema: Schema<A, I, R>
+  ): PropertySignature<"?:", A | undefined, never, "?:", I | undefined, false, R>
 } = <A, I, R>(
   schema: Schema<A, I, R>,
   options?: {
@@ -1007,106 +1665,102 @@ export const optional: {
     readonly default?: () => A
     readonly nullable?: true
     readonly as?: "Option"
-    readonly annotations?: DocAnnotations | undefined
   }
-): PropertySignature<any, any, any, any, R> => {
+): PropertySignature<any, any, never, any, any, any, any> => {
   const isExact = options?.exact
-  const value = options?.default
+  const defaultValue = options?.default
   const isNullable = options?.nullable
   const asOption = options?.as == "Option"
-  const annotations = options?.annotations
 
   if (isExact) {
-    if (value) {
+    if (defaultValue) {
       if (isNullable) {
         return optionalToRequired(
           nullable(schema),
-          to(schema),
-          Option.match({ onNone: value, onSome: (a) => a === null ? value() : a }),
-          Option.some,
-          annotations
+          typeSchema(schema),
+          Option.match({ onNone: defaultValue, onSome: (a) => a === null ? defaultValue() : a }),
+          Option.some
         )
       } else {
         return optionalToRequired(
           schema,
-          to(schema),
-          Option.match({ onNone: value, onSome: identity }),
-          Option.some,
-          annotations
+          typeSchema(schema),
+          Option.match({ onNone: defaultValue, onSome: identity }),
+          Option.some
+        )
+      }
+    } else if (asOption) {
+      if (isNullable) {
+        return optionalToRequired(
+          nullable(schema),
+          optionFromSelf(typeSchema(schema)),
+          Option.filter(Predicate.isNotNull),
+          identity
+        )
+      } else {
+        return optionalToRequired(
+          schema,
+          optionFromSelf(typeSchema(schema)),
+          identity,
+          identity
         )
       }
     } else {
-      if (asOption) {
-        if (isNullable) {
-          return optionalToRequired(
-            nullable(schema),
-            optionFromSelf(to(schema)),
-            Option.filter(Predicate.isNotNull),
-            identity,
-            annotations
-          )
-        } else {
-          return optionalToRequired(
-            schema,
-            optionFromSelf(to(schema)),
-            identity,
-            identity,
-            annotations
-          )
-        }
+      if (isNullable) {
+        return optionalToOptional(
+          nullable(schema),
+          typeSchema(schema),
+          Option.filter(Predicate.isNotNull),
+          identity
+        )
+      } else {
+        return propertySignature(schema, { isOptional: true })
       }
-      return new PropertySignatureImpl({
-        _tag: "Declaration",
-        from: schema.ast,
-        isOptional: true,
-        annotations: toAnnotations(annotations)
-      })
     }
   } else {
-    if (value) {
+    if (defaultValue) {
       if (isNullable) {
         return optionalToRequired(
           nullish(schema),
-          to(schema),
-          Option.match({ onNone: value, onSome: (a) => (a == null ? value() : a) }),
-          Option.some,
-          annotations
+          typeSchema(schema),
+          Option.match({ onNone: defaultValue, onSome: (a) => (a == null ? defaultValue() : a) }),
+          Option.some
         )
       } else {
         return optionalToRequired(
           orUndefined(schema),
-          to(schema),
-          Option.match({ onNone: value, onSome: (a) => (a === undefined ? value() : a) }),
-          Option.some,
-          annotations
+          typeSchema(schema),
+          Option.match({ onNone: defaultValue, onSome: (a) => (a === undefined ? defaultValue() : a) }),
+          Option.some
+        )
+      }
+    } else if (asOption) {
+      if (isNullable) {
+        return optionalToRequired(
+          nullish(schema),
+          optionFromSelf(typeSchema(schema)),
+          Option.filter<A | null | undefined, A>((a): a is A => a != null),
+          identity
+        )
+      } else {
+        return optionalToRequired(
+          orUndefined(schema),
+          optionFromSelf(typeSchema(schema)),
+          Option.filter(Predicate.isNotUndefined),
+          identity
         )
       }
     } else {
-      if (asOption) {
-        if (isNullable) {
-          return optionalToRequired(
-            nullish(schema),
-            optionFromSelf(to(schema)),
-            Option.filter((a: A | null | undefined): a is A => a != null),
-            identity,
-            annotations
-          )
-        } else {
-          return optionalToRequired(
-            orUndefined(schema),
-            optionFromSelf(to(schema)),
-            Option.filter(Predicate.isNotUndefined),
-            identity,
-            annotations
-          )
-        }
+      if (isNullable) {
+        return optionalToOptional(
+          nullish(schema),
+          orUndefined(typeSchema(schema)),
+          Option.filter(Predicate.isNotNull),
+          identity
+        )
+      } else {
+        return propertySignature(orUndefined(schema), { isOptional: true })
       }
-      return new PropertySignatureImpl({
-        _tag: "Declaration",
-        from: orUndefined(schema).ast,
-        isOptional: true,
-        annotations: toAnnotations(annotations)
-      })
     }
   }
 }
@@ -1114,107 +1768,299 @@ export const optional: {
 /**
  * @since 1.0.0
  */
-export type FromOptionalKeys<Fields> = {
-  [K in keyof Fields]: Fields[K] extends
-    | PropertySignature<any, true, any, boolean, any>
-    | PropertySignature<never, true, never, boolean, any> ? K
-    : never
-}[keyof Fields]
+export declare namespace Struct {
+  /**
+   * @since 1.0.0
+   */
+  export type Fields = Record<
+    PropertyKey,
+    | Schema.All
+    | PropertySignature.Any
+  >
+
+  type Key<F extends Fields, K extends keyof F> = [K] extends [never] ? never :
+    F[K] extends PropertySignature.Any<infer Key> ? [Key] extends [never] ? K : Key :
+    K
+
+  type EncodedTokenKeys<Fields extends Struct.Fields> = {
+    [K in keyof Fields]: Fields[K] extends
+      | PropertySignature<PropertySignature.Token, any, PropertyKey, "?:", any, any, unknown>
+      | PropertySignature<PropertySignature.Token, never, PropertyKey, "?:", never, any, unknown> ? K
+      : never
+  }[keyof Fields]
+
+  type TypeTokenKeys<Fields extends Struct.Fields> = {
+    [K in keyof Fields]: Fields[K] extends
+      | PropertySignature<"?:", any, PropertyKey, PropertySignature.Token, any, any, unknown>
+      | PropertySignature<"?:", never, PropertyKey, PropertySignature.Token, never, any, unknown> ? K
+      : never
+  }[keyof Fields]
+
+  /**
+   * @since 1.0.0
+   */
+  export type Type<F extends Fields, OptionalKeys extends PropertyKey = TypeTokenKeys<F>> =
+    & { readonly [K in Exclude<keyof F, OptionalKeys>]: Schema.Type<F[K]> }
+    & { readonly [K in OptionalKeys]?: Schema.Type<F[K]> }
+
+  /**
+   * @since 1.0.0
+   */
+  export type Encoded<F extends Fields, OptionalKeys extends PropertyKey = EncodedTokenKeys<F>> =
+    & { readonly [K in Exclude<keyof F, OptionalKeys> as Key<F, K>]: Schema.Encoded<F[K]> }
+    & { readonly [K in OptionalKeys as Key<F, K>]?: Schema.Encoded<F[K]> }
+
+  /**
+   * @since 1.0.0
+   */
+  export type Context<F extends Fields> = Schema.Context<F[keyof F]>
+}
 
 /**
  * @since 1.0.0
  */
-export type ToOptionalKeys<Fields> = {
-  [K in keyof Fields]: Fields[K] extends
-    | PropertySignature<any, boolean, any, true, any>
-    | PropertySignature<never, boolean, never, true, any> ? K
-    : never
-}[keyof Fields]
+export declare namespace IndexSignature {
+  /**
+   * @since 1.0.0
+   */
+  export type Record = { readonly key: Schema.All; readonly value: Schema.All }
+
+  /**
+   * @since 1.0.0
+   */
+  export type Records = ReadonlyArray<Record>
+
+  /**
+   * @since 1.0.0
+   */
+  export type NonEmptyRecords = ReadonlyArray.NonEmptyReadonlyArray<Record>
+
+  /**
+   * @since 1.0.0
+   */
+  export type Type<
+    Records extends IndexSignature.Records
+  > = UnionToIntersection<
+    {
+      [K in keyof Records]: {
+        readonly [P in Schema.Type<Records[K]["key"]>]: Schema.Type<Records[K]["value"]>
+      }
+    }[number]
+  >
+
+  /**
+   * @since 1.0.0
+   */
+  export type Encoded<
+    Records extends IndexSignature.Records
+  > = UnionToIntersection<
+    {
+      [K in keyof Records]: {
+        readonly [P in Schema.Encoded<Records[K]["key"]>]: Schema.Encoded<Records[K]["value"]>
+      }
+    }[number]
+  >
+
+  /**
+   * @since 1.0.0
+   */
+  export type Context<Records extends IndexSignature.Records> = {
+    [K in keyof Records]: Schema.Context<Records[K]["key"]> | Schema.Context<Records[K]["value"]>
+  }[number]
+}
 
 /**
  * @since 1.0.0
  */
-export type StructFields = Record<
-  PropertyKey,
-  | Schema<any, any, any>
-  | Schema<never, never, any>
-  | PropertySignature<any, boolean, any, boolean, any>
-  | PropertySignature<never, boolean, never, boolean, any>
->
+export declare namespace TypeLiteral {
+  /**
+   * @since 1.0.0
+   */
+  export type Type<Fields extends Struct.Fields, Records extends IndexSignature.Records> =
+    & Struct.Type<Fields>
+    & IndexSignature.Type<Records>
+
+  /**
+   * @since 1.0.0
+   */
+  export type Encoded<Fields extends Struct.Fields, Records extends IndexSignature.Records> =
+    & Struct.Encoded<Fields>
+    & IndexSignature.Encoded<Records>
+}
 
 /**
+ * @category api interface
  * @since 1.0.0
  */
-export type FromStruct<Fields extends StructFields> =
-  & { readonly [K in Exclude<keyof Fields, FromOptionalKeys<Fields>>]: Schema.From<Fields[K]> }
-  & { readonly [K in FromOptionalKeys<Fields>]?: Schema.From<Fields[K]> }
+export interface typeLiteral<
+  Fields extends Struct.Fields,
+  Records extends IndexSignature.Records
+> extends
+  Annotable<
+    typeLiteral<Fields, Records>,
+    Simplify<TypeLiteral.Type<Fields, Records>>,
+    Simplify<TypeLiteral.Encoded<Fields, Records>>,
+    | Struct.Context<Fields>
+    | IndexSignature.Context<Records>
+  >
+{
+  readonly fields: Simplify<Fields>
+  readonly records: Simplify<Records>
+}
+
+const isPropertySignature = (u: unknown): u is PropertySignature.Any =>
+  Predicate.hasProperty(u, PropertySignatureTypeId)
+
+class $typeLiteral<
+  Fields extends Struct.Fields,
+  const Records extends IndexSignature.Records
+> extends _schema.Schema<
+  Simplify<TypeLiteral.Type<Fields, Records>>,
+  Simplify<TypeLiteral.Encoded<Fields, Records>>,
+  | Struct.Context<Fields>
+  | IndexSignature.Context<Records>
+> implements typeLiteral<Fields, Records> {
+  static ast = <
+    Fields extends Struct.Fields,
+    const Records extends IndexSignature.Records
+  >(fields: Fields, records: Records): AST.AST => {
+    const ownKeys = _util.ownKeys(fields)
+    const pss: Array<AST.PropertySignature> = []
+    if (ownKeys.length > 0) {
+      const from: Array<AST.PropertySignature> = []
+      const to: Array<AST.PropertySignature> = []
+      const transformations: Array<AST.PropertySignatureTransformation> = []
+      for (let i = 0; i < ownKeys.length; i++) {
+        const key = ownKeys[i]
+        const field = fields[key]
+        if (isPropertySignature(field)) {
+          const ast: PropertySignature.AST = field.ast
+          switch (ast._tag) {
+            case "PropertySignatureDeclaration": {
+              const type = ast.ast
+              const isOptional = ast.isOptional
+              const toAnnotations = ast.annotations
+              from.push(new AST.PropertySignature(key, type, isOptional, true))
+              to.push(new AST.PropertySignature(key, AST.typeAST(type), isOptional, true, toAnnotations))
+              pss.push(new AST.PropertySignature(key, type, isOptional, true, toAnnotations))
+              break
+            }
+            case "PropertySignatureTransformation": {
+              const fromKey = ast.fromKey ?? key
+              from.push(
+                new AST.PropertySignature(fromKey, ast.from.ast, ast.from.isOptional, true, ast.from.annotations)
+              )
+              to.push(
+                new AST.PropertySignature(key, ast.to.ast, ast.to.isOptional, true, ast.to.annotations)
+              )
+              transformations.push(new AST.PropertySignatureTransformation(fromKey, key, ast.decode, ast.encode))
+              break
+            }
+          }
+        } else {
+          from.push(new AST.PropertySignature(key, field.ast, false, true))
+          to.push(new AST.PropertySignature(key, AST.typeAST(field.ast), false, true))
+          pss.push(new AST.PropertySignature(key, field.ast, false, true))
+        }
+      }
+      if (ReadonlyArray.isNonEmptyReadonlyArray(transformations)) {
+        const issFrom: Array<AST.IndexSignature> = []
+        const issTo: Array<AST.IndexSignature> = []
+        for (const r of records) {
+          const { indexSignatures, propertySignatures } = AST.record(r.key.ast, r.value.ast)
+          propertySignatures.forEach((ps) => {
+            from.push(ps)
+            to.push(
+              new AST.PropertySignature(ps.name, AST.typeAST(ps.type), ps.isOptional, ps.isReadonly, ps.annotations)
+            )
+          })
+          indexSignatures.forEach((is) => {
+            issFrom.push(is)
+            issTo.push(new AST.IndexSignature(is.parameter, AST.typeAST(is.type), is.isReadonly))
+          })
+        }
+        return new AST.Transformation(
+          new AST.TypeLiteral(from, issFrom),
+          new AST.TypeLiteral(to, issTo),
+          new AST.TypeLiteralTransformation(transformations)
+        )
+      }
+    }
+    const iss: Array<AST.IndexSignature> = []
+    for (const r of records) {
+      const { indexSignatures, propertySignatures } = AST.record(r.key.ast, r.value.ast)
+      propertySignatures.forEach((ps) => pss.push(ps))
+      indexSignatures.forEach((is) => iss.push(is))
+    }
+    return new AST.TypeLiteral(pss, iss)
+  }
+  constructor(
+    readonly fields: Fields,
+    readonly records: Records,
+    ast: AST.AST = $typeLiteral.ast(fields, records)
+  ) {
+    super(ast)
+  }
+  annotations(
+    annotations: Annotations<Simplify<TypeLiteral.Type<Fields, Records>>>
+  ): typeLiteral<Fields, Records> {
+    return new $typeLiteral(this.fields, this.records, _schema.annotations(this.ast, annotations))
+  }
+}
 
 /**
+ * @category api interface
  * @since 1.0.0
  */
-export type ToStruct<Fields extends StructFields> =
-  & { readonly [K in Exclude<keyof Fields, ToOptionalKeys<Fields>>]: Schema.To<Fields[K]> }
-  & { readonly [K in ToOptionalKeys<Fields>]?: Schema.To<Fields[K]> }
+export interface struct<Fields extends Struct.Fields> extends typeLiteral<Fields, []> {
+  annotations(annotations: Annotations<Simplify<Struct.Type<Fields>>>): struct<Fields>
+}
 
 /**
  * @category combinators
  * @since 1.0.0
  */
-export const struct = <Fields extends StructFields>(
-  fields: Fields
-): Schema<Simplify<ToStruct<Fields>>, Simplify<FromStruct<Fields>>, Schema.Context<Fields[keyof Fields]>> => {
-  const ownKeys = Internal.ownKeys(fields)
-  const pss: Array<AST.PropertySignature> = []
-  const pssFrom: Array<AST.PropertySignature> = []
-  const pssTo: Array<AST.PropertySignature> = []
-  const psTransformations: Array<AST.PropertySignatureTransform> = []
-  for (let i = 0; i < ownKeys.length; i++) {
-    const key = ownKeys[i]
-    const field = fields[key] as any
-    if ("propertySignatureAST" in field) {
-      const psAst: PropertySignatureAST = field.propertySignatureAST
-      const from = psAst.from
-      const annotations = psAst.annotations
-      switch (psAst._tag) {
-        case "Declaration":
-          pss.push(AST.createPropertySignature(key, from, psAst.isOptional, true, annotations))
-          pssFrom.push(AST.createPropertySignature(key, from, psAst.isOptional, true))
-          pssTo.push(
-            AST.createPropertySignature(key, AST.to(from), psAst.isOptional, true, annotations)
-          )
-          break
-        case "OptionalToRequired":
-          pssFrom.push(AST.createPropertySignature(key, from, true, true))
-          pssTo.push(AST.createPropertySignature(key, psAst.to, false, true, annotations))
-          psTransformations.push(
-            AST.createPropertySignatureTransform(
-              key,
-              key,
-              AST.createFinalPropertySignatureTransformation(psAst.decode, psAst.encode)
-            )
-          )
-          break
-      }
-    } else {
-      pss.push(AST.createPropertySignature(key, field.ast, false, true))
-      pssFrom.push(AST.createPropertySignature(key, field.ast, false, true))
-      pssTo.push(AST.createPropertySignature(key, AST.to(field.ast), false, true))
-    }
+export function struct<Fields extends Struct.Fields, const Records extends IndexSignature.NonEmptyRecords>(
+  fields: Fields,
+  ...records: Records
+): typeLiteral<Fields, Records>
+export function struct<Fields extends Struct.Fields>(fields: Fields): struct<Fields>
+export function struct<Fields extends Struct.Fields, const Records extends IndexSignature.Records>(
+  fields: Fields,
+  ...records: Records
+): typeLiteral<Fields, Records> {
+  return new $typeLiteral(fields, records)
+}
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface record<K extends Schema.All, V extends Schema.All> extends typeLiteral<{}, [{ key: K; value: V }]> {
+  readonly key: K
+  readonly value: V
+  annotations(annotations: Annotations<Simplify<TypeLiteral.Type<{}, [{ key: K; value: V }]>>>): record<K, V>
+}
+
+class $record<K extends Schema.All, V extends Schema.All> extends $typeLiteral<
+  {},
+  [{ key: K; value: V }]
+> implements record<K, V> {
+  constructor(readonly key: K, readonly value: V, ast?: AST.AST) {
+    super({}, [{ key, value }], ast)
   }
-  if (ReadonlyArray.isNonEmptyReadonlyArray(psTransformations)) {
-    return make(
-      AST.createTransform(
-        AST.createTypeLiteral(pssFrom, []),
-        AST.createTypeLiteral(pssTo, []),
-        AST.createTypeLiteralTransformation(
-          psTransformations
-        )
-      )
-    )
+  annotations(annotations: Annotations<Simplify<TypeLiteral.Type<{}, [{ key: K; value: V }]>>>) {
+    return new $record(this.key, this.value, _schema.annotations(this.ast, annotations))
   }
-  return make(AST.createTypeLiteral(pss, []))
 }
 
+/**
+ * @category combinators
+ * @since 1.0.0
+ */
+export const record = <K extends Schema.All, V extends Schema.All>(key: K, value: V): record<K, V> =>
+  new $record(key, value)
+
 /**
  * @category struct transformations
  * @since 1.0.0
@@ -1230,10 +2076,10 @@ export const pick = <A, Keys extends ReadonlyArray<keyof A>>(...keys: Keys) =>
         .filter((t) => (keys as ReadonlyArray<PropertyKey>).includes(t.to))
       if (ReadonlyArray.isNonEmptyReadonlyArray(propertySignatureTransformations)) {
         return make(
-          AST.createTransform(
+          new AST.Transformation(
             AST.pick(ast.from, keys),
             AST.pick(ast.to, keys),
-            AST.createTypeLiteralTransformation(propertySignatureTransformations)
+            new AST.TypeLiteralTransformation(propertySignatureTransformations)
           )
         )
       } else {
@@ -1260,10 +2106,10 @@ export const omit = <A, Keys extends ReadonlyArray<keyof A>>(...keys: Keys) =>
         .filter((t) => !(keys as ReadonlyArray<PropertyKey>).includes(t.to))
       if (ReadonlyArray.isNonEmptyReadonlyArray(propertySignatureTransformations)) {
         return make(
-          AST.createTransform(
+          new AST.Transformation(
             AST.omit(ast.from, keys),
             AST.omit(ast.to, keys),
-            AST.createTypeLiteralTransformation(propertySignatureTransformations)
+            new AST.TypeLiteralTransformation(propertySignatureTransformations)
           )
         )
       } else {
@@ -1339,7 +2185,7 @@ export const pluck: {
       const ps = AST.getPropertyKeyIndexedAccess(schema.ast, key)
       return make(ps.isOptional ? AST.orUndefined(ps.type) : ps.type)
     } else {
-      const ps = AST.getPropertyKeyIndexedAccess(to(schema).ast, key)
+      const ps = AST.getPropertyKeyIndexedAccess(typeSchema(schema).ast, key)
       const value = make<A[K], A[K], R>(ps.isOptional ? AST.orUndefined(ps.type) : ps.type)
       return transform(
         schema,
@@ -1351,22 +2197,40 @@ export const pluck: {
   }
 )
 
+const makeBrandSchema = <S extends Schema.AnyNoContext, B extends string | symbol>(
+  self: AST.AST,
+  annotations: Annotations<Schema.Type<S> & Brand.Brand<B>>
+): brand<S, B> => {
+  const ast = AST.annotations(self, _schema.toASTAnnotations(annotations))
+  const _validateEither = validateEither(make(ast))
+
+  const refined: any = Brand.refined((unbranded) =>
+    Either.match(_validateEither(unbranded), {
+      onLeft: (e) => Option.some(Brand.error(TreeFormatter.formatError(e), e)),
+      onRight: () => Option.none()
+    })
+  )
+  // make refined a BrandSchema...
+  refined[TypeId] = _schema.variance
+  refined.ast = ast
+  refined.pipe = function() {
+    return pipeArguments(this, arguments)
+  }
+  refined.annotations = (annotations: Annotations<Schema.Type<S> & Brand.Brand<B>>) => {
+    return makeBrandSchema(ast, annotations)
+  }
+  return refined
+}
+
 /**
- * @category model
+ * @category api interface
  * @since 1.0.0
  */
-export interface BrandSchema<A extends Brand.Brand<any>, I, R> extends Schema<A, I, R>, Brand.Brand.Constructor<A> {}
-
-const appendBrandAnnotation = <B extends string | symbol>(
-  ast: AST.AST,
-  brand: B,
-  options?: DocAnnotations
-): AST.AST => {
-  const annotations = toAnnotations(options)
-  const brands = ast.annotations[AST.BrandAnnotationId] as Array<string> | undefined
-  annotations[AST.BrandAnnotationId] = brands ? [...brands, brand] : [brand]
-  return AST.mergeAnnotations(ast, annotations)
-}
+export interface brand<S extends Schema.AnyNoContext, B extends string | symbol>
+  extends
+    Annotable<brand<S, B>, Schema.Type<S> & Brand.Brand<B>, Schema.Encoded<S>>,
+    Brand.Brand.Constructor<Schema.Type<S> & Brand.Brand<B>>
+{}
 
 /**
  * Returns a nominal branded schema by applying a brand to a given schema.
@@ -1382,41 +2246,25 @@ const appendBrandAnnotation = <B extends string | symbol>(
  * import * as Schema from "@effect/schema/Schema"
  *
  * const Int = Schema.number.pipe(Schema.int(), Schema.brand("Int"))
- * type Int = Schema.Schema.To<typeof Int> // number & Brand<"Int">
+ * type Int = Schema.Schema.Type<typeof Int> // number & Brand<"Int">
  *
  * @category combinators
  * @since 1.0.0
  */
-export const brand =
-  <B extends string | symbol, A>(brand: B, options?: DocAnnotations) =>
-  <I>(self: Schema<A, I, never>): BrandSchema<A & Brand.Brand<B>, I, never> => {
-    const ast = appendBrandAnnotation(self.ast, brand, options)
-    const schema = make<I, A, never>(ast)
-    const validateSync = Parser.validateSync(schema)
-    const validateOption = Parser.validateOption(schema)
-    const _validateEither = validateEither(schema)
-    const is = Parser.is(schema)
-    const out: any = Object.assign((input: unknown) => validateSync(input), {
-      [Brand.RefinedConstructorsTypeId]: Brand.RefinedConstructorsTypeId,
-      [TypeId]: InternalSchema.variance,
-      ast,
-      option: (input: unknown) => validateOption(input),
-      either: (input: unknown) =>
-        Either.mapLeft(
-          _validateEither(input),
-          (e) =>
-            ArrayFormatter.formatError(e).map((err) => ({
-              meta: err.path,
-              message: err.message
-            }))
-        ),
-      is: (input: unknown): input is A & Brand.Brand<B> => is(input),
-      pipe() {
-        return pipeArguments(this, arguments)
-      }
-    })
-    return out
-  }
+export const brand = <S extends Schema.AnyNoContext, B extends string | symbol>(
+  brand: B,
+  annotations?: Annotations<Schema.Type<S> & Brand.Brand<B>>
+) =>
+(self: S): brand<S, B> => {
+  const brandAnnotation: AST.BrandAnnotation = Option.match(AST.getBrandAnnotation(self.ast), {
+    onNone: () => [brand],
+    onSome: (brands) => [...brands, brand]
+  })
+  return makeBrandSchema(self.ast, {
+    ...annotations,
+    [AST.BrandAnnotationId]: brandAnnotation
+  })
+}
 
 /**
  * @category combinators
@@ -1453,92 +2301,79 @@ export const required = <A, I, R>(
  */
 export const mutable = <A, I, R>(
   schema: Schema<A, I, R>
-): Schema<Simplify<Mutable<A>>, Simplify<Mutable<I>>, R> => {
+): Schema<{ -readonly [P in keyof A]: A[P] }, { -readonly [P in keyof I]: I[P] }, R> => {
   const ast = AST.mutable(schema.ast)
   return ast === schema.ast ? schema as any : make(ast)
 }
 
-/**
- * @category combinators
- * @since 1.0.0
- */
-export const record = <AK extends string | symbol, IK extends string | symbol, R1, AV, IV, R2>(
-  key: Schema<AK, IK, R1>,
-  value: Schema<AV, IV, R2>
-): Schema<{ readonly [K in AK]: AV }, { readonly [K in IK]: IV }, R1 | R2> =>
-  make(AST.createRecord(key.ast, value.ast, true))
+const getExtendErrorMessage = (x: AST.AST, y: AST.AST, path: ReadonlyArray<string>) =>
+  `cannot extend \`${x}\` with \`${y}\` (path [${path?.join(", ")}])`
+
+const intersectTypeLiterals = (x: AST.AST, y: AST.AST, path: ReadonlyArray<string>): AST.TypeLiteral => {
+  if (AST.isTypeLiteral(x) && AST.isTypeLiteral(y)) {
+    const propertySignatures = [...x.propertySignatures]
+    for (const ps of y.propertySignatures) {
+      const name = ps.name
+      const i = propertySignatures.findIndex((ps) => ps.name === name)
+      if (i === -1) {
+        propertySignatures.push(ps)
+      } else {
+        const { isOptional, type } = propertySignatures[i]
+        path = [...path, _util.formatUnknown(name)]
+        propertySignatures[i] = new AST.PropertySignature(name, extendAST(type, ps.type, path), isOptional, true)
+      }
+    }
+    return new AST.TypeLiteral(
+      propertySignatures,
+      x.indexSignatures.concat(y.indexSignatures)
+    )
+  }
+  throw new Error(getExtendErrorMessage(x, y, path))
+}
 
-/** @internal */
-export const intersectUnionMembers = (xs: ReadonlyArray<AST.AST>, ys: ReadonlyArray<AST.AST>) => {
-  return AST.createUnion(
+const extendAST = (x: AST.AST, y: AST.AST, path: ReadonlyArray<string>): AST.AST =>
+  intersectUnionMembers(AST.isUnion(x) ? x.types : [x], AST.isUnion(y) ? y.types : [y], path)
+
+const intersectUnionMembers = (
+  xs: ReadonlyArray<AST.AST>,
+  ys: ReadonlyArray<AST.AST>,
+  path: ReadonlyArray<string>
+): AST.AST =>
+  AST.Union.make(
     xs.flatMap((x) => {
       return ys.map((y) => {
         if (AST.isTypeLiteral(x)) {
           if (AST.isTypeLiteral(y)) {
-            // isTypeLiteral(x) && isTypeLiteral(y)
-            return AST.createTypeLiteral(
-              x.propertySignatures.concat(y.propertySignatures),
-              x.indexSignatures.concat(y.indexSignatures)
-            )
+            return intersectTypeLiterals(x, y, path)
           } else if (
-            AST.isTransform(y) && AST.isTypeLiteralTransformation(y.transformation) &&
-            AST.isTypeLiteral(y.from) && AST.isTypeLiteral(y.to)
+            AST.isTransform(y) && AST.isTypeLiteralTransformation(y.transformation)
           ) {
-            // isTypeLiteral(x) && isTransform(y)
-            const from = AST.createTypeLiteral(
-              x.propertySignatures.concat(y.from.propertySignatures),
-              x.indexSignatures.concat(y.from.indexSignatures)
-            )
-            const to = AST.createTypeLiteral(
-              AST.getToPropertySignatures(x.propertySignatures).concat(y.to.propertySignatures),
-              AST.getToIndexSignatures(x.indexSignatures).concat(y.to.indexSignatures)
-            )
-            return AST.createTransform(
-              from,
-              to,
-              AST.createTypeLiteralTransformation(
+            return new AST.Transformation(
+              intersectTypeLiterals(x, y.from, path),
+              intersectTypeLiterals(AST.typeAST(x), y.to, path),
+              new AST.TypeLiteralTransformation(
                 y.transformation.propertySignatureTransformations
               )
             )
           }
         } else if (
-          AST.isTransform(x) && AST.isTypeLiteralTransformation(x.transformation) &&
-          AST.isTypeLiteral(x.from) && AST.isTypeLiteral(x.to)
+          AST.isTransform(x) && AST.isTypeLiteralTransformation(x.transformation)
         ) {
           if (AST.isTypeLiteral(y)) {
-            // isTransform(x) && isTypeLiteral(y)
-            const from = AST.createTypeLiteral(
-              x.from.propertySignatures.concat(y.propertySignatures),
-              x.from.indexSignatures.concat(y.indexSignatures)
-            )
-            const to = AST.createTypeLiteral(
-              x.to.propertySignatures.concat(AST.getToPropertySignatures(y.propertySignatures)),
-              x.to.indexSignatures.concat(AST.getToIndexSignatures(y.indexSignatures))
-            )
-            return AST.createTransform(
-              from,
-              to,
-              AST.createTypeLiteralTransformation(
+            return new AST.Transformation(
+              intersectTypeLiterals(x.from, y, path),
+              intersectTypeLiterals(x.to, AST.typeAST(y), path),
+              new AST.TypeLiteralTransformation(
                 x.transformation.propertySignatureTransformations
               )
             )
           } else if (
-            AST.isTransform(y) && AST.isTypeLiteralTransformation(y.transformation) &&
-            AST.isTypeLiteral(y.from) && AST.isTypeLiteral(y.to)
+            AST.isTransform(y) && AST.isTypeLiteralTransformation(y.transformation)
           ) {
-            // isTransform(x) && isTransform(y)
-            const from = AST.createTypeLiteral(
-              x.from.propertySignatures.concat(y.from.propertySignatures),
-              x.from.indexSignatures.concat(y.from.indexSignatures)
-            )
-            const to = AST.createTypeLiteral(
-              x.to.propertySignatures.concat(y.to.propertySignatures),
-              x.to.indexSignatures.concat(y.to.indexSignatures)
-            )
-            return AST.createTransform(
-              from,
-              to,
-              AST.createTypeLiteralTransformation(
+            return new AST.Transformation(
+              intersectTypeLiterals(x.from, y.from, path),
+              intersectTypeLiterals(x.to, y.to, path),
+              new AST.TypeLiteralTransformation(
                 x.transformation.propertySignatureTransformations.concat(
                   y.transformation.propertySignatureTransformations
                 )
@@ -1546,36 +2381,41 @@ export const intersectUnionMembers = (xs: ReadonlyArray<AST.AST>, ys: ReadonlyAr
             )
           }
         }
-        throw new Error("`extend` can only handle type literals or unions of type literals")
+        throw new Error(getExtendErrorMessage(x, y, path))
       })
     })
   )
-}
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface extend<Self extends Schema.Any, That extends Schema.Any> extends
+  Schema<
+    Simplify<Schema.Type<Self> & Schema.Type<That>>,
+    Simplify<Schema.Encoded<Self> & Schema.Encoded<That>>,
+    Schema.Context<Self> | Schema.Context<That>
+  >
+{}
 
 /**
  * @category combinators
  * @since 1.0.0
  */
 export const extend: {
-  <B, IB, R2>(
-    that: Schema<B, IB, R2>
-  ): <A, I, R1>(self: Schema<A, I, R1>) => Schema<Simplify<A & B>, Simplify<I & IB>, R1 | R2>
-  <A, I, R1, B, IB, R2>(
-    self: Schema<A, I, R1>,
-    that: Schema<B, IB, R2>
-  ): Schema<Simplify<A & B>, Simplify<I & IB>, R1 | R2>
+  <That extends Schema.Any>(
+    that: That
+  ): <Self extends Schema.Any>(self: Self) => extend<Self, That>
+  <Self extends Schema.Any, That extends Schema.Any>(
+    self: Self,
+    that: That
+  ): extend<Self, That>
 } = dual(
   2,
-  <A, I, R1, B, IB, R2>(
-    self: Schema<A, I, R1>,
-    that: Schema<B, IB, R2>
-  ): Schema<Simplify<A & B>, Simplify<I & IB>, R1 | R2> =>
-    make(
-      intersectUnionMembers(
-        AST.isUnion(self.ast) ? self.ast.types : [self.ast],
-        AST.isUnion(that.ast) ? that.ast.types : [that.ast]
-      )
-    )
+  <Self extends Schema.Any, That extends Schema.Any>(
+    self: Self,
+    that: That
+  ) => make(extendAST(self.ast, that.ast, []))
 )
 
 /**
@@ -1602,8 +2442,8 @@ export const compose: {
  */
 export const suspend = <A, I, R>(
   f: () => Schema<A, I, R>,
-  annotations?: AST.Annotations
-): Schema<A, I, R> => make(AST.createSuspend(() => f().ast, annotations))
+  annotations?: Annotations<A>
+): Schema<A, I, R> => make(new AST.Suspend(() => f().ast, _schema.toASTAnnotations(annotations)))
 
 /**
  * @category combinators
@@ -1611,34 +2451,64 @@ export const suspend = <A, I, R>(
  */
 export function filter<A>(
   f: (a: A, options: ParseOptions, self: AST.Refinement) => Option.Option<ParseResult.ParseIssue>,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>
 export function filter<C extends A, B extends A, A = C>(
   refinement: Predicate.Refinement<A, B>,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ): <I, R>(self: Schema<C, I, R>) => Schema<C & B, I, R>
 export function filter<A>(
   predicate: Predicate.Predicate<NoInfer<A>>,
-  options?: FilterAnnotations<NoInfer<A>>
+  annotations?: FilterAnnotations<NoInfer<A>>
 ): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>
 export function filter<A>(
   predicate: Predicate.Predicate<A> | AST.Refinement["filter"],
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> {
   return (self) =>
-    make(AST.createRefinement(
-      self.ast,
-      (a, options, ast) => {
-        const out = predicate(a, options, ast)
-        if (Predicate.isBoolean(out)) {
+    make(
+      new AST.Refinement(
+        self.ast,
+        (a, options, ast) => {
+          const out = predicate(a, options, ast)
+          if (Predicate.isBoolean(out)) {
+            return out
+              ? Option.none()
+              : Option.some(new ParseResult.Type(ast, a))
+          }
           return out
-            ? Option.none()
-            : Option.some(ParseResult.type(ast, a))
-        }
-        return out
-      },
-      toAnnotations(options)
-    ))
+        },
+        _schema.toASTAnnotations(annotations)
+      )
+    )
+}
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface transformOrFail<From extends Schema.Any, To extends Schema.Any, R> extends
+  Annotable<
+    transformOrFail<From, To, R>,
+    Schema.Type<To>,
+    Schema.Encoded<From>,
+    Schema.Context<From> | Schema.Context<To> | R
+  >
+{
+  readonly from: From
+  readonly to: To
+}
+
+class $transformOrFail<From extends Schema.Any, To extends Schema.Any, R>
+  extends _schema.Schema<Schema.Type<To>, Schema.Encoded<From>, Schema.Context<From> | Schema.Context<To> | R>
+  implements transformOrFail<From, To, R>
+{
+  constructor(readonly from: From, readonly to: To, ast: AST.AST) {
+    super(ast)
+  }
+  annotations(annotations: Annotations<Schema.Type<To>>) {
+    return new $transformOrFail(this.from, this.to, _schema.annotations(this.ast, annotations))
+  }
 }
 
 /**
@@ -1649,52 +2519,90 @@ export function filter<A>(
  * @since 1.0.0
  */
 export const transformOrFail: {
-  <ToA, ToI, ToR, FromA, R3, R4>(
-    to: Schema<ToA, ToI, ToR>,
-    decode: (fromA: FromA, options: ParseOptions, ast: AST.Transform) => Effect.Effect<ToI, ParseResult.ParseIssue, R3>,
-    encode: (toI: ToI, options: ParseOptions, ast: AST.Transform) => Effect.Effect<FromA, ParseResult.ParseIssue, R4>
-  ): <FromI, FromR>(self: Schema<FromA, FromI, FromR>) => Schema<ToA, FromI, FromR | ToR | R3 | R4>
-  <ToA, ToI, ToR, FromA, R3, R4>(
-    to: Schema<ToA, ToI, ToR>,
+  <To extends Schema.Any, From extends Schema.Any, RD, RE>(
+    to: To,
     decode: (
-      fromA: FromA,
+      fromA: Schema.Type<From>,
+      options: ParseOptions,
+      ast: AST.Transformation
+    ) => Effect.Effect<Schema.Encoded<To>, ParseResult.ParseIssue, RD>,
+    encode: (
+      toI: Schema.Encoded<To>,
+      options: ParseOptions,
+      ast: AST.Transformation
+    ) => Effect.Effect<Schema.Type<From>, ParseResult.ParseIssue, RE>
+  ): (from: From) => transformOrFail<From, To, RD | RE>
+  <To extends Schema.Any, From extends Schema.Any, RD, RE>(
+    to: To,
+    decode: (
+      fromA: Schema.Type<From>,
+      options: ParseOptions,
+      ast: AST.Transformation
+    ) => Effect.Effect<unknown, ParseResult.ParseIssue, RD>,
+    encode: (
+      toI: Schema.Encoded<To>,
       options: ParseOptions,
-      ast: AST.Transform
-    ) => Effect.Effect<unknown, ParseResult.ParseIssue, R3>,
-    encode: (toI: ToI, options: ParseOptions, ast: AST.Transform) => Effect.Effect<unknown, ParseResult.ParseIssue, R4>,
+      ast: AST.Transformation
+    ) => Effect.Effect<unknown, ParseResult.ParseIssue, RE>,
     options: { strict: false }
-  ): <FromI, FromR>(self: Schema<FromA, FromI, FromR>) => Schema<ToA, FromI, FromR | ToR | R3 | R4>
-  <FromA, FromI, FromR, ToA, ToI, ToR, R3, R4>(
-    from: Schema<FromA, FromI, FromR>,
-    to: Schema<ToA, ToI, ToR>,
-    decode: (fromA: FromA, options: ParseOptions, ast: AST.Transform) => Effect.Effect<ToI, ParseResult.ParseIssue, R3>,
-    encode: (toI: ToI, options: ParseOptions, ast: AST.Transform) => Effect.Effect<FromA, ParseResult.ParseIssue, R4>
-  ): Schema<ToA, FromI, FromR | ToR | R3 | R4>
-  <FromA, FromI, FromR, ToA, ToI, ToR, R3, R4>(
-    from: Schema<FromA, FromI, FromR>,
-    to: Schema<ToA, ToI, ToR>,
+  ): (from: From) => transformOrFail<From, To, RD | RE>
+  <To extends Schema.Any, From extends Schema.Any, RD, R4>(
+    from: From,
+    to: To,
     decode: (
-      fromA: FromA,
+      fromA: Schema.Type<From>,
+      options: ParseOptions,
+      ast: AST.Transformation
+    ) => Effect.Effect<Schema.Encoded<To>, ParseResult.ParseIssue, RD>,
+    encode: (
+      toI: Schema.Encoded<To>,
       options: ParseOptions,
-      ast: AST.Transform
-    ) => Effect.Effect<unknown, ParseResult.ParseIssue, R3>,
-    encode: (toI: ToI, options: ParseOptions, ast: AST.Transform) => Effect.Effect<unknown, ParseResult.ParseIssue, R4>,
+      ast: AST.Transformation
+    ) => Effect.Effect<Schema.Type<From>, ParseResult.ParseIssue, R4>
+  ): transformOrFail<From, To, RD | R4>
+  <To extends Schema.Any, From extends Schema.Any, RD, RE>(
+    from: From,
+    to: To,
+    decode: (
+      fromA: Schema.Type<From>,
+      options: ParseOptions,
+      ast: AST.Transformation
+    ) => Effect.Effect<unknown, ParseResult.ParseIssue, RD>,
+    encode: (
+      toI: Schema.Encoded<To>,
+      options: ParseOptions,
+      ast: AST.Transformation
+    ) => Effect.Effect<unknown, ParseResult.ParseIssue, RE>,
     options: { strict: false }
-  ): Schema<ToA, FromI, FromR | ToR | R3 | R4>
+  ): transformOrFail<From, To, RD | RE>
 } = dual((args) => isSchema(args[0]) && isSchema(args[1]), <FromA, FromI, FromR, ToA, ToI, ToR, R3, R4>(
   from: Schema<FromA, FromI, FromR>,
   to: Schema<ToA, ToI, ToR>,
-  decode: (fromA: FromA, options: ParseOptions, ast: AST.Transform) => Effect.Effect<ToI, ParseResult.ParseIssue, R3>,
-  encode: (toI: ToI, options: ParseOptions, ast: AST.Transform) => Effect.Effect<FromA, ParseResult.ParseIssue, R4>
+  decode: (
+    fromA: FromA,
+    options: ParseOptions,
+    ast: AST.Transformation
+  ) => Effect.Effect<ToI, ParseResult.ParseIssue, R3>,
+  encode: (toI: ToI, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<FromA, ParseResult.ParseIssue, R4>
 ): Schema<ToA, FromI, FromR | ToR | R3 | R4> =>
-  make(
-    AST.createTransform(
+  new $transformOrFail(
+    from,
+    to,
+    new AST.Transformation(
       from.ast,
       to.ast,
-      AST.createFinalTransformation(decode, encode)
+      new AST.FinalTransformation(decode, encode)
     )
   ))
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface transform<From extends Schema.Any, To extends Schema.Any> extends transformOrFail<From, To, never> {
+  annotations(annotations: Annotations<Schema.Type<To>>): transform<From, To>
+}
+
 /**
  * Create a new `Schema` by transforming the input and output of an existing `Schema`
  * using the provided mapping functions.
@@ -1703,30 +2611,30 @@ export const transformOrFail: {
  * @since 1.0.0
  */
 export const transform: {
-  <ToA, ToI, ToR, FromA>(
-    to: Schema<ToA, ToI, ToR>,
-    decode: (fromA: FromA) => ToI,
-    encode: (toI: ToI) => FromA
-  ): <FromI, FromR>(from: Schema<FromA, FromI, FromR>) => Schema<ToA, FromI, FromR | ToR>
-  <ToA, ToI, ToR, FromA>(
-    to: Schema<ToA, ToI, ToR>,
-    decode: (fromA: FromA) => unknown,
-    encode: (toI: ToI) => unknown,
+  <To extends Schema.Any, From extends Schema.Any>(
+    to: To,
+    decode: (fromA: Schema.Type<From>) => Schema.Encoded<To>,
+    encode: (toI: Schema.Encoded<To>) => Schema.Type<From>
+  ): (from: From) => transform<From, To>
+  <To extends Schema.Any, From extends Schema.Any>(
+    to: To,
+    decode: (fromA: Schema.Type<From>) => unknown,
+    encode: (toI: Schema.Encoded<To>) => unknown,
     options: { strict: false }
-  ): <FromI, FromR>(from: Schema<FromA, FromI, FromR>) => Schema<ToA, FromI, FromR | ToR>
-  <FromA, FromI, FromR, ToA, ToI, ToR>(
-    from: Schema<FromA, FromI, FromR>,
-    to: Schema<ToA, ToI, ToR>,
-    decode: (fromA: FromA) => ToI,
-    encode: (toI: ToI) => FromA
-  ): Schema<ToA, FromI, FromR | ToR>
-  <FromA, FromI, FromR, ToA, ToI, ToR>(
-    from: Schema<FromA, FromI, FromR>,
-    to: Schema<ToA, ToI, ToR>,
-    decode: (fromA: FromA) => unknown,
-    encode: (toI: ToI) => unknown,
+  ): (from: From) => transform<From, To>
+  <To extends Schema.Any, From extends Schema.Any>(
+    from: From,
+    to: To,
+    decode: (fromA: Schema.Type<From>) => Schema.Encoded<To>,
+    encode: (toI: Schema.Encoded<To>) => Schema.Type<From>
+  ): transform<From, To>
+  <To extends Schema.Any, From extends Schema.Any>(
+    from: From,
+    to: To,
+    decode: (fromA: Schema.Type<From>) => unknown,
+    encode: (toI: Schema.Encoded<To>) => unknown,
     options: { strict: false }
-  ): Schema<ToA, FromI, FromR | ToR>
+  ): transform<From, To>
 } = dual(
   (args) => isSchema(args[0]) && isSchema(args[1]),
   <FromA, FromI, FromR, ToA, ToI, ToR>(
@@ -1738,6 +2646,12 @@ export const transform: {
     transformOrFail(from, to, (fromA) => ParseResult.succeed(decode(fromA)), (toI) => ParseResult.succeed(encode(toI)))
 )
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface transformLiteral<Type, Encoded> extends Annotable<transformLiteral<Type, Encoded>, Type, Encoded> {}
+
 /**
  * Creates a new `Schema` which transforms literal values.
  *
@@ -1751,10 +2665,10 @@ export const transform: {
  * @category constructors
  * @since 1.0.0
  */
-export const transformLiteral = <From extends AST.LiteralValue, To extends AST.LiteralValue>(
-  from: From,
-  to: To
-): Schema<To, From, never> => transform(literal(from), literal(to), () => to, () => from)
+export const transformLiteral = <Encoded extends AST.LiteralValue, Type extends AST.LiteralValue>(
+  from: Encoded,
+  to: Type
+): transformLiteral<Type, Encoded> => transform(literal(from), literal(to), () => to, () => from)
 
 /**
  * Creates a new `Schema` which maps between corresponding literal values.
@@ -1773,11 +2687,20 @@ export const transformLiteral = <From extends AST.LiteralValue, To extends AST.L
  * @category constructors
  * @since 1.0.0
  */
-export const transformLiterals = <
-  const A extends ReadonlyArray<readonly [from: AST.LiteralValue, to: AST.LiteralValue]>
->(
+export function transformLiterals<const A extends AST.Members<readonly [from: AST.LiteralValue, to: AST.LiteralValue]>>(
   ...pairs: A
-): Schema<A[number][1], A[number][0], never> => union(...pairs.map(([from, to]) => transformLiteral(from, to)))
+): union<{ -readonly [I in keyof A]: transformLiteral<A[I][1], A[I][0]> }>
+export function transformLiterals<Encoded extends AST.LiteralValue, Type extends AST.LiteralValue>(
+  pairs: [Encoded, Type]
+): transformLiteral<Type, Encoded>
+export function transformLiterals<
+  const A extends ReadonlyArray<readonly [from: AST.LiteralValue, to: AST.LiteralValue]>
+>(...pairs: A): Schema<A[number][1], A[number][0]>
+export function transformLiterals<
+  const A extends ReadonlyArray<readonly [from: AST.LiteralValue, to: AST.LiteralValue]>
+>(...pairs: A): Schema<A[number][1], A[number][0]> {
+  return union(...pairs.map(([from, to]) => transformLiteral(from, to)))
+}
 
 /**
  * Attaches a property signature with the specified key and value to the schema.
@@ -1808,18 +2731,18 @@ export const transformLiterals = <
  * @since 1.0.0
  */
 export const attachPropertySignature: {
-  <K extends PropertyKey, V extends AST.LiteralValue | symbol>(
+  <K extends PropertyKey, V extends AST.LiteralValue | symbol, A extends object>(
     key: K,
     value: V,
-    options?: DocAnnotations
-  ): <A extends object, I, R>(
+    annotations?: Annotations<Simplify<A & { readonly [k in K]: V }>>
+  ): <I, R>(
     schema: Schema<A, I, R>
   ) => Schema<Simplify<A & { readonly [k in K]: V }>, I, R>
   <A, I, R, K extends PropertyKey, V extends AST.LiteralValue | symbol>(
     schema: Schema<A, I, R>,
     key: K,
     value: V,
-    options?: DocAnnotations
+    annotations?: Annotations<Simplify<A & { readonly [k in K]: V }>>
   ): Schema<Simplify<A & { readonly [k in K]: V }>, I, R>
 } = dual(
   (args) => isSchema(args[0]),
@@ -1827,148 +2750,122 @@ export const attachPropertySignature: {
     schema: Schema<A, I, R>,
     key: K,
     value: V,
-    options?: DocAnnotations
+    annotations?: Annotations<Simplify<A & { readonly [k in K]: V }>>
   ): Schema<Simplify<A & { readonly [k in K]: V }>, I, R> => {
     const attached = extend(
-      to(schema),
-      struct({ [key]: Predicate.isSymbol(value) ? uniqueSymbol(value) : literal(value) })
+      typeSchema(schema),
+      struct({ [key]: Predicate.isSymbol(value) ? uniqueSymbolFromSelf(value) : literal(value) })
     ).ast
-    return make(AST.createTransform(
-      schema.ast,
-      options ? AST.mergeAnnotations(attached, toAnnotations(options)) : attached,
-      AST.createTypeLiteralTransformation(
-        [
-          AST.createPropertySignatureTransform(
-            key,
-            key,
-            AST.createFinalPropertySignatureTransformation(
+    return make(
+      new AST.Transformation(
+        schema.ast,
+        annotations ? AST.annotations(attached, _schema.toASTAnnotations(annotations)) : attached,
+        new AST.TypeLiteralTransformation(
+          [
+            new AST.PropertySignatureTransformation(
+              key,
+              key,
               () => Option.some(value),
               () => Option.none()
             )
-          )
-        ]
+          ]
+        )
       )
-    ))
+    )
   }
 )
 
-const toAnnotations = (
-  options?: Record<string | symbol, any>
-): Mutable<AST.Annotations> => {
-  if (!options) {
-    return {}
-  }
-  const out: Mutable<AST.Annotations> = {}
-
-  // symbols are reserved for custom annotations
-  const custom = Object.getOwnPropertySymbols(options)
-  for (const sym of custom) {
-    out[sym] = options[sym]
-  }
-
-  // string keys are reserved as /schema namespace
-  if (options.typeId !== undefined) {
-    const typeId = options.typeId
-    if (typeof typeId === "object") {
-      out[AST.TypeAnnotationId] = typeId.id
-      out[typeId.id] = typeId.annotation
-    } else {
-      out[AST.TypeAnnotationId] = typeId
-    }
-  }
-  const move = (from: keyof typeof options, to: symbol) => {
-    if (options[from] !== undefined) {
-      out[to] = options[from]
-    }
-  }
-  move("message", AST.MessageAnnotationId)
-  move("identifier", AST.IdentifierAnnotationId)
-  move("title", AST.TitleAnnotationId)
-  move("description", AST.DescriptionAnnotationId)
-  move("examples", AST.ExamplesAnnotationId)
-  move("default", AST.DefaultAnnotationId)
-  move("documentation", AST.DocumentationAnnotationId)
-  move("jsonSchema", AST.JSONSchemaAnnotationId)
-  move("arbitrary", hooks.ArbitraryHookId)
-  move("pretty", hooks.PrettyHookId)
-  move("equivalence", hooks.EquivalenceHookId)
-  move("concurrency", AST.ConcurrencyAnnotationId)
-  move("batching", AST.BatchingAnnotationId)
-
-  return out
-}
-
 /**
  * @since 1.0.0
  */
-export interface DocAnnotations extends AST.Annotations {
-  readonly identifier?: AST.IdentifierAnnotation
+export interface PropertySignatureAnnotations<A> extends AST.Annotations {
   readonly title?: AST.TitleAnnotation
   readonly description?: AST.DescriptionAnnotation
-  readonly examples?: AST.ExamplesAnnotation
-  readonly default?: AST.DefaultAnnotation
+  readonly examples?: AST.ExamplesAnnotation<A>
+  readonly default?: AST.DefaultAnnotation<A>
   readonly documentation?: AST.DocumentationAnnotation
-  readonly concurrency?: AST.ConcurrencyAnnotation
-  readonly batching?: AST.BatchingAnnotation
 }
 
 /**
  * @since 1.0.0
  */
-export interface FilterAnnotations<A> extends DeclareAnnotations<readonly [A], A> {
-  /**
-   * Attaches a JSON Schema annotation to this refinement.
-   *
-   * If the schema is composed of more than one refinement, the corresponding annotations will be merged.
-   */
+export interface Annotations<A, TypeParameters extends ReadonlyArray<any> = readonly []>
+  extends PropertySignatureAnnotations<A>
+{
+  readonly identifier?: AST.IdentifierAnnotation
+  readonly message?: AST.MessageAnnotation
+  readonly typeId?: AST.TypeAnnotation | { id: AST.TypeAnnotation; annotation: unknown }
   readonly jsonSchema?: AST.JSONSchemaAnnotation
+  readonly arbitrary?: (
+    ...arbitraries: { readonly [K in keyof TypeParameters]: Arbitrary<TypeParameters[K]> }
+  ) => Arbitrary<A>
+  readonly pretty?: (
+    ...pretties: { readonly [K in keyof TypeParameters]: Pretty.Pretty<TypeParameters[K]> }
+  ) => Pretty.Pretty<A>
+  readonly equivalence?: (
+    ...equivalences: { readonly [K in keyof TypeParameters]: Equivalence.Equivalence<TypeParameters[K]> }
+  ) => Equivalence.Equivalence<A>
+  readonly concurrency?: AST.ConcurrencyAnnotation
+  readonly batching?: AST.BatchingAnnotation
 }
 
+/**
+ * @since 1.0.0
+ */
+export interface FilterAnnotations<A> extends Annotations<A, readonly [A]> {}
+
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const annotations = (annotations: AST.Annotations) => <A, I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
-  make(AST.mergeAnnotations(self.ast, annotations))
+export const annotations: {
+  <S extends Annotable.Any>(annotations: Annotations<Schema.Type<S>>): (self: S) => Annotable.Self<S>
+  <S extends Annotable.Any>(self: S, annotations: Annotations<Schema.Type<S>>): Annotable.Self<S>
+} = dual(
+  2,
+  <A, I, R>(self: Schema<A, I, R>, annotations: Annotations<A>): Schema<A, I, R> => self.annotations(annotations)
+)
 
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const message = (message: AST.MessageAnnotation) => <A, I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
-  make(AST.setAnnotation(self.ast, AST.MessageAnnotationId, message))
+export const message = (message: AST.MessageAnnotation) => <S extends Annotable.Any>(self: S): Annotable.Self<S> =>
+  self.annotations({ [AST.MessageAnnotationId]: message })
 
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const identifier = (identifier: AST.IdentifierAnnotation) => <A, I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
-  make(AST.setAnnotation(self.ast, AST.IdentifierAnnotationId, identifier))
+export const identifier =
+  (identifier: AST.IdentifierAnnotation) => <S extends Annotable.Any>(self: S): Annotable.Self<S> =>
+    self.annotations({ [AST.IdentifierAnnotationId]: identifier })
 
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const title = (title: AST.TitleAnnotation) => <A, I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
-  make(AST.setAnnotation(self.ast, AST.TitleAnnotationId, title))
+export const title = (title: AST.TitleAnnotation) => <S extends Annotable.Any>(self: S): Annotable.Self<S> =>
+  self.annotations({ [AST.TitleAnnotationId]: title })
 
 /**
  * @category annotations
  * @since 1.0.0
  */
 export const description =
-  (description: AST.DescriptionAnnotation) => <A, I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
-    make(AST.setAnnotation(self.ast, AST.DescriptionAnnotationId, description))
+  (description: AST.DescriptionAnnotation) => <S extends Annotable.Any>(self: S): Annotable.Self<S> =>
+    self.annotations({ [AST.DescriptionAnnotationId]: description })
 
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const examples = (examples: AST.ExamplesAnnotation) => <A, I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
-  make(AST.setAnnotation(self.ast, AST.ExamplesAnnotationId, examples))
+export const examples =
+  <S extends Annotable.Any>(examples: AST.ExamplesAnnotation<Schema.Type<S>>) => (self: S): Annotable.Self<S> =>
+    self.annotations({ [AST.ExamplesAnnotationId]: examples })
 
-const _default = <A>(value: A) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
-  make(AST.setAnnotation(self.ast, AST.DefaultAnnotationId, value))
+const _default = <S extends Annotable.Any>(value: Schema.Type<S>) => (self: S): Annotable.Self<S> =>
+  self.annotations({ [AST.DefaultAnnotationId]: value })
 
 export {
   /**
@@ -1983,8 +2880,8 @@ export {
  * @since 1.0.0
  */
 export const documentation =
-  (documentation: AST.DocumentationAnnotation) => <A, I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
-    make(AST.setAnnotation(self.ast, AST.DocumentationAnnotationId, documentation))
+  (documentation: AST.DocumentationAnnotation) => <S extends Annotable.Any>(self: S): Annotable.Self<S> =>
+    self.annotations({ [AST.DocumentationAnnotationId]: documentation })
 
 /**
  * Attaches a JSON Schema annotation to a schema that represents a refinement.
@@ -1994,31 +2891,32 @@ export const documentation =
  * @category annotations
  * @since 1.0.0
  */
-export const jsonSchema = (jsonSchema: AST.JSONSchemaAnnotation) => <A, I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
-  make(AST.setAnnotation(self.ast, AST.JSONSchemaAnnotationId, jsonSchema))
+export const jsonSchema =
+  (jsonSchema: AST.JSONSchemaAnnotation) => <S extends Annotable.Any>(self: S): Annotable.Self<S> =>
+    self.annotations({ [AST.JSONSchemaAnnotationId]: jsonSchema })
 
 /**
  * @category annotations
  * @since 1.0.0
  */
 export const equivalence =
-  <A>(equivalence: Equivalence.Equivalence<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
-    make(AST.setAnnotation(self.ast, hooks.EquivalenceHookId, () => equivalence))
+  <S extends Annotable.Any>(equivalence: Equivalence.Equivalence<Schema.Type<S>>) => (self: S): Annotable.Self<S> =>
+    self.annotations({ [_hooks.EquivalenceHookId]: () => equivalence })
 
 /**
  * @category annotations
  * @since 1.0.0
  */
 export const concurrency =
-  (concurrency: AST.ConcurrencyAnnotation) => <A, I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
-    make(AST.setAnnotation(self.ast, AST.ConcurrencyAnnotationId, concurrency))
+  (concurrency: AST.ConcurrencyAnnotation) => <S extends Annotable.Any>(self: S): Annotable.Self<S> =>
+    self.annotations({ [AST.ConcurrencyAnnotationId]: concurrency })
 
 /**
  * @category annotations
  * @since 1.0.0
  */
-export const batching = (batching: AST.BatchingAnnotation) => <A, I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
-  make(AST.setAnnotation(self.ast, AST.BatchingAnnotationId, batching))
+export const batching = (batching: AST.BatchingAnnotation) => <S extends Annotable.Any>(self: S): Annotable.Self<S> =>
+  self.annotations({ [AST.BatchingAnnotationId]: batching })
 
 type Rename<A, M> = {
   [
@@ -2085,12 +2983,12 @@ export const TrimmedTypeId = Symbol.for("@effect/schema/TypeId/Trimmed")
  * @since 1.0.0
  */
 export const trimmed =
-  <A extends string>(options?: FilterAnnotations<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  <A extends string>(annotations?: FilterAnnotations<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
     self.pipe(
       filter((a): a is A => a === a.trim(), {
         typeId: TrimmedTypeId,
         description: "a string with no leading or trailing whitespace",
-        ...options
+        ...annotations
       })
     )
 
@@ -2098,7 +2996,7 @@ export const trimmed =
  * @category type id
  * @since 1.0.0
  */
-export const MaxLengthTypeId: unique symbol = filters.MaxLengthTypeId
+export const MaxLengthTypeId: unique symbol = _filters.MaxLengthTypeId
 
 /**
  * @category type id
@@ -2112,7 +3010,7 @@ export type MaxLengthTypeId = typeof MaxLengthTypeId
  */
 export const maxLength = <A extends string>(
   maxLength: number,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
@@ -2122,7 +3020,7 @@ export const maxLength = <A extends string>(
         typeId: MaxLengthTypeId,
         description: `a string at most ${maxLength} character(s) long`,
         jsonSchema: { maxLength },
-        ...options
+        ...annotations
       }
     )
   )
@@ -2131,7 +3029,7 @@ export const maxLength = <A extends string>(
  * @category type id
  * @since 1.0.0
  */
-export const MinLengthTypeId: unique symbol = filters.MinLengthTypeId
+export const MinLengthTypeId: unique symbol = _filters.MinLengthTypeId
 
 /**
  * @category type id
@@ -2145,7 +3043,7 @@ export type MinLengthTypeId = typeof MinLengthTypeId
  */
 export const minLength = <A extends string>(
   minLength: number,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
@@ -2155,7 +3053,7 @@ export const minLength = <A extends string>(
         typeId: MinLengthTypeId,
         description: `a string at least ${minLength} character(s) long`,
         jsonSchema: { minLength },
-        ...options
+        ...annotations
       }
     )
   )
@@ -2172,7 +3070,7 @@ export const PatternTypeId = Symbol.for("@effect/schema/TypeId/Pattern")
  */
 export const pattern = <A extends string>(
   regex: RegExp,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> => {
   const pattern = regex.source
@@ -2188,7 +3086,7 @@ export const pattern = <A extends string>(
         description: `a string matching the pattern ${pattern}`,
         jsonSchema: { pattern },
         arbitrary: () => (fc) => fc.stringMatching(regex) as any,
-        ...options
+        ...annotations
       }
     )
   )
@@ -2206,7 +3104,7 @@ export const StartsWithTypeId = Symbol.for("@effect/schema/TypeId/StartsWith")
  */
 export const startsWith = <A extends string>(
   startsWith: string,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
@@ -2216,7 +3114,7 @@ export const startsWith = <A extends string>(
         typeId: { id: StartsWithTypeId, annotation: { startsWith } },
         description: `a string starting with ${JSON.stringify(startsWith)}`,
         jsonSchema: { pattern: `^${startsWith}` },
-        ...options
+        ...annotations
       }
     )
   )
@@ -2233,7 +3131,7 @@ export const EndsWithTypeId = Symbol.for("@effect/schema/TypeId/EndsWith")
  */
 export const endsWith = <A extends string>(
   endsWith: string,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
@@ -2243,7 +3141,7 @@ export const endsWith = <A extends string>(
         typeId: { id: EndsWithTypeId, annotation: { endsWith } },
         description: `a string ending with ${JSON.stringify(endsWith)}`,
         jsonSchema: { pattern: `^.*${endsWith}$` },
-        ...options
+        ...annotations
       }
     )
   )
@@ -2260,7 +3158,7 @@ export const IncludesTypeId = Symbol.for("@effect/schema/TypeId/Includes")
  */
 export const includes = <A extends string>(
   searchString: string,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
@@ -2270,7 +3168,7 @@ export const includes = <A extends string>(
         typeId: { id: IncludesTypeId, annotation: { includes: searchString } },
         description: `a string including ${JSON.stringify(searchString)}`,
         jsonSchema: { pattern: `.*${searchString}.*` },
-        ...options
+        ...annotations
       }
     )
   )
@@ -2288,12 +3186,12 @@ export const LowercasedTypeId = Symbol.for("@effect/schema/TypeId/Lowercased")
  * @since 1.0.0
  */
 export const lowercased =
-  <A extends string>(options?: FilterAnnotations<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  <A extends string>(annotations?: FilterAnnotations<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
     self.pipe(
       filter((a): a is A => a === a.toLowerCase(), {
         typeId: LowercasedTypeId,
         description: "a lowercase string",
-        ...options
+        ...annotations
       })
     )
 
@@ -2301,7 +3199,7 @@ export const lowercased =
  * @category string constructors
  * @since 1.0.0
  */
-export const Lowercased: Schema<string> = string.pipe(
+export const Lowercased: $string = string.pipe(
   lowercased({ identifier: "Lowercased", title: "Lowercased" })
 )
 
@@ -2318,12 +3216,12 @@ export const UppercasedTypeId = Symbol.for("@effect/schema/TypeId/Uppercased")
  * @since 1.0.0
  */
 export const uppercased =
-  <A extends string>(options?: FilterAnnotations<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  <A extends string>(annotations?: FilterAnnotations<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
     self.pipe(
       filter((a): a is A => a === a.toUpperCase(), {
         typeId: UppercasedTypeId,
         description: "an uppercase string",
-        ...options
+        ...annotations
       })
     )
 
@@ -2331,7 +3229,7 @@ export const uppercased =
  * @category string constructors
  * @since 1.0.0
  */
-export const Uppercased: Schema<string> = string.pipe(
+export const Uppercased: $string = string.pipe(
   uppercased({ identifier: "Uppercased", title: "Uppercased" })
 )
 
@@ -2339,7 +3237,7 @@ export const Uppercased: Schema<string> = string.pipe(
  * @category type id
  * @since 1.0.0
  */
-export const LengthTypeId: unique symbol = filters.LengthTypeId
+export const LengthTypeId: unique symbol = _filters.LengthTypeId
 
 /**
  * @category type id
@@ -2353,7 +3251,7 @@ export type LengthTypeId = typeof LengthTypeId
  */
 export const length = <A extends string>(
   length: number,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
@@ -2361,7 +3259,7 @@ export const length = <A extends string>(
       typeId: LengthTypeId,
       description: length === 1 ? `a single character` : `a string ${length} character(s) long`,
       jsonSchema: { minLength: length, maxLength: length },
-      ...options
+      ...annotations
     })
   )
 
@@ -2371,32 +3269,44 @@ export const length = <A extends string>(
  * @category string constructors
  * @since 1.0.0
  */
-export const Char = string.pipe(length(1), identifier("Char"))
+export const Char = string.pipe(length(1, { identifier: "Char" }))
 
 /**
  * @category string filters
  * @since 1.0.0
  */
 export const nonEmpty = <A extends string>(
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> =>
   minLength(1, {
     description: "a non empty string",
-    ...options
+    ...annotations
   })
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface Lowercase extends Annotable<Lowercase, string> {}
+
 /**
  * This schema converts a string to lowercase.
  *
  * @category string transformations
  * @since 1.0.0
  */
-export const Lowercase: Schema<string> = transform(
+export const Lowercase: Lowercase = transform(
   string,
   Lowercased,
   (s) => s.toLowerCase(),
   identity
-).pipe(identifier("Lowercase"))
+).annotations({ identifier: "Lowercase" })
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface Uppercase extends Annotable<Uppercase, string> {}
 
 /**
  * This schema converts a string to uppercase.
@@ -2404,33 +3314,39 @@ export const Lowercase: Schema<string> = transform(
  * @category string transformations
  * @since 1.0.0
  */
-export const Uppercase: Schema<string> = transform(
+export const Uppercase: Uppercase = transform(
   string,
   Uppercased,
   (s) => s.toUpperCase(),
   identity
-).pipe(identifier("Uppercase"))
+).annotations({ identifier: "Uppercase" })
 
 /**
  * @category string constructors
  * @since 1.0.0
  */
-export const Trimmed: Schema<string> = string.pipe(
+export const Trimmed: $string = string.pipe(
   trimmed({ identifier: "Trimmed", title: "Trimmed" })
 )
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface Trim extends Annotable<Trim, string> {}
+
 /**
  * This schema allows removing whitespaces from the beginning and end of a string.
  *
  * @category string transformations
  * @since 1.0.0
  */
-export const Trim: Schema<string> = transform(
+export const Trim: Trim = transform(
   string,
   Trimmed,
   (s) => s.trim(),
   identity
-).pipe(identifier("Trim"))
+).annotations({ identifier: "Trim" })
 
 /**
  * Returns a achema that allows splitting a string into an array of strings.
@@ -2455,11 +3371,11 @@ export type ParseJsonOptions = {
   readonly space?: Parameters<typeof JSON.stringify>[2]
 }
 
-const JsonString = string.pipe(annotations({
+const JsonString = string.annotations({
   [AST.IdentifierAnnotationId]: "JsonString",
   [AST.TitleAnnotationId]: "JsonString",
   [AST.DescriptionAnnotationId]: "a JSON string"
-}))
+})
 
 /**
  * The `parseJson` combinator provides a method to convert JSON strings into the `unknown` type using the underlying
@@ -2483,7 +3399,7 @@ export const parseJson: {
   (options?: ParseJsonOptions): Schema<unknown, string>
 } = <A, I, R>(schema?: Schema<A, I, R> | ParseJsonOptions, o?: ParseJsonOptions) => {
   if (isSchema(schema)) {
-    return compose(parseJson(o), schema) as any
+    return compose(parseJson(o), schema as any) as any
   }
   const options: ParseJsonOptions | undefined = schema as any
   return transformOrFail(
@@ -2492,12 +3408,12 @@ export const parseJson: {
     (s, _, ast) =>
       ParseResult.try({
         try: () => JSON.parse(s, options?.reviver),
-        catch: (e: any) => ParseResult.type(ast, s, e.message)
+        catch: (e: any) => new ParseResult.Type(ast, s, e.message)
       }),
     (u, _, ast) =>
       ParseResult.try({
         try: () => JSON.stringify(u, options?.replacer, options?.space),
-        catch: (e: any) => ParseResult.type(ast, u, e.message)
+        catch: (e: any) => new ParseResult.Type(ast, u, e.message)
       })
   )
 }
@@ -2506,7 +3422,7 @@ export const parseJson: {
  * @category string constructors
  * @since 1.0.0
  */
-export const NonEmpty: Schema<string> = string.pipe(
+export const NonEmpty: $string = string.pipe(
   nonEmpty({ identifier: "NonEmpty", title: "NonEmpty" })
 )
 
@@ -2526,7 +3442,7 @@ const uuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-
  * @category string constructors
  * @since 1.0.0
  */
-export const UUID: Schema<string> = string.pipe(
+export const UUID: $string = string.pipe(
   pattern(uuidRegex, {
     typeId: UUIDTypeId,
     identifier: "UUID",
@@ -2553,7 +3469,7 @@ const ulidRegex = /^[0-7][0-9A-HJKMNP-TV-Z]{25}$/i
  * @category string constructors
  * @since 1.0.0
  */
-export const ULID: Schema<string> = string.pipe(
+export const ULID: $string = string.pipe(
   pattern(ulidRegex, {
     typeId: ULIDTypeId,
     identifier: "ULID",
@@ -2578,12 +3494,12 @@ export const FiniteTypeId = Symbol.for("@effect/schema/TypeId/Finite")
  * @since 1.0.0
  */
 export const finite =
-  <A extends number>(options?: FilterAnnotations<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  <A extends number>(annotations?: FilterAnnotations<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
     self.pipe(
       filter((a): a is A => Number.isFinite(a), {
         typeId: FiniteTypeId,
         description: "a finite number",
-        ...options
+        ...annotations
       })
     )
 
@@ -2591,7 +3507,7 @@ export const finite =
  * @category type id
  * @since 1.0.0
  */
-export const GreaterThanTypeId: unique symbol = filters.GreaterThanTypeId
+export const GreaterThanTypeId: unique symbol = _filters.GreaterThanTypeId
 
 /**
  * @category type id
@@ -2607,7 +3523,7 @@ export type GreaterThanTypeId = typeof GreaterThanTypeId
  */
 export const greaterThan = <A extends number>(
   min: number,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
@@ -2615,7 +3531,7 @@ export const greaterThan = <A extends number>(
       typeId: GreaterThanTypeId,
       description: min === 0 ? "a positive number" : `a number greater than ${min}`,
       jsonSchema: { exclusiveMinimum: min },
-      ...options
+      ...annotations
     })
   )
 
@@ -2623,7 +3539,7 @@ export const greaterThan = <A extends number>(
  * @category type id
  * @since 1.0.0
  */
-export const GreaterThanOrEqualToTypeId: unique symbol = filters.GreaterThanOrEqualToTypeId
+export const GreaterThanOrEqualToTypeId: unique symbol = _filters.GreaterThanOrEqualToTypeId
 
 /**
  * @category type id
@@ -2639,7 +3555,7 @@ export type GreaterThanOrEqualToTypeId = typeof GreaterThanOrEqualToTypeId
  */
 export const greaterThanOrEqualTo = <A extends number>(
   min: number,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
@@ -2647,7 +3563,7 @@ export const greaterThanOrEqualTo = <A extends number>(
       typeId: GreaterThanOrEqualToTypeId,
       description: min === 0 ? "a non-negative number" : `a number greater than or equal to ${min}`,
       jsonSchema: { minimum: min },
-      ...options
+      ...annotations
     })
   )
 
@@ -2663,7 +3579,7 @@ export const MultipleOfTypeId = Symbol.for("@effect/schema/TypeId/MultipleOf")
  */
 export const multipleOf = <A extends number>(
   divisor: number,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
@@ -2671,7 +3587,7 @@ export const multipleOf = <A extends number>(
       typeId: MultipleOfTypeId,
       description: `a number divisible by ${divisor}`,
       jsonSchema: { multipleOf: Math.abs(divisor) }, // spec requires positive divisor
-      ...options
+      ...annotations
     })
   )
 
@@ -2679,7 +3595,7 @@ export const multipleOf = <A extends number>(
  * @category type id
  * @since 1.0.0
  */
-export const IntTypeId: unique symbol = filters.IntTypeId
+export const IntTypeId: unique symbol = _filters.IntTypeId
 
 /**
  * @category type id
@@ -2692,14 +3608,14 @@ export type IntTypeId = typeof IntTypeId
  * @since 1.0.0
  */
 export const int =
-  <A extends number>(options?: FilterAnnotations<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  <A extends number>(annotations?: FilterAnnotations<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
     self.pipe(
       filter((a): a is A => Number.isSafeInteger(a), {
         typeId: IntTypeId,
         title: "integer",
         description: "an integer",
         jsonSchema: { type: "integer" },
-        ...options
+        ...annotations
       })
     )
 
@@ -2707,7 +3623,7 @@ export const int =
  * @category type id
  * @since 1.0.0
  */
-export const LessThanTypeId: unique symbol = filters.LessThanTypeId
+export const LessThanTypeId: unique symbol = _filters.LessThanTypeId
 
 /**
  * @category type id
@@ -2722,13 +3638,14 @@ export type LessThanTypeId = typeof LessThanTypeId
  * @since 1.0.0
  */
 export const lessThan =
-  <A extends number>(max: number, options?: FilterAnnotations<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  <A extends number>(max: number, annotations?: FilterAnnotations<A>) =>
+  <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
     self.pipe(
       filter((a): a is A => a < max, {
         typeId: LessThanTypeId,
         description: max === 0 ? "a negative number" : `a number less than ${max}`,
         jsonSchema: { exclusiveMaximum: max },
-        ...options
+        ...annotations
       })
     )
 
@@ -2736,7 +3653,7 @@ export const lessThan =
  * @category type id
  * @since 1.0.0
  */
-export const LessThanOrEqualToTypeId: unique symbol = filters.LessThanOrEqualToTypeId
+export const LessThanOrEqualToTypeId: unique symbol = _filters.LessThanOrEqualToTypeId
 
 /**
  * @category type id
@@ -2752,7 +3669,7 @@ export type LessThanOrEqualToTypeId = typeof LessThanOrEqualToTypeId
  */
 export const lessThanOrEqualTo = <A extends number>(
   max: number,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
@@ -2760,7 +3677,7 @@ export const lessThanOrEqualTo = <A extends number>(
       typeId: LessThanOrEqualToTypeId,
       description: max === 0 ? "a non-positive number" : `a number less than or equal to ${max}`,
       jsonSchema: { maximum: max },
-      ...options
+      ...annotations
     })
   )
 
@@ -2768,7 +3685,7 @@ export const lessThanOrEqualTo = <A extends number>(
  * @category type id
  * @since 1.0.0
  */
-export const BetweenTypeId: unique symbol = filters.BetweenTypeId
+export const BetweenTypeId: unique symbol = _filters.BetweenTypeId
 
 /**
  * @category type id
@@ -2785,7 +3702,7 @@ export type BetweenTypeId = typeof BetweenTypeId
 export const between = <A extends number>(
   min: number,
   max: number,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
@@ -2793,7 +3710,7 @@ export const between = <A extends number>(
       typeId: BetweenTypeId,
       description: `a number between ${min} and ${max}`,
       jsonSchema: { maximum: max, minimum: min },
-      ...options
+      ...annotations
     })
   )
 
@@ -2808,12 +3725,12 @@ export const NonNaNTypeId = Symbol.for("@effect/schema/TypeId/NonNaN")
  * @since 1.0.0
  */
 export const nonNaN =
-  <A extends number>(options?: FilterAnnotations<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  <A extends number>(annotations?: FilterAnnotations<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
     self.pipe(
       filter((a): a is A => !Number.isNaN(a), {
         typeId: NonNaNTypeId,
         description: "a number excluding NaN",
-        ...options
+        ...annotations
       })
     )
 
@@ -2822,32 +3739,32 @@ export const nonNaN =
  * @since 1.0.0
  */
 export const positive = <A extends number>(
-  options?: FilterAnnotations<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => greaterThan(0, options)
+  annotations?: FilterAnnotations<A>
+): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => greaterThan(0, annotations)
 
 /**
  * @category number filters
  * @since 1.0.0
  */
 export const negative = <A extends number>(
-  options?: FilterAnnotations<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => lessThan(0, options)
+  annotations?: FilterAnnotations<A>
+): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => lessThan(0, annotations)
 
 /**
  * @category number filters
  * @since 1.0.0
  */
 export const nonPositive = <A extends number>(
-  options?: FilterAnnotations<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => lessThanOrEqualTo(0, options)
+  annotations?: FilterAnnotations<A>
+): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => lessThanOrEqualTo(0, annotations)
 
 /**
  * @category number filters
  * @since 1.0.0
  */
 export const nonNegative = <A extends number>(
-  options?: FilterAnnotations<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => greaterThanOrEqualTo(0, options)
+  annotations?: FilterAnnotations<A>
+): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => greaterThanOrEqualTo(0, annotations)
 
 /**
  * Clamps a number between a minimum and a maximum value.
@@ -2859,12 +3776,18 @@ export const clamp =
   (minimum: number, maximum: number) => <R, I, A extends number>(self: Schema<A, I, R>): Schema<A, I, R> =>
     transform(
       self,
-      self.pipe(to, between(minimum, maximum)),
+      self.pipe(typeSchema, between(minimum, maximum)),
       (self) => N.clamp(self, { minimum, maximum }),
       identity,
       { strict: false }
     )
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface NumberFromString extends Annotable<NumberFromString, number, string> {}
+
 /**
  * This schema transforms a `string` into a `number` by parsing the string using the `Number` function.
  *
@@ -2875,36 +3798,36 @@ export const clamp =
  * @category number constructors
  * @since 1.0.0
  */
-export const NumberFromString: Schema<number, string> = transformOrFail(
+export const NumberFromString: NumberFromString = transformOrFail(
   string,
   number,
-  (s, _, ast) => ParseResult.fromOption(N.parse(s), () => ParseResult.type(ast, s)),
+  (s, _, ast) => ParseResult.fromOption(N.parse(s), () => new ParseResult.Type(ast, s)),
   (n) => ParseResult.succeed(String(n))
-).pipe(identifier("NumberFromString"))
+).annotations({ identifier: "NumberFromString" })
 
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const Finite: Schema<number> = number.pipe(finite({ identifier: "Finite", title: "Finite" }))
+export const Finite: $number = number.pipe(finite({ identifier: "Finite", title: "Finite" }))
 
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const Int: Schema<number> = number.pipe(int({ identifier: "Int", title: "Int" }))
+export const Int: $number = number.pipe(int({ identifier: "Int", title: "Int" }))
 
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const NonNaN: Schema<number> = number.pipe(nonNaN({ identifier: "NonNaN", title: "NonNaN" }))
+export const NonNaN: $number = number.pipe(nonNaN({ identifier: "NonNaN", title: "NonNaN" }))
 
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const Positive: Schema<number> = number.pipe(
+export const Positive: $number = number.pipe(
   positive({ identifier: "Positive", title: "Positive" })
 )
 
@@ -2912,7 +3835,7 @@ export const Positive: Schema<number> = number.pipe(
  * @category number constructors
  * @since 1.0.0
  */
-export const Negative: Schema<number> = number.pipe(
+export const Negative: $number = number.pipe(
   negative({ identifier: "Negative", title: "Negative" })
 )
 
@@ -2920,7 +3843,7 @@ export const Negative: Schema<number> = number.pipe(
  * @category number constructors
  * @since 1.0.0
  */
-export const NonPositive: Schema<number> = number.pipe(
+export const NonPositive: $number = number.pipe(
   nonPositive({ identifier: "NonPositive", title: "NonPositive" })
 )
 
@@ -2928,7 +3851,7 @@ export const NonPositive: Schema<number> = number.pipe(
  * @category number constructors
  * @since 1.0.0
  */
-export const NonNegative: Schema<number> = number.pipe(
+export const NonNegative: $number = number.pipe(
   nonNegative({ identifier: "NonNegative", title: "NonNegative" })
 )
 
@@ -2956,7 +3879,7 @@ export const JsonNumberTypeId = Symbol.for("@effect/schema/TypeId/JsonNumber")
  * @category number constructors
  * @since 1.0.0
  */
-export const JsonNumber: Schema<number> = number.pipe(
+export const JsonNumber: $number = number.pipe(
   filter((n) => !Number.isNaN(n) && Number.isFinite(n), {
     typeId: JsonNumberTypeId,
     identifier: "JsonNumber",
@@ -2966,36 +3889,48 @@ export const JsonNumber: Schema<number> = number.pipe(
   })
 )
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface Not extends Annotable<Not, boolean> {}
+
 /**
  * @category boolean transformations
  * @since 1.0.0
  */
-export const Not: Schema<boolean> = transform(
+export const Not: Not = transform(
   boolean,
   boolean,
   (self) => !self,
   (self) => !self
 )
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $symbol extends Annotable<$symbol, symbol, string> {}
+
 /**
  * This schema transforms a `string` into a `symbol`.
  *
  * @category symbol transformations
  * @since 1.0.0
  */
-export const symbol: Schema<symbol, string> = transform(
+export const symbol: $symbol = transform(
   string,
   symbolFromSelf,
   (s) => Symbol.for(s),
   (sym) => sym.description,
   { strict: false }
-).pipe(identifier("symbol"))
+).annotations({ identifier: "symbol" })
 
 /**
  * @category type id
  * @since 1.0.0
  */
-export const GreaterThanBigintTypeId: unique symbol = filters.GreaterThanBigintTypeId
+export const GreaterThanBigintTypeId: unique symbol = _filters.GreaterThanBigintTypeId
 
 /**
  * @category type id
@@ -3009,14 +3944,14 @@ export type GreaterThanBigintTypeId = typeof GreaterThanBigintTypeId
  */
 export const greaterThanBigint = <A extends bigint>(
   min: bigint,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
     filter((a): a is A => a > min, {
       typeId: { id: GreaterThanBigintTypeId, annotation: { min } },
       description: min === 0n ? "a positive bigint" : `a bigint greater than ${min}n`,
-      ...options
+      ...annotations
     })
   )
 
@@ -3024,7 +3959,7 @@ export const greaterThanBigint = <A extends bigint>(
  * @category type id
  * @since 1.0.0
  */
-export const GreaterThanOrEqualToBigintTypeId: unique symbol = filters.GreaterThanOrEqualToBigintTypeId
+export const GreaterThanOrEqualToBigintTypeId: unique symbol = _filters.GreaterThanOrEqualToBigintTypeId
 
 /**
  * @category type id
@@ -3038,7 +3973,7 @@ export type GreaterThanOrEqualToBigintTypeId = typeof GreaterThanOrEqualToBigint
  */
 export const greaterThanOrEqualToBigint = <A extends bigint>(
   min: bigint,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
@@ -3047,7 +3982,7 @@ export const greaterThanOrEqualToBigint = <A extends bigint>(
       description: min === 0n
         ? "a non-negative bigint"
         : `a bigint greater than or equal to ${min}n`,
-      ...options
+      ...annotations
     })
   )
 
@@ -3055,7 +3990,7 @@ export const greaterThanOrEqualToBigint = <A extends bigint>(
  * @category type id
  * @since 1.0.0
  */
-export const LessThanBigintTypeId: unique symbol = filters.LessThanBigintTypeId
+export const LessThanBigintTypeId: unique symbol = _filters.LessThanBigintTypeId
 
 /**
  * @category type id
@@ -3069,14 +4004,14 @@ export type LessThanBigintTypeId = typeof LessThanBigintTypeId
  */
 export const lessThanBigint = <A extends bigint>(
   max: bigint,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
     filter((a): a is A => a < max, {
       typeId: { id: LessThanBigintTypeId, annotation: { max } },
       description: max === 0n ? "a negative bigint" : `a bigint less than ${max}n`,
-      ...options
+      ...annotations
     })
   )
 
@@ -3084,7 +4019,7 @@ export const lessThanBigint = <A extends bigint>(
  * @category type id
  * @since 1.0.0
  */
-export const LessThanOrEqualToBigintTypeId: unique symbol = filters.LessThanOrEqualToBigintTypeId
+export const LessThanOrEqualToBigintTypeId: unique symbol = _filters.LessThanOrEqualToBigintTypeId
 
 /**
  * @category type id
@@ -3098,14 +4033,14 @@ export type LessThanOrEqualToBigintTypeId = typeof LessThanOrEqualToBigintTypeId
  */
 export const lessThanOrEqualToBigint = <A extends bigint>(
   max: bigint,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
     filter((a): a is A => a <= max, {
       typeId: { id: LessThanOrEqualToBigintTypeId, annotation: { max } },
       description: max === 0n ? "a non-positive bigint" : `a bigint less than or equal to ${max}n`,
-      ...options
+      ...annotations
     })
   )
 
@@ -3113,7 +4048,7 @@ export const lessThanOrEqualToBigint = <A extends bigint>(
  * @category type id
  * @since 1.0.0
  */
-export const BetweenBigintTypeId: unique symbol = filters.BetweenBigintTypeId
+export const BetweenBigintTypeId: unique symbol = _filters.BetweenBigintTypeId
 
 /**
  * @category type id
@@ -3128,14 +4063,14 @@ export type BetweenBigintTypeId = typeof BetweenBigintTypeId
 export const betweenBigint = <A extends bigint>(
   min: bigint,
   max: bigint,
-  options?: FilterAnnotations<A>
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
     filter((a): a is A => a >= min && a <= max, {
       typeId: { id: BetweenBigintTypeId, annotation: { max, min } },
       description: `a bigint between ${min}n and ${max}n`,
-      ...options
+      ...annotations
     })
   )
 
@@ -3144,32 +4079,32 @@ export const betweenBigint = <A extends bigint>(
  * @since 1.0.0
  */
 export const positiveBigint = <A extends bigint>(
-  options?: FilterAnnotations<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => greaterThanBigint(0n, options)
+  annotations?: FilterAnnotations<A>
+): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => greaterThanBigint(0n, annotations)
 
 /**
  * @category bigint filters
  * @since 1.0.0
  */
 export const negativeBigint = <A extends bigint>(
-  options?: FilterAnnotations<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => lessThanBigint(0n, options)
+  annotations?: FilterAnnotations<A>
+): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => lessThanBigint(0n, annotations)
 
 /**
  * @category bigint filters
  * @since 1.0.0
  */
 export const nonNegativeBigint = <A extends bigint>(
-  options?: FilterAnnotations<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => greaterThanOrEqualToBigint(0n, options)
+  annotations?: FilterAnnotations<A>
+): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => greaterThanOrEqualToBigint(0n, annotations)
 
 /**
  * @category bigint filters
  * @since 1.0.0
  */
 export const nonPositiveBigint = <A extends bigint>(
-  options?: FilterAnnotations<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => lessThanOrEqualToBigint(0n, options)
+  annotations?: FilterAnnotations<A>
+): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => lessThanOrEqualToBigint(0n, annotations)
 
 /**
  * Clamps a bigint between a minimum and a maximum value.
@@ -3181,12 +4116,18 @@ export const clampBigint =
   (minimum: bigint, maximum: bigint) => <R, I, A extends bigint>(self: Schema<A, I, R>): Schema<A, I, R> =>
     transform(
       self,
-      self.pipe(to, betweenBigint(minimum, maximum)),
-      (self) => BigInt_.clamp(self, { minimum, maximum }),
+      self.pipe(typeSchema, betweenBigint(minimum, maximum)),
+      (self) => _bigInt.clamp(self, { minimum, maximum }),
       identity,
       { strict: false }
     )
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface $bigint extends Annotable<$bigint, bigint, string> {}
+
 /**
  * This schema transforms a `string` into a `bigint` by parsing the string using the `BigInt` function.
  *
@@ -3195,21 +4136,21 @@ export const clampBigint =
  * @category bigint transformations
  * @since 1.0.0
  */
-export const bigint: Schema<bigint, string> = transformOrFail(
+export const bigint: $bigint = transformOrFail(
   string,
   bigintFromSelf,
   (s, _, ast) => {
     if (s.trim() === "") {
-      return ParseResult.fail(ParseResult.type(ast, s))
+      return ParseResult.fail(new ParseResult.Type(ast, s))
     }
 
     return ParseResult.try({
       try: () => BigInt(s),
-      catch: () => ParseResult.type(ast, s)
+      catch: () => new ParseResult.Type(ast, s)
     })
   },
   (n) => ParseResult.succeed(String(n))
-).pipe(identifier("bigint"))
+).annotations({ identifier: "bigint" })
 
 /**
  * @category bigint constructors
@@ -3275,6 +4216,12 @@ export const NonNegativeBigint: Schema<bigint, string> = bigint.pipe(
   nonNegativeBigint({ identifier: "NonNegativeBigint", title: "NonNegativeBigint" })
 )
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface BigintFromNumber extends Annotable<BigintFromNumber, bigint, number> {}
+
 /**
  * This schema transforms a `number` into a `bigint` by parsing the number using the `BigInt` function.
  *
@@ -3283,73 +4230,93 @@ export const NonNegativeBigint: Schema<bigint, string> = bigint.pipe(
  * @category bigint transformations
  * @since 1.0.0
  */
-export const BigintFromNumber: Schema<bigint, number> = transformOrFail(
+export const BigintFromNumber: BigintFromNumber = transformOrFail(
   number,
   bigintFromSelf,
   (n, _, ast) =>
     ParseResult.try({
       try: () => BigInt(n),
-      catch: () => ParseResult.type(ast, n)
+      catch: () => new ParseResult.Type(ast, n)
     }),
-  (b, _, ast) => ParseResult.fromOption(BigInt_.toNumber(b), () => ParseResult.type(ast, b))
-).pipe(identifier("BigintFromNumber"))
+  (b, _, ast) => ParseResult.fromOption(_bigInt.toNumber(b), () => new ParseResult.Type(ast, b))
+).annotations({ identifier: "BigintFromNumber" })
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface SecretFromSelf extends Annotable<SecretFromSelf, _secret.Secret> {}
 
 /**
  * @category Secret constructors
  * @since 1.0.0
  */
-export const SecretFromSelf: Schema<Secret.Secret> = declare(
-  Secret.isSecret,
+export const SecretFromSelf: SecretFromSelf = declare(
+  _secret.isSecret,
   {
     identifier: "SecretFromSelf",
-    pretty: (): Pretty.Pretty<Secret.Secret> => (secret) => String(secret),
-    arbitrary: (): Arbitrary<Secret.Secret> => (fc) => fc.string().map((_) => Secret.fromString(_))
+    pretty: (): Pretty.Pretty<_secret.Secret> => (secret) => String(secret),
+    arbitrary: (): Arbitrary<_secret.Secret> => (fc) => fc.string().map((_) => _secret.fromString(_))
   }
 )
 
-const _Secret: Schema<Secret.Secret, string> = transform(
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface Secret extends Annotable<Secret, _secret.Secret, string> {}
+
+/**
+ * A schema that transforms a `string` into a `Secret`.
+ *
+ * @category Secret transformations
+ * @since 1.0.0
+ */
+export const Secret: Secret = transform(
   string,
   SecretFromSelf,
-  (str) => Secret.fromString(str),
-  (secret) => Secret.value(secret),
+  (str) => _secret.fromString(str),
+  (secret) => _secret.value(secret),
   { strict: false }
-).pipe(identifier("Secret"))
+).annotations({ identifier: "Secret" })
 
-export {
-  /**
-   * A schema that transforms a `string` into a `Secret`.
-   *
-   * @category Secret transformations
-   * @since 1.0.0
-   */
-  _Secret as Secret
-}
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface DurationFromSelf extends Annotable<DurationFromSelf, _duration.Duration> {}
 
 /**
  * @category Duration constructors
  * @since 1.0.0
  */
-export const DurationFromSelf: Schema<Duration.Duration> = declare(
-  Duration.isDuration,
+export const DurationFromSelf: DurationFromSelf = declare(
+  _duration.isDuration,
   {
     identifier: "DurationFromSelf",
-    pretty: (): Pretty.Pretty<Duration.Duration> => String,
-    arbitrary: (): Arbitrary<Duration.Duration> => (fc) =>
+    pretty: (): Pretty.Pretty<_duration.Duration> => String,
+    arbitrary: (): Arbitrary<_duration.Duration> => (fc) =>
       fc.oneof(
-        fc.constant(Duration.infinity),
-        fc.bigUint().map((_) => Duration.nanos(_)),
-        fc.bigUint().map((_) => Duration.micros(_)),
-        fc.maxSafeNat().map((_) => Duration.millis(_)),
-        fc.maxSafeNat().map((_) => Duration.seconds(_)),
-        fc.maxSafeNat().map((_) => Duration.minutes(_)),
-        fc.maxSafeNat().map((_) => Duration.hours(_)),
-        fc.maxSafeNat().map((_) => Duration.days(_)),
-        fc.maxSafeNat().map((_) => Duration.weeks(_))
+        fc.constant(_duration.infinity),
+        fc.bigUint().map((_) => _duration.nanos(_)),
+        fc.bigUint().map((_) => _duration.micros(_)),
+        fc.maxSafeNat().map((_) => _duration.millis(_)),
+        fc.maxSafeNat().map((_) => _duration.seconds(_)),
+        fc.maxSafeNat().map((_) => _duration.minutes(_)),
+        fc.maxSafeNat().map((_) => _duration.hours(_)),
+        fc.maxSafeNat().map((_) => _duration.days(_)),
+        fc.maxSafeNat().map((_) => _duration.weeks(_))
       ),
-    equivalence: (): Equivalence.Equivalence<Duration.Duration> => Duration.Equivalence
+    equivalence: (): Equivalence.Equivalence<_duration.Duration> => _duration.Equivalence
   }
 )
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface DurationFromNanos extends Annotable<DurationFromNanos, _duration.Duration, bigint> {}
+
 /**
  * A schema that transforms a `bigint` tuple into a `Duration`.
  * Treats the value as the number of nanoseconds.
@@ -3357,16 +4324,22 @@ export const DurationFromSelf: Schema<Duration.Duration> = declare(
  * @category Duration transformations
  * @since 1.0.0
  */
-export const DurationFromNanos: Schema<Duration.Duration, bigint> = transformOrFail(
+export const DurationFromNanos: DurationFromNanos = transformOrFail(
   bigintFromSelf,
   DurationFromSelf,
-  (nanos) => ParseResult.succeed(Duration.nanos(nanos)),
+  (nanos) => ParseResult.succeed(_duration.nanos(nanos)),
   (duration, _, ast) =>
-    Option.match(Duration.toNanos(duration), {
-      onNone: () => ParseResult.fail(ParseResult.type(ast, duration)),
+    Option.match(_duration.toNanos(duration), {
+      onNone: () => ParseResult.fail(new ParseResult.Type(ast, duration)),
       onSome: (val) => ParseResult.succeed(val)
     })
-).pipe(identifier("DurationFromNanos"))
+).annotations({ identifier: "DurationFromNanos" })
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface DurationFromMillis extends Annotable<DurationFromMillis, _duration.Duration, number> {}
 
 /**
  * A schema that transforms a `number` tuple into a `Duration`.
@@ -3375,12 +4348,12 @@ export const DurationFromNanos: Schema<Duration.Duration, bigint> = transformOrF
  * @category Duration transformations
  * @since 1.0.0
  */
-export const DurationFromMillis: Schema<Duration.Duration, number> = transform(
+export const DurationFromMillis: DurationFromMillis = transform(
   number,
   DurationFromSelf,
-  (ms) => Duration.millis(ms),
-  (n) => Duration.toMillis(n)
-).pipe(identifier("DurationFromMillis"))
+  (ms) => _duration.millis(ms),
+  (n) => _duration.toMillis(n)
+).annotations({ identifier: "DurationFromMillis" })
 
 const hrTime: Schema<readonly [seconds: number, nanos: number]> = tuple(
   NonNegative.pipe(
@@ -3397,22 +4370,24 @@ const hrTime: Schema<readonly [seconds: number, nanos: number]> = tuple(
   )
 )
 
-const _Duration: Schema<Duration.Duration, readonly [seconds: number, nanos: number]> = transform(
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface Duration extends Annotable<Duration, _duration.Duration, readonly [seconds: number, nanos: number]> {}
+
+/**
+ * A schema that transforms a `[number, number]` tuple into a `Duration`.
+ *
+ * @category Duration transformations
+ * @since 1.0.0
+ */
+export const Duration: Duration = transform(
   hrTime,
   DurationFromSelf,
-  ([seconds, nanos]) => Duration.nanos(BigInt(seconds) * BigInt(1e9) + BigInt(nanos)),
-  (duration) => Duration.toHrTime(duration)
-).pipe(identifier("Duration"))
-
-export {
-  /**
-   * A schema that transforms a `[number, number]` tuple into a `Duration`.
-   *
-   * @category Duration transformations
-   * @since 1.0.0
-   */
-  _Duration as Duration
-}
+  ([seconds, nanos]) => _duration.nanos(BigInt(seconds) * BigInt(1e9) + BigInt(nanos)),
+  (duration) => _duration.toHrTime(duration)
+).annotations({ identifier: "Duration" })
 
 /**
  * Clamps a `Duration` between a minimum and a maximum value.
@@ -3421,12 +4396,12 @@ export {
  * @since 1.0.0
  */
 export const clampDuration =
-  (minimum: Duration.DurationInput, maximum: Duration.DurationInput) =>
-  <R, I, A extends Duration.Duration>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  (minimum: _duration.DurationInput, maximum: _duration.DurationInput) =>
+  <R, I, A extends _duration.Duration>(self: Schema<A, I, R>): Schema<A, I, R> =>
     transform(
       self,
-      self.pipe(to, betweenDuration(minimum, maximum)),
-      (self) => Duration.clamp(self, { minimum, maximum }),
+      self.pipe(typeSchema, betweenDuration(minimum, maximum)),
+      (self) => _duration.clamp(self, { minimum, maximum }),
       identity,
       { strict: false }
     )
@@ -3441,16 +4416,16 @@ export const LessThanDurationTypeId = Symbol.for("@effect/schema/TypeId/LessThan
  * @category Duration filters
  * @since 1.0.0
  */
-export const lessThanDuration = <A extends Duration.Duration>(
-  max: Duration.DurationInput,
-  options?: FilterAnnotations<A>
+export const lessThanDuration = <A extends _duration.Duration>(
+  max: _duration.DurationInput,
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
-    filter((a): a is A => Duration.lessThan(a, max), {
+    filter((a): a is A => _duration.lessThan(a, max), {
       typeId: { id: LessThanDurationTypeId, annotation: { max } },
-      description: `a Duration less than ${Duration.decode(max)}`,
-      ...options
+      description: `a Duration less than ${_duration.decode(max)}`,
+      ...annotations
     })
   )
 
@@ -3466,16 +4441,16 @@ export const LessThanOrEqualToDurationTypeId = Symbol.for(
  * @category Duration filters
  * @since 1.0.0
  */
-export const lessThanOrEqualToDuration = <A extends Duration.Duration>(
-  max: Duration.DurationInput,
-  options?: FilterAnnotations<A>
+export const lessThanOrEqualToDuration = <A extends _duration.Duration>(
+  max: _duration.DurationInput,
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
-    filter((a): a is A => Duration.lessThanOrEqualTo(a, max), {
+    filter((a): a is A => _duration.lessThanOrEqualTo(a, max), {
       typeId: { id: LessThanDurationTypeId, annotation: { max } },
-      description: `a Duration less than or equal to ${Duration.decode(max)}`,
-      ...options
+      description: `a Duration less than or equal to ${_duration.decode(max)}`,
+      ...annotations
     })
   )
 
@@ -3489,16 +4464,16 @@ export const GreaterThanDurationTypeId = Symbol.for("@effect/schema/TypeId/Great
  * @category Duration filters
  * @since 1.0.0
  */
-export const greaterThanDuration = <A extends Duration.Duration>(
-  min: Duration.DurationInput,
-  options?: FilterAnnotations<A>
+export const greaterThanDuration = <A extends _duration.Duration>(
+  min: _duration.DurationInput,
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
-    filter((a): a is A => Duration.greaterThan(a, min), {
+    filter((a): a is A => _duration.greaterThan(a, min), {
       typeId: { id: GreaterThanDurationTypeId, annotation: { min } },
-      description: `a Duration greater than ${Duration.decode(min)}`,
-      ...options
+      description: `a Duration greater than ${_duration.decode(min)}`,
+      ...annotations
     })
   )
 
@@ -3514,16 +4489,16 @@ export const GreaterThanOrEqualToDurationTypeId = Symbol.for(
  * @category Duration filters
  * @since 1.0.0
  */
-export const greaterThanOrEqualToDuration = <A extends Duration.Duration>(
-  min: Duration.DurationInput,
-  options?: FilterAnnotations<A>
+export const greaterThanOrEqualToDuration = <A extends _duration.Duration>(
+  min: _duration.DurationInput,
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
-    filter((a): a is A => Duration.greaterThanOrEqualTo(a, min), {
+    filter((a): a is A => _duration.greaterThanOrEqualTo(a, min), {
       typeId: { id: GreaterThanOrEqualToDurationTypeId, annotation: { min } },
-      description: `a Duration greater than or equal to ${Duration.decode(min)}`,
-      ...options
+      description: `a Duration greater than or equal to ${_duration.decode(min)}`,
+      ...annotations
     })
   )
 
@@ -3537,17 +4512,17 @@ export const BetweenDurationTypeId = Symbol.for("@effect/schema/TypeId/BetweenDu
  * @category Duration filters
  * @since 1.0.0
  */
-export const betweenDuration = <A extends Duration.Duration>(
-  minimum: Duration.DurationInput,
-  maximum: Duration.DurationInput,
-  options?: FilterAnnotations<A>
+export const betweenDuration = <A extends _duration.Duration>(
+  minimum: _duration.DurationInput,
+  maximum: _duration.DurationInput,
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
-    filter((a): a is A => Duration.between(a, { minimum, maximum }), {
+    filter((a): a is A => _duration.between(a, { minimum, maximum }), {
       typeId: { id: BetweenDurationTypeId, annotation: { maximum, minimum } },
-      description: `a Duration between ${Duration.decode(minimum)} and ${Duration.decode(maximum)}`,
-      ...options
+      description: `a Duration between ${_duration.decode(minimum)} and ${_duration.decode(maximum)}`,
+      ...annotations
     })
   )
 
@@ -3571,11 +4546,11 @@ const _Uint8Array: Schema<Uint8Array, ReadonlyArray<number>> = transform(
       title: "8-bit unsigned integer",
       description: "a 8-bit unsigned integer"
     })
-  )).pipe(description("an array of 8-bit unsigned integers")),
+  )).annotations({ description: "an array of 8-bit unsigned integers" }),
   Uint8ArrayFromSelf,
   (a) => Uint8Array.from(a),
   (arr) => Array.from(arr)
-).pipe(identifier("Uint8Array"))
+).annotations({ identifier: "Uint8Array" })
 
 export {
   /**
@@ -3598,11 +4573,11 @@ const makeEncodingTransformation = (
     (s, _, ast) =>
       Either.mapLeft(
         decode(s),
-        (decodeException) => ParseResult.type(ast, s, decodeException.message)
+        (decodeException) => new ParseResult.Type(ast, s, decodeException.message)
       ),
     (u) => ParseResult.succeed(encode(u)),
     { strict: false }
-  ).pipe(identifier(id))
+  ).annotations({ identifier: id })
 
 /**
  * @category Encoding transformations
@@ -3638,7 +4613,7 @@ export const Hex: Schema<Uint8Array, string> = makeEncodingTransformation(
  * @category type id
  * @since 1.0.0
  */
-export const MinItemsTypeId: unique symbol = filters.MinItemsTypeId
+export const MinItemsTypeId: unique symbol = _filters.MinItemsTypeId
 
 /**
  * @category type id
@@ -3652,7 +4627,7 @@ export type MinItemsTypeId = typeof MinItemsTypeId
  */
 export const minItems = <A>(
   n: number,
-  options?: FilterAnnotations<ReadonlyArray<A>>
+  annotations?: FilterAnnotations<ReadonlyArray<A>>
 ) =>
 <I, R>(self: Schema<ReadonlyArray<A>, I, R>): Schema<ReadonlyArray<A>, I, R> =>
   self.pipe(
@@ -3660,7 +4635,7 @@ export const minItems = <A>(
       typeId: MinItemsTypeId,
       description: `an array of at least ${n} items`,
       jsonSchema: { minItems: n },
-      ...options
+      ...annotations
     })
   )
 
@@ -3668,7 +4643,7 @@ export const minItems = <A>(
  * @category type id
  * @since 1.0.0
  */
-export const MaxItemsTypeId: unique symbol = filters.MaxItemsTypeId
+export const MaxItemsTypeId: unique symbol = _filters.MaxItemsTypeId
 
 /**
  * @category type id
@@ -3682,7 +4657,7 @@ export type MaxItemsTypeId = typeof MaxItemsTypeId
  */
 export const maxItems = <A>(
   n: number,
-  options?: FilterAnnotations<ReadonlyArray<A>>
+  annotations?: FilterAnnotations<ReadonlyArray<A>>
 ) =>
 <I, R>(self: Schema<ReadonlyArray<A>, I, R>): Schema<ReadonlyArray<A>, I, R> =>
   self.pipe(
@@ -3690,7 +4665,7 @@ export const maxItems = <A>(
       typeId: MaxItemsTypeId,
       description: `an array of at most ${n} items`,
       jsonSchema: { maxItems: n },
-      ...options
+      ...annotations
     })
   )
 
@@ -3698,7 +4673,7 @@ export const maxItems = <A>(
  * @category type id
  * @since 1.0.0
  */
-export const ItemsCountTypeId: unique symbol = filters.ItemsCountTypeId
+export const ItemsCountTypeId: unique symbol = _filters.ItemsCountTypeId
 
 /**
  * @category type id
@@ -3712,7 +4687,7 @@ export type ItemsCountTypeId = typeof ItemsCountTypeId
  */
 export const itemsCount = <A>(
   n: number,
-  options?: FilterAnnotations<ReadonlyArray<A>>
+  annotations?: FilterAnnotations<ReadonlyArray<A>>
 ) =>
 <I, R>(self: Schema<ReadonlyArray<A>, I, R>): Schema<ReadonlyArray<A>, I, R> =>
   self.pipe(
@@ -3720,7 +4695,7 @@ export const itemsCount = <A>(
       typeId: ItemsCountTypeId,
       description: `an array of exactly ${n} items`,
       jsonSchema: { minItems: n, maxItems: n },
-      ...options
+      ...annotations
     })
   )
 
@@ -3741,7 +4716,7 @@ export const getNumberIndexedAccess = <A extends ReadonlyArray<any>, I extends R
 export const head = <A, I, R>(self: Schema<ReadonlyArray<A>, I, R>): Schema<Option.Option<A>, I, R> =>
   transform(
     self,
-    optionFromSelf(getNumberIndexedAccess(to(self))),
+    optionFromSelf(getNumberIndexedAccess(typeSchema(self))),
     ReadonlyArray.head,
     Option.match({ onNone: () => [], onSome: ReadonlyArray.of })
   )
@@ -3762,13 +4737,13 @@ export const headOr: {
   <A, I, R>(self: Schema<ReadonlyArray<A>, I, R>, fallback?: LazyArg<A>): Schema<A, I, R> =>
     transformOrFail(
       self,
-      getNumberIndexedAccess(to(self)),
+      getNumberIndexedAccess(typeSchema(self)),
       (as, _, ast) =>
         as.length > 0
           ? ParseResult.succeed(as[0])
           : fallback
           ? ParseResult.succeed(fallback())
-          : ParseResult.fail(ParseResult.type(ast, as)),
+          : ParseResult.fail(new ParseResult.Type(ast, as)),
       (a) => ParseResult.succeed(ReadonlyArray.of(a))
     )
 )
@@ -3785,14 +4760,15 @@ export const ValidDateTypeId = Symbol.for("@effect/schema/TypeId/ValidDate")
  * @category Date filters
  * @since 1.0.0
  */
-export const validDate = (options?: FilterAnnotations<Date>) => <I, R>(self: Schema<Date, I, R>): Schema<Date, I, R> =>
-  self.pipe(
-    filter((a) => !Number.isNaN(a.getTime()), {
-      typeId: ValidDateTypeId,
-      description: "a valid Date",
-      ...options
-    })
-  )
+export const validDate =
+  (annotations?: FilterAnnotations<Date>) => <I, R>(self: Schema<Date, I, R>): Schema<Date, I, R> =>
+    self.pipe(
+      filter((a) => !Number.isNaN(a.getTime()), {
+        typeId: ValidDateTypeId,
+        description: "a valid Date",
+        ...annotations
+      })
+    )
 
 /**
  * Represents a schema for handling potentially **invalid** `Date` instances (e.g., `new Date("Invalid Date")` is not rejected).
@@ -3835,7 +4811,7 @@ export const DateFromString: Schema<Date, string> = transform(
   DateFromSelf,
   (s) => new Date(s),
   (n) => n.toISOString()
-).pipe(identifier("DateFromString"))
+).annotations({ identifier: "DateFromString" })
 
 const _Date: Schema<Date, string> = DateFromString.pipe(
   validDate({ identifier: "Date" })
@@ -3855,7 +4831,7 @@ export {
  * @category Option utils
  * @since 1.0.0
  */
-export type OptionFrom<I> =
+export type OptionEncoded<I> =
   | {
     readonly _tag: "None"
   }
@@ -3864,27 +4840,29 @@ export type OptionFrom<I> =
     readonly value: I
   }
 
-const OptionNoneFrom = struct({
+const OptionNoneEncoded = struct({
   _tag: literal("None")
-})
+}).annotations({ description: "NoneEncoded" })
 
-const optionSomeFrom = <A, I, R>(value: Schema<A, I, R>) =>
+const optionSomeEncoded = <A, I, R>(value: Schema<A, I, R>) =>
   struct({
     _tag: literal("Some"),
     value
-  })
+  }).annotations({ description: `SomeEncoded<${format(value)}>` })
 
-const optionFrom = <A, I, R>(value: Schema<A, I, R>): Schema<OptionFrom<A>, OptionFrom<I>, R> =>
+const optionEncoded = <A, I, R>(value: Schema<A, I, R>) =>
   union(
-    OptionNoneFrom,
-    optionSomeFrom(value)
-  )
+    OptionNoneEncoded,
+    optionSomeEncoded(value)
+  ).annotations({
+    description: `OptionEncoded<${format(value)}>`
+  })
 
-const optionDecode = <A>(input: OptionFrom<A>): Option.Option<A> =>
+const optionDecode = <A>(input: OptionEncoded<A>): Option.Option<A> =>
   input._tag === "None" ? Option.none() : Option.some(input.value)
 
 const optionArbitrary = <A>(value: Arbitrary<A>): Arbitrary<Option.Option<A>> => {
-  const arb = arbitrary.make(optionFrom(schemaFromArbitrary(value)))
+  const arb = arbitrary.make(optionEncoded(schemaFromArbitrary(value)))
   return (fc) => arb(fc).map(optionDecode)
 }
 
@@ -3901,15 +4879,28 @@ const optionParse =
       Option.isNone(u) ?
         ParseResult.succeed(Option.none())
         : ParseResult.map(decodeUnknown(u.value, options), Option.some)
-      : ParseResult.fail(ParseResult.type(ast, u))
+      : ParseResult.fail(new ParseResult.Type(ast, u))
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface optionFromSelf<Value extends Schema.Any> extends
+  Annotable<
+    optionFromSelf<Value>,
+    Option.Option<Schema.Type<Value>>,
+    Option.Option<Schema.Encoded<Value>>,
+    Schema.Context<Value>
+  >
+{}
 
 /**
  * @category Option transformations
  * @since 1.0.0
  */
-export const optionFromSelf = <A, I, R>(
-  value: Schema<A, I, R>
-): Schema<Option.Option<A>, Option.Option<I>, R> => {
+export const optionFromSelf = <Value extends Schema.Any>(
+  value: Value
+): optionFromSelf<Value> => {
   return declare(
     [value],
     (value) => optionParse(ParseResult.decodeUnknown(value)),
@@ -3923,66 +4914,127 @@ export const optionFromSelf = <A, I, R>(
   )
 }
 
+const makeNoneEncoded = {
+  _tag: "None"
+} as const
+const makeSomeEncoded = <A>(value: A) => ({
+  _tag: "Some",
+  value
+} as const)
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface option<Value extends Schema.Any> extends
+  Annotable<
+    option<Value>,
+    Option.Option<Schema.Type<Value>>,
+    OptionEncoded<Schema.Encoded<Value>>,
+    Schema.Context<Value>
+  >
+{}
+
 /**
  * @category Option transformations
  * @since 1.0.0
  */
-export const option = <A, I, R>(
-  value: Schema<A, I, R>
-): Schema<Option.Option<A>, OptionFrom<I>, R> =>
-  transform(
-    optionFrom(value),
-    optionFromSelf(to(value)),
+export const option = <Value extends Schema.Any>(value: Value): option<Value> => {
+  const _value = asSchema(value)
+  return transform(
+    optionEncoded(_value),
+    optionFromSelf(typeSchema(_value)),
     optionDecode,
     Option.match({
-      onNone: () => (({
-        _tag: "None"
-      }) as const),
-      onSome: (value) => (({
-        _tag: "Some",
-        value
-      }) as const)
+      onNone: () => makeNoneEncoded,
+      onSome: makeSomeEncoded
     })
   )
+}
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface optionFromNullable<Value extends Schema.Any> extends
+  Annotable<
+    optionFromNullable<Value>,
+    Option.Option<Schema.Type<Value>>,
+    Schema.Encoded<Value> | null,
+    Schema.Context<Value>
+  >
+{}
 
 /**
  * @category Option transformations
  * @since 1.0.0
  */
-export const optionFromNullable = <A, I, R>(
-  value: Schema<A, I, R>
-): Schema<Option.Option<A>, I | null, R> =>
-  transform(nullable(value), optionFromSelf(to(value)), Option.fromNullable, Option.getOrNull)
+export const optionFromNullable = <Value extends Schema.Any>(
+  value: Value
+): optionFromNullable<Value> => {
+  const _value = asSchema(value)
+  return transform(nullable(_value), optionFromSelf(typeSchema(_value)), Option.fromNullable, Option.getOrNull)
+}
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface optionFromNullish<Value extends Schema.Any> extends
+  Annotable<
+    optionFromNullish<Value>,
+    Option.Option<Schema.Type<Value>>,
+    Schema.Encoded<Value> | null | undefined,
+    Schema.Context<Value>
+  >
+{}
 
 /**
  * @category Option transformations
  * @since 1.0.0
  */
-export const optionFromNullish = <A, I, R>(
-  value: Schema<A, I, R>,
+export const optionFromNullish = <Value extends Schema.Any>(
+  value: Value,
   onNoneEncoding: null | undefined
-): Schema<Option.Option<A>, I | null | undefined, R> =>
-  transform(
-    nullish(value),
-    optionFromSelf(to(value)),
+): optionFromNullish<Value> => {
+  const _value = asSchema(value)
+  return transform(
+    nullish(_value),
+    optionFromSelf(typeSchema(_value)),
     Option.fromNullable,
     onNoneEncoding === null ? Option.getOrNull : Option.getOrUndefined
   )
+}
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface optionFromOrUndefined<Value extends Schema.Any> extends
+  Annotable<
+    optionFromOrUndefined<Value>,
+    Option.Option<Schema.Type<Value>>,
+    Schema.Encoded<Value> | undefined,
+    Schema.Context<Value>
+  >
+{}
 
 /**
  * @category Option transformations
  * @since 1.0.0
  */
-export const optionFromOrUndefined = <A, I, R>(
-  value: Schema<A, I, R>
-): Schema<Option.Option<A>, I | undefined, R> =>
-  transform(orUndefined(value), optionFromSelf(to(value)), Option.fromNullable, Option.getOrUndefined)
+export const optionFromOrUndefined = <Value extends Schema.Any>(
+  value: Value
+): optionFromOrUndefined<Value> => {
+  const _value = asSchema(value)
+  return transform(orUndefined(_value), optionFromSelf(typeSchema(_value)), Option.fromNullable, Option.getOrUndefined)
+}
 
 /**
  * @category Either utils
  * @since 1.0.0
  */
-export type RightFrom<IA> = {
+export type RightEncoded<IA> = {
   readonly _tag: "Right"
   readonly right: IA
 }
@@ -3991,7 +5043,7 @@ export type RightFrom<IA> = {
  * @category Either utils
  * @since 1.0.0
  */
-export type LeftFrom<IE> = {
+export type LeftEncoded<IE> = {
   readonly _tag: "Left"
   readonly left: IE
 }
@@ -4000,104 +5052,146 @@ export type LeftFrom<IE> = {
  * @category Either utils
  * @since 1.0.0
  */
-export type EitherFrom<IE, IA> = LeftFrom<IE> | RightFrom<IA>
+export type EitherEncoded<IR, IL> = RightEncoded<IR> | LeftEncoded<IL>
 
-const rightFrom = <A, IA, R>(right: Schema<A, IA, R>): Schema<RightFrom<A>, RightFrom<IA>, R> =>
+const rightEncoded = <RA, RI, RR>(right: Schema<RA, RI, RR>): Schema<RightEncoded<RA>, RightEncoded<RI>, RR> =>
   struct({
     _tag: literal("Right"),
     right
-  }).pipe(description(`RightFrom<${format(right)}>`))
+  }).annotations({ description: `RightEncoded<${format(right)}>` })
 
-const leftFrom = <E, IE, R>(left: Schema<E, IE, R>): Schema<LeftFrom<E>, LeftFrom<IE>, R> =>
+const leftEncoded = <LA, LI, LR>(left: Schema<LA, LI, LR>): Schema<LeftEncoded<LA>, LeftEncoded<LI>, LR> =>
   struct({
     _tag: literal("Left"),
     left
-  }).pipe(description(`LeftFrom<${format(left)}>`))
-
-const eitherFrom = <E, IE, R1, A, IA, R2>(
-  left: Schema<E, IE, R1>,
-  right: Schema<A, IA, R2>
-): Schema<EitherFrom<E, A>, EitherFrom<IE, IA>, R1 | R2> =>
-  union(rightFrom(right), leftFrom(left)).pipe(
-    description(`EitherFrom<${format(left)}, ${format(right)}>`)
-  )
+  }).annotations({ description: `LeftEncoded<${format(left)}>` })
+
+const eitherEncoded = <RA, RI, RR, LA, LI, LR>(
+  right: Schema<RA, RI, RR>,
+  left: Schema<LA, LI, LR>
+) =>
+  union(rightEncoded(right), leftEncoded(left)).annotations({
+    description: `EitherEncoded<${format(left)}, ${format(right)}>`
+  })
 
-const eitherDecode = <E, A>(input: EitherFrom<E, A>): Either.Either<A, E> =>
+const eitherDecode = <R, L>(input: EitherEncoded<R, L>): Either.Either<R, L> =>
   input._tag === "Left" ? Either.left(input.left) : Either.right(input.right)
 
-const eitherArbitrary = <E, A>(
-  left: Arbitrary<E>,
-  right: Arbitrary<A>
-): Arbitrary<Either.Either<A, E>> => {
-  const arb = arbitrary.make(eitherFrom(schemaFromArbitrary(left), schemaFromArbitrary(right)))
+const eitherArbitrary = <R, L>(
+  right: Arbitrary<R>,
+  left: Arbitrary<L>
+): Arbitrary<Either.Either<R, L>> => {
+  const arb = arbitrary.make(eitherEncoded(schemaFromArbitrary(right), schemaFromArbitrary(left)))
   return (fc) => arb(fc).map(eitherDecode)
 }
 
-const eitherPretty = <E, A>(
-  left: Pretty.Pretty<E>,
-  right: Pretty.Pretty<A>
-): Pretty.Pretty<Either.Either<A, E>> =>
+const eitherPretty = <R, L>(
+  right: Pretty.Pretty<R>,
+  left: Pretty.Pretty<L>
+): Pretty.Pretty<Either.Either<R, L>> =>
   Either.match({
     onLeft: (e) => `left(${left(e)})`,
     onRight: (a) => `right(${right(a)})`
   })
 
-const eitherParse = <RE, E, RA, A>(
-  decodeUnknownLeft: ParseResult.DecodeUnknown<E, RE>,
-  parseright: ParseResult.DecodeUnknown<A, RA>
-): ParseResult.DeclarationDecodeUnknown<Either.Either<A, E>, RE | RA> =>
+const eitherParse = <RR, R, LR, L>(
+  parseRight: ParseResult.DecodeUnknown<R, RR>,
+  decodeUnknownLeft: ParseResult.DecodeUnknown<L, LR>
+): ParseResult.DeclarationDecodeUnknown<Either.Either<R, L>, LR | RR> =>
 (u, options, ast) =>
   Either.isEither(u) ?
     Either.match(u, {
       onLeft: (left) => ParseResult.map(decodeUnknownLeft(left, options), Either.left),
-      onRight: (right) => ParseResult.map(parseright(right, options), Either.right)
+      onRight: (right) => ParseResult.map(parseRight(right, options), Either.right)
     })
-    : ParseResult.fail(ParseResult.type(ast, u))
+    : ParseResult.fail(new ParseResult.Type(ast, u))
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface eitherFromSelf<R extends Schema.Any, L extends Schema.Any> extends
+  Annotable<
+    eitherFromSelf<R, L>,
+    Either.Either<Schema.Type<R>, Schema.Type<L>>,
+    Either.Either<Schema.Encoded<R>, Schema.Encoded<L>>,
+    Schema.Context<R> | Schema.Context<L>
+  >
+{}
 
 /**
  * @category Either transformations
  * @since 1.0.0
  */
-export const eitherFromSelf = <E, IE, RE, A, IA, RA>({ left, right }: {
-  readonly left: Schema<E, IE, RE>
-  readonly right: Schema<A, IA, RA>
-}): Schema<Either.Either<A, E>, Either.Either<IA, IE>, RE | RA> => {
+export const eitherFromSelf = <R extends Schema.Any, L extends Schema.Any>({ left, right }: {
+  readonly left: L
+  readonly right: R
+}): eitherFromSelf<R, L> => {
   return declare(
-    [left, right],
-    (left, right) => eitherParse(ParseResult.decodeUnknown(left), ParseResult.decodeUnknown(right)),
-    (left, right) => eitherParse(ParseResult.encodeUnknown(left), ParseResult.encodeUnknown(right)),
+    [right, left],
+    (right, left) => eitherParse(ParseResult.decodeUnknown(right), ParseResult.decodeUnknown(left)),
+    (right, left) => eitherParse(ParseResult.encodeUnknown(right), ParseResult.encodeUnknown(left)),
     {
       description: `Either<${format(left)}, ${format(right)}>`,
       pretty: eitherPretty,
       arbitrary: eitherArbitrary,
-      equivalence: Either.getEquivalence
+      equivalence: (right, left) => Either.getEquivalence(left, right)
     }
   )
 }
 
-const makeLeftFrom = <E>(left: E) => (({
+const makeLeftEncoded = <E>(left: E) => (({
   _tag: "Left",
   left
 }) as const)
-const makeRightFrom = <A>(right: A) => (({
+const makeRightEncoded = <A>(right: A) => (({
   _tag: "Right",
   right
 }) as const)
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface either<R extends Schema.Any, L extends Schema.Any> extends
+  Annotable<
+    either<R, L>,
+    Either.Either<Schema.Type<R>, Schema.Type<L>>,
+    EitherEncoded<Schema.Encoded<R>, Schema.Encoded<L>>,
+    Schema.Context<R> | Schema.Context<L>
+  >
+{}
+
 /**
  * @category Either transformations
  * @since 1.0.0
  */
-export const either = <E, IE, R1, A, IA, R2>({ left, right }: {
-  readonly left: Schema<E, IE, R1>
-  readonly right: Schema<A, IA, R2>
-}): Schema<Either.Either<A, E>, EitherFrom<IE, IA>, R1 | R2> =>
-  transform(
-    eitherFrom(left, right),
-    eitherFromSelf({ left: to(left), right: to(right) }),
+export const either = <R extends Schema.Any, L extends Schema.Any>({ left, right }: {
+  readonly left: L
+  readonly right: R
+}): either<R, L> => {
+  const _right = asSchema(right)
+  const _left = asSchema(left)
+  return transform(
+    eitherEncoded(_right, _left),
+    eitherFromSelf({ left: typeSchema(_left), right: typeSchema(_right) }),
     eitherDecode,
-    Either.match({ onLeft: makeLeftFrom, onRight: makeRightFrom })
+    Either.match({ onLeft: makeLeftEncoded, onRight: makeRightEncoded })
   )
+}
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface eitherFromUnion<R extends Schema.Any, L extends Schema.Any> extends
+  Annotable<
+    eitherFromUnion<R, L>,
+    Either.Either<Schema.Type<R>, Schema.Type<L>>,
+    Schema.Encoded<R> | Schema.Encoded<L>,
+    Schema.Context<R> | Schema.Context<L>
+  >
+{}
 
 /**
  * @example
@@ -4109,19 +5203,21 @@ export const either = <E, IE, R1, A, IA, R2>({ left, right }: {
  * @category Either transformations
  * @since 1.0.0
  */
-export const eitherFromUnion = <EA, EI, R1, AA, AI, R2>({ left, right }: {
-  readonly left: Schema<EA, EI, R1>
-  readonly right: Schema<AA, AI, R2>
-}): Schema<Either.Either<AA, EA>, EI | AI, R1 | R2> => {
-  const toleft = to(left)
-  const toright = to(right)
-  const fromLeft = transform(left, leftFrom(toleft), makeLeftFrom, (l) => l.left)
-  const fromRight = transform(right, rightFrom(toright), makeRightFrom, (r) => r.right)
+export const eitherFromUnion = <R extends Schema.Any, L extends Schema.Any>({ left, right }: {
+  readonly left: L
+  readonly right: R
+}): eitherFromUnion<R, L> => {
+  const _right = asSchema(right)
+  const _left = asSchema(left)
+  const toright = typeSchema(_right)
+  const toleft = typeSchema(_left)
+  const fromRight = transform(_right, rightEncoded(toright), makeRightEncoded, (r) => r.right)
+  const fromLeft = transform(_left, leftEncoded(toleft), makeLeftEncoded, (l) => l.left)
   return transform(
     union(fromRight, fromLeft),
     eitherFromSelf({ left: toleft, right: toright }),
     (from) => from._tag === "Left" ? Either.left(from.left) : Either.right(from.right),
-    Either.match({ onLeft: makeLeftFrom, onRight: makeRightFrom })
+    Either.match({ onLeft: makeLeftEncoded, onRight: makeRightEncoded })
   )
 }
 
@@ -4158,16 +5254,29 @@ const readonlyMapParse = <R, K, V>(
 (u, options, ast) =>
   Predicate.isMap(u) ?
     ParseResult.map(decodeUnknown(Array.from(u.entries()), options), (as): ReadonlyMap<K, V> => new Map(as))
-    : ParseResult.fail(ParseResult.type(ast, u))
+    : ParseResult.fail(new ParseResult.Type(ast, u))
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface readonlyMapFromSelf<K extends Schema.Any, V extends Schema.Any> extends
+  Annotable<
+    readonlyMapFromSelf<K, V>,
+    ReadonlyMap<Schema.Type<K>, Schema.Type<V>>,
+    ReadonlyMap<Schema.Encoded<K>, Schema.Encoded<V>>,
+    Schema.Context<K> | Schema.Context<V>
+  >
+{}
 
 /**
  * @category ReadonlyMap transformations
  * @since 1.0.0
  */
-export const readonlyMapFromSelf = <K, IK, RK, V, IV, RV>({ key, value }: {
-  readonly key: Schema<K, IK, RK>
-  readonly value: Schema<V, IV, RV>
-}): Schema<ReadonlyMap<K, V>, ReadonlyMap<IK, IV>, RK | RV> => {
+export const readonlyMapFromSelf = <K extends Schema.Any, V extends Schema.Any>({ key, value }: {
+  readonly key: K
+  readonly value: V
+}): readonlyMapFromSelf<K, V> => {
   return declare(
     [key, value],
     (key, value) => readonlyMapParse(ParseResult.decodeUnknown(array(tuple(key, value)))),
@@ -4181,20 +5290,36 @@ export const readonlyMapFromSelf = <K, IK, RK, V, IV, RV>({ key, value }: {
   )
 }
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface readonlyMap<K extends Schema.Any, V extends Schema.Any> extends
+  Annotable<
+    readonlyMap<K, V>,
+    ReadonlyMap<Schema.Type<K>, Schema.Type<V>>,
+    ReadonlyArray<readonly [Schema.Encoded<K>, Schema.Encoded<V>]>,
+    Schema.Context<K> | Schema.Context<V>
+  >
+{}
+
 /**
  * @category ReadonlyMap transformations
  * @since 1.0.0
  */
-export const readonlyMap = <K, IK, RK, V, IV, RV>({ key, value }: {
-  readonly key: Schema<K, IK, RK>
-  readonly value: Schema<V, IV, RV>
-}): Schema<ReadonlyMap<K, V>, ReadonlyArray<readonly [IK, IV]>, RK | RV> =>
-  transform(
-    array(tuple(key, value)),
-    readonlyMapFromSelf({ key: to(key), value: to(value) }),
+export const readonlyMap = <K extends Schema.Any, V extends Schema.Any>({ key, value }: {
+  readonly key: K
+  readonly value: V
+}): readonlyMap<K, V> => {
+  const _key = asSchema(key)
+  const _value = asSchema(value)
+  return transform(
+    array(tuple(_key, _value)),
+    readonlyMapFromSelf({ key: typeSchema(_key), value: typeSchema(_value) }),
     (as) => new Map(as),
     (map) => Array.from(map.entries())
   )
+}
 
 const readonlySetArbitrary = <A>(item: Arbitrary<A>): Arbitrary<ReadonlySet<A>> => (fc) =>
   fc.array(item(fc)).map((as) => new Set(as))
@@ -4215,131 +5340,120 @@ const readonlySetParse = <R, A>(
 (u, options, ast) =>
   Predicate.isSet(u) ?
     ParseResult.map(decodeUnknown(Array.from(u.values()), options), (as): ReadonlySet<A> => new Set(as))
-    : ParseResult.fail(ParseResult.type(ast, u))
+    : ParseResult.fail(new ParseResult.Type(ast, u))
 
 /**
- * @category ReadonlySet transformations
+ * @category api interface
  * @since 1.0.0
  */
-export const readonlySetFromSelf = <A, I, R>(
-  item: Schema<A, I, R>
-): Schema<ReadonlySet<A>, ReadonlySet<I>, R> => {
-  return declare(
-    [item],
-    (item) => readonlySetParse(ParseResult.decodeUnknown(array(item))),
-    (item) => readonlySetParse(ParseResult.encodeUnknown(array(item))),
-    {
-      description: `ReadonlySet<${format(item)}>`,
-      pretty: readonlySetPretty,
-      arbitrary: readonlySetArbitrary,
-      equivalence: readonlySetEquivalence
-    }
-  )
-}
+export interface readonlySetFromSelf<Value extends Schema.Any> extends
+  Annotable<
+    readonlySetFromSelf<Value>,
+    ReadonlySet<Schema.Type<Value>>,
+    ReadonlySet<Schema.Encoded<Value>>,
+    Schema.Context<Value>
+  >
+{}
 
 /**
  * @category ReadonlySet transformations
  * @since 1.0.0
  */
-export const readonlySet = <A, I, R>(item: Schema<A, I, R>): Schema<ReadonlySet<A>, ReadonlyArray<I>, R> =>
-  transform(
-    array(item),
-    readonlySetFromSelf(to(item)),
-    (as) => new Set(as),
-    (set) => Array.from(set)
-  )
-
-const sortedSetArbitrary = <A>(item: Arbitrary<A>, ord: Order.Order<A>): Arbitrary<SortedSet.SortedSet<A>> => (fc) =>
-  fc.array(item(fc)).map((as) => SortedSet.fromIterable(as, ord))
-
-const sortedSetPretty = <A>(item: Pretty.Pretty<A>): Pretty.Pretty<SortedSet.SortedSet<A>> => (set) =>
-  `new SortedSet([${Array.from(SortedSet.values(set)).map((a) => item(a)).join(", ")}])`
-
-const sortedSetParse = <R, A>(
-  decodeUnknown: ParseResult.DecodeUnknown<ReadonlyArray<A>, R>,
-  ord: Order.Order<A>
-): ParseResult.DeclarationDecodeUnknown<SortedSet.SortedSet<A>, R> =>
-(u, options, ast) =>
-  SortedSet.isSortedSet(u) ?
-    ParseResult.map(decodeUnknown(Array.from(SortedSet.values(u)), options), (as): SortedSet.SortedSet<A> =>
-      SortedSet.fromIterable(as, ord))
-    : ParseResult.fail(ParseResult.type(ast, u))
-
-/**
- * @category SortedSet transformations
- * @since 1.0.0
- */
-export const sortedSetFromSelf = <A, I, R>(
-  item: Schema<A, I, R>,
-  ordA: Order.Order<A>,
-  ordI: Order.Order<I>
-): Schema<SortedSet.SortedSet<A>, SortedSet.SortedSet<I>, R> => {
+export const readonlySetFromSelf = <Value extends Schema.Any>(
+  value: Value
+): readonlySetFromSelf<Value> => {
   return declare(
-    [item],
-    (item) => sortedSetParse(ParseResult.decodeUnknown(array(item)), ordA),
-    (item) => sortedSetParse(ParseResult.encodeUnknown(array(item)), ordI),
+    [value],
+    (item) => readonlySetParse(ParseResult.decodeUnknown(array(item))),
+    (item) => readonlySetParse(ParseResult.encodeUnknown(array(item))),
     {
-      description: `SortedSet<${format(item)}>`,
-      pretty: sortedSetPretty,
-      arbitrary: (arb) => sortedSetArbitrary(arb, ordA),
-      equivalence: () => SortedSet.getEquivalence<A>()
+      description: `ReadonlySet<${format(value)}>`,
+      pretty: readonlySetPretty,
+      arbitrary: readonlySetArbitrary,
+      equivalence: readonlySetEquivalence
     }
   )
 }
 
 /**
- * @category SortedSet transformations
+ * @category api interface
  * @since 1.0.0
  */
-export const sortedSet = <A, I, R>(
-  item: Schema<A, I, R>,
-  ordA: Order.Order<A>
-) =>
-  transform(
-    array(item),
-    sortedSetFromSelf(to(item), ordA, ordA),
-    (as) => SortedSet.fromIterable(as, ordA),
-    (set) => Array.from(SortedSet.values(set))
+export interface readonlySet<Value extends Schema.Any> extends
+  Annotable<
+    readonlySet<Value>,
+    ReadonlySet<Schema.Type<Value>>,
+    ReadonlyArray<Schema.Encoded<Value>>,
+    Schema.Context<Value>
+  >
+{}
+
+/**
+ * @category ReadonlySet transformations
+ * @since 1.0.0
+ */
+export const readonlySet = <Value extends Schema.Any>(value: Value): readonlySet<Value> => {
+  const _value = asSchema(value)
+  return transform(
+    array(_value),
+    readonlySetFromSelf(typeSchema(_value)),
+    (as) => new Set(as),
+    (set) => Array.from(set)
   )
+}
+
+const bigDecimalPretty = (): Pretty.Pretty<_bigDecimal.BigDecimal> => (val) =>
+  `BigDecimal(${_bigDecimal.format(_bigDecimal.normalize(val))})`
 
-const bigDecimalPretty = (): Pretty.Pretty<BigDecimal.BigDecimal> => (val) =>
-  `BigDecimal(${BigDecimal.format(BigDecimal.normalize(val))})`
+const bigDecimalArbitrary = (): Arbitrary<_bigDecimal.BigDecimal> => (fc) =>
+  fc.tuple(fc.bigInt(), fc.integer()).map(([value, scale]) => _bigDecimal.make(value, scale))
 
-const bigDecimalArbitrary = (): Arbitrary<BigDecimal.BigDecimal> => (fc) =>
-  fc.tuple(fc.bigInt(), fc.integer()).map(([value, scale]) => BigDecimal.make(value, scale))
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface BigDecimalFromSelf extends Annotable<BigDecimalFromSelf, _bigDecimal.BigDecimal> {}
 
 /**
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export const BigDecimalFromSelf: Schema<BigDecimal.BigDecimal> = declare(
-  BigDecimal.isBigDecimal,
+export const BigDecimalFromSelf: BigDecimalFromSelf = declare(
+  _bigDecimal.isBigDecimal,
   {
     identifier: "BigDecimalFromSelf",
     pretty: bigDecimalPretty,
     arbitrary: bigDecimalArbitrary,
-    equivalence: () => BigDecimal.Equivalence
+    equivalence: () => _bigDecimal.Equivalence
   }
 )
 
-const _BigDecimal: Schema<BigDecimal.BigDecimal, string> = transformOrFail(
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface BigDecimal extends Annotable<BigDecimal, _bigDecimal.BigDecimal, string> {}
+
+/**
+ * @category BigDecimal transformations
+ * @since 1.0.0
+ */
+export const BigDecimal: BigDecimal = transformOrFail(
   string,
   BigDecimalFromSelf,
   (num, _, ast) =>
-    BigDecimal.fromString(num).pipe(Option.match({
-      onNone: () => ParseResult.fail(ParseResult.type(ast, num)),
-      onSome: (val) => ParseResult.succeed(BigDecimal.normalize(val))
+    _bigDecimal.fromString(num).pipe(Option.match({
+      onNone: () => ParseResult.fail(new ParseResult.Type(ast, num)),
+      onSome: (val) => ParseResult.succeed(_bigDecimal.normalize(val))
     })),
-  (val) => ParseResult.succeed(BigDecimal.format(BigDecimal.normalize(val)))
-).pipe(identifier("BigDecimal"))
+  (val) => ParseResult.succeed(_bigDecimal.format(_bigDecimal.normalize(val)))
+).annotations({ identifier: "BigDecimal" })
 
-export {
-  /**
-   * @category BigDecimal transformations
-   * @since 1.0.0
-   */
-  _BigDecimal as BigDecimal
-}
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface BigDecimalFromNumber extends Annotable<BigDecimalFromNumber, _bigDecimal.BigDecimal, number> {}
 
 /**
  * A schema that transforms a `number` into a `BigDecimal`.
@@ -4348,12 +5462,12 @@ export {
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-export const BigDecimalFromNumber: Schema<BigDecimal.BigDecimal, number> = transformOrFail(
+export const BigDecimalFromNumber: BigDecimalFromNumber = transformOrFail(
   number,
   BigDecimalFromSelf,
-  (num) => ParseResult.succeed(BigDecimal.fromNumber(num)),
-  (val) => ParseResult.succeed(BigDecimal.unsafeToNumber(val))
-).pipe(identifier("BigDecimalFromNumber"))
+  (num) => ParseResult.succeed(_bigDecimal.fromNumber(num)),
+  (val) => ParseResult.succeed(_bigDecimal.unsafeToNumber(val))
+).annotations({ identifier: "BigDecimalFromNumber" })
 
 /**
  * @category type id
@@ -4365,16 +5479,16 @@ export const GreaterThanBigDecimalTypeId = Symbol.for("@effect/schema/TypeId/Gre
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const greaterThanBigDecimal = <A extends BigDecimal.BigDecimal>(
-  min: BigDecimal.BigDecimal,
-  options?: FilterAnnotations<A>
+export const greaterThanBigDecimal = <A extends _bigDecimal.BigDecimal>(
+  min: _bigDecimal.BigDecimal,
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
-    filter((a): a is A => BigDecimal.greaterThan(a, min), {
+    filter((a): a is A => _bigDecimal.greaterThan(a, min), {
       typeId: { id: GreaterThanBigDecimalTypeId, annotation: { min } },
-      description: `a BigDecimal greater than ${BigDecimal.format(min)}`,
-      ...options
+      description: `a BigDecimal greater than ${_bigDecimal.format(min)}`,
+      ...annotations
     })
   )
 
@@ -4390,16 +5504,16 @@ export const GreaterThanOrEqualToBigDecimalTypeId = Symbol.for(
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const greaterThanOrEqualToBigDecimal = <A extends BigDecimal.BigDecimal>(
-  min: BigDecimal.BigDecimal,
-  options?: FilterAnnotations<A>
+export const greaterThanOrEqualToBigDecimal = <A extends _bigDecimal.BigDecimal>(
+  min: _bigDecimal.BigDecimal,
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
-    filter((a): a is A => BigDecimal.greaterThanOrEqualTo(a, min), {
+    filter((a): a is A => _bigDecimal.greaterThanOrEqualTo(a, min), {
       typeId: { id: GreaterThanOrEqualToBigDecimalTypeId, annotation: { min } },
-      description: `a BigDecimal greater than or equal to ${BigDecimal.format(min)}`,
-      ...options
+      description: `a BigDecimal greater than or equal to ${_bigDecimal.format(min)}`,
+      ...annotations
     })
   )
 
@@ -4413,16 +5527,16 @@ export const LessThanBigDecimalTypeId = Symbol.for("@effect/schema/TypeId/LessTh
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const lessThanBigDecimal = <A extends BigDecimal.BigDecimal>(
-  max: BigDecimal.BigDecimal,
-  options?: FilterAnnotations<A>
+export const lessThanBigDecimal = <A extends _bigDecimal.BigDecimal>(
+  max: _bigDecimal.BigDecimal,
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
-    filter((a): a is A => BigDecimal.lessThan(a, max), {
+    filter((a): a is A => _bigDecimal.lessThan(a, max), {
       typeId: { id: LessThanBigDecimalTypeId, annotation: { max } },
-      description: `a BigDecimal less than ${BigDecimal.format(max)}`,
-      ...options
+      description: `a BigDecimal less than ${_bigDecimal.format(max)}`,
+      ...annotations
     })
   )
 
@@ -4438,16 +5552,16 @@ export const LessThanOrEqualToBigDecimalTypeId = Symbol.for(
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const lessThanOrEqualToBigDecimal = <A extends BigDecimal.BigDecimal>(
-  max: BigDecimal.BigDecimal,
-  options?: FilterAnnotations<A>
+export const lessThanOrEqualToBigDecimal = <A extends _bigDecimal.BigDecimal>(
+  max: _bigDecimal.BigDecimal,
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
-    filter((a): a is A => BigDecimal.lessThanOrEqualTo(a, max), {
+    filter((a): a is A => _bigDecimal.lessThanOrEqualTo(a, max), {
       typeId: { id: LessThanOrEqualToBigDecimalTypeId, annotation: { max } },
-      description: `a BigDecimal less than or equal to ${BigDecimal.format(max)}`,
-      ...options
+      description: `a BigDecimal less than or equal to ${_bigDecimal.format(max)}`,
+      ...annotations
     })
   )
 
@@ -4463,15 +5577,15 @@ export const PositiveBigDecimalTypeId = Symbol.for(
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const positiveBigDecimal = <A extends BigDecimal.BigDecimal>(
-  options?: FilterAnnotations<A>
+export const positiveBigDecimal = <A extends _bigDecimal.BigDecimal>(
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
-    filter((a): a is A => BigDecimal.isPositive(a), {
+    filter((a): a is A => _bigDecimal.isPositive(a), {
       typeId: { id: PositiveBigDecimalTypeId, annotation: {} },
       description: `a positive BigDecimal`,
-      ...options
+      ...annotations
     })
   )
 
@@ -4498,15 +5612,15 @@ export const NonNegativeBigDecimalTypeId = Symbol.for(
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const nonNegativeBigDecimal = <A extends BigDecimal.BigDecimal>(
-  options?: FilterAnnotations<A>
+export const nonNegativeBigDecimal = <A extends _bigDecimal.BigDecimal>(
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
     filter((a): a is A => a.value >= 0n, {
       typeId: { id: NonNegativeBigDecimalTypeId, annotation: {} },
       description: `a non-negative BigDecimal`,
-      ...options
+      ...annotations
     })
   )
 
@@ -4533,15 +5647,15 @@ export const NegativeBigDecimalTypeId = Symbol.for(
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const negativeBigDecimal = <A extends BigDecimal.BigDecimal>(
-  options?: FilterAnnotations<A>
+export const negativeBigDecimal = <A extends _bigDecimal.BigDecimal>(
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
-    filter((a): a is A => BigDecimal.isNegative(a), {
+    filter((a): a is A => _bigDecimal.isNegative(a), {
       typeId: { id: NegativeBigDecimalTypeId, annotation: {} },
       description: `a negative BigDecimal`,
-      ...options
+      ...annotations
     })
   )
 
@@ -4568,15 +5682,15 @@ export const NonPositiveBigDecimalTypeId = Symbol.for(
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const nonPositiveBigDecimal = <A extends BigDecimal.BigDecimal>(
-  options?: FilterAnnotations<A>
+export const nonPositiveBigDecimal = <A extends _bigDecimal.BigDecimal>(
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
     filter((a): a is A => a.value <= 0n, {
       typeId: { id: NonPositiveBigDecimalTypeId, annotation: {} },
       description: `a non-positive BigDecimal`,
-      ...options
+      ...annotations
     })
   )
 
@@ -4601,17 +5715,17 @@ export const BetweenBigDecimalTypeId = Symbol.for("@effect/schema/TypeId/Between
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export const betweenBigDecimal = <A extends BigDecimal.BigDecimal>(
-  minimum: BigDecimal.BigDecimal,
-  maximum: BigDecimal.BigDecimal,
-  options?: FilterAnnotations<A>
+export const betweenBigDecimal = <A extends _bigDecimal.BigDecimal>(
+  minimum: _bigDecimal.BigDecimal,
+  maximum: _bigDecimal.BigDecimal,
+  annotations?: FilterAnnotations<A>
 ) =>
 <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
   self.pipe(
-    filter((a): a is A => BigDecimal.between(a, { minimum, maximum }), {
+    filter((a): a is A => _bigDecimal.between(a, { minimum, maximum }), {
       typeId: { id: BetweenBigDecimalTypeId, annotation: { maximum, minimum } },
-      description: `a BigDecimal between ${BigDecimal.format(minimum)} and ${BigDecimal.format(maximum)}`,
-      ...options
+      description: `a BigDecimal between ${_bigDecimal.format(minimum)} and ${_bigDecimal.format(maximum)}`,
+      ...annotations
     })
   )
 
@@ -4622,12 +5736,12 @@ export const betweenBigDecimal = <A extends BigDecimal.BigDecimal>(
  * @since 1.0.0
  */
 export const clampBigDecimal =
-  (minimum: BigDecimal.BigDecimal, maximum: BigDecimal.BigDecimal) =>
-  <R, I, A extends BigDecimal.BigDecimal>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  (minimum: _bigDecimal.BigDecimal, maximum: _bigDecimal.BigDecimal) =>
+  <R, I, A extends _bigDecimal.BigDecimal>(self: Schema<A, I, R>): Schema<A, I, R> =>
     transform(
       self,
-      self.pipe(to, betweenBigDecimal(minimum, maximum)),
-      (self) => BigDecimal.clamp(self, { minimum, maximum }),
+      self.pipe(typeSchema, betweenBigDecimal(minimum, maximum)),
+      (self) => _bigDecimal.clamp(self, { minimum, maximum }),
       identity,
       { strict: false }
     )
@@ -4638,14 +5752,14 @@ export const clampBigDecimal =
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-export const negateBigDecimal = <R, I, A extends BigDecimal.BigDecimal>(
+export const negateBigDecimal = <R, I, A extends _bigDecimal.BigDecimal>(
   self: Schema<A, I, R>
 ): Schema<A, I, R> =>
   transform(
     self,
-    to(self),
-    (self) => BigDecimal.negate(self),
-    (self) => BigDecimal.negate(self),
+    typeSchema(self),
+    (self) => _bigDecimal.negate(self),
+    (self) => _bigDecimal.negate(self),
     { strict: false }
   )
 
@@ -4663,19 +5777,32 @@ const chunkParse = <R, A>(
     Chunk.isEmpty(u) ?
       ParseResult.succeed(Chunk.empty())
       : ParseResult.map(decodeUnknown(Chunk.toReadonlyArray(u), options), Chunk.fromIterable)
-    : ParseResult.fail(ParseResult.type(ast, u))
+    : ParseResult.fail(new ParseResult.Type(ast, u))
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface chunkFromSelf<Value extends Schema.Any> extends
+  Annotable<
+    chunkFromSelf<Value>,
+    Chunk.Chunk<Schema.Type<Value>>,
+    Chunk.Chunk<Schema.Encoded<Value>>,
+    Schema.Context<Value>
+  >
+{}
 
 /**
  * @category Chunk transformations
  * @since 1.0.0
  */
-export const chunkFromSelf = <A, I, R>(item: Schema<A, I, R>): Schema<Chunk.Chunk<A>, Chunk.Chunk<I>, R> => {
+export const chunkFromSelf = <Value extends Schema.Any>(value: Value): chunkFromSelf<Value> => {
   return declare(
-    [item],
+    [value],
     (item) => chunkParse(ParseResult.decodeUnknown(array(item))),
     (item) => chunkParse(ParseResult.encodeUnknown(array(item))),
     {
-      description: `Chunk<${format(item)}>`,
+      description: `Chunk<${format(value)}>`,
       pretty: chunkPretty,
       arbitrary: chunkArbitrary,
       equivalence: Chunk.getEquivalence
@@ -4683,17 +5810,32 @@ export const chunkFromSelf = <A, I, R>(item: Schema<A, I, R>): Schema<Chunk.Chun
   )
 }
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface chunk<Value extends Schema.Any> extends
+  Annotable<
+    chunk<Value>,
+    Chunk.Chunk<Schema.Type<Value>>,
+    ReadonlyArray<Schema.Encoded<Value>>,
+    Schema.Context<Value>
+  >
+{}
+
 /**
  * @category Chunk transformations
  * @since 1.0.0
  */
-export const chunk = <A, I, R>(item: Schema<A, I, R>): Schema<Chunk.Chunk<A>, ReadonlyArray<I>, R> =>
-  transform(
-    array(item),
-    chunkFromSelf(to(item)),
+export const chunk = <Value extends Schema.Any>(value: Value): chunk<Value> => {
+  const _value = asSchema(value)
+  return transform(
+    array(_value),
+    chunkFromSelf(typeSchema(_value)),
     (as) => as.length === 0 ? Chunk.empty() : Chunk.fromIterable(as),
     Chunk.toReadonlyArray
   )
+}
 
 const toData = <A extends Readonly<Record<string, any>> | ReadonlyArray<any>>(a: A): A =>
   Array.isArray(a) ? Data.array(a) : Data.struct(a)
@@ -4714,7 +5856,7 @@ const dataParse = <R, A extends Readonly<Record<string, any>> | ReadonlyArray<an
 (u, options, ast) =>
   Equal.isEqual(u) ?
     ParseResult.map(decodeUnknown(u, options), toData)
-    : ParseResult.fail(ParseResult.type(ast, u))
+    : ParseResult.fail(new ParseResult.Type(ast, u))
 
 /**
  * @category Data transformations
@@ -4752,7 +5894,7 @@ export const data = <
 ): Schema<A, I, R> =>
   transform(
     item,
-    dataFromSelf(to(item)),
+    dataFromSelf(typeSchema(item)),
     toData,
     (a) => Array.isArray(a) ? Array.from(a) : Object.assign({}, a),
     { strict: false }
@@ -4762,158 +5904,211 @@ type MissingSelfGeneric<Usage extends string, Params extends string = ""> =
   `Missing \`Self\` generic - use \`class Self extends ${Usage}<Self>()(${Params}{ ... })\``
 
 /**
- * @category classes
  * @since 1.0.0
  */
-export interface Class<A, I, R, C, Self, Inherited = {}, Proto = {}> extends Schema<Self, I, R> {
+export type ToOptionalConstructorKeys<Fields> = {
+  [K in keyof Fields]: Fields[K] extends PropertySignature<any, any, any, any, any, true, any> ? K
+    : never
+}[keyof Fields]
+
+/**
+ * @since 1.0.0
+ */
+export type ToStructConstructor<
+  F extends Struct.Fields,
+  OptionalKeys extends PropertyKey = Struct.TypeTokenKeys<F>
+> =
+  & {
+    readonly [
+      K in Exclude<keyof F, ToOptionalConstructorKeys<F> | OptionalKeys>
+    ]: Schema.Type<F[K]>
+  }
+  & { readonly [K in OptionalKeys]?: Schema.Type<F[K]> }
+  & { readonly [K in ToOptionalConstructorKeys<F>]?: Schema.Type<F[K]> }
+
+type _OptionalKeys<O> = {
+  [K in keyof O]-?: {} extends Pick<O, K> ? K
+    : never
+}[keyof O]
+
+type FilterOptionalKeys<A> = Omit<A, _OptionalKeys<A>>
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface Class<Self, Fields extends Struct.Fields, A, I, R, C, Inherited, Proto> extends Schema<Self, I, R> {
   new(
-    props: Equals<C, {}> extends true ? void | {} : C,
+    props: Equals<C, {}> extends true ? void | {} : Equals<FilterOptionalKeys<C>, {}> extends true ? void | C : C,
     disableValidation?: boolean | undefined
   ): A & Omit<Inherited, keyof A> & Proto
 
-  readonly struct: Schema<A, I, R>
+  readonly fields: Simplify<Fields>
 
-  readonly extend: <Extended = "Effect.orDie">() => <FieldsB extends StructFields>(
-    fields: FieldsB
-  ) => [Extended] extends ["Effect.orDie"] ? MissingSelfGeneric<"Base.extend">
+  readonly extend: <Extended = never>(identifier?: string | undefined) => <newFields extends Struct.Fields>(
+    fields: newFields,
+    annotations?: Annotations<Extended>
+  ) => [Extended] extends [never] ? MissingSelfGeneric<"Base.extend">
     : Class<
-      Simplify<Omit<A, keyof FieldsB> & ToStruct<FieldsB>>,
-      Simplify<Omit<I, keyof FieldsB> & FromStruct<FieldsB>>,
-      R | Schema.Context<FieldsB[keyof FieldsB]>,
-      Simplify<Omit<C, keyof FieldsB> & ToStruct<FieldsB>>,
       Extended,
+      Fields & newFields,
+      Simplify<A & Struct.Type<newFields>>,
+      Simplify<I & Struct.Encoded<newFields>>,
+      R | Struct.Context<newFields>,
+      Simplify<C & ToStructConstructor<newFields>>,
       Self,
       Proto
     >
 
-  readonly transformOrFail: <Transformed = "Effect.orDie">() => <
-    FieldsB extends StructFields,
+  readonly transformOrFail: <Transformed = never>(identifier?: string | undefined) => <
+    newFields extends Struct.Fields,
     R2,
     R3
   >(
-    fields: FieldsB,
+    fields: newFields,
     decode: (
       input: A,
       options: ParseOptions,
-      ast: AST.Transform
-    ) => Effect.Effect<Omit<A, keyof FieldsB> & ToStruct<FieldsB>, ParseResult.ParseIssue, R2>,
+      ast: AST.Transformation
+    ) => Effect.Effect<Simplify<A & Struct.Type<newFields>>, ParseResult.ParseIssue, R2>,
     encode: (
-      input: Simplify<Omit<A, keyof FieldsB> & ToStruct<FieldsB>>,
+      input: Simplify<A & Struct.Type<newFields>>,
       options: ParseOptions,
-      ast: AST.Transform
+      ast: AST.Transformation
     ) => Effect.Effect<A, ParseResult.ParseIssue, R3>
-  ) => [Transformed] extends ["Effect.orDie"] ? MissingSelfGeneric<"Base.transform">
+  ) => [Transformed] extends [never] ? MissingSelfGeneric<"Base.transform">
     : Class<
-      Simplify<Omit<A, keyof FieldsB> & ToStruct<FieldsB>>,
-      I,
-      R | Schema.Context<FieldsB[keyof FieldsB]> | R2 | R3,
-      Simplify<Omit<C, keyof FieldsB> & ToStruct<FieldsB>>,
       Transformed,
+      Fields & newFields,
+      Simplify<A & Struct.Type<newFields>>,
+      I,
+      R | Struct.Context<newFields> | R2 | R3,
+      Simplify<C & ToStructConstructor<newFields>>,
       Self,
       Proto
     >
 
-  readonly transformOrFailFrom: <Transformed = "Effect.orDie">() => <
-    FieldsB extends StructFields,
+  readonly transformOrFailFrom: <Transformed = never>(identifier?: string | undefined) => <
+    newFields extends Struct.Fields,
     R2,
     R3
   >(
-    fields: FieldsB,
+    fields: newFields,
     decode: (
       input: I,
       options: ParseOptions,
-      ast: AST.Transform
-    ) => Effect.Effect<Omit<I, keyof FieldsB> & FromStruct<FieldsB>, ParseResult.ParseIssue, R2>,
+      ast: AST.Transformation
+    ) => Effect.Effect<Simplify<I & Struct.Encoded<newFields>>, ParseResult.ParseIssue, R2>,
     encode: (
-      input: Simplify<Omit<I, keyof FieldsB> & FromStruct<FieldsB>>,
+      input: Simplify<I & Struct.Encoded<newFields>>,
       options: ParseOptions,
-      ast: AST.Transform
+      ast: AST.Transformation
     ) => Effect.Effect<I, ParseResult.ParseIssue, R3>
-  ) => [Transformed] extends ["Effect.orDie"] ? MissingSelfGeneric<"Base.transformFrom">
+  ) => [Transformed] extends [never] ? MissingSelfGeneric<"Base.transformFrom">
     : Class<
-      Simplify<Omit<A, keyof FieldsB> & ToStruct<FieldsB>>,
-      I,
-      R | Schema.Context<FieldsB[keyof FieldsB]> | R2 | R3,
-      Simplify<Omit<C, keyof FieldsB> & ToStruct<FieldsB>>,
       Transformed,
+      Fields & newFields,
+      Simplify<A & Struct.Type<newFields>>,
+      I,
+      R | Struct.Context<newFields> | R2 | R3,
+      Simplify<C & ToStructConstructor<newFields>>,
       Self,
       Proto
     >
 }
 
+const TAG = "_tag"
+
 /**
  * @category classes
  * @since 1.0.0
  */
-export const Class = <Self = "Effect.orDie">() =>
-<Fields extends StructFields>(
-  fields: Fields
-): [Self] extends ["Effect.orDie"] ? MissingSelfGeneric<"Class">
+export const Class = <Self = never>(identifier?: string | undefined) =>
+<Fields extends Struct.Fields>(
+  fields: Fields,
+  annotations?: Annotations<Self>
+): [Self] extends [never] ? MissingSelfGeneric<"Class">
   : Class<
-    Simplify<ToStruct<Fields>>,
-    Simplify<FromStruct<Fields>>,
-    Schema.Context<Fields[keyof Fields]>,
-    Simplify<ToStruct<Fields>>,
-    Self
-  > => makeClass(struct(fields), fields, Data.Class)
+    Self,
+    Fields,
+    Simplify<Struct.Type<Fields>>,
+    Simplify<Struct.Encoded<Fields>>,
+    Struct.Context<Fields>,
+    Simplify<ToStructConstructor<Fields>>,
+    {},
+    {}
+  > => makeClass({ kind: "Class", identifier, fields, Base: Data.Class, annotations })
 
 /**
  * @category classes
  * @since 1.0.0
  */
-export const TaggedClass = <Self = "Effect.orDie">() =>
-<Tag extends string, Fields extends StructFields>(
+export const TaggedClass = <Self = never>(identifier?: string) =>
+<Tag extends string, Fields extends Struct.Fields>(
   tag: Tag,
-  fields: Fields
-): [Self] extends ["Effect.orDie"] ? MissingSelfGeneric<"TaggedClass", `"Tag", `>
+  fields: Fields,
+  annotations?: Annotations<Self>
+): [Self] extends [never] ? MissingSelfGeneric<"TaggedClass", `"Tag", `>
   : Class<
-    Simplify<{ readonly _tag: Tag } & ToStruct<Fields>>,
-    Simplify<{ readonly _tag: Tag } & FromStruct<Fields>>,
-    Schema.Context<Fields[keyof Fields]>,
-    Simplify<ToStruct<Fields>>,
-    Self
+    Self,
+    { readonly [TAG]: literal<[Tag]> } & Fields,
+    Simplify<{ readonly [TAG]: Tag } & Struct.Type<Fields>>,
+    Simplify<{ readonly [TAG]: Tag } & Struct.Encoded<Fields>>,
+    Struct.Context<Fields>,
+    Simplify<ToStructConstructor<Fields>>,
+    {},
+    {}
   > =>
 {
-  const fieldsWithTag: StructFields = { ...fields, _tag: literal(tag) }
-  return makeClass(struct(fieldsWithTag), fieldsWithTag, Data.Class, { _tag: tag })
+  return makeClass({
+    kind: "TaggedClass",
+    identifier: identifier ?? tag,
+    fields: extendFields({ [TAG]: literal(tag) }, fields),
+    Base: Data.Class,
+    tag: { [TAG]: tag },
+    annotations
+  })
 }
 
 /**
  * @category classes
  * @since 1.0.0
  */
-export const TaggedError = <Self = "Effect.orDie">() =>
-<Tag extends string, Fields extends StructFields>(
+export const TaggedError = <Self = never>(identifier?: string) =>
+<Tag extends string, Fields extends Struct.Fields>(
   tag: Tag,
-  fields: Fields
-): [Self] extends ["Effect.orDie"] ? MissingSelfGeneric<"TaggedError", `"Tag", `>
+  fields: Fields,
+  annotations?: Annotations<Self>
+): [Self] extends [never] ? MissingSelfGeneric<"TaggedError", `"Tag", `>
   : Class<
-    Simplify<{ readonly _tag: Tag } & ToStruct<Fields>>,
-    Simplify<{ readonly _tag: Tag } & FromStruct<Fields>>,
-    Schema.Context<Fields[keyof Fields]>,
-    Simplify<ToStruct<Fields>>,
     Self,
+    { readonly [TAG]: literal<[Tag]> } & Fields,
+    Simplify<{ readonly [TAG]: Tag } & Struct.Type<Fields>>,
+    Simplify<{ readonly [TAG]: Tag } & Struct.Encoded<Fields>>,
+    Struct.Context<Fields>,
+    Simplify<ToStructConstructor<Fields>>,
     {},
     Cause.YieldableError
   > =>
 {
-  const fieldsWithTag: StructFields = { ...fields, _tag: literal(tag) }
-  return makeClass(
-    struct(fieldsWithTag),
-    fieldsWithTag,
-    Data.Error,
-    { _tag: tag }
-  )
+  return makeClass({
+    kind: "TaggedError",
+    identifier: identifier ?? tag,
+    fields: extendFields({ [TAG]: literal(tag) }, fields),
+    Base: Data.Error,
+    tag: { [TAG]: tag },
+    annotations
+  })
 }
 
 /**
  * @category classes
  * @since 1.0.0
  */
-export interface TaggedRequest<Tag extends string, R, IS, S, RR, IE, E, IA, A>
-  extends Request.Request<A, E>, Serializable.SerializableWithResult<R, IS, S, RR, IE, E, IA, A>
+export interface TaggedRequest<Tag extends string, S, SI, SR, A, AI, E, EI, RR>
+  extends Request.Request<A, E>, Serializable.SerializableWithResult<S, SI, SR, A, AI, E, EI, RR>
 {
-  readonly _tag: Tag
+  readonly [TAG]: Tag
 }
 
 /**
@@ -4927,7 +6122,7 @@ export declare namespace TaggedRequest {
    */
   export type Any =
     | TaggedRequest<string, any, any, any, any, any, any, any, any>
-    | TaggedRequest<string, any, any, any, any, never, never, any, any>
+    | TaggedRequest<string, any, any, any, any, any, never, never, any>
 }
 
 /**
@@ -4935,69 +6130,105 @@ export declare namespace TaggedRequest {
  * @since 1.0.0
  */
 export const TaggedRequest =
-  <Self = "Effect.orDie">() =>
-  <Tag extends string, Fields extends StructFields, EA, EI, ER, AA, AI, AR>(
+  <Self = never>(identifier?: string) =>
+  <Tag extends string, Fields extends Struct.Fields, EA, EI, ER, AA, AI, AR>(
     tag: Tag,
     Failure: Schema<EA, EI, ER>,
     Success: Schema<AA, AI, AR>,
-    fields: Fields
-  ): [Self] extends ["Effect.orDie"] ? MissingSelfGeneric<"TaggedRequest", `"Tag", SuccessSchema, FailureSchema, `>
+    fields: Fields,
+    annotations?: Annotations<Self>
+  ): [Self] extends [never] ? MissingSelfGeneric<"TaggedRequest", `"Tag", SuccessSchema, FailureSchema, `>
     : Class<
-      Simplify<{ readonly _tag: Tag } & ToStruct<Fields>>,
-      Simplify<{ readonly _tag: Tag } & FromStruct<Fields>>,
-      Schema.Context<Fields[keyof Fields]>,
-      Simplify<ToStruct<Fields>>,
       Self,
+      { readonly [TAG]: literal<[Tag]> } & Fields,
+      Simplify<{ readonly [TAG]: Tag } & Struct.Type<Fields>>,
+      Simplify<{ readonly [TAG]: Tag } & Struct.Encoded<Fields>>,
+      Struct.Context<Fields>,
+      Simplify<ToStructConstructor<Fields>>,
       TaggedRequest<
         Tag,
-        Schema.Context<Fields[keyof Fields]>,
-        Simplify<{ readonly _tag: Tag } & FromStruct<Fields>>,
         Self,
-        ER | AR,
-        EI,
-        EA,
+        { readonly [TAG]: Tag } & Struct.Encoded<Fields>,
+        Struct.Context<Fields>,
+        AA,
         AI,
-        AA
-      >
+        EA,
+        EI,
+        ER | AR
+      >,
+      {}
     > =>
   {
-    class SerializableRequest extends Request.Class<any, any, { readonly _tag: string }> {
-      get [InternalSerializable.symbol]() {
+    class SerializableRequest extends Request.Class<any, any, { readonly [TAG]: string }> {
+      get [_serializable.symbol]() {
         return this.constructor
       }
-      get [InternalSerializable.symbolResult]() {
+      get [_serializable.symbolResult]() {
         return { Failure, Success }
       }
     }
-    const fieldsWithTag: StructFields = { ...fields, _tag: literal(tag) }
-    return makeClass(
-      struct(fieldsWithTag),
-      fieldsWithTag,
-      SerializableRequest,
-      { _tag: tag }
-    )
+    return makeClass({
+      kind: "TaggedRequest",
+      identifier: identifier ?? tag,
+      fields: extendFields({ [TAG]: literal(tag) }, fields),
+      Base: SerializableRequest,
+      tag: { [TAG]: tag },
+      annotations
+    })
   }
 
-const makeClass = <A, I, R>(
-  selfSchema: Schema<A, I, R>,
-  selfFields: StructFields,
-  Base: any,
-  tag?: any
-): any => {
-  const validate = Parser.validateSync(selfSchema)
+const extendFields = (a: Struct.Fields, b: Struct.Fields): Struct.Fields => {
+  const out: Struct.Fields = { ...a }
+  for (const name of _util.ownKeys(b)) {
+    if (name in a) {
+      throw new Error(AST.getDuplicatePropertySignatureErrorMessage(name))
+    }
+    out[name] = b[name]
+  }
+  return out
+}
 
-  return class extends Base {
-    constructor(props?: any, disableValidation: boolean = false, outer: boolean = true) {
+const makeClass = ({ Base, annotations, fields, fromSchema, identifier, kind, tag }: {
+  kind: string
+  identifier?: string | undefined
+  fields: Struct.Fields
+  Base: new(...args: ReadonlyArray<any>) => any
+  fromSchema?: Schema.Any | undefined
+  tag?: { [TAG]: AST.LiteralValue } | undefined
+  annotations?: Annotations<any> | undefined
+}): any => {
+  const schema = fromSchema ?? struct(fields)
+  const validate = Parser.validateSync(schema)
+
+  const cls = class extends Base {
+    constructor(
+      props: { [x: string | symbol]: unknown } = {},
+      disableValidation: boolean = false
+    ) {
       if (tag !== undefined) {
-        props = outer ? { ...props, ...tag } : { ...tag, ...props }
+        props = { ...props, ...tag }
       }
       if (disableValidation !== true) {
         props = validate(props)
       }
-      super(props, true, false)
+      super(props, true)
+      const classSymbol = Symbol.for(`@effect/schema/${kind}/${(this.constructor as any).identifier}`)
+      Object.defineProperty(this, classSymbol, { value: classSymbol })
     }
 
-    static [TypeId] = InternalSchema.variance
+    static [TypeId] = _schema.variance
+
+    static get identifier() {
+      return identifier || this.name
+    }
+
+    static get classSymbol() {
+      return Symbol.for(`@effect/schema/${kind}/${this.identifier}`)
+    }
+
+    // get [classSymbol]() {
+    //   return classSymbol
+    // }
 
     toString() {
       return Pretty.make(this.constructor as any)(this)
@@ -5007,37 +6238,47 @@ const makeClass = <A, I, R>(
       return pipeArguments(this, arguments)
     }
 
+    static annotations(annotations: Annotations<any>) {
+      return make(this.ast).annotations(annotations)
+    }
+
+    static fields = fields
+
     static get ast() {
-      const toSchema = to(selfSchema)
+      const toSchema = typeSchema(schema)
+      const guard = Parser.is(toSchema)
+      const fallbackInstanceOf = (u: unknown) => Predicate.hasProperty(u, this.classSymbol) && guard(u)
+      const identifier = this.identifier
       const encode = Parser.encodeUnknown(toSchema)
       const pretty = Pretty.make(toSchema)
       const arb = arbitrary.make(toSchema)
       const equivalence = _equivalence.make(toSchema)
-      const declaration: Schema<any, any, never> = declare(
+      const declaration: Schema.Any = declare(
         [],
         () => (input, _, ast) =>
-          input instanceof this ? ParseResult.succeed(input) : ParseResult.fail(ParseResult.type(ast, input)),
-        () => (input, _, ast) =>
+          input instanceof this || fallbackInstanceOf(input)
+            ? ParseResult.succeed(input)
+            : ParseResult.fail(new ParseResult.Type(ast, input)),
+        () => (input, options) =>
           input instanceof this
             ? ParseResult.succeed(input)
-            : ParseResult.mapError(
-              ParseResult.map(
-                encode(input),
-                (props) => new this(props, true)
-              ),
-              () => ParseResult.type(ast, input)
+            : ParseResult.map(
+              encode(input, options),
+              (props) => new this(props, true)
             ),
         {
-          identifier: this.name,
-          title: this.name,
-          description: `an instance of ${this.name}`,
-          pretty: () => (self: any) => `${self.constructor.name}(${pretty(self)})`,
+          identifier,
+          title: identifier,
+          description: `an instance of ${identifier}`,
+          pretty: () => (self: any) => `${identifier}(${pretty(self)})`,
           arbitrary: () => (fc: any) => arb(fc).map((props: any) => new this(props)),
-          equivalence: () => equivalence as any
+          equivalence: () => equivalence as any,
+          [AST.SurrogateAnnotationId]: toSchema.ast,
+          ...annotations
         }
       )
       const transformation = transform(
-        selfSchema,
+        schema,
         declaration,
         (input) => new this(input, true),
         identity
@@ -5045,65 +6286,85 @@ const makeClass = <A, I, R>(
       return transformation.ast
     }
 
-    static struct = selfSchema
-
-    static extend() {
-      return (fields: StructFields) => {
-        const newFields: StructFields = { ...selfFields, ...fields }
-        return makeClass(
-          struct(newFields),
-          newFields,
-          this,
-          "_tag" in fields ? undefined : tag
-        )
+    static struct = schema
+
+    static extend<Extended>(identifier?: string | undefined) {
+      return (newFields: Struct.Fields, annotations?: Annotations<Extended>) => {
+        const extendedFields = extendFields(fields, newFields)
+        return makeClass({
+          kind,
+          identifier,
+          fields: extendedFields,
+          Base: this,
+          tag,
+          annotations
+        })
       }
     }
 
-    static transformOrFail() {
-      return (fields: any, decode: any, encode: any) => {
-        const newFields = { ...selfFields, ...fields }
-        return makeClass(
-          transformOrFail(
-            selfSchema,
-            to(struct(newFields)),
+    static transformOrFail<Transformed>(identifier?: string | undefined) {
+      return (newFields: Struct.Fields, decode: any, encode: any, annotations?: Annotations<Transformed>) => {
+        const transformedFields: Struct.Fields = extendFields(fields, newFields)
+        return makeClass({
+          kind,
+          identifier,
+          fromSchema: transformOrFail(
+            schema,
+            typeSchema(struct(transformedFields)),
             decode,
             encode
           ),
-          newFields,
-          this,
-          "_tag" in fields ? undefined : tag
-        )
+          fields: transformedFields,
+          Base: this,
+          tag,
+          annotations
+        })
       }
     }
 
-    static transformOrFailFrom() {
-      return (fields: StructFields, decode: any, encode: any) => {
-        const newFields: StructFields = { ...selfFields, ...fields }
-        return makeClass(
-          transformOrFail(
-            from(selfSchema),
-            struct(newFields),
+    static transformOrFailFrom<Transformed>(identifier?: string | undefined) {
+      return (newFields: Struct.Fields, decode: any, encode: any, annotations?: Annotations<Transformed>) => {
+        const transformedFields: Struct.Fields = extendFields(fields, newFields)
+        return makeClass({
+          kind,
+          identifier,
+          fromSchema: transformOrFail(
+            encodedSchema(schema),
+            struct(transformedFields),
             decode,
             encode
           ),
-          newFields,
-          this,
-          "_tag" in fields ? undefined : tag
-        )
+          fields: transformedFields,
+          Base: this,
+          tag,
+          annotations
+        })
       }
     }
   }
+
+  return class extends cls {
+    constructor(props: any = {}, disableValidation = false) {
+      const p = { ...props }
+      Object.entries(fields).forEach(([k, v]) => {
+        if (p[k] === undefined && v.ast._tag === "PropertySignatureDeclaration" && v.ast.__defaultConstructor) {
+          p[k] = v.ast.__defaultConstructor()
+        }
+      })
+      super(p, disableValidation)
+    }
+  } as any
 }
 
 /**
  * @category FiberId
  * @since 1.0.0
  */
-export type FiberIdFrom =
+export type FiberIdEncoded =
   | {
     readonly _tag: "Composite"
-    readonly left: FiberIdFrom
-    readonly right: FiberIdFrom
+    readonly left: FiberIdEncoded
+    readonly right: FiberIdEncoded
   }
   | {
     readonly _tag: "None"
@@ -5114,17 +6375,17 @@ export type FiberIdFrom =
     readonly startTimeMillis: number
   }
 
-const FiberIdCompositeFrom = struct({
+const FiberIdCompositeEncoded = struct({
   _tag: literal("Composite"),
-  left: suspend(() => FiberIdFrom),
-  right: suspend(() => FiberIdFrom)
-}).pipe(identifier("FiberIdCompositeFrom"))
+  left: suspend(() => FiberIdEncoded),
+  right: suspend(() => FiberIdEncoded)
+}).annotations({ identifier: "FiberIdCompositeEncoded" })
 
-const FiberIdNoneFrom = struct({
+const FiberIdNoneEncoded = struct({
   _tag: literal("None")
-}).pipe(identifier("FiberIdNoneFrom"))
+}).annotations({ identifier: "FiberIdNoneEncoded" })
 
-const FiberIdRuntimeFrom = struct({
+const FiberIdRuntimeEncoded = struct({
   _tag: literal("Runtime"),
   id: Int.pipe(nonNegative({
     title: "id",
@@ -5134,19 +6395,19 @@ const FiberIdRuntimeFrom = struct({
     title: "startTimeMillis",
     description: "startTimeMillis"
   }))
-}).pipe(identifier("FiberIdRuntimeFrom"))
+}).annotations({ identifier: "FiberIdRuntimeEncoded" })
 
-const FiberIdFrom: Schema<FiberIdFrom> = union(
-  FiberIdCompositeFrom,
-  FiberIdNoneFrom,
-  FiberIdRuntimeFrom
-).pipe(identifier("FiberIdFrom"))
+const FiberIdEncoded: Schema<FiberIdEncoded> = union(
+  FiberIdCompositeEncoded,
+  FiberIdNoneEncoded,
+  FiberIdRuntimeEncoded
+).annotations({ identifier: "FiberIdEncoded" })
 
-const fiberIdFromArbitrary = arbitrary.make(FiberIdFrom)
+const fiberIdFromArbitrary = arbitrary.make(FiberIdEncoded)
 
-const fiberIdArbitrary: Arbitrary<FiberId.FiberId> = (fc) => fiberIdFromArbitrary(fc).map(fiberIdDecode)
+const fiberIdArbitrary: Arbitrary<_fiberId.FiberId> = (fc) => fiberIdFromArbitrary(fc).map(fiberIdDecode)
 
-const fiberIdPretty: Pretty.Pretty<FiberId.FiberId> = (fiberId) => {
+const fiberIdPretty: Pretty.Pretty<_fiberId.FiberId> = (fiberId) => {
   switch (fiberId._tag) {
     case "None":
       return "FiberId.none"
@@ -5157,12 +6418,18 @@ const fiberIdPretty: Pretty.Pretty<FiberId.FiberId> = (fiberId) => {
   }
 }
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface FiberIdFromSelf extends Annotable<FiberIdFromSelf, _fiberId.FiberId> {}
+
 /**
  * @category FiberId constructors
  * @since 1.0.0
  */
-export const FiberIdFromSelf: Schema<FiberId.FiberId> = declare(
-  FiberId.isFiberId,
+export const FiberIdFromSelf: FiberIdFromSelf = declare(
+  _fiberId.isFiberId,
   {
     identifier: "FiberIdFromSelf",
     pretty: () => fiberIdPretty,
@@ -5170,18 +6437,18 @@ export const FiberIdFromSelf: Schema<FiberId.FiberId> = declare(
   }
 )
 
-const fiberIdDecode = (input: FiberIdFrom): FiberId.FiberId => {
+const fiberIdDecode = (input: FiberIdEncoded): _fiberId.FiberId => {
   switch (input._tag) {
     case "Composite":
-      return FiberId.composite(fiberIdDecode(input.left), fiberIdDecode(input.right))
+      return _fiberId.composite(fiberIdDecode(input.left), fiberIdDecode(input.right))
     case "None":
-      return FiberId.none
+      return _fiberId.none
     case "Runtime":
-      return FiberId.runtime(input.id, input.startTimeMillis)
+      return _fiberId.runtime(input.id, input.startTimeMillis)
   }
 }
 
-const fiberIdEncode = (input: FiberId.FiberId): FiberIdFrom => {
+const fiberIdEncode = (input: _fiberId.FiberId): FiberIdEncoded => {
   switch (input._tag) {
     case "None":
       return { _tag: "None" }
@@ -5196,26 +6463,28 @@ const fiberIdEncode = (input: FiberId.FiberId): FiberIdFrom => {
   }
 }
 
-const _FiberId: Schema<FiberId.FiberId, FiberIdFrom> = transform(
-  FiberIdFrom,
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface FiberId extends Annotable<FiberId, _fiberId.FiberId, FiberIdEncoded> {}
+
+/**
+ * @category FiberId transformations
+ * @since 1.0.0
+ */
+export const FiberId: FiberId = transform(
+  FiberIdEncoded,
   FiberIdFromSelf,
   fiberIdDecode,
   fiberIdEncode
-).pipe(identifier("FiberId"))
-
-export {
-  /**
-   * @category FiberId transformations
-   * @since 1.0.0
-   */
-  _FiberId as FiberId
-}
+).annotations({ identifier: "FiberId" })
 
 /**
  * @category Cause utils
  * @since 1.0.0
  */
-export type CauseFrom<E> =
+export type CauseEncoded<E> =
   | {
     readonly _tag: "Die"
     readonly defect: unknown
@@ -5229,67 +6498,67 @@ export type CauseFrom<E> =
   }
   | {
     readonly _tag: "Interrupt"
-    readonly fiberId: FiberIdFrom
+    readonly fiberId: FiberIdEncoded
   }
   | {
     readonly _tag: "Parallel"
-    readonly left: CauseFrom<E>
-    readonly right: CauseFrom<E>
+    readonly left: CauseEncoded<E>
+    readonly right: CauseEncoded<E>
   }
   | {
     readonly _tag: "Sequential"
-    readonly left: CauseFrom<E>
-    readonly right: CauseFrom<E>
+    readonly left: CauseEncoded<E>
+    readonly right: CauseEncoded<E>
   }
 
-const causeDieFrom = <R>(defect: Schema<unknown, unknown, R>) =>
+const causeDieEncoded = <R>(defect: Schema<unknown, unknown, R>) =>
   struct({
     _tag: literal("Die"),
     defect
   })
 
-const CauseEmptyFrom = struct({
+const CauseEmptyEncoded = struct({
   _tag: literal("Empty")
 })
 
-const causeFailFrom = <E, EI, R>(error: Schema<E, EI, R>) =>
+const causeFailEncoded = <E, EI, R>(error: Schema<E, EI, R>) =>
   struct({
     _tag: literal("Fail"),
     error
   })
 
-const CauseInterruptFrom = struct({
+const CauseInterruptEncoded = struct({
   _tag: literal("Interrupt"),
-  fiberId: FiberIdFrom
+  fiberId: FiberIdEncoded
 })
 
-const causeParallelFrom = <E, EI, R>(causeFrom: Schema<CauseFrom<E>, CauseFrom<EI>, R>) =>
+const causeParallelEncoded = <E, EI, R>(causeEncoded: Schema<CauseEncoded<E>, CauseEncoded<EI>, R>) =>
   struct({
     _tag: literal("Parallel"),
-    left: causeFrom,
-    right: causeFrom
+    left: causeEncoded,
+    right: causeEncoded
   })
 
-const causeSequentialFrom = <E, EI, R>(causeFrom: Schema<CauseFrom<E>, CauseFrom<EI>, R>) =>
+const causeSequentialEncoded = <E, EI, R>(causeEncoded: Schema<CauseEncoded<E>, CauseEncoded<EI>, R>) =>
   struct({
     _tag: literal("Sequential"),
-    left: causeFrom,
-    right: causeFrom
+    left: causeEncoded,
+    right: causeEncoded
   })
 
-const causeFrom = <E, EI, R1, R2>(
+const causeEncoded = <E, EI, R1, R2>(
   error: Schema<E, EI, R1>,
   defect: Schema<unknown, unknown, R2>
-): Schema<CauseFrom<E>, CauseFrom<EI>, R1 | R2> => {
+): Schema<CauseEncoded<E>, CauseEncoded<EI>, R1 | R2> => {
   const recur = suspend(() => out)
-  const out: Schema<CauseFrom<E>, CauseFrom<EI>, R1 | R2> = union(
-    causeDieFrom(defect),
-    CauseEmptyFrom,
-    causeFailFrom(error),
-    CauseInterruptFrom,
-    causeParallelFrom(recur),
-    causeSequentialFrom(recur)
-  ).pipe(description(`CauseFrom<${format(error)}>`))
+  const out: Schema<CauseEncoded<E>, CauseEncoded<EI>, R1 | R2> = union(
+    causeDieEncoded(defect),
+    CauseEmptyEncoded,
+    causeFailEncoded(error),
+    CauseInterruptEncoded,
+    causeParallelEncoded(recur),
+    causeSequentialEncoded(recur)
+  ).annotations({ description: `CauseEncoded<${format(error)}>` })
   return out
 }
 
@@ -5297,7 +6566,7 @@ const causeArbitrary = <E>(
   error: Arbitrary<E>,
   defect: Arbitrary<unknown>
 ): Arbitrary<Cause.Cause<E>> => {
-  const arb = arbitrary.make(causeFrom(schemaFromArbitrary(error), schemaFromArbitrary(defect)))
+  const arb = arbitrary.make(causeEncoded(schemaFromArbitrary(error), schemaFromArbitrary(defect)))
   return (fc) => arb(fc).map(causeDecode)
 }
 
@@ -5322,25 +6591,38 @@ const causePretty = <E>(error: Pretty.Pretty<E>): Pretty.Pretty<Cause.Cause<E>>
 }
 
 const causeParse = <R, A>(
-  decodeUnknown: ParseResult.DecodeUnknown<CauseFrom<A>, R>
+  decodeUnknown: ParseResult.DecodeUnknown<CauseEncoded<A>, R>
 ): ParseResult.DeclarationDecodeUnknown<Cause.Cause<A>, R> =>
 (u, options, ast) =>
   Cause.isCause(u) ?
     ParseResult.map(decodeUnknown(causeEncode(u), options), causeDecode)
-    : ParseResult.fail(ParseResult.type(ast, u))
+    : ParseResult.fail(new ParseResult.Type(ast, u))
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface causeFromSelf<E extends Schema.Any, DR> extends
+  Annotable<
+    causeFromSelf<E, DR>,
+    Cause.Cause<Schema.Type<E>>,
+    Cause.Cause<Schema.Encoded<E>>,
+    Schema.Context<E> | DR
+  >
+{}
 
 /**
  * @category Cause transformations
  * @since 1.0.0
  */
-export const causeFromSelf = <A, I, R1, R2 = never>({ defect = unknown, error }: {
-  readonly error: Schema<A, I, R1>
-  readonly defect?: Schema<unknown, unknown, R2> | undefined
-}): Schema<Cause.Cause<A>, Cause.Cause<I>, R1 | R2> => {
+export const causeFromSelf = <E extends Schema.Any, DR = never>({ defect = unknown, error }: {
+  readonly error: E
+  readonly defect?: Schema<unknown, unknown, DR> | undefined
+}): causeFromSelf<E, DR> => {
   return declare(
     [error, defect],
-    (error, defect) => causeParse(ParseResult.decodeUnknown(causeFrom(error, defect))),
-    (error, defect) => causeParse(ParseResult.encodeUnknown(causeFrom(error, defect))),
+    (error, defect) => causeParse(ParseResult.decodeUnknown(causeEncoded(error, defect))),
+    (error, defect) => causeParse(ParseResult.encodeUnknown(causeEncoded(error, defect))),
     {
       description: `Cause<${format(error)}>`,
       pretty: causePretty,
@@ -5349,7 +6631,7 @@ export const causeFromSelf = <A, I, R1, R2 = never>({ defect = unknown, error }:
   )
 }
 
-function causeDecode<E>(cause: CauseFrom<E>): Cause.Cause<E> {
+function causeDecode<E>(cause: CauseEncoded<E>): Cause.Cause<E> {
   switch (cause._tag) {
     case "Die":
       return Cause.die(cause.defect)
@@ -5366,7 +6648,7 @@ function causeDecode<E>(cause: CauseFrom<E>): Cause.Cause<E> {
   }
 }
 
-function causeEncode<E>(cause: Cause.Cause<E>): CauseFrom<E> {
+function causeEncode<E>(cause: Cause.Cause<E>): CauseEncoded<E> {
   switch (cause._tag) {
     case "Empty":
       return { _tag: "Empty" }
@@ -5403,63 +6685,78 @@ const causeDefectPretty: Schema<unknown> = transform(
   }
 )
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface cause<E extends Schema.All, DR> extends
+  Annotable<
+    cause<E, DR>,
+    Cause.Cause<Schema.Type<E>>,
+    CauseEncoded<Schema.Encoded<E>>,
+    Schema.Context<E> | DR
+  >
+{}
+
 /**
  * @category Cause transformations
  * @since 1.0.0
  */
-export const cause = <E, EI, R1, R2 = never>({ defect = causeDefectPretty, error }: {
-  readonly error: Schema<E, EI, R1>
-  readonly defect?: Schema<unknown, unknown, R2> | undefined
-}): Schema<Cause.Cause<E>, CauseFrom<EI>, R1 | R2> =>
-  transform(
-    causeFrom(error, defect),
-    causeFromSelf({ error: to(error), defect: to(defect) }),
+export const cause = <E extends Schema.All, DR = never>({ defect = causeDefectPretty, error }: {
+  readonly error: E
+  readonly defect?: Schema<unknown, unknown, DR> | undefined
+}): cause<E, DR> => {
+  const _error = asSchema(error)
+  return transform(
+    causeEncoded(_error, defect),
+    causeFromSelf({ error: typeSchema(_error), defect: typeSchema(defect) }),
     causeDecode,
     causeEncode
   )
+}
 
 /**
  * @category Exit utils
  * @since 1.0.0
  */
-export type ExitFrom<A, E> =
+export type ExitEncoded<A, E> =
   | {
     readonly _tag: "Failure"
-    readonly cause: CauseFrom<E>
+    readonly cause: CauseEncoded<E>
   }
   | {
     readonly _tag: "Success"
     readonly value: A
   }
 
-const exitFailureFrom = <E, EI, R1, R2>(
-  error: Schema<E, EI, R1>,
-  defect: Schema<unknown, unknown, R2>
+const exitFailureEncoded = <E, EI, ER, DR>(
+  error: Schema<E, EI, ER>,
+  defect: Schema<unknown, unknown, DR>
 ) =>
   struct({
     _tag: literal("Failure"),
-    cause: causeFrom(error, defect)
+    cause: causeEncoded(error, defect)
   })
 
-const exitSuccessFrom = <A, AI, R>(
-  value: Schema<A, AI, R>
+const exitSuccessEncoded = <A, I, R>(
+  value: Schema<A, I, R>
 ) =>
   struct({
     _tag: literal("Success"),
     value
   })
 
-const exitFrom = <E, EI, R1, A, AI, R2, R3>(
-  error: Schema<E, EI, R1>,
-  value: Schema<A, AI, R2>,
-  defect: Schema<unknown, unknown, R3>
-): Schema<ExitFrom<A, E>, ExitFrom<AI, EI>, R1 | R2 | R3> =>
+const exitEncoded = <A, I, R, E, EI, ER, DR>(
+  value: Schema<A, I, R>,
+  error: Schema<E, EI, ER>,
+  defect: Schema<unknown, unknown, DR>
+): Schema<ExitEncoded<A, E>, ExitEncoded<I, EI>, ER | R | DR> =>
   union(
-    exitFailureFrom(error, defect),
-    exitSuccessFrom(value)
+    exitFailureEncoded(error, defect),
+    exitSuccessEncoded(value)
   )
 
-const exitDecode = <A, E>(input: ExitFrom<A, E>): Exit.Exit<A, E> => {
+const exitDecode = <A, E>(input: ExitEncoded<A, E>): Exit.Exit<A, E> => {
   switch (input._tag) {
     case "Failure":
       return Exit.failCause(causeDecode(input.cause))
@@ -5468,54 +6765,69 @@ const exitDecode = <A, E>(input: ExitFrom<A, E>): Exit.Exit<A, E> => {
   }
 }
 
-const exitArbitrary = <E, A>(
-  error: Arbitrary<E>,
+const exitArbitrary = <A, E>(
   value: Arbitrary<A>,
+  error: Arbitrary<E>,
   defect: Arbitrary<unknown>
 ): Arbitrary<Exit.Exit<A, E>> => {
   const arb = arbitrary.make(
-    exitFrom(schemaFromArbitrary(error), schemaFromArbitrary(value), schemaFromArbitrary(defect))
+    exitEncoded(schemaFromArbitrary(value), schemaFromArbitrary(error), schemaFromArbitrary(defect))
   )
   return (fc) => arb(fc).map(exitDecode)
 }
 
-const exitPretty = <E, A>(error: Pretty.Pretty<E>, value: Pretty.Pretty<A>): Pretty.Pretty<Exit.Exit<A, E>> => (exit) =>
+const exitPretty = <A, E>(value: Pretty.Pretty<A>, error: Pretty.Pretty<E>): Pretty.Pretty<Exit.Exit<A, E>> => (exit) =>
   exit._tag === "Failure"
     ? `Exit.failCause(${causePretty(error)(exit.cause)})`
     : `Exit.succeed(${value(exit.value)})`
 
-const exitParse = <RE, E, RA, A>(
-  decodeUnknownCause: ParseResult.DecodeUnknown<Cause.Cause<E>, RE>,
-  decodeUnknownValue: ParseResult.DecodeUnknown<A, RA>
-): ParseResult.DeclarationDecodeUnknown<Exit.Exit<A, E>, RE | RA> =>
+const exitParse = <A, R, E, ER>(
+  decodeUnknownValue: ParseResult.DecodeUnknown<A, R>,
+  decodeUnknownCause: ParseResult.DecodeUnknown<Cause.Cause<E>, ER>
+): ParseResult.DeclarationDecodeUnknown<Exit.Exit<A, E>, ER | R> =>
 (u, options, ast) =>
   Exit.isExit(u) ?
     Exit.match(u, {
       onFailure: (cause) => ParseResult.map(decodeUnknownCause(cause, options), Exit.failCause),
       onSuccess: (value) => ParseResult.map(decodeUnknownValue(value, options), Exit.succeed)
     })
-    : ParseResult.fail(ParseResult.type(ast, u))
+    : ParseResult.fail(new ParseResult.Type(ast, u))
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface exitFromSelf<A extends Schema.Any, E extends Schema.Any, DR> extends
+  Annotable<
+    exitFromSelf<A, E, DR>,
+    Exit.Exit<Schema.Type<A>, Schema.Type<E>>,
+    Exit.Exit<Schema.Encoded<A>, Schema.Encoded<E>>,
+    Schema.Context<A> | Schema.Context<E> | DR
+  >
+{}
 
 /**
  * @category Exit transformations
  * @since 1.0.0
  */
-export const exitFromSelf = <E, IE, RE, A, IA, RA, RD = never>({ defect = unknown, failure, success }: {
-  readonly failure: Schema<E, IE, RE>
-  readonly success: Schema<A, IA, RA>
-  readonly defect?: Schema<unknown, unknown, RD> | undefined
-}): Schema<Exit.Exit<A, E>, Exit.Exit<IA, IE>, RE | RA | RD> =>
+export const exitFromSelf = <A extends Schema.Any, E extends Schema.Any, DR = never>(
+  { defect = unknown, failure, success }: {
+    readonly failure: E
+    readonly success: A
+    readonly defect?: Schema<unknown, unknown, DR> | undefined
+  }
+): exitFromSelf<A, E, DR> =>
   declare(
-    [failure, success, defect],
-    (failure, success, defect) =>
+    [success, failure, defect],
+    (success, failure, defect) =>
       exitParse(
-        ParseResult.decodeUnknown(causeFromSelf({ error: failure, defect })),
-        ParseResult.decodeUnknown(success)
+        ParseResult.decodeUnknown(success),
+        ParseResult.decodeUnknown(causeFromSelf({ error: failure, defect }))
       ),
-    (failure, success, defect) =>
+    (success, failure, defect) =>
       exitParse(
-        ParseResult.encodeUnknown(causeFromSelf({ error: failure, defect })),
-        ParseResult.encodeUnknown(success)
+        ParseResult.encodeUnknown(success),
+        ParseResult.encodeUnknown(causeFromSelf({ error: failure, defect }))
       ),
     {
       description: `Exit<${format(failure)}, ${format(success)}>`,
@@ -5524,24 +6836,42 @@ export const exitFromSelf = <E, IE, RE, A, IA, RA, RD = never>({ defect = unknow
     }
   )
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface exit<A extends Schema.All, E extends Schema.All, DR> extends
+  Annotable<
+    exit<A, E, DR>,
+    Exit.Exit<Schema.Type<A>, Schema.Type<E>>,
+    ExitEncoded<Schema.Encoded<A>, Schema.Encoded<E>>,
+    Schema.Context<A> | Schema.Context<E> | DR
+  >
+{}
+
 /**
  * @category Exit transformations
  * @since 1.0.0
  */
-export const exit = <E, IE, R1, A, IA, R2, R3 = never>({ defect = causeDefectPretty, failure, success }: {
-  readonly failure: Schema<E, IE, R1>
-  readonly success: Schema<A, IA, R2>
-  readonly defect?: Schema<unknown, unknown, R3> | undefined
-}): Schema<Exit.Exit<A, E>, ExitFrom<IA, IE>, R1 | R2 | R3> =>
-  transform(
-    exitFrom(failure, success, defect),
-    exitFromSelf({ failure: to(failure), success: to(success), defect: to(defect) }),
+export const exit = <A extends Schema.All, E extends Schema.All, DR = never>(
+  { defect = causeDefectPretty, failure, success }: {
+    readonly failure: E
+    readonly success: A
+    readonly defect?: Schema<unknown, unknown, DR> | undefined
+  }
+): exit<A, E, DR> => {
+  const _success = asSchema(success)
+  const _failure = asSchema(failure)
+  return transform(
+    exitEncoded(_success, _failure, defect),
+    exitFromSelf({ failure: typeSchema(_failure), success: typeSchema(_success), defect: typeSchema(defect) }),
     exitDecode,
     (exit) =>
       exit._tag === "Failure"
         ? { _tag: "Failure", cause: exit.cause } as const
         : { _tag: "Success", value: exit.value } as const
   )
+}
 
 const hashSetArbitrary = <A>(item: Arbitrary<A>): Arbitrary<HashSet.HashSet<A>> => (fc) =>
   fc.array(item(fc)).map((as) => HashSet.fromIterable(as))
@@ -5565,21 +6895,34 @@ const hashSetParse = <R, A>(
       decodeUnknown(Array.from(u), options),
       (as): HashSet.HashSet<A> => HashSet.fromIterable(as)
     )
-    : ParseResult.fail(ParseResult.type(ast, u))
+    : ParseResult.fail(new ParseResult.Type(ast, u))
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface hashSetFromSelf<Value extends Schema.Any> extends
+  Annotable<
+    hashSetFromSelf<Value>,
+    HashSet.HashSet<Schema.Type<Value>>,
+    HashSet.HashSet<Schema.Encoded<Value>>,
+    Schema.Context<Value>
+  >
+{}
 
 /**
  * @category HashSet transformations
  * @since 1.0.0
  */
-export const hashSetFromSelf = <A, I, R>(
-  item: Schema<A, I, R>
-): Schema<HashSet.HashSet<A>, HashSet.HashSet<I>, R> => {
+export const hashSetFromSelf = <Value extends Schema.Any>(
+  value: Value
+): hashSetFromSelf<Value> => {
   return declare(
-    [item],
+    [value],
     (item) => hashSetParse(ParseResult.decodeUnknown(array(item))),
     (item) => hashSetParse(ParseResult.encodeUnknown(array(item))),
     {
-      description: `HashSet<${format(item)}>`,
+      description: `HashSet<${format(value)}>`,
       pretty: hashSetPretty,
       arbitrary: hashSetArbitrary,
       equivalence: hashSetEquivalence
@@ -5587,17 +6930,32 @@ export const hashSetFromSelf = <A, I, R>(
   )
 }
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface hashSet<Value extends Schema.Any> extends
+  Annotable<
+    hashSet<Value>,
+    HashSet.HashSet<Schema.Type<Value>>,
+    ReadonlyArray<Schema.Encoded<Value>>,
+    Schema.Context<Value>
+  >
+{}
+
 /**
  * @category HashSet transformations
  * @since 1.0.0
  */
-export const hashSet = <A, I, R>(item: Schema<A, I, R>): Schema<HashSet.HashSet<A>, ReadonlyArray<I>, R> =>
-  transform(
-    array(item),
-    hashSetFromSelf(to(item)),
+export const hashSet = <Value extends Schema.Any>(value: Value): hashSet<Value> => {
+  const _value = asSchema(value)
+  return transform(
+    array(_value),
+    hashSetFromSelf(typeSchema(_value)),
     (as) => HashSet.fromIterable(as),
     (set) => Array.from(set)
   )
+}
 
 const hashMapArbitrary = <K, V>(
   key: Arbitrary<K>,
@@ -5632,16 +6990,29 @@ const hashMapParse = <R, K, V>(
 (u, options, ast) =>
   HashMap.isHashMap(u) ?
     ParseResult.map(decodeUnknown(Array.from(u), options), (as): HashMap.HashMap<K, V> => HashMap.fromIterable(as))
-    : ParseResult.fail(ParseResult.type(ast, u))
+    : ParseResult.fail(new ParseResult.Type(ast, u))
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface hashMapFromSelf<K extends Schema.Any, V extends Schema.Any> extends
+  Annotable<
+    hashMapFromSelf<K, V>,
+    HashMap.HashMap<Schema.Type<K>, Schema.Type<V>>,
+    HashMap.HashMap<Schema.Encoded<K>, Schema.Encoded<V>>,
+    Schema.Context<K> | Schema.Context<V>
+  >
+{}
 
 /**
  * @category HashMap transformations
  * @since 1.0.0
  */
-export const hashMapFromSelf = <K, IK, RK, V, IV, RV>({ key, value }: {
-  readonly key: Schema<K, IK, RK>
-  readonly value: Schema<V, IV, RV>
-}): Schema<HashMap.HashMap<K, V>, HashMap.HashMap<IK, IV>, RK | RV> => {
+export const hashMapFromSelf = <K extends Schema.Any, V extends Schema.Any>({ key, value }: {
+  readonly key: K
+  readonly value: V
+}): hashMapFromSelf<K, V> => {
   return declare(
     [key, value],
     (key, value) => hashMapParse(ParseResult.decodeUnknown(array(tuple(key, value)))),
@@ -5655,20 +7026,36 @@ export const hashMapFromSelf = <K, IK, RK, V, IV, RV>({ key, value }: {
   )
 }
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface hashMap<K extends Schema.Any, V extends Schema.Any> extends
+  Annotable<
+    hashMap<K, V>,
+    HashMap.HashMap<Schema.Type<K>, Schema.Type<V>>,
+    ReadonlyArray<readonly [Schema.Encoded<K>, Schema.Encoded<V>]>,
+    Schema.Context<K> | Schema.Context<V>
+  >
+{}
+
 /**
  * @category HashMap transformations
  * @since 1.0.0
  */
-export const hashMap = <K, IK, RK, V, IV, RV>({ key, value }: {
-  readonly key: Schema<K, IK, RK>
-  readonly value: Schema<V, IV, RV>
-}): Schema<HashMap.HashMap<K, V>, ReadonlyArray<readonly [IK, IV]>, RK | RV> =>
-  transform(
-    array(tuple(key, value)),
-    hashMapFromSelf({ key: to(key), value: to(value) }),
+export const hashMap = <K extends Schema.Any, V extends Schema.Any>({ key, value }: {
+  readonly key: K
+  readonly value: V
+}): hashMap<K, V> => {
+  const _key = asSchema(key)
+  const _value = asSchema(value)
+  return transform(
+    array(tuple(_key, _value)),
+    hashMapFromSelf({ key: typeSchema(_key), value: typeSchema(_value) }),
     (as) => HashMap.fromIterable(as),
     (map) => Array.from(map)
   )
+}
 
 const listArbitrary = <A>(item: Arbitrary<A>): Arbitrary<List.List<A>> => (fc) =>
   fc.array(item(fc)).map((as) => List.fromIterable(as))
@@ -5692,21 +7079,34 @@ const listParse = <R, A>(
       decodeUnknown(Array.from(u), options),
       (as): List.List<A> => List.fromIterable(as)
     )
-    : ParseResult.fail(ParseResult.type(ast, u))
+    : ParseResult.fail(new ParseResult.Type(ast, u))
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface listFromSelf<Value extends Schema.Any> extends
+  Annotable<
+    listFromSelf<Value>,
+    List.List<Schema.Type<Value>>,
+    List.List<Schema.Encoded<Value>>,
+    Schema.Context<Value>
+  >
+{}
 
 /**
  * @category List transformations
  * @since 1.0.0
  */
-export const listFromSelf = <A, I, R>(
-  item: Schema<A, I, R>
-): Schema<List.List<A>, List.List<I>, R> => {
+export const listFromSelf = <Value extends Schema.Any>(
+  value: Value
+): listFromSelf<Value> => {
   return declare(
-    [item],
+    [value],
     (item) => listParse(ParseResult.decodeUnknown(array(item))),
     (item) => listParse(ParseResult.encodeUnknown(array(item))),
     {
-      description: `List<${format(item)}>`,
+      description: `List<${format(value)}>`,
       pretty: listPretty,
       arbitrary: listArbitrary,
       equivalence: listEquivalence
@@ -5714,19 +7114,116 @@ export const listFromSelf = <A, I, R>(
   )
 }
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface list<Value extends Schema.Any> extends
+  Annotable<
+    list<Value>,
+    List.List<Schema.Type<Value>>,
+    ReadonlyArray<Schema.Encoded<Value>>,
+    Schema.Context<Value>
+  >
+{}
+
 /**
  * @category List transformations
  * @since 1.0.0
  */
-export const list = <A, I, R>(item: Schema<A, I, R>): Schema<List.List<A>, ReadonlyArray<I>, R> =>
-  transform(
-    array(item),
-    listFromSelf(to(item)),
+export const list = <Value extends Schema.Any>(value: Value): list<Value> => {
+  const _value = asSchema(value)
+  return transform(
+    array(_value),
+    listFromSelf(typeSchema(_value)),
     (as) => List.fromIterable(as),
     (set) => Array.from(set)
   )
+}
+
+const sortedSetArbitrary = <A>(item: Arbitrary<A>, ord: Order.Order<A>): Arbitrary<SortedSet.SortedSet<A>> => (fc) =>
+  fc.array(item(fc)).map((as) => SortedSet.fromIterable(as, ord))
+
+const sortedSetPretty = <A>(item: Pretty.Pretty<A>): Pretty.Pretty<SortedSet.SortedSet<A>> => (set) =>
+  `new SortedSet([${Array.from(SortedSet.values(set)).map((a) => item(a)).join(", ")}])`
+
+const sortedSetParse = <R, A>(
+  decodeUnknown: ParseResult.DecodeUnknown<ReadonlyArray<A>, R>,
+  ord: Order.Order<A>
+): ParseResult.DeclarationDecodeUnknown<SortedSet.SortedSet<A>, R> =>
+(u, options, ast) =>
+  SortedSet.isSortedSet(u) ?
+    ParseResult.map(decodeUnknown(Array.from(SortedSet.values(u)), options), (as): SortedSet.SortedSet<A> =>
+      SortedSet.fromIterable(as, ord))
+    : ParseResult.fail(new ParseResult.Type(ast, u))
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface sortedSetFromSelf<Value extends Schema.Any> extends
+  Annotable<
+    sortedSetFromSelf<Value>,
+    SortedSet.SortedSet<Schema.Type<Value>>,
+    SortedSet.SortedSet<Schema.Encoded<Value>>,
+    Schema.Context<Value>
+  >
+{}
+
+/**
+ * @category SortedSet transformations
+ * @since 1.0.0
+ */
+export const sortedSetFromSelf = <Value extends Schema.Any>(
+  value: Value,
+  ordA: Order.Order<Schema.Type<Value>>,
+  ordI: Order.Order<Schema.Encoded<Value>>
+): sortedSetFromSelf<Value> => {
+  return declare(
+    [value],
+    (item) => sortedSetParse(ParseResult.decodeUnknown(array(item)), ordA),
+    (item) => sortedSetParse(ParseResult.encodeUnknown(array(item)), ordI),
+    {
+      description: `SortedSet<${format(value)}>`,
+      pretty: sortedSetPretty,
+      arbitrary: (arb) => sortedSetArbitrary(arb, ordA),
+      equivalence: () => SortedSet.getEquivalence<Schema.Type<Value>>()
+    }
+  )
+}
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface sortedSet<Value extends Schema.Any> extends
+  Annotable<
+    sortedSet<Value>,
+    SortedSet.SortedSet<Schema.Type<Value>>,
+    ReadonlyArray<Schema.Encoded<Value>>,
+    Schema.Context<Value>
+  >
+{}
+
+/**
+ * @category SortedSet transformations
+ * @since 1.0.0
+ */
+export const sortedSet = <Value extends Schema.Any>(
+  value: Value,
+  ordA: Order.Order<Schema.Type<Value>>
+): sortedSet<Value> => {
+  const _value = asSchema(value)
+  const to = typeSchema(_value)
+  return transform(
+    array(_value),
+    sortedSetFromSelf<typeof to>(to, ordA, ordA),
+    (as) => SortedSet.fromIterable(as, ordA),
+    (set) => Array.from(SortedSet.values(set))
+  )
+}
 
 const schemaFromArbitrary = <A>(value: Arbitrary<A>): Schema<A> =>
-  suspend<A, A, never>(() => any).pipe(annotations({
-    [hooks.ArbitraryHookId]: () => value
-  }))
+  suspend<A, A, never>(() => any).annotations({
+    [_hooks.ArbitraryHookId]: () => value
+  })
diff --git a/src/Serializable.ts b/src/Serializable.ts
index cf85df644559ad22feeee5058ce08c576f3d7858..805d0b0228cd5da7ad06f80a2047f0daa6d4861b 100644
--- a/src/Serializable.ts
+++ b/src/Serializable.ts
@@ -7,7 +7,7 @@ import type * as Effect from "effect/Effect"
 import type * as Exit from "effect/Exit"
 import { dual } from "effect/Function"
 import { globalValue } from "effect/GlobalValue"
-import * as Internal from "./internal/serializable.js"
+import * as _serializable from "./internal/serializable.js"
 import type * as ParseResult from "./ParseResult.js"
 import * as Schema from "./Schema.js"
 
@@ -15,7 +15,7 @@ import * as Schema from "./Schema.js"
  * @since 1.0.0
  * @category symbol
  */
-export const symbol: unique symbol = Internal.symbol as any
+export const symbol: unique symbol = _serializable.symbol as any
 
 /**
  * @since 1.0.0
@@ -46,16 +46,16 @@ export const selfSchema = <A, I, R>(self: Serializable<A, I, R>): Schema.Schema<
  * @since 1.0.0
  * @category symbol
  */
-export const symbolResult: unique symbol = Internal.symbolResult as any
+export const symbolResult: unique symbol = _serializable.symbolResult as any
 
 /**
  * @since 1.0.0
  * @category model
  */
-export interface WithResult<R, IE, E, IA, A> {
+export interface WithResult<A, I, E, EI, R> {
   readonly [symbolResult]: {
-    readonly Failure: Schema.Schema<E, IE, R>
-    readonly Success: Schema.Schema<A, IA, R>
+    readonly Success: Schema.Schema<A, I, R>
+    readonly Failure: Schema.Schema<E, EI, R>
   }
 }
 
@@ -67,24 +67,24 @@ export declare namespace WithResult {
   /**
    * @since 1.0.0
    */
-  export type Context<T> = T extends WithResult<infer R, infer _IE, infer _E, infer _IA, infer _A> ? R : never
+  export type Context<T> = T extends WithResult<infer _A, infer _I, infer _E, infer _EI, infer R> ? R : never
 }
 
 /**
  * @since 1.0.0
  * @category accessor
  */
-export const failureSchema = <R, IE, E, IA, A>(
-  self: WithResult<R, IE, E, IA, A>
-): Schema.Schema<E, IE, R> => self[symbolResult].Failure
+export const failureSchema = <A, I, E, EI, R>(
+  self: WithResult<A, I, E, EI, R>
+): Schema.Schema<E, EI, R> => self[symbolResult].Failure
 
 /**
  * @since 1.0.0
  * @category accessor
  */
-export const successSchema = <R, IE, E, IA, A>(
-  self: WithResult<R, IE, E, IA, A>
-): Schema.Schema<A, IA, R> => self[symbolResult].Success
+export const successSchema = <A, I, E, EI, R>(
+  self: WithResult<A, I, E, EI, R>
+): Schema.Schema<A, I, R> => self[symbolResult].Success
 
 const exitSchemaCache = globalValue(
   "@effect/schema/Serializable/exitSchemaCache",
@@ -95,9 +95,9 @@ const exitSchemaCache = globalValue(
  * @since 1.0.0
  * @category accessor
  */
-export const exitSchema = <R, IE, E, IA, A>(
-  self: WithResult<R, IE, E, IA, A>
-): Schema.Schema<Exit.Exit<A, E>, Schema.ExitFrom<IA, IE>, R> => {
+export const exitSchema = <A, I, E, EI, R>(
+  self: WithResult<A, I, E, EI, R>
+): Schema.Schema<Exit.Exit<A, E>, Schema.ExitEncoded<I, EI>, R> => {
   const proto = Object.getPrototypeOf(self)
   if (!(symbolResult in proto)) {
     return Schema.exit({ failure: failureSchema(self), success: successSchema(self) })
@@ -114,8 +114,8 @@ export const exitSchema = <R, IE, E, IA, A>(
  * @since 1.0.0
  * @category model
  */
-export interface SerializableWithResult<R, IS, S, RR, IE, E, IA, A>
-  extends Serializable<S, IS, R>, WithResult<RR, IE, E, IA, A>
+export interface SerializableWithResult<S, SI, SR, A, AI, E, EI, RR>
+  extends Serializable<S, SI, SR>, WithResult<A, AI, E, EI, RR>
 {}
 
 /**
@@ -127,7 +127,7 @@ export declare namespace SerializableWithResult {
    * @since 1.0.0
    */
   export type Context<T> = T extends
-    SerializableWithResult<infer R, infer _IS, infer _S, infer RR, infer _IE, infer _E, infer _IA, infer _A> ? R | RR
+    SerializableWithResult<infer _S, infer _SI, infer SR, infer _A, infer _AI, infer _E, infer _EI, infer RR> ? SR | RR
     : never
 }
 
@@ -165,19 +165,19 @@ export const deserialize: {
 export const serializeFailure: {
   <E>(
     value: E
-  ): <R, IE, IA, A>(self: WithResult<R, IE, E, IA, A>) => Effect.Effect<IE, ParseResult.ParseError, R>
-  <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>,
+  ): <A, I, EI, R>(self: WithResult<A, I, E, EI, R>) => Effect.Effect<EI, ParseResult.ParseError, R>
+  <A, I, E, EI, R>(
+    self: WithResult<A, I, E, EI, R>,
     value: E
-  ): Effect.Effect<IE, ParseResult.ParseError, R>
+  ): Effect.Effect<EI, ParseResult.ParseError, R>
 } = dual<
-  <E>(value: E) => <R, IE, IA, A>(
-    self: WithResult<R, IE, E, IA, A>
-  ) => Effect.Effect<IE, ParseResult.ParseError, R>,
-  <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>,
+  <E>(value: E) => <A, I, EI, R>(
+    self: WithResult<A, I, E, EI, R>
+  ) => Effect.Effect<EI, ParseResult.ParseError, R>,
+  <A, I, E, EI, R>(
+    self: WithResult<A, I, E, EI, R>,
     value: E
-  ) => Effect.Effect<IE, ParseResult.ParseError, R>
+  ) => Effect.Effect<EI, ParseResult.ParseError, R>
 >(2, (self, value) => Schema.encode(self[symbolResult].Failure)(value))
 
 /**
@@ -185,19 +185,19 @@ export const serializeFailure: {
  * @category decoding
  */
 export const deserializeFailure: {
-  (value: unknown): <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>
+  (value: unknown): <A, I, E, EI, R>(
+    self: WithResult<A, I, E, EI, R>
   ) => Effect.Effect<E, ParseResult.ParseError, R>
-  <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>,
+  <A, I, E, EI, R>(
+    self: WithResult<A, I, E, EI, R>,
     value: unknown
   ): Effect.Effect<E, ParseResult.ParseError, R>
 } = dual<
-  (value: unknown) => <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>
+  (value: unknown) => <A, I, E, EI, R>(
+    self: WithResult<A, I, E, EI, R>
   ) => Effect.Effect<E, ParseResult.ParseError, R>,
-  <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>,
+  <A, I, E, EI, R>(
+    self: WithResult<A, I, E, EI, R>,
     value: unknown
   ) => Effect.Effect<E, ParseResult.ParseError, R>
 >(2, (self, value) => Schema.decodeUnknown(self[symbolResult].Failure)(value))
@@ -209,19 +209,19 @@ export const deserializeFailure: {
 export const serializeSuccess: {
   <A>(
     value: A
-  ): <R, IE, E, IA>(self: WithResult<R, IE, E, IA, A>) => Effect.Effect<IA, ParseResult.ParseError, R>
-  <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>,
+  ): <I, E, EI, R>(self: WithResult<A, I, E, EI, R>) => Effect.Effect<I, ParseResult.ParseError, R>
+  <A, I, E, EI, R>(
+    self: WithResult<A, I, E, EI, R>,
     value: A
-  ): Effect.Effect<IA, ParseResult.ParseError, R>
+  ): Effect.Effect<I, ParseResult.ParseError, R>
 } = dual<
-  <A>(value: A) => <R, IE, E, IA>(
-    self: WithResult<R, IE, E, IA, A>
-  ) => Effect.Effect<IA, ParseResult.ParseError, R>,
-  <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>,
+  <A>(value: A) => <I, E, EI, R>(
+    self: WithResult<A, I, E, EI, R>
+  ) => Effect.Effect<I, ParseResult.ParseError, R>,
+  <A, I, E, EI, R>(
+    self: WithResult<A, I, E, EI, R>,
     value: A
-  ) => Effect.Effect<IA, ParseResult.ParseError, R>
+  ) => Effect.Effect<I, ParseResult.ParseError, R>
 >(2, (self, value) => Schema.encode(self[symbolResult].Success)(value))
 
 /**
@@ -231,19 +231,19 @@ export const serializeSuccess: {
 export const deserializeSuccess: {
   (
     value: unknown
-  ): <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>
+  ): <A, I, E, EI, R>(
+    self: WithResult<A, I, E, EI, R>
   ) => Effect.Effect<A, ParseResult.ParseError, R>
-  <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>,
+  <A, I, E, EI, R>(
+    self: WithResult<A, I, E, EI, R>,
     value: unknown
   ): Effect.Effect<A, ParseResult.ParseError, R>
 } = dual<
-  (value: unknown) => <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>
+  (value: unknown) => <A, I, E, EI, R>(
+    self: WithResult<A, I, E, EI, R>
   ) => Effect.Effect<A, ParseResult.ParseError, R>,
-  <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>,
+  <A, I, E, EI, R>(
+    self: WithResult<A, I, E, EI, R>,
     value: unknown
   ) => Effect.Effect<A, ParseResult.ParseError, R>
 >(2, (self, value) => Schema.decodeUnknown(self[symbolResult].Success)(value))
@@ -253,43 +253,33 @@ export const deserializeSuccess: {
  * @category encoding
  */
 export const serializeExit: {
-  <E, A>(
+  <A, E>(
     value: Exit.Exit<A, E>
-  ): <R, IE, IA>(
-    self: WithResult<R, IE, E, IA, A>
-  ) => Effect.Effect<Schema.ExitFrom<IA, IE>, ParseResult.ParseError, R>
-  <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>,
+  ): <I, EI, R>(
+    self: WithResult<A, I, E, EI, R>
+  ) => Effect.Effect<Schema.ExitEncoded<I, EI>, ParseResult.ParseError, R>
+  <A, I, E, EI, R>(
+    self: WithResult<A, I, E, EI, R>,
     value: Exit.Exit<A, E>
-  ): Effect.Effect<Schema.ExitFrom<IA, IE>, ParseResult.ParseError, R>
-} = dual<
-  <E, A>(value: Exit.Exit<A, E>) => <R, IE, IA>(
-    self: WithResult<R, IE, E, IA, A>
-  ) => Effect.Effect<Schema.ExitFrom<IA, IE>, ParseResult.ParseError, R>,
-  <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>,
-    value: Exit.Exit<A, E>
-  ) => Effect.Effect<Schema.ExitFrom<IA, IE>, ParseResult.ParseError, R>
->(2, (self, value) => Schema.encode(exitSchema(self))(value))
+  ): Effect.Effect<Schema.ExitEncoded<I, EI>, ParseResult.ParseError, R>
+} = dual(2, <A, I, E, EI, R>(
+  self: WithResult<A, I, E, EI, R>,
+  value: Exit.Exit<A, E>
+): Effect.Effect<Schema.ExitEncoded<I, EI>, ParseResult.ParseError, R> => Schema.encode(exitSchema(self))(value))
 
 /**
  * @since 1.0.0
  * @category decoding
  */
 export const deserializeExit: {
-  (value: unknown): <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>
+  (value: unknown): <A, I, E, EI, R>(
+    self: WithResult<A, I, E, EI, R>
   ) => Effect.Effect<Exit.Exit<A, E>, ParseResult.ParseError, R>
-  <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>,
+  <A, I, E, EI, R>(
+    self: WithResult<A, I, E, EI, R>,
     value: unknown
   ): Effect.Effect<Exit.Exit<A, E>, ParseResult.ParseError, R>
-} = dual<
-  (value: unknown) => <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>
-  ) => Effect.Effect<Exit.Exit<A, E>, ParseResult.ParseError, R>,
-  <R, IE, E, IA, A>(
-    self: WithResult<R, IE, E, IA, A>,
-    value: unknown
-  ) => Effect.Effect<Exit.Exit<A, E>, ParseResult.ParseError, R>
->(2, (self, value) => Schema.decodeUnknown(exitSchema(self))(value))
+} = dual(2, <A, I, E, EI, R>(
+  self: WithResult<A, I, E, EI, R>,
+  value: unknown
+): Effect.Effect<Exit.Exit<A, E>, ParseResult.ParseError, R> => Schema.decodeUnknown(exitSchema(self))(value))
diff --git a/src/TreeFormatter.ts b/src/TreeFormatter.ts
index 08c1fe6aaf346ea23b2965dc004e9619b626a1e2..6a3a0ef7c090d417635f84213ed39a77b1916f7f 100644
--- a/src/TreeFormatter.ts
+++ b/src/TreeFormatter.ts
@@ -2,9 +2,12 @@
  * @since 1.0.0
  */
 
+import type * as Cause from "effect/Cause"
+import * as Effect from "effect/Effect"
 import * as Option from "effect/Option"
-import type { NonEmptyReadonlyArray } from "effect/ReadonlyArray"
+import * as Predicate from "effect/Predicate"
 import * as AST from "./AST.js"
+import * as _util from "./internal/util.js"
 import type * as ParseResult from "./ParseResult.js"
 
 interface Forest<A> extends ReadonlyArray<Tree<A>> {}
@@ -23,16 +26,21 @@ const make = <A>(value: A, forest: Forest<A> = []): Tree<A> => ({
  * @category formatting
  * @since 1.0.0
  */
-export const formatIssues = (issues: NonEmptyReadonlyArray<ParseResult.ParseIssue>): string => {
-  const forest = issues.map(go)
-  return drawTree(forest.length === 1 ? forest[0] : make(`error(s) found`, forest))
-}
+export const formatIssueEffect = (issue: ParseResult.ParseIssue): Effect.Effect<string> =>
+  Effect.map(go(issue), (tree) => drawTree(tree))
+
+/**
+ * @category formatting
+ * @since 1.0.0
+ */
+export const formatIssue = (issue: ParseResult.ParseIssue): string => Effect.runSync(formatIssueEffect(issue))
 
 /**
  * @category formatting
  * @since 1.0.0
  */
-export const formatIssue = (issue: ParseResult.ParseIssue): string => formatIssues([issue])
+export const formatErrorEffect = (error: ParseResult.ParseError): Effect.Effect<string> =>
+  formatIssueEffect(error.error)
 
 /**
  * @category formatting
@@ -55,14 +63,14 @@ const draw = (indentation: string, forest: Forest<string>): string => {
   return r
 }
 
-const formatTransformationKind = (kind: ParseResult.Transform["kind"]): string => {
+const formatTransformationKind = (kind: ParseResult.Transformation["kind"]): string => {
   switch (kind) {
-    case "From":
-      return "From side transformation failure"
+    case "Encoded":
+      return "Encoded side transformation failure"
     case "Transformation":
       return "Transformation process failure"
-    case "To":
-      return "To side transformation failure"
+    case "Type":
+      return "Type side transformation failure"
   }
 }
 
@@ -75,116 +83,118 @@ const formatRefinementKind = (kind: ParseResult.Refinement["kind"]): string => {
   }
 }
 
+const getPrevMessage = (
+  issue: ParseResult.ParseIssue
+): Effect.Effect<string, Cause.NoSuchElementException> => {
+  switch (issue._tag) {
+    case "Refinement": {
+      if (issue.kind === "From") {
+        return getMessage(issue.error)
+      }
+      break
+    }
+    case "Transformation":
+      return getMessage(issue.error)
+  }
+  return Option.none()
+}
+
+const getCurrentMessage: (
+  issue: ParseResult.ParseIssue
+) => Effect.Effect<string, Cause.NoSuchElementException> = (issue: ParseResult.ParseIssue) =>
+  AST.getMessageAnnotation(issue.ast).pipe(Effect.flatMap((annotation) => {
+    const out = annotation(issue)
+    return Predicate.isString(out) ? Effect.succeed(out) : out
+  }))
+
 /** @internal */
-export const getMessage = (issue: ParseResult.ParseIssue): Option.Option<string> =>
-  Option.flatMap(AST.getMessageAnnotation(issue.ast), (annotation) => Option.fromNullable(annotation(issue)))
+export const getMessage: (
+  issue: ParseResult.ParseIssue
+) => Effect.Effect<string, Cause.NoSuchElementException> = (issue: ParseResult.ParseIssue) =>
+  Effect.catchAll(getPrevMessage(issue), () => getCurrentMessage(issue))
 
 /** @internal */
-export const formatTypeMessage = (e: ParseResult.Type): string =>
+export const formatTypeMessage = (e: ParseResult.Type): Effect.Effect<string> =>
   getMessage(e).pipe(
-    Option.orElse(() => e.message),
-    Option.getOrElse(() => `Expected ${AST.format(e.ast, true)}, actual ${AST.formatUnknown(e.actual)}`)
+    Effect.orElse(() => e.message),
+    Effect.catchAll(() => Effect.succeed(`Expected ${e.ast.toString(true)}, actual ${_util.formatUnknown(e.actual)}`))
   )
 
 /** @internal */
 export const formatForbiddenMessage = (e: ParseResult.Forbidden): string =>
   Option.getOrElse(e.message, () => "is forbidden")
 
-const getParseIssueMessage = (
-  issue: ParseResult.ParseIssue,
-  orElse: () => Option.Option<string>
-): Option.Option<string> => {
-  switch (issue._tag) {
-    case "Refinement":
-      return Option.orElse(getRefinementMessage(issue), orElse)
-    case "Transform":
-      return Option.orElse(getTransformMessage(issue), orElse)
-    case "Tuple":
-    case "TypeLiteral":
-    case "Union":
-    case "Type":
-      return Option.orElse(getMessage(issue), orElse)
-  }
-  return orElse()
-}
-
-/** @internal */
-export const getRefinementMessage = (e: ParseResult.Refinement): Option.Option<string> => {
-  if (e.kind === "From") {
-    return getParseIssueMessage(e.error, () => getMessage(e))
-  }
-  return getMessage(e)
-}
-
-/** @internal */
-export const getTransformMessage = (e: ParseResult.Transform): Option.Option<string> =>
-  getParseIssueMessage(e.error, () => getMessage(e))
-
-const go = (e: ParseResult.ParseIssue | ParseResult.Missing | ParseResult.Unexpected): Tree<string> => {
+const go = (e: ParseResult.ParseIssue | ParseResult.Missing | ParseResult.Unexpected): Effect.Effect<Tree<string>> => {
   switch (e._tag) {
     case "Type":
-      return make(formatTypeMessage(e))
+      return Effect.map(formatTypeMessage(e), make)
     case "Forbidden":
-      return make(AST.format(e.ast), [make(formatForbiddenMessage(e))])
+      return Effect.succeed(make(String(e.ast), [make(formatForbiddenMessage(e))]))
     case "Unexpected":
-      return make(`is unexpected, expected ${AST.format(e.ast, true)}`)
+      return Effect.succeed(make(`is unexpected, expected ${e.ast.toString(true)}`))
     case "Missing":
-      return make("is missing")
+      return Effect.succeed(make("is missing"))
     case "Union":
-      return Option.match(getMessage(e), {
-        onNone: () =>
-          make(
-            AST.format(e.ast),
-            e.errors.map((e) => {
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () =>
+          Effect.map(
+            Effect.forEach(e.errors, (e) => {
               switch (e._tag) {
                 case "Member":
-                  return make(`Union member`, [go(e.error)])
+                  return Effect.map(go(e.error), (tree) => make(`Union member`, [tree]))
                 default:
                   return go(e)
               }
-            })
+            }),
+            (forest) => make(String(e.ast), forest)
           ),
-        onSome: make
+        onSuccess: (message) => Effect.succeed(make(message))
       })
-    case "Tuple":
-      return Option.match(getMessage(e), {
-        onNone: () =>
-          make(
-            AST.format(e.ast),
-            e.errors.map((index) => make(`[${index.index}]`, [go(index.error)]))
+    case "TupleType":
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () =>
+          Effect.map(
+            Effect.forEach(
+              e.errors,
+              (index) => Effect.map(go(index.error), (tree) => make(`[${index.index}]`, [tree]))
+            ),
+            (forest) => make(String(e.ast), forest)
           ),
-        onSome: make
+        onSuccess: (message) => Effect.succeed(make(message))
       })
     case "TypeLiteral":
-      return Option.match(getMessage(e), {
-        onNone: () =>
-          make(
-            AST.format(e.ast),
-            e.errors.map((key) => make(`[${AST.formatUnknown(key.key)}]`, [go(key.error)]))
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () =>
+          Effect.map(
+            Effect.forEach(e.errors, (key) =>
+              Effect.map(go(key.error), (tree) => make(`[${_util.formatUnknown(key.key)}]`, [tree]))),
+            (forest) =>
+              make(String(e.ast), forest)
           ),
-        onSome: make
+        onSuccess: (message) => Effect.succeed(make(message))
       })
-    case "Transform":
-      return Option.match(getTransformMessage(e), {
-        onNone: () => make(AST.format(e.ast), [make(formatTransformationKind(e.kind), [go(e.error)])]),
-        onSome: make
+    case "Transformation":
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () =>
+          Effect.map(go(e.error), (tree) => make(String(e.ast), [make(formatTransformationKind(e.kind), [tree])])),
+        onSuccess: (message) => Effect.succeed(make(message))
       })
     case "Refinement":
-      return Option.match(getRefinementMessage(e), {
-        onNone: () =>
-          make(AST.format(e.ast), [
-            make(formatRefinementKind(e.kind), [go(e.error)])
-          ]),
-        onSome: make
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () =>
+          Effect.map(go(e.error), (tree) => make(String(e.ast), [make(formatRefinementKind(e.kind), [tree])])),
+        onSuccess: (message) => Effect.succeed(make(message))
       })
     case "Declaration":
-      return Option.match(getMessage(e), {
-        onNone: () => {
+      return Effect.matchEffect(getMessage(e), {
+        onFailure: () => {
           const error = e.error
           const shouldSkipDefaultMessage = error._tag === "Type" && error.ast === e.ast
-          return shouldSkipDefaultMessage ? go(error) : make(AST.format(e.ast), [go(e.error)])
+          return shouldSkipDefaultMessage
+            ? go(error)
+            : Effect.map(go(e.error), (tree) => make(String(e.ast), [tree]))
         },
-        onSome: make
+        onSuccess: (message) => Effect.succeed(make(message))
       })
   }
 }
diff --git a/src/index.ts b/src/index.ts
index 394a993b6674acf30ea0c746701fdb790db59b11..f6549c4859e6ac0f6b2547cb903b1e127205f3b0 100644
--- a/src/index.ts
+++ b/src/index.ts
@@ -18,11 +18,6 @@ export * as ArrayFormatter from "./ArrayFormatter.js"
  */
 export * as Equivalence from "./Equivalence.js"
 
-/**
- * @since 1.0.0
- */
-export * as Format from "./Format.js"
-
 /**
  * @since 1.0.0
  */
diff --git a/src/internal/filters.ts b/src/internal/filters.ts
index 4ba2facee868a06cb16360d9c6e9f9aed74964b9..8c41b795c0877b811e5bf32c48039c522ea864e4 100644
--- a/src/internal/filters.ts
+++ b/src/internal/filters.ts
@@ -1,6 +1,3 @@
-/**
- * @since 1.0.0
- */
 import type * as Schema from "../Schema.js"
 
 /** @internal */
diff --git a/src/internal/hooks.ts b/src/internal/hooks.ts
index 03ce00232d5a3f8e722ca9df2c4b5f98d9096250..ccce906b5fc984e47ad5bb36a8e4b40808f0296a 100644
--- a/src/internal/hooks.ts
+++ b/src/internal/hooks.ts
@@ -1,6 +1,3 @@
-/**
- * @since 1.0.0
- */
 import type * as Arbitrary from "../Arbitrary.js"
 import type * as Equivalence from "../Equivalence.js"
 import type * as Pretty from "../Pretty.js"
diff --git a/src/internal/parseResult.ts b/src/internal/parseResult.ts
new file mode 100644
index 0000000000000000000000000000000000000000..cc5213c67a49a85c7f285a8f00398515327450d5
--- /dev/null
+++ b/src/internal/parseResult.ts
@@ -0,0 +1,188 @@
+import * as Effect from "effect/Effect"
+import * as Either from "effect/Either"
+import { dual } from "effect/Function"
+import * as Option from "effect/Option"
+import type * as ReadonlyArray from "effect/ReadonlyArray"
+import type * as AST from "../AST.js"
+
+/** @internal */
+export type ParseIssue =
+  | Declaration
+  | Refinement
+  | Tuple
+  | TypeLiteral
+  | Union
+  | Transformation
+  | Type
+  | Forbidden
+
+/** @internal */
+export class Declaration {
+  readonly _tag = "Declaration"
+  constructor(readonly ast: AST.Declaration, readonly actual: unknown, readonly error: ParseIssue) {}
+}
+
+/** @internal */
+export class Refinement {
+  readonly _tag = "Refinement"
+  constructor(
+    readonly ast: AST.Refinement<AST.AST>,
+    readonly actual: unknown,
+    readonly kind: "From" | "Predicate",
+    readonly error: ParseIssue
+  ) {}
+}
+
+/** @internal */
+export class Tuple {
+  readonly _tag = "TupleType"
+  constructor(
+    readonly ast: AST.TupleType,
+    readonly actual: unknown,
+    readonly errors: ReadonlyArray.NonEmptyReadonlyArray<Index>
+  ) {}
+}
+
+/** @internal */
+export class Index {
+  readonly _tag = "Index"
+  constructor(readonly index: number, readonly error: ParseIssue | Missing | Unexpected) {}
+}
+
+/** @internal */
+export class TypeLiteral {
+  readonly _tag = "TypeLiteral"
+  constructor(
+    readonly ast: AST.TypeLiteral,
+    readonly actual: unknown,
+    readonly errors: ReadonlyArray.NonEmptyReadonlyArray<Key>
+  ) {}
+}
+
+/** @internal */
+export class Key {
+  readonly _tag = "Key"
+  constructor(readonly key: PropertyKey, readonly error: ParseIssue | Missing | Unexpected) {}
+}
+
+/** @internal */
+export class Unexpected {
+  readonly _tag = "Unexpected"
+  constructor(readonly ast: AST.AST) {}
+}
+
+/** @internal */
+export class Transformation {
+  readonly _tag = "Transformation"
+  constructor(
+    readonly ast: AST.Transformation,
+    readonly actual: unknown,
+    readonly kind: "Encoded" | "Transformation" | "Type",
+    readonly error: ParseIssue
+  ) {}
+}
+
+/** @internal */
+export class Type {
+  readonly _tag = "Type"
+  readonly message: Option.Option<string>
+  constructor(readonly ast: AST.AST, readonly actual: unknown, message?: string) {
+    this.message = Option.fromNullable(message)
+  }
+}
+
+/** @internal */
+export class Forbidden {
+  readonly _tag = "Forbidden"
+  readonly message: Option.Option<string>
+  constructor(readonly ast: AST.AST, readonly actual: unknown, message?: string) {
+    this.message = Option.fromNullable(message)
+  }
+}
+
+/** @internal */
+export class Missing {
+  readonly _tag = "Missing"
+}
+
+/** @internal */
+export const missing: Missing = new Missing()
+
+/** @internal */
+export class Member {
+  readonly _tag = "Member"
+  constructor(readonly ast: AST.AST, readonly error: ParseIssue) {}
+}
+
+/** @internal */
+export class Union {
+  readonly _tag = "Union"
+  constructor(
+    readonly ast: AST.Union,
+    readonly actual: unknown,
+    readonly errors: ReadonlyArray.NonEmptyReadonlyArray<Type | TypeLiteral | Member>
+  ) {}
+}
+
+/** @internal */
+export const flatMap: {
+  <A, B, E1, R1>(
+    f: (a: A) => Effect.Effect<B, E1, R1>
+  ): <E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<B, E1 | E, R1 | R>
+  <A, E, R, B, E1, R1>(
+    self: Effect.Effect<A, E, R>,
+    f: (a: A) => Effect.Effect<B, E1, R1>
+  ): Effect.Effect<B, E | E1, R | R1>
+} = dual(2, <A, E, R, B, E1, R1>(
+  self: Effect.Effect<A, E, R>,
+  f: (a: A) => Effect.Effect<B, E1, R1>
+): Effect.Effect<B, E | E1, R | R1> => {
+  const s: any = self
+  if (s["_tag"] === "Left") {
+    return s
+  }
+  if (s["_tag"] === "Right") {
+    return f(s.right)
+  }
+  return Effect.flatMap(self, f)
+})
+
+/** @internal */
+export const map: {
+  <A, B>(f: (a: A) => B): <E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<B, E, R>
+  <A, E, R, B>(self: Effect.Effect<A, E, R>, f: (a: A) => B): Effect.Effect<B, E, R>
+} = dual(2, <A, E, R, B>(self: Effect.Effect<A, E, R>, f: (a: A) => B): Effect.Effect<B, E, R> => {
+  const s: any = self
+  if (s["_tag"] === "Left") {
+    return s
+  }
+  if (s["_tag"] === "Right") {
+    return Either.right(f(s.right))
+  }
+  return Effect.map(self, f)
+})
+
+/** @internal */
+export const mapError: {
+  <E, E2>(f: (e: E) => E2): <A, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E2, R>
+  <A, E, R, E2>(self: Effect.Effect<A, E, R>, f: (e: E) => E2): Effect.Effect<A, E2, R>
+} = dual(2, <A, E, R, E2>(self: Effect.Effect<A, E, R>, f: (e: E) => E2): Effect.Effect<A, E2, R> => {
+  const s: any = self
+  if (s["_tag"] === "Left") {
+    return Either.left(f(s.left))
+  }
+  if (s["_tag"] === "Right") {
+    return s
+  }
+  return Effect.mapError(self, f)
+})
+
+/** @internal */
+export const eitherOrUndefined = <A, E, R>(
+  self: Effect.Effect<A, E, R>
+): Either.Either<A, E> | undefined => {
+  const s: any = self
+  if (s["_tag"] === "Left" || s["_tag"] === "Right") {
+    return s
+  }
+}
diff --git a/src/internal/schema.ts b/src/internal/schema.ts
index d932ec2a07cf36cf7452d931f3f7c2584ccaab77..59f5184cf3bb621df06c0ee52b7ee42c99bc6d0f 100644
--- a/src/internal/schema.ts
+++ b/src/internal/schema.ts
@@ -1,16 +1,66 @@
-/**
- * @since 1.0.0
- */
-
 import { pipeArguments } from "effect/Pipeable"
-import type * as AST from "../AST.js"
-import type * as Schema from "../Schema.js"
+import type { Mutable } from "effect/Types"
+import * as AST from "../AST.js"
+import type * as S from "../Schema.js"
+import * as _hooks from "./hooks.js"
+
+/** @internal */
+export const TypeId: S.TypeId = Symbol.for("@effect/schema/Schema") as S.TypeId
+
+/** @internal */
+export const PropertySignatureTypeId: S.PropertySignatureTypeId = Symbol.for(
+  "@effect/schema/PropertySignature"
+) as S.PropertySignatureTypeId
 
 /** @internal */
-export const TypeId: Schema.TypeId = Symbol.for("@effect/schema/Schema") as Schema.TypeId
+export const make = <A, I, R>(ast: AST.AST): S.Schema<A, I, R> => new Schema(ast)
 
 /** @internal */
-export const make = <A, I, R>(ast: AST.AST): Schema.Schema<A, I, R> => new SchemaImpl(ast)
+export const toASTAnnotations = (
+  annotations?: Record<string | symbol, any> | undefined
+): AST.Annotations => {
+  if (!annotations) {
+    return {}
+  }
+  const out: Mutable<AST.Annotations> = {}
+
+  // symbols are reserved for custom annotations
+  const custom = Object.getOwnPropertySymbols(annotations)
+  for (const sym of custom) {
+    out[sym] = annotations[sym]
+  }
+
+  // string keys are reserved as /schema namespace
+  if (annotations.typeId !== undefined) {
+    const typeId = annotations.typeId
+    if (typeof typeId === "object") {
+      out[AST.TypeAnnotationId] = typeId.id
+      out[typeId.id] = typeId.annotation
+    } else {
+      out[AST.TypeAnnotationId] = typeId
+    }
+  }
+  const move = (from: keyof typeof annotations, to: symbol) => {
+    if (annotations[from] !== undefined) {
+      out[to] = annotations[from]
+    }
+  }
+  move("message", AST.MessageAnnotationId)
+  move("identifier", AST.IdentifierAnnotationId)
+  move("title", AST.TitleAnnotationId)
+  move("description", AST.DescriptionAnnotationId)
+  move("examples", AST.ExamplesAnnotationId)
+  move("default", AST.DefaultAnnotationId)
+  move("documentation", AST.DocumentationAnnotationId)
+  move("jsonSchema", AST.JSONSchemaAnnotationId)
+  move("arbitrary", _hooks.ArbitraryHookId)
+  move("pretty", _hooks.PrettyHookId)
+  move("equivalence", _hooks.EquivalenceHookId)
+  move("concurrency", AST.ConcurrencyAnnotationId)
+  move("batching", AST.BatchingAnnotationId)
+
+  return out
+}
 
 /** @internal */
 export const variance = {
@@ -22,10 +72,21 @@ export const variance = {
   _R: (_: never) => _
 }
 
-class SchemaImpl<A, I, R> implements Schema.Schema<A, I, R> {
+/** @internal */
+export const annotations = <A>(ast: AST.AST, annotations: S.Annotations<A>): AST.AST =>
+  AST.annotations(ast, toASTAnnotations(annotations))
+
+/** @internal */
+export class Schema<in out A, in out I = A, out R = never> implements S.Schema<A, I, R> {
   readonly [TypeId] = variance
   constructor(readonly ast: AST.AST) {}
   pipe() {
     return pipeArguments(this, arguments)
   }
+  annotations(a: S.Annotations<A>): S.Schema<A, I, R> {
+    return new Schema(annotations(this.ast, a))
+  }
+  toString() {
+    return String(this.ast)
+  }
 }
diff --git a/src/internal/util.ts b/src/internal/util.ts
new file mode 100644
index 0000000000000000000000000000000000000000..4b13604d1484ec2b6bccf109af487ed88250e428
--- /dev/null
+++ b/src/internal/util.ts
@@ -0,0 +1,74 @@
+import * as Predicate from "effect/Predicate"
+import type * as AST from "../AST.js"
+
+/** @internal */
+export const getKeysForIndexSignature = (
+  input: { readonly [x: PropertyKey]: unknown },
+  parameter: AST.Parameter
+): ReadonlyArray<string> | ReadonlyArray<symbol> => {
+  switch (parameter._tag) {
+    case "StringKeyword":
+    case "TemplateLiteral":
+      return Object.keys(input)
+    case "SymbolKeyword":
+      return Object.getOwnPropertySymbols(input)
+    case "Refinement":
+      return getKeysForIndexSignature(input, parameter.from)
+  }
+}
+
+/** @internal */
+export const ownKeys = (o: object): Array<PropertyKey> =>
+  (Object.keys(o) as Array<PropertyKey>).concat(Object.getOwnPropertySymbols(o))
+
+/** @internal */
+export const memoizeThunk = <A>(f: () => A): () => A => {
+  let done = false
+  let a: A
+  return () => {
+    if (done) {
+      return a
+    }
+    a = f()
+    done = true
+    return a
+  }
+}
+
+/** @internal */
+export const formatUnknown = (u: unknown): string => {
+  if (Predicate.isString(u)) {
+    return JSON.stringify(u)
+  } else if (
+    Predicate.isNumber(u)
+    || u == null
+    || Predicate.isBoolean(u)
+    || Predicate.isSymbol(u)
+    || Predicate.isDate(u)
+  ) {
+    return String(u)
+  } else if (Predicate.isBigInt(u)) {
+    return String(u) + "n"
+  } else if (
+    !Array.isArray(u)
+    && Predicate.hasProperty(u, "toString")
+    && Predicate.isFunction(u["toString"])
+    && u["toString"] !== Object.prototype.toString
+  ) {
+    return u["toString"]()
+  }
+  try {
+    JSON.stringify(u)
+    if (Array.isArray(u)) {
+      return `[${u.map(formatUnknown).join(",")}]`
+    } else {
+      return `{${
+        ownKeys(u).map((k) =>
+          `${Predicate.isString(k) ? JSON.stringify(k) : String(k)}:${formatUnknown((u as any)[k])}`
+        ).join(",")
+      }}`
+    }
+  } catch (e) {
+    return String(u)
+  }
+}
