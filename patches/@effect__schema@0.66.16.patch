diff --git a/README.md b/README.md
index c488aaa601644d755e87cd84ee7d921b928da505..09a9e23a6856120f781566383fa8f59fc4b36398 100644
--- a/README.md
+++ b/README.md
@@ -18,7 +18,7 @@ If you're eager to learn how to define your first schema, jump straight to the [
 
 ## The Schema Type
 
-The `Schema<Type, Encoded, Context>` type represents an imMutable value that describes the structure of your data.
+The `Schema<Type, Encoded, Context>` type represents an immutable value that describes the structure of your data.
 
 The `Schema` type has three type parameters with the following meanings:
 
@@ -34,7 +34,7 @@ The `Schema` type has three type parameters with the following meanings:
 > [!NOTE]
 > In the Effect ecosystem, you may often encounter the type parameters of `Schema` abbreviated as `A`, `I`, and `R` respectively. This is just shorthand for the type value of type **A**, **I**nput, and **R**equirements.
 
-`Schema` values are imMutable, and all `@effect/schema` functions produce new `Schema` values.
+`Schema` values are immutable, and all `@effect/schema` functions produce new `Schema` values.
 
 `Schema` values do not actually do anything, they are just values that model or describe the structure of your data.
 
@@ -92,14 +92,6 @@ When working with schemas, there's an important rule to keep in mind: your schem
 
 In simpler terms, if you encode a value and then immediately decode it, the result should match the original value you started with. This rule ensures that your data remains consistent and reliable throughout the encoding and decoding process.
 
-# Credits
-
-This library was inspired by the following projects:
-
-- [io-ts](https://github.com/gcanti/io-ts)
-- [zod](https://github.com/colinhacks/zod)
-- [zio-schema](https://github.com/zio/zio-schema)
-
 # Requirements
 
 - TypeScript 5.0 or newer
@@ -128,10 +120,10 @@ Let's delve into this with an example.
 **With `exactOptionalPropertyTypes` Enabled**
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const Person = S.Struct({
-  name: S.optional(S.String.pipe(S.nonEmpty()), {
+const Person = Schema.Struct({
+  name: Schema.optional(Schema.String.pipe(Schema.nonEmpty()), {
     exact: true
   })
 })
@@ -141,9 +133,9 @@ type Type = {
     readonly name?: string; // the type is strict (no `| undefined`)
 }
 */
-type Type = S.Schema.Type<typeof Person>
+type Type = Schema.Schema.Type<typeof Person>
 
-S.decodeSync(Person)({ name: undefined })
+Schema.decodeSync(Person)({ name: undefined })
 /*
 TypeScript Error:
 Argument of type '{ name: undefined; }' is not assignable to parameter of type '{ readonly name?: string; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
@@ -159,10 +151,10 @@ Here, notice that the type of `name` is "exact" (`string`), which means the type
 If, for some reason, you can't enable the `exactOptionalPropertyTypes` option (perhaps due to conflicts with other third-party libraries), you can still use `@effect/schema`. However, there will be a mismatch between the types and the runtime behavior:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const Person = S.Struct({
-  name: S.optional(S.String.pipe(S.nonEmpty()), {
+const Person = Schema.Struct({
+  name: Schema.optional(Schema.String.pipe(Schema.nonEmpty()), {
     exact: true
   })
 })
@@ -172,9 +164,9 @@ type Type = {
     readonly name?: string | undefined; // the type is widened to string | undefined
 }
 */
-type Type = S.Schema.Type<typeof Person>
+type Type = Schema.Schema.Type<typeof Person>
 
-S.decodeSync(Person)({ name: undefined }) // No type error, but a decoding failure occurs
+Schema.decodeSync(Person)({ name: undefined }) // No type error, but a decoding failure occurs
 /*
 Error: { name?: a non empty string }
 └─ ["name"]
@@ -197,10 +189,9 @@ npm install @effect/schema
 Additionally, make sure to install the following packages, as they are peer dependencies. Note that some package managers might not install peer dependencies by default, so you need to install them manually:
 
 - `effect` package (peer dependency)
-- [fast-check](https://github.com/dubzzz/fast-check) package (peer dependency)
 
 > [!WARNING]
-> This package is primarily published to receive early feedback and for contributors, during this development phase we cannot guarantee the stability of the APIs, consider each release to contain breaking changes.
+> This package is primarily published to receive early feedback and for contributors, during this development phase we cannot guarantee the stability of the APIs, consider each **minor** release to contain breaking changes.
 
 Once you have installed the library, you can import the necessary types and functions from the `@effect/schema/Schema` module.
 
@@ -223,11 +214,11 @@ One common way to define a `Schema` is by utilizing the `struct` constructor pro
 For example, consider the following `Schema` that describes a person object with a `name` property of type `string` and an `age` property of type `number`:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const Person = S.Struct({
-  name: S.String,
-  age: S.Number
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.Number
 })
 ```
 
@@ -238,19 +229,23 @@ const Person = S.Struct({
 
 ### Type
 
-After you've defined a `Schema<A, I, R>`, you can extract the inferred type `A` that represents the data described by the schema using the `Schema.Type` utility.
+Once you've defined a `Schema<A, I, R>`, you can extract the inferred type `A`, which represents the data described by the schema, in two ways:
 
-For instance you can extract the inferred type of a `Person` object as demonstrated below:
+- Using the `Schema.Schema.Type` utility.
+- Using the `Type` field defined on your schema.
+
+For example, you can extract the inferred type of a `Person` object as demonstrated below:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const Person = S.Struct({
-  name: S.String,
-  age: S.NumberFromString
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.NumberFromString
 })
 
-interface Person extends S.Schema.Type<typeof Person> {}
+// 1. Using the Schema.Type utility
+type Person = Schema.Schema.Type<typeof Person>
 /*
 Equivalent to:
 interface Person {
@@ -258,12 +253,15 @@ interface Person {
   readonly age: number;
 }
 */
+
+// 2. Using the `Type` field
+type Person2 = typeof Person.Type
 ```
 
-Alternatively, you can define the `Person` type using the `type` keyword:
+Alternatively, you can define the `Person` type using the `interface` keyword:
 
 ```ts
-type Person = S.Schema.Type<typeof Person>
+interface Person extends Schema.Schema.Type<typeof Person> {}
 /*
 Equivalent to:
 type Person {
@@ -277,23 +275,27 @@ Both approaches yield the same result, but using an interface provides benefits
 
 ### Encoded
 
-In cases where in a `Schema<A, I>` the `I` type differs from the `A` type, you can also extract the inferred `I` type using the `Schema.Encoded` utility.
+In cases where in a `Schema<A, I>` the `I` type differs from the `A` type, you can also extract the inferred `I` type using the `Schema.Encoded` utility (or the `Encoded` field defined on your schema).
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const Person = S.Struct({
-  name: S.String,
-  age: S.NumberFromString
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.NumberFromString
 })
 
-type PersonEncoded = S.Schema.Encoded<typeof Person>
+// 1. Using the Schema.Encoded utility
+type PersonEncoded = Schema.Schema.Encoded<typeof Person>
 /*
 type PersonEncoded = {
     readonly name: string;
     readonly age: string;
 }
 */
+
+// 2. Using the `Encoded` field
+type PersonEncoded2 = typeof Person.Encoded
 ```
 
 ### Context
@@ -301,15 +303,15 @@ type PersonEncoded = {
 You can also extract the inferred type `R` that represents the context described by the schema using the `Schema.Context` utility:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const Person = S.Struct({
-  name: S.String,
-  age: S.NumberFromString
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.NumberFromString
 })
 
 // type PersonContext = never
-type PersonContext = S.Schema.Context<typeof Person>
+type PersonContext = Schema.Schema.Context<typeof Person>
 ```
 
 ### Advanced extracting Inferred Types
@@ -317,17 +319,17 @@ type PersonContext = S.Schema.Context<typeof Person>
 To create a schema with an opaque type, you can use the following technique that re-declares the schema:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const _Person = S.Struct({
-  name: S.String,
-  age: S.Number
+const _Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.Number
 })
 
-interface Person extends S.Schema.Type<typeof _Person> {}
+interface Person extends Schema.Schema.Type<typeof _Person> {}
 
 // Re-declare the schema to create a schema with an opaque type
-const Person: S.Schema<Person> = _Person
+const Person: Schema.Schema<Person> = _Person
 ```
 
 Alternatively, you can use the `Class` APIs (see the [Class](#classes) section below for more details).
@@ -335,19 +337,19 @@ Alternatively, you can use the `Class` APIs (see the [Class](#classes) section b
 Note that the technique shown above becomes more complex when the schema is defined such that `A` is different from `I`. For example:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const _Person = S.Struct({
-  name: S.String,
-  age: S.NumberFromString
+const _Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.NumberFromString
 })
 
-interface Person extends S.Schema.Type<typeof _Person> {}
+interface Person extends Schema.Schema.Type<typeof _Person> {}
 
-interface PersonEncoded extends S.Schema.Encoded<typeof _Person> {}
+interface PersonEncoded extends Schema.Schema.Encoded<typeof _Person> {}
 
 // Re-declare the schema to create a schema with an opaque type
-const Person: S.Schema<Person, PersonEncoded> = _Person
+const Person: Schema.Schema<Person, PersonEncoded> = _Person
 ```
 
 In this case, the field `"age"` is of type `string` in the `Encoded` type of the schema and is of type `number` in the `Type` type of the schema. Therefore, we need to define **two** interfaces (`PersonEncoded` and `Person`) and use both to redeclare our final schema `Person`.
@@ -371,23 +373,23 @@ The `@effect/schema/Schema` module offers a variety of `decodeUnknown*` function
 Let's begin with an example using the `decodeUnknownSync` function. This function is useful when you want to parse a value and immediately throw an error if the parsing fails.
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const Person = S.Struct({
-  name: S.String,
-  age: S.Number
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.Number
 })
 
 // Simulate an unknown input
 const input: unknown = { name: "Alice", age: 30 }
 
-console.log(S.decodeUnknownSync(Person)(input))
+console.log(Schema.decodeUnknownSync(Person)(input))
 // Output: { name: 'Alice', age: 30 }
 
-console.log(S.decodeUnknownSync(Person)(null))
+console.log(Schema.decodeUnknownSync(Person)(null))
 /*
 throws:
-Error: Expected { name: string; age: number }, actual null
+Error: Expected { readonly name: string; readonly age: number }, actual null
 */
 ```
 
@@ -396,15 +398,15 @@ Error: Expected { name: string; age: number }, actual null
 Now, let's see how to use the `decodeUnknownEither` function, which returns an `Either` type representing success or failure.
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as Either from "effect/Either"
+import { Schema } from "@effect/schema"
+import { Either } from "effect"
 
-const Person = S.Struct({
-  name: S.String,
-  age: S.Number
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.Number
 })
 
-const decode = S.decodeUnknownEither(Person)
+const decode = Schema.decodeUnknownEither(Person)
 
 // Simulate an unknown input
 const input: unknown = { name: "Alice", age: 30 }
@@ -425,7 +427,7 @@ if (Either.isLeft(result2)) {
   Output:
   {
     _id: 'ParseError',
-    message: 'Expected { name: string; age: number }, actual null'
+    message: 'Expected { readonly name: string; readonly age: number }, actual null'
   }
   */
 }
@@ -447,18 +449,18 @@ Here, `ParseIssue` represents an error that might occur during the parsing proce
 When your schema involves asynchronous transformations, neither the `decodeUnknownSync` nor the `decodeUnknownEither` functions will work for you. In such cases, you must turn to the `decodeUnknown` function, which returns an `Effect`.
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as Effect from "effect/Effect"
+import { Schema } from "@effect/schema"
+import { Effect } from "effect"
 
-const PersonId = S.Number
+const PersonId = Schema.Number
 
-const Person = S.Struct({
+const Person = Schema.Struct({
   id: PersonId,
-  name: S.String,
-  age: S.Number
+  name: Schema.String,
+  age: Schema.Number
 })
 
-const asyncSchema = S.transformOrFail(PersonId, Person, {
+const asyncSchema = Schema.transformOrFail(PersonId, Person, {
   // Simulate an async transformation
   decode: (id) =>
     Effect.succeed({ id, name: "name", age: 18 }).pipe(
@@ -467,7 +469,7 @@ const asyncSchema = S.transformOrFail(PersonId, Person, {
   encode: (person) => Effect.succeed(person.id).pipe(Effect.delay("10 millis"))
 })
 
-const syncParsePersonId = S.decodeUnknownEither(asyncSchema)
+const syncParsePersonId = Schema.decodeUnknownEither(asyncSchema)
 
 console.log(JSON.stringify(syncParsePersonId(1), null, 2))
 /*
@@ -477,12 +479,12 @@ Output:
   "_tag": "Left",
   "left": {
     "_id": "ParseError",
-    "message": "(number <-> { id: number; name: string; age: number })\n└─ cannot be be resolved synchronously, this is caused by using runSync on an effect that performs async work"
+    "message": "(number <-> { readonly id: number; readonly name: string; readonly age: number })\n└─ cannot be be resolved synchronously, this is caused by using runSync on an effect that performs async work"
   }
 }
 */
 
-const asyncParsePersonId = S.decodeUnknown(asyncSchema)
+const asyncParsePersonId = Schema.decodeUnknown(asyncSchema)
 
 Effect.runPromise(asyncParsePersonId(1)).then(console.log)
 /*
@@ -502,15 +504,15 @@ However, you can use the `onExcessProperty` option (default value: `"ignore"`) t
 Here's an example of how you might use `onExcessProperty` set to `"error"`:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const Person = S.Struct({
-  name: S.String,
-  age: S.Number
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.Number
 })
 
 console.log(
-  S.decodeUnknownSync(Person)({
+  Schema.decodeUnknownSync(Person)({
     name: "Bob",
     age: 40,
     email: "bob@example.com"
@@ -521,7 +523,7 @@ Output:
 { name: 'Bob', age: 40 }
 */
 
-S.decodeUnknownSync(Person)(
+Schema.decodeUnknownSync(Person)(
   {
     name: "Bob",
     age: 40,
@@ -531,7 +533,7 @@ S.decodeUnknownSync(Person)(
 )
 /*
 throws
-Error: { name: string; age: number }
+Error: { readonly name: string; readonly age: number }
 └─ ["email"]
    └─ is unexpected, expected "name" | "age"
 */
@@ -540,15 +542,15 @@ Error: { name: string; age: number }
 If you want to allow excess properties to remain, you can use `onExcessProperty` set to `"preserve"`:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const Person = S.Struct({
-  name: S.String,
-  age: S.Number
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.Number
 })
 
 console.log(
-  S.decodeUnknownSync(Person)(
+  Schema.decodeUnknownSync(Person)(
     {
       name: "Bob",
       age: 40,
@@ -572,14 +574,14 @@ The `errors` option allows you to receive all parsing errors when attempting to
 Here's an example of how you might use `errors`:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const Person = S.Struct({
-  name: S.String,
-  age: S.Number
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.Number
 })
 
-S.decodeUnknownSync(Person)(
+Schema.decodeUnknownSync(Person)(
   {
     name: "Bob",
     age: "abc",
@@ -589,7 +591,7 @@ S.decodeUnknownSync(Person)(
 )
 /*
 throws
-Error: { name: string; age: number }
+Error: { readonly name: string; readonly age: number }
 ├─ ["email"]
 │  └─ is unexpected, expected "name" | "age"
 └─ ["age"]
@@ -615,21 +617,23 @@ Let's consider an example where we have a schema for a `Person` object with a `n
 ```ts
 import * as S from "@effect/schema/Schema"
 
+import { Schema } from "@effect/schema"
+
 // Age is a schema that can decode a string to a number and encode a number to a string
-const Age = S.NumberFromString
+const Age = Schema.NumberFromString
 
-const Person = S.Struct({
-  name: S.NonEmpty,
+const Person = Schema.Struct({
+  name: Schema.NonEmpty,
   age: Age
 })
 
-console.log(S.encodeSync(Person)({ name: "Alice", age: 30 }))
+console.log(Schema.encodeSync(Person)({ name: "Alice", age: 30 }))
 // Output: { name: 'Alice', age: '30' }
 
-console.log(S.encodeSync(Person)({ name: "", age: 30 }))
+console.log(Schema.encodeSync(Person)({ name: "", age: 30 }))
 /*
 throws:
-Error: { name: NonEmpty; age: NumberFromString }
+Error: { readonly name: NonEmpty; readonly age: NumberFromString }
 └─ ["name"]
    └─ NonEmpty
       └─ Predicate refinement failure
@@ -653,23 +657,22 @@ The `TreeFormatter` is the default method for formatting errors. It organizes er
 Here's an example of how it works:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import { formatError } from "@effect/schema/TreeFormatter"
-import * as Either from "effect/Either"
+import { Schema, TreeFormatter } from "@effect/schema"
+import { Either } from "effect"
 
-const Person = S.Struct({
-  name: S.String,
-  age: S.Number
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.Number
 })
 
-const result = S.decodeUnknownEither(Person)({})
+const result = Schema.decodeUnknownEither(Person)({})
 if (Either.isLeft(result)) {
   console.error("Decoding failed:")
-  console.error(formatError(result.left))
+  console.error(TreeFormatter.formatErrorSync(result.left))
 }
 /*
 Decoding failed:
-{ name: string; age: number }
+{ readonly name: string; readonly age: number }
 └─ ["name"]
    └─ is missing
 */
@@ -703,40 +706,40 @@ If you set this annotation on a schema and the provided function returns a `stri
 **Example**
 
 ```ts
-import type { ParseIssue } from "@effect/schema/ParseResult"
-import * as S from "@effect/schema/Schema"
+import type { ParseResult } from "@effect/schema"
+import { Schema } from "@effect/schema"
 
-const getOrderItemId = ({ actual }: ParseIssue) => {
-  if (S.is(S.Struct({ id: S.String }))(actual)) {
+const getOrderItemId = ({ actual }: ParseResult.ParseIssue) => {
+  if (Schema.is(Schema.Struct({ id: Schema.String }))(actual)) {
     return `OrderItem with id: ${actual.id}`
   }
 }
 
-const OrderItem = S.Struct({
-  id: S.String,
-  name: S.String,
-  price: S.Number
+const OrderItem = Schema.Struct({
+  id: Schema.String,
+  name: Schema.String,
+  price: Schema.Number
 }).annotations({
   identifier: "OrderItem",
   parseIssueTitle: getOrderItemId
 })
 
-const getOrderId = ({ actual }: ParseIssue) => {
-  if (S.is(S.Struct({ id: S.Number }))(actual)) {
+const getOrderId = ({ actual }: ParseResult.ParseIssue) => {
+  if (Schema.is(Schema.Struct({ id: Schema.Number }))(actual)) {
     return `Order with id: ${actual.id}`
   }
 }
 
-const Order = S.Struct({
-  id: S.Number,
-  name: S.String,
-  items: S.Array(OrderItem)
+const Order = Schema.Struct({
+  id: Schema.Number,
+  name: Schema.String,
+  items: Schema.Array(OrderItem)
 }).annotations({
   identifier: "Order",
   parseIssueTitle: getOrderId
 })
 
-const decode = S.decodeUnknownSync(Order, { errors: "all" })
+const decode = Schema.decodeUnknownSync(Order, { errors: "all" })
 
 // No id available, so the `identifier` annotation is used as the title
 decode({})
@@ -788,22 +791,21 @@ The `ArrayFormatter` is an alternative way to format errors, presenting them as
 Here's an example of how it works:
 
 ```ts
-import { formatError } from "@effect/schema/ArrayFormatter"
-import * as S from "@effect/schema/Schema"
+import { ArrayFormatter, Schema } from "@effect/schema"
 import * as Either from "effect/Either"
 
-const Person = S.Struct({
-  name: S.String,
-  age: S.Number
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.Number
 })
 
-const result = S.decodeUnknownEither(Person)(
+const result = Schema.decodeUnknownEither(Person)(
   { name: 1, foo: 2 },
   { errors: "all", onExcessProperty: "error" }
 )
 if (Either.isLeft(result)) {
   console.error("Parsing failed:")
-  console.error(formatError(result.left))
+  console.error(ArrayFormatter.formatErrorSync(result.left))
 }
 /*
 Parsing failed:
@@ -828,11 +830,11 @@ Parsing failed:
 The `is` function provided by the `@effect/schema/Schema` module represents a way of verifying that a value conforms to a given `Schema`. `is` is a refinement that takes a value of type `unknown` as an argument and returns a `boolean` indicating whether or not the value conforms to the `Schema`.
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const Person = S.Struct({
-  name: S.String,
-  age: S.Number
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.Number
 })
 
 /*
@@ -841,7 +843,7 @@ const isPerson: (a: unknown, options?: ParseOptions | undefined) => a is {
     readonly age: number;
 }
 */
-const isPerson = S.is(Person)
+const isPerson = Schema.is(Person)
 
 console.log(isPerson({ name: "Alice", age: 30 })) // true
 console.log(isPerson(null)) // false
@@ -851,15 +853,16 @@ console.log(isPerson({})) // false
 The `asserts` function takes a `Schema` and returns a function that takes an input value and checks if it matches the schema. If it does not match the schema, it throws an error with a comprehensive error message.
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const Person = S.Struct({
-  name: S.String,
-  age: S.Number
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.Number
 })
 
-// const assertsPerson: (input: unknown, options?: ParseOptions) => asserts input is { readonly name: string; readonly age: number; }
-const assertsPerson: S.Schema.ToAsserts<typeof Person> = S.asserts(Person)
+// equivalent to: (input: unknown, options?: ParseOptions) => asserts input is { readonly name: string; readonly age: number; }
+const assertsPerson: Schema.Schema.ToAsserts<typeof Person> =
+  Schema.asserts(Person)
 
 try {
   assertsPerson({ name: "Alice", age: "30" })
@@ -869,7 +872,7 @@ try {
 }
 /*
 The input does not match the schema:
-Error: { name: string; age: number }
+Error: { readonly name: string; readonly age: number }
 └─ ["age"]
    └─ Expected a number, actual "30"
 */
@@ -967,12 +970,11 @@ The `make` function provided by the `@effect/schema/Pretty` module represents a
 You can use the `make` function to create a human-readable string representation of a value that conforms to a `Schema`. This can be useful for debugging or logging purposes, as it allows you to easily inspect the structure and data types of the value.
 
 ```ts
-import * as Pretty from "@effect/schema/Pretty"
-import * as S from "@effect/schema/Schema"
+import { Pretty, Schema } from "@effect/schema"
 
-const Person = S.Struct({
-  name: S.String,
-  age: S.Number
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.Number
 })
 
 const PersonPretty = Pretty.make(Person)
@@ -990,10 +992,9 @@ Output:
 You can customize the output using the `pretty` annotation:
 
 ```ts
-import * as Pretty from "@effect/schema/Pretty"
-import * as S from "@effect/schema/Schema"
+import { Pretty, Schema } from "@effect/schema"
 
-const schema = S.Number.annotations({
+const schema = Schema.Number.annotations({
   pretty: () => (n) => `my format: ${n}`
 })
 
@@ -1005,12 +1006,11 @@ console.log(Pretty.make(schema)(1)) // my format: 1
 The `make` function from the `@effect/schema/JSONSchema` module enables you to create a JSON Schema based on a defined schema:
 
 ```ts
-import * as JSONSchema from "@effect/schema/JSONSchema"
-import * as S from "@effect/schema/Schema"
+import { JSONSchema, Schema } from "@effect/schema"
 
-const Person = S.Struct({
-  name: S.String,
-  age: S.Number
+const Person = Schema.Struct({
+  name: Schema.NonEmpty,
+  age: Schema.Number
 })
 
 const jsonSchema = JSONSchema.make(Person)
@@ -1022,19 +1022,20 @@ Output:
   "$schema": "http://json-schema.org/draft-07/schema#",
   "type": "object",
   "required": [
-    "name",
-    "age"
+    "age",
+    "name"
   ],
   "properties": {
-    "name": {
-      "type": "string",
-      "description": "a string",
-      "title": "string"
-    },
     "age": {
       "type": "number",
       "description": "a number",
       "title": "number"
+    },
+    "name": {
+      "type": "string",
+      "description": "a non empty string",
+      "title": "NonEmpty",
+      "minLength": 1
     }
   },
   "additionalProperties": false
@@ -1042,19 +1043,64 @@ Output:
 */
 ```
 
-In this example, we have created a schema for a "Person" with a name (a string) and an age (a number). We then use the `JSONSchema.make` function to generate the corresponding JSON Schema.
+In this example, we have created a schema for a "Person" with a name (a non-empty string) and an age (a number). We then use the `JSONSchema.make` function to generate the corresponding JSON Schema.
+
+Note that `JSONSchema.make` attempts to produce the optimal JSON Schema for the input part of the decoding phase. This means that starting from the most nested schema, it traverses the chain, including each refinement, and stops at the first transformation found.
+
+For instance, if we modify the schema of the `age` field:
+
+```ts
+import { JSONSchema, Schema } from "@effect/schema"
+
+const Person = Schema.Struct({
+  name: Schema.NonEmpty,
+  age: Schema.Number.pipe(
+    // refinement, will be included in the generated JSON Schema
+    Schema.int(),
+    // transformation, will be excluded in the generated JSON Schema
+    Schema.clamp(1, 10)
+  )
+})
+
+const jsonSchema = JSONSchema.make(Person)
+
+console.log(JSON.stringify(jsonSchema, null, 2))
+```
+
+We can see that the new JSON Schema generated for the `age` field is of type `"integer"`, retaining the useful refinement (being an integer) and excluding the transformation (clamping between `1` and `10`):
+
+```json
+{
+  "$schema": "http://json-schema.org/draft-07/schema#",
+  "type": "object",
+  "required": ["name", "age"],
+  "properties": {
+    "name": {
+      "type": "string",
+      "description": "a non empty string",
+      "title": "NonEmpty",
+      "minLength": 1
+    },
+    "age": {
+      "type": "integer",
+      "description": "an integer",
+      "title": "integer"
+    }
+  },
+  "additionalProperties": false
+}
+```
 
 ### Identifier Annotations
 
 You can enhance your schemas with `identifier` annotations. If you do, your schema will be included within a "definitions" object property on the root and referenced from there:
 
 ```ts
-import * as JSONSchema from "@effect/schema/JSONSchema"
-import * as S from "@effect/schema/Schema"
+import { JSONSchema, Schema } from "@effect/schema"
 
-const Name = S.String.annotations({ identifier: "Name" })
-const Age = S.Number.annotations({ identifier: "Age" })
-const Person = S.Struct({
+const Name = Schema.String.annotations({ identifier: "Name" })
+const Age = Schema.Number.annotations({ identifier: "Age" })
+const Person = Schema.Struct({
   name: Name,
   age: Age
 })
@@ -1098,22 +1144,88 @@ Output:
 
 This technique helps organize your JSON Schema by creating separate definitions for each identifier annotated schema, making it more readable and maintainable.
 
+### Standard JSON Schema Annotations
+
+Standard JSON Schema annotations such as `title`, `description`, `default`, and `Examples` are supported:
+
+```ts
+import { JSONSchema, Schema } from "@effect/schema"
+
+const schema = Schema.Struct({
+  foo: Schema.optional(
+    Schema.String.annotations({
+      description: "an optional string field",
+      title: "foo",
+      examples: ["a", "b"]
+    }).pipe(Schema.compose(Schema.Trim)),
+    {
+      default: () => ""
+    }
+  ).annotations({ description: "a required, trimmed string field" })
+})
+
+// Generate a JSON Schema for the input part
+console.log(JSON.stringify(JSONSchema.make(schema), null, 2))
+/*
+Output:
+{
+  "$schema": "http://json-schema.org/draft-07/schema#",
+  "type": "object",
+  "required": [],
+  "properties": {
+    "foo": {
+      "type": "string",
+      "description": "an optional string field",
+      "title": "foo",
+      "examples": [
+        "a",
+        "b"
+      ]
+    }
+  },
+  "additionalProperties": false,
+  "title": "Struct (Encoded side)"
+}
+*/
+
+// Generate a JSON Schema for the output part
+console.log(JSON.stringify(JSONSchema.make(Schema.typeSchema(schema)), null, 2))
+/*
+{
+  "$schema": "http://json-schema.org/draft-07/schema#",
+  "type": "object",
+  "required": [
+    "foo"
+  ],
+  "properties": {
+    "foo": {
+      "type": "string",
+      "description": "a required string field",
+      "title": "Trimmed",
+      "pattern": "^.*[a-zA-Z0-9]+.*$"
+    }
+  },
+  "additionalProperties": false,
+  "title": "Struct (Type side)"
+}
+*/
+```
+
 ### Recursive and Mutually Recursive Schemas
 
 Recursive and mutually recursive schemas are supported, but in these cases, identifier annotations are **required**:
 
 ```ts
-import * as JSONSchema from "@effect/schema/JSONSchema"
-import * as S from "@effect/schema/Schema"
+import { JSONSchema, Schema } from "@effect/schema"
 
 interface Category {
   readonly name: string
   readonly categories: ReadonlyArray<Category>
 }
 
-const schema: S.Schema<Category> = S.Struct({
-  name: S.String,
-  categories: S.Array(S.suspend(() => schema))
+const schema: Schema.Schema<Category> = Schema.Struct({
+  name: Schema.String,
+  categories: Schema.Array(Schema.suspend(() => schema))
 }).annotations({ identifier: "Category" })
 
 const jsonSchema = JSONSchema.make(schema)
@@ -1155,54 +1267,99 @@ In the example above, we define a schema for a "Category" that can contain a "na
 
 This ensures that the JSON Schema properly handles the recursive structure and creates distinct definitions for each annotated schema, improving readability and maintainability.
 
-### JSON Schema Annotations
+### Custom JSON Schema Annotations
 
 When defining a **refinement** (e.g., through the `filter` function), you can attach a JSON Schema annotation to your schema containing a JSON Schema "fragment" related to this particular refinement. This fragment will be used to generate the corresponding JSON Schema. Note that if the schema consists of more than one refinement, the corresponding annotations will be merged.
 
+> Note:
+>
+> The `jsonSchema` property is intentionally defined as a generic object. This allows it to describe non-standard extensions.
+> As a result, the responsibility of enforcing type constraints is left to you, the user.
+> If you prefer stricter type enforcement or need to support non-standard extensions, you can introduce a `satisfies` constraint on the object literal. This constraint should be used in conjunction with the typing library of your choice.
+>
+> In the following example, we've used the `@types/json-schema` package to provide TypeScript definitions for JSON Schema. This approach not only ensures type correctness but also enables autocomplete suggestions in your IDE.
+
 ```ts
-import * as JSONSchema from "@effect/schema/JSONSchema"
-import * as S from "@effect/schema/Schema"
+import { JSONSchema, Schema } from "@effect/schema"
+import type { JSONSchema7 } from "json-schema"
+
 
 // Simulate one or more refinements
-const Positive = S.Number.pipe(
-  S.filter((n) => n > 0, {
-    jsonSchema: { minimum: 0 }
+const Positive = Schema.Number.pipe(
+  Schema.filter((n) => n > 0, {
+    jsonSchema: { minimum: 0 }, // `jsonSchema` is a generic object; you can add any key-value pair without type errors or autocomplete suggestions.
   })
 )
 
 const schema = Positive.pipe(
-  S.filter((n) => n <= 10, {
-    jsonSchema: { maximum: 10 }
+  Schema.filter((n) => n <= 10, {
+    jsonSchema: { maximum: 10 } satisfies JSONSchema7, //  Now `jsonSchema` is constrained to fulfill the JSONSchema7 type; incorrect properties will trigger type errors, and you'll get autocomplete suggestions.
   })
 )
 
-console.log(JSONSchema.make(schema))
+const jsonSchema = JSONSchema.make(schema)
+
+console.log(JSON.stringify(jsonSchema, null, 2))
 /*
 Output:
 {
-  '$schema': 'http://json-schema.org/draft-07/schema#',
-  type: 'number',
-  description: 'a number',
-  title: 'number',
-  minimum: 0,
-  maximum: 10
+  "$schema": "http://json-schema.org/draft-07/schema#",
+  "type": "number",
+  "description": "a number",
+  "title": "number",
+  "minimum": 0,
+  "maximum": 10
 }
 */
 ```
 
-As seen in the example, the JSON Schema annotations are merged with the base JSON Schema from `S.Number`. This approach helps handle multiple refinements while maintaining clarity in your code.
+For all other types of schema that are not refinements, the content of the annotation is used and overrides anything the system would have generated by default:
+
+```ts
+import { JSONSchema, Schema } from "@effect/schema"
+
+const schema = Schema.Struct({ foo: Schema.String }).annotations({
+  jsonSchema: { type: "object" }
+})
+
+const jsonSchema = JSONSchema.make(schema)
+
+console.log(JSON.stringify(jsonSchema, null, 2))
+/*
+Output
+{
+  "$schema": "http://json-schema.org/draft-07/schema#",
+  "type": "object"
+}
+the default would be:
+{
+  "$schema": "http://json-schema.org/draft-07/schema#",
+  "type": "object",
+  "required": [
+    "foo"
+  ],
+  "properties": {
+    "foo": {
+      "type": "string",
+      "description": "a string",
+      "title": "string"
+    }
+  },
+  "additionalProperties": false
+}
+*/
+```
 
 ## Generating Equivalences
 
 The `make` function, which is part of the `@effect/schema/Equivalence` module, allows you to generate an [Equivalence](https://effect-ts.github.io/effect/schema/Equivalence.ts.html) based on a schema definition:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as Equivalence from "@effect/schema/Equivalence"
+import { Equivalence, Schema } from "@effect/schema"
 
-const Person = S.Struct({
-  name: S.String,
-  age: S.Number
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.Number
 })
 
 // $ExpectType Equivalence<{ readonly name: string; readonly age: number; }>
@@ -1220,315 +1377,18 @@ console.log(PersonEquivalence(john, alice)) // Output: false
 You can customize the output using the `equivalence` annotation:
 
 ```ts
-import * as Equivalence from "@effect/schema/Equivalence"
-import * as S from "@effect/schema/Schema"
+import { Equivalence, Schema } from "@effect/schema"
 
-const schema = S.String.annotations({
+const schema = Schema.String.annotations({
   equivalence: () => (a, b) => a.at(0) === b.at(0)
 })
 
 console.log(Equivalence.make(schema)("aaa", "abb")) // Output: true
 ```
 
-# API Interfaces
-
-## What's an API Interface?
-
-An "API Interface" is an `interface` specifically defined for a schema exported from `@effect/schema` or for a particular API exported from `@effect/schema`. Let's see an example with a simple schema:
+# Basic Usage
 
-**Example** (an `Age` schema)
-
-```ts
-import * as S from "@effect/schema/Schema"
-
-// API interface
-interface Age extends S.Schema<number> {}
-
-const Age: Age = S.Number.pipe(S.between(0, 100))
-
-// type AgeType = number
-type AgeType = S.Schema.Type<typeof Age>
-// type AgeEncoded = number
-type AgeEncoded = S.Schema.Encoded<typeof Age>
-```
-
-The benefit is that when we hover over the `Age` schema, we see `Age` instead of `Schema<number, number, never>`. This is a small improvement if we only think about the `Age` schema, but as we'll see shortly, these improvements in schema visualization add up, resulting in a significant improvement in the readability of our schemas.
-
-Many of the built-in schemas exported from `@effect/schema` have been equipped with API interfaces, for example `number` or `never`.
-
-```ts
-import * as S from "@effect/schema/Schema"
-
-// const number: S.$Number
-S.Number
-
-// const never: S.Never
-S.Never
-```
-
-> [!NOTE]
-> Notice that we had to add a `$` suffix to the API interface name because we couldn't simply use "Number" since it's a reserved name for the TypeScript `Number` type.
-
-Now let's see an example with a combinator that, given an input schema for a certain type `A`, returns the schema of the pair `readonly [A, A]`:
-
-**Example** (a `pair` combinator)
-
-```ts
-import * as S from "@effect/schema/Schema"
-
-// API interface
-export interface pair<S extends S.Schema.Any>
-  extends S.Schema<
-    readonly [S.Schema.Type<S>, S.Schema.Type<S>],
-    readonly [S.Schema.Encoded<S>, S.Schema.Encoded<S>],
-    S.Schema.Context<S>
-  > {}
-
-// API
-export const pair = <S extends S.Schema.Any>(schema: S): pair<S> =>
-  S.Tuple(S.asSchema(schema), S.asSchema(schema))
-```
-
-> [!NOTE]
-> The `S.Schema.Any` helper represents any schema, except for `never`. For more information on the `asSchema` helper, refer to the following section "Understanding Opaque Names".
-
-If we try to use our `pair` combinator, we see that readability is also improved in this case:
-
-```ts
-// const Coords: pair<S.$Number>
-const Coords = pair(S.Number)
-```
-
-In hover, we simply see `pair<S.$Number>` instead of the verbose:
-
-```ts
-// const Coords: S.Schema<readonly [number, number], readonly [number, number], never>
-const Coords = S.Tuple(S.Number, S.Number)
-```
-
-The new name is not only shorter and more readable but also carries along the origin of the schema, which is a call to the `pair` combinator.
-
-## Understanding Opaque Names
-
-Opaque names generated in this way are very convenient, but sometimes there's a need to see what the underlying types are, perhaps for debugging purposes while you declare your schemas. At any time, you can use the `asSchema` function, which returns an `Schema<A, I, R>` compatible with your opaque definition:
-
-```ts
-// const Coords: pair<S.$Number>
-const Coords = pair(S.Number)
-
-// const NonOpaqueCoords: S.Schema<readonly [number, number], readonly [number, number], never>
-const NonOpaqueCoords = S.asSchema(Coords)
-```
-
-> [!NOTE]
-> The call to `asSchema` is negligible in terms of overhead since it's nothing more than a glorified identity function.
-
-Many of the built-in combinators exported from `@effect/schema` have been equipped with API interfaces, for example `struct`:
-
-```ts
-import * as S from "@effect/schema/Schema"
-
-/*
-const Person: S.Struct<{
-    name: S.$String;
-    age: S.$Number;
-}>
-*/
-const Person = S.Struct({
-  name: S.String,
-  age: S.Number
-})
-```
-
-In hover, we simply see:
-
-```ts
-const Person: S.Struct<{
-  name: S.$String
-  age: S.$Number
-}>
-```
-
-instead of the verbose:
-
-```ts
-const Person: S.Schema<
-  {
-    readonly name: string
-    readonly age: number
-  },
-  {
-    readonly name: string
-    readonly age: number
-  },
-  never
->
-```
-
-## Exposing Arguments
-
-The benefits of API interfaces don't end with better readability; in fact, the driving force behind the introduction of API interfaces arises more from the need to expose some important information about the schemas that users generate. Let's see some examples related to literals and structs:
-
-**Example** (exposed literals)
-
-Now when we define literals, we can retrieve them using the `literals` field exposed by the generated schema:
-
-```ts
-import * as S from "@effect/schema/Schema"
-
-// const myliterals: S.Literal<["A", "B"]>
-const myliterals = S.Literal("A", "B")
-
-// literals: readonly ["A", "B"]
-myliterals.literals
-
-console.log(myliterals.literals) // Output: [ 'A', 'B' ]
-```
-
-**Example** (exposed fields)
-
-Similarly to what we've seen for literals, when we define a struct, we can retrieve its `fields`:
-
-```ts
-import * as S from "@effect/schema/Schema"
-
-/*
-const Person: S.Struct<{
-    name: S.$String;
-    age: S.$Number;
-}>
-*/
-const Person = S.Struct({
-  name: S.String,
-  age: S.Number
-})
-
-/*
-fields: {
-    readonly name: S.$String;
-    readonly age: S.$Number;
-}
-*/
-Person.fields
-
-console.log(Person.fields)
-/*
-{
-  name: Schema {
-    ast: StringKeyword { _tag: 'StringKeyword', annotations: [Object] },
-    ...
-  },
-  age: Schema {
-    ast: NumberKeyword { _tag: 'NumberKeyword', annotations: [Object] },
-    ...
-  }
-}
-*/
-```
-
-Being able to retrieve the `fields` is particularly advantageous when you want to extend a struct with new fields; now you can do it simply using the spread operator:
-
-```ts
-import * as S from "@effect/schema/Schema"
-
-const Person = S.Struct({
-  name: S.String,
-  age: S.Number
-})
-
-/*
-const PersonWithId: S.Struct<{
-    id: S.$Number;
-    name: S.$String;
-    age: S.$Number;
-}>
-*/
-const PersonWithId = S.Struct({
-  ...Person.fields,
-  id: S.Number
-})
-```
-
-The list of APIs equipped with API interfaces is extensive; here we provide only the main ones just to give you an idea of the new development possibilities that have opened up:
-
-```ts
-import * as S from "@effect/schema/Schema"
-
-// ------------------------
-// array value
-// ------------------------
-
-// value: S.$String
-S.Array(S.String).value
-
-// ------------------------
-// record key and value
-// ------------------------
-
-// key: S.$String
-S.Record(S.String, S.Number).key
-// value: S.$Number
-S.Record(S.String, S.Number).value
-
-// ------------------------
-// union members
-// ------------------------
-
-// members: readonly [S.$String, S.$Number]
-S.Union(S.String, S.Number).members
-
-// ------------------------
-// tuple elements
-// ------------------------
-
-// elements: readonly [S.$String, S.$Number]
-S.Tuple(S.String, S.Number).elements
-```
-
-## Annotation Compatibility
-
-All the API interfaces equipped with schemas and built-in combinators are compatible with the `annotations` method, meaning that their type is not lost but remains the original one before annotation:
-
-```ts
-import * as S from "@effect/schema/Schema"
-
-// const Name: S.$String
-const Name = S.String.annotations({ identifier: "Name" })
-```
-
-As you can see, the type of `Name` is still `$String` and has not been lost, becoming `Schema<string, string, never>`.
-
-This doesn't happen by default with API interfaces defined in userland:
-
-```ts
-import * as S from "@effect/schema/Schema"
-
-// API interface
-interface Age extends S.Schema<number> {}
-
-const Age: Age = S.Number.pipe(S.between(0, 100))
-
-// const AnotherAge: S.Schema<number, number, never>
-const AnotherAge = Age.annotations({ identifier: "AnotherAge" })
-```
-
-However, the fix is very simple; just modify the definition of the `Age` API interface using the `Annotable` interface exported by `@effect/schema`:
-
-```ts
-import * as S from "@effect/schema/Schema"
-
-// API interface
-interface Age extends S.Annotable<Age, number> {}
-
-const Age: Age = S.Number.pipe(S.between(0, 100))
-
-// const AnotherAge: Age
-const AnotherAge = Age.annotations({ identifier: "AnotherAge" })
-```
-
-# Basic usage
-
-## Cheatsheet
+## Cheatsheet
 
 | Typescript Type                              | Description / Notes                      | Schema / Combinator                                       |
 | -------------------------------------------- | ---------------------------------------- | --------------------------------------------------------- |
@@ -1565,19 +1425,19 @@ const AnotherAge = Age.annotations({ identifier: "AnotherAge" })
 Here are the primitive schemas provided by the `@effect/schema/Schema` module:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-S.String // Schema<string>
-S.Number // Schema<number>
-S.Boolean // Schema<boolean>
-S.BigIntFromSelf // Schema<BigInt>
-S.SymbolFromSelf // Schema<symbol>
-S.Object // Schema<object>
-S.Undefined // Schema<undefined>
-S.Void // Schema<void>
-S.Any // Schema<any>
-S.Unknown // Schema<unknown>
-S.Never // Schema<never>
+Schema.String // Schema<string>
+Schema.Number // Schema<number>
+Schema.Boolean // Schema<boolean>
+Schema.BigIntFromSelf // Schema<BigInt>
+Schema.SymbolFromSelf // Schema<symbol>
+Schema.Object // Schema<object>
+Schema.Undefined // Schema<undefined>
+Schema.Void // Schema<void>
+Schema.Any // Schema<any>
+Schema.Unknown // Schema<unknown>
+Schema.Never // Schema<never>
 ```
 
 These primitive schemas are building blocks for creating more complex schemas to describe your data structures.
@@ -1587,42 +1447,42 @@ These primitive schemas are building blocks for creating more complex schemas to
 Literals in schemas represent specific values that are directly specified. Here are some examples of literal schemas provided by the `@effect/schema/Schema` module:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-S.Null // same as S.Literal(null)
-S.Literal("a")
-S.Literal("a", "b", "c") // union of literals
-S.Literal(1)
-S.Literal(2n) // BigInt literal
-S.Literal(true)
+Schema.Null // same as S.Literal(null)
+Schema.Literal("a")
+Schema.Literal("a", "b", "c") // union of literals
+Schema.Literal(1)
+Schema.Literal(2n) // BigInt literal
+Schema.Literal(true)
 ```
 
 We can also use `pickLiteral` with a literal schema to narrow down the possible values:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-S.Literal("a", "b", "c").pipe(S.pickLiteral("a", "b")) //same as S.Literal("a", "b")
+Schema.Literal("a", "b", "c").pipe(Schema.pickLiteral("a", "b")) // same as S.Literal("a", "b")
 ```
 
 Sometimes, we need to reuse a schema literal in other parts of our code. Let's see an example:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const FruitId = S.Number
+const FruitId = Schema.Number
 // the source of truth regarding the Fruit category
-const FruitCategory = S.Literal("sweet", "citrus", "tropical")
+const FruitCategory = Schema.Literal("sweet", "citrus", "tropical")
 
-const Fruit = S.Struct({
+const Fruit = Schema.Struct({
   id: FruitId,
   category: FruitCategory
 })
 
 // Here, we want to reuse our FruitCategory definition to create a subtype of Fruit
-const SweetAndCitrusFruit = S.Struct({
+const SweetAndCitrusFruit = Schema.Struct({
   fruitId: FruitId,
-  category: FruitCategory.pipe(S.pickLiteral("sweet", "citrus"))
+  category: FruitCategory.pipe(Schema.pickLiteral("sweet", "citrus"))
   /*
     By using pickLiteral from the FruitCategory, we ensure that the values selected
     are those defined in the category definition above.
@@ -1638,9 +1498,9 @@ In this example, `FruitCategory` serves as the source of truth for the categorie
 You can access the literals of a literal schema:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.Literal("a", "b")
+const schema = Schema.Literal("a", "b")
 
 // Accesses the literals
 const literals = schema.literals // readonly ["a", "b"]
@@ -1651,28 +1511,31 @@ const literals = schema.literals // readonly ["a", "b"]
 The `TemplateLiteral` constructor allows you to create a schema for a TypeScript template literal type.
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 // Schema<`a${string}`>
-S.TemplateLiteral(S.Literal("a"), S.String)
+Schema.TemplateLiteral(Schema.Literal("a"), Schema.String)
 
 // example from https://www.typescriptlang.org/docs/handbook/2/template-literal-types.html
-const EmailLocaleIDs = S.Literal("welcome_email", "email_heading")
-const FooterLocaleIDs = S.Literal("footer_title", "footer_sendoff")
+const EmailLocaleIDs = Schema.Literal("welcome_email", "email_heading")
+const FooterLocaleIDs = Schema.Literal("footer_title", "footer_sendoff")
 
 // Schema<"welcome_email_id" | "email_heading_id" | "footer_title_id" | "footer_sendoff_id">
-S.TemplateLiteral(S.Union(EmailLocaleIDs, FooterLocaleIDs), S.Literal("_id"))
+Schema.TemplateLiteral(
+  Schema.Union(EmailLocaleIDs, FooterLocaleIDs),
+  Schema.Literal("_id")
+)
 ```
 
 ## Unique Symbols
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 const mySymbol = Symbol.for("mysymbol")
 
 // const mySymbolSchema: S.Schema<typeof mySymbol>
-const mySymbolSchema = S.UniqueSymbolFromSelf(mySymbol)
+const mySymbolSchema = Schema.UniqueSymbolFromSelf(mySymbol)
 ```
 
 ## Filters
@@ -1682,86 +1545,124 @@ In the `@effect/schema/Schema` library, you can apply custom validation logic us
 You can define a custom validation check on any schema using the `filter` function. Here's a simple example:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const LongString = S.String.pipe(
-  S.filter((s) => s.length >= 10, {
-    message: () => "a string at least 10 characters long"
-  })
+const LongString = Schema.String.pipe(
+  Schema.filter((s) =>
+    s.length >= 10 ? undefined : "a string at least 10 characters long"
+  )
 )
 
-console.log(S.decodeUnknownSync(LongString)("a"))
+console.log(Schema.decodeUnknownSync(LongString)("a"))
 /*
 throws:
-Error: a string at least 10 characters long
+Error: { string | filter }
+└─ Predicate refinement failure
+   └─ a string at least 10 characters long
 */
 ```
 
-It's recommended to include as much metadata as possible for later introspection of the schema, such as an identifier, JSON schema representation, and a description:
+In the new signature of `filter`, the type of the predicate passed as an argument is as follows:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-
-const LongString = S.String.pipe(
-  S.filter((s) => s.length >= 10, {
-    message: () => "a string at least 10 characters long",
-    identifier: "LongString",
-    jsonSchema: { minLength: 10 },
-    description:
-      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
-  })
-)
+predicate: (a: A, options: ParseOptions, self: AST.Refinement) =>
+  undefined | boolean | string | ParseResult.ParseIssue
 ```
 
-For more complex scenarios, you can return an `Option<ParseError>` type instead of a boolean. In this context, `None` indicates success, and `Some(issue)` rejects the input with a specific error. Here's an example:
+with the following semantics:
+
+- `true` means the filter is successful.
+- `false` or `undefined` means the filter fails and no default message is set.
+- `string` means the filter fails and the returned string is used as the default message.
+- `ParseIssue` means the filter fails and the returned ParseIssue is used as an error.
+
+It's also recommended to include as much metadata as possible for later introspection of the schema, such as an identifier, JSON schema representation, and a description:
 
 ```ts
-import * as ParseResult from "@effect/schema/ParseResult"
-import * as S from "@effect/schema/Schema"
-import * as Option from "effect/Option"
+import { Schema } from "@effect/schema"
 
-const schema = S.Struct({ a: S.String, b: S.String }).pipe(
-  S.filter((o) =>
-    o.b === o.a
-      ? Option.none()
-      : Option.some(
-          new ParseResult.Type(
-            S.Literal(o.a).ast,
-            o.b,
-            `b ("${o.b}") should be equal to a ("${o.a}")`
-          )
-        )
+const LongString = Schema.String.pipe(
+  Schema.filter(
+    (s) =>
+      s.length >= 10 ? undefined : "a string at least 10 characters long",
+    {
+      identifier: "LongString",
+      jsonSchema: { minLength: 10 },
+      description:
+        "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
+    }
   )
 )
 
-console.log(S.decodeUnknownSync(schema)({ a: "foo", b: "bar" }))
+console.log(Schema.decodeUnknownSync(LongString)("a"))
 /*
 throws:
-Error: <refinement schema>
+Error: LongString
 └─ Predicate refinement failure
-   └─ b ("bar") should be equal to a ("foo")
+   └─ a string at least 10 characters long
 */
 ```
 
-> [!WARNING]
-> Please note that the use of filters do not alter the type of the `Schema`. They only serve to add additional constraints to the parsing process. If you intend to modify the `Type`, consider using [Branded types](#branded-types).
+For more complex scenarios, you can return a `ParseIssue`. Here's an example:
 
-### String Filters
+```ts
+import { ParseResult, Schema } from "@effect/schema"
+
+const schema = Schema.Struct({ a: Schema.String, b: Schema.String }).pipe(
+  Schema.filter((o) =>
+    o.b === o.a
+      ? undefined
+      : new ParseResult.Type(
+          Schema.Literal(o.a).ast,
+          o.b,
+          `b ("${o.b}") should be equal to a ("${o.a}")`
+        )
+  )
+)
+
+console.log(Schema.decodeUnknownSync(schema)({ a: "foo", b: "bar" }))
+/*
+throws:
+Error: { { readonly a: string; readonly b: string } | filter }
+└─ Predicate refinement failure
+   └─ b ("bar") should be equal to a ("foo")
+*/
+```
+
+> [!WARNING]
+> Please note that the use of filters do not alter the type of the `Schema`. They only serve to add additional constraints to the parsing process. If you intend to modify the `Type`, consider using [Branded types](#branded-types).
+
+### Exposed Values
+
+You can access the base schema for which the filter has been defined:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
+
+const LongString = Schema.String.pipe(Schema.filter((s) => s.length >= 10))
+
+// const From: typeof Schema.String
+const From = LongString.from
+```
 
-S.String.pipe(S.maxLength(5)) // Specifies maximum length of a string
-S.String.pipe(S.minLength(5)) // Specifies minimum length of a string
-S.NonEmpty // Equivalent to ensuring the string has a minimum length of 1
-S.String.pipe(S.length(5)) // Specifies exact length of a string
-S.String.pipe(S.length({ min: 2, max: 4 })) // Specifies a range for the length of a string
-S.String.pipe(S.pattern(regex)) // Matches a string against a regular expression pattern
-S.String.pipe(S.startsWith(string)) // Ensures a string starts with a specific substring
-S.String.pipe(S.endsWith(string)) // Ensures a string ends with a specific substring
-S.String.pipe(S.includes(searchString)) // Checks if a string includes a specific substring
-S.String.pipe(S.trimmed()) // Validates that a string has no leading or trailing whitespaces
-S.String.pipe(S.lowercased()) // Validates that a string is entirely in lowercase
+In this example, you're able to access the original schema (`Schema.String`) for which the filter (`LongString`) has been defined. The `from` property provides access to this base schema.
+
+### String Filters
+
+```ts
+import { Schema } from "@effect/schema"
+
+Schema.String.pipe(Schema.maxLength(5)) // Specifies maximum length of a string
+Schema.String.pipe(Schema.minLength(5)) // Specifies minimum length of a string
+Schema.NonEmpty // Equivalent to ensuring the string has a minimum length of 1
+Schema.String.pipe(Schema.length(5)) // Specifies exact length of a string
+Schema.String.pipe(Schema.length({ min: 2, max: 4 })) // Specifies a range for the length of a string
+Schema.String.pipe(Schema.pattern(regex)) // Matches a string against a regular expression pattern
+Schema.String.pipe(Schema.startsWith(string)) // Ensures a string starts with a specific substring
+Schema.String.pipe(Schema.endsWith(string)) // Ensures a string ends with a specific substring
+Schema.String.pipe(Schema.includes(searchString)) // Checks if a string includes a specific substring
+Schema.String.pipe(Schema.trimmed()) // Validates that a string has no leading or trailing whitespaces
+Schema.String.pipe(Schema.lowercased()) // Validates that a string is entirely in lowercase
 ```
 
 > [!NOTE]
@@ -1770,84 +1671,88 @@ S.String.pipe(S.lowercased()) // Validates that a string is entirely in lowercas
 ### Number Filters
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-S.Number.pipe(S.greaterThan(5)) // Specifies a number greater than 5
-S.Number.pipe(S.greaterThanOrEqualTo(5)) // Specifies a number greater than or equal to 5
-S.Number.pipe(S.lessThan(5)) // Specifies a number less than 5
-S.Number.pipe(S.lessThanOrEqualTo(5)) // Specifies a number less than or equal to 5
-S.Number.pipe(S.between(-2, 2)) // Specifies a number between -2 and 2, inclusive
+Schema.Number.pipe(Schema.greaterThan(5)) // Specifies a number greater than 5
+Schema.Number.pipe(Schema.greaterThanOrEqualTo(5)) // Specifies a number greater than or equal to 5
+Schema.Number.pipe(Schema.lessThan(5)) // Specifies a number less than 5
+Schema.Number.pipe(Schema.lessThanOrEqualTo(5)) // Specifies a number less than or equal to 5
+Schema.Number.pipe(Schema.between(-2, 2)) // Specifies a number between -2 and 2, inclusive
 
-S.Number.pipe(S.int()) // Specifies that the value must be an integer
+Schema.Number.pipe(Schema.int()) // Specifies that the value must be an integer
 
-S.Number.pipe(S.nonNaN()) // Ensures the value is not NaN
-S.Number.pipe(S.finite()) // Ensures the value is finite and not Infinity or -Infinity
+Schema.Number.pipe(Schema.nonNaN()) // Ensures the value is not NaN
+Schema.Number.pipe(Schema.finite()) // Ensures the value is finite and not Infinity or -Infinity
 
-S.Number.pipe(S.positive()) // Specifies a positive number (> 0)
-S.Number.pipe(S.nonNegative()) // Specifies a non-negative number (>= 0)
-S.Number.pipe(S.negative()) // Specifies a negative number (< 0)
-S.Number.pipe(S.nonPositive()) // Specifies a non-positive number (<= 0)
+Schema.Number.pipe(Schema.positive()) // Specifies a positive number (> 0)
+Schema.Number.pipe(Schema.nonNegative()) // Specifies a non-negative number (>= 0)
+Schema.Number.pipe(Schema.negative()) // Specifies a negative number (< 0)
+Schema.Number.pipe(Schema.nonPositive()) // Specifies a non-positive number (<= 0)
 
-S.Number.pipe(S.multipleOf(5)) // Specifies a number that is evenly divisible by 5
+Schema.Number.pipe(Schema.multipleOf(5)) // Specifies a number that is evenly divisible by 5
 ```
 
 ### BigInt Filters
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-S.BigInt.pipe(S.greaterThanBigInt(5n)) // Specifies a BigInt greater than 5
-S.BigInt.pipe(S.greaterThanOrEqualToBigInt(5n)) // Specifies a BigInt greater than or equal to 5
-S.BigInt.pipe(S.lessThanBigInt(5n)) // Specifies a BigInt less than 5
-S.BigInt.pipe(S.lessThanOrEqualToBigInt(5n)) // Specifies a BigInt less than or equal to 5
-S.BigInt.pipe(S.betweenBigInt(-2n, 2n)) // Specifies a BigInt between -2 and 2, inclusive
+Schema.BigInt.pipe(Schema.greaterThanBigInt(5n)) // Specifies a BigInt greater than 5
+Schema.BigInt.pipe(Schema.greaterThanOrEqualToBigInt(5n)) // Specifies a BigInt greater than or equal to 5
+Schema.BigInt.pipe(Schema.lessThanBigInt(5n)) // Specifies a BigInt less than 5
+Schema.BigInt.pipe(Schema.lessThanOrEqualToBigInt(5n)) // Specifies a BigInt less than or equal to 5
+Schema.BigInt.pipe(Schema.betweenBigInt(-2n, 2n)) // Specifies a BigInt between -2 and 2, inclusive
 
-S.BigInt.pipe(S.positiveBigInt()) // Specifies a positive BigInt (> 0n)
-S.BigInt.pipe(S.nonNegativeBigInt()) // Specifies a non-negative BigInt (>= 0n)
-S.BigInt.pipe(S.negativeBigInt()) // Specifies a negative BigInt (< 0n)
-S.BigInt.pipe(S.nonPositiveBigInt()) // Specifies a non-positive BigInt (<= 0n)
+Schema.BigInt.pipe(Schema.positiveBigInt()) // Specifies a positive BigInt (> 0n)
+Schema.BigInt.pipe(Schema.nonNegativeBigInt()) // Specifies a non-negative BigInt (>= 0n)
+Schema.BigInt.pipe(Schema.negativeBigInt()) // Specifies a negative BigInt (< 0n)
+Schema.BigInt.pipe(Schema.nonPositiveBigInt()) // Specifies a non-positive BigInt (<= 0n)
 ```
 
 ### BigDecimal Filters
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as BigDecimal from "effect/BigDecimal"
-
-S.BigDecimal.pipe(S.greaterThanBigDecimal(BigDecimal.fromNumber(5))) // Specifies a BigDecimal greater than 5
-S.BigDecimal.pipe(S.greaterThanOrEqualToBigDecimal(BigDecimal.fromNumber(5))) // Specifies a BigDecimal greater than or equal to 5
-S.BigDecimal.pipe(S.lessThanBigDecimal(BigDecimal.fromNumber(5))) // Specifies a BigDecimal less than 5
-S.BigDecimal.pipe(S.lessThanOrEqualToBigDecimal(BigDecimal.fromNumber(5))) // Specifies a BigDecimal less than or equal to 5
-S.BigDecimal.pipe(
-  S.betweenBigDecimal(BigDecimal.fromNumber(-2), BigDecimal.fromNumber(2))
+import { Schema } from "@effect/schema"
+import { BigDecimal } from "effect"
+
+Schema.BigDecimal.pipe(Schema.greaterThanBigDecimal(BigDecimal.fromNumber(5))) // Specifies a BigDecimal greater than 5
+Schema.BigDecimal.pipe(
+  Schema.greaterThanOrEqualToBigDecimal(BigDecimal.fromNumber(5))
+) // Specifies a BigDecimal greater than or equal to 5
+Schema.BigDecimal.pipe(Schema.lessThanBigDecimal(BigDecimal.fromNumber(5))) // Specifies a BigDecimal less than 5
+Schema.BigDecimal.pipe(
+  Schema.lessThanOrEqualToBigDecimal(BigDecimal.fromNumber(5))
+) // Specifies a BigDecimal less than or equal to 5
+Schema.BigDecimal.pipe(
+  Schema.betweenBigDecimal(BigDecimal.fromNumber(-2), BigDecimal.fromNumber(2))
 ) // Specifies a BigDecimal between -2 and 2, inclusive
 
-S.BigDecimal.pipe(S.positiveBigDecimal()) // Specifies a positive BigDecimal (> 0)
-S.BigDecimal.pipe(S.nonNegativeBigDecimal()) // Specifies a non-negative BigDecimal (>= 0)
-S.BigDecimal.pipe(S.negativeBigDecimal()) // Specifies a negative BigDecimal (< 0)
-S.BigDecimal.pipe(S.nonPositiveBigDecimal()) // Specifies a non-positive BigDecimal (<= 0)
+Schema.BigDecimal.pipe(Schema.positiveBigDecimal()) // Specifies a positive BigDecimal (> 0)
+Schema.BigDecimal.pipe(Schema.nonNegativeBigDecimal()) // Specifies a non-negative BigDecimal (>= 0)
+Schema.BigDecimal.pipe(Schema.negativeBigDecimal()) // Specifies a negative BigDecimal (< 0)
+Schema.BigDecimal.pipe(Schema.nonPositiveBigDecimal()) // Specifies a non-positive BigDecimal (<= 0)
 ```
 
 ### Duration Filters
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-S.Duration.pipe(S.greaterThanDuration("5 seconds")) // Specifies a duration greater than 5 seconds
-S.Duration.pipe(S.greaterThanOrEqualToDuration("5 seconds")) // Specifies a duration greater than or equal to 5 seconds
-S.Duration.pipe(S.lessThanDuration("5 seconds")) // Specifies a duration less than 5 seconds
-S.Duration.pipe(S.lessThanOrEqualToDuration("5 seconds")) // Specifies a duration less than or equal to 5 seconds
-S.Duration.pipe(S.betweenDuration("5 seconds", "10 seconds")) // Specifies a duration between 5 seconds and 10 seconds, inclusive
+Schema.Duration.pipe(Schema.greaterThanDuration("5 seconds")) // Specifies a duration greater than 5 seconds
+Schema.Duration.pipe(Schema.greaterThanOrEqualToDuration("5 seconds")) // Specifies a duration greater than or equal to 5 seconds
+Schema.Duration.pipe(Schema.lessThanDuration("5 seconds")) // Specifies a duration less than 5 seconds
+Schema.Duration.pipe(Schema.lessThanOrEqualToDuration("5 seconds")) // Specifies a duration less than or equal to 5 seconds
+Schema.Duration.pipe(Schema.betweenDuration("5 seconds", "10 seconds")) // Specifies a duration between 5 seconds and 10 seconds, inclusive
 ```
 
 ### Array Filters
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-S.Array(S.Number).pipe(S.maxItems(2)) // Specifies the maximum number of items in the array
-S.Array(S.Number).pipe(S.minItems(2)) // Specifies the minimum number of items in the array
-S.Array(S.Number).pipe(S.itemsCount(2)) // Specifies the exact number of items in the array
+Schema.Array(Schema.Number).pipe(Schema.maxItems(2)) // Specifies the maximum number of items in the array
+Schema.Array(Schema.Number).pipe(Schema.minItems(2)) // Specifies the minimum number of items in the array
+Schema.Array(Schema.Number).pipe(Schema.itemsCount(2)) // Specifies the exact number of items in the array
 ```
 
 ## Branded types
@@ -1870,9 +1775,9 @@ In the above example, `UserId` and `Username` are both aliases for the same type
 To avoid these kinds of issues, the `@effect` ecosystem provides a way to create custom types with a unique identifier attached to them. These are known as "branded types".
 
 ```ts
-import type * as B from "effect/Brand"
+import { Brand } from "effect"
 
-type UserId = string & B.Brand<"UserId">
+type UserId = string & Brand.Brand<"UserId">
 type Username = string
 
 const getUser = (id: UserId) => { ... }
@@ -1894,20 +1799,22 @@ There are two ways to define a schema for a branded type, depending on whether y
 To define a schema for a branded type from scratch, you can use the `brand` combinator exported by the `@effect/schema/Schema` module. Here's an example:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const UserId = S.String.pipe(S.brand("UserId"))
-type UserId = S.Schema.Type<typeof UserId> // string & Brand<"UserId">
+const UserId = Schema.String.pipe(Schema.brand("UserId"))
+type UserId = Schema.Schema.Type<typeof UserId> // string & Brand<"UserId">
 ```
 
 Note that you can use `unique symbol`s as brands to ensure uniqueness across modules / packages:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 const UserIdBrand = Symbol.for("UserId")
-const UserId = S.String.pipe(S.brand(UserIdBrand))
-type UserId = S.Schema.Type<typeof UserId> // string & Brand<typeof UserIdBrand>
+const UserId = Schema.String.pipe(Schema.brand(UserIdBrand))
+
+// string & Brand<typeof UserIdBrand>
+type UserId = Schema.Schema.Type<typeof UserId>
 ```
 
 ### Reusing an existing branded type
@@ -1915,30 +1822,29 @@ type UserId = S.Schema.Type<typeof UserId> // string & Brand<typeof UserIdBrand>
 If you have already defined a branded type using the `effect/Brand` module, you can reuse it to define a schema using the `fromBrand` combinator exported by the `@effect/schema/Schema` module. Here's an example:
 
 ```ts
-import * as B from "effect/Brand"
+import { Schema } from "@effect/schema"
+import { Brand } from "effect"
 
 // the existing branded type
-type UserId = string & B.Brand<"UserId">
-const UserId = B.nominal<UserId>()
-
-import * as S from "@effect/schema/Schema"
+type UserId = string & Brand.Brand<"UserId">
+const UserId = Brand.nominal<UserId>()
 
 // Define a schema for the branded type
-const UserIdSchema = S.String.pipe(S.fromBrand(UserId))
+const UserIdSchema = Schema.String.pipe(Schema.fromBrand(UserId))
 ```
 
 ## Native enums
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 enum Fruits {
   Apple,
   Banana
 }
 
-// S.enums<typeof Fruits>
-S.Enums(Fruits)
+// Schema.Enums<typeof Fruits>
+const schema = Schema.Enums(Fruits)
 ```
 
 ### Accessing Enum Members
@@ -1947,24 +1853,24 @@ Enums are exposed under an `enums` property of the schema:
 
 ```ts
 // Access the enum members
-S.Enums(Fruits).enums // Returns all enum members
-S.Enums(Fruits).enums.Apple // Access the Apple member
-S.Enums(Fruits).enums.Banana // Access the Banana member
+Schema.Enums(Fruits).enums // Returns all enum members
+Schema.Enums(Fruits).enums.Apple // Access the Apple member
+Schema.Enums(Fruits).enums.Banana // Access the Banana member
 ```
 
 ## Nullables
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 // Represents a schema for a string or null value
-S.NullOr(S.String)
+Schema.NullOr(Schema.String)
 
 // Represents a schema for a string, null, or undefined value
-S.NullishOr(S.String)
+Schema.NullishOr(Schema.String)
 
 // Represents a schema for a string or undefined value
-S.UndefinedOr(S.String)
+Schema.UndefinedOr(Schema.String)
 ```
 
 ## Unions
@@ -1972,10 +1878,10 @@ S.UndefinedOr(S.String)
 `@effect/schema/Schema` includes a built-in `union` combinator for composing "OR" types.
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 // Schema<string | number>
-S.Union(S.String, S.Number)
+Schema.Union(S.String, S.Number)
 ```
 
 ### Union of Literals
@@ -1983,19 +1889,23 @@ S.Union(S.String, S.Number)
 While the following is perfectly acceptable:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 // Schema<"a" | "b" | "c">
-const schema = S.Union(S.Literal("a"), S.Literal("b"), S.Literal("c"))
+const schema = Schema.Union(
+  Schema.Literal("a"),
+  Schema.Literal("b"),
+  Schema.Literal("c")
+)
 ```
 
 It is possible to use `Literal` and pass multiple literals, which is less cumbersome:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 // Schema<"a" | "b" | "c">
-const schema = S.Literal("a", "b", "c")
+const schema = Schema.Literal("a", "b", "c")
 ```
 
 Under the hood, they are the same, as `Literal(...literals)` will be converted into a union.
@@ -2027,19 +1937,19 @@ type Shape = Circle | Square
 This code defines a discriminated union using the `@effect/schema` library:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const Circle = S.Struct({
-  kind: S.Literal("circle"),
-  radius: S.Number
+const Circle = Schema.Struct({
+  kind: Schema.Literal("circle"),
+  radius: Schema.Number
 })
 
-const Square = S.Struct({
-  kind: S.Literal("square"),
-  sideLength: S.Number
+const Square = Schema.Struct({
+  kind: Schema.Literal("square"),
+  sideLength: Schema.Number
 })
 
-const Shape = S.Union(Circle, Square)
+const Shape = Schema.Union(Circle, Square)
 ```
 
 The `Literal` combinator is used to define the discriminant property with a specific string literal value.
@@ -2053,17 +1963,17 @@ Finally, the `union` combinator is used to create a schema for the discriminated
 If you're working on a TypeScript project and you've defined a simple union to represent a particular input, you may find yourself in a situation where you're not entirely happy with how it's set up. For example, let's say you've defined a `Shape` union as a combination of `Circle` and `Square` without any special property:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const Circle = S.Struct({
-  radius: S.Number
+const Circle = Schema.Struct({
+  radius: Schema.Number
 })
 
-const Square = S.Struct({
-  sideLength: S.Number
+const Square = Schema.Struct({
+  sideLength: Schema.Number
 })
 
-const Shape = S.Union(Circle, Square)
+const Shape = Schema.Union(Circle, Square)
 ```
 
 To make your code more manageable, you may want to transform the simple union into a discriminated union. This way, TypeScript will be able to automatically determine which member of the union you're working with based on the value of a specific property.
@@ -2071,21 +1981,21 @@ To make your code more manageable, you may want to transform the simple union in
 To achieve this, you can add a special property to each member of the union, which will allow TypeScript to know which type it's dealing with at runtime. Here's how you can transform the `Shape` schema into another schema that represents a discriminated union:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 import * as assert from "node:assert"
 
-const Circle = S.Struct({
-  radius: S.Number
+const Circle = Schema.Struct({
+  radius: Schema.Number
 })
 
-const Square = S.Struct({
-  sideLength: S.Number
+const Square = Schema.Struct({
+  sideLength: Schema.Number
 })
 
-const DiscriminatedShape = S.Union(
+const DiscriminatedShape = Schema.Union(
   Circle.pipe(
-    S.transform(
-      S.Struct({ ...Circle.fields, kind: S.Literal("circle") }), // Add a "kind" property with the literal value "circle" to Circle
+    Schema.transform(
+      Schema.Struct({ ...Circle.fields, kind: Schema.Literal("circle") }), // Add a "kind" property with the literal value "circle" to Circle
       {
         decode: (circle) => ({ ...circle, kind: "circle" as const }), // Add the discriminant property to Circle
         encode: ({ kind: _kind, ...rest }) => rest // Remove the discriminant property
@@ -2093,8 +2003,8 @@ const DiscriminatedShape = S.Union(
     )
   ),
   Square.pipe(
-    S.transform(
-      S.Struct({ ...Square.fields, kind: S.Literal("square") }), // Add a "kind" property with the literal value "square" to Square
+    Schema.transform(
+      Schema.Struct({ ...Square.fields, kind: Schema.Literal("square") }), // Add a "kind" property with the literal value "square" to Square
       {
         decode: (square) => ({ ...square, kind: "square" as const }), // Add the discriminant property to Square
         encode: ({ kind: _kind, ...rest }) => rest // Remove the discriminant property
@@ -2104,7 +2014,7 @@ const DiscriminatedShape = S.Union(
 )
 
 assert.deepStrictEqual(
-  S.decodeUnknownSync(DiscriminatedShape)({ radius: 10 }),
+  Schema.decodeUnknownSync(DiscriminatedShape)({ radius: 10 }),
   {
     kind: "circle",
     radius: 10
@@ -2112,7 +2022,7 @@ assert.deepStrictEqual(
 )
 
 assert.deepStrictEqual(
-  S.decodeUnknownSync(DiscriminatedShape)({ sideLength: 10 }),
+  Schema.decodeUnknownSync(DiscriminatedShape)({ sideLength: 10 }),
   {
     kind: "square",
     sideLength: 10
@@ -2123,19 +2033,19 @@ assert.deepStrictEqual(
 The previous solution works perfectly and shows how we can add and remove properties to our schema at will, making it easier to consume the result within our domain model. However, it requires a lot of boilerplate. Fortunately, there is an API called `attachPropertySignature` designed specifically for this use case, which allows us to achieve the same result with much less effort:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 import * as assert from "node:assert"
 
-const Circle = S.Struct({ radius: S.Number })
-const Square = S.Struct({ sideLength: S.Number })
-const DiscriminatedShape = S.Union(
-  Circle.pipe(S.attachPropertySignature("kind", "circle")),
-  Square.pipe(S.attachPropertySignature("kind", "square"))
+const Circle = Schema.Struct({ radius: Schema.Number })
+const Square = Schema.Struct({ sideLength: Schema.Number })
+const DiscriminatedShape = Schema.Union(
+  Circle.pipe(Schema.attachPropertySignature("kind", "circle")),
+  Square.pipe(Schema.attachPropertySignature("kind", "square"))
 )
 
 // decoding
 assert.deepStrictEqual(
-  S.decodeUnknownSync(DiscriminatedShape)({ radius: 10 }),
+  Schema.decodeUnknownSync(DiscriminatedShape)({ radius: 10 }),
   {
     kind: "circle",
     radius: 10
@@ -2144,7 +2054,7 @@ assert.deepStrictEqual(
 
 // encoding
 assert.deepStrictEqual(
-  S.encodeSync(DiscriminatedShape)({
+  Schema.encodeSync(DiscriminatedShape)({
     kind: "circle",
     radius: 10
   }),
@@ -2157,12 +2067,12 @@ assert.deepStrictEqual(
 You can access the members of a union schema:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.Union(S.String, S.Number)
+const schema = Schema.Union(Schema.String, Schema.Number)
 
 // Accesses the members of the union
-const members = schema.members // readonly [S.$String, S.$Number]
+const members = schema.members // [typeof Schema.String, typeof Schema.Number]
 ```
 
 ## Tuples
@@ -2172,25 +2082,25 @@ const members = schema.members // readonly [S.$String, S.$Number]
 To define a tuple with required elements, you simply specify the list of elements:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// const opaque: S.Tuple<[S.$String, S.$Number]>
-const opaque = S.Tuple(S.String, S.Number)
+// const opaque: Schema.Tuple<[typeof Schema.String, typeof Schema.Number]>
+const opaque = Schema.Tuple(Schema.String, Schema.Number)
 
-// const nonOpaque: S.Schema<readonly [string, number], readonly [string, number], never>
-const nonOpaque = S.asSchema(opaque)
+// const nonOpaque: Schema.Schema<readonly [string, number], readonly [string, number], never>
+const nonOpaque = Schema.asSchema(opaque)
 ```
 
 ### Append a required element
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// Schema<readonly [string, number]>
-const tuple1 = S.Tuple(S.String, S.Number)
+// Schema.Tuple<[typeof Schema.String, typeof Schema.Number]>
+const tuple1 = Schema.Tuple(Schema.String, Schema.Number)
 
-// Schema<readonly [string, number, boolean]>
-const tuple2 = S.Tuple(...tuple1.elements, S.Boolean)
+// Schema.Tuple<[typeof Schema.String, typeof Schema.Number, typeof Schema.Boolean]>
+const tuple2 = Schema.Tuple(...tuple1.elements, Schema.Boolean)
 ```
 
 ### Optional Elements
@@ -2198,13 +2108,16 @@ const tuple2 = S.Tuple(...tuple1.elements, S.Boolean)
 To define an optional element, wrap the schema of the element with the `OptionalElement` modifier:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// const opaque: S.Tuple<[S.$String, S.OptionalElement<S.$Number>]>
-const opaque = S.Tuple(S.String, S.optionalElement(S.Number))
+// Schema.Tuple<[typeof Schema.String, Schema.OptionalElement<typeof Schema.Number>]>
+const opaque = Schema.Tuple(
+  Schema.String,
+  Schema.optionalElement(Schema.Number)
+)
 
-// const nonOpaque: S.Schema<readonly [string, number?], readonly [string, number?], never>
-const nonOpaque = S.asSchema(opaque)
+// Schema.Schema<readonly [string, number?], readonly [string, number?], never>
+const nonOpaque = Schema.asSchema(opaque)
 ```
 
 ### Rest Element
@@ -2212,29 +2125,32 @@ const nonOpaque = S.asSchema(opaque)
 To define rest elements, follow the list of elements (required or optional) with an element for the rest:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// const opaque: S.TupleType<readonly [S.$String, S.OptionalElement<S.$Number>], [S.$Boolean]>
-const opaque = S.Tuple([S.String, S.optionalElement(S.Number)], S.Boolean)
+// Schema.TupleType<readonly [typeof Schema.String, Schema.OptionalElement<typeof Schema.Number>], [typeof Schema.Boolean]>
+const opaque = Schema.Tuple(
+  [Schema.String, Schema.optionalElement(Schema.Number)],
+  Schema.Boolean
+)
 
-// const nonOpaque: S.Schema<readonly [string, number?, ...boolean[]], readonly [string, number?, ...boolean[]], never>
-const nonOpaque = S.asSchema(opaque)
+// Schema.Schema<readonly [string, number?, ...boolean[]], readonly [string, number?, ...boolean[]], never>
+const nonOpaque = Schema.asSchema(opaque)
 ```
 
 Optionally, you can include other elements after the rest:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// const opaque: S.TupleType<readonly [S.$String, S.OptionalElement<S.$Number>], [S.$Boolean, S.$String]>
-const opaque = S.Tuple(
-  [S.String, S.optionalElement(S.Number)],
-  S.Boolean,
-  S.String
+// Schema.TupleType<readonly [typeof Schema.String, Schema.OptionalElement<typeof Schema.Number>], [typeof Schema.Boolean, typeof Schema.String]>
+const opaque = Schema.Tuple(
+  [Schema.String, Schema.optionalElement(Schema.Number)],
+  Schema.Boolean,
+  Schema.String
 )
 
-// const nonOpaque: S.Schema<readonly [string, number | undefined, ...boolean[], string], readonly [string, number | undefined, ...boolean[], string], never>
-const nonOpaque = S.asSchema(opaque)
+// Schema.Schema<readonly [string, number | undefined, ...boolean[], string], readonly [string, number | undefined, ...boolean[], string], never>
+const nonOpaque = Schema.asSchema(opaque)
 ```
 
 ### Exposed Values
@@ -2242,31 +2158,31 @@ const nonOpaque = S.asSchema(opaque)
 You can access the elements and rest elements of a tuple schema:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.Tuple(
-  [S.String, S.optionalElement(S.Number)],
-  S.Boolean,
-  S.Number
+const schema = Schema.Tuple(
+  [Schema.String, Schema.optionalElement(Schema.Number)],
+  Schema.Boolean,
+  Schema.Number
 )
 
 // Accesses the elements of the tuple
-const tupleElements = schema.elements // readonly [S.$String, S.OptionalElement<S.$Number>]
+const tupleElements = schema.elements // readonly [typeof Schema.String, Schema.OptionalElement<typeof Schema.Number>]
 
 // Accesses the rest elements of the tuple
-const restElements = schema.rest // readonly [S.$Boolean, S.$Number]
+const restElements = schema.rest // readonly [typeof Schema.Boolean, typeof Schema.Number]
 ```
 
 ## Arrays
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// S.$Array<S.$Number>
-const opaque = S.Array(S.Number)
+// Schema.Array$<typeof Schema.Number>
+const opaque = Schema.Array(Schema.Number)
 
-// S.Schema<readonly number[]>
-const schema = S.asSchema(opaque)
+// Schema.Schema<readonly number[], readonly number[], never>
+const schema = Schema.asSchema(opaque)
 ```
 
 ### Exposed Values
@@ -2274,38 +2190,38 @@ const schema = S.asSchema(opaque)
 You can access the value of an array schema:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.Array(S.String)
+const schema = Schema.Array(Schema.String)
 
 // Accesses the value
-const value = schema.value // S.$String
+const value = schema.value // typeof Schema.String
 ```
 
 ### Mutable Arrays
 
-By default, when you use `S.Array`, it generates a type marked as readonly. The `Mutable` combinator is a useful function for creating a new schema with a mutable type in a **shallow** manner:
+By default, when you use `S.Array`, it generates a type marked as readonly. The `mutable` combinator is a useful function for creating a new schema with a mutable type in a **shallow** manner:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// S.mutable<S.$Array<S.$Number>>
-const opaque = S.mutable(S.Array(S.Number))
+// Schema.mutable<Schema.Array$<typeof Schema.Number>>
+const opaque = Schema.mutable(Schema.Array(Schema.Number))
 
-// S.Schema<number[]>
-const schema = S.asSchema(opaque)
+// Schema.Schema<number[], number[], never>
+const schema = Schema.asSchema(opaque)
 ```
 
 ### Non empty arrays
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// S.NonEmptyArray<S.$Number>
-const opaque = S.NonEmptyArray(S.Number)
+// Schema.NonEmptyArray<typeof Schema.Number>
+const opaque = Schema.NonEmptyArray(Schema.Number)
 
-// S.Schema<readonly [number, ...number[]]>
-const schema = S.asSchema(opaque)
+// Schema.Schema<readonly [number, ...number[]], readonly [number, ...number[]], never>
+const schema = Schema.asSchema(opaque)
 ```
 
 #### Exposed Values
@@ -2313,12 +2229,12 @@ const schema = S.asSchema(opaque)
 You can access the value of a non-empty array schema:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.NonEmptyArray(S.String)
+const schema = Schema.NonEmptyArray(Schema.String)
 
 // Accesses the value
-const value = schema.value // S.$String
+const value = schema.value // typeof Schema.String
 ```
 
 ## Records
@@ -2326,69 +2242,78 @@ const value = schema.value // S.$String
 ### String keys
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// S.$Record<S.$String, S.$Number>
-const opaque1 = S.Record(S.String, S.Number)
+// Schema.Record$<typeof Schema.String, typeof Schema.Number>
+const opaque1 = Schema.Record(Schema.String, Schema.Number)
 
-// S.Schema<{ readonly [x: string]: number; }>
-const schema1 = S.asSchema(opaque1)
+// Schema.Schema<{ readonly [x: string]: number; }>
+const schema1 = Schema.asSchema(opaque1)
 
-// S.$Record<S.Union<[S.Literal<["a"]>, S.Literal<["b"]>]>, S.$Number>
-const opaque2 = S.Record(S.Union(S.Literal("a"), S.Literal("b")), S.Number)
+// Schema.Record$<Schema.Union<[Schema.Literal<["a"]>, Schema.Literal<["b"]>]>, typeof Schema.Number>
+const opaque2 = Schema.Record(
+  Schema.Union(Schema.Literal("a"), Schema.Literal("b")),
+  Schema.Number
+)
 
-// S.Schema<{ readonly a: number; readonly b: number; }>
-const schema2 = S.asSchema(opaque2)
+// Schema.Schema<{ readonly a: number; readonly b: number; }>
+const schema2 = Schema.asSchema(opaque2)
 ```
 
 ### Keys refinements
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// S.$Record<S.Schema<string, string, never>, S.$Number>
-const opaque = S.Record(S.String.pipe(S.minLength(2)), S.Number)
+// Schema.Record$<Schema.filter<Schema.Schema<string, string, never>>, typeof Schema.Number>
+const opaque = Schema.Record(
+  Schema.String.pipe(Schema.minLength(2)),
+  Schema.Number
+)
 
-// S.Schema<{ readonly [x: string]: number; }>
-const schema = S.asSchema(opaque)
+// Schema.Schema<{ readonly [x: string]: number; }>
+const schema = Schema.asSchema(opaque)
 ```
 
 ### Symbol keys
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// S.$Record<S.SymbolFromSelf, S.$Number>
-const opaque = S.Record(S.SymbolFromSelf, S.Number)
+// Schema.Record$<typeof Schema.SymbolFromSelf, typeof Schema.Number>
+const opaque = Schema.Record(Schema.SymbolFromSelf, Schema.Number)
 
-// S.Schema<{ readonly [x: symbol]: number; }>
-const schema = S.asSchema(opaque)
+// Schema.Schema<{ readonly [x: symbol]: number; }>
+const schema = Schema.asSchema(opaque)
 ```
 
 ### Template literal keys
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// S.$Record<S.Schema<`a${string}`, `a${string}`, never>, S.$Number>
-const opaque = S.Record(S.TemplateLiteral(S.Literal("a"), S.String), S.Number)
+// Schema.Record$<Schema.Schema<`a${string}`, `a${string}`, never>, typeof Schema.Number>
+const opaque = Schema.Record(
+  Schema.TemplateLiteral(Schema.Literal("a"), Schema.String),
+  Schema.Number
+)
 
-// S.Schema<{ readonly [x: `a${string}`]: number; }>
-const schema = S.asSchema(opaque)
+// Schema.Schema<{ readonly [x: `a${string}`]: number; }>
+const schema = Schema.asSchema(opaque)
 ```
 
 ### Mutable Records
 
-By default, when you use `S.Record`, it generates a type marked as readonly. The `mutable` combinator is a useful function for creating a new schema with a Mutable type in a **shallow** manner:
+By default, when you use `S.Record`, it generates a type marked as readonly. The `mutable` combinator is a useful function for creating a new schema with a mutable type in a **shallow** manner:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// S.mutable<S.$Record<S.$String, S.$Number>>
-const opaque = S.mutable(S.Record(S.String, S.Number))
+// Schema.mutable<Schema.Record$<typeof Schema.String, typeof Schema.Number>>
+const opaque = Schema.mutable(Schema.Record(Schema.String, Schema.Number))
 
-// S.Schema<{ [x: string]: number; }>
-const schema = S.asSchema(opaque)
+// Schema.Schema<{ [x: string]: number; }>
+const schema = Schema.asSchema(opaque)
 ```
 
 ### Exposed Values
@@ -2396,59 +2321,59 @@ const schema = S.asSchema(opaque)
 You can access the key and the value of a record schema:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.Record(S.String, S.Number)
+const schema = Schema.Record(Schema.String, Schema.Number)
 
 // Accesses the key
-const key = schema.key // S.$String
+const key = schema.key // typeof Schema.String
 
 // Accesses the value
-const value = schema.value // S.$Number
+const value = schema.value // typeof Schema.Number
 ```
 
 ## Structs
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// const opaque: S.Struct<{ a: S.$String; b: S.$Number; }>
-const opaque = S.Struct({ a: S.String, b: S.Number })
+// Schema.Struct<{ a: typeof Schema.String; b: typeof Schema.Number; }>
+const opaque = Schema.Struct({ a: Schema.String, b: Schema.Number })
 
-// S.Schema<{ readonly a: string; readonly b: number; }>
-const schema = S.asSchema(opaque)
+// Schema.Schema<{ readonly a: string; readonly b: number; }>
+const schema = Schema.asSchema(opaque)
 ```
 
 ### Index Signatures
 
-The `struct` constructor optionally accepts a list of key/value pairs representing index signatures:
+The `Struct` constructor optionally accepts a list of key/value pairs representing index signatures:
 
 ```ts
-const struct = (props, ...indexSignatures)
+(props, ...indexSignatures) => Struct<...>
 ```
 
 **Example**
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 /*
-const opaque: S.TypeLiteral<{
-    a: S.$Number;
+Schema.TypeLiteral<{
+    a: typeof Schema.Number;
 }, readonly [{
-    readonly key: S.$String;
-    readonly value: S.$Number;
+    readonly key: typeof Schema.String;
+    readonly value: typeof Schema.Number;
 }]>
 */
-const opaque = S.Struct(
+const opaque = Schema.Struct(
   {
-    a: S.Number
+    a: Schema.Number
   },
-  { key: S.String, value: S.Number }
+  { key: Schema.String, value: Schema.Number }
 )
 
 /*
-const nonOpaque: S.Schema<{
+Schema.Schema<{
     readonly [x: string]: number;
     readonly a: number;
 }, {
@@ -2456,23 +2381,26 @@ const nonOpaque: S.Schema<{
     readonly a: number;
 }, never>
 */
-const nonOpaque = S.asSchema(opaque)
+const nonOpaque = Schema.asSchema(opaque)
 ```
 
-Since the `record` constructor returns a schema that exposes both the `key` and the `value`, instead of passing a bare object `{ key, value }`, you can use the `record` constructor:
+Since the `Record` constructor returns a schema that exposes both the `key` and the `value`, instead of passing a bare object `{ key, value }`, you can use the `Record` constructor:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 /*
-const opaque: S.TypeLiteral<{
-    a: S.$Number;
-}, readonly [S.Record<S.$String, S.$Number>]>
+Schema.TypeLiteral<{
+    a: typeof Schema.Number;
+}, readonly [Schema.Record$<typeof Schema.String, typeof Schema.Number>]>
 */
-const opaque = S.Struct({ a: S.Number }, S.Record(S.String, S.Number))
+const opaque = Schema.Struct(
+  { a: Schema.Number },
+  Schema.Record(Schema.String, Schema.Number)
+)
 
 /*
-const nonOpaque: S.Schema<{
+Schema.Schema<{
     readonly [x: string]: number;
     readonly a: number;
 }, {
@@ -2480,7 +2408,7 @@ const nonOpaque: S.Schema<{
     readonly a: number;
 }, never>
 */
-const nonOpaque = S.asSchema(opaque)
+const nonOpaque = Schema.asSchema(opaque)
 ```
 
 ### Exposed Values
@@ -2488,29 +2416,39 @@ const nonOpaque = S.asSchema(opaque)
 You can access the fields and the records of a struct schema:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.Struct({ a: S.Number }, S.Record(S.String, S.Number))
+const schema = Schema.Struct(
+  { a: Schema.Number },
+  Schema.Record(Schema.String, Schema.Number)
+)
 
 // Accesses the fields
-const fields = schema.fields // { readonly a: S.$Number; }
+const fields = schema.fields // { readonly a: typeof Schema.Number; }
 
 // Accesses the records
-const records = schema.records // [S.Record<S.$String, S.$Number>]
+const records = schema.records // readonly [Schema.Record$<typeof Schema.String, typeof Schema.Number>]
 ```
 
 ### Mutable Properties
 
-By default, when you use `S.struct`, it generates a type with properties that are marked as readonly. The `Mutable` combinator is a useful function for creating a new schema with properties made Mutable in a **shallow** manner:
+By default, when you use `S.struct`, it generates a type with properties that are marked as readonly. The `mutable` combinator is a useful function for creating a new schema with properties made mutable in a **shallow** manner:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// const opaque: S.mutable<S.Struct<{ a: S.$String; b: S.$Number; }>>
-const opaque = S.mutable(S.Struct({ a: S.String, b: S.Number }))
+/*
+Schema.mutable<Schema.Struct<{
+    a: typeof Schema.String;
+    b: typeof Schema.Number;
+}>>
+*/
+const opaque = Schema.mutable(
+  Schema.Struct({ a: Schema.String, b: Schema.Number })
+)
 
-// S.Schema<{ a: string; b: number; }>
-const schema = S.asSchema(opaque)
+// Schema.Schema<{ a: string; b: number; }>
+const schema = Schema.asSchema(opaque)
 ```
 
 ## Property Signatures
@@ -2534,24 +2472,34 @@ to a "To" field:
 Let's start with the simple definition of a property signature that can be used to add annotations:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 /*
-const Person: S.Struct<{
-    name: S.$String;
-    age: S.PropertySignature<":", number, never, ":", string, never>;
+Schema.Struct<{
+    name: typeof Schema.String;
+    age: Schema.PropertySignature<":", number, never, ":", string, false, never>;
 }>
 */
-const Person = S.Struct({
-  name: S.String,
-  age: S.propertySignature(S.NumberFromString).annotations({ title: "Age" })
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.propertySignature(Schema.NumberFromString).annotations({
+    title: "Age"
+  })
 })
 ```
 
 Let's delve into the details of all the information contained in the type of a `PropertySignature`:
 
 ```ts
-age: PropertySignature<ToToken, ToType, FromKey, FromToken, FromType, Context>
+age: PropertySignature<
+  ToToken,
+  ToType,
+  FromKey,
+  FromToken,
+  FromType,
+  HasDefault,
+  Context
+>
 ```
 
 - `age`: is the key of the "To" field
@@ -2560,11 +2508,12 @@ age: PropertySignature<ToToken, ToType, FromKey, FromToken, FromType, Context>
 - `FromKey` (optional, default = `never`): indicates the key from the field from which the transformation starts, by default it is equal to the key of the "To" field (i.e., `"age"` in this case)
 - `FormToken`: either `"?:"` or `":"`, `"?:"` indicates that the "From" field is optional, `":"` indicates that the "From" field is required
 - `FromType`: the type of the "From" field
+- `HasDefault`: indicates whether it has a constructor default value.
 
 In our case, the type
 
 ```ts
-PropertySignature<":", number, never, ":", string, never>
+PropertySignature<":", number, never, ":", string, false, never>
 ```
 
 indicates that there is the following transformation:
@@ -2575,28 +2524,31 @@ indicates that there is the following transformation:
 - `FromKey = never` indicates that the decoding occurs from the same field named `age`
 - `FormToken = "."` indicates that the decoding occurs from a required `age` field
 - `FromType = string` indicates that the decoding occurs from a `string` type `age` field
+- `HasDefault = false`: no default.
 
 Let's see an example of decoding:
 
 ```ts
-console.log(S.decodeUnknownSync(Person)({ name: "name", age: "18" }))
+console.log(Schema.decodeUnknownSync(Person)({ name: "name", age: "18" }))
 // Output: { name: 'name', age: 18 }
 ```
 
 Now, suppose the field from which decoding occurs is named `"AGE"`, but for our model, we want to keep the name in lowercase `"age"`. To achieve this result, we need to map the field key from `"AGE"` to `"age"`, and to do that, we can use the `fromKey` combinator:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 /*
-const Person: S.Struct<{
-    name: S.$String;
-    age: S.PropertySignature<":", number, "AGE", ":", string, never>;
+Schema.Struct<{
+    name: typeof Schema.String;
+    age: Schema.PropertySignature<":", number, "AGE", ":", string, false, never>;
 }>
 */
-const Person = S.Struct({
-  name: S.String,
-  age: S.propertySignature(S.NumberFromString).pipe(S.fromKey("AGE"))
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.propertySignature(Schema.NumberFromString).pipe(
+    Schema.fromKey("AGE")
+  )
 })
 ```
 
@@ -2604,13 +2556,13 @@ This modification is represented in the type of the created `PropertySignature`:
 
 ```ts
 // fromKey ----------------------v
-PropertySignature<":", number, "AGE", ":", string, never>
+PropertySignature<":", number, "AGE", ":", string, false, never>
 ```
 
 Now, let's see an example of decoding:
 
 ```ts
-console.log(S.decodeUnknownSync(Person)({ name: "name", AGE: "18" }))
+console.log(Schema.decodeUnknownSync(Person)({ name: "name", AGE: "18" }))
 // Output: { name: 'name', age: 18 }
 ```
 
@@ -2781,7 +2733,7 @@ export const optionalToOptional = <FA, FI, FR, TA, TI, TR>(
     readonly decode: (o: Option.Option<FA>) => Option.Option<TI>,
     readonly encode: (o: Option.Option<TI>) => Option.Option<FA>
   }
-): PropertySignature<"?:", TA, never, "?:", FI, FR | TR>
+): PropertySignature<"?:", TA, never, "?:", FI, false, FR | TR>
 ```
 
 As you can see, we can transform the type by specifying a schema for `to`, which can be different from the schema of `from`. Additionally, we can control the presence or absence of the field using `decode` and `encode`, with the following meanings:
@@ -2798,12 +2750,11 @@ As you can see, we can transform the type by specifying a schema for `to`, which
 Suppose we have an optional field of type `string`, and we want to exclude empty strings from the output. In other words, if the input contains an empty string, we want the field to be absent in the output.
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import { identity } from "effect/Function"
-import * as Option from "effect/Option"
+import { Schema } from "@effect/schema"
+import { identity, Option } from "effect"
 
-const schema = S.Struct({
-  a: S.optionalToOptional(S.String, S.String, {
+const schema = Schema.Struct({
+  a: Schema.optionalToOptional(Schema.String, Schema.String, {
     decode: (input) => {
       if (Option.isNone(input)) {
         // If the field is absent in the input, returning `Option.none()` will make it absent in the output too
@@ -2823,13 +2774,13 @@ const schema = S.Struct({
   })
 })
 
-const decode = S.decodeUnknownSync(schema)
+const decode = Schema.decodeUnknownSync(schema)
 
 console.log(decode({})) // Output: {}
 console.log(decode({ a: "" })) // Output: {}
 console.log(decode({ a: "a non-empty string" })) // Output: { a: 'a non-empty string' }
 
-const encode = S.encodeSync(schema)
+const encode = Schema.encodeSync(schema)
 
 console.log(encode({})) // Output: {}
 console.log(encode({ a: "" })) // Output: { a: '' }
@@ -2848,17 +2799,17 @@ export const optionalTorequired = <FA, FI, FR, TA, TI, TR>(
     readonly decode: (o: Option.Option<FA>) => TI,
     readonly encode: (ti: TI) => Option.Option<FA>
   }
-): PropertySignature<":", TA, never, "?:", FI, FR | TR>
+): PropertySignature<":", TA, never, "?:", FI, false, FR | TR>
 ```
 
 For instance, a common use case is to assign a default value to the field in the output if it's missing in the input. Let's see an example:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as Option from "effect/Option"
+import { Schema } from "@effect/schema"
+import { Option } from "effect"
 
-const schema = S.Struct({
-  a: S.optionalTorequired(S.String, S.String, {
+const schema = Schema.Struct({
+  a: Schema.optionalToRequired(Schema.String, Schema.String, {
     decode: (input) => {
       if (Option.isNone(input)) {
         // If the field is absent in the input, we can return the default value for the field in the output
@@ -2872,12 +2823,12 @@ const schema = S.Struct({
   })
 })
 
-const decode = S.decodeUnknownSync(schema)
+const decode = Schema.decodeUnknownSync(schema)
 
 console.log(decode({})) // Output: { a: 'default value' }
 console.log(decode({ a: "foo" })) // Output: { a: 'foo' }
 
-const encode = S.encodeSync(schema)
+const encode = Schema.encodeSync(schema)
 
 console.log(encode({ a: "foo" })) // Output: { a: 'foo' }
 ```
@@ -2885,14 +2836,14 @@ console.log(encode({ a: "foo" })) // Output: { a: 'foo' }
 ### Renaming Properties
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.Struct({
-  a: S.propertySignature(S.String).pipe(S.fromKey("c")),
-  b: S.Number
+const schema = Schema.Struct({
+  a: Schema.propertySignature(Schema.String).pipe(Schema.fromKey("c")),
+  b: Schema.Number
 })
 
-console.log(S.decodeUnknownSync(schema)({ c: "c", b: 1 }))
+console.log(Schema.decodeUnknownSync(schema)({ c: "c", b: 1 }))
 // Output: { a: "c", b: 1 }
 ```
 
@@ -2901,32 +2852,119 @@ console.log(S.decodeUnknownSync(schema)({ c: "c", b: 1 }))
 To rename one or more properties, you can utilize the `rename` API:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 // Original Schema
-const originalSchema = S.Struct({ c: S.String, b: S.Number })
+const originalSchema = Schema.Struct({ c: Schema.String, b: Schema.Number })
 
 // Renaming the "a" property to "c"
-const renamedSchema = S.rename(originalSchema, { c: "a" })
+const renamedSchema = Schema.rename(originalSchema, { c: "a" })
 
-console.log(S.decodeUnknownSync(renamedSchema)({ c: "c", b: 1 }))
+console.log(Schema.decodeUnknownSync(renamedSchema)({ c: "c", b: 1 }))
 // Output: { a: "c", b: 1 }
 ```
 
 In the example above, we have an original schema with properties "a" and "b." Using the `rename` API, we create a new schema where we rename the "a" property to "c." The resulting schema, when used with `S.decodeUnknownSync`, transforms the input object by renaming the specified property.
 
+## instanceOf
+
+When you need to define a schema for your custom data type defined through a `class`, the most convenient and fast way is to use the `Schema.instanceOf` constructor. Let's see an example:
+
+```ts
+import { Schema } from "@effect/schema"
+
+class MyData {
+  constructor(readonly name: string) {}
+}
+
+// Schema.instanceOf<MyData>
+const MyDataSchema = Schema.instanceOf(MyData)
+
+console.log(Schema.decodeUnknownSync(MyDataSchema)(new MyData("name")))
+// MyData { name: 'name' }
+console.log(Schema.decodeUnknownSync(MyDataSchema)({ name: "name" }))
+/*
+throws
+Error: Expected an instance of MyData, actual {"name":"name"}
+*/
+```
+
+The `Schema.instanceOf` constructor is just a lightweight wrapper of the `Schema.declare` API, which is the primitive in `@effect/schema` for declaring new custom data types.
+
+However, note that `instanceOf` can only be used for classes that expose a **public constructor**. If you try to use it with classes that, for some reason, have marked the constructor as `private`, you'll receive a TypeScript error:
+
+```ts
+import { Schema } from "@effect/schema"
+
+class MyData {
+  static make = (name: string) => new MyData(name)
+  private constructor(readonly name: string) {}
+}
+
+/*
+Argument of type 'typeof MyData' is not assignable to parameter of type 'abstract new (...args: any) => any'.
+  Cannot assign a 'private' constructor type to a 'public' constructor type.ts(2345)
+*/
+const MyDataSchema = Schema.instanceOf(MyData)
+```
+
+In such cases, you cannot use `Schema.instanceOf`, and you must rely on `Schema.declare` like this:
+
+```ts
+import { Schema } from "@effect/schema"
+
+class MyData {
+  static make = (name: string) => new MyData(name)
+  private constructor(readonly name: string) {}
+}
+
+const MyDataSchema = Schema.declare(
+  (input: unknown): input is MyData => input instanceof MyData
+)
+
+console.log(Schema.decodeUnknownSync(MyDataSchema)(MyData.make("name")))
+// MyData { name: 'name' }
+console.log(Schema.decodeUnknownSync(MyDataSchema)({ name: "name" }))
+/*
+throws
+Error: Expected <declaration schema>, actual {"name":"name"}
+*/
+```
+
+To improve the error message in case of failed decoding, remember to add annotations:
+
+```ts
+const MyDataSchema = Schema.declare(
+  (input: unknown): input is MyData => input instanceof MyData,
+  {
+    identifier: "MyData",
+    description: "an instance of MyData"
+  }
+)
+
+console.log(Schema.decodeUnknownSync(MyDataSchema)({ name: "name" }))
+/*
+throws
+Error: Expected MyData (an instance of MyData), actual {"name":"name"}
+*/
+```
+
 ## pick
 
 The `pick` operation is used to select specific properties from a schema.
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 // Schema<{ readonly a: string; }>
-S.Struct({ a: S.String, b: S.Number, c: S.Boolean }).pipe(S.pick("a"))
+Schema.Struct({ a: Schema.String, b: Schema.Number, c: Schema.Boolean }).pipe(
+  Schema.pick("a")
+)
 
 // Schema<{ readonly a: string; readonly c: boolean; }>
-S.Struct({ a: S.String, b: S.Number, c: S.Boolean }).pipe(S.pick("a", "c"))
+Schema.Struct({ a: Schema.String, b: Schema.Number, c: Schema.Boolean }).pipe(
+  Schema.pick("a", "c")
+)
 ```
 
 ## omit
@@ -2934,13 +2972,17 @@ S.Struct({ a: S.String, b: S.Number, c: S.Boolean }).pipe(S.pick("a", "c"))
 The `omit` operation is employed to exclude certain properties from a schema.
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 // Schema<{ readonly b: number; readonly c: boolean; }>
-S.Struct({ a: S.String, b: S.Number, c: S.Boolean }).pipe(S.omit("a"))
+Schema.Struct({ a: Schema.String, b: Schema.Number, c: Schema.Boolean }).pipe(
+  Schema.omit("a")
+)
 
 // Schema<{ readonly b: number; }>
-S.Struct({ a: S.String, b: S.Number, c: S.Boolean }).pipe(S.omit("a", "c"))
+Schema.Struct({ a: Schema.String, b: Schema.Number, c: Schema.Boolean }).pipe(
+  Schema.omit("a", "c")
+)
 ```
 
 ## partial
@@ -2952,34 +2994,36 @@ By default, the `partial` operation adds a union with `undefined` to the types.
 **Example**
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 /*
-const schema: S.Schema<{
+Schema.Schema<{
     readonly a?: string | undefined;
 }, {
     readonly a?: string | undefined;
 }, never>
 */
-const schema = S.partial(S.Struct({ a: S.String }))
+const schema = Schema.partial(Schema.Struct({ a: Schema.String }))
 
-S.decodeUnknownSync(schema)({ a: "a" }) // ok
-S.decodeUnknownSync(schema)({ a: undefined }) // ok
+Schema.decodeUnknownSync(schema)({ a: "a" }) // ok
+Schema.decodeUnknownSync(schema)({ a: undefined }) // ok
 
 /*
-const exact: S.Schema<{
+Schema.Schema<{
     readonly a?: string;
 }, {
     readonly a?: string;
 }, never>
 */
-const exactSchema = S.partial(S.Struct({ a: S.String }), { exact: true })
+const exactSchema = Schema.partial(Schema.Struct({ a: Schema.String }), {
+  exact: true
+})
 
-S.decodeUnknownSync(exactSchema)({ a: "a" }) // ok
-S.decodeUnknownSync(exactSchema)({ a: undefined })
+Schema.decodeUnknownSync(exactSchema)({ a: "a" }) // ok
+Schema.decodeUnknownSync(exactSchema)({ a: undefined })
 /*
 throws:
-Error: { a?: string }
+Error: { readonly a?: string }
 └─ ["a"]
    └─ Expected a string, actual undefined
 */
@@ -2990,13 +3034,13 @@ Error: { a?: string }
 The `required` operation ensures that all properties in a schema are mandatory.
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 // Schema<{ readonly a: string; readonly b: number; }>
-S.required(
-  S.Struct({
-    a: S.optional(S.String, { exact: true }),
-    b: S.optional(S.Number, { exact: true })
+Schema.required(
+  Schema.Struct({
+    a: Schema.optional(Schema.String, { exact: true }),
+    b: Schema.optional(Schema.Number, { exact: true })
   })
 )
 ```
@@ -3005,50 +3049,69 @@ S.required(
 
 The `extend` combinator allows you to add additional fields or index signatures to an existing `Schema`.
 
+Example
+
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.Struct({ a: S.String, b: S.String })
+const schema = Schema.Struct({
+  a: Schema.String,
+  b: Schema.String
+})
 
-// Schema<{ readonly [x: string]: string; readonly a: string; readonly b: string; readonly c: string; }>
-const extended = schema.pipe(
-  S.extend(S.Struct({ c: S.String })), // <= you can add more fields
-  S.extend(S.Record(S.String, S.String)) // <= you can add index signatures
+/*
+const extended: S.Schema<{
+    readonly [x: string]: string;
+    readonly a: string;
+    readonly b: string;
+    readonly c: string;
+}>
+*/
+const extended = Schema.asSchema(
+  schema.pipe(
+    Schema.extend(Schema.Struct({ c: Schema.String })), // <= you can add more fields
+    Schema.extend(Schema.Record(Schema.String, Schema.String)) // <= you can add index signatures
+  )
 )
 ```
 
 Alternatively, you can utilize the `fields` property of structs:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.Struct({ a: S.String, b: S.String })
+const schema = Schema.Struct({ a: Schema.String, b: Schema.String })
 
-// Schema<{ readonly [x: string]: string; readonly a: string; readonly b: string; readonly c: string; }>
-const extended = S.Struct(
+const extended = Schema.Struct(
   {
     ...schema.fields,
-    c: S.String
+    c: Schema.String
   },
-  { key: S.String, value: S.String }
+  { key: Schema.String, value: Schema.String }
 )
 ```
 
+> [!NOTE]
+> Note that there are strict limitations on the schemas that can be handled by `extend`:
+
+1. It only supports **structs**, refinements of structs, unions of structs, suspensions of structs (informally `Supported = Struct | Refinement of Supported | Union of Supported | suspend(() => Supported)`)
+2. The arguments must represent disjoint types (e.g., `extend(Struct({ a: String }), Struct({ a: String })))` raises an error)
+
 ## Composition
 
 Combining and reusing schemas is a common requirement, the `compose` combinator allows you to do just that. It enables you to combine two schemas, `Schema<B, A, R1>` and `Schema<C, B, R2>`, into a single schema `Schema<C, A, R1 | R2>`:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 // Schema<readonly string[], string>
-const schema1 = S.split(",")
+const schema1 = Schema.split(",")
 
 // Schema<readonly number[], readonly string[]>
-const schema2 = S.Array(S.NumberFromString)
+const schema2 = Schema.Array(Schema.NumberFromString)
 
 // Schema<readonly number[], string>
-const ComposedSchema = S.compose(schema1, schema2)
+const ComposedSchema = Schema.compose(schema1, schema2)
 ```
 
 In this example, we have two schemas, `schema1` and `schema2`. The first schema, `schema1`, takes a string and splits it into an array using a comma as the delimiter. The second schema, `schema2`, transforms an array of strings into an array of numbers.
@@ -3070,2497 +3133,3087 @@ declare const compose: <A, B, R1, D, C, R2>(
 This is useful when you want to relax the type constraints imposed by the `decode` and `encode` functions, making them more permissive:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
 // error: Type 'string | null' is not assignable to type 'string'
-S.compose(S.Union(S.Null, S.String), S.NumberFromString)
+Schema.compose(
+  Schema.Union(Schema.Null, Schema.String),
+  Schema.NumberFromString
+)
 
 // ok
-S.compose(S.Union(S.Null, S.String), S.NumberFromString, { strict: false })
+Schema.compose(
+  Schema.Union(Schema.Null, Schema.String),
+  Schema.NumberFromString,
+  { strict: false }
+)
 ```
 
-## instanceOf
+# Declaring New Data Types
+
+Creating schemas for new data types is crucial to defining the expected structure of information in your application. This guide explores how to declare schemas for new data types. We'll cover two important concepts: declaring schemas for primitive data types and type constructors.
+
+## Declaring Schemas for Primitive Data Types
 
-In the following section, we demonstrate how to use the `instanceOf` combinator to create a `Schema` for a class instance.
+A primitive data type represents simple values. To declare a schema for a primitive data type, like the `File` type in TypeScript, we use the `S.declare` constructor along with a type guard. Let's go through an example:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-class Test {
-  constructor(readonly name: string) {}
-}
+// Schema.SchemaClass<File, File, never>
+const FileFromSelf = Schema.declare(
+  (input: unknown): input is File => input instanceof File
+)
 
-// Schema<Test>
-S.instanceOf(Test)
+const decode = Schema.decodeUnknownSync(FileFromSelf)
+
+console.log(decode(new File([], ""))) // File { size: 0, type: '', name: '', lastModified: 1705595977234 }
+
+decode(null)
+/*
+throws
+Error: Expected <declaration schema>, actual null
+*/
 ```
 
-## Recursive Schemas
+As you can see, the error message describes what went wrong but doesn't provide much information about which schema caused the error (`"Expected <declaration schema>"`). To enhance the default error message, you can add annotations, particularly the `identifier`, `title`, and `description` annotations (none of these annotations are required, but they are encouraged for good practice and can make your schema "self-documenting"). These annotations will be utilized by the messaging system to return more meaningful messages.
 
-The `suspend` combinator is useful when you need to define a `Schema` that depends on itself, like in the case of recursive data structures. In this example, the `Category` schema depends on itself because it has a field `subcategories` that is an array of `Category` objects.
+A "title" should be concise, while a "description" provides a more detailed explanation of the purpose of the data described by the schema.
 
 ```ts
-import * as S from "@effect/schema/Schema"
-
-interface Category {
-  readonly name: string
-  readonly subcategories: ReadonlyArray<Category>
-}
+import { Schema } from "@effect/schema"
 
-const Category: S.Schema<Category> = S.Struct({
-  name: S.String,
-  subcategories: S.Array(S.suspend(() => Category))
-})
-```
-
-> [!NOTE]
-> It is necessary to define the `Category` type and add an explicit type annotation (`const Category: S.Schema<Category>`) because otherwise TypeScript would struggle to infer types correctly. Without this annotation, you might encounter the error message: "'Category' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.ts(7022)"
-
-### A Helpful Pattern to Simplify Schema Definition
-
-As we've observed, it's necessary to define an interface for the `Type` of the schema to enable recursive schema definition, which can complicate things and be quite tedious. One pattern to mitigate this is to **separate the field responsible for recursion** from all other fields.
-
-```ts
-import * as S from "@effect/schema/Schema"
+const FileFromSelf = Schema.declare(
+  (input: unknown): input is File => input instanceof File,
+  {
+    identifier: "FileFromSelf",
+    description: "The `File` type in JavaScript"
+  }
+)
 
-const fields = {
-  name: S.String
-  // ...possibly other fields
-}
+const decode = Schema.decodeUnknownSync(FileFromSelf)
 
-// Define an interface for the Category schema, extending the Type of the defined fields
-interface Category extends S.Struct.Type<typeof fields> {
-  readonly subcategories: ReadonlyArray<Category> // Define `subcategories` using recursion
-}
+console.log(decode(new File([], ""))) // File { size: 0, type: '', name: '', lastModified: 1705595977234 }
 
-const Category: S.Schema<Category> = S.Struct({
-  ...fields, // Include the fields
-  subcategories: S.Array(S.suspend(() => Category)) // Define `subcategories` using recursion
-})
+decode(null)
+/*
+throws
+Error: Expected FileFromSelf (The File type in JavaScript), actual null
+*/
 ```
 
-### Mutually Recursive Schemas
+## Declaring Schemas for Type Constructors
 
-Here's an example of two mutually recursive schemas, `Expression` and `Operation`, that represent a simple arithmetic expression tree.
+Type constructors are generic types that take one or more types as arguments and return a new type. If you need to define a schema for a type constructor, you can use the `S.declare` constructor. Let's illustrate this with a schema for `ReadonlySet<A>`:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-
-interface Expression {
-  readonly type: "expression"
-  readonly value: number | Operation
-}
+import { ParseResult, Schema } from "@effect/schema"
 
-interface Operation {
-  readonly type: "operation"
-  readonly operator: "+" | "-"
-  readonly left: Expression
-  readonly right: Expression
-}
-
-const Expression: S.Schema<Expression> = S.Struct({
-  type: S.Literal("expression"),
-  value: S.Union(
-    S.Number,
-    S.suspend(() => Operation)
+export const MyReadonlySet = <A, I, R>(
+  // Schema for the elements of the Set
+  item: Schema.Schema<A, I, R>
+): Schema.Schema<ReadonlySet<A>, ReadonlySet<I>, R> =>
+  Schema.declare(
+    // Store the schema for the elements
+    [item],
+    {
+      // Decoding function
+      decode: (item) => (input, parseOptions, ast) => {
+        if (input instanceof Set) {
+          // Decode the elements
+          const elements = ParseResult.decodeUnknown(Schema.Array(item))(
+            Array.from(input.values()),
+            parseOptions
+          )
+          // Return a Set containing the parsed elements
+          return ParseResult.map(elements, (as): ReadonlySet<A> => new Set(as))
+        }
+        return ParseResult.fail(new ParseResult.Type(ast, input))
+      },
+      // Encoding function
+      encode: (item) => (input, parseOptions, ast) => {
+        if (input instanceof Set) {
+          // Encode the elements
+          const elements = ParseResult.encodeUnknown(Schema.Array(item))(
+            Array.from(input.values()),
+            parseOptions
+          )
+          // Return a Set containing the parsed elements
+          return ParseResult.map(elements, (is): ReadonlySet<I> => new Set(is))
+        }
+        return ParseResult.fail(new ParseResult.Type(ast, input))
+      }
+    },
+    {
+      description: `ReadonlySet<${Schema.format(item)}>`
+    }
   )
-})
 
-const Operation: S.Schema<Operation> = S.Struct({
-  type: S.Literal("operation"),
-  operator: S.Literal("+", "-"),
-  left: Expression,
-  right: Expression
-})
-```
-
-### Recursive Types with Different Encoded and Type
-
-Defining a recursive schema where the `Encoded` type differs from the `Type` type adds another layer of complexity. In such cases, we need to define two interfaces: one for the `Type` type, as seen previously, and another for the `Encoded` type.
-
-Let's consider an example: suppose we want to add an `id` field to the `Category` schema, where the schema for `id` is `NumberFromString`. It's important to note that `NumberFromString` is a schema that transforms a string into a number, so the `Type` and `Encoded` types of `NumberFromString` differ, being `number` and `string` respectively. When we add this field to the `Category` schema, TypeScript raises an error:
+// const setOfNumbers: S.Schema<ReadonlySet<string>, ReadonlySet<number>>
+const setOfNumbers = MyReadonlySet(Schema.NumberFromString)
 
-```ts
-import * as S from "@effect/schema/Schema"
+const decode = Schema.decodeUnknownSync(setOfNumbers)
 
-const fields = {
-  id: S.NumberFromString,
-  name: S.String
-}
+console.log(decode(new Set(["1", "2", "3"]))) // Set(3) { 1, 2, 3 }
 
-interface Category extends S.Struct.Type<typeof fields> {
-  readonly subcategories: ReadonlyArray<Category>
-}
+decode(null)
+/*
+throws
+Error: Expected ReadonlySet<NumberFromString>, actual null
+*/
 
+decode(new Set(["1", null, "3"]))
 /*
-TypeScript error:
-Type 'Category' is not assignable to type '{ readonly id: string; readonly name: string; readonly subcategories: readonly Category[]; }'.
-  Types of property 'id' are incompatible.
-    Type 'number' is not assignable to type 'string'.ts(2322)
+throws
+Error: ReadonlySet<NumberFromString>
+└─ ReadonlyArray<NumberFromString>
+   └─ [1]
+      └─ NumberFromString
+         └─ From side transformation failure
+            └─ Expected a string, actual null
 */
-const Category: S.Schema<Category> = S.Struct({
-  ...fields,
-  subcategories: S.Array(S.suspend(() => Category))
-})
 ```
 
-This error occurs because the explicit annotation `const Category: S.Schema<Category>` is no longer sufficient and needs to be adjusted by explicitly adding the `Encoded` type:
+> [!WARNING]
+> The decoding and encoding functions cannot use context (the `R` type parameter) and cannot use async effects.
 
-```ts
-import * as S from "@effect/schema/Schema"
+## Adding Annotations
 
-const fields = {
-  id: S.NumberFromString,
-  name: S.String
-}
+When you define a new data type, some compilers like `Arbitrary` or `Pretty` may not know how to handle the newly defined data. For instance:
 
-interface Category extends S.Struct.Type<typeof fields> {
-  readonly subcategories: ReadonlyArray<Category>
-}
+```ts
+import { Arbitrary, Schema } from "@effect/schema"
 
-interface CategoryEncoded extends S.Struct.Encoded<typeof fields> {
-  readonly subcategories: ReadonlyArray<CategoryEncoded>
-}
+const FileFromSelf = Schema.declare(
+  (input: unknown): input is File => input instanceof File,
+  {
+    identifier: "FileFromSelf"
+  }
+)
 
-const Category: S.Schema<Category, CategoryEncoded> = S.Struct({
-  ...fields,
-  subcategories: S.Array(S.suspend(() => Category))
-})
+// Create an Arbitrary instance for FileFromSelf schema
+const arb = Arbitrary.make(FileFromSelf)
+/*
+throws:
+Error: cannot build an Arbitrary for a declaration without annotations (FileFromSelf)
+*/
 ```
 
-# Classes
-
-When working with schemas, you have a choice beyond the `S.struct` constructor. You can leverage the power of classes through the `Class` utility, which comes with its own set of advantages tailored to common use cases.
+In such cases, you need to provide annotations to ensure proper functionality:
 
-## The Benefits of Using Classes
+```ts
+import { Arbitrary, FastCheck, Pretty, Schema } from "@effect/schema"
 
-Classes offer several features that simplify the schema creation process:
+const FileFromSelf = Schema.declare(
+  (input: unknown): input is File => input instanceof File,
+  {
+    identifier: "FileFromSelf",
+    // Provide an arbitrary function to generate random File instances
+    arbitrary: () => (fc) =>
+      fc
+        .tuple(fc.string(), fc.string())
+        .map(([path, content]) => new File([content], path)),
+    // Provide a pretty function to generate human-readable representation of File instances
+    pretty: () => (file) => `File(${file.name})`
+  }
+)
 
-- **All-in-One Definition**: With classes, you can define both a schema and an opaque type simultaneously.
-- **Shared Functionality**: You can incorporate shared functionality using class methods or getters.
-- **Value Equality and Hashing**: Utilize the built-in capability for checking value equality and applying hashing (thanks to `Class` implementing `Data.Case`).
+// Create an Arbitrary instance for FileFromSelf schema
+const arb = Arbitrary.make(FileFromSelf)
 
-Let's dive into an illustrative example to better understand how classes work:
+// Generate sample files using the Arbitrary instance
+const files = FastCheck.sample(arb, 2)
+console.log(files)
+/*
+Output:
+[
+  File { size: 5, type: '', name: 'C', lastModified: 1706435571176 },
+  File { size: 1, type: '', name: '98Ggmc', lastModified: 1706435571176 }
+]
+*/
 
-```ts
-import * as S from "@effect/schema/Schema"
+// Create a Pretty instance for FileFromSelf schema
+const pretty = Pretty.make(FileFromSelf)
 
-// Define your schema by providing the type to `Class` and the desired fields
-class Person extends S.Class<Person>("Person")({
-  id: S.Number,
-  name: S.String.pipe(S.nonEmpty())
-}) {}
+// Print human-readable representation of a file
+console.log(pretty(files[0])) // "File(C)"
 ```
 
-## Validation and Instantiation
+# Transformations
 
-The class constructor serves as a validation and instantiation tool. It ensures that the provided properties meet the schema requirements:
+In some cases, we may need to transform the output of a schema to a different type. For instance, we may want to parse a string into a number, or we may want to transform a date string into a `Date` object.
 
-```ts
-const tim = new Person({ id: 1, name: "Tim" })
-```
+To perform these kinds of transformations, the `@effect/schema` library provides the `transform` combinator.
 
-Keep in mind that it throws an error for invalid properties...
+## transform
 
 ```ts
-new Person({ id: 1, name: "" })
-/* throws
-Error: { id: number; name: a non empty string }
-└─ ["name"]
-   └─ a non empty string
-      └─ Predicate refinement failure
-         └─ Expected a non empty string, actual ""
-*/
+declare const transform: <To extends Schema.Any, From extends Schema.Any>(
+    from: From,
+    to: To,
+    options: {
+      readonly decode: (fromA: Schema.Type<From>) => Schema.Encoded<To>
+      readonly encode: (toI: Schema.Encoded<To>) => Schema.Type<From>
+      readonly strict?: true
+    } | {
+      readonly decode: (fromA: Schema.Type<From>) => unknown
+      readonly encode: (toI: Schema.Encoded<To>) => unknown
+      readonly strict: false
+    }
+  ): transform<From, To>
 ```
 
-...unless you explicitly disable validation:
-
-```ts
-new Person({ id: 1, name: "" }, true) // no error
+```mermaid
+flowchart TD
+  schema1["from: Schema&lt;B, A&gt;"]
+  schema2["to: Schema&lt;D, C&gt;"]
+  schema1--decode: B -> C-->schema2
+  schema2--encode: C -> B-->schema1
 ```
 
-## No Args
-
-If you don't want to have any arguments, you can use `{}`:
+The `transform` combinator takes a source schema, a target schema, a transformation function from the source type to the target type, and a reverse transformation function from the target type back to the source type. It returns a new schema that applies the transformation function to the output of the original schema before returning it. If the original schema fails to parse a value, the transformed schema will also fail.
 
 ```ts
-import * as S from "@effect/schema/Schema"
-
-class NoArgs extends S.Class<NoArgs>("NoArgs")({}) {}
+import { Schema } from "@effect/schema"
 
-const noargs = new NoArgs()
+// use the transform combinator to convert the string schema into the tuple schema
+export const transformedSchema: Schema.Schema<readonly [string], string> =
+  Schema.transform(Schema.String, Schema.Tuple(Schema.String), {
+    // define a function that converts a string into a tuple with one element of type string
+    decode: (s) => [s] as const,
+    // define a function that converts a tuple with one element of type string into a string
+    encode: ([s]) => s
+  })
 ```
 
-## Custom Getters and Methods
+In the example above, we defined a schema for the `string` type and a schema for the tuple type `[string]`. We also defined the functions `decode` and `encode` that convert a `string` into a tuple and a tuple into a `string`, respectively. Then, we used the `transform` combinator to convert the string schema into a schema for the tuple type `[string]`. The resulting schema can be used to parse values of type `string` into values of type `[string]`.
 
-For more flexibility, you can also introduce custom getters and methods:
+### Non-strict option
 
-```ts
-import * as S from "@effect/schema/Schema"
+If you need to be less restrictive in your `decode` and `encode` functions, you can make use of the `{ strict: false }` option:
 
-class Person extends S.Class<Person>("Person")({
-  id: S.Number,
-  name: S.String.pipe(S.nonEmpty())
-}) {
-  get upperName() {
-    return this.name.toUpperCase()
+```ts
+<To extends Schema.Any, From extends Schema.Any>(
+  from: From,
+  to: To,
+  options: {
+    readonly decode: (fromA: Schema.Type<From>) => Schema.Encoded<To>
+    readonly encode: (toI: Schema.Encoded<To>) => Schema.Type<From>
+    readonly strict?: true
+  } | {
+    readonly decode: (fromA: Schema.Type<From>) => unknown // Less strict constraint
+    readonly encode: (toI: Schema.Encoded<To>) => unknown // Less strict constraint
+    readonly strict: false
   }
-}
+): transform<From, To>
+```
 
-const john = new Person({ id: 1, name: "John" })
+This is useful when you want to relax the type constraints imposed by the `decode` and `encode` functions, making them more permissive.
 
-console.log(john.upperName) // "JOHN"
+## transformOrFail
+
+The `transformOrFail` combinator works in a similar way, but allows the transformation function to return an `Effect<A, ParseError, R`, which can either be a success or a failure.
+
+```ts
+<To extends Schema.Any, From extends Schema.Any, RD, RE>(
+  from: From,
+  to: To,
+  options: {
+    readonly decode: (
+      fromA: Schema.Type<From>,
+      options: ParseOptions,
+      ast: AST.Transformation
+    ) => Effect.Effect<Schema.Encoded<To>, ParseResult.ParseIssue, RD>
+    readonly encode: (
+      toI: Schema.Encoded<To>,
+      options: ParseOptions,
+      ast: AST.Transformation
+    ) => Effect.Effect<Schema.Type<From>, ParseResult.ParseIssue, RE>
+    readonly strict?: true
+  } | {
+    readonly decode: (
+      fromA: Schema.Type<From>,
+      options: ParseOptions,
+      ast: AST.Transformation
+    ) => Effect.Effect<unknown, ParseResult.ParseIssue, RD>
+    readonly encode: (
+      toI: Schema.Encoded<To>,
+      options: ParseOptions,
+      ast: AST.Transformation
+    ) => Effect.Effect<unknown, ParseResult.ParseIssue, RE>
+    readonly strict: false
+  }
+): transformOrFail<From, To, RD | RE>
 ```
 
-## Accessing Related Schemas
+Both `decode` and `encode` functions not only receive the value to transform (`fromA` and `toI`), but also the parse options that the user sets when using the resulting schema, and the `ast`, which represents the `AST` of the schema you're transforming.
 
-The class constructor itself is a Schema, and can be assigned/provided anywhere a Schema is expected. There is also a `.fields` property, which can be used when the class prototype is not required.
+Example
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { ParseResult, Schema } from "@effect/schema"
 
-class Person extends S.Class<Person>("Person")({
-  id: S.Number,
-  name: S.String.pipe(S.nonEmpty())
-}) {}
+export const transformedSchema: Schema.Schema<boolean, string> =
+  Schema.transformOrFail(Schema.String, Schema.Boolean, {
+    // define a function that converts a string into a boolean
+    decode: (s) =>
+      s === "true"
+        ? ParseResult.succeed(true)
+        : s === "false"
+          ? ParseResult.succeed(false)
+          : ParseResult.fail(
+              new ParseResult.Type(Schema.Literal("true", "false").ast, s)
+            ),
+    // define a function that converts a boolean into a string
+    encode: (b) => ParseResult.succeed(String(b))
+  })
+```
+
+The transformation may also be async:
+
+```ts
+import { ParseResult, Schema, TreeFormatter } from "@effect/schema"
+import { Effect } from "effect"
+
+const api = (url: string): Effect.Effect<unknown, Error> =>
+  Effect.tryPromise({
+    try: () =>
+      fetch(url).then((res) => {
+        if (res.ok) {
+          return res.json() as Promise<unknown>
+        }
+        throw new Error(String(res.status))
+      }),
+    catch: (e) => new Error(String(e))
+  })
+
+const PeopleId = Schema.String.pipe(Schema.brand("PeopleId"))
+
+const PeopleIdFromString = Schema.transformOrFail(Schema.String, PeopleId, {
+  decode: (s, _, ast) =>
+    Effect.mapBoth(api(`https://swapi.dev/api/people/${s}`), {
+      onFailure: (e) => new ParseResult.Type(ast, s, e.message),
+      onSuccess: () => s
+    }),
+  encode: ParseResult.succeed
+})
+
+const decode = (id: string) =>
+  Effect.mapError(Schema.decodeUnknown(PeopleIdFromString)(id), (e) =>
+    TreeFormatter.formatError(e)
+  )
 
-console.log(S.isSchema(Person)) // true
+Effect.runPromiseExit(decode("1")).then(console.log)
+/*
+Output:
+{ _id: 'Exit', _tag: 'Success', value: '1' }
+*/
 
+Effect.runPromiseExit(decode("fail")).then(console.log)
 /*
+Output:
 {
-    readonly id: S.$Number;
-    readonly name: S.Schema<string, string, never>;
+  _id: 'Exit',
+  _tag: 'Failure',
+  cause: {
+    _id: 'Cause',
+    _tag: 'Fail',
+    failure: '(string <-> string)\n└─ Transformation process failure\n   └─ Error: 404'
+  }
 }
 */
-Person.fields
 ```
 
-## Recursive Schemas
-
-The `suspend` combinator is useful when you need to define a `Schema` that depends on itself, like in the case of recursive data structures. In this example, the `Category` schema depends on itself because it has a field `subcategories` that is an array of `Category` objects.
+You can also declare dependencies:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-
-class Category extends S.Class<Category>("Category")({
-  name: S.String,
-  subcategories: S.Array(S.suspend((): S.Schema<Category> => Category))
-}) {}
-```
+import { ParseResult, Schema, TreeFormatter } from "@effect/schema"
+import { Context, Effect, Layer } from "effect"
 
-> [!NOTE]
-> It is necessary to add an explicit type annotation (`S.suspend((): S.Schema<Category> => Category`) because otherwise TypeScript would struggle to infer types correctly. Without this annotation, you might encounter the error message: "Type 'typeof Category' is missing the following properties from type 'Schema<unknown, unknown, unknown>': ast, annotations, [TypeId], pipets(2739)"
+const Fetch = Context.GenericTag<"Fetch", typeof fetch>("Fetch")
 
-### Mutually Recursive Schemas
+const api = (url: string): Effect.Effect<unknown, Error, "Fetch"> =>
+  Fetch.pipe(
+    Effect.flatMap((fetch) =>
+      Effect.tryPromise({
+        try: () =>
+          fetch(url).then((res) => {
+            if (res.ok) {
+              return res.json() as Promise<unknown>
+            }
+            throw new Error(String(res.status))
+          }),
+        catch: (e) => new Error(String(e))
+      })
+    )
+  )
 
-Here's an example of two mutually recursive schemas, `Expression` and `Operation`, that represent a simple arithmetic expression tree.
+const PeopleId = Schema.String.pipe(Schema.brand("PeopleId"))
 
-```ts
-import * as S from "@effect/schema/Schema"
+const PeopleIdFromString = Schema.transformOrFail(Schema.String, PeopleId, {
+  decode: (s, _, ast) =>
+    Effect.mapBoth(api(`https://swapi.dev/api/people/${s}`), {
+      onFailure: (e) => new ParseResult.Type(ast, s, e.message),
+      onSuccess: () => s
+    }),
+  encode: ParseResult.succeed
+})
 
-class Expression extends S.Class<Expression>("Expression")({
-  type: S.Literal("expression"),
-  value: S.Union(
-    S.Number,
-    S.suspend((): S.Schema<Operation> => Operation)
+const decode = (id: string) =>
+  Effect.mapError(Schema.decodeUnknown(PeopleIdFromString)(id), (e) =>
+    TreeFormatter.formatError(e)
   )
-}) {}
 
-class Operation extends S.Class<Operation>("Operation")({
-  type: S.Literal("operation"),
-  operator: S.Literal("+", "-"),
-  left: Expression,
-  right: Expression
-}) {}
+const FetchLive = Layer.succeed(Fetch, fetch)
+
+Effect.runPromiseExit(decode("1").pipe(Effect.provide(FetchLive))).then(
+  console.log
+)
+/*
+Output:
+{ _id: 'Exit', _tag: 'Success', value: '1' }
+*/
+
+Effect.runPromiseExit(decode("fail").pipe(Effect.provide(FetchLive))).then(
+  console.log
+)
+/*
+Output:
+{
+  _id: 'Exit',
+  _tag: 'Failure',
+  cause: {
+    _id: 'Cause',
+    _tag: 'Fail',
+    failure: '(string <-> string)\n└─ Transformation process failure\n   └─ Error: 404'
+  }
+}
+*/
 ```
 
-### Recursive Types with Different Encoded and Type
+## String Transformations
 
-Defining a recursive schema where the `Encoded` type differs from the `Type` type adds another layer of complexity. In such cases, we need to define an interface for the `Encoded` type.
+### split
 
-Let's consider an example: suppose we want to add an `id` field to the `Category` schema, where the schema for `id` is `NumberFromString`. It's important to note that `NumberFromString` is a schema that transforms a string into a number, so the `Type` and `Encoded` types of `NumberFromString` differ, being `number` and `string` respectively. When we add this field to the `Category` schema, TypeScript raises an error:
+The `split` combinator allows splitting a string into an array of strings.
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-/*
-TypeScript error:
-Type 'Category' is not assignable to type '{ readonly id: string; readonly name: string; readonly subcategories: readonly Category[]; }'.
-  Types of property 'id' are incompatible.
-    Type 'number' is not assignable to type 'string'.ts(2322)
-*/
-class Category extends S.Class<Category>("Category")({
-  id: S.NumberFromString,
-  name: S.String,
-  subcategories: S.Array(S.suspend((): S.Schema<Category> => Category))
-}) {}
+// Schema<string[], string>
+const schema = Schema.split(",")
+const decode = Schema.decodeUnknownSync(schema)
+
+console.log(decode("")) // [""]
+console.log(decode(",")) // ["", ""]
+console.log(decode("a,")) // ["a", ""]
+console.log(decode("a,b")) // ["a", "b"]
 ```
 
-This error occurs because the explicit annotation `S.suspend((): S.Schema<Category> => Category` is no longer sufficient and needs to be adjusted by explicitly adding the `Encoded` type:
+### Trim
+
+The `Trim` schema allows removing whitespaces from the beginning and end of a string.
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-interface CategoryEncoded {
-  readonly id: string
-  readonly name: string
-  readonly subcategories: ReadonlyArray<CategoryEncoded>
-}
+// Schema<string>
+const schema = Schema.Trim
+const decode = Schema.decodeUnknownSync(schema)
 
-class Category extends S.Class<Category>("Category")({
-  id: S.NumberFromString,
-  name: S.String,
-  subcategories: S.Array(
-    S.suspend((): S.Schema<Category, CategoryEncoded> => Category)
-  )
-}) {}
+console.log(decode("a")) // "a"
+console.log(decode(" a")) // "a"
+console.log(decode("a ")) // "a"
+console.log(decode(" a ")) // "a"
 ```
 
-As we've observed, it's necessary to define an interface for the `Encoded` of the schema to enable recursive schema definition, which can complicate things and be quite tedious. One pattern to mitigate this is to **separate the field responsible for recursion** from all other fields.
+**Note**. If you were looking for a combinator to check if a string is trimmed, check out the `trimmed` filter.
 
-```ts
-import * as S from "@effect/schema/Schema"
+### Lowercase
 
-const fields = {
-  id: S.NumberFromString,
-  name: S.String
-  // ...possibly other fields
-}
+The `Lowercase` schema converts a string to lowercase.
 
-interface CategoryEncoded extends S.Struct.Encoded<typeof fields> {
-  readonly subcategories: ReadonlyArray<CategoryEncoded> // Define `subcategories` using recursion
-}
+```ts
+import { Schema } from "@effect/schema"
 
-class Category extends S.Class<Category>("Category")({
-  ...fields, // Include the fields
-  subcategories: S.Array(
-    S.suspend((): S.Schema<Category, CategoryEncoded> => Category)
-  ) // Define `subcategories` using recursion
-}) {}
-```
+const decode = Schema.decodeUnknownSync(Schema.Lowercase)
 
-## Tagged Class variants
+console.log(decode("A")) // "a"
+console.log(decode(" AB")) // " ab"
+console.log(decode("Ab ")) // "ab "
+console.log(decode(" ABc ")) // " abc "
+```
 
-You can also create classes that extend `TaggedClass` & `TaggedError` from the `effect/Data` module:
+**Note**. If you were looking for a combinator to check if a string is lowercased, check out the `Lowercased` schema or the `lowercased` filter.
 
-```ts
-import * as S from "@effect/schema/Schema"
+### Uppercase
 
-class TaggedPerson extends S.TaggedClass<TaggedPerson>()("TaggedPerson", {
-  name: S.String
-}) {}
+The `Uppercase` schema converts a string to uppercase.
 
-class HttpError extends S.TaggedError<HttpError>()("HttpError", {
-  status: S.Number
-}) {}
+```ts
+import { Schema } from "@effect/schema"
 
-const joe = new TaggedPerson({ name: "Joe" })
-console.log(joe._tag) // "TaggedPerson"
+const decode = Schema.decodeUnknownSync(Schema.Uppercase)
 
-const error = new HttpError({ status: 404 })
-console.log(error._tag) // "HttpError"
-console.log(error.stack) // access the stack trace
+console.log(decode("a")) // "A"
+console.log(decode(" ab")) // " AB"
+console.log(decode("aB ")) // "AB "
+console.log(decode(" abC ")) // " ABC "
 ```
 
-## Extending existing Classes
+**Note**. If you were looking for a combinator to check if a string is uppercased, check out the `Uppercased` schema or the `uppercased` filter.
 
-In situations where you need to augment your existing class with more fields, the built-in `extend` utility comes in handy:
+### parseJson
+
+The `parseJson` constructor offers a method to convert JSON strings into the `unknown` type using the underlying functionality of `JSON.parse`. It also employs `JSON.stringify` for encoding.
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-class Person extends S.Class<Person>("Person")({
-  id: S.Number,
-  name: S.String.pipe(S.nonEmpty())
-}) {
-  get upperName() {
-    return this.name.toUpperCase()
-  }
-}
+// Schema<unknown, string>
+const schema = Schema.parseJson()
+const decode = Schema.decodeUnknownSync(schema)
 
-class PersonWithAge extends Person.extend<PersonWithAge>("PersonWithAge")({
-  age: S.Number
-}) {
-  get isAdult() {
-    return this.age >= 18
-  }
-}
-```
+// Parse valid JSON strings
+console.log(decode("{}")) // Output: {}
+console.log(decode(`{"a":"b"}`)) // Output: { a: "b" }
 
-## Transformations
+// Attempting to decode an empty string results in an error
+decode("")
+/*
+throws:
+Error: (JsonString <-> unknown)
+└─ Transformation process failure
+   └─ Unexpected end of JSON input
+*/
+```
 
-You have the option to enhance a class with (effectful) transformations. This becomes valuable when you want to enrich or validate an entity sourced from a data store.
+Additionally, you can refine the parsing result by providing a schema to the `parseJson` constructor:
 
 ```ts
-import * as ParseResult from "@effect/schema/ParseResult"
-import * as S from "@effect/schema/Schema"
-import * as Effect from "effect/Effect"
-import * as Option from "effect/Option"
-
-export class Person extends S.Class<Person>("Person")({
-  id: S.Number,
-  name: S.String
-}) {}
+import { Schema } from "@effect/schema"
 
-console.log(S.decodeUnknownSync(Person)({ id: 1, name: "name" }))
 /*
-Output:
-Person { id: 1, name: 'name' }
+Schema.Schema<{
+    readonly a: number;
+}, string, never>
 */
+const schema = Schema.parseJson(Schema.Struct({ a: Schema.Number }))
+```
 
-function getAge(id: number): Effect.Effect<number, Error> {
-  return Effect.succeed(id + 2)
-}
+In this example, we've used `parseJson` with a struct schema to ensure that the parsed result has a specific structure, including an object with a numeric property "a". This helps in handling JSON data with predefined shapes.
 
-export class PersonWithTransform extends Person.transformOrFail<PersonWithTransform>(
-  "PersonWithTransform"
-)(
-  {
-    age: S.optional(S.Number, { exact: true, as: "Option" })
-  },
-  {
-    decode: (input) =>
-      Effect.mapBoth(getAge(input.id), {
-        onFailure: (e) =>
-          new ParseResult.Type(S.String.ast, input.id, e.message),
-        // must return { age: Option<number> }
-        onSuccess: (age) => ({ ...input, age: Option.some(age) })
-      }),
-    encode: ParseResult.succeed
-  }
-) {}
+## Number Transformations
 
-S.decodeUnknownPromise(PersonWithTransform)({ id: 1, name: "name" }).then(
-  console.log
-)
-/*
-Output:
-PersonWithTransform {
-  id: 1,
-  name: 'name',
-  age: { _id: 'Option', _tag: 'Some', value: 3 }
-}
-*/
+### NumberFromString
 
-export class PersonWithTransformFrom extends Person.transformOrFailFrom<PersonWithTransformFrom>(
-  "PersonWithTransformFrom"
-)(
-  {
-    age: S.optional(S.Number, { exact: true, as: "Option" })
-  },
-  {
-    decode: (input) =>
-      Effect.mapBoth(getAge(input.id), {
-        onFailure: (e) => new ParseResult.Type(S.String.ast, input, e.message),
-        // must return { age?: number }
-        onSuccess: (age) => (age > 18 ? { ...input, age } : { ...input })
-      }),
-    encode: ParseResult.succeed
-  }
-) {}
+Transforms a `string` into a `number` by parsing the string using `parseFloat`.
 
-S.decodeUnknownPromise(PersonWithTransformFrom)({ id: 1, name: "name" }).then(
-  console.log
-)
+The following special string values are supported: "NaN", "Infinity", "-Infinity".
+
+```ts
+import { Schema } from "@effect/schema"
+
+// Schema<number, string>
+const schema = Schema.NumberFromString
+const decode = Schema.decodeUnknownSync(schema)
+
+// success cases
+console.log(decode("1")) // 1
+console.log(decode("-1")) // -1
+console.log(decode("1.5")) // 1.5
+console.log(decode("NaN")) // NaN
+console.log(decode("Infinity")) // Infinity
+console.log(decode("-Infinity")) // -Infinity
+
+// failure cases
+decode("a")
 /*
-Output:
-PersonWithTransformFrom {
-  id: 1,
-  name: 'name',
-  age: { _id: 'Option', _tag: 'None' }
-}
+throws:
+Error: NumberFromString
+└─ Transformation process failure
+   └─ Expected NumberFromString, actual "a"
 */
 ```
 
-The decision of which API to use, either `transformOrFail` or `transformOrFailFrom`, depends on when you wish to execute the transformation:
-
-1. Using `transformOrFail`:
+### clamp
 
-   - The transformation occurs at the end of the process.
-   - It expects you to provide a value of type `{ age: Option<number> }`.
-   - After processing the initial input, the new transformation comes into play, and you need to ensure the final output adheres to the specified structure.
+Clamps a `number` between a minimum and a maximum value.
 
-2. Using `transformOrFailFrom`:
-   - The new transformation starts as soon as the initial input is handled.
-   - You should provide a value `{ age?: number }`.
-   - Based on this fresh input, the subsequent transformation `{ age: S.optionalToOption(S.Number, { exact: true }) }` is executed.
-   - This approach allows for immediate handling of the input, potentially influencing the subsequent transformations.
+```ts
+import { Schema } from "@effect/schema"
 
-# Transformations
+// Schema<number>
+const schema = Schema.Number.pipe(Schema.clamp(-1, 1)) // clamps the input to -1 <= x <= 1
 
-In some cases, we may need to transform the output of a schema to a different type. For instance, we may want to parse a string into a number, or we may want to transform a date string into a `Date` object.
+const decode = Schema.decodeUnknownSync(schema)
 
-To perform these kinds of transformations, the `@effect/schema` library provides the `transform` combinator.
+console.log(decode(-3)) // -1
+console.log(decode(0)) // 0
+console.log(decode(3)) // 1
+```
 
-## transform
+### parseNumber
 
-```ts
-declare const transform: <To extends Schema.Any, From extends Schema.Any>(
-    from: From,
-    to: To,
-    options: {
-      readonly decode: (fromA: Schema.Type<From>) => Schema.Encoded<To>
-      readonly encode: (toI: Schema.Encoded<To>) => Schema.Type<From>
-      readonly strict?: true
-    } | {
-      readonly decode: (fromA: Schema.Type<From>) => unknown
-      readonly encode: (toI: Schema.Encoded<To>) => unknown
-      readonly strict: false
-    }
-  ): transform<From, To>
-```
+Transforms a `string` into a `number` by parsing the string using the `parse` function of the `effect/Number` module.
 
-```mermaid
-flowchart TD
-  schema1["from: Schema&lt;B, A&gt;"]
-  schema2["to: Schema&lt;D, C&gt;"]
-  schema1--decode: B -> C-->schema2
-  schema2--encode: C -> B-->schema1
-```
+It returns an error if the value can't be converted (for example when non-numeric characters are provided).
 
-The `transform` combinator takes a source schema, a target schema, a transformation function from the source type to the target type, and a reverse transformation function from the target type back to the source type. It returns a new schema that applies the transformation function to the output of the original schema before returning it. If the original schema fails to parse a value, the transformed schema will also fail.
+The following special string values are supported: "NaN", "Infinity", "-Infinity".
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// use the transform combinator to convert the string schema into the tuple schema
-export const transformedSchema: S.Schema<readonly [string], string> =
-  S.transform(S.String, S.Tuple(S.String), {
-    // define a function that converts a string into a tuple with one element of type string
-    decode: (s) => [s] as const,
-    // define a function that converts a tuple with one element of type string into a string
-    encode: ([s]) => s
-  })
+const schema = Schema.String.pipe(Schema.parseNumber)
+
+const decode = Schema.decodeUnknownSync(schema)
+
+console.log(decode("1")) // 1
+console.log(decode("Infinity")) // Infinity
+console.log(decode("NaN")) // NaN
+console.log(decode("-"))
+/*
+throws
+Error: (string <-> number)
+└─ Transformation process failure
+   └─ Expected (string <-> number), actual "-"
+*/
 ```
 
-In the example above, we defined a schema for the `string` type and a schema for the tuple type `[string]`. We also defined the functions `decode` and `encode` that convert a `string` into a tuple and a tuple into a `string`, respectively. Then, we used the `transform` combinator to convert the string schema into a schema for the tuple type `[string]`. The resulting schema can be used to parse values of type `string` into values of type `[string]`.
+## Boolean Transformations
 
-### Non-strict option
+### Not
 
-If you need to be less restrictive in your `decode` and `encode` functions, you can make use of the `{ strict: false }` option:
+Negates a boolean value.
 
 ```ts
-<To extends Schema.Any, From extends Schema.Any>(
-  from: From,
-  to: To,
-  options: {
-    readonly decode: (fromA: Schema.Type<From>) => Schema.Encoded<To>
-    readonly encode: (toI: Schema.Encoded<To>) => Schema.Type<From>
-    readonly strict?: true
-  } | {
-    readonly decode: (fromA: Schema.Type<From>) => unknown // Less strict constraint
-    readonly encode: (toI: Schema.Encoded<To>) => unknown // Less strict constraint
-    readonly strict: false
-  }
-): transform<From, To>
+import { Schema } from "@effect/schema"
+
+// Schema<boolean>
+const schema = Schema.Not
+
+const decode = Schema.decodeUnknownSync(schema)
+
+console.log(decode(true)) // false
+console.log(decode(false)) // true
 ```
 
-This is useful when you want to relax the type constraints imposed by the `decode` and `encode` functions, making them more permissive.
+## Symbol transformations
 
-## transformOrFail
+### Symbol
 
-The `transformOrFail` combinator works in a similar way, but allows the transformation function to return an `Effect<A, ParseError, R`, which can either be a success or a failure.
+Transforms a `string` into a `symbol` by parsing the string using `Symbol.for`.
 
 ```ts
-<To extends Schema.Any, From extends Schema.Any, RD, RE>(
-  from: From,
-  to: To,
-  options: {
-    readonly decode: (
-      fromA: Schema.Type<From>,
-      options: ParseOptions,
-      ast: AST.Transformation
-    ) => Effect.Effect<Schema.Encoded<To>, ParseResult.ParseIssue, RD>
-    readonly encode: (
-      toI: Schema.Encoded<To>,
-      options: ParseOptions,
-      ast: AST.Transformation
-    ) => Effect.Effect<Schema.Type<From>, ParseResult.ParseIssue, RE>
-    readonly strict?: true
-  } | {
-    readonly decode: (
-      fromA: Schema.Type<From>,
-      options: ParseOptions,
-      ast: AST.Transformation
-    ) => Effect.Effect<unknown, ParseResult.ParseIssue, RD>
-    readonly encode: (
-      toI: Schema.Encoded<To>,
-      options: ParseOptions,
-      ast: AST.Transformation
-    ) => Effect.Effect<unknown, ParseResult.ParseIssue, RE>
-    readonly strict: false
-  }
-): transformOrFail<From, To, RD | RE>
+import { Schema } from "@effect/schema"
+
+const schema = Schema.Symbol // Schema<symbol, string>
+const decode = Schema.decodeUnknownSync(schema)
+
+console.log(decode("a")) // Symbol(a)
 ```
 
-Both `decode` and `encode` functions not only receive the value to transform (`fromA` and `toI`), but also the parse options that the user sets when using the resulting schema, and the `ast`, which represents the `AST` of the schema you're transforming.
+## BigInt transformations
 
-Example
+### BigInt
+
+Transforms a `string` into a `BigInt` by parsing the string using `BigInt`.
 
 ```ts
-import * as ParseResult from "@effect/schema/ParseResult"
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-export const transformedSchema: S.Schema<boolean, string> = S.transformOrFail(
-  S.String,
-  S.Boolean,
-  {
-    // define a function that converts a string into a boolean
-    decode: (s) =>
-      s === "true"
-        ? ParseResult.succeed(true)
-        : s === "false"
-          ? ParseResult.succeed(false)
-          : ParseResult.fail(
-              new ParseResult.Type(S.Literal("true", "false").ast, s)
-            ),
-    // define a function that converts a boolean into a string
-    encode: (b) => ParseResult.succeed(String(b))
+const schema = Schema.BigInt // Schema<BigInt, string>
+const decode = Schema.decodeUnknownSync(schema)
+
+// success cases
+console.log(decode("1")) // 1n
+console.log(decode("-1")) // -1n
+
+// failure cases
+decode("a")
+/*
+throws:
+Error: BigInt
+└─ Transformation process failure
+   └─ Expected BigInt, actual "a"
+*/
+decode("1.5") // throws
+decode("NaN") // throws
+decode("Infinity") // throws
+decode("-Infinity") // throws
+```
+
+### BigIntFromNumber
+
+Transforms a `number` into a `BigInt` by parsing the number using `BigInt`.
+
+```ts
+import { Schema } from "@effect/schema"
+
+const schema = Schema.BigIntFromNumber // Schema<BigInt, number>
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
+
+// success cases
+console.log(decode(1)) // 1n
+console.log(decode(-1)) // -1n
+console.log(encode(1n)) // 1
+console.log(encode(-1n)) // -1
+
+// failure cases
+decode(1.5)
+/*
+throws:
+Error: BigIntFromNumber
+└─ Transformation process failure
+   └─ Expected BigIntFromNumber, actual 1.5
+*/
+decode(NaN) // throws
+decode(Infinity) // throws
+decode(-Infinity) // throws
+encode(BigInt(Number.MAX_SAFE_INTEGER) + 1n) // throws
+encode(BigInt(Number.MIN_SAFE_INTEGER) - 1n) // throws
+```
+
+### clamp
+
+Clamps a `BigInt` between a minimum and a maximum value.
+
+```ts
+import { Schema } from "@effect/schema"
+
+const schema = Schema.BigIntFromSelf.pipe(Schema.clampBigInt(-1n, 1n)) // clamps the input to -1n <= x <= 1n
+
+const decode = Schema.decodeUnknownSync(schema)
+
+console.log(decode(-3n)) // -1n
+console.log(decode(0n)) // 0n
+console.log(decode(3n)) // 1n
+```
+
+## Date transformations
+
+### Date
+
+Transforms a `string` into a **valid** `Date`, ensuring that invalid dates, such as `new Date("Invalid Date")`, are rejected.
+
+```ts
+import { Schema } from "@effect/schema"
+
+const schema = Schema.Date // Schema<Date, string>
+const decode = Schema.decodeUnknownSync(schema)
+
+console.log(decode("1970-01-01T00:00:00.000Z")) // 1970-01-01T00:00:00.000Z
+
+decode("a")
+/*
+throws:
+Error: Date
+└─ Predicate refinement failure
+   └─ Expected Date (a valid Date), actual Invalid Date
+*/
+
+const validate = Schema.validateSync(schema)
+
+console.log(validate(new Date(0))) // 1970-01-01T00:00:00.000Z
+validate(new Date("Invalid Date"))
+/*
+throws:
+Error: Date
+└─ Predicate refinement failure
+   └─ Expected Date (a valid Date), actual Invalid Date
+*/
+```
+
+## BigDecimal Transformations
+
+### BigDecimal
+
+Transforms a `string` into a `BigDecimal`.
+
+```ts
+import { Schema } from "@effect/schema"
+
+const schema = Schema.BigDecimal // Schema<BigDecimal, string>
+const decode = Schema.decodeUnknownSync(schema)
+
+console.log(decode(".124")) // { _id: 'BigDecimal', value: '124', scale: 3 }
+```
+
+### BigDecimalFromNumber
+
+Transforms a `number` into a `BigDecimal`.
+
+> [!WARNING]
+> Warning: When encoding, this Schema will produce incorrect results if the BigDecimal exceeds the 64-bit range of a number.
+
+```ts
+import { Schema } from "@effect/schema"
+
+const schema = Schema.BigDecimalFromNumber // Schema<BigDecimal, number>
+const decode = Schema.decodeUnknownSync(schema)
+
+console.log(decode(0.111)) // { _id: 'BigDecimal', value: '111', scale: 3 }
+```
+
+### clampBigDecimal
+
+Clamps a `BigDecimal` between a minimum and a maximum value.
+
+```ts
+import { Schema } from "@effect/schema"
+import { BigDecimal } from "effect"
+
+const schema = Schema.BigDecimal.pipe(
+  Schema.clampBigDecimal(BigDecimal.fromNumber(-1), BigDecimal.fromNumber(1))
+)
+
+const decode = Schema.decodeUnknownSync(schema)
+
+console.log(decode("-2")) // { _id: 'BigDecimal', value: '-1', scale: 0 }
+console.log(decode("0")) // { _id: 'BigDecimal', value: '0', scale: 0 }
+console.log(decode("3")) // { _id: 'BigDecimal', value: '1', scale: 0 }
+```
+
+## Duration Transformations
+
+### Duration
+
+Converts an hrtime(i.e. `[seconds: number, nanos: number]`) into a `Duration`.
+
+```ts
+import { Schema } from "@effect/schema"
+
+const schema = Schema.Duration // Schema<Duration, number>
+const decode = Schema.decodeUnknownSync(schema)
+
+console.log(decode([0, 0])) // { _id: 'Duration', _tag: 'Millis', millis: 0 }
+console.log(decode([5000, 0])) // { _id: 'Duration', _tag: 'Nanos', hrtime: [ 5000, 0 ] }
+```
+
+#### DurationFromMillis
+
+Converts a `number` into a `Duration` where the number represents the number of milliseconds.
+
+```ts
+import { Schema } from "@effect/schema"
+
+const schema = Schema.DurationFromMillis // Schema<Duration, number>
+const decode = Schema.decodeUnknownSync(schema)
+
+console.log(decode(0)) // { _id: 'Duration', _tag: 'Millis', millis: 0 }
+console.log(decode(5000)) // { _id: 'Duration', _tag: 'Millis', millis: 5000 }
+```
+
+### DurationFromNanos
+
+Converts a `BigInt` into a `Duration` where the number represents the number of nanoseconds.
+
+```ts
+import { Schema } from "@effect/schema"
+
+const schema = Schema.DurationFromNanos // Schema<Duration, BigInt>
+const decode = Schema.decodeUnknownSync(schema)
+
+console.log(decode(0n)) // { _id: 'Duration', _tag: 'Millis', millis: 0 }
+console.log(decode(5000000000n)) // { _id: 'Duration', _tag: 'Nanos', hrtime: [ 5, 0 ] }
+```
+
+### clampDuration
+
+Clamps a `Duration` between a minimum and a maximum value.
+
+```ts
+import { Schema } from "@effect/schema"
+import { Duration } from "effect"
+
+const schema = Schema.DurationFromSelf.pipe(
+  Schema.clampDuration("5 seconds", "10 seconds")
+)
+
+const decode = Schema.decodeUnknownSync(schema)
+
+console.log(decode(Duration.decode("2 seconds"))) // { _id: 'Duration', _tag: 'Millis', millis: 5000 }
+console.log(decode(Duration.decode("6 seconds"))) // { _id: 'Duration', _tag: 'Millis', millis: 6000 }
+console.log(decode(Duration.decode("11 seconds"))) // { _id: 'Duration', _tag: 'Millis', millis: 10000 }
+```
+
+## Secret transformations
+
+### Secret
+
+Converts a `string` into a `Secret`.
+
+```ts
+import { Schema } from "@effect/schema"
+
+const schema = Schema.Secret // Schema<Secret, string>
+const decode = Schema.decodeUnknownSync(schema)
+
+console.log(decode("keep it secret, keep it safe")) // {}
+```
+
+# Advanced Usage
+
+## Annotations
+
+One of the fundamental requirements in the design of `@effect/schema` is that it is extensible and customizable. Customizations are achieved through "annotations". Each node contained in the AST of `@effect/schema/AST` contains an `annotations: Record<symbol, unknown>` field that can be used to attach additional information to the schema.
+You can manage these annotations using the `annotations` method.
+
+Let's see some examples:
+
+```ts
+import { Schema } from "@effect/schema"
+
+const Password =
+  // initial schema, a string
+  Schema.String
+    // add an error message for non-string values
+    .annotations({ message: () => "not a string" })
+    .pipe(
+      // add a constraint to the schema, only non-empty strings are valid
+      // and add an error message for empty strings
+      Schema.nonEmpty({ message: () => "required" }),
+      // add a constraint to the schema, only strings with a length less or equal than 10 are valid
+      // and add an error message for strings that are too long
+      Schema.maxLength(10, { message: (s) => `${s} is too long` })
+      // add an identifier to the schema
+    )
+    .annotations({
+      // add an identifier to the schema
+      identifier: "Password",
+      // add a title to the schema
+      title: "password",
+      // add a description to the schema
+      description:
+        "A password is a string of characters used to verify the identity of a user during the authentication process",
+      // add examples to the schema
+      examples: ["1Ki77y", "jelly22fi$h"],
+      // add documentation to the schema
+      documentation: `jsDoc documentation...`
+    })
+```
+
+The example shows some built-in combinators to add meta information, but users can easily add their own meta information by defining a custom annotation.
+
+Here's an example of how to add a `deprecated` annotation:
+
+```ts
+import { AST, Schema } from "@effect/schema"
+
+const DeprecatedId = Symbol.for(
+  "some/unique/identifier/for/the/custom/annotation"
+)
+
+const deprecated = <A, I, R>(
+  self: Schema.Schema<A, I, R>
+): Schema.Schema<A, I, R> =>
+  Schema.make(AST.annotations(self.ast, { [DeprecatedId]: true }))
+
+const schema = deprecated(Schema.String)
+
+console.log(schema)
+/*
+Output:
+{
+  ast: {
+    _tag: 'StringKeyword',
+    annotations: {
+      [Symbol(@effect/schema/annotation/Title)]: 'string',
+      [Symbol(@effect/schema/annotation/Description)]: 'a string',
+      [Symbol(some/unique/identifier/for/the/custom/annotation)]: true
+    }
   }
+  ...
+}
+*/
+```
+
+Annotations can be read using the `getAnnotation` helper, here's an example:
+
+```ts
+import { AST, Schema } from "@effect/schema"
+import { Option } from "effect"
+
+const DeprecatedId = Symbol.for(
+  "some/unique/identifier/for/the/custom/annotation"
 )
+
+const deprecated = <A, I, R>(
+  self: Schema.Schema<A, I, R>
+): Schema.Schema<A, I, R> =>
+  Schema.make(AST.annotations(self.ast, { [DeprecatedId]: true }))
+
+const schema = deprecated(Schema.String)
+
+const isDeprecated = <A, I, R>(schema: Schema.Schema<A, I, R>): boolean =>
+  AST.getAnnotation<boolean>(DeprecatedId)(schema.ast).pipe(
+    Option.getOrElse(() => false)
+  )
+
+console.log(isDeprecated(Schema.String)) // false
+console.log(isDeprecated(schema)) // true
+```
+
+## Recursive Schemas
+
+The `suspend` combinator is useful when you need to define a `Schema` that depends on itself, like in the case of recursive data structures. In this example, the `Category` schema depends on itself because it has a field `subcategories` that is an array of `Category` objects.
+
+```ts
+import { Schema } from "@effect/schema"
+
+interface Category {
+  readonly name: string
+  readonly subcategories: ReadonlyArray<Category>
+}
+
+const Category: Schema.Schema<Category> = Schema.Struct({
+  name: Schema.String,
+  subcategories: Schema.Array(Schema.suspend(() => Category))
+})
+```
+
+> [!NOTE]
+> It is necessary to define the `Category` type and add an explicit type annotation (`const Category: S.Schema<Category>`) because otherwise TypeScript would struggle to infer types correctly. Without this annotation, you might encounter the error message: "'Category' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.ts(7022)"
+
+### A Helpful Pattern to Simplify Schema Definition
+
+As we've observed, it's necessary to define an interface for the `Type` of the schema to enable recursive schema definition, which can complicate things and be quite tedious. One pattern to mitigate this is to **separate the field responsible for recursion** from all other fields.
+
+```ts
+import { Schema } from "@effect/schema"
+
+const fields = {
+  name: Schema.String
+  // ...possibly other fields
+}
+
+// Define an interface for the Category schema, extending the Type of the defined fields
+interface Category extends Schema.Struct.Type<typeof fields> {
+  readonly subcategories: ReadonlyArray<Category> // Define `subcategories` using recursion
+}
+
+const Category: Schema.Schema<Category> = Schema.Struct({
+  ...fields, // Include the fields
+  subcategories: Schema.Array(Schema.suspend(() => Category)) // Define `subcategories` using recursion
+})
+```
+
+### Mutually Recursive Schemas
+
+Here's an example of two mutually recursive schemas, `Expression` and `Operation`, that represent a simple arithmetic expression tree.
+
+```ts
+import { Schema } from "@effect/schema"
+
+interface Expression {
+  readonly type: "expression"
+  readonly value: number | Operation
+}
+
+interface Operation {
+  readonly type: "operation"
+  readonly operator: "+" | "-"
+  readonly left: Expression
+  readonly right: Expression
+}
+
+const Expression: Schema.Schema<Expression> = Schema.Struct({
+  type: Schema.Literal("expression"),
+  value: Schema.Union(
+    Schema.Number,
+    Schema.suspend(() => Operation)
+  )
+})
+
+const Operation: Schema.Schema<Operation> = Schema.Struct({
+  type: Schema.Literal("operation"),
+  operator: Schema.Literal("+", "-"),
+  left: Expression,
+  right: Expression
+})
+```
+
+### Recursive Types with Different Encoded and Type
+
+Defining a recursive schema where the `Encoded` type differs from the `Type` type adds another layer of complexity. In such cases, we need to define two interfaces: one for the `Type` type, as seen previously, and another for the `Encoded` type.
+
+Let's consider an example: suppose we want to add an `id` field to the `Category` schema, where the schema for `id` is `NumberFromString`. It's important to note that `NumberFromString` is a schema that transforms a string into a number, so the `Type` and `Encoded` types of `NumberFromString` differ, being `number` and `string` respectively. When we add this field to the `Category` schema, TypeScript raises an error:
+
+```ts
+import { Schema } from "@effect/schema"
+
+const fields = {
+  id: Schema.NumberFromString,
+  name: Schema.String
+}
+
+interface Category extends Schema.Struct.Type<typeof fields> {
+  readonly subcategories: ReadonlyArray<Category>
+}
+
+/*
+TypeScript error:
+Type 'Category' is not assignable to type '{ readonly id: string; readonly name: string; readonly subcategories: readonly Category[]; }'.
+  Types of property 'id' are incompatible.
+    Type 'number' is not assignable to type 'string'.ts(2322)
+*/
+const Category: Schema.Schema<Category> = Schema.Struct({
+  ...fields,
+  subcategories: Schema.Array(Schema.suspend(() => Category))
+})
+```
+
+This error occurs because the explicit annotation `const Category: S.Schema<Category>` is no longer sufficient and needs to be adjusted by explicitly adding the `Encoded` type:
+
+```ts
+import { Schema } from "@effect/schema"
+
+const fields = {
+  id: Schema.NumberFromString,
+  name: Schema.String
+}
+
+interface Category extends Schema.Struct.Type<typeof fields> {
+  readonly subcategories: ReadonlyArray<Category>
+}
+
+interface CategoryEncoded extends Schema.Struct.Encoded<typeof fields> {
+  readonly subcategories: ReadonlyArray<CategoryEncoded>
+}
+
+const Category: Schema.Schema<Category, CategoryEncoded> = Schema.Struct({
+  ...fields,
+  subcategories: Schema.Array(Schema.suspend(() => Category))
+})
+```
+
+## Error messages
+
+### Default Error Messages
+
+When a parsing, decoding, or encoding process encounters a failure, a default error message is automatically generated for you. Let's explore some examples:
+
+```ts
+import { Schema } from "@effect/schema"
+
+const schema = Schema.Struct({
+  name: Schema.String,
+  age: Schema.Number
+})
+
+Schema.decodeUnknownSync(schema)(null)
+/*
+throws:
+Error: Expected { readonly name: string; readonly age: number }, actual null
+*/
+
+Schema.decodeUnknownSync(schema)({}, { errors: "all" })
+/*
+throws:
+Error: { readonly name: string; readonly age: number }
+├─ ["name"]
+│  └─ is missing
+└─ ["age"]
+   └─ is missing
+*/
 ```
 
-The transformation may also be async:
+#### Identifiers in Error Messages
+
+When you include an identifier annotation, it will be incorporated into the default error message, followed by a description if provided:
+
+```ts
+import { Schema } from "@effect/schema"
+
+const schema = Schema.Struct({
+  name: Schema.String.annotations({ identifier: "Name" }),
+  age: Schema.Number.annotations({ identifier: "Age" })
+}).annotations({ identifier: "Person" })
+
+Schema.decodeUnknownSync(schema)(null)
+/*
+throws:
+Error: Expected Person, actual null
+*/
+
+Schema.decodeUnknownSync(schema)({}, { errors: "all" })
+/*
+throws:
+Error: Person
+├─ ["name"]
+│  └─ is missing
+└─ ["age"]
+   └─ is missing
+*/
+
+Schema.decodeUnknownSync(schema)({ name: null, age: null }, { errors: "all" })
+/*
+throws:
+Error: Person
+├─ ["name"]
+│  └─ Expected Name (a string), actual null
+└─ ["age"]
+   └─ Expected Age (a number), actual null
+*/
+```
+
+#### Refinements
+
+When a refinement fails, the default error message indicates whether the failure occurred in the "from" part or within the predicate defining the refinement:
+
+```ts
+import { Schema } from "@effect/schema"
+
+const schema = Schema.Struct({
+  name: Schema.NonEmpty.annotations({ identifier: "Name" }), // refinement
+  age: Schema.Positive.pipe(Schema.int({ identifier: "Age" })) // refinement
+}).annotations({ identifier: "Person" })
+
+// "from" failure
+Schema.decodeUnknownSync(schema)({ name: null, age: 18 })
+/*
+throws:
+Error: Person
+└─ ["name"]
+   └─ Name
+      └─ From side refinement failure
+         └─ Expected a string, actual null
+*/
+
+// predicate failure
+Schema.decodeUnknownSync(schema)({ name: "", age: 18 })
+/*
+throws:
+Error: Person
+└─ ["name"]
+   └─ Name
+      └─ Predicate refinement failure
+         └─ Expected Name (a non empty string), actual ""
+*/
+```
+
+In the first example, the error message indicates a "from" side refinement failure in the "Name" property, specifying that a string was expected but received null. In the second example, a predicate refinement failure is reported, indicating that a non-empty string was expected for "Name," but an empty string was provided.
+
+### Custom Error Messages
+
+Custom messages can be set using the `message` annotation:
+
+```ts
+type MessageAnnotation = (issue: ParseIssue) =>
+  | string
+  | Effect<string>
+  | {
+      readonly message: string | Effect<string>
+      readonly override: boolean
+    }
+```
+
+Here's a simple example of how to set a custom message for the built-in `String` schema:
+
+```ts
+import { Schema } from "@effect/schema"
+
+const MyString = Schema.String.annotations({
+  message: () => "my custom message"
+})
+```
+
+#### General Guidelines for Messages
+
+The general logic followed to determine the messages is as follows:
+
+1. If no custom messages are set, the default message related to the innermost schema where the operation (i.e., decoding or encoding) failed is used.
+
+2. If custom messages are set, then the message corresponding to the **first** failed schema is used, starting from the innermost schema to the outermost. However, if the failing schema does not have a custom message, then **the default message is used**.
+
+3. As an opt-in feature, **you can override guideline 2** by setting the `overwrite` flag to `true`. This allows the custom message to take precedence over all other custom messages from inner schemas. This is to address the scenario where a user wants to define a single cumulative custom message describing the properties that a valid value must have and does not want to see default messages.
+
+Let's see some practical examples.
+
+#### Scalar Schemas
 
 ```ts
-import * as ParseResult from "@effect/schema/ParseResult"
-import * as S from "@effect/schema/Schema"
-import * as TreeFormatter from "@effect/schema/TreeFormatter"
-import * as Effect from "effect/Effect"
+import { Schema } from "@effect/schema"
 
-const api = (url: string): Effect.Effect<unknown, Error> =>
-  Effect.tryPromise({
-    try: () =>
-      fetch(url).then((res) => {
-        if (res.ok) {
-          return res.json() as Promise<unknown>
-        }
-        throw new Error(String(res.status))
-      }),
-    catch: (e) => new Error(String(e))
-  })
+const MyString = Schema.String.annotations({
+  message: () => "my custom message"
+})
 
-const PeopleId = S.String.pipe(S.brand("PeopleId"))
+const decode = Schema.decodeUnknownEither(MyString)
 
-const PeopleIdFromString = S.transformOrFail(S.String, PeopleId, {
-  decode: (s, _, ast) =>
-    Effect.mapBoth(api(`https://swapi.dev/api/people/${s}`), {
-      onFailure: (e) => new ParseResult.Type(ast, s, e.message),
-      onSuccess: () => s
-    }),
-  encode: ParseResult.succeed
+console.log(decode(null)) // "my custom message"
+```
+
+#### Refinements
+
+This example demonstrates setting a custom message on the last refinement in a chain of refinements. As you can see, the custom message is only used if the refinement related to `maxLength` fails; otherwise, default messages are used.
+
+```ts
+import { Schema } from "@effect/schema"
+
+const MyString = Schema.String.pipe(
+  Schema.minLength(1),
+  Schema.maxLength(2)
+).annotations({
+  // This message is displayed only if the last filter (`maxLength`) fails
+  message: () => "my custom message"
 })
 
-const decode = (id: string) =>
-  Effect.mapError(S.decodeUnknown(PeopleIdFromString)(id), (e) =>
-    TreeFormatter.formatError(e)
+const decode = Schema.decodeUnknownEither(MyString)
+
+console.log(decode(null)) // "Expected a string, actual null"
+console.log(decode("")) // `Expected a string at least 1 character(s) long, actual ""`
+console.log(decode("abc")) // "my custom message"
+```
+
+When setting multiple override messages, the one corresponding to the **first** failed predicate is used, starting from the innermost refinement to the outermost:
+
+```ts
+import { Schema } from "@effect/schema"
+
+const MyString = Schema.String
+  // This message is displayed only if a non-String is passed as input
+  .annotations({ message: () => "String custom message" })
+  .pipe(
+    // This message is displayed only if the filter `minLength` fails
+    Schema.minLength(1, { message: () => "minLength custom message" }),
+    // This message is displayed only if the filter `maxLength` fails
+    Schema.maxLength(2, { message: () => "maxLength custom message" })
   )
 
-Effect.runPromiseExit(decode("1")).then(console.log)
-/*
-Output:
-{ _id: 'Exit', _tag: 'Success', value: '1' }
-*/
+const decode = Schema.decodeUnknownEither(MyString)
 
-Effect.runPromiseExit(decode("fail")).then(console.log)
-/*
-Output:
-{
-  _id: 'Exit',
-  _tag: 'Failure',
-  cause: {
-    _id: 'Cause',
-    _tag: 'Fail',
-    failure: '(string <-> string)\n└─ Transformation process failure\n   └─ Error: 404'
-  }
-}
-*/
+console.log(decode(null)) // "String custom message"
+console.log(decode("")) // "minLength custom message"
+console.log(decode("abc")) // "maxLength custom message"
 ```
 
-You can also declare dependencies:
+You have the option to change the default behavior by setting the `override` flag to `true`. This is useful when you want to create a single comprehensive custom message that describes the required properties of a valid value without displaying default messages.
 
 ```ts
-import * as ParseResult from "@effect/schema/ParseResult"
-import * as S from "@effect/schema/Schema"
-import * as TreeFormatter from "@effect/schema/TreeFormatter"
-import * as Context from "effect/Context"
-import * as Effect from "effect/Effect"
-import * as Layer from "effect/Layer"
+import { Schema } from "@effect/schema"
 
-const Fetch = Context.GenericTag<"Fetch", typeof fetch>("Fetch")
+const MyString = Schema.String.pipe(
+  Schema.minLength(1),
+  Schema.maxLength(2)
+).annotations({
+  // By setting the `override` flag to `true`, this message will always be shown for any error
+  message: () => ({ message: "my custom message", override: true })
+})
 
-const api = (url: string): Effect.Effect<unknown, Error, "Fetch"> =>
-  Fetch.pipe(
-    Effect.flatMap((fetch) =>
-      Effect.tryPromise({
-        try: () =>
-          fetch(url).then((res) => {
-            if (res.ok) {
-              return res.json() as Promise<unknown>
-            }
-            throw new Error(String(res.status))
-          }),
-        catch: (e) => new Error(String(e))
-      })
-    )
-  )
+const decode = Schema.decodeUnknownEither(MyString)
 
-const PeopleId = S.String.pipe(S.brand("PeopleId"))
+console.log(decode(null)) // "my custom message"
+console.log(decode("")) // "my custom message"
+console.log(decode("abc")) // "my custom message"
+```
 
-const PeopleIdFromString = S.transformOrFail(S.String, PeopleId, {
-  decode: (s, _, ast) =>
-    Effect.mapBoth(api(`https://swapi.dev/api/people/${s}`), {
-      onFailure: (e) => new ParseResult.Type(ast, s, e.message),
-      onSuccess: () => s
-    }),
-  encode: ParseResult.succeed
-})
+#### Transformations
 
-const decode = (id: string) =>
-  Effect.mapError(S.decodeUnknown(PeopleIdFromString)(id), (e) =>
-    TreeFormatter.formatError(e)
-  )
+In this example, `IntFromString` is a transformation schema that converts strings to integers. It applies specific validation messages based on different scenarios.
 
-const FetchLive = Layer.succeed(Fetch, fetch)
+```ts
+import { ParseResult, Schema } from "@effect/schema"
 
-Effect.runPromiseExit(decode("1").pipe(Effect.provide(FetchLive))).then(
-  console.log
+const IntFromString = Schema.transformOrFail(
+  // This message is displayed only if the input is not a string
+  Schema.String.annotations({ message: () => "please enter a string" }),
+  // This message is displayed only if the input can be converted to a number but it's not an integer
+  Schema.Int.annotations({ message: () => "please enter an integer" }),
+  {
+    decode: (s, _, ast) => {
+      const n = Number(s)
+      return Number.isNaN(n)
+        ? ParseResult.fail(new ParseResult.Type(ast, s))
+        : ParseResult.succeed(n)
+    },
+    encode: (n) => ParseResult.succeed(String(n))
+  }
 )
-/*
-Output:
-{ _id: 'Exit', _tag: 'Success', value: '1' }
-*/
+  // This message is displayed only if the input cannot be converted to a number
+  .annotations({ message: () => "please enter a parseable string" })
 
-Effect.runPromiseExit(decode("fail").pipe(Effect.provide(FetchLive))).then(
-  console.log
-)
-/*
-Output:
-{
-  _id: 'Exit',
-  _tag: 'Failure',
-  cause: {
-    _id: 'Cause',
-    _tag: 'Fail',
-    failure: '(string <-> string)\n└─ Transformation process failure\n   └─ Error: 404'
-  }
-}
-*/
-```
+const decode = Schema.decodeUnknownEither(IntFromString)
 
-## String Transformations
+console.log(decode(null)) // "please enter a string"
+console.log(decode("1.2")) // "please enter an integer"
+console.log(decode("not a number")) // "please enter a parseable string"
+```
 
-### split
+#### Compound Schemas
 
-The `split` combinator allows splitting a string into an array of strings.
+The custom message system becomes especially handy when dealing with complex schemas, unlike simple scalar values like `string` or `number`. For instance, consider a schema comprising nested structures, such as a struct containing an array of other structs. Let's explore an example demonstrating the advantage of default messages in handling decoding errors within such nested structures:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
+import { pipe } from "effect"
+
+const schema = Schema.Struct({
+  outcomes: pipe(
+    Schema.Array(
+      Schema.Struct({
+        id: Schema.String,
+        text: pipe(
+          Schema.String,
+          Schema.message(() => "error_invalid_outcome_type"),
+          Schema.minLength(1, { message: () => "error_required_field" }),
+          Schema.maxLength(50, { message: () => "error_max_length_field" })
+        )
+      })
+    ),
+    Schema.minItems(1, { message: () => "error_min_length_field" })
+  )
+})
 
-// Schema<string[], string>
-const schema = S.split(",")
-const decode = S.decodeUnknownSync(schema)
+Schema.decodeUnknownSync(schema, { errors: "all" })({
+  outcomes: []
+})
+/*
+throws
+Error: { outcomes: an array of at least 1 items }
+└─ ["outcomes"]
+   └─ error_min_length_field
+*/
 
-console.log(decode("")) // [""]
-console.log(decode(",")) // ["", ""]
-console.log(decode("a,")) // ["a", ""]
-console.log(decode("a,b")) // ["a", "b"]
+Schema.decodeUnknownSync(schema, { errors: "all" })({
+  outcomes: [
+    { id: "1", text: "" },
+    { id: "2", text: "this one is valid" },
+    { id: "3", text: "1234567890".repeat(6) }
+  ]
+})
+/*
+throws
+Error: { outcomes: an array of at least 1 items }
+└─ ["outcomes"]
+   └─ an array of at least 1 items
+      └─ From side refinement failure
+         └─ ReadonlyArray<{ id: string; text: a string at most 50 character(s) long }>
+            ├─ [0]
+            │  └─ { id: string; text: a string at most 50 character(s) long }
+            │     └─ ["text"]
+            │        └─ error_required_field
+            └─ [2]
+               └─ { id: string; text: a string at most 50 character(s) long }
+                  └─ ["text"]
+                     └─ error_max_length_field
+*/
 ```
 
-### Trim
+#### Effectful messages
 
-The `Trim` schema allows removing whitespaces from the beginning and end of a string.
+Messages are not only of type `string` but can return an `Effect` so that they can have dependencies (for example, from an internationalization service). Let's see the outline of a similar situation with a very simplified example for demonstration purposes:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema, TreeFormatter } from "@effect/schema"
+import { Context, Effect, Either, Option } from "effect"
 
-// Schema<string>
-const schema = S.Trim
-const decode = S.decodeUnknownSync(schema)
+// internationalization service
+class Messages extends Context.Tag("Messages")<
+  Messages,
+  {
+    NonEmpty: string
+  }
+>() {}
 
-console.log(decode("a")) // "a"
-console.log(decode(" a")) // "a"
-console.log(decode("a ")) // "a"
-console.log(decode(" a ")) // "a"
-```
+const Name = Schema.NonEmpty.pipe(
+  Schema.message(() =>
+    Effect.gen(function* (_) {
+      const service = yield* _(Effect.serviceOption(Messages))
+      return Option.match(service, {
+        onNone: () => "Invalid string",
+        onSome: (messages) => messages.NonEmpty
+      })
+    })
+  )
+)
 
-**Note**. If you were looking for a combinator to check if a string is trimmed, check out the `trimmed` filter.
+Schema.decodeUnknownSync(Name)("") // => throws "Invalid string"
 
-### Lowercase
+const result = Schema.decodeUnknownEither(Name)("").pipe(
+  Either.mapLeft((error) =>
+    TreeFormatter.formatError(error).pipe(
+      Effect.provideService(Messages, { NonEmpty: "should be non empty" }),
+      Effect.runSync
+    )
+  )
+)
 
-The `Lowercase` schema converts a string to lowercase.
+console.log(result) // => { _id: 'Either', _tag: 'Left', left: 'should be non empty' }
+```
 
-```ts
-import * as S from "@effect/schema/Schema"
+## Classes
 
-const decode = S.decodeUnknownSync(S.Lowercase)
+When working with schemas, you have a choice beyond the `S.struct` constructor. You can leverage the power of classes through the `Class` utility, which comes with its own set of advantages tailored to common use cases.
 
-console.log(decode("A")) // "a"
-console.log(decode(" AB")) // " ab"
-console.log(decode("Ab ")) // "ab "
-console.log(decode(" ABc ")) // " abc "
-```
+### The Benefits of Using Classes
 
-**Note**. If you were looking for a combinator to check if a string is lowercased, check out the `Lowercased` schema or the `lowercased` filter.
+Classes offer several features that simplify the schema creation process:
 
-### Uppercase
+- **All-in-One Definition**: With classes, you can define both a schema and an opaque type simultaneously.
+- **Shared Functionality**: You can incorporate shared functionality using class methods or getters.
+- **Value Equality and Hashing**: Utilize the built-in capability for checking value equality and applying hashing (thanks to `Class` implementing `Data.Case`).
 
-The `Uppercase` schema converts a string to uppercase.
+Let's dive into an illustrative example to better understand how classes work:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-
-const decode = S.decodeUnknownSync(S.Uppercase)
+import { Schema } from "@effect/schema"
 
-console.log(decode("a")) // "A"
-console.log(decode(" ab")) // " AB"
-console.log(decode("aB ")) // "AB "
-console.log(decode(" abC ")) // " ABC "
+// Define your schema by providing the type to `Class` and the desired fields
+class Person extends Schema.Class<Person>("Person")({
+  id: Schema.Number,
+  name: Schema.String.pipe(Schema.nonEmpty())
+}) {}
 ```
 
-**Note**. If you were looking for a combinator to check if a string is uppercased, check out the `Uppercased` schema or the `uppercased` filter.
-
-### parseJson
+### Validation and Instantiation
 
-The `parseJson` constructor offers a method to convert JSON strings into the `unknown` type using the underlying functionality of `JSON.parse`. It also employs `JSON.stringify` for encoding.
+The class constructor serves as a validation and instantiation tool. It ensures that the provided properties meet the schema requirements:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-
-// Schema<unknown, string>
-const schema = S.parseJson()
-const decode = S.decodeUnknownSync(schema)
+const tim = new Person({ id: 1, name: "Tim" })
+```
 
-// Parse valid JSON strings
-console.log(decode("{}")) // Output: {}
-console.log(decode(`{"a":"b"}`)) // Output: { a: "b" }
+Keep in mind that it throws an error for invalid properties...
 
-// Attempting to decode an empty string results in an error
-decode("")
-/*
-throws:
-Error: (JsonString <-> unknown)
-└─ Transformation process failure
-   └─ Unexpected end of JSON input
+```ts
+new Person({ id: 1, name: "" })
+/* throws
+Error: Person (Constructor)
+└─ ["name"]
+   └─ a non empty string
+      └─ Predicate refinement failure
+         └─ Expected a non empty string, actual ""
 */
 ```
 
-Additionally, you can refine the parsing result by providing a schema to the `parseJson` constructor:
+...unless you explicitly disable validation:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-
-// Schema<{ readonly a: number; }, string>
-const schema = S.parseJson(S.Struct({ a: S.Number }))
+new Person({ id: 1, name: "" }, true) // no error
 ```
 
-In this example, we've used `parseJson` with a struct schema to ensure that the parsed result has a specific structure, including an object with a numeric property "a". This helps in handling JSON data with predefined shapes.
+### No Args
 
-## Number Transformations
+If you don't want to have any arguments, you can use `{}`:
 
-### NumberFromString
+```ts
+import { Schema } from "@effect/schema"
+
+class NoArgs extends Schema.Class<NoArgs>("NoArgs")({}) {}
+
+const noargs = new NoArgs()
+```
 
-Transforms a `string` into a `number` by parsing the string using `parseFloat`.
+### Custom Getters and Methods
 
-The following special string values are supported: "NaN", "Infinity", "-Infinity".
+For more flexibility, you can also introduce custom getters and methods:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// Schema<number, string>
-const schema = S.NumberFromString
-const decode = S.decodeUnknownSync(schema)
+class Person extends Schema.Class<Person>("Person")({
+  id: Schema.Number,
+  name: Schema.String.pipe(Schema.nonEmpty())
+}) {
+  get upperName() {
+    return this.name.toUpperCase()
+  }
+}
 
-// success cases
-console.log(decode("1")) // 1
-console.log(decode("-1")) // -1
-console.log(decode("1.5")) // 1.5
-console.log(decode("NaN")) // NaN
-console.log(decode("Infinity")) // Infinity
-console.log(decode("-Infinity")) // -Infinity
+const john = new Person({ id: 1, name: "John" })
 
-// failure cases
-decode("a")
-/*
-throws:
-Error: NumberFromString
-└─ Transformation process failure
-   └─ Expected NumberFromString, actual "a"
-*/
+console.log(john.upperName) // "JOHN"
 ```
 
-### clamp
+### Accessing Related Schemas
 
-Clamps a `number` between a minimum and a maximum value.
+The class constructor itself is a Schema, and can be assigned/provided anywhere a Schema is expected. There is also a `.fields` property, which can be used when the class prototype is not required.
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-// Schema<number>
-const schema = S.Number.pipe(S.clamp(-1, 1)) // clamps the input to -1 <= x <= 1
+class Person extends Schema.Class<Person>("Person")({
+  id: Schema.Number,
+  name: Schema.String.pipe(Schema.nonEmpty())
+}) {}
 
-const decode = S.decodeUnknownSync(schema)
+console.log(Schema.isSchema(Person)) // true
 
-console.log(decode(-3)) // -1
-console.log(decode(0)) // 0
-console.log(decode(3)) // 1
+/*
+{
+    readonly id: typeof Schema.Number;
+    readonly name: Schema.filter<Schema.Schema<string, string, never>>;
+}
+*/
+Person.fields
 ```
 
-## Boolean Transformations
-
-### Not
+### Recursive Schemas
 
-Negates a boolean value.
+The `suspend` combinator is useful when you need to define a `Schema` that depends on itself, like in the case of recursive data structures. In this example, the `Category` schema depends on itself because it has a field `subcategories` that is an array of `Category` objects.
 
 ```ts
-import * as S from "@effect/schema/Schema"
-
-// Schema<boolean>
-const schema = S.Not
-
-const decode = S.decodeUnknownSync(schema)
+import { Schema } from "@effect/schema"
 
-console.log(decode(true)) // false
-console.log(decode(false)) // true
+class Category extends Schema.Class<Category>("Category")({
+  name: Schema.String,
+  subcategories: Schema.Array(
+    Schema.suspend((): Schema.Schema<Category> => Category)
+  )
+}) {}
 ```
 
-## Symbol transformations
+> [!NOTE]
+> It is necessary to add an explicit type annotation (`S.suspend((): S.Schema<Category> => Category`) because otherwise TypeScript would struggle to infer types correctly. Without this annotation, you might encounter the error message: "Type 'typeof Category' is missing the following properties from type 'Schema<unknown, unknown, unknown>': ast, annotations, [TypeId], pipets(2739)"
 
-### Symbol
+#### Mutually Recursive Schemas
 
-Transforms a `string` into a `symbol` by parsing the string using `Symbol.for`.
+Here's an example of two mutually recursive schemas, `Expression` and `Operation`, that represent a simple arithmetic expression tree.
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.Symbol // Schema<symbol, string>
-const decode = S.decodeUnknownSync(schema)
+class Expression extends Schema.Class<Expression>("Expression")({
+  type: Schema.Literal("expression"),
+  value: Schema.Union(
+    Schema.Number,
+    Schema.suspend((): Schema.Schema<Operation> => Operation)
+  )
+}) {}
 
-console.log(decode("a")) // Symbol(a)
+class Operation extends Schema.Class<Operation>("Operation")({
+  type: Schema.Literal("operation"),
+  operator: Schema.Literal("+", "-"),
+  left: Expression,
+  right: Expression
+}) {}
 ```
 
-## BigInt transformations
+#### Recursive Types with Different Encoded and Type
 
-### BigInt
+Defining a recursive schema where the `Encoded` type differs from the `Type` type adds another layer of complexity. In such cases, we need to define an interface for the `Encoded` type.
 
-Transforms a `string` into a `BigInt` by parsing the string using `BigInt`.
+Let's consider an example: suppose we want to add an `id` field to the `Category` schema, where the schema for `id` is `NumberFromString`. It's important to note that `NumberFromString` is a schema that transforms a string into a number, so the `Type` and `Encoded` types of `NumberFromString` differ, being `number` and `string` respectively. When we add this field to the `Category` schema, TypeScript raises an error:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-
-const schema = S.BigInt // Schema<BigInt, string>
-const decode = S.decodeUnknownSync(schema)
-
-// success cases
-console.log(decode("1")) // 1n
-console.log(decode("-1")) // -1n
+import { Schema } from "@effect/schema"
 
-// failure cases
-decode("a")
 /*
-throws:
-Error: BigInt
-└─ Transformation process failure
-   └─ Expected BigInt, actual "a"
+TypeScript error:
+Type 'Category' is not assignable to type '{ readonly id: string; readonly name: string; readonly subcategories: readonly Category[]; }'.
+  Types of property 'id' are incompatible.
+    Type 'number' is not assignable to type 'string'.ts(2322)
 */
-decode("1.5") // throws
-decode("NaN") // throws
-decode("Infinity") // throws
-decode("-Infinity") // throws
+class Category extends Schema.Class<Category>("Category")({
+  id: Schema.NumberFromString,
+  name: Schema.String,
+  subcategories: Schema.Array(
+    Schema.suspend((): Schema.Schema<Category> => Category)
+  )
+}) {}
 ```
 
-### BigIntFromNumber
-
-Transforms a `number` into a `BigInt` by parsing the number using `BigInt`.
+This error occurs because the explicit annotation `S.suspend((): S.Schema<Category> => Category` is no longer sufficient and needs to be adjusted by explicitly adding the `Encoded` type:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-
-const schema = S.BigIntFromNumber // Schema<BigInt, number>
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+import { Schema } from "@effect/schema"
 
-// success cases
-console.log(decode(1)) // 1n
-console.log(decode(-1)) // -1n
-console.log(encode(1n)) // 1
-console.log(encode(-1n)) // -1
+interface CategoryEncoded {
+  readonly id: string
+  readonly name: string
+  readonly subcategories: ReadonlyArray<CategoryEncoded>
+}
 
-// failure cases
-decode(1.5)
-/*
-throws:
-Error: BigIntFromNumber
-└─ Transformation process failure
-   └─ Expected BigIntFromNumber, actual 1.5
-*/
-decode(NaN) // throws
-decode(Infinity) // throws
-decode(-Infinity) // throws
-encode(BigInt(Number.MAX_SAFE_INTEGER) + 1n) // throws
-encode(BigInt(Number.MIN_SAFE_INTEGER) - 1n) // throws
+class Category extends Schema.Class<Category>("Category")({
+  id: Schema.NumberFromString,
+  name: Schema.String,
+  subcategories: Schema.Array(
+    Schema.suspend((): Schema.Schema<Category, CategoryEncoded> => Category)
+  )
+}) {}
 ```
 
-### clamp
-
-Clamps a `BigInt` between a minimum and a maximum value.
+As we've observed, it's necessary to define an interface for the `Encoded` of the schema to enable recursive schema definition, which can complicate things and be quite tedious. One pattern to mitigate this is to **separate the field responsible for recursion** from all other fields.
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.BigIntFromSelf.pipe(S.clampBigInt(-1n, 1n)) // clamps the input to -1n <= x <= 1n
+const fields = {
+  id: Schema.NumberFromString,
+  name: Schema.String
+  // ...possibly other fields
+}
 
-const decode = S.decodeUnknownSync(schema)
+interface CategoryEncoded extends Schema.Struct.Encoded<typeof fields> {
+  readonly subcategories: ReadonlyArray<CategoryEncoded> // Define `subcategories` using recursion
+}
 
-console.log(decode(-3n)) // -1n
-console.log(decode(0n)) // 0n
-console.log(decode(3n)) // 1n
+class Category extends Schema.Class<Category>("Category")({
+  ...fields, // Include the fields
+  subcategories: Schema.Array(
+    Schema.suspend((): Schema.Schema<Category, CategoryEncoded> => Category)
+  ) // Define `subcategories` using recursion
+}) {}
 ```
 
-## Date transformations
-
-### Date
+### Tagged Class variants
 
-Transforms a `string` into a **valid** `Date`, ensuring that invalid dates, such as `new Date("Invalid Date")`, are rejected.
+You can also create classes that extend `TaggedClass` & `TaggedError` from the `effect/Data` module:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-
-const schema = S.Date // Schema<Date, string>
-const decode = S.decodeUnknownSync(schema)
+import { Schema } from "@effect/schema"
 
-console.log(decode("1970-01-01T00:00:00.000Z")) // 1970-01-01T00:00:00.000Z
+class TaggedPerson extends Schema.TaggedClass<TaggedPerson>()("TaggedPerson", {
+  name: Schema.String
+}) {}
 
-decode("a")
-/*
-throws:
-Error: Date
-└─ Predicate refinement failure
-   └─ Expected Date (a valid Date), actual Invalid Date
-*/
+class HttpError extends Schema.TaggedError<HttpError>()("HttpError", {
+  status: Schema.Number
+}) {}
 
-const validate = S.validateSync(schema)
+const joe = new TaggedPerson({ name: "Joe" })
+console.log(joe._tag) // "TaggedPerson"
 
-console.log(validate(new Date(0))) // 1970-01-01T00:00:00.000Z
-validate(new Date("Invalid Date"))
-/*
-throws:
-Error: Date
-└─ Predicate refinement failure
-   └─ Expected Date (a valid Date), actual Invalid Date
-*/
+const error = new HttpError({ status: 404 })
+console.log(error._tag) // "HttpError"
+console.log(error.stack) // access the stack trace
 ```
 
-## BigDecimal Transformations
-
-### BigDecimal
+### Extending existing Classes
 
-Transforms a `string` into a `BigDecimal`.
+In situations where you need to augment your existing class with more fields, the built-in `extend` utility comes in handy:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.BigDecimal // Schema<BigDecimal, string>
-const decode = S.decodeUnknownSync(schema)
+class Person extends Schema.Class<Person>("Person")({
+  id: Schema.Number,
+  name: Schema.String.pipe(Schema.nonEmpty())
+}) {
+  get upperName() {
+    return this.name.toUpperCase()
+  }
+}
 
-console.log(decode(".124")) // { _id: 'BigDecimal', value: '124', scale: 3 }
+class PersonWithAge extends Person.extend<PersonWithAge>("PersonWithAge")({
+  age: Schema.Number
+}) {
+  get isAdult() {
+    return this.age >= 18
+  }
+}
 ```
 
-### BigDecimalFromNumber
-
-Transforms a `number` into a `BigDecimal`.
+### Transformations
 
-> [!WARNING]
-> Warning: When encoding, this Schema will produce incorrect results if the BigDecimal exceeds the 64-bit range of a number.
+You have the option to enhance a class with (effectful) transformations. This becomes valuable when you want to enrich or validate an entity sourced from a data store.
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
+import { Effect, Option } from "effect"
+
+export class Person extends Schema.Class<Person>("Person")({
+  id: Schema.Number,
+  name: Schema.String
+}) {}
+
+console.log(Schema.decodeUnknownSync(Person)({ id: 1, name: "name" }))
+/*
+Output:
+Person { id: 1, name: 'name' }
+*/
+
+function getAge(id: number): Effect.Effect<number, Error> {
+  return Effect.succeed(id + 2)
+}
+
+export class PersonWithTransform extends Person.transformOrFail<PersonWithTransform>(
+  "PersonWithTransform"
+)(
+  {
+    age: Schema.optional(Schema.Number, { exact: true, as: "Option" })
+  },
+  {
+    decode: (input) =>
+      Effect.mapBoth(getAge(input.id), {
+        onFailure: (e) =>
+          new ParseResult.Type(Schema.String.ast, input.id, e.message),
+        // must return { age: Option<number> }
+        onSuccess: (age) => ({ ...input, age: Option.some(age) })
+      }),
+    encode: ParseResult.succeed
+  }
+) {}
+
+Schema.decodeUnknownPromise(PersonWithTransform)({ id: 1, name: "name" }).then(
+  console.log
+)
+/*
+Output:
+PersonWithTransform {
+  id: 1,
+  name: 'name',
+  age: { _id: 'Option', _tag: 'Some', value: 3 }
+}
+*/
 
-const schema = S.BigDecimalFromNumber // Schema<BigDecimal, number>
-const decode = S.decodeUnknownSync(schema)
+export class PersonWithTransformFrom extends Person.transformOrFailFrom<PersonWithTransformFrom>(
+  "PersonWithTransformFrom"
+)(
+  {
+    age: Schema.optional(Schema.Number, { exact: true, as: "Option" })
+  },
+  {
+    decode: (input) =>
+      Effect.mapBoth(getAge(input.id), {
+        onFailure: (e) =>
+          new ParseResult.Type(Schema.String.ast, input, e.message),
+        // must return { age?: number }
+        onSuccess: (age) => (age > 18 ? { ...input, age } : { ...input })
+      }),
+    encode: ParseResult.succeed
+  }
+) {}
 
-console.log(decode(0.111)) // { _id: 'BigDecimal', value: '111', scale: 3 }
+Schema.decodeUnknownPromise(PersonWithTransformFrom)({
+  id: 1,
+  name: "name"
+}).then(console.log)
+/*
+Output:
+PersonWithTransformFrom {
+  id: 1,
+  name: 'name',
+  age: { _id: 'Option', _tag: 'None' }
+}
+*/
 ```
 
-### clampBigDecimal
-
-Clamps a `BigDecimal` between a minimum and a maximum value.
+The decision of which API to use, either `transformOrFail` or `transformOrFailFrom`, depends on when you wish to execute the transformation:
 
-```ts
-import * as S from "@effect/schema/Schema"
-import * as BigDecimal from "effect/BigDecimal"
+1. Using `transformOrFail`:
 
-const schema = S.BigDecimal.pipe(
-  S.clampBigDecimal(BigDecimal.fromNumber(-1), BigDecimal.fromNumber(1))
-)
+   - The transformation occurs at the end of the process.
+   - It expects you to provide a value of type `{ age: Option<number> }`.
+   - After processing the initial input, the new transformation comes into play, and you need to ensure the final output adheres to the specified structure.
 
-const decode = S.decodeUnknownSync(schema)
+2. Using `transformOrFailFrom`:
+   - The new transformation starts as soon as the initial input is handled.
+   - You should provide a value `{ age?: number }`.
+   - Based on this fresh input, the subsequent transformation `{ age: S.optionalToOption(S.Number, { exact: true }) }` is executed.
+   - This approach allows for immediate handling of the input, potentially influencing the subsequent transformations.
 
-console.log(decode("-2")) // { _id: 'BigDecimal', value: '-1', scale: 0 }
-console.log(decode("0")) // { _id: 'BigDecimal', value: '0', scale: 0 }
-console.log(decode("3")) // { _id: 'BigDecimal', value: '1', scale: 0 }
-```
+## Default Constructors
 
-## Duration Transformations
+When dealing with data, creating values that match a specific schema is crucial. To simplify this process, we've introduced **default constructors** for various types of schemas: `Struct`s, `Record`s, `filter`s, and `brand`s. Let's dive into each of them with some examples to understand better how they work.
 
-### Duration
+> [!NOTE]
+> Default constructors associated with a schema `Schema<A, I, R>` are specifically related to the `A` type, not the `I` type.
 
-Converts an hrtime(i.e. `[seconds: number, nanos: number]`) into a `Duration`.
+Example (`Struct`)
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.Duration // Schema<Duration, number>
-const decode = S.decodeUnknownSync(schema)
+const Struct = Schema.Struct({
+  name: Schema.NonEmpty
+})
 
-console.log(decode([0, 0])) // { _id: 'Duration', _tag: 'Nanos', hrtime: [ 0, 0 ] }
-console.log(decode([5000, 0])) // { _id: 'Duration', _tag: 'Nanos', hrtime: [ 5000, 0 ] }
+Struct.make({ name: "a" }) // ok
+Struct.make({ name: "" })
+/*
+throws
+Error: { name: NonEmpty }
+└─ ["name"]
+   └─ NonEmpty
+      └─ Predicate refinement failure
+         └─ Expected NonEmpty (a non empty string), actual ""
+*/
 ```
 
-#### DurationFromMillis
-
-Converts a `number` into a `Duration` where the number represents the number of milliseconds.
+Example (`Record`)
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.DurationFromMillis // Schema<Duration, number>
-const decode = S.decodeUnknownSync(schema)
+const Record = Schema.Record(Schema.String, Schema.NonEmpty)
 
-console.log(decode(0)) // { _id: 'Duration', _tag: 'Millis', millis: 0 }
-console.log(decode(5000)) // { _id: 'Duration', _tag: 'Millis', millis: 5000 }
+Record.make({ a: "a", b: "b" }) // ok
+Record.make({ a: "a", b: "" })
+/*
+throws
+Error: { [x: string]: NonEmpty }
+└─ ["b"]
+   └─ NonEmpty
+      └─ Predicate refinement failure
+         └─ Expected NonEmpty (a non empty string), actual ""
+*/
 ```
 
-### DurationFromNanos
-
-Converts a `BigInt` into a `Duration` where the number represents the number of nanoseconds.
+Example (`filter`)
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.DurationFromNanos // Schema<Duration, BigInt>
-const decode = S.decodeUnknownSync(schema)
+const MyNumber = Schema.Number.pipe(Schema.between(1, 10))
 
-console.log(decode(0n)) // { _id: 'Duration', _tag: 'Nanos', hrtime: [ 0, 0 ] }
-console.log(decode(5000000000n)) // { _id: 'Duration', _tag: 'Nanos', hrtime: [ 5, 0 ] }
+// const n: number
+const n = MyNumber.make(5) // ok
+MyNumber.make(20)
+/*
+throws
+Error: a number between 1 and 10
+└─ Predicate refinement failure
+  └─ Expected a number between 1 and 10, actual 20
+*/
 ```
 
-### clampDuration
-
-Clamps a `Duration` between a minimum and a maximum value.
+Example (`brand`)
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as Duration from "effect/Duration"
+import { Schema } from "@effect/schema"
 
-const schema = S.DurationFromSelf.pipe(
-  S.clampDuration("5 seconds", "10 seconds")
+const BrandedNumberSchema = Schema.Number.pipe(
+  Schema.between(1, 10),
+  Schema.brand("MyNumber")
 )
 
-const decode = S.decodeUnknownSync(schema)
-
-console.log(decode(Duration.decode("2 seconds"))) // { _id: 'Duration', _tag: 'Millis', millis: 5000 }
-console.log(decode(Duration.decode("6 seconds"))) // { _id: 'Duration', _tag: 'Millis', millis: 6000 }
-console.log(decode(Duration.decode("11 seconds"))) // { _id: 'Duration', _tag: 'Millis', millis: 10000 }
+// const n: number & Brand<"MyNumber">
+const n = BrandedNumberSchema.make(5) // ok
+BrandedNumberSchema.make(20)
+/*
+throws
+Error: a number between 1 and 10
+└─ Predicate refinement failure
+  └─ Expected a number between 1 and 10, actual 20
+*/
 ```
 
-## Secret transformations
+When utilizing our default constructors, it's important to grasp the type of value they generate. In the `BrandedNumberSchema` example, the return type of the constructor is `number & Brand<"MyNumber">`, indicating that the resulting value is a number with the added branding "MyNumber".
 
-### Secret
+This differs from the filter example where the return type is simply `number`. The branding offers additional insights about the type, facilitating the identification and manipulation of your data.
 
-Converts a `string` into a `Secret`.
+Note that default constructors are "unsafe" in the sense that if the input does not conform to the schema, the constructor throws an error containing a description of what is wrong. This is because the goal of default constructors is to provide a quick way to create compliant values (for example, for writing tests or configurations, or in any situation where it is assumed that the input passed to the constructors is valid and the opposite situation is exceptional). To have a "safe" constructor, you can use `Schema.validateEither`:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.Secret // Schema<Secret, string>
-const decode = S.decodeUnknownSync(schema)
+const MyNumber = Schema.Number.pipe(Schema.between(1, 10))
 
-console.log(decode("keep it secret, keep it safe")) // {}
+const ctor = Schema.validateEither(MyNumber)
+
+console.log(ctor(5))
+/*
+{ _id: 'Either', _tag: 'Right', right: 5 }
+*/
+
+console.log(ctor(20))
+/*
+{
+  _id: 'Either',
+  _tag: 'Left',
+  left: {
+    _id: 'ParseError',
+    message: 'a number between 1 and 10\n' +
+      '└─ Predicate refinement failure\n' +
+      '   └─ Expected a number between 1 and 10, actual 20'
+  }
+}
+*/
 ```
 
-# Effect Data Types
+### Introduction to Setting Default Values
 
-## Interop with `effect/Data`
+When constructing objects, it's common to want to assign default values to certain fields to simplify the creation of new instances. Our new `withConstructorDefault` combinator allows you to effortlessly manage the optionality of a field in your default constructor.
 
-The `effect/Data` module in the Effect ecosystem serves as a utility module that simplifies the process of comparing values for equality without the need for explicit implementations of the `Equal` and `Hash` interfaces. It provides convenient APIs that automatically generate default implementations for equality checks, making it easier for developers to perform equality comparisons in their applications.
+Example Without Default
 
 ```ts
-import * as Data from "effect/Data"
-import * as Equal from "effect/Equal"
+import { Schema } from "@effect/schema"
 
-const person1 = Data.struct({ name: "Alice", age: 30 })
-const person2 = Data.struct({ name: "Alice", age: 30 })
+const PersonSchema = Schema.Struct({
+  name: Schema.NonEmpty,
+  age: Schema.Number
+})
 
-console.log(Equal.equals(person1, person2)) // true
+// Both name and age are required
+PersonSchema.make({ name: "John", age: 30 })
 ```
 
-You can use the `Schema.Data(schema)` combinator to build a schema from an existing schema that can decode a value `A` to a value with `Equal` and `Hash` traits added:
+Example With Default
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as Equal from "effect/Equal"
-
-/*
-Schema<{
-    readonly name: string;
-    readonly age: number;
-}, {
-    readonly name: string;
-    readonly age: number;
-}>
-*/
-const schema = S.Data(
-  S.Struct({
-    name: S.String,
-    age: S.Number
-  })
-)
-
-const decode = S.decode(schema)
+import { Schema } from "@effect/schema"
 
-const person1 = decode({ name: "Alice", age: 30 })
-const person2 = decode({ name: "Alice", age: 30 })
+const PersonSchema = Schema.Struct({
+  name: Schema.NonEmpty,
+  age: Schema.Number.pipe(
+    Schema.propertySignature,
+    Schema.withConstructorDefault(() => 0)
+  )
+})
 
-console.log(Equal.equals(person1, person2)) // true
+// The age field is optional and defaults to 0
+console.log(PersonSchema.make({ name: "John" })) // Output: { age: 0, name: 'John' }
 ```
 
-## Option
+In the second example, notice how the `age` field is now optional and defaults to `0` when not provided.
 
-**Cheatsheet**
+Defaults are **lazily evaluated**, meaning that a new instance of the default is generated every time the constructor is called:
 
-| Combinator            | From                                   | To                                             |
-| --------------------- | -------------------------------------- | ---------------------------------------------- |
-| `Option`              | `Schema<A, I, R>`                      | `Schema<Option<A>, OptionFrom<I>, R>`          |
-| `OptionFromSelf`      | `Schema<A, I, R>`                      | `Schema<Option<A>, Option<I>, R>`              |
-| `OptionFromNullOr`    | `Schema<A, I, R>`                      | `Schema<Option<A>, I \| null, R>`              |
-| `OptionFromNullishOr` | `Schema<A, I, R>`, `null \| undefined` | `Schema<Option<A>, I \| null \| undefined, R>` |
+```ts
+import { Schema } from "@effect/schema"
 
-where
+const PersonSchema = Schema.Struct({
+  name: Schema.NonEmpty,
+  age: Schema.Number.pipe(
+    Schema.propertySignature,
+    Schema.withConstructorDefault(() => 0)
+  ),
+  timestamp: Schema.Number.pipe(
+    Schema.propertySignature,
+    Schema.withConstructorDefault(() => new Date().getTime())
+  )
+})
 
-```ts
-type OptionFrom<I> =
-  | {
-      readonly _tag: "None"
-    }
-  | {
-      readonly _tag: "Some"
-      readonly value: I
-    }
+console.log(PersonSchema.make({ name: "name1" })) // { age: 0, timestamp: 1714232909221, name: 'name1' }
+console.log(PersonSchema.make({ name: "name2" })) // { age: 0, timestamp: 1714232909227, name: 'name2' }
 ```
 
-### Option
+Note how the `timestamp` field varies.
 
-- decoding
-  - `{ _tag: "None" }` -> `Option.none()`
-  - `{ _tag: "Some", value: i }` -> `Option.some(a)`
-- encoding
-  - `Option.none()` -> `{ _tag: "None" }`
-  - `Option.some(a)` -> `{ _tag: "Some", value: i }`
+Default values are also "portable", meaning that if you reuse the same property signature in another schema, the default is carried over:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as Option from "effect/Option"
-
-const schema = S.Option(S.NumberFromString)
+import { Schema } from "@effect/schema"
 
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+const PersonSchema = Schema.Struct({
+  name: Schema.NonEmpty,
+  age: Schema.Number.pipe(
+    Schema.propertySignature,
+    Schema.withConstructorDefault(() => 0)
+  ),
+  timestamp: Schema.Number.pipe(
+    Schema.propertySignature,
+    Schema.withConstructorDefault(() => new Date().getTime())
+  )
+})
 
-console.log(decode({ _tag: "None" })) // Option.none()
-console.log(decode({ _tag: "Some", value: "1" })) // Option.some(1)
+const AnotherSchema = Schema.Struct({
+  foo: Schema.String,
+  age: PersonSchema.fields.age
+})
 
-console.log(encode(Option.none())) // { _tag: 'None' }
-console.log(encode(Option.some(1))) // { _tag: 'Some', value: '1' }
+console.log(AnotherSchema.make({ foo: "bar" })) // => { foo: 'bar', age: 0 }
 ```
 
-### OptionFromSelf
-
-- decoding
-  - `Option.none()` -> `Option.none()`
-  - `Option.some(i)` -> `Option.some(a)`
-- encoding
-  - `Option.none()` -> `Option.none()`
-  - `Option.some(a)` -> `Option.some(i)`
+Defaults can also be applied using the `Class` API:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as Option from "effect/Option"
+import { Schema } from "@effect/schema"
 
-const schema = S.OptionFromSelf(S.NumberFromString)
+class Person extends Schema.Class<Person>("Person")({
+  name: Schema.NonEmpty,
+  age: Schema.Number.pipe(
+    Schema.propertySignature,
+    Schema.withConstructorDefault(() => 0)
+  ),
+  timestamp: Schema.Number.pipe(
+    Schema.propertySignature,
+    Schema.withConstructorDefault(() => new Date().getTime())
+  )
+}) {}
 
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+console.log(new Person({ name: "name1" })) // Person { age: 0, timestamp: 1714400867208, name: 'name1' }
+console.log(new Person({ name: "name2" })) // Person { age: 0, timestamp: 1714400867215, name: 'name2' }
+```
 
-console.log(decode(Option.none())) // Option.none()
-console.log(decode(Option.some("1"))) // Option.some(1)
+## API Interfaces
 
-console.log(encode(Option.none())) // Option.none()
-console.log(encode(Option.some(1))) // Option.some("1")
-```
+### What's an API Interface?
 
-### OptionFromNullOr
+An "API Interface" is an `interface` specifically defined for a schema exported from `@effect/schema` or for a particular API exported from `@effect/schema`. Let's see an example with a simple schema:
 
-- decoding
-  - `null` -> `Option.none()`
-  - `i` -> `Option.some(a)`
-- encoding
-  - `Option.none()` -> `null`
-  - `Option.some(a)` -> `i`
+**Example** (an `Age` schema)
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as Option from "effect/Option"
-
-const schema = S.OptionFromNullOr(S.NumberFromString)
+import { Schema } from "@effect/schema"
 
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+// API interface
+interface Age extends Schema.Schema<number> {}
 
-console.log(decode(null)) // Option.none()
-console.log(decode("1")) // Option.some(1)
+const Age: Age = Schema.Number.pipe(Schema.between(0, 100))
 
-console.log(encode(Option.none())) // null
-console.log(encode(Option.some(1))) // "1"
+// type AgeType = number
+type AgeType = Schema.Schema.Type<typeof Age>
+// type AgeEncoded = number
+type AgeEncoded = Schema.Schema.Encoded<typeof Age>
 ```
 
-### OptionFromNullishOr
+The benefit is that when we hover over the `Age` schema, we see `Age` instead of `Schema<number, number, never>`. This is a small improvement if we only think about the `Age` schema, but as we'll see shortly, these improvements in schema visualization add up, resulting in a significant improvement in the readability of our schemas.
 
-- decoding
-  - `null` -> `Option.none()`
-  - `undefined` -> `Option.none()`
-  - `i` -> `Option.some(a)`
-- encoding
-  - `Option.none()` -> `<onNoneEncoding value>`
-  - `Option.some(a)` -> `i`
+Many of the built-in schemas exported from `@effect/schema` have been equipped with API interfaces, for example `number` or `never`.
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as Option from "effect/Option"
-
-const schema = S.OptionFromNullishOr(S.NumberFromString, undefined)
-
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+import { Schema } from "@effect/schema"
 
-console.log(decode(null)) // Option.none()
-console.log(decode(undefined)) // Option.none()
-console.log(decode("1")) // Option.some(1)
+// const number: S.Number$
+Schema.Number
 
-console.log(encode(Option.none())) // undefined
-console.log(encode(Option.some(1))) // "1"
+// const never: S.Never
+Schema.Never
 ```
 
-## Either
+> [!NOTE]
+> Notice that we had to add a `$` suffix to the API interface name because we couldn't simply use "Number" since it's a reserved name for the TypeScript `Number` type.
 
-### Either
+Now let's see an example with a combinator that, given an input schema for a certain type `A`, returns the schema of the pair `readonly [A, A]`:
 
-- decoding
-  - `{ _tag: "Left", left: li }` -> `Either.left(la)`
-  - `{ _tag: "Right", right: ri }` -> `Either.right(ra)`
-- encoding
-  - `Either.left(la)` -> `{ _tag: "Left", left: li }`
-  - `Either.right(ra)` -> `{ _tag: "Right", right: ri }`
+**Example** (a `pair` combinator)
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as Either from "effect/Either"
-
-const schema = S.Either({ left: S.Trim, right: S.NumberFromString })
-
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+import { Schema } from "@effect/schema"
 
-console.log(decode({ _tag: "Left", left: " a " })) // Either.left("a")
-console.log(decode({ _tag: "Right", right: "1" })) // Either.right(1)
+// API interface
+export interface pair<S extends Schema.Schema.Any>
+  extends Schema.Schema<
+    readonly [Schema.Schema.Type<S>, Schema.Schema.Type<S>],
+    readonly [Schema.Schema.Encoded<S>, Schema.Schema.Encoded<S>],
+    Schema.Schema.Context<S>
+  > {}
 
-console.log(encode(Either.left("a"))) // { _tag: 'Left', left: 'a' }
-console.log(encode(Either.right(1))) // { _tag: 'Right', right: '1' }
+// API
+export const pair = <S extends Schema.Schema.Any>(schema: S): pair<S> =>
+  Schema.Tuple(Schema.asSchema(schema), Schema.asSchema(schema))
 ```
 
-### EitherFromSelf
-
-- decoding
-  - `Either.left(li)` -> `Either.left(la)`
-  - `Either.right(ri)` -> `Either.right(ra)`
-- encoding
-  - `Either.left(la)` -> `Either.left(li)`
-  - `Either.right(ra)` -> `Either.right(ri)`
-
-```ts
-import * as S from "@effect/schema/Schema"
-import * as Either from "effect/Either"
+> [!NOTE]
+> The `Schema.Schema.Any` helper represents any schema, except for `never`. For more information on the `asSchema` helper, refer to the following section "Understanding Opaque Names".
 
-const schema = S.EitherFromSelf({ left: S.Trim, right: S.NumberFromString })
+If we try to use our `pair` combinator, we see that readability is also improved in this case:
 
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+```ts
+// const Coords: pair<typeof Schema.Number>
+const Coords = pair(Schema.Number)
+```
 
-console.log(decode(Either.left(" a "))) // Either.left("a")
-console.log(decode(Either.right("1"))) // Either.right(1)
+In hover, we simply see `pair<typeof Schema.Number>` instead of the verbose:
 
-console.log(encode(Either.left("a"))) // Either.left("a")
-console.log(encode(Either.right(1))) // Either.right("1")
+```ts
+// const Coords: Schema.Tuple<[typeof Schema.Number, typeof Schema.Number]>
+const Coords = Schema.Tuple(Schema.Number, Schema.Number)
 ```
 
-### EitherFromUnion
+The new name is not only shorter and more readable but also carries along the origin of the schema, which is a call to the `pair` combinator.
 
-- decoding
-  - `li` -> `Either.left(la)`
-  - `ri` -> `Either.right(ra)`
-- encoding
-  - `Either.left(la)` -> `li`
-  - `Either.right(ra)` -> `ri`
+### Understanding Opaque Names
+
+Opaque names generated in this way are very convenient, but sometimes there's a need to see what the underlying types are, perhaps for debugging purposes while you declare your schemas. At any time, you can use the `asSchema` function, which returns an `Schema<A, I, R>` compatible with your opaque definition:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as Either from "effect/Either"
+// const Coords: pair<typeof Schema.Number>
+const Coords = pair(Schema.Number)
 
-const schema = S.EitherFromUnion({
-  left: S.Boolean,
-  right: S.NumberFromString
-})
+// const NonOpaqueCoords: Schema.Schema<readonly [number, number], readonly [number, number], never>
+const NonOpaqueCoords = Schema.asSchema(Coords)
+```
 
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+> [!NOTE]
+> The call to `asSchema` is negligible in terms of overhead since it's nothing more than a glorified identity function.
 
-console.log(decode(true)) // Either.left(true)
-console.log(decode("1")) // Either.right(1)
+Many of the built-in combinators exported from `@effect/schema` have been equipped with API interfaces, for example `struct`:
 
-console.log(encode(Either.left(true))) // true
-console.log(encode(Either.right(1))) // "1"
+```ts
+import { Schema } from "@effect/schema"
+
+/*
+const Person: Schema.Struct<{
+    name: typeof Schema.String;
+    age: typeof Schema.Number;
+}>
+*/
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.Number
+})
 ```
 
-## ReadonlySet
+In hover, we simply see:
 
-### ReadonlySet
+```ts
+const Person: Schema.Struct<{
+  name: typeof Schema.String
+  age: typeof Schema.Number
+}>
+```
 
-- decoding
-  - `ReadonlyArray<I>` -> `ReadonlySet<A>`
-- encoding
-  - `ReadonlySet<A>` -> `ReadonlyArray<I>`
+instead of the verbose:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-
-const schema = S.ReadonlySet(S.NumberFromString)
+const Person: Schema.Schema<
+  {
+    readonly name: string
+    readonly age: number
+  },
+  {
+    readonly name: string
+    readonly age: number
+  },
+  never
+>
+```
 
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+### Exposing Arguments
 
-console.log(decode(["1", "2", "3"])) // Set(3) { 1, 2, 3 }
-console.log(encode(new Set([1, 2, 3]))) // [ '1', '2', '3' ]
-```
+The benefits of API interfaces don't end with better readability; in fact, the driving force behind the introduction of API interfaces arises more from the need to expose some important information about the schemas that users generate. Let's see some examples related to literals and structs:
 
-### ReadonlySetFromSelf
+**Example** (exposed literals)
 
-- decoding
-  - `ReadonlySet<I>` -> `ReadonlySet<A>`
-- encoding
-  - `ReadonlySet<A>` -> `ReadonlySet<I>`
+Now when we define literals, we can retrieve them using the `literals` field exposed by the generated schema:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.ReadonlySetFromSelf(S.NumberFromString)
+// const myliterals: Schema.Literal<["A", "B"]>
+const myliterals = Schema.Literal("A", "B")
 
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+// literals: readonly ["A", "B"]
+myliterals.literals
 
-console.log(decode(new Set(["1", "2", "3"]))) // Set(3) { 1, 2, 3 }
-console.log(encode(new Set([1, 2, 3]))) // Set(3) { '1', '2', '3' }
+console.log(myliterals.literals) // Output: [ 'A', 'B' ]
 ```
 
-## ReadonlyMap
-
-### ReadonlyMap
+**Example** (exposed fields)
 
-- decoding
-  - `ReadonlyArray<readonly [KI, VI]>` -> `ReadonlyMap<KA, VA>`
-- encoding
-  - `ReadonlyMap<KA, VA>` -> `ReadonlyArray<readonly [KI, VI]>`
+Similarly to what we've seen for literals, when we define a struct, we can retrieve its `fields`:
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.ReadonlyMap({ key: S.String, value: S.NumberFromString })
+/*
+const Person: Schema.Struct<{
+    name: typeof Schema.String;
+    age: typeof Schema.Number;
+}>
+*/
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.Number
+})
 
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+/*
+fields: {
+    readonly name: typeof Schema.String;
+    readonly age: typeof Schema.Number;
+}
+*/
+Person.fields
 
-console.log(
-  decode([
-    ["a", "2"],
-    ["b", "2"],
-    ["c", "3"]
-  ])
-) // Map(3) { 'a' => 2, 'b' => 2, 'c' => 3 }
-console.log(
-  encode(
-    new Map([
-      ["a", 1],
-      ["b", 2],
-      ["c", 3]
-    ])
-  )
-) // [ [ 'a', '1' ], [ 'b', '2' ], [ 'c', '3' ] ]
+console.log(Person.fields)
+/*
+{
+  name: Schema {
+    ast: StringKeyword { _tag: 'StringKeyword', annotations: [Object] },
+    ...
+  },
+  age: Schema {
+    ast: NumberKeyword { _tag: 'NumberKeyword', annotations: [Object] },
+    ...
+  }
+}
+*/
 ```
 
-### ReadonlyMapFromSelf
-
-- decoding
-  - `ReadonlyMap<KI, VI>` -> `ReadonlyMap<KA, VA>`
-- encoding
-  - `ReadonlyMap<KA, VA>` -> `ReadonlyMap<KI, VI>`
+Being able to retrieve the `fields` is particularly advantageous when you want to extend a struct with new fields; now you can do it simply using the spread operator:
 
 ```ts
 import * as S from "@effect/schema/Schema"
 
-const schema = S.ReadonlyMapFromSelf({
-  key: S.String,
-  value: S.NumberFromString
-})
+import { Schema } from "@effect/schema"
 
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+const Person = Schema.Struct({
+  name: Schema.String,
+  age: Schema.Number
+})
 
-console.log(
-  decode(
-    new Map([
-      ["a", "2"],
-      ["b", "2"],
-      ["c", "3"]
-    ])
-  )
-) // Map(3) { 'a' => 2, 'b' => 2, 'c' => 3 }
-console.log(
-  encode(
-    new Map([
-      ["a", 1],
-      ["b", 2],
-      ["c", 3]
-    ])
-  )
-) // Map(3) { 'a' => '1', 'b' => '2', 'c' => '3' }
+/*
+const PersonWithId: Schema.Struct<{
+    id: typeof Schema.Number;
+    name: typeof Schema.String;
+    age: typeof Schema.Number;
+}>
+*/
+const PersonWithId = Schema.Struct({
+  ...Person.fields,
+  id: Schema.Number
+})
 ```
 
-## HashSet
-
-### HashSet
-
-- decoding
-  - `ReadonlyArray<I>` -> `HashSet<A>`
-- encoding
-  - `HashSet<A>` -> `ReadonlyArray<I>`
+The list of APIs equipped with API interfaces is extensive; here we provide only the main ones just to give you an idea of the new development possibilities that have opened up:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as HashSet from "effect/HashSet"
-
-const schema = S.HashSet(S.NumberFromString)
+import { Schema } from "@effect/schema"
 
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+// ------------------------
+// array value
+// ------------------------
 
-console.log(decode(["1", "2", "3"])) // { _id: 'HashSet', values: [ 1, 2, 3 ] }
-console.log(encode(HashSet.frOmIterable([1, 2, 3]))) // [ '1', '2', '3' ]
-```
+// value: typeof Schema.String
+Schema.Array(Schema.String).value
 
-### HashSetFromSelf
+// ------------------------
+// record key and value
+// ------------------------
 
-- decoding
-  - `HashSet<I>` -> `HashSet<A>`
-- encoding
-  - `HashSet<A>` -> `HashSet<I>`
+// key: typeof Schema.String
+Schema.Record(Schema.String, Schema.Number).key
+// value: typeof Schema.Number
+Schema.Record(Schema.String, Schema.Number).value
 
-```ts
-import * as S from "@effect/schema/Schema"
-import * as HashSet from "effect/HashSet"
+// ------------------------
+// union members
+// ------------------------
 
-const schema = S.HashSetFromSelf(S.NumberFromString)
+// members: readonly [typeof Schema.String, typeof Schema.Number]
+Schema.Union(Schema.String, Schema.Number).members
 
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+// ------------------------
+// tuple elements
+// ------------------------
 
-console.log(decode(HashSet.frOmIterable(["1", "2", "3"]))) // { _id: 'HashSet', values: [ 1, 2, 3 ] }
-console.log(encode(HashSet.frOmIterable([1, 2, 3]))) // { _id: 'HashSet', values: [ '1', '3', '2' ] }
+// elements: readonly [typeof Schema.String, typeof Schema.Number]
+Schema.Tuple(Schema.String, Schema.Number).elements
 ```
 
-## HashMap
-
-### HashMap
+### Troubleshooting When Working With Generic Schemas
 
-- decoding
-  - `ReadonlyArray<readonly [KI, VI]>` -> `HashMap<KA, VA>`
-- encoding
-  - `HashMap<KA, VA>` -> `ReadonlyArray<readonly [KI, VI]>`
+Sometimes, while working with functions that handle generic schemas, you may encounter the issue where TypeScript fails to fully resolve the schema type, making it unusable within the function body. Let's see an example:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as HashMap from "effect/HashMap"
+import { Schema } from "@effect/schema"
 
-const schema = S.HashMap({ key: S.String, value: S.NumberFromString })
+// A function that uses a generic schema
+const MyStruct = <X extends Schema.Schema.All>(x: X) => Schema.Struct({ x })
 
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+// Helper type that returns the return type of the `MyStruct` function
+type MyStructReturnType<X extends Schema.Schema.All> = Schema.Schema.Type<
+  ReturnType<typeof MyStruct<X>>
+>
 
-console.log(
-  decode([
-    ["a", "2"],
-    ["b", "2"],
-    ["c", "3"]
-  ])
-) // { _id: 'HashMap', values: [ [ 'a', 2 ], [ 'c', 3 ], [ 'b', 2 ] ] }
-console.log(
-  encode(
-    HashMap.frOmIterable([
-      ["a", 1],
-      ["b", 2],
-      ["c", 3]
-    ])
-  )
-) // [ [ 'a', '1' ], [ 'c', '3' ], [ 'b', '2' ] ]
+// In the function body, `obj` has type `Simplify<Schema.Struct.Type<{ x: X; }>>`
+// so it's not possible to access the `x` field
+function test<X extends Schema.Schema.All>(obj: MyStructReturnType<X>) {
+  obj.x // error: Property 'x' does not exist on type 'Simplify<Type<{ x: X; }>>'.ts(2339)
+}
 ```
 
-### HashMapFromSelf
-
-- decoding
-  - `HashMap<KI, VI>` -> `HashMap<KA, VA>`
-- encoding
-  - `HashMap<KA, VA>` -> `HashMap<KI, VI>`
+In the function body, `obj` has type
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as HashMap from "effect/HashMap"
+Simplify<Schema.Struct.Type<{ x: X }>>
+```
 
-const schema = S.HashMapFromSelf({ key: S.String, value: S.NumberFromString })
+so it's not possible to access the `x` field.
 
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+To solve the problem, you need to force TypeScript to resolve the type of `obj`, and you can do this with the type-level helper `Schema.Schema.AsSchema`, which is the type-level counterpart of the function `Schema.asSchema`:
 
-console.log(
-  decode(
-    HashMap.frOmIterable([
-      ["a", "2"],
-      ["b", "2"],
-      ["c", "3"]
-    ])
-  )
-) // { _id: 'HashMap', values: [ [ 'a', 2 ], [ 'c', 3 ], [ 'b', 2 ] ] }
-console.log(
-  encode(
-    HashMap.frOmIterable([
-      ["a", 1],
-      ["b", 2],
-      ["c", 3]
-    ])
-  )
-) // { _id: 'HashMap', values: [ [ 'a', '1' ], [ 'c', '3' ], [ 'b', '2' ] ] }
+```ts
+function test<X extends Schema.Schema.All>(
+  obj: MyStructReturnType<Schema.Schema.AsSchema<X>>
+) {
+  obj.x // Schema.Schema.Type<X>
+}
 ```
 
-## SortedSet
+Now the type of `obj` is resolved to
 
-### SortedSet
+```ts
+{
+    readonly x: Schema.Schema.Type<X>;
+}
+```
 
-- decoding
-  - `ReadonlyArray<I>` -> `SortedSet<A>`
-- encoding
-  - `SortedSet<A>` -> `ReadonlyArray<I>`
+and therefore, we can access its `x` field.
+
+# Effect Data Types
 
-```ts
-import * as S from "@effect/schema/Schema"
-import * as N from "effect/Number"
-import * as SortedSet from "effect/SortedSet"
+## Interop With Data
 
-const schema = S.SortedSet(S.NumberFromString, N.Order)
+The `effect/Data` module in the Effect ecosystem serves as a utility module that simplifies the process of comparing values for equality without the need for explicit implementations of the `Equal` and `Hash` interfaces. It provides convenient APIs that automatically generate default implementations for equality checks, making it easier for developers to perform equality comparisons in their applications.
 
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+```ts
+import { Data, Equal } from "effect"
 
-console.log(decode(["1", "2", "3"])) // { _id: 'SortedSet', values: [ 1, 2, 3 ] }
-console.log(encode(SortedSet.frOmIterable(N.Order)([1, 2, 3]))) // [ '1', '2', '3' ]
-```
+const person1 = Data.struct({ name: "Alice", age: 30 })
+const person2 = Data.struct({ name: "Alice", age: 30 })
 
-### SortedSetFromSelf
+console.log(Equal.equals(person1, person2)) // true
+```
 
-- decoding
-  - `SortedSet<I>` -> `SortedSet<A>`
-- encoding
-  - `SortedSet<A>` -> `SortedSet<I>`
+You can use the `Schema.Data(schema)` combinator to build a schema from an existing schema that can decode a value `A` to a value with `Equal` and `Hash` traits added:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as N from "effect/Number"
-import * as SortedSet from "effect/SortedSet"
-import * as Str from "effect/String"
+import { Schema } from "@effect/schema"
+import { Equal } from "effect"
+
+/*
+Schema.Schema<{
+    readonly name: string;
+    readonly age: number;
+}, {
+    readonly name: string;
+    readonly age: number;
+}, never>
+*/
+const schema = Schema.Data(
+  Schema.Struct({
+    name: Schema.String,
+    age: Schema.Number
+  })
+)
 
-const schema = S.SortedSetFromSelf(S.NumberFromString, N.Order, Str.Order)
+const decode = Schema.decode(schema)
 
-const decode = S.decodeUnknownSync(schema)
-const encode = S.encodeSync(schema)
+const person1 = decode({ name: "Alice", age: 30 })
+const person2 = decode({ name: "Alice", age: 30 })
 
-console.log(decode(SortedSet.frOmIterable(Str.Order)(["1", "2", "3"]))) // { _id: 'SortedSet', values: [ 1, 2, 3 ] }
-console.log(encode(SortedSet.frOmIterable(N.Order)([1, 2, 3]))) // { _id: 'SortedSet', values: [ '1', '2', '3' ] }
+console.log(Equal.equals(person1, person2)) // true
 ```
 
-# Understanding Schema Declaration for New Data Types
+## Option
 
-Creating schemas for new data types is crucial to defining the expected structure of information in your application. This guide explores how to declare schemas for new data types. We'll cover two important concepts: declaring schemas for primitive data types and type constructors.
+**Cheatsheet**
 
-## Declaring Schemas for Primitive Data Types
+| Combinator            | From                                   | To                                             |
+| --------------------- | -------------------------------------- | ---------------------------------------------- |
+| `Option`              | `Schema<A, I, R>`                      | `Schema<Option<A>, OptionFrom<I>, R>`          |
+| `OptionFromSelf`      | `Schema<A, I, R>`                      | `Schema<Option<A>, Option<I>, R>`              |
+| `OptionFromNullOr`    | `Schema<A, I, R>`                      | `Schema<Option<A>, I \| null, R>`              |
+| `OptionFromNullishOr` | `Schema<A, I, R>`, `null \| undefined` | `Schema<Option<A>, I \| null \| undefined, R>` |
 
-A primitive data type represents simple values. To declare a schema for a primitive data type, like the `File` type in TypeScript, we use the `S.declare` constructor along with a type guard. Let's go through an example:
+where
 
 ```ts
-import * as S from "@effect/schema/Schema"
+type OptionFrom<I> =
+  | {
+      readonly _tag: "None"
+    }
+  | {
+      readonly _tag: "Some"
+      readonly value: I
+    }
+```
+
+### Option
 
-const isFile = (input: unknown): input is File => input instanceof File
+- decoding
+  - `{ _tag: "None" }` -> `Option.none()`
+  - `{ _tag: "Some", value: i }` -> `Option.some(a)`
+- encoding
+  - `Option.none()` -> `{ _tag: "None" }`
+  - `Option.some(a)` -> `{ _tag: "Some", value: i }`
 
-// const FileFromSelf: S.Schema<File>
-const FileFromSelf = S.declare(isFile, {
-  identifier: "FileFromSelf"
-})
+```ts
+import { Schema } from "@effect/schema"
+import { Option } from "effect"
 
-const decode = S.decodeUnknownSync(FileFromSelf)
+const schema = Schema.Option(Schema.NumberFromString)
 
-console.log(decode(new File([], ""))) // File { size: 0, type: '', name: '', lastModified: 1705595977234 }
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
 
-decode(null)
-/*
-throws
-Error: Error: Expected FileFromSelf, actual null
-*/
+console.log(decode({ _tag: "None" })) // { _id: 'Option', _tag: 'None' }
+console.log(decode({ _tag: "Some", value: "1" })) // { _id: 'Option', _tag: 'Some', value: 1 }
+
+console.log(encode(Option.none())) // { _tag: 'None' }
+console.log(encode(Option.some(1))) // { _tag: 'Some', value: '1' }
 ```
 
-## Declaring Schemas for Type Constructors
+### OptionFromSelf
 
-Type constructors are generic types that take one or more types as arguments and return a new type. If you need to define a schema for a type constructor, you can use the `S.declare` constructor. Let's illustrate this with a schema for `ReadonlySet<A>`:
+- decoding
+  - `Option.none()` -> `Option.none()`
+  - `Option.some(i)` -> `Option.some(a)`
+- encoding
+  - `Option.none()` -> `Option.none()`
+  - `Option.some(a)` -> `Option.some(i)`
 
 ```ts
-import * as ParseResult from "@effect/schema/ParseResult"
-import * as S from "@effect/schema/Schema"
-
-export const MyReadonlySet = <A, I, R>(
-  // Schema for the elements of the Set
-  item: S.Schema<A, I, R>
-): S.Schema<ReadonlySet<A>, ReadonlySet<I>, R> =>
-  S.declare(
-    // Store the schema for the elements
-    [item],
-    {
-      // Decoding function
-      decode: (item) => (input, parseOptions, ast) => {
-        if (input instanceof Set) {
-          // Decode the elements
-          const elements = ParseResult.decodeUnknown(S.Array(item))(
-            Array.from(input.values()),
-            parseOptions
-          )
-          // Return a Set containing the parsed elements
-          return ParseResult.map(elements, (as): ReadonlySet<A> => new Set(as))
-        }
-        return ParseResult.fail(new ParseResult.Type(ast, input))
-      },
-      // Encoding function
-      encode: (item) => (input, parseOptions, ast) => {
-        if (input instanceof Set) {
-          // Encode the elements
-          const elements = ParseResult.encodeUnknown(S.Array(item))(
-            Array.from(input.values()),
-            parseOptions
-          )
-          // Return a Set containing the parsed elements
-          return ParseResult.map(elements, (is): ReadonlySet<I> => new Set(is))
-        }
-        return ParseResult.fail(new ParseResult.Type(ast, input))
-      }
-    },
-    {
-      description: `ReadonlySet<${S.format(item)}>`
-    }
-  )
-
-// const setOfNumbers: S.Schema<ReadonlySet<string>, ReadonlySet<number>>
-const setOfNumbers = MyReadonlySet(S.NumberFromString)
+import { Schema } from "@effect/schema"
+import { Option } from "effect"
 
-const decode = S.decodeUnknownSync(setOfNumbers)
+const schema = Schema.OptionFromSelf(Schema.NumberFromString)
 
-console.log(decode(new Set(["1", "2", "3"]))) // Set(3) { 1, 2, 3 }
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
 
-decode(null)
-/*
-throws
-Error: Expected ReadonlySet<NumberFromString>, actual null
-*/
+console.log(decode(Option.none())) // { _id: 'Option', _tag: 'None' }
+console.log(decode(Option.some("1"))) // { _id: 'Option', _tag: 'Some', value: 1 }
 
-decode(new Set(["1", null, "3"]))
-/*
-throws
-Error: ReadonlySet<NumberFromString>
-└─ ReadonlyArray<NumberFromString>
-   └─ [1]
-      └─ NumberFromString
-         └─ From side transformation failure
-            └─ Expected a string, actual null
-*/
+console.log(encode(Option.none())) // { _id: 'Option', _tag: 'None' }
+console.log(encode(Option.some(1))) // { _id: 'Option', _tag: 'Some', value: '1' }
 ```
 
-> [!WARNING]
-> The decoding and encoding functions cannot use context (the `R` type parameter) and cannot use async effects.
-
-## Adding Annotations
+### OptionFromNullOr
 
-When you define a new data type, some compilers like `Arbitrary` or `Pretty` may not know how to handle the newly defined data. For instance:
+- decoding
+  - `null` -> `Option.none()`
+  - `i` -> `Option.some(a)`
+- encoding
+  - `Option.none()` -> `null`
+  - `Option.some(a)` -> `i`
 
 ```ts
-import { Arbitrary, Schema } from "@effect/schema"
+import { Schema } from "@effect/schema"
+import { Option } from "effect"
 
-const isFile = (input: unknown): input is File => input instanceof File
+const schema = Schema.OptionFromNullOr(Schema.NumberFromString)
 
-const FileFromSelf = Schema.declare(isFile, {
-  identifier: "FileFromSelf"
-})
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
 
-// Create an Arbitrary instance for FileFromSelf schema
-const arb = Arbitrary.make(FileFromSelf)
-/*
-throws:
-Error: cannot build an Arbitrary for a declaration without annotations (FileFromSelf)
-*/
+console.log(decode(null)) // { _id: 'Option', _tag: 'None' }
+console.log(decode("1")) // { _id: 'Option', _tag: 'Some', value: 1 }
+
+console.log(encode(Option.none())) // null
+console.log(encode(Option.some(1))) // "1"
 ```
 
-In such cases, you need to provide annotations to ensure proper functionality:
+### OptionFromNullishOr
 
-```ts
-import { Arbitrary, FastCheck, Pretty, Schema } from "@effect/schema"
+- decoding
+  - `null` -> `Option.none()`
+  - `undefined` -> `Option.none()`
+  - `i` -> `Option.some(a)`
+- encoding
+  - `Option.none()` -> `<onNoneEncoding value>`
+  - `Option.some(a)` -> `i`
 
-const isFile = (input: unknown): input is File => input instanceof File
-
-const FileFromSelf = Schema.declare(isFile, {
-  identifier: "FileFromSelf",
-  // Provide an arbitrary function to generate random File instances
-  arbitrary: () => (fc) =>
-    fc
-      .tuple(fc.string(), fc.string())
-      .map(([path, content]) => new File([content], path)),
-  // Provide a pretty function to generate human-readable representation of File instances
-  pretty: () => (file) => `File(${file.name})`
-})
+```ts
+import { Schema } from "@effect/schema"
+import { Option } from "effect"
 
-// Create an Arbitrary instance for FileFromSelf schema
-const arb = Arbitrary.make(FileFromSelf)
+const schema = Schema.OptionFromNullishOr(Schema.NumberFromString, undefined)
 
-// Generate sample files using the Arbitrary instance
-const files = FastCheck.sample(arb, 2)
-console.log(files)
-/*
-Output:
-[
-  File { size: 5, type: '', name: 'C', lastModified: 1706435571176 },
-  File { size: 1, type: '', name: '98Ggmc', lastModified: 1706435571176 }
-]
-*/
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
 
-// Create a Pretty instance for FileFromSelf schema
-const pretty = Pretty.make(FileFromSelf)
+console.log(decode(null)) // { _id: 'Option', _tag: 'None' }
+console.log(decode(undefined)) // { _id: 'Option', _tag: 'None' }
+console.log(decode("1")) // { _id: 'Option', _tag: 'Some', value: 1 }
 
-// Print human-readable representation of a file
-console.log(pretty(files[0])) // "File(C)"
+console.log(encode(Option.none())) // undefined
+console.log(encode(Option.some(1))) // "1"
 ```
 
-# Useful Examples
+## Either
 
-## Email
+### Either
 
-Since there are various different definitions of what constitutes a valid email address depending on the environment and use case, `@effect/schema` does not provide a built-in combinator for parsing email addresses. However, it is easy to define a custom combinator that can be used to parse email addresses.
+- decoding
+  - `{ _tag: "Left", left: li }` -> `Either.left(la)`
+  - `{ _tag: "Right", right: ri }` -> `Either.right(ra)`
+- encoding
+  - `Either.left(la)` -> `{ _tag: "Left", left: li }`
+  - `Either.right(ra)` -> `{ _tag: "Right", right: ri }`
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
+import { Either } from "effect"
 
-// see https://stackoverflow.com/questions/46155/how-can-i-validate-an-email-address-in-javascript/46181#46181
-const Email = S.pattern(
-  /^(?!\.)(?!.*\.\.)([A-Z0-9_+-.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9-]*\.)+[A-Z]{2,}$/i
-)
+const schema = Schema.Either({
+  left: Schema.Trim,
+  right: Schema.NumberFromString
+})
+
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
+
+console.log(decode({ _tag: "Left", left: " a " })) // { _id: 'Either', _tag: 'Left', left: 'a' }
+console.log(decode({ _tag: "Right", right: "1" })) // { _id: 'Either', _tag: 'Right', right: 1 }
+
+console.log(encode(Either.left("a"))) // { _tag: 'Left', left: 'a' }
+console.log(encode(Either.right(1))) // { _tag: 'Right', right: '1' }
 ```
 
-## Url
+### EitherFromSelf
 
-Multiple environments like the Browser or Node provide a built-in `URL` class that can be used to validate URLs. Here we demonstrate how to leverage it to validate if a string is a valid URL.
+- decoding
+  - `Either.left(li)` -> `Either.left(la)`
+  - `Either.right(ri)` -> `Either.right(ra)`
+- encoding
+  - `Either.left(la)` -> `Either.left(li)`
+  - `Either.right(ra)` -> `Either.right(ri)`
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
+import { Either } from "effect"
 
-const UrlString = S.String.pipe(
-  S.filter((value) => {
-    try {
-      new URL(value)
-      return true
-    } catch (_) {
-      return false
-    }
-  })
-)
+const schema = Schema.EitherFromSelf({
+  left: Schema.Trim,
+  right: Schema.NumberFromString
+})
 
-const decode = S.decodeUnknownSync(UrlString)
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
 
-console.log(decode("https://www.effect.website")) // https://www.effect.website
+console.log(decode(Either.left(" a "))) // { _id: 'Either', _tag: 'Left', left: 'a' }
+console.log(decode(Either.right("1"))) // { _id: 'Either', _tag: 'Right', right: 1 }
+
+console.log(encode(Either.left("a"))) // { _id: 'Either', _tag: 'Left', left: 'a' }
+console.log(encode(Either.right(1))) // { _id: 'Either', _tag: 'Right', right: '1' }
 ```
 
-In case you prefer to normalize URLs you can combine `transformOrFail` with `URL`:
+### EitherFromUnion
 
-```ts
-import * as ParseResult from "@effect/schema/ParseResult"
-import * as S from "@effect/schema/Schema"
+- decoding
+  - `li` -> `Either.left(la)`
+  - `ri` -> `Either.right(ra)`
+- encoding
+  - `Either.left(la)` -> `li`
+  - `Either.right(ra)` -> `ri`
 
-const NormalizedUrlString = S.String.pipe(
-  S.filter((value) => {
-    try {
-      return new URL(value).toString() === value
-    } catch (_) {
-      return false
-    }
-  })
-)
+```ts
+import { Schema } from "@effect/schema"
+import { Either } from "effect"
 
-const NormalizeUrlString = S.transformOrFail(S.String, NormalizedUrlString, {
-  decode: (value, _, ast) =>
-    ParseResult.try({
-      try: () => new URL(value).toString(),
-      catch: (err) =>
-        new ParseResult.Type(
-          ast,
-          value,
-          err instanceof Error ? err.message : undefined
-        )
-    }),
-  encode: ParseResult.succeed
+const schema = Schema.EitherFromUnion({
+  left: Schema.Boolean,
+  right: Schema.NumberFromString
 })
 
-const decode = S.decodeUnknownSync(NormalizeUrlString)
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
 
-console.log(decode("https://www.effect.website")) // "https://www.effect.website/"
+console.log(decode(true)) // { _id: 'Either', _tag: 'Left', left: true }
+console.log(decode("1")) // { _id: 'Either', _tag: 'Right', right: 1 }
+
+console.log(encode(Either.left(true))) // true
+console.log(encode(Either.right(1))) // "1"
 ```
 
-# Technical overview: Understanding Schemas
+## ReadonlySet
 
-A schema is a description of a data structure that can be used to generate various artifacts from a single declaration.
+### ReadonlySet
 
-From a technical point of view a schema is just a typed wrapper of an `AST` value:
+- decoding
+  - `ReadonlyArray<I>` -> `ReadonlySet<A>`
+- encoding
+  - `ReadonlySet<A>` -> `ReadonlyArray<I>`
 
 ```ts
-interface Schema<A, I, R> {
-  readonly ast: AST
-}
-```
+import { Schema } from "@effect/schema"
 
-The `AST` type represents a tiny portion of the TypeScript AST, roughly speaking the part describing ADTs (algebraic data types),
-i.e. products (like structs and tuples) and unions, plus a custom transformation node.
+const schema = Schema.ReadonlySet(Schema.NumberFromString)
 
-This means that you can define your own schema constructors / combinators as long as you are able to manipulate the `AST` value accordingly, let's see an example.
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
 
-Say we want to define a `pair` schema constructor, which takes a `Schema<A, I, R>` as input and returns a `Schema<readonly [A, A], readonly [I, I], R>` as output.
+console.log(decode(["1", "2", "3"])) // Set(3) { 1, 2, 3 }
+console.log(encode(new Set([1, 2, 3]))) // [ '1', '2', '3' ]
+```
 
-First of all we need to define the signature of `pair`
+### ReadonlySetFromSelf
+
+- decoding
+  - `ReadonlySet<I>` -> `ReadonlySet<A>`
+- encoding
+  - `ReadonlySet<A>` -> `ReadonlySet<I>`
 
 ```ts
-import type * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-declare const pair: <A, I, R>(
-  schema: S.Schema<A, I, R>
-) => S.Schema<readonly [A, A], readonly [I, I], R>
+const schema = Schema.ReadonlySetFromSelf(Schema.NumberFromString)
+
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
+
+console.log(decode(new Set(["1", "2", "3"]))) // Set(3) { 1, 2, 3 }
+console.log(encode(new Set([1, 2, 3]))) // Set(3) { '1', '2', '3' }
 ```
 
-Then we can implement the body using the APIs exported by the `@effect/schema/AST` module:
+## ReadonlyMap
+
+### ReadonlyMap
+
+- decoding
+  - `ReadonlyArray<readonly [KI, VI]>` -> `ReadonlyMap<KA, VA>`
+- encoding
+  - `ReadonlyMap<KA, VA>` -> `ReadonlyArray<readonly [KI, VI]>`
 
 ```ts
-import * as AST from "@effect/schema/AST"
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const pair = <A, I, R>(
-  schema: S.Schema<A, I, R>
-): S.Schema<readonly [A, A], readonly [I, I], R> => {
-  const element = new AST.Element(
-    schema.ast, // <= the element type
-    false // <= is optional?
-  )
-  const tuple = new AST.TupleType(
-    [element, element], // <= elements definitions
-    [], // <= rest element
-    true // <= is readonly?
+const schema = Schema.ReadonlyMap({
+  key: Schema.String,
+  value: Schema.NumberFromString
+})
+
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
+
+console.log(
+  decode([
+    ["a", "2"],
+    ["b", "2"],
+    ["c", "3"]
+  ])
+) // Map(3) { 'a' => 2, 'b' => 2, 'c' => 3 }
+console.log(
+  encode(
+    new Map([
+      ["a", 1],
+      ["b", 2],
+      ["c", 3]
+    ])
   )
-  return S.make(tuple) // <= wrap the AST value in a Schema
-}
+) // [ [ 'a', '1' ], [ 'b', '2' ], [ 'c', '3' ] ]
 ```
 
-This example demonstrates the use of the low-level APIs of the `AST` module, however, the same result can be achieved more easily and conveniently by using the high-level APIs provided by the `Schema` module.
+### ReadonlyMapFromSelf
+
+- decoding
+  - `ReadonlyMap<KI, VI>` -> `ReadonlyMap<KA, VA>`
+- encoding
+  - `ReadonlyMap<KA, VA>` -> `ReadonlyMap<KI, VI>`
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const pair = <A, I, R>(
-  schema: S.Schema<A, I, R>
-): S.Schema<readonly [A, A], readonly [I, I], R> => S.Tuple(schema, schema)
+const schema = Schema.ReadonlyMapFromSelf({
+  key: Schema.String,
+  value: Schema.NumberFromString
+})
+
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
+
+console.log(
+  decode(
+    new Map([
+      ["a", "2"],
+      ["b", "2"],
+      ["c", "3"]
+    ])
+  )
+) // Map(3) { 'a' => 2, 'b' => 2, 'c' => 3 }
+console.log(
+  encode(
+    new Map([
+      ["a", 1],
+      ["b", 2],
+      ["c", 3]
+    ])
+  )
+) // Map(3) { 'a' => '1', 'b' => '2', 'c' => '3' }
 ```
 
-# Annotations
+## HashSet
 
-One of the fundamental requirements in the design of `@effect/schema` is that it is extensible and customizable. Customizations are achieved through "annotations". Each node contained in the AST of `@effect/schema/AST` contains an `annotations: Record<symbol, unknown>` field that can be used to attach additional information to the schema.
-You can manage these annotations using the `annotations` method.
+### HashSet
 
-Let's see some examples:
+- decoding
+  - `ReadonlyArray<I>` -> `HashSet<A>`
+- encoding
+  - `HashSet<A>` -> `ReadonlyArray<I>`
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
+import { HashSet } from "effect"
 
-const Password =
-  // initial schema, a string
-  S.String
-    // add an error message for non-string values
-    .annotations({ message: () => "not a string" })
-    .pipe(
-      // add a constraint to the schema, only non-empty strings are valid
-      // and add an error message for empty strings
-      S.nonEmpty({ message: () => "required" }),
-      // add a constraint to the schema, only strings with a length less or equal than 10 are valid
-      // and add an error message for strings that are too long
-      S.maxLength(10, { message: (s) => `${s} is too long` })
-      // add an identifier to the schema
-    )
-    .annotations({
-      // add an identifier to the schema
-      identifier: "Password",
-      // add a title to the schema
-      title: "password",
-      // add a description to the schema
-      description:
-        "A password is a string of characters used to verify the identity of a user during the authentication process",
-      // add examples to the schema
-      examples: ["1Ki77y", "jelly22fi$h"],
-      // add documentation to the schema
-      documentation: `jsDoc documentation...`
-    })
+const schema = Schema.HashSet(Schema.NumberFromString)
+
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
+
+console.log(decode(["1", "2", "3"])) // { _id: 'HashSet', values: [ 1, 2, 3 ] }
+console.log(encode(HashSet.fromIterable([1, 2, 3]))) // [ '1', '2', '3' ]
 ```
 
-The example shows some built-in combinators to add meta information, but users can easily add their own meta information by defining a custom annotation.
+### HashSetFromSelf
 
-Here's an example of how to add a `deprecated` annotation:
+- decoding
+  - `HashSet<I>` -> `HashSet<A>`
+- encoding
+  - `HashSet<A>` -> `HashSet<I>`
 
 ```ts
-import * as AST from "@effect/schema/AST"
-import * as S from "@effect/schema/Schema"
-
-const DeprecatedId = Symbol.for(
-  "some/unique/identifier/for/the/custom/annotation"
-)
+import { Schema } from "@effect/schema"
+import { HashSet } from "effect"
 
-const deprecated = <A, I, R>(self: S.Schema<A, I, R>): S.Schema<A, I, R> =>
-  S.make(AST.annotations(self.ast, { [DeprecatedId]: true }))
+const schema = Schema.HashSetFromSelf(Schema.NumberFromString)
 
-const schema = deprecated(S.String)
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
 
-console.log(schema)
-/*
-Output:
-{
-  ast: {
-    _tag: 'StringKeyword',
-    annotations: {
-      [Symbol(@effect/schema/annotation/Title)]: 'string',
-      [Symbol(@effect/schema/annotation/Description)]: 'a string',
-      [Symbol(some/unique/identifier/for/the/custom/annotation)]: true
-    }
-  }
-  ...
-}
-*/
+console.log(decode(HashSet.fromIterable(["1", "2", "3"]))) // { _id: 'HashSet', values: [ 1, 2, 3 ] }
+console.log(encode(HashSet.fromIterable([1, 2, 3]))) // { _id: 'HashSet', values: [ '1', '3', '2' ] }
 ```
 
-Annotations can be read using the `getAnnotation` helper, here's an example:
+## HashMap
 
-```ts
-import * as AST from "@effect/schema/AST"
-import * as S from "@effect/schema/Schema"
-import * as Option from "effect/Option"
+### HashMap
 
-const DeprecatedId = Symbol.for(
-  "some/unique/identifier/for/the/custom/annotation"
-)
+- decoding
+  - `ReadonlyArray<readonly [KI, VI]>` -> `HashMap<KA, VA>`
+- encoding
+  - `HashMap<KA, VA>` -> `ReadonlyArray<readonly [KI, VI]>`
+
+```ts
+import { Schema } from "@effect/schema"
+import { HashMap } from "effect"
 
-const deprecated = <A, I, R>(self: S.Schema<A, I, R>): S.Schema<A, I, R> =>
-  S.make(AST.annotations(self.ast, { [DeprecatedId]: true }))
+const schema = Schema.HashMap({
+  key: Schema.String,
+  value: Schema.NumberFromString
+})
 
-const schema = deprecated(S.String)
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
 
-const isDeprecated = <A, I, R>(schema: S.Schema<A, I, R>): boolean =>
-  AST.getAnnotation<boolean>(DeprecatedId)(schema.ast).pipe(
-    Option.getOrElse(() => false)
+console.log(
+  decode([
+    ["a", "2"],
+    ["b", "2"],
+    ["c", "3"]
+  ])
+) // { _id: 'HashMap', values: [ [ 'a', 2 ], [ 'c', 3 ], [ 'b', 2 ] ] }
+console.log(
+  encode(
+    HashMap.fromIterable([
+      ["a", 1],
+      ["b", 2],
+      ["c", 3]
+    ])
   )
-
-console.log(isDeprecated(S.String)) // false
-console.log(isDeprecated(schema)) // true
+) // [ [ 'a', '1' ], [ 'c', '3' ], [ 'b', '2' ] ]
 ```
 
-# Error messages
-
-## Default Error Messages
+### HashMapFromSelf
 
-When a parsing, decoding, or encoding process encounters a failure, a default error message is automatically generated for you. Let's explore some examples:
+- decoding
+  - `HashMap<KI, VI>` -> `HashMap<KA, VA>`
+- encoding
+  - `HashMap<KA, VA>` -> `HashMap<KI, VI>`
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
+import { HashMap } from "effect"
 
-const schema = S.Struct({
-  name: S.String,
-  age: S.Number
+const schema = Schema.HashMapFromSelf({
+  key: Schema.String,
+  value: Schema.NumberFromString
 })
 
-S.decodeUnknownSync(schema)(null)
-/*
-throws:
-Error: Expected { name: string; age: number }, actual null
-*/
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
 
-S.decodeUnknownSync(schema)({}, { errors: "all" })
-/*
-throws:
-Error: { name: string; age: number }
-├─ ["name"]
-│  └─ is missing
-└─ ["age"]
-   └─ is missing
-*/
+console.log(
+  decode(
+    HashMap.fromIterable([
+      ["a", "2"],
+      ["b", "2"],
+      ["c", "3"]
+    ])
+  )
+) // { _id: 'HashMap', values: [ [ 'a', 2 ], [ 'c', 3 ], [ 'b', 2 ] ] }
+console.log(
+  encode(
+    HashMap.fromIterable([
+      ["a", 1],
+      ["b", 2],
+      ["c", 3]
+    ])
+  )
+) // { _id: 'HashMap', values: [ [ 'a', '1' ], [ 'c', '3' ], [ 'b', '2' ] ] }
 ```
 
-### Identifiers in Error Messages
+## SortedSet
 
-When you include an identifier annotation, it will be incorporated into the default error message, followed by a description if provided:
+### SortedSet
+
+- decoding
+  - `ReadonlyArray<I>` -> `SortedSet<A>`
+- encoding
+  - `SortedSet<A>` -> `ReadonlyArray<I>`
 
 ```ts
-import * as S from "@effect/schema/Schema"
-
-const schema = S.Struct({
-  name: S.String.annotations({ identifier: "Name" }),
-  age: S.Number.annotations({ identifier: "Age" })
-}).annotations({ identifier: "Person" })
+import { Schema } from "@effect/schema"
+import { Number, SortedSet } from "effect"
 
-S.decodeUnknownSync(schema)(null)
-/*
-throws:
-Error: Expected Person, actual null
-*/
+const schema = Schema.SortedSet(Schema.NumberFromString, Number.Order)
 
-S.decodeUnknownSync(schema)({}, { errors: "all" })
-/*
-throws:
-Error: Person
-├─ ["name"]
-│  └─ is missing
-└─ ["age"]
-   └─ is missing
-*/
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
 
-S.decodeUnknownSync(schema)({ name: null, age: null }, { errors: "all" })
-/*
-throws:
-Error: Person
-├─ ["name"]
-│  └─ Expected Name (a string), actual null
-└─ ["age"]
-   └─ Expected Age (a number), actual null
-*/
+console.log(decode(["1", "2", "3"])) // { _id: 'SortedSet', values: [ 1, 2, 3 ] }
+console.log(encode(SortedSet.fromIterable(Number.Order)([1, 2, 3]))) // [ '1', '2', '3' ]
 ```
 
-### Refinements
+### SortedSetFromSelf
 
-When a refinement fails, the default error message indicates whether the failure occurred in the "from" part or within the predicate defining the refinement:
+- decoding
+  - `SortedSet<I>` -> `SortedSet<A>`
+- encoding
+  - `SortedSet<A>` -> `SortedSet<I>`
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
+import { Number, SortedSet, String } from "effect"
 
-const schema = S.Struct({
-  name: S.NonEmpty.annotations({ identifier: "Name" }), // refinement
-  age: S.Positive.pipe(S.int({ identifier: "Age" })) // refinement
-}).annotations({ identifier: "Person" })
+const schema = Schema.SortedSetFromSelf(
+  Schema.NumberFromString,
+  Number.Order,
+  String.Order
+)
 
-// "from" failure
-S.decodeUnknownSync(schema)({ name: null, age: 18 })
-/*
-throws:
-Error: Person
-└─ ["name"]
-   └─ Name
-      └─ From side refinement failure
-         └─ Expected a string, actual null
-*/
+const decode = Schema.decodeUnknownSync(schema)
+const encode = Schema.encodeSync(schema)
 
-// predicate failure
-S.decodeUnknownSync(schema)({ name: "", age: 18 })
-/*
-throws:
-Error: Person
-└─ ["name"]
-   └─ Name
-      └─ Predicate refinement failure
-         └─ Expected Name (a non empty string), actual ""
-*/
+console.log(decode(SortedSet.fromIterable(String.Order)(["1", "2", "3"]))) // { _id: 'SortedSet', values: [ 1, 2, 3 ] }
+console.log(encode(SortedSet.fromIterable(Number.Order)([1, 2, 3]))) // { _id: 'SortedSet', values: [ '1', '2', '3' ] }
 ```
 
-In the first example, the error message indicates a "from" side refinement failure in the "Name" property, specifying that a string was expected but received null. In the second example, a predicate refinement failure is reported, indicating that a non-empty string was expected for "Name," but an empty string was provided.
-
-## Custom Error Messages
+# Useful Examples
 
-### General Guidelines for Messages
+## Email
 
-The general logic followed to determine the messages is as follows:
+Since there are various different definitions of what constitutes a valid email address depending on the environment and use case, `@effect/schema` does not provide a built-in combinator for parsing email addresses. However, it is easy to define a custom combinator that can be used to parse email addresses.
 
-1. If no custom messages are set, the default message related to the innermost schema where the operation (i.e., decoding or encoding) failed is used.
-2. If at least one custom message is set, then the one corresponding to the **first** failed schema is used, starting from the innermost schema to the outermost.
+```ts
+import { Schema } from "@effect/schema"
 
-In practice, either only default messages are used or only custom messages are used. This is to address the scenario where a user wants to define a single cumulative custom message describing the properties that a valid value must have and does not want to see default messages. Therefore, in the presence of even a single custom message, if different messages are desired for even the innermost schemas, custom messages must also be set for those.
+// see https://stackoverflow.com/questions/46155/how-can-i-validate-an-email-address-in-javascript/46181#46181
+const Email = Schema.pattern(
+  /^(?!\.)(?!.*\.\.)([A-Z0-9_+-.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9-]*\.)+[A-Z]{2,}$/i
+)
+```
 
-### Refinements
+## Url
 
-You have the option to customize error messages for refinements using the `message` annotation:
+Multiple environments like the Browser or Node provide a built-in `URL` class that can be used to validate URLs. Here we demonstrate how to leverage it to validate if a string is a valid URL.
 
 ```ts
-import * as S from "@effect/schema/Schema"
+import { Schema } from "@effect/schema"
 
-const schema = S.Struct({
-  name: S.NonEmpty.annotations({
-    identifier: "Name",
-    message: () => "Name: a required non empty string"
-  }),
-  age: S.Positive.pipe(
-    S.int({ identifier: "Age", message: () => "Age: a positive integer" })
-  )
-}).annotations({ identifier: "Person" })
+const UrlString = Schema.String.pipe(
+  Schema.filter((value) => {
+    try {
+      new URL(value)
+      return true
+    } catch (_) {
+      return false
+    }
+  })
+)
 
-S.decodeUnknownSync(schema)({ name: null, age: 18 })
-/*
-throws:
-Error: Person
-└─ ["name"]
-   └─ Name: a required non empty string
-*/
+const decode = Schema.decodeUnknownSync(UrlString)
 
-S.decodeUnknownSync(schema)({ name: "", age: 18 })
-/*
-throws:
-Error: Person
-└─ ["name"]
-   └─ Name: a required non empty string
-*/
+console.log(decode("https://www.effect.website")) // https://www.effect.website
 ```
 
-When setting multiple override messages, the one corresponding to the **first** failed predicate is used, starting from the innermost refinement to the outermost:
+In case you prefer to normalize URLs you can combine `transformOrFail` with `URL`:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-
-const schema = S.Struct({
-  name: S.NonEmpty,
-  age: S.Number.annotations({ message: () => "please enter a number" }).pipe(
-    S.positive({ message: () => "please enter a positive number" }),
-    S.int({ message: () => "please enter an integer" })
-  )
-}).annotations({ identifier: "Person" })
+import { ParseResult, Schema } from "@effect/schema"
 
-S.decodeUnknownSync(schema)({ name: "John", age: null })
-/*
-throws:
-Error: Person
-└─ ["age"]
-   └─ please enter a number
-*/
+const NormalizedUrlString = Schema.String.pipe(
+  Schema.filter((value) => {
+    try {
+      return new URL(value).toString() === value
+    } catch (_) {
+      return false
+    }
+  })
+)
 
-S.decodeUnknownSync(schema)({ name: "John", age: -1 })
-/*
-throws:
-Error: Person
-└─ ["age"]
-   └─ please enter a positive number
-*/
+const NormalizeUrlString = Schema.transformOrFail(
+  Schema.String,
+  NormalizedUrlString,
+  {
+    decode: (value, _, ast) =>
+      ParseResult.try({
+        try: () => new URL(value).toString(),
+        catch: (err) =>
+          new ParseResult.Type(
+            ast,
+            value,
+            err instanceof Error ? err.message : undefined
+          )
+      }),
+    encode: ParseResult.succeed
+  }
+)
 
-S.decodeUnknownSync(schema)({ name: "John", age: 1.2 })
-/*
-throws:
-Error: Person
-└─ ["age"]
-   └─ please enter an integer
-*/
+const decode = Schema.decodeUnknownSync(NormalizeUrlString)
 
-S.decodeUnknownSync(schema)({ name: "John", age: -1.2 })
-/*
-throws:
-Error: Person
-└─ ["age"]
-   └─ please enter a positive number
-*/
+console.log(decode("https://www.effect.website")) // "https://www.effect.website/"
 ```
 
-### Transformations
-
-When a transformation encounters an error, the default error message provides information on whether the failure happened in the "from" part, the "to" part, or within the transformation process itself:
-
-```ts
-import * as ParseResult from "@effect/schema/ParseResult"
-import * as S from "@effect/schema/Schema"
-
-const IntFromString = S.transformOrFail(S.String, S.Int, {
-  decode: (s, _, ast) => {
-    const n = Number(s)
-    return Number.isNaN(n)
-      ? ParseResult.fail(new ParseResult.Type(ast, s))
-      : ParseResult.succeed(n)
-  },
-  encode: (n) => ParseResult.succeed(String(n))
-}).annotations({ identifier: "IntFromString" })
-
-const schema = S.Struct({
-  name: S.NonEmpty,
-  age: IntFromString
-}).annotations({ identifier: "Person" })
+# Technical overview: Understanding Schemas
 
-// "from" failure
-S.decodeUnknownSync(schema)({ name: "John", age: null })
-/*
-throws:
-Error: Person
-└─ ["age"]
-   └─ IntFromString
-      └─ Encoded side transformation failure
-         └─ Expected a string, actual null
-*/
+A schema is a description of a data structure that can be used to generate various artifacts from a single declaration.
 
-// "to" failure
-S.decodeUnknownSync(schema)({ name: "John", age: "1.2" })
-/*
-throws:
-Error: Person
-└─ ["age"]
-   └─ IntFromString
-      └─ Type side transformation failure
-         └─ Int
-            └─ Predicate refinement failure
-               └─ Expected Int (an integer), actual 1.2
-*/
+From a technical point of view a schema is just a typed wrapper of an `AST` value:
 
-// "transformation" failure
-S.decodeUnknownSync(schema)({ name: "John", age: "a" })
-/*
-throws:
-Error: Person
-└─ ["age"]
-   └─ IntFromString
-      └─ Transformation process failure
-         └─ Expected IntFromString, actual "a"
-*/
+```ts
+interface Schema<A, I, R> {
+  readonly ast: AST
+}
 ```
 
-### Transformations overrides
-
-You have the option to customize error messages for transformations using the `message` annotation:
-
-```ts
-import * as ParseResult from "@effect/schema/ParseResult"
-import * as S from "@effect/schema/Schema"
+The `AST` type represents a tiny portion of the TypeScript AST, roughly speaking the part describing ADTs (algebraic data types),
+i.e. products (like structs and tuples) and unions, plus a custom transformation node.
 
-const IntFromString = S.transformOrFail(
-  S.String.annotations({ message: () => "please enter a string" }),
-  S.Int.annotations({ message: () => "please enter an integer" }),
-  {
-    decode: (s, _, ast) => {
-      const n = Number(s)
-      return Number.isNaN(n)
-        ? ParseResult.fail(new ParseResult.Type(ast, s))
-        : ParseResult.succeed(n)
-    },
-    encode: (n) => ParseResult.succeed(String(n))
-  }
-).annotations({
-  identifier: "IntFromString",
-  message: () => "please enter a parseable string"
-})
+This means that you can define your own schema constructors / combinators as long as you are able to manipulate the `AST` value accordingly, let's see an example.
 
-const schema = S.Struct({
-  name: S.NonEmpty,
-  age: IntFromString
-}).annotations({ identifier: "Person" })
+Say we want to define a `pair` schema constructor, which takes a `Schema<A, I, R>` as input and returns a `Schema<readonly [A, A], readonly [I, I], R>` as output.
 
-// "from" failure
-S.decodeUnknownSync(schema)({ name: "John", age: null })
-/*
-throws:
-Error: Person
-└─ ["age"]
-   └─ please enter a string
-*/
+First of all we need to define the signature of `pair`
 
-// "to" failure
-S.decodeUnknownSync(schema)({ name: "John", age: "1.2" })
-/*
-throws:
-Error: Person
-└─ ["age"]
-   └─ please enter an integer
-*/
+```ts
+import type { Schema } from "@effect/schema"
 
-// "transformation" failure
-S.decodeUnknownSync(schema)({ name: "John", age: "a" })
-/*
-throws:
-Error: Person
-└─ ["age"]
-   └─ please enter a parseable string
-*/
+declare const pair: <A, I, R>(
+  schema: Schema.Schema<A, I, R>
+) => Schema.Schema<readonly [A, A], readonly [I, I], R>
 ```
 
-### Effectful messages
-
-Messages are not only of type `string` but can return an `Effect` so that they can have dependencies (for example, from an internationalization service). Let's see the outline of a similar situation with a very simplified example for demonstration purposes:
+Then we can implement the body using the APIs exported by the `@effect/schema/AST` module:
 
 ```ts
-import * as S from "@effect/schema/Schema"
-import * as TreeFormatter from "@effect/schema/TreeFormatter"
-import * as Context from "effect/Context"
-import * as Effect from "effect/Effect"
-import * as Either from "effect/Either"
-import * as Option from "effect/Option"
-
-// internationalization service
-class Messages extends Context.Tag("Messages")<
-  Messages,
-  {
-    NonEmpty: string
-  }
->() {}
+import { AST, Schema } from "@effect/schema"
 
-const Name = S.NonEmpty.pipe(
-  S.message(() =>
-    Effect.gen(function* (_) {
-      const service = yield* _(Effect.serviceOption(Messages))
-      return Option.match(service, {
-        onNone: () => "Invalid string",
-        onSome: (messages) => messages.NonEmpty
-      })
-    })
+const pair = <A, I, R>(
+  schema: Schema.Schema<A, I, R>
+): Schema.Schema<readonly [A, A], readonly [I, I], R> => {
+  const element = new AST.Element(
+    schema.ast, // <= the element type
+    false // <= is optional?
   )
-)
+  const tuple = new AST.TupleType(
+    [element, element], // <= elements definitions
+    [], // <= rest element
+    true // <= is readonly?
+  )
+  return Schema.make(tuple) // <= wrap the AST value in a Schema
+}
+```
 
-S.decodeUnknownSync(Name)("") // => throws "Invalid string"
+This example demonstrates the use of the low-level APIs of the `AST` module, however, the same result can be achieved more easily and conveniently by using the high-level APIs provided by the `Schema` module.
 
-const result = S.decodeUnknownEither(Name)("").pipe(
-  Either.mapLeft((error) =>
-    TreeFormatter.formatErrorEffect(error).pipe(
-      Effect.provideService(Messages, { NonEmpty: "should be non empty" }),
-      Effect.runSync
-    )
-  )
-)
+```ts
+import { Schema } from "@effect/schema"
 
-console.log(result) // => { _id: 'Either', _tag: 'Left', left: 'should be non empty' }
+const pair = <A, I, R>(
+  schema: Schema.Schema<A, I, R>
+): Schema.Schema<readonly [A, A], readonly [I, I], R> =>
+  Schema.Tuple(schema, schema)
 ```
 
-# Comparison
+# Comparisons
 
 ## Zod
 
@@ -6763,7 +7416,7 @@ const Cat = S.Struct({ name: S.String }).pipe(S.brand("Cat"))
 
 No equivalent as it's the default behavior.
 
-# Documentation
+# API Reference
 
 - [API Reference](https://effect-ts.github.io/effect/docs/schema)
 
@@ -6821,6 +7474,14 @@ We welcome contributions via pull requests! Here are some guidelines to help you
 - If your change requires documentation, please update the relevant documentation.
 - Please be patient! We will do our best to review your pull request as soon as possible.
 
+# Credits
+
+This library was inspired by the following projects:
+
+- [io-ts](https://github.com/gcanti/io-ts)
+- [zod](https://github.com/colinhacks/zod)
+- [zio-schema](https://github.com/zio/zio-schema)
+
 ## License
 
 By contributing to this project, you agree that your contributions will be licensed under the project's [MIT License](./LICENSE).
diff --git a/dist/cjs/AST.js b/dist/cjs/AST.js
index c1dea79e8158ec89da84224b5c10b5c3d94f9800..d42aed6712bec705eac7b66b7e5c10cfee4f09f2 100644
--- a/dist/cjs/AST.js
+++ b/dist/cjs/AST.js
@@ -3,12 +3,11 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.isTupleType = exports.isTransformation = exports.isTemplateLiteral = exports.isSymbolKeyword = exports.isSuspend = exports.isStringKeyword = exports.isRefinement = exports.isParameter = exports.isObjectKeyword = exports.isNumberKeyword = exports.isNeverKeyword = exports.isMembers = exports.isLiteral = exports.isFinalTransformation = exports.isEnums = exports.isDeclaration = exports.isComposeTransformation = exports.isBooleanKeyword = exports.isBigIntKeyword = exports.isAnyKeyword = exports.hash = exports.getWeight = exports.getToPropertySignatures = exports.getToIndexSignatures = exports.getTitleAnnotation = exports.getTemplateLiteralRegExp = exports.getSurrogateAnnotation = exports.getPropertySignatures = exports.getPropertyKeyIndexedAccess = exports.getParseIssueTitleAnnotation = exports.getParameterBase = exports.getNumberIndexedAccess = exports.getMessageAnnotation = exports.getJSONSchemaAnnotation = exports.getJSONIdentifierAnnotation = exports.getJSONIdentifier = exports.getIdentifierAnnotation = exports.getExamplesAnnotation = exports.getDocumentationAnnotation = exports.getDescriptionAnnotation = exports.getDefaultAnnotation = exports.getConcurrencyAnnotation = exports.getCompiler = exports.getCardinality = exports.getBrandAnnotation = exports.getBatchingAnnotation = exports.getAnnotation = exports.flatten = exports.encodedAST = exports.defaultParseOption = exports.composeTransformation = exports.compose = exports.booleanKeyword = exports.bigIntKeyword = exports.anyKeyword = exports.annotations = exports.VoidKeyword = exports.UnknownKeyword = exports.UniqueSymbol = exports.Union = exports.UndefinedKeyword = exports.TypeLiteralTransformation = exports.TypeLiteral = exports.TypeAnnotationId = exports.TupleType = exports.Transformation = exports.TitleAnnotationId = exports.TemplateLiteralSpan = exports.TemplateLiteral = exports.SymbolKeyword = exports.Suspend = exports.SurrogateAnnotationId = exports.StringKeyword = exports.Refinement = exports.PropertySignatureTransformation = exports.PropertySignature = exports.ParseIssueTitleAnnotationId = exports.ObjectKeyword = exports.NumberKeyword = exports.NeverKeyword = exports.MessageAnnotationId = exports.Literal = exports.JSONSchemaAnnotationId = exports.IndexSignature = exports.IdentifierAnnotationId = exports.FinalTransformation = exports.ExamplesAnnotationId = exports.Enums = exports.Element = exports.DocumentationAnnotationId = exports.DescriptionAnnotationId = exports.DefaultAnnotationId = exports.Declaration = exports.ConcurrencyAnnotationId = exports.ComposeTransformation = exports.BrandAnnotationId = exports.BooleanKeyword = exports.BigIntKeyword = exports.BatchingAnnotationId = exports.AnyKeyword = void 0;
-exports.voidKeyword = exports.unknownKeyword = exports.unify = exports.undefinedKeyword = exports.typeAST = exports.symbolKeyword = exports.stringKeyword = exports.required = exports.rename = exports.record = exports.pick = exports.partial = exports.orUndefined = exports.omit = exports.objectKeyword = exports.numberKeyword = exports.null = exports.neverKeyword = exports.mutable = exports.mapMembers = exports.keyof = exports.isVoidKeyword = exports.isUnknownKeyword = exports.isUniqueSymbol = exports.isUnion = exports.isUndefinedKeyword = exports.isTypeLiteralTransformation = exports.isTypeLiteral = void 0;
+exports.isTypeLiteral = exports.isTupleType = exports.isTransformation = exports.isTemplateLiteral = exports.isSymbolKeyword = exports.isSuspend = exports.isStringKeyword = exports.isRefinement = exports.isParameter = exports.isObjectKeyword = exports.isNumberKeyword = exports.isNeverKeyword = exports.isMembers = exports.isLiteral = exports.isFinalTransformation = exports.isEnums = exports.isDeclaration = exports.isComposeTransformation = exports.isBooleanKeyword = exports.isBigIntKeyword = exports.isAnyKeyword = exports.getWeight = exports.getToPropertySignatures = exports.getToIndexSignatures = exports.getTitleAnnotation = exports.getTemplateLiteralRegExp = exports.getSurrogateAnnotation = exports.getPropertySignatures = exports.getPropertyKeyIndexedAccess = exports.getParseIssueTitleAnnotation = exports.getParameterBase = exports.getNumberIndexedAccess = exports.getMessageAnnotation = exports.getJSONSchemaAnnotation = exports.getJSONIdentifierAnnotation = exports.getJSONIdentifier = exports.getIdentifierAnnotation = exports.getExamplesAnnotation = exports.getDocumentationAnnotation = exports.getDescriptionAnnotation = exports.getDefaultAnnotation = exports.getConcurrencyAnnotation = exports.getCompiler = exports.getCardinality = exports.getBrandAnnotation = exports.getBatchingAnnotation = exports.getAnnotation = exports.flatten = exports.encodedAST = exports.defaultParseOption = exports.composeTransformation = exports.compose = exports.booleanKeyword = exports.bigIntKeyword = exports.anyKeyword = exports.annotations = exports.VoidKeyword = exports.UnknownKeyword = exports.UniqueSymbol = exports.Union = exports.UndefinedKeyword = exports.TypeLiteralTransformation = exports.TypeLiteral = exports.TypeAnnotationId = exports.TupleType = exports.Transformation = exports.TitleAnnotationId = exports.TemplateLiteralSpan = exports.TemplateLiteral = exports.SymbolKeyword = exports.Suspend = exports.SurrogateAnnotationId = exports.StringKeyword = exports.Refinement = exports.PropertySignatureTransformation = exports.PropertySignature = exports.ParseIssueTitleAnnotationId = exports.ObjectKeyword = exports.NumberKeyword = exports.NeverKeyword = exports.MessageAnnotationId = exports.Literal = exports.JSONSchemaAnnotationId = exports.IndexSignature = exports.IdentifierAnnotationId = exports.FinalTransformation = exports.ExamplesAnnotationId = exports.Enums = exports.Element = exports.DocumentationAnnotationId = exports.DescriptionAnnotationId = exports.DefaultAnnotationId = exports.Declaration = exports.ConcurrencyAnnotationId = exports.ComposeTransformation = exports.BrandAnnotationId = exports.BooleanKeyword = exports.BigIntKeyword = exports.BatchingAnnotationId = exports.AnyKeyword = void 0;
+exports.voidKeyword = exports.unknownKeyword = exports.unify = exports.undefinedKeyword = exports.typeAST = exports.symbolKeyword = exports.stringKeyword = exports.required = exports.rename = exports.record = exports.pick = exports.partial = exports.orUndefined = exports.omit = exports.objectKeyword = exports.numberKeyword = exports.null = exports.neverKeyword = exports.mutable = exports.mapMembers = exports.keyof = exports.isVoidKeyword = exports.isUnknownKeyword = exports.isUniqueSymbol = exports.isUnion = exports.isUndefinedKeyword = exports.isTypeLiteralTransformation = void 0;
 var Arr = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Array"));
 var _Function = /*#__PURE__*/require("effect/Function");
 var _GlobalValue = /*#__PURE__*/require("effect/GlobalValue");
-var Hash = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Hash"));
 var Number = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Number"));
 var Option = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Option"));
 var Order = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Order"));
@@ -944,7 +943,7 @@ class TupleType {
       }
     }
     if (hasIllegalRequiredElement || hasOptionalElement && rest.length > 1) {
-      throw new Error(errors_.getRequiredElementFollowinAnOptionalElementErrorMessage);
+      throw new Error(getRequiredElementFollowinAnOptionalElementErrorMessage);
     }
   }
   /**
@@ -1059,7 +1058,7 @@ class IndexSignature {
     if (isParameter(parameter)) {
       this.parameter = parameter;
     } else {
-      throw new Error(errors_.getIndexSignatureParameterErrorMessage);
+      throw new Error(getIndexSignatureParameterErrorMessage);
     }
   }
   /**
@@ -1112,12 +1111,12 @@ class TypeLiteral {
       const parameter = getParameterBase(indexSignatures[i].parameter);
       if (isStringKeyword(parameter)) {
         if (parameters.string) {
-          throw new Error(errors_.getDuplicateIndexSignatureErrorMessage("string"));
+          throw new Error(getDuplicateIndexSignatureErrorMessage("string"));
         }
         parameters.string = true;
       } else if (isSymbolKeyword(parameter)) {
         if (parameters.symbol) {
-          throw new Error(errors_.getDuplicateIndexSignatureErrorMessage("symbol"));
+          throw new Error(getDuplicateIndexSignatureErrorMessage("symbol"));
         }
         parameters.symbol = true;
       }
@@ -1145,9 +1144,9 @@ class TypeLiteral {
 }
 exports.TypeLiteral = TypeLiteral;
 const formatTypeLiteral = ast => {
-  const formattedPropertySignatures = ast.propertySignatures.map(ps => String(ps.name) + (ps.isOptional ? "?" : "") + ": " + ps.type).join("; ");
+  const formattedPropertySignatures = ast.propertySignatures.map(ps => (ps.isReadonly ? "readonly " : "") + String(ps.name) + (ps.isOptional ? "?" : "") + ": " + ps.type).join("; ");
   if (ast.indexSignatures.length > 0) {
-    const formattedIndexSignatures = ast.indexSignatures.map(is => `[x: ${getParameterBase(is.parameter)}]: ${is.type}`).join("; ");
+    const formattedIndexSignatures = ast.indexSignatures.map(is => (is.isReadonly ? "readonly " : "") + `[x: ${getParameterBase(is.parameter)}]: ${is.type}`).join("; ");
     if (ast.propertySignatures.length > 0) {
       return `{ ${formattedPropertySignatures}; ${formattedIndexSignatures} }`;
     } else {
@@ -1425,7 +1424,7 @@ class Refinement {
    * @since 1.0.0
    */
   toString(verbose = false) {
-    return Option.getOrElse(getExpected(this, verbose), () => "<refinement schema>");
+    return Option.getOrElse(getExpected(this, verbose), () => `{ ${this.from} | filter }`);
   }
   /**
    * @since 1.0.0
@@ -1581,12 +1580,12 @@ class TypeLiteralTransformation {
     for (const pst of propertySignatureTransformations) {
       const from = pst.from;
       if (fromKeys[from]) {
-        throw new Error(errors_.getDuplicatePropertySignatureTransformationErrorMessage(from));
+        throw new Error(getDuplicatePropertySignatureTransformationErrorMessage(from));
       }
       fromKeys[from] = true;
       const to = pst.to;
       if (toKeys[to]) {
-        throw new Error(errors_.getDuplicatePropertySignatureTransformationErrorMessage(to));
+        throw new Error(getDuplicatePropertySignatureTransformationErrorMessage(to));
       }
       toKeys[to] = true;
     }
@@ -1688,7 +1687,7 @@ const getNumberIndexedAccess = ast => {
     case "Suspend":
       return getNumberIndexedAccess(ast.f());
   }
-  throw new Error(errors_.getAPIErrorMessage("NumberIndexedAccess", `unsupported schema (${ast})`));
+  throw new Error(errors_.getErrorMessage("getNumberIndexedAccess", `unsupported schema (${ast})`));
 };
 /** @internal */
 exports.getNumberIndexedAccess = getNumberIndexedAccess;
@@ -1716,19 +1715,19 @@ const getPropertyKeyIndexedAccess = (ast, name) => {
                   {
                     const regex = getTemplateLiteralRegExp(parameterBase);
                     if (regex.test(name)) {
-                      return new PropertySignature(name, is.type, false, false);
+                      return new PropertySignature(name, is.type, false, true);
                     }
                     break;
                   }
                 case "StringKeyword":
-                  return new PropertySignature(name, is.type, false, false);
+                  return new PropertySignature(name, is.type, false, true);
               }
             }
           } else if (Predicate.isSymbol(name)) {
             for (const is of ast.indexSignatures) {
               const parameterBase = getParameterBase(is.parameter);
               if (isSymbolKeyword(parameterBase)) {
-                return new PropertySignature(name, is.type, false, false);
+                return new PropertySignature(name, is.type, false, true);
               }
             }
           }
@@ -1782,7 +1781,7 @@ const record = (key, value) => {
         if (Predicate.isString(key.literal) || Predicate.isNumber(key.literal)) {
           propertySignatures.push(new PropertySignature(key.literal, value, false, true));
         } else {
-          throw new Error(errors_.getAPIErrorMessage("Record", `unsupported literal (${util_.formatUnknown(key.literal)})`));
+          throw new Error(errors_.getErrorMessage("record", `unsupported literal (${util_.formatUnknown(key.literal)})`));
         }
         break;
       case "UniqueSymbol":
@@ -1792,7 +1791,7 @@ const record = (key, value) => {
         key.types.forEach(go);
         break;
       default:
-        throw new Error(errors_.getAPIErrorMessage("Record", `unsupported key schema (${key})`));
+        throw new Error(errors_.getErrorMessage("record", `unsupported key schema (${key})`));
     }
   };
   go(key);
@@ -1833,7 +1832,7 @@ const pick = (ast, keys) => {
           if (Option.isSome(annotation)) {
             return pick(annotation.value, keys);
           }
-          throw new Error(errors_.getAPIErrorMessage("Pick", "cannot handle this kind of transformation"));
+          throw new Error(errors_.getErrorMessage("pick", "cannot handle this kind of transformation"));
         }
     }
   }
@@ -1870,15 +1869,15 @@ const partial = (ast, options) => {
     case "Suspend":
       return new Suspend(() => partial(ast.f(), options));
     case "Declaration":
-      throw new Error(errors_.getAPIErrorMessage("partial", "cannot handle declarations"));
+      throw new Error(errors_.getErrorMessage("partial", "cannot handle declarations"));
     case "Refinement":
-      throw new Error(errors_.getAPIErrorMessage("partial", "cannot handle refinements"));
+      throw new Error(errors_.getErrorMessage("partial", "cannot handle refinements"));
     case "Transformation":
       {
         if (isTypeLiteralTransformation(ast.transformation) && ast.transformation.propertySignatureTransformations.every(isRenamingPropertySignatureTransformation)) {
           return new Transformation(partial(ast.from, options), partial(ast.to, options), ast.transformation);
         }
-        throw new Error(errors_.getAPIErrorMessage("partial", "cannot handle transformations"));
+        throw new Error(errors_.getErrorMessage("partial", "cannot handle transformations"));
       }
   }
   return ast;
@@ -1900,15 +1899,15 @@ const required = ast => {
     case "Suspend":
       return new Suspend(() => required(ast.f()));
     case "Declaration":
-      throw new Error(errors_.getAPIErrorMessage("required", "cannot handle declarations"));
+      throw new Error(errors_.getErrorMessage("required", "cannot handle declarations"));
     case "Refinement":
-      throw new Error(errors_.getAPIErrorMessage("required", "cannot handle refinements"));
+      throw new Error(errors_.getErrorMessage("required", "cannot handle refinements"));
     case "Transformation":
       {
         if (isTypeLiteralTransformation(ast.transformation) && ast.transformation.propertySignatureTransformations.every(isRenamingPropertySignatureTransformation)) {
           return new Transformation(required(ast.from), required(ast.to), ast.transformation);
         }
-        throw new Error(errors_.getAPIErrorMessage("required", "cannot handle transformations"));
+        throw new Error(errors_.getErrorMessage("required", "cannot handle transformations"));
       }
   }
   return ast;
@@ -1957,7 +1956,7 @@ const mutable = ast => {
  */
 exports.mutable = mutable;
 const getCompiler = match => {
-  const compile = ast => match[ast._tag](ast, compile);
+  const compile = (ast, path) => match[ast._tag](ast, compile, path);
   return compile;
 };
 /** @internal */
@@ -2090,12 +2089,7 @@ const toJSONAnnotations = annotations => {
   }
   return out;
 };
-/**
- * @since 1.0.0
- */
-const hash = ast => Hash.string(JSON.stringify(ast, null, 2));
 /** @internal */
-exports.hash = hash;
 const getCardinality = ast => {
   switch (ast._tag) {
     case "NeverKeyword":
@@ -2246,7 +2240,7 @@ const _keyof = ast => {
     case "Transformation":
       return _keyof(ast.to);
   }
-  throw new Error(errors_.getAPIErrorMessage("KeyOf", `unsupported schema (${ast})`));
+  throw new Error(errors_.getErrorMessage("keyof", `unsupported schema (${ast})`));
 };
 /** @internal */
 const compose = (ab, cd) => new Transformation(ab, cd, composeTransformation);
@@ -2294,4 +2288,8 @@ const getExpected = (ast, verbose) => {
     return getIdentifierAnnotation(ast).pipe(Option.orElse(() => getTitleAnnotation(ast)), Option.orElse(() => getDescriptionAnnotation(ast)));
   }
 };
+const getDuplicateIndexSignatureErrorMessage = name => `Duplicate index signature for type \`${name}\``;
+const getIndexSignatureParameterErrorMessage = "An index signature parameter type must be `string`, `symbol`, a template literal type or a refinement of the previous types";
+const getRequiredElementFollowinAnOptionalElementErrorMessage = "A required element cannot follow an optional element. ts(1257)";
+const getDuplicatePropertySignatureTransformationErrorMessage = name => `Duplicate property signature transformation ${util_.formatUnknown(name)}`;
 //# sourceMappingURL=AST.js.map
\ No newline at end of file
diff --git a/dist/cjs/AST.js.map b/dist/cjs/AST.js.map
index 1f121d2eb58c99afd43496392feb3e43d0340da4..17518536b207e55cd85f4c0a87e5f98c1b06eb4b 100644
--- a/dist/cjs/AST.js.map
+++ b/dist/cjs/AST.js.map
@@ -1 +1 @@
-{"version":3,"file":"AST.js","names":["Arr","_interopRequireWildcard","require","_Function","_GlobalValue","Hash","Number","Option","Order","Predicate","regexp","errors_","util_","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","BrandAnnotationId","exports","Symbol","for","TypeAnnotationId","MessageAnnotationId","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","JSONSchemaAnnotationId","DocumentationAnnotationId","ConcurrencyAnnotationId","BatchingAnnotationId","SurrogateAnnotationId","ParseIssueTitleAnnotationId","getAnnotation","dual","annotated","key","prototype","annotations","some","none","getBrandAnnotation","getMessageAnnotation","getTitleAnnotation","getIdentifierAnnotation","getDescriptionAnnotation","getExamplesAnnotation","getDefaultAnnotation","getJSONSchemaAnnotation","getDocumentationAnnotation","getConcurrencyAnnotation","getBatchingAnnotation","getParseIssueTitleAnnotation","getSurrogateAnnotation","JSONIdentifierAnnotationId","getJSONIdentifierAnnotation","Declaration","typeParameters","decodeUnknown","encodeUnknown","_tag","constructor","toString","verbose","getOrElse","getExpected","toJSON","map","ast","toJSONAnnotations","createASTGuard","tag","isDeclaration","Literal","literal","formatUnknown","isBigInt","String","isLiteral","$null","null","UniqueSymbol","symbol","isUniqueSymbol","UndefinedKeyword","formatKeyword","undefinedKeyword","isUndefinedKeyword","VoidKeyword","voidKeyword","isVoidKeyword","NeverKeyword","neverKeyword","isNeverKeyword","UnknownKeyword","unknownKeyword","isUnknownKeyword","AnyKeyword","anyKeyword","isAnyKeyword","StringKeyword","stringKeyword","isStringKeyword","NumberKeyword","numberKeyword","isNumberKeyword","BooleanKeyword","booleanKeyword","isBooleanKeyword","BigIntKeyword","bigIntKeyword","isBigIntKeyword","SymbolKeyword","symbolKeyword","isSymbolKeyword","ObjectKeyword","objectKeyword","isObjectKeyword","Enums","enums","length","_","value","JSON","stringify","join","isEnums","TemplateLiteralSpan","type","TemplateLiteral","head","spans","make","isNonEmptyReadonlyArray","formatTemplateLiteral","span","isTemplateLiteral","Element","isOptional","TupleType","elements","rest","isReadonly","hasOptionalElement","hasIllegalRequiredElement","Error","getRequiredElementFollowinAnOptionalElementErrorMessage","formatTuple","formattedElements","matchLeft","onEmpty","onNonEmpty","tail","formattedHead","wrappedHead","includes","formattedTail","isTupleType","PropertySignature","name","isParameter","from","IndexSignature","parameter","getIndexSignatureParameterErrorMessage","TypeLiteral","propertySignatures","indexSignatures","keys","getDuplicatePropertySignatureErrorMessage","parameters","string","getParameterBase","getDuplicateIndexSignatureErrorMessage","sortPropertySignatures","sortIndexSignatures","formatTypeLiteral","ps","formattedPropertySignatures","formattedIndexSignatures","is","isTypeLiteral","removeNevers","candidates","filter","sortCandidates","sort","mapInput","literalMap","number","boolean","bigint","flatten","flatMap","isUnion","types","unify","cs","out","uniques","literals","push","Union","memo","Set","add","union","members","isMembers","mapMembers","f","as","toJSONMemoMap","globalValue","Suspend","memoizeThunk","pipe","orElse","liftThrowable","isSuspend","Refinement","isRefinement","defaultParseOption","Transformation","to","transformation","isTransformation","FinalTransformation","decode","encode","createTransformationGuard","isFinalTransformation","ComposeTransformation","composeTransformation","isComposeTransformation","PropertySignatureTransformation","isRenamingPropertySignatureTransformation","identity","TypeLiteralTransformation","propertySignatureTransformations","fromKeys","toKeys","pst","getDuplicatePropertySignatureTransformationErrorMessage","isTypeLiteralTransformation","d","getOwnPropertyDescriptors","create","getPrototypeOf","keyof","_keyof","STRING_KEYWORD_PATTERN","NUMBER_KEYWORD_PATTERN","getTemplateLiteralRegExp","pattern","escape","RegExp","getPropertySignatures","annotation","isSome","slice","getPropertyKeys","getPropertyKeyIndexedAccess","getNumberIndexedAccess","hasOptional","concat","getAPIErrorMessage","ops","findFirst","isString","parameterBase","regex","test","isSymbol","reduce","intersection","record","go","isNumber","forEach","pick","ts","k","find","omit","orUndefined","partial","options","exact","match","member","every","required","mutable","changeMap","getCompiler","compile","getToPropertySignatures","p","typeAST","getToIndexSignatures","getJSONIdentifier","createJSONIdentifierAnnotation","onNone","undefined","onSome","identifier","changed","allocate","fa","encodedAST","getOwnPropertySymbols","hash","getCardinality","WeightOrder","tuple","maxWeight","max","emptyWeight","maxWeightAll","weights","getWeight","y","z","x","equalsTemplateLiteralSpan","getEquivalence","self","that","equalsEnums","equals","intersectionWith","compose","ab","cd","rename","mapping","ownKeys","description"],"sources":["../../src/AST.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"AST.js","names":["Arr","_interopRequireWildcard","require","_Function","_GlobalValue","Number","Option","Order","Predicate","regexp","errors_","util_","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","BrandAnnotationId","exports","Symbol","for","TypeAnnotationId","MessageAnnotationId","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","JSONSchemaAnnotationId","DocumentationAnnotationId","ConcurrencyAnnotationId","BatchingAnnotationId","SurrogateAnnotationId","ParseIssueTitleAnnotationId","getAnnotation","dual","annotated","key","prototype","annotations","some","none","getBrandAnnotation","getMessageAnnotation","getTitleAnnotation","getIdentifierAnnotation","getDescriptionAnnotation","getExamplesAnnotation","getDefaultAnnotation","getJSONSchemaAnnotation","getDocumentationAnnotation","getConcurrencyAnnotation","getBatchingAnnotation","getParseIssueTitleAnnotation","getSurrogateAnnotation","JSONIdentifierAnnotationId","getJSONIdentifierAnnotation","Declaration","typeParameters","decodeUnknown","encodeUnknown","_tag","constructor","toString","verbose","getOrElse","getExpected","toJSON","map","ast","toJSONAnnotations","createASTGuard","tag","isDeclaration","Literal","literal","formatUnknown","isBigInt","String","isLiteral","$null","null","UniqueSymbol","symbol","isUniqueSymbol","UndefinedKeyword","formatKeyword","undefinedKeyword","isUndefinedKeyword","VoidKeyword","voidKeyword","isVoidKeyword","NeverKeyword","neverKeyword","isNeverKeyword","UnknownKeyword","unknownKeyword","isUnknownKeyword","AnyKeyword","anyKeyword","isAnyKeyword","StringKeyword","stringKeyword","isStringKeyword","NumberKeyword","numberKeyword","isNumberKeyword","BooleanKeyword","booleanKeyword","isBooleanKeyword","BigIntKeyword","bigIntKeyword","isBigIntKeyword","SymbolKeyword","symbolKeyword","isSymbolKeyword","ObjectKeyword","objectKeyword","isObjectKeyword","Enums","enums","length","_","value","JSON","stringify","join","isEnums","TemplateLiteralSpan","type","TemplateLiteral","head","spans","make","isNonEmptyReadonlyArray","formatTemplateLiteral","span","isTemplateLiteral","Element","isOptional","TupleType","elements","rest","isReadonly","hasOptionalElement","hasIllegalRequiredElement","Error","getRequiredElementFollowinAnOptionalElementErrorMessage","formatTuple","formattedElements","matchLeft","onEmpty","onNonEmpty","tail","formattedHead","wrappedHead","includes","formattedTail","isTupleType","PropertySignature","name","isParameter","from","IndexSignature","parameter","getIndexSignatureParameterErrorMessage","TypeLiteral","propertySignatures","indexSignatures","keys","getDuplicatePropertySignatureErrorMessage","parameters","string","getParameterBase","getDuplicateIndexSignatureErrorMessage","sortPropertySignatures","sortIndexSignatures","formatTypeLiteral","ps","formattedPropertySignatures","formattedIndexSignatures","is","isTypeLiteral","removeNevers","candidates","filter","sortCandidates","sort","mapInput","literalMap","number","boolean","bigint","flatten","flatMap","isUnion","types","unify","cs","out","uniques","literals","push","Union","memo","Set","add","union","members","isMembers","mapMembers","f","as","toJSONMemoMap","globalValue","Suspend","memoizeThunk","pipe","orElse","liftThrowable","isSuspend","Refinement","isRefinement","defaultParseOption","Transformation","to","transformation","isTransformation","FinalTransformation","decode","encode","createTransformationGuard","isFinalTransformation","ComposeTransformation","composeTransformation","isComposeTransformation","PropertySignatureTransformation","isRenamingPropertySignatureTransformation","identity","TypeLiteralTransformation","propertySignatureTransformations","fromKeys","toKeys","pst","getDuplicatePropertySignatureTransformationErrorMessage","isTypeLiteralTransformation","d","getOwnPropertyDescriptors","create","getPrototypeOf","keyof","_keyof","STRING_KEYWORD_PATTERN","NUMBER_KEYWORD_PATTERN","getTemplateLiteralRegExp","pattern","escape","RegExp","getPropertySignatures","annotation","isSome","slice","getPropertyKeys","getPropertyKeyIndexedAccess","getNumberIndexedAccess","hasOptional","concat","getErrorMessage","ops","findFirst","isString","parameterBase","regex","test","isSymbol","reduce","intersection","record","go","isNumber","forEach","pick","ts","k","find","omit","orUndefined","partial","options","exact","match","member","every","required","mutable","changeMap","getCompiler","compile","path","getToPropertySignatures","p","typeAST","getToIndexSignatures","getJSONIdentifier","createJSONIdentifierAnnotation","onNone","undefined","onSome","identifier","changed","allocate","fa","encodedAST","getOwnPropertySymbols","getCardinality","WeightOrder","tuple","maxWeight","max","emptyWeight","maxWeightAll","weights","getWeight","y","z","x","equalsTemplateLiteralSpan","getEquivalence","self","that","equalsEnums","equals","intersectionWith","compose","ab","cd","rename","mapping","ownKeys","description"],"sources":["../../src/AST.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/cjs/Arbitrary.js b/dist/cjs/Arbitrary.js
index 7d70085d6b08a1f8fefa03cecab71e704fbdf373..43042a0453d6b117b8e21eb54d67c0f0efeb270b 100644
--- a/dist/cjs/Arbitrary.js
+++ b/dist/cjs/Arbitrary.js
@@ -60,7 +60,7 @@ const arbitrary = handler => self => self.annotations({
  * @since 1.0.0
  */
 exports.arbitrary = arbitrary;
-const makeLazy = schema => go(schema.ast, {});
+const makeLazy = schema => go(schema.ast, {}, []);
 /**
  * Returns a fast-check Arbitrary for the `A` type of the provided schema.
  *
@@ -86,21 +86,22 @@ const record = (fc, key, value, options) => {
   });
 };
 const getHook = /*#__PURE__*/AST.getAnnotation(ArbitraryHookId);
-const getRefinementFromArbitrary = (ast, options) => {
+const getRefinementFromArbitrary = (ast, options, path) => {
   const constraints = combineConstraints(options.constraints, getConstraints(ast));
   return go(ast.from, constraints ? {
     ...options,
     constraints
-  } : options);
+  } : options, path);
 };
-const go = (ast, options) => {
+const getArbitraryErrorMessage = (message, path) => errors_.getErrorMessageWithPath(`cannot build an Arbitrary for ${message}`, path);
+const go = (ast, options, path) => {
   const hook = getHook(ast);
   if (Option.isSome(hook)) {
     switch (ast._tag) {
       case "Declaration":
-        return hook.value(...ast.typeParameters.map(p => go(p, options)));
+        return hook.value(...ast.typeParameters.map(p => go(p, options, path)));
       case "Refinement":
-        return hook.value(getRefinementFromArbitrary(ast, options));
+        return hook.value(getRefinementFromArbitrary(ast, options, path));
       default:
         return hook.value();
     }
@@ -108,7 +109,7 @@ const go = (ast, options) => {
   switch (ast._tag) {
     case "Declaration":
       {
-        throw new Error(errors_.getArbitraryErrorMessage(`a declaration without annotations (${ast})`));
+        throw new Error(getArbitraryErrorMessage(`a declaration without annotations (${ast})`, path));
       }
     case "Literal":
       return fc => fc.constant(ast.literal);
@@ -119,7 +120,7 @@ const go = (ast, options) => {
       return fc => fc.constant(undefined);
     case "NeverKeyword":
       return () => {
-        throw new Error(errors_.getArbitraryErrorMessage("`never`"));
+        throw new Error(getArbitraryErrorMessage("`never`", path));
       };
     case "UnknownKeyword":
     case "AnyKeyword":
@@ -187,13 +188,14 @@ const go = (ast, options) => {
       {
         const elements = [];
         let hasOptionals = false;
+        let i = 0;
         for (const element of ast.elements) {
-          elements.push(go(element.type, options));
+          elements.push(go(element.type, options, path.concat(i++)));
           if (element.isOptional) {
             hasOptionals = true;
           }
         }
-        const rest = ast.rest.map(e => go(e, options));
+        const rest = ast.rest.map(e => go(e, options, path));
         return fc => {
           // ---------------------------------------------
           // handle elements
@@ -243,8 +245,8 @@ const go = (ast, options) => {
       }
     case "TypeLiteral":
       {
-        const propertySignaturesTypes = ast.propertySignatures.map(f => go(f.type, options));
-        const indexSignatures = ast.indexSignatures.map(is => [go(is.parameter, options), go(is.type, options)]);
+        const propertySignaturesTypes = ast.propertySignatures.map(ps => go(ps.type, options, path.concat(ps.name)));
+        const indexSignatures = ast.indexSignatures.map(is => [go(is.parameter, options, path), go(is.type, options, path)]);
         return fc => {
           const arbs = {};
           const requiredKeys = [];
@@ -280,7 +282,7 @@ const go = (ast, options) => {
       }
     case "Union":
       {
-        const types = ast.types.map(t => go(t, options));
+        const types = ast.types.map(t => go(t, options, path));
         return fc => fc.oneof({
           depthSize
         }, ...types.map(arb => arb(fc)));
@@ -288,13 +290,13 @@ const go = (ast, options) => {
     case "Enums":
       {
         if (ast.enums.length === 0) {
-          throw new Error(errors_.getArbitraryErrorMessage("an empty enum"));
+          throw new Error(getArbitraryErrorMessage("an empty enum", path));
         }
         return fc => fc.oneof(...ast.enums.map(([_, value]) => fc.constant(value)));
       }
     case "Refinement":
       {
-        const from = getRefinementFromArbitrary(ast, options);
+        const from = getRefinementFromArbitrary(ast, options, path);
         return fc => from(fc).filter(a => Option.isNone(ast.filter(a, AST.defaultParseOption, ast)));
       }
     case "Suspend":
@@ -302,11 +304,11 @@ const go = (ast, options) => {
         const get = util_.memoizeThunk(() => go(ast.f(), {
           ...options,
           isSuspend: true
-        }));
+        }, path));
         return fc => fc.constant(null).chain(() => get()(fc));
       }
     case "Transformation":
-      return go(ast.to, options);
+      return go(ast.to, options, path);
   }
 };
 /** @internal */
diff --git a/dist/cjs/Arbitrary.js.map b/dist/cjs/Arbitrary.js.map
index 0ea93b492c3a099a7fca878ab6f60a680438bea4..fc613d275f22a27d24ec2dd6034026667ab057bb 100644
--- a/dist/cjs/Arbitrary.js.map
+++ b/dist/cjs/Arbitrary.js.map
@@ -1 +1 @@
-{"version":3,"file":"Arbitrary.js","names":["Arr","_interopRequireWildcard","require","Option","Predicate","AST","FastCheck","errors_","filters_","util_","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ArbitraryHookId","exports","Symbol","for","arbitrary","handler","self","annotations","makeLazy","schema","go","ast","make","depthSize","record","fc","key","value","options","isSuspend","oneof","constant","array","tuple","minLength","maxLength","map","tuples","out","k","v","getHook","getAnnotation","getRefinementFromArbitrary","constraints","combineConstraints","getConstraints","from","hook","isSome","_tag","typeParameters","p","Error","getArbitraryErrorMessage","literal","symbol","undefined","anything","string","float","integer","boolean","bigInt","s","object","number","noDefaultInfinity","filter","Number","isNaN","components","head","span","spans","isStringKeyword","type","push","join","elements","hasOptionals","element","isOptional","rest","output","arb","indexes","chain","booleans","b","reverse","entries","splice","length","isNonEmptyReadonlyArray","tail","as","j","propertySignaturesTypes","propertySignatures","f","indexSignatures","is","parameter","arbs","requiredKeys","ps","name","o","d","types","enums","_","isNone","defaultParseOption","memoizeThunk","to","NumberConstraints","constructor","isNumber","min","Math","fround","max","isBoolean","noNaN","StringConstraints","IntegerConstraints","ArrayConstraints","BigIntConstraints","isBigInt","TypeAnnotationId","jsonSchema","JSONSchemaAnnotationId","IntTypeId","GreaterThanTypeId","GreaterThanOrEqualToTypeId","LessThanTypeId","LessThanOrEqualToTypeId","BetweenTypeId","exclusiveMinimum","minimum","exclusiveMaximum","maximum","GreaterThanBigintTypeId","GreaterThanOrEqualToBigIntTypeId","LessThanBigIntTypeId","LessThanOrEqualToBigIntTypeId","BetweenBigintTypeId","MinLengthTypeId","MaxLengthTypeId","LengthTypeId","MinItemsTypeId","MaxItemsTypeId","ItemsCountTypeId","minItems","maxItems","c1","c2","getMax","getMin","getOr","n1","n2"],"sources":["../../src/Arbitrary.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"Arbitrary.js","names":["Arr","_interopRequireWildcard","require","Option","Predicate","AST","FastCheck","errors_","filters_","util_","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ArbitraryHookId","exports","Symbol","for","arbitrary","handler","self","annotations","makeLazy","schema","go","ast","make","depthSize","record","fc","key","value","options","isSuspend","oneof","constant","array","tuple","minLength","maxLength","map","tuples","out","k","v","getHook","getAnnotation","getRefinementFromArbitrary","path","constraints","combineConstraints","getConstraints","from","getArbitraryErrorMessage","message","getErrorMessageWithPath","hook","isSome","_tag","typeParameters","p","Error","literal","symbol","undefined","anything","string","float","integer","boolean","bigInt","s","object","number","noDefaultInfinity","filter","Number","isNaN","components","head","span","spans","isStringKeyword","type","push","join","elements","hasOptionals","element","concat","isOptional","rest","output","arb","indexes","chain","booleans","b","reverse","entries","splice","length","isNonEmptyReadonlyArray","tail","as","j","propertySignaturesTypes","propertySignatures","ps","name","indexSignatures","is","parameter","arbs","requiredKeys","o","d","types","enums","_","isNone","defaultParseOption","memoizeThunk","f","to","NumberConstraints","constructor","isNumber","min","Math","fround","max","isBoolean","noNaN","StringConstraints","IntegerConstraints","ArrayConstraints","BigIntConstraints","isBigInt","TypeAnnotationId","jsonSchema","JSONSchemaAnnotationId","IntTypeId","GreaterThanTypeId","GreaterThanOrEqualToTypeId","LessThanTypeId","LessThanOrEqualToTypeId","BetweenTypeId","exclusiveMinimum","minimum","exclusiveMaximum","maximum","GreaterThanBigintTypeId","GreaterThanOrEqualToBigIntTypeId","LessThanBigIntTypeId","LessThanOrEqualToBigIntTypeId","BetweenBigintTypeId","MinLengthTypeId","MaxLengthTypeId","LengthTypeId","MinItemsTypeId","MaxItemsTypeId","ItemsCountTypeId","minItems","maxItems","c1","c2","getMax","getMin","getOr","n1","n2"],"sources":["../../src/Arbitrary.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/cjs/ArrayFormatter.js b/dist/cjs/ArrayFormatter.js
index aa4587b0629b3c14eee29dfabd4052afaf1a8a24..7ad5d61f0a78d54ffd202f2185a2919a95e684aa 100644
--- a/dist/cjs/ArrayFormatter.js
+++ b/dist/cjs/ArrayFormatter.js
@@ -60,14 +60,16 @@ const formatError = error => formatIssue(error.error);
 exports.formatError = formatError;
 const formatErrorSync = error => formatIssueSync(error.error);
 exports.formatErrorSync = formatErrorSync;
+const succeed = issue => Effect.succeed([issue]);
 const getArray = (issue, path, onFailure) => Effect.matchEffect(TreeFormatter.getMessage(issue), {
   onFailure,
-  onSuccess: message => Effect.succeed([{
+  onSuccess: message => succeed({
     _tag: issue._tag,
     path,
     message
-  }])
+  })
 });
+const flatten = eff => Effect.map(eff, Arr.flatten);
 const go = (e, path = []) => {
   const _tag = e._tag;
   switch (_tag) {
@@ -78,39 +80,39 @@ const go = (e, path = []) => {
         message
       }]);
     case "Forbidden":
-      return Effect.succeed([{
+      return succeed({
         _tag,
         path,
         message: TreeFormatter.formatForbiddenMessage(e)
-      }]);
+      });
     case "Unexpected":
-      return Effect.succeed([{
+      return succeed({
         _tag,
         path,
         message: `is unexpected, expected ${e.ast.toString(true)}`
-      }]);
+      });
     case "Missing":
-      return Effect.succeed([{
+      return succeed({
         _tag,
         path,
         message: "is missing"
-      }]);
+      });
     case "Union":
-      return getArray(e, path, () => Effect.map(Effect.forEach(e.errors, e => {
+      return getArray(e, path, () => flatten(Effect.forEach(e.errors, e => {
         switch (e._tag) {
           case "Member":
             return go(e.error, path);
           default:
             return go(e, path);
         }
-      }), Arr.flatten));
+      })));
     case "TupleType":
-      return getArray(e, path, () => Effect.map(Effect.forEach(e.errors, index => go(index.error, [...path, index.index])), Arr.flatten));
+      return getArray(e, path, () => flatten(Effect.forEach(e.errors, index => go(index.error, path.concat(index.index)))));
     case "TypeLiteral":
-      return getArray(e, path, () => Effect.map(Effect.forEach(e.errors, key => go(key.error, [...path, key.key])), Arr.flatten));
-    case "Transformation":
-    case "Refinement":
+      return getArray(e, path, () => flatten(Effect.forEach(e.errors, key => go(key.error, path.concat(key.key)))));
     case "Declaration":
+    case "Refinement":
+    case "Transformation":
       return getArray(e, path, () => go(e.error, path));
   }
 };
diff --git a/dist/cjs/ArrayFormatter.js.map b/dist/cjs/ArrayFormatter.js.map
index 39ec5824f2e24e08d5e3e5cf5d632281946b4dd2..f429e0bbb92f53c3c4f2c97c026842e53c4b7fc8 100644
--- a/dist/cjs/ArrayFormatter.js.map
+++ b/dist/cjs/ArrayFormatter.js.map
@@ -1 +1 @@
-{"version":3,"file":"ArrayFormatter.js","names":["Arr","_interopRequireWildcard","require","Effect","TreeFormatter","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","formatIssue","issue","go","exports","formatIssueSync","runSync","formatError","error","formatErrorSync","getArray","path","onFailure","matchEffect","getMessage","onSuccess","message","succeed","_tag","map","formatTypeMessage","formatForbiddenMessage","ast","toString","forEach","errors","flatten","index","key"],"sources":["../../src/ArrayFormatter.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"ArrayFormatter.js","names":["Arr","_interopRequireWildcard","require","Effect","TreeFormatter","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","formatIssue","issue","go","exports","formatIssueSync","runSync","formatError","error","formatErrorSync","succeed","getArray","path","onFailure","matchEffect","getMessage","onSuccess","message","_tag","flatten","eff","map","formatTypeMessage","formatForbiddenMessage","ast","toString","forEach","errors","index","concat","key"],"sources":["../../src/ArrayFormatter.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/cjs/Equivalence.js b/dist/cjs/Equivalence.js
index 2af8bb83a7e5de2a6492f1a355fa51d5a30f6916..51add4b1efde9c8832682396363f3c6fe2d69682 100644
--- a/dist/cjs/Equivalence.js
+++ b/dist/cjs/Equivalence.js
@@ -59,26 +59,27 @@ const equivalence = handler => self => self.annotations({
  * @since 1.0.0
  */
 exports.equivalence = equivalence;
-const make = schema => go(schema.ast);
+const make = schema => go(schema.ast, []);
 exports.make = make;
 const getHook = /*#__PURE__*/AST.getAnnotation(EquivalenceHookId);
-const go = ast => {
+const getEquivalenceErrorMessage = (message, path) => errors_.getErrorMessageWithPath(`cannot build an Equivalence for ${message}`, path);
+const go = (ast, path) => {
   const hook = getHook(ast);
   if (Option.isSome(hook)) {
     switch (ast._tag) {
       case "Declaration":
-        return hook.value(...ast.typeParameters.map(go));
+        return hook.value(...ast.typeParameters.map(tp => go(tp, path)));
       case "Refinement":
-        return hook.value(go(ast.from));
+        return hook.value(go(ast.from, path));
       default:
         return hook.value();
     }
   }
   switch (ast._tag) {
     case "NeverKeyword":
-      throw new Error(errors_.getEquivalenceErrorMessage("`never`"));
+      throw new Error(getEquivalenceErrorMessage("`never`", path));
     case "Transformation":
-      return go(ast.to);
+      return go(ast.to, path);
     case "Declaration":
     case "Literal":
     case "StringKeyword":
@@ -96,16 +97,16 @@ const go = ast => {
     case "ObjectKeyword":
       return Equal.equals;
     case "Refinement":
-      return go(ast.from);
+      return go(ast.from, path);
     case "Suspend":
       {
-        const get = util_.memoizeThunk(() => go(ast.f()));
+        const get = util_.memoizeThunk(() => go(ast.f(), path));
         return (a, b) => get()(a, b);
       }
     case "TupleType":
       {
-        const elements = ast.elements.map(element => go(element.type));
-        const rest = ast.rest.map(go);
+        const elements = ast.elements.map((element, i) => go(element.type, path.concat(i)));
+        const rest = ast.rest.map(ast => go(ast, path));
         return Equivalence.make((a, b) => {
           const len = a.length;
           if (len !== b.length) {
@@ -148,8 +149,8 @@ const go = ast => {
         if (ast.propertySignatures.length === 0 && ast.indexSignatures.length === 0) {
           return Equal.equals;
         }
-        const propertySignatures = ast.propertySignatures.map(ps => go(ps.type));
-        const indexSignatures = ast.indexSignatures.map(is => go(is.type));
+        const propertySignatures = ast.propertySignatures.map(ps => go(ps.type, path.concat(ps.name)));
+        const indexSignatures = ast.indexSignatures.map(is => go(is.type, path));
         return Equivalence.make((a, b) => {
           const aStringKeys = Object.keys(a);
           const aSymbolKeys = Object.getOwnPropertySymbols(a);
@@ -223,7 +224,7 @@ const go = ast => {
           if (searchTree.otherwise.length > 0) {
             candidates = candidates.concat(searchTree.otherwise);
           }
-          const tuples = candidates.map(ast => [go(ast), ParseResult.is({
+          const tuples = candidates.map(ast => [go(ast, path), ParseResult.is({
             ast
           })]);
           for (let i = 0; i < tuples.length; i++) {
diff --git a/dist/cjs/Equivalence.js.map b/dist/cjs/Equivalence.js.map
index 085b352e1e6f22a0a885d764d87b7534c6db8092..a6ea9a87a93e71a44430f3a4a224dc7e16ba3580 100644
--- a/dist/cjs/Equivalence.js.map
+++ b/dist/cjs/Equivalence.js.map
@@ -1 +1 @@
-{"version":3,"file":"Equivalence.js","names":["Arr","_interopRequireWildcard","require","Equal","Equivalence","Option","Predicate","AST","errors_","util_","ParseResult","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","EquivalenceHookId","exports","Symbol","for","equivalence","handler","self","annotations","make","schema","go","ast","getHook","getAnnotation","hook","isSome","_tag","value","typeParameters","map","from","Error","getEquivalenceErrorMessage","to","equals","memoizeThunk","f","b","elements","element","type","rest","len","length","Math","min","isNonEmptyReadonlyArray","head","tail","j","propertySignatures","indexSignatures","ps","is","aStringKeys","keys","aSymbolKeys","getOwnPropertySymbols","name","aHas","prototype","bHas","isOptional","bSymbolKeys","bStringKeys","base","getParameterBase","parameter","isSymbol","isSymbolKeyword","aKeys","key","searchTree","getSearchTree","types","ownKeys","candidates","isRecord","buckets","literal","String","concat","otherwise","tuples"],"sources":["../../src/Equivalence.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"Equivalence.js","names":["Arr","_interopRequireWildcard","require","Equal","Equivalence","Option","Predicate","AST","errors_","util_","ParseResult","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","EquivalenceHookId","exports","Symbol","for","equivalence","handler","self","annotations","make","schema","go","ast","getHook","getAnnotation","getEquivalenceErrorMessage","message","path","getErrorMessageWithPath","hook","isSome","_tag","value","typeParameters","map","tp","from","Error","to","equals","memoizeThunk","f","b","elements","element","type","concat","rest","len","length","Math","min","isNonEmptyReadonlyArray","head","tail","j","propertySignatures","indexSignatures","ps","name","is","aStringKeys","keys","aSymbolKeys","getOwnPropertySymbols","aHas","prototype","bHas","isOptional","bSymbolKeys","bStringKeys","base","getParameterBase","parameter","isSymbol","isSymbolKeyword","aKeys","key","searchTree","getSearchTree","types","ownKeys","candidates","isRecord","buckets","literal","String","otherwise","tuples"],"sources":["../../src/Equivalence.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/cjs/JSONSchema.js b/dist/cjs/JSONSchema.js
index 1bbe62948beb802fd96f63f255e51a7d2cf2ce70..a342a71686cf561028f15aaa7224ad195331e69b 100644
--- a/dist/cjs/JSONSchema.js
+++ b/dist/cjs/JSONSchema.js
@@ -8,6 +8,7 @@ var Option = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/
 var Predicate = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Predicate"));
 var Record = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Record"));
 var AST = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./AST.js"));
+var errors_ = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/errors.js"));
 function _getRequireWildcardCache(e) {
   if ("function" != typeof WeakMap) return null;
   var r = new WeakMap(),
@@ -43,7 +44,7 @@ function _interopRequireWildcard(e, r) {
  */
 const make = schema => {
   const $defs = {};
-  const jsonSchema = go(schema.ast, $defs);
+  const jsonSchema = go(schema.ast, $defs, true, []);
   const out = {
     $schema,
     ...jsonSchema
@@ -83,7 +84,7 @@ const empty = () => ({
   }]
 });
 const $schema = "http://json-schema.org/draft-07/schema#";
-const getMeta = annotated => Record.getSomes({
+const getJsonSchemaAnnotations = annotated => Record.getSomes({
   description: AST.getDescriptionAnnotation(annotated),
   title: AST.getTitleAnnotation(annotated),
   examples: AST.getExamplesAnnotation(annotated),
@@ -96,44 +97,53 @@ const pruneUndefinedKeyword = ps => {
   }
   return type;
 };
-const getMissingAnnotationError = name => {
-  const out = new Error(`cannot build a JSON Schema for ${name} without a JSON Schema annotation`);
-  out.name = "MissingAnnotation";
-  return out;
-};
-const getUnsupportedIndexSignatureParameterErrorMessage = parameter => `Unsupported index signature parameter (${parameter})`;
+const getMissingAnnotationErrorMessage = (name, path) => errors_.getErrorMessageWithPath(`cannot build a JSON Schema for ${name} without a JSON Schema annotation`, path);
+const getUnsupportedIndexSignatureParameterErrorMessage = (parameter, path) => errors_.getErrorMessageWithPath(`unsupported index signature parameter (${parameter})`, path);
 /** @internal */
 const DEFINITION_PREFIX = exports.DEFINITION_PREFIX = "#/$defs/";
 const get$ref = id => `${DEFINITION_PREFIX}${id}`;
-const go = (ast, $defs, handleIdentifier = true) => {
+const hasTransformation = ast => {
+  switch (ast.from._tag) {
+    case "Transformation":
+      return true;
+    case "Refinement":
+      return hasTransformation(ast.from);
+    case "Suspend":
+      {
+        const from = ast.from.f();
+        if (AST.isRefinement(from)) {
+          return hasTransformation(from);
+        }
+      }
+      break;
+  }
+  return false;
+};
+const go = (ast, $defs, handleIdentifier, path) => {
   const hook = AST.getJSONSchemaAnnotation(ast);
   if (Option.isSome(hook)) {
     const handler = hook.value;
-    switch (ast._tag) {
-      case "Refinement":
-        try {
-          return {
-            ...go(ast.from, $defs),
-            ...getMeta(ast),
-            ...handler
-          };
-        } catch (e) {
-          if (e instanceof Error && e.name === "MissingAnnotation") {
-            return {
-              ...getMeta(ast),
-              ...handler
-            };
-          }
-          throw e;
-        }
+    if (AST.isRefinement(ast) && !hasTransformation(ast)) {
+      try {
+        return {
+          ...go(ast.from, $defs, true, path),
+          ...getJsonSchemaAnnotations(ast),
+          ...handler
+        };
+      } catch (e) {
+        return {
+          ...getJsonSchemaAnnotations(ast),
+          ...handler
+        };
+      }
     }
     return handler;
   }
   const surrogate = AST.getSurrogateAnnotation(ast);
   if (Option.isSome(surrogate)) {
-    return go(surrogate.value, $defs, handleIdentifier);
+    return go(surrogate.value, $defs, handleIdentifier, path);
   }
-  if (handleIdentifier) {
+  if (handleIdentifier && !AST.isTransformation(ast)) {
     const identifier = AST.getJSONIdentifier(ast);
     if (Option.isSome(identifier)) {
       const id = identifier.value;
@@ -142,93 +152,93 @@ const go = (ast, $defs, handleIdentifier = true) => {
       };
       if (!Record.has($defs, id)) {
         $defs[id] = out;
-        $defs[id] = go(ast, $defs, false);
+        $defs[id] = go(ast, $defs, false, path);
       }
       return out;
     }
   }
   switch (ast._tag) {
     case "Declaration":
-      throw getMissingAnnotationError("a declaration");
+      throw new Error(getMissingAnnotationErrorMessage("a declaration", path));
     case "Literal":
       {
         const literal = ast.literal;
         if (literal === null) {
           return {
             const: null,
-            ...getMeta(ast)
+            ...getJsonSchemaAnnotations(ast)
           };
         } else if (Predicate.isString(literal)) {
           return {
             const: literal,
-            ...getMeta(ast)
+            ...getJsonSchemaAnnotations(ast)
           };
         } else if (Predicate.isNumber(literal)) {
           return {
             const: literal,
-            ...getMeta(ast)
+            ...getJsonSchemaAnnotations(ast)
           };
         } else if (Predicate.isBoolean(literal)) {
           return {
             const: literal,
-            ...getMeta(ast)
+            ...getJsonSchemaAnnotations(ast)
           };
         }
-        throw getMissingAnnotationError("a bigint literal");
+        throw new Error(getMissingAnnotationErrorMessage("a bigint literal", path));
       }
     case "UniqueSymbol":
-      throw getMissingAnnotationError("a unique symbol");
+      throw new Error(getMissingAnnotationErrorMessage("a unique symbol", path));
     case "UndefinedKeyword":
-      throw getMissingAnnotationError("`undefined`");
+      throw new Error(getMissingAnnotationErrorMessage("`undefined`", path));
     case "VoidKeyword":
-      throw getMissingAnnotationError("`void`");
+      throw new Error(getMissingAnnotationErrorMessage("`void`", path));
     case "NeverKeyword":
-      throw getMissingAnnotationError("`never`");
+      throw new Error(getMissingAnnotationErrorMessage("`never`", path));
     case "UnknownKeyword":
       return {
         ...unknownJsonSchema,
-        ...getMeta(ast)
+        ...getJsonSchemaAnnotations(ast)
       };
     case "AnyKeyword":
       return {
         ...anyJsonSchema,
-        ...getMeta(ast)
+        ...getJsonSchemaAnnotations(ast)
       };
     case "ObjectKeyword":
       return {
         ...objectJsonSchema,
-        ...getMeta(ast)
+        ...getJsonSchemaAnnotations(ast)
       };
     case "StringKeyword":
       return {
         type: "string",
-        ...getMeta(ast)
+        ...getJsonSchemaAnnotations(ast)
       };
     case "NumberKeyword":
       return {
         type: "number",
-        ...getMeta(ast)
+        ...getJsonSchemaAnnotations(ast)
       };
     case "BooleanKeyword":
       return {
         type: "boolean",
-        ...getMeta(ast)
+        ...getJsonSchemaAnnotations(ast)
       };
     case "BigIntKeyword":
-      throw getMissingAnnotationError("`bigint`");
+      throw new Error(getMissingAnnotationErrorMessage("`bigint`", path));
     case "SymbolKeyword":
-      throw getMissingAnnotationError("`symbol`");
+      throw new Error(getMissingAnnotationErrorMessage("`symbol`", path));
     case "TupleType":
       {
-        const elements = ast.elements.map(e => go(e.type, $defs));
-        const rest = ast.rest.map(ast => go(ast, $defs));
+        const len = ast.elements.length;
+        const elements = ast.elements.map((e, i) => go(e.type, $defs, true, path.concat(i)));
+        const rest = ast.rest.map(ast => go(ast, $defs, true, path));
         const output = {
           type: "array"
         };
         // ---------------------------------------------
         // handle elements
         // ---------------------------------------------
-        const len = elements.length;
         if (len > 0) {
           output.minItems = len - ast.elements.filter(element => element.isOptional).length;
           output.items = elements;
@@ -247,7 +257,7 @@ const go = (ast, $defs, handleIdentifier = true) => {
           // handle post rest elements
           // ---------------------------------------------
           if (rest.length > 1) {
-            throw new Error("Generating a JSON Schema for post-rest elements is not currently supported. You're welcome to contribute by submitting a Pull Request.");
+            throw new Error(errors_.getErrorMessageWithPath("Generating a JSON Schema for post-rest elements is not currently supported. You're welcome to contribute by submitting a Pull Request.", path));
           }
         } else {
           if (len > 0) {
@@ -258,7 +268,7 @@ const go = (ast, $defs, handleIdentifier = true) => {
         }
         return {
           ...output,
-          ...getMeta(ast)
+          ...getJsonSchemaAnnotations(ast)
         };
       }
     case "TypeLiteral":
@@ -266,7 +276,7 @@ const go = (ast, $defs, handleIdentifier = true) => {
         if (ast.propertySignatures.length === 0 && ast.indexSignatures.length === 0) {
           return {
             ...empty(),
-            ...getMeta(ast)
+            ...getJsonSchemaAnnotations(ast)
           };
         }
         let additionalProperties = undefined;
@@ -276,13 +286,13 @@ const go = (ast, $defs, handleIdentifier = true) => {
           switch (parameter._tag) {
             case "StringKeyword":
               {
-                additionalProperties = go(is.type, $defs);
+                additionalProperties = go(is.type, $defs, true, path);
                 break;
               }
             case "TemplateLiteral":
               {
                 patternProperties = {
-                  [AST.getTemplateLiteralRegExp(parameter).source]: go(is.type, $defs)
+                  [AST.getTemplateLiteralRegExp(parameter).source]: go(is.type, $defs, true, path)
                 };
                 break;
               }
@@ -291,20 +301,20 @@ const go = (ast, $defs, handleIdentifier = true) => {
                 const hook = AST.getJSONSchemaAnnotation(parameter);
                 if (Option.isSome(hook) && "pattern" in hook.value && Predicate.isString(hook.value.pattern)) {
                   patternProperties = {
-                    [hook.value.pattern]: go(is.type, $defs)
+                    [hook.value.pattern]: go(is.type, $defs, true, path)
                   };
                   break;
                 }
-                throw new Error(getUnsupportedIndexSignatureParameterErrorMessage(parameter));
+                throw new Error(getUnsupportedIndexSignatureParameterErrorMessage(parameter, path));
               }
             case "SymbolKeyword":
-              throw new Error(getUnsupportedIndexSignatureParameterErrorMessage(parameter));
+              throw new Error(getUnsupportedIndexSignatureParameterErrorMessage(parameter, path));
           }
         }
         const propertySignatures = ast.propertySignatures.map(ps => {
           return {
-            ...go(pruneUndefinedKeyword(ps), $defs),
-            ...getMeta(ps)
+            ...go(pruneUndefinedKeyword(ps), $defs, true, path.concat(ps.name)),
+            ...getJsonSchemaAnnotations(ps)
           };
         });
         const output = {
@@ -327,7 +337,7 @@ const go = (ast, $defs, handleIdentifier = true) => {
               output.required.push(name);
             }
           } else {
-            throw new Error(`cannot encode ${String(name)} key to JSON Schema`);
+            throw new Error(errors_.getErrorMessageWithPath(`cannot encode ${String(name)} key to JSON Schema`, path));
           }
         }
         // ---------------------------------------------
@@ -341,7 +351,7 @@ const go = (ast, $defs, handleIdentifier = true) => {
         }
         return {
           ...output,
-          ...getMeta(ast)
+          ...getJsonSchemaAnnotations(ast)
         };
       }
     case "Union":
@@ -349,7 +359,7 @@ const go = (ast, $defs, handleIdentifier = true) => {
         const enums = [];
         const anyOf = [];
         for (const type of ast.types) {
-          const schema = go(type, $defs);
+          const schema = go(type, $defs, true, path);
           if ("const" in schema) {
             if (Object.keys(schema).length > 1) {
               anyOf.push(schema);
@@ -364,12 +374,12 @@ const go = (ast, $defs, handleIdentifier = true) => {
           if (enums.length === 1) {
             return {
               const: enums[0],
-              ...getMeta(ast)
+              ...getJsonSchemaAnnotations(ast)
             };
           } else {
             return {
               enum: enums,
-              ...getMeta(ast)
+              ...getJsonSchemaAnnotations(ast)
             };
           }
         } else {
@@ -384,7 +394,7 @@ const go = (ast, $defs, handleIdentifier = true) => {
           }
           return {
             anyOf,
-            ...getMeta(ast)
+            ...getJsonSchemaAnnotations(ast)
           };
         }
       }
@@ -396,12 +406,12 @@ const go = (ast, $defs, handleIdentifier = true) => {
             title: e[0],
             const: e[1]
           })),
-          ...getMeta(ast)
+          ...getJsonSchemaAnnotations(ast)
         };
       }
     case "Refinement":
       {
-        throw new Error("cannot build a JSON Schema for a refinement without a JSON Schema annotation");
+        throw new Error(errors_.getErrorMessageWithPath("cannot build a JSON Schema for a refinement without a JSON Schema annotation", path));
       }
     case "TemplateLiteral":
       {
@@ -410,19 +420,19 @@ const go = (ast, $defs, handleIdentifier = true) => {
           type: "string",
           description: "a template literal",
           pattern: regex.source,
-          ...getMeta(ast)
+          ...getJsonSchemaAnnotations(ast)
         };
       }
     case "Suspend":
       {
         const identifier = Option.orElse(AST.getJSONIdentifier(ast), () => AST.getJSONIdentifier(ast.f()));
         if (Option.isNone(identifier)) {
-          throw new Error("Generating a JSON Schema for suspended schemas requires an identifier annotation");
+          throw new Error(errors_.getErrorMessageWithPath("Generating a JSON Schema for suspended schemas requires an identifier annotation", path));
         }
-        return go(ast.f(), $defs);
+        return go(ast.f(), $defs, true, path);
       }
     case "Transformation":
-      return go(ast.to, $defs);
+      return go(ast.from, $defs, true, path);
   }
 };
 //# sourceMappingURL=JSONSchema.js.map
\ No newline at end of file
diff --git a/dist/cjs/JSONSchema.js.map b/dist/cjs/JSONSchema.js.map
index 9a19a7c02cc66b096ec092d1eff1a7f463843d06..7d213f2d7e72f89813f05d197b1cbdb62108cf59 100644
--- a/dist/cjs/JSONSchema.js.map
+++ b/dist/cjs/JSONSchema.js.map
@@ -1 +1 @@
-{"version":3,"file":"JSONSchema.js","names":["Option","_interopRequireWildcard","require","Predicate","Record","AST","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","make","schema","$defs","jsonSchema","go","ast","out","$schema","id","get$ref","isEmptyRecord","exports","anyJsonSchema","$id","unknownJsonSchema","objectJsonSchema","empty","getMeta","annotated","getSomes","description","getDescriptionAnnotation","title","getTitleAnnotation","examples","getExamplesAnnotation","getDefaultAnnotation","pruneUndefinedKeyword","ps","type","isOptional","isUnion","isNone","getJSONSchemaAnnotation","Union","types","filter","isUndefinedKeyword","annotations","getMissingAnnotationError","name","Error","getUnsupportedIndexSignatureParameterErrorMessage","parameter","DEFINITION_PREFIX","handleIdentifier","hook","isSome","handler","value","_tag","from","surrogate","getSurrogateAnnotation","identifier","getJSONIdentifier","$ref","literal","const","isString","isNumber","isBoolean","elements","map","rest","output","len","length","minItems","element","items","head","additionalItems","maxItems","propertySignatures","indexSignatures","additionalProperties","undefined","patternProperties","is","getTemplateLiteralRegExp","source","pattern","required","properties","push","String","enums","anyOf","keys","enum","$comment","oneOf","regex","orElse","f","to"],"sources":["../../src/JSONSchema.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"JSONSchema.js","names":["Option","_interopRequireWildcard","require","Predicate","Record","AST","errors_","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","make","schema","$defs","jsonSchema","go","ast","out","$schema","id","get$ref","isEmptyRecord","exports","anyJsonSchema","$id","unknownJsonSchema","objectJsonSchema","empty","getJsonSchemaAnnotations","annotated","getSomes","description","getDescriptionAnnotation","title","getTitleAnnotation","examples","getExamplesAnnotation","getDefaultAnnotation","pruneUndefinedKeyword","ps","type","isOptional","isUnion","isNone","getJSONSchemaAnnotation","Union","types","filter","isUndefinedKeyword","annotations","getMissingAnnotationErrorMessage","name","path","getErrorMessageWithPath","getUnsupportedIndexSignatureParameterErrorMessage","parameter","DEFINITION_PREFIX","hasTransformation","from","_tag","f","isRefinement","handleIdentifier","hook","isSome","handler","value","surrogate","getSurrogateAnnotation","isTransformation","identifier","getJSONIdentifier","$ref","Error","literal","const","isString","isNumber","isBoolean","len","elements","length","map","concat","rest","output","minItems","element","items","head","additionalItems","maxItems","propertySignatures","indexSignatures","additionalProperties","undefined","patternProperties","is","getTemplateLiteralRegExp","source","pattern","required","properties","push","String","enums","anyOf","keys","enum","$comment","oneOf","regex","orElse"],"sources":["../../src/JSONSchema.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/cjs/ParseResult.js b/dist/cjs/ParseResult.js
index c84517434beb4b5b8dbcb8d14ad0ce2dcec6b633..0711181a325bd397250ec62ae9d75a6e4db1acce 100644
--- a/dist/cjs/ParseResult.js
+++ b/dist/cjs/ParseResult.js
@@ -475,7 +475,9 @@ const getEither = (ast, isDecoding, options) => {
 };
 const getSync = (ast, isDecoding, options) => {
   const parser = getEither(ast, isDecoding, options);
-  return (input, overrideOptions) => Either.getOrThrowWith(parser(input, overrideOptions), e => new Error(TreeFormatter.formatIssueSync(e)));
+  return (input, overrideOptions) => Either.getOrThrowWith(parser(input, overrideOptions), issue => new Error(TreeFormatter.formatIssueSync(issue), {
+    cause: issue
+  }));
 };
 const getOption = (ast, isDecoding, options) => {
   const parser = getEither(ast, isDecoding, options);
diff --git a/dist/cjs/ParseResult.js.map b/dist/cjs/ParseResult.js.map
index be631c2549473b9dc60b434ed5a46b834bcf9a13..e66af7a010398ae04b713c349602edca73b8ecfc 100644
--- a/dist/cjs/ParseResult.js.map
+++ b/dist/cjs/ParseResult.js.map
@@ -1 +1 @@
-{"version":3,"file":"ParseResult.js","names":["Arr","_interopRequireWildcard","require","_Data","Effect","Either","_Function","_GlobalValue","Inspectable","Option","Predicate","AST","util_","TreeFormatter","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","Declaration","ast","actual","error","_tag","constructor","exports","Refinement","kind","TupleType","errors","output","Index","index","TypeLiteral","Key","key","Unexpected","Transformation","Type","message","fromNullable","Forbidden","Missing","missing","Member","Union","ParseError","TaggedError","toString","formatIssueSync","toJSON","_id","NodeInspectSymbol","parseError","issue","succeed","right","fail","left","_try","try","fromOption","flatMap","dual","self","f","s","map","mapError","eitherOrUndefined","mapBoth","options","onFailure","onSuccess","orElse","catchAll","mergeParseOptions","b","undefined","out","onExcessProperty","getEither","isDecoding","parser","goMemo","overrideOptions","getSync","input","getOrThrowWith","Error","getOption","getRight","getEffect","isEffectAllowed","decodeUnknownSync","schema","decodeUnknownOption","decodeUnknownEither","decodeUnknownPromise","decodeUnknown","runPromise","encodeUnknownSync","encodeUnknownOption","encodeUnknownEither","encodeUnknownPromise","encodeUnknown","decodeSync","decodeOption","decodeEither","decodePromise","decode","validateSync","typeAST","validateOption","validateEither","validatePromise","validate","is","isRight","isExact","asserts","result","isLeft","encodeSync","encodeOption","encodeEither","encodePromise","encode","decodeMemoMap","globalValue","Symbol","for","encodeMemoMap","memoMap","memo","go","getConcurrency","getOrUndefined","getConcurrencyAnnotation","getBatching","getBatchingAnnotation","from","handleForbidden","match","filter","defaultParseOption","onNone","onSome","to","dropRightRefinement","transform","getFinalTransformation","transformation","i1","i2","parse","typeParameters","fromRefinement","literal","symbol","isUndefined","isNever","isString","isNumber","isBoolean","isBigInt","isSymbol","isObject","enums","some","_","value","regex","getTemplateLiteralRegExp","test","elements","type","rest","requiredLen","isOptional","length","expectedAST","make","Literal","concurrency","batching","isArray","allErrors","es","stepKey","len","push","queue","te","eu","sortByIndex","nk","either","void","isNonEmptyReadonlyArray","head","tail","j","computeResult","isNonEmptyArray","cqueue","suspend","state","copy","forEach","discard","propertySignatures","indexSignatures","isNotNullable","expectedKeys","ps","name","parameter","concat","ownKeys","UniqueSymbol","expected","isRecord","onExcessPropertyError","onExcessPropertyPreserve","hasKey","prototype","indexSignature","keys","getKeysForIndexSignature","keu","vpr","veu","tv","assign","searchTree","getSearchTree","types","Map","candidates","buckets","String","literals","PropertySignature","otherwise","candidate","pr","finalResult","neverKeyword","memoizeThunk","annotations","refinement","getLiterals","annotation","getSurrogateAnnotation","isSome","propertySignature","encodedAST","isLiteral","members","member","tags","hash","isRefinement","effect","runSync","sort","pst","propertySignatureTransformations","o","none"],"sources":["../../src/ParseResult.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"ParseResult.js","names":["Arr","_interopRequireWildcard","require","_Data","Effect","Either","_Function","_GlobalValue","Inspectable","Option","Predicate","AST","util_","TreeFormatter","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","Declaration","ast","actual","error","_tag","constructor","exports","Refinement","kind","TupleType","errors","output","Index","index","TypeLiteral","Key","key","Unexpected","Transformation","Type","message","fromNullable","Forbidden","Missing","missing","Member","Union","ParseError","TaggedError","toString","formatIssueSync","toJSON","_id","NodeInspectSymbol","parseError","issue","succeed","right","fail","left","_try","try","fromOption","flatMap","dual","self","f","s","map","mapError","eitherOrUndefined","mapBoth","options","onFailure","onSuccess","orElse","catchAll","mergeParseOptions","b","undefined","out","onExcessProperty","getEither","isDecoding","parser","goMemo","overrideOptions","getSync","input","getOrThrowWith","Error","cause","getOption","getRight","getEffect","isEffectAllowed","decodeUnknownSync","schema","decodeUnknownOption","decodeUnknownEither","decodeUnknownPromise","decodeUnknown","runPromise","encodeUnknownSync","encodeUnknownOption","encodeUnknownEither","encodeUnknownPromise","encodeUnknown","decodeSync","decodeOption","decodeEither","decodePromise","decode","validateSync","typeAST","validateOption","validateEither","validatePromise","validate","is","isRight","isExact","asserts","result","isLeft","encodeSync","encodeOption","encodeEither","encodePromise","encode","decodeMemoMap","globalValue","Symbol","for","encodeMemoMap","memoMap","memo","go","getConcurrency","getOrUndefined","getConcurrencyAnnotation","getBatching","getBatchingAnnotation","from","handleForbidden","match","filter","defaultParseOption","onNone","onSome","to","dropRightRefinement","transform","getFinalTransformation","transformation","i1","i2","parse","typeParameters","fromRefinement","literal","symbol","isUndefined","isNever","isString","isNumber","isBoolean","isBigInt","isSymbol","isObject","enums","some","_","value","regex","getTemplateLiteralRegExp","test","elements","type","rest","requiredLen","isOptional","length","expectedAST","make","Literal","concurrency","batching","isArray","allErrors","es","stepKey","len","push","queue","te","eu","sortByIndex","nk","either","void","isNonEmptyReadonlyArray","head","tail","j","computeResult","isNonEmptyArray","cqueue","suspend","state","copy","forEach","discard","propertySignatures","indexSignatures","isNotNullable","expectedKeys","ps","name","parameter","concat","ownKeys","UniqueSymbol","expected","isRecord","onExcessPropertyError","onExcessPropertyPreserve","hasKey","prototype","indexSignature","keys","getKeysForIndexSignature","keu","vpr","veu","tv","assign","searchTree","getSearchTree","types","Map","candidates","buckets","String","literals","PropertySignature","otherwise","candidate","pr","finalResult","neverKeyword","memoizeThunk","annotations","refinement","getLiterals","annotation","getSurrogateAnnotation","isSome","propertySignature","encodedAST","isLiteral","members","member","tags","hash","isRefinement","effect","runSync","sort","pst","propertySignatureTransformations","o","none"],"sources":["../../src/ParseResult.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/cjs/Pretty.js b/dist/cjs/Pretty.js
index da025a96573d77b1bb574a9541d04816d6a35ebb..478bf5f9541cd2e5f04938946fac9e207038f231 100644
--- a/dist/cjs/Pretty.js
+++ b/dist/cjs/Pretty.js
@@ -56,7 +56,7 @@ const pretty = handler => self => self.annotations({
  * @since 1.0.0
  */
 exports.pretty = pretty;
-const make = schema => compile(schema.ast);
+const make = schema => compile(schema.ast, []);
 exports.make = make;
 const getHook = /*#__PURE__*/AST.getAnnotation(PrettyHookId);
 const getMatcher = defaultPretty => ast => Option.match(getHook(ast), {
@@ -66,16 +66,17 @@ const getMatcher = defaultPretty => ast => Option.match(getHook(ast), {
 const toString = /*#__PURE__*/getMatcher(a => String(a));
 const stringify = /*#__PURE__*/getMatcher(a => JSON.stringify(a));
 const formatUnknown = /*#__PURE__*/getMatcher(util_.formatUnknown);
+const getPrettyErrorMessage = (message, path) => errors_.getErrorMessageWithPath(`cannot build a Pretty for ${message}`, path);
 /**
  * @since 1.0.0
  */
 const match = exports.match = {
-  "Declaration": (ast, go) => {
+  "Declaration": (ast, go, path) => {
     const hook = getHook(ast);
     if (Option.isSome(hook)) {
-      return hook.value(...ast.typeParameters.map(go));
+      return hook.value(...ast.typeParameters.map(tp => go(tp, path)));
     }
-    throw new Error(errors_.getPrettyErrorMessage(`a declaration without annotations (${ast})`));
+    throw new Error(getPrettyErrorMessage(`a declaration without annotations (${ast})`, path));
   },
   "VoidKeyword": /*#__PURE__*/getMatcher(() => "void(0)"),
   "NeverKeyword": /*#__PURE__*/getMatcher(() => {
@@ -94,13 +95,13 @@ const match = exports.match = {
   "BooleanKeyword": toString,
   "BigIntKeyword": /*#__PURE__*/getMatcher(a => `${String(a)}n`),
   "Enums": stringify,
-  "TupleType": (ast, go) => {
+  "TupleType": (ast, go, path) => {
     const hook = getHook(ast);
     if (Option.isSome(hook)) {
       return hook.value();
     }
-    const elements = ast.elements.map(e => go(e.type));
-    const rest = ast.rest.map(go);
+    const elements = ast.elements.map((e, i) => go(e.type, path.concat(i)));
+    const rest = ast.rest.map(ast => go(ast, path));
     return input => {
       const output = [];
       let i = 0;
@@ -135,13 +136,13 @@ const match = exports.match = {
       return "[" + output.join(", ") + "]";
     };
   },
-  "TypeLiteral": (ast, go) => {
+  "TypeLiteral": (ast, go, path) => {
     const hook = getHook(ast);
     if (Option.isSome(hook)) {
       return hook.value();
     }
-    const propertySignaturesTypes = ast.propertySignatures.map(f => go(f.type));
-    const indexSignatureTypes = ast.indexSignatures.map(is => go(is.type));
+    const propertySignaturesTypes = ast.propertySignatures.map(ps => go(ps.type, path.concat(ps.name)));
+    const indexSignatureTypes = ast.indexSignatures.map(is => go(is.type, path));
     const expectedKeys = {};
     for (let i = 0; i < propertySignaturesTypes.length; i++) {
       expectedKeys[ast.propertySignatures[i].name] = null;
@@ -177,37 +178,37 @@ const match = exports.match = {
       return Arr.isNonEmptyReadonlyArray(output) ? "{ " + output.join(", ") + " }" : "{}";
     };
   },
-  "Union": (ast, go) => {
+  "Union": (ast, go, path) => {
     const hook = getHook(ast);
     if (Option.isSome(hook)) {
       return hook.value();
     }
     const types = ast.types.map(ast => [ParseResult.is({
       ast
-    }), go(ast)]);
+    }), go(ast, path)]);
     return a => {
       const index = types.findIndex(([is]) => is(a));
       return types[index][1](a);
     };
   },
-  "Suspend": (ast, go) => {
+  "Suspend": (ast, go, path) => {
     return Option.match(getHook(ast), {
       onNone: () => {
-        const get = util_.memoizeThunk(() => go(ast.f()));
+        const get = util_.memoizeThunk(() => go(ast.f(), path));
         return a => get()(a);
       },
       onSome: handler => handler()
     });
   },
-  "Refinement": (ast, go) => {
+  "Refinement": (ast, go, path) => {
     return Option.match(getHook(ast), {
-      onNone: () => go(ast.from),
+      onNone: () => go(ast.from, path),
       onSome: handler => handler()
     });
   },
-  "Transformation": (ast, go) => {
+  "Transformation": (ast, go, path) => {
     return Option.match(getHook(ast), {
-      onNone: () => go(ast.to),
+      onNone: () => go(ast.to, path),
       onSome: handler => handler()
     });
   }
diff --git a/dist/cjs/Pretty.js.map b/dist/cjs/Pretty.js.map
index 5887d934cb2c6043547452da17ad3703b5ebe9b6..623ad0cdad25f607bbe22a90fc4facfaf9481d12 100644
--- a/dist/cjs/Pretty.js.map
+++ b/dist/cjs/Pretty.js.map
@@ -1 +1 @@
-{"version":3,"file":"Pretty.js","names":["Arr","_interopRequireWildcard","require","Option","AST","errors_","util_","ParseResult","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","PrettyHookId","exports","Symbol","for","pretty","handler","self","annotations","make","schema","compile","ast","getHook","getAnnotation","getMatcher","defaultPretty","match","onNone","onSome","toString","String","stringify","JSON","formatUnknown","Declaration","go","hook","isSome","value","typeParameters","map","Error","getPrettyErrorMessage","literal","TupleType","elements","type","rest","input","output","length","isOptional","push","isNonEmptyReadonlyArray","head","tail","j","join","TypeLiteral","propertySignaturesTypes","propertySignatures","f","indexSignatureTypes","indexSignatures","is","expectedKeys","name","ps","prototype","formatPropertyKey","keys","getKeysForIndexSignature","parameter","key","Union","types","index","findIndex","Suspend","memoizeThunk","Refinement","from","Transformation","to","getCompiler"],"sources":["../../src/Pretty.ts"],"sourcesContent":[null],"mappings":";;;;;;AAGA,IAAAA,GAAA,gBAAAC,uBAAA,eAAAC,OAAA;AACA,IAAAC,MAAA,gBAAAF,uBAAA,eAAAC,OAAA;AACA,IAAAE,GAAA,gBAAAH,uBAAA,eAAAC,OAAA;AACA,IAAAG,OAAA,gBAAAJ,uBAAA,eAAAC,OAAA;AACA,IAAAI,KAAA,gBAAAL,uBAAA,eAAAC,OAAA;AACA,IAAAK,WAAA,gBAAAN,uBAAA,eAAAC,OAAA;AAA+C,SAAAM,yBAAAC,CAAA;EAAA,yBAAAC,OAAA;EAAA,IAAAC,CAAA,OAAAD,OAAA;IAAAE,CAAA,OAAAF,OAAA;EAAA,QAAAF,wBAAA,YAAAA,CAAAC,CAAA;IAAA,OAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA;EAAA,GAAAF,CAAA;AAAA;AAAA,SAAAR,wBAAAQ,CAAA,EAAAE,CAAA;EAAA,KAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA;EAAA,aAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA;IAAAK,OAAA,EAAAL;EAAA;EAAA,IAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA;EAAA,IAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA;EAAA,IAAAQ,CAAA;MAAAC,SAAA;IAAA;IAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA;EAAA,SAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,CAAA;IAAA,IAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA;IAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA;EAAA;EAAA,OAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAAA;AAR/C;;;;AAmBA;;;;AAIO,MAAMW,YAAY,GAAAC,OAAA,CAAAD,YAAA,gBAAkBE,MAAM,CAACC,GAAG,CAAC,6BAA6B,CAAC;AAQpF;;;;AAIO,MAAMC,MAAM,GACbC,OAA2D,IACxDC,IAA4B,IAA6BA,IAAI,CAACC,WAAW,CAAC;EAAE,CAACP,YAAY,GAAGK;AAAO,CAAE,CAAC;AAE/G;;;;AAAAJ,OAAA,CAAAG,MAAA,GAAAA,MAAA;AAIO,MAAMI,IAAI,GAAaC,MAA8B,IAAuBC,OAAO,CAACD,MAAM,CAACE,GAAG,CAAC;AAAAV,OAAA,CAAAO,IAAA,GAAAA,IAAA;AAEtG,MAAMI,OAAO,gBAAGpC,GAAG,CAACqC,aAAa,CAC/Bb,YAAY,CACb;AAED,MAAMc,UAAU,GAAIC,aAA0B,IAAMJ,GAAY,IAC9DpC,MAAM,CAACyC,KAAK,CAACJ,OAAO,CAACD,GAAG,CAAC,EAAE;EACzBM,MAAM,EAAEA,CAAA,KAAMF,aAAa;EAC3BG,MAAM,EAAGb,OAAO,IAAKA,OAAO;CAC7B,CAAC;AAEJ,MAAMc,QAAQ,gBAAGL,UAAU,CAAEvB,CAAC,IAAK6B,MAAM,CAAC7B,CAAC,CAAC,CAAC;AAE7C,MAAM8B,SAAS,gBAAGP,UAAU,CAAEvB,CAAC,IAAK+B,IAAI,CAACD,SAAS,CAAC9B,CAAC,CAAC,CAAC;AAEtD,MAAMgC,aAAa,gBAAGT,UAAU,CAACpC,KAAK,CAAC6C,aAAa,CAAC;AAErD;;;AAGO,MAAMP,KAAK,GAAAf,OAAA,CAAAe,KAAA,GAA2B;EAC3C,aAAa,EAAEQ,CAACb,GAAG,EAAEc,EAAE,KAAI;IACzB,MAAMC,IAAI,GAAGd,OAAO,CAACD,GAAG,CAAC;IACzB,IAAIpC,MAAM,CAACoD,MAAM,CAACD,IAAI,CAAC,EAAE;MACvB,OAAOA,IAAI,CAACE,KAAK,CAAC,GAAGjB,GAAG,CAACkB,cAAc,CAACC,GAAG,CAACL,EAAE,CAAC,CAAC;IAClD;IACA,MAAM,IAAIM,KAAK,CAACtD,OAAO,CAACuD,qBAAqB,CAAC,sCAAsCrB,GAAG,GAAG,CAAC,CAAC;EAC9F,CAAC;EACD,aAAa,eAAEG,UAAU,CAAC,MAAM,SAAS,CAAC;EAC1C,cAAc,eAAEA,UAAU,CAAC,MAAK;IAC9B,MAAM,IAAIiB,KAAK,CAAC,qCAAqC,CAAC;EACxD,CAAC,CAAC;EACF,SAAS,eAAEjB,UAAU,CAAEmB,OAAyB,IAC9C,OAAOA,OAAO,KAAK,QAAQ,GACzB,GAAGb,MAAM,CAACa,OAAO,CAAC,GAAG,GACrBX,IAAI,CAACD,SAAS,CAACY,OAAO,CAAC,CAC1B;EACD,eAAe,EAAEd,QAAQ;EACzB,cAAc,EAAEA,QAAQ;EACxB,iBAAiB,EAAEE,SAAS;EAC5B,kBAAkB,EAAEF,QAAQ;EAC5B,gBAAgB,EAAEI,aAAa;EAC/B,YAAY,EAAEA,aAAa;EAC3B,eAAe,EAAEA,aAAa;EAC9B,eAAe,EAAEF,SAAS;EAC1B,eAAe,EAAEF,QAAQ;EACzB,gBAAgB,EAAEA,QAAQ;EAC1B,eAAe,eAAEL,UAAU,CAAEvB,CAAC,IAAK,GAAG6B,MAAM,CAAC7B,CAAC,CAAC,GAAG,CAAC;EACnD,OAAO,EAAE8B,SAAS;EAClB,WAAW,EAAEa,CAACvB,GAAG,EAAEc,EAAE,KAAI;IACvB,MAAMC,IAAI,GAAGd,OAAO,CAACD,GAAG,CAAC;IACzB,IAAIpC,MAAM,CAACoD,MAAM,CAACD,IAAI,CAAC,EAAE;MACvB,OAAOA,IAAI,CAACE,KAAK,EAAE;IACrB;IACA,MAAMO,QAAQ,GAAGxB,GAAG,CAACwB,QAAQ,CAACL,GAAG,CAAEjD,CAAC,IAAK4C,EAAE,CAAC5C,CAAC,CAACuD,IAAI,CAAC,CAAC;IACpD,MAAMC,IAAI,GAAG1B,GAAG,CAAC0B,IAAI,CAACP,GAAG,CAACL,EAAE,CAAC;IAC7B,OAAQa,KAA6B,IAAI;MACvC,MAAMC,MAAM,GAAkB,EAAE;MAChC,IAAIzC,CAAC,GAAG,CAAC;MACT;MACA;MACA;MACA,OAAOA,CAAC,GAAGqC,QAAQ,CAACK,MAAM,EAAE1C,CAAC,EAAE,EAAE;QAC/B,IAAIwC,KAAK,CAACE,MAAM,GAAG1C,CAAC,GAAG,CAAC,EAAE;UACxB,IAAIa,GAAG,CAACwB,QAAQ,CAACrC,CAAC,CAAC,CAAC2C,UAAU,EAAE;YAC9B;UACF;QACF,CAAC,MAAM;UACLF,MAAM,CAACG,IAAI,CAACP,QAAQ,CAACrC,CAAC,CAAC,CAACwC,KAAK,CAACxC,CAAC,CAAC,CAAC,CAAC;QACpC;MACF;MACA;MACA;MACA;MACA,IAAI1B,GAAG,CAACuE,uBAAuB,CAACN,IAAI,CAAC,EAAE;QACrC,MAAM,CAACO,IAAI,EAAE,GAAGC,IAAI,CAAC,GAAGR,IAAI;QAC5B,OAAOvC,CAAC,GAAGwC,KAAK,CAACE,MAAM,GAAGK,IAAI,CAACL,MAAM,EAAE1C,CAAC,EAAE,EAAE;UAC1CyC,MAAM,CAACG,IAAI,CAACE,IAAI,CAACN,KAAK,CAACxC,CAAC,CAAC,CAAC,CAAC;QAC7B;QACA;QACA;QACA;QACA,KAAK,IAAIgD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACL,MAAM,EAAEM,CAAC,EAAE,EAAE;UACpChD,CAAC,IAAIgD,CAAC;UACNP,MAAM,CAACG,IAAI,CAACG,IAAI,CAACC,CAAC,CAAC,CAACR,KAAK,CAACxC,CAAC,CAAC,CAAC,CAAC;QAChC;MACF;MAEA,OAAO,GAAG,GAAGyC,MAAM,CAACQ,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG;IACtC,CAAC;EACH,CAAC;EACD,aAAa,EAAEC,CAACrC,GAAG,EAAEc,EAAE,KAAI;IACzB,MAAMC,IAAI,GAAGd,OAAO,CAACD,GAAG,CAAC;IACzB,IAAIpC,MAAM,CAACoD,MAAM,CAACD,IAAI,CAAC,EAAE;MACvB,OAAOA,IAAI,CAACE,KAAK,EAAE;IACrB;IACA,MAAMqB,uBAAuB,GAAGtC,GAAG,CAACuC,kBAAkB,CAACpB,GAAG,CAAEqB,CAAC,IAAK1B,EAAE,CAAC0B,CAAC,CAACf,IAAI,CAAC,CAAC;IAC7E,MAAMgB,mBAAmB,GAAGzC,GAAG,CAAC0C,eAAe,CAACvB,GAAG,CAAEwB,EAAE,IAAK7B,EAAE,CAAC6B,EAAE,CAAClB,IAAI,CAAC,CAAC;IACxE,MAAMmB,YAAY,GAAQ,EAAE;IAC5B,KAAK,IAAIzD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmD,uBAAuB,CAACT,MAAM,EAAE1C,CAAC,EAAE,EAAE;MACvDyD,YAAY,CAAC5C,GAAG,CAACuC,kBAAkB,CAACpD,CAAC,CAAC,CAAC0D,IAAI,CAAC,GAAG,IAAI;IACrD;IACA,OAAQlB,KAA6C,IAAI;MACvD,MAAMC,MAAM,GAAkB,EAAE;MAChC;MACA;MACA;MACA,KAAK,IAAIzC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmD,uBAAuB,CAACT,MAAM,EAAE1C,CAAC,EAAE,EAAE;QACvD,MAAM2D,EAAE,GAAG9C,GAAG,CAACuC,kBAAkB,CAACpD,CAAC,CAAC;QACpC,MAAM0D,IAAI,GAAGC,EAAE,CAACD,IAAI;QACpB,IAAIC,EAAE,CAAChB,UAAU,IAAI,CAACjD,MAAM,CAACkE,SAAS,CAAC9D,cAAc,CAACC,IAAI,CAACyC,KAAK,EAAEkB,IAAI,CAAC,EAAE;UACvE;QACF;QACAjB,MAAM,CAACG,IAAI,CACT,GAAGhE,KAAK,CAACiF,iBAAiB,CAACH,IAAI,CAAC,KAAKP,uBAAuB,CAACnD,CAAC,CAAC,CAACwC,KAAK,CAACkB,IAAI,CAAC,CAAC,EAAE,CAC/E;MACH;MACA;MACA;MACA;MACA,IAAIJ,mBAAmB,CAACZ,MAAM,GAAG,CAAC,EAAE;QAClC,KAAK,IAAI1C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsD,mBAAmB,CAACZ,MAAM,EAAE1C,CAAC,EAAE,EAAE;UACnD,MAAMsC,IAAI,GAAGgB,mBAAmB,CAACtD,CAAC,CAAC;UACnC,MAAM8D,IAAI,GAAGlF,KAAK,CAACmF,wBAAwB,CAACvB,KAAK,EAAE3B,GAAG,CAAC0C,eAAe,CAACvD,CAAC,CAAC,CAACgE,SAAS,CAAC;UACpF,KAAK,MAAMC,GAAG,IAAIH,IAAI,EAAE;YACtB,IAAIpE,MAAM,CAACkE,SAAS,CAAC9D,cAAc,CAACC,IAAI,CAAC0D,YAAY,EAAEQ,GAAG,CAAC,EAAE;cAC3D;YACF;YACAxB,MAAM,CAACG,IAAI,CAAC,GAAGhE,KAAK,CAACiF,iBAAiB,CAACI,GAAG,CAAC,KAAK3B,IAAI,CAACE,KAAK,CAACyB,GAAG,CAAC,CAAC,EAAE,CAAC;UACrE;QACF;MACF;MAEA,OAAO3F,GAAG,CAACuE,uBAAuB,CAACJ,MAAM,CAAC,GAAG,IAAI,GAAGA,MAAM,CAACQ,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI;IACrF,CAAC;EACH,CAAC;EACD,OAAO,EAAEiB,CAACrD,GAAG,EAAEc,EAAE,KAAI;IACnB,MAAMC,IAAI,GAAGd,OAAO,CAACD,GAAG,CAAC;IACzB,IAAIpC,MAAM,CAACoD,MAAM,CAACD,IAAI,CAAC,EAAE;MACvB,OAAOA,IAAI,CAACE,KAAK,EAAE;IACrB;IACA,MAAMqC,KAAK,GAAGtD,GAAG,CAACsD,KAAK,CAACnC,GAAG,CAAEnB,GAAG,IAAK,CAAChC,WAAW,CAAC2E,EAAE,CAAC;MAAE3C;IAAG,CAAS,CAAC,EAAEc,EAAE,CAACd,GAAG,CAAC,CAAU,CAAC;IACxF,OAAQpB,CAAC,IAAI;MACX,MAAM2E,KAAK,GAAGD,KAAK,CAACE,SAAS,CAAC,CAAC,CAACb,EAAE,CAAC,KAAKA,EAAE,CAAC/D,CAAC,CAAC,CAAC;MAC9C,OAAO0E,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC3E,CAAC,CAAC;IAC3B,CAAC;EACH,CAAC;EACD,SAAS,EAAE6E,CAACzD,GAAG,EAAEc,EAAE,KAAI;IACrB,OAAOlD,MAAM,CAACyC,KAAK,CAACJ,OAAO,CAACD,GAAG,CAAC,EAAE;MAChCM,MAAM,EAAEA,CAAA,KAAK;QACX,MAAM7B,GAAG,GAAGV,KAAK,CAAC2F,YAAY,CAAC,MAAM5C,EAAE,CAACd,GAAG,CAACwC,CAAC,EAAE,CAAC,CAAC;QACjD,OAAQ5D,CAAC,IAAKH,GAAG,EAAE,CAACG,CAAC,CAAC;MACxB,CAAC;MACD2B,MAAM,EAAGb,OAAO,IAAKA,OAAO;KAC7B,CAAC;EACJ,CAAC;EACD,YAAY,EAAEiE,CAAC3D,GAAG,EAAEc,EAAE,KAAI;IACxB,OAAOlD,MAAM,CAACyC,KAAK,CAACJ,OAAO,CAACD,GAAG,CAAC,EAAE;MAChCM,MAAM,EAAEA,CAAA,KAAMQ,EAAE,CAACd,GAAG,CAAC4D,IAAI,CAAC;MAC1BrD,MAAM,EAAGb,OAAO,IAAKA,OAAO;KAC7B,CAAC;EACJ,CAAC;EACD,gBAAgB,EAAEmE,CAAC7D,GAAG,EAAEc,EAAE,KAAI;IAC5B,OAAOlD,MAAM,CAACyC,KAAK,CAACJ,OAAO,CAACD,GAAG,CAAC,EAAE;MAChCM,MAAM,EAAEA,CAAA,KAAMQ,EAAE,CAACd,GAAG,CAAC8D,EAAE,CAAC;MACxBvD,MAAM,EAAGb,OAAO,IAAKA,OAAO;KAC7B,CAAC;EACJ;CACD;AAED,MAAMK,OAAO,gBAAGlC,GAAG,CAACkG,WAAW,CAAC1D,KAAK,CAAC","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"Pretty.js","names":["Arr","_interopRequireWildcard","require","Option","AST","errors_","util_","ParseResult","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","PrettyHookId","exports","Symbol","for","pretty","handler","self","annotations","make","schema","compile","ast","getHook","getAnnotation","getMatcher","defaultPretty","match","onNone","onSome","toString","String","stringify","JSON","formatUnknown","getPrettyErrorMessage","message","path","getErrorMessageWithPath","Declaration","go","hook","isSome","value","typeParameters","map","tp","Error","literal","TupleType","elements","type","concat","rest","input","output","length","isOptional","push","isNonEmptyReadonlyArray","head","tail","j","join","TypeLiteral","propertySignaturesTypes","propertySignatures","ps","name","indexSignatureTypes","indexSignatures","is","expectedKeys","prototype","formatPropertyKey","keys","getKeysForIndexSignature","parameter","key","Union","types","index","findIndex","Suspend","memoizeThunk","f","Refinement","from","Transformation","to","getCompiler"],"sources":["../../src/Pretty.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/cjs/Schema.js b/dist/cjs/Schema.js
index 0ec5a3682ef6b2e702e259d9b3375ef55d1b9f1f..706e75d7d8ae983b93e2ecbceefa20b83266344b 100644
--- a/dist/cjs/Schema.js
+++ b/dist/cjs/Schema.js
@@ -3,16 +3,16 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.ListFromSelf = exports.List = exports.LessThanTypeId = exports.LessThanOrEqualToTypeId = exports.LessThanOrEqualToDurationTypeId = exports.LessThanOrEqualToBigIntTypeId = exports.LessThanOrEqualToBigDecimalTypeId = exports.LessThanDurationTypeId = exports.LessThanBigIntTypeId = exports.LessThanBigDecimalTypeId = exports.LengthTypeId = exports.JsonNumberTypeId = exports.JsonNumber = exports.ItemsCountTypeId = exports.IntTypeId = exports.Int = exports.InstanceOfTypeId = exports.IncludesTypeId = exports.Hex = exports.HashSetFromSelf = exports.HashSet = exports.HashMapFromSelf = exports.HashMap = exports.GreaterThanTypeId = exports.GreaterThanOrEqualToTypeId = exports.GreaterThanOrEqualToDurationTypeId = exports.GreaterThanOrEqualToBigIntTypeId = exports.GreaterThanOrEqualToBigDecimalTypeId = exports.GreaterThanDurationTypeId = exports.GreaterThanBigIntTypeId = exports.GreaterThanBigDecimalTypeId = exports.FromPropertySignature = exports.FiniteTypeId = exports.Finite = exports.FiberIdFromSelf = exports.FiberId = exports.ExitFromSelf = exports.Exit = exports.Enums = exports.EndsWithTypeId = exports.EitherFromUnion = exports.EitherFromSelf = exports.Either = exports.DurationFromSelf = exports.DurationFromNanos = exports.DurationFromMillis = exports.Duration = exports.DateFromString = exports.DateFromSelf = exports.Date = exports.DataFromSelf = exports.Data = exports.Class = exports.ChunkFromSelf = exports.Chunk = exports.Char = exports.CauseFromSelf = exports.CauseDefectUnknown = exports.Cause = exports.BrandTypeId = exports.BooleanFromUnknown = exports.Boolean = exports.BigIntFromSelf = exports.BigIntFromNumber = exports.BigInt = exports.BigDecimalFromSelf = exports.BigDecimalFromNumber = exports.BigDecimal = exports.BetweenTypeId = exports.BetweenDurationTypeId = exports.BetweenBigIntTypeId = exports.BetweenBigDecimalTypeId = exports.Base64Url = exports.Base64 = exports.Array = exports.Any = void 0;
+exports.ListFromSelf = exports.List = exports.LessThanTypeId = exports.LessThanOrEqualToTypeId = exports.LessThanOrEqualToDurationTypeId = exports.LessThanOrEqualToBigIntTypeId = exports.LessThanOrEqualToBigDecimalTypeId = exports.LessThanDurationTypeId = exports.LessThanBigIntTypeId = exports.LessThanBigDecimalTypeId = exports.LengthTypeId = exports.JsonNumberTypeId = exports.JsonNumber = exports.ItemsCountTypeId = exports.IntTypeId = exports.Int = exports.InstanceOfTypeId = exports.IncludesTypeId = exports.Hex = exports.HashSetFromSelf = exports.HashSet = exports.HashMapFromSelf = exports.HashMap = exports.GreaterThanTypeId = exports.GreaterThanOrEqualToTypeId = exports.GreaterThanOrEqualToDurationTypeId = exports.GreaterThanOrEqualToBigIntTypeId = exports.GreaterThanOrEqualToBigDecimalTypeId = exports.GreaterThanDurationTypeId = exports.GreaterThanBigIntTypeId = exports.GreaterThanBigDecimalTypeId = exports.FromPropertySignature = exports.FiniteTypeId = exports.Finite = exports.FiberIdFromSelf = exports.FiberId = exports.ExitFromSelf = exports.Exit = exports.Enums = exports.EndsWithTypeId = exports.EitherFromUnion = exports.EitherFromSelf = exports.Either = exports.DurationFromSelf = exports.DurationFromNanos = exports.DurationFromMillis = exports.Duration = exports.DateFromString = exports.DateFromSelf = exports.DateFromNumber = exports.Date = exports.DataFromSelf = exports.Data = exports.Class = exports.ChunkFromSelf = exports.Chunk = exports.Char = exports.CauseFromSelf = exports.CauseDefectUnknown = exports.Cause = exports.BrandTypeId = exports.BooleanFromUnknown = exports.Boolean = exports.BigIntFromSelf = exports.BigIntFromNumber = exports.BigInt = exports.BigDecimalFromSelf = exports.BigDecimalFromNumber = exports.BigDecimal = exports.BetweenTypeId = exports.BetweenDurationTypeId = exports.BetweenBigIntTypeId = exports.BetweenBigDecimalTypeId = exports.Base64Url = exports.Base64 = exports.Array = exports.Any = void 0;
 exports.Literal = Literal;
-exports.NonNegativeBigDecimalTypeId = exports.NonNegativeBigDecimalFromSelf = exports.NonNegative = exports.NonNaNTypeId = exports.NonNaN = exports.NonEmptyArray = exports.NonEmpty = exports.Never = exports.NegativeBigIntFromSelf = exports.NegativeBigInt = exports.NegativeBigDecimalTypeId = exports.NegativeBigDecimalFromSelf = exports.Negative = exports.MultipleOfTypeId = exports.MinLengthTypeId = exports.MinItemsTypeId = exports.MaxLengthTypeId = exports.MaxItemsTypeId = exports.MapFromSelf = exports.Map = exports.LowercasedTypeId = exports.Lowercased = exports.Lowercase = void 0;
-exports.String = exports.StartsWithTypeId = exports.SortedSetFromSelf = exports.SortedSet = exports.SetFromSelf = exports.Set = exports.SecretFromSelf = exports.Secret = exports.Record = exports.ReadonlySetFromSelf = exports.ReadonlySet = exports.ReadonlyMapFromSelf = exports.ReadonlyMap = exports.PropertySignatureTypeId = exports.PropertySignatureTransformation = exports.PropertySignatureImpl = exports.PropertySignatureDeclaration = exports.PositiveBigIntFromSelf = exports.PositiveBigInt = exports.PositiveBigDecimalTypeId = exports.PositiveBigDecimalFromSelf = exports.Positive = exports.PatternTypeId = exports.OptionFromUndefinedOr = exports.OptionFromSelf = exports.OptionFromNullishOr = exports.OptionFromNullOr = exports.Option = exports.Object = exports.NumberFromString = exports.Number = exports.NullishOr = exports.NullOr = exports.Null = exports.Not = exports.NonPositiveBigIntFromSelf = exports.NonPositiveBigInt = exports.NonPositiveBigDecimalTypeId = exports.NonPositiveBigDecimalFromSelf = exports.NonPositive = exports.NonNegativeBigIntFromSelf = exports.NonNegativeBigInt = void 0;
+exports.NonNegativeBigDecimalFromSelf = exports.NonNegative = exports.NonNaNTypeId = exports.NonNaN = exports.NonEmptyArray = exports.NonEmpty = exports.Never = exports.NegativeBigIntFromSelf = exports.NegativeBigInt = exports.NegativeBigDecimalTypeId = exports.NegativeBigDecimalFromSelf = exports.Negative = exports.MultipleOfTypeId = exports.MinLengthTypeId = exports.MinItemsTypeId = exports.MaxLengthTypeId = exports.MaxItemsTypeId = exports.MapFromSelf = exports.Map = exports.LowercasedTypeId = exports.Lowercased = exports.Lowercase = void 0;
+exports.String = exports.StartsWithTypeId = exports.SortedSetFromSelf = exports.SortedSet = exports.SetFromSelf = exports.Set = exports.SecretFromSelf = exports.Secret = exports.Record = exports.ReadonlySetFromSelf = exports.ReadonlySet = exports.ReadonlyMapFromSelf = exports.ReadonlyMap = exports.PropertySignatureTypeId = exports.PropertySignatureTransformation = exports.PropertySignatureImpl = exports.PropertySignatureDeclaration = exports.PositiveBigIntFromSelf = exports.PositiveBigInt = exports.PositiveBigDecimalTypeId = exports.PositiveBigDecimalFromSelf = exports.Positive = exports.PatternTypeId = exports.OptionFromUndefinedOr = exports.OptionFromSelf = exports.OptionFromNullishOr = exports.OptionFromNullOr = exports.Option = exports.Object = exports.NumberFromString = exports.Number = exports.NullishOr = exports.NullOr = exports.Null = exports.Not = exports.NonPositiveBigIntFromSelf = exports.NonPositiveBigInt = exports.NonPositiveBigDecimalTypeId = exports.NonPositiveBigDecimalFromSelf = exports.NonPositive = exports.NonNegativeBigIntFromSelf = exports.NonNegativeBigInt = exports.NonNegativeBigDecimalTypeId = void 0;
 exports.Struct = Struct;
 exports.TrimmedTypeId = exports.Trimmed = exports.Trim = exports.ToPropertySignature = exports.TemplateLiteral = exports.TaggedRequest = exports.TaggedError = exports.TaggedClass = exports.SymbolFromSelf = exports.Symbol = void 0;
 exports.Tuple = Tuple;
 exports.UndefinedOr = exports.Undefined = exports.Uint8ArrayFromSelf = exports.Uint8Array = exports.UUIDTypeId = exports.UUID = exports.ULIDTypeId = exports.ULID = exports.TypeId = void 0;
 exports.Union = Union;
-exports.asSchema = exports.asBrandSchema = exports.annotations = exports.Void = exports.ValidDateTypeId = exports.ValidDateFromSelf = exports.UppercasedTypeId = exports.Uppercased = exports.Uppercase = exports.Unknown = exports.UniqueSymbolFromSelf = void 0;
+exports.asSchema = exports.annotations = exports.Void = exports.ValidDateTypeId = exports.ValidDateFromSelf = exports.UppercasedTypeId = exports.Uppercased = exports.Uppercase = exports.Unknown = exports.UniqueSymbolFromSelf = void 0;
 Object.defineProperty(exports, "asserts", {
   enumerable: true,
   get: function () {
@@ -77,17 +77,17 @@ Object.defineProperty(exports, "encodeUnknownSync", {
 });
 exports.extend = exports.examples = exports.equivalence = exports.endsWith = exports.encodedSchema = void 0;
 exports.filter = filter;
-exports.int = exports.instanceOf = exports.includes = exports.identifier = exports.headOrElse = exports.head = exports.hash = exports.greaterThanOrEqualToDuration = exports.greaterThanOrEqualToBigInt = exports.greaterThanOrEqualToBigDecimal = exports.greaterThanOrEqualTo = exports.greaterThanDuration = exports.greaterThanBigInt = exports.greaterThanBigDecimal = exports.greaterThan = exports.getNumberIndexedAccess = exports.fromKey = exports.fromBrand = exports.format = exports.finite = void 0;
+exports.int = exports.instanceOf = exports.includes = exports.identifier = exports.headOrElse = exports.head = exports.greaterThanOrEqualToDuration = exports.greaterThanOrEqualToBigInt = exports.greaterThanOrEqualToBigDecimal = exports.greaterThanOrEqualTo = exports.greaterThanDuration = exports.greaterThanBigInt = exports.greaterThanBigDecimal = exports.greaterThan = exports.getNumberIndexedAccess = exports.getClassTag = exports.fromKey = exports.fromBrand = exports.format = exports.finite = void 0;
 Object.defineProperty(exports, "is", {
   enumerable: true,
   get: function () {
     return ParseResult.is;
   }
 });
-exports.transformLiteral = exports.transform = exports.title = exports.suspend = exports.startsWith = exports.split = exports.required = exports.rename = exports.propertySignature = exports.positiveBigInt = exports.positiveBigDecimal = exports.positive = exports.pluck = exports.pickLiteral = exports.pick = exports.pattern = exports.partial = exports.parseJson = exports.parseIssueTitle = exports.optionalToRequired = exports.optionalToOptional = exports.optionalElement = exports.optional = exports.omit = exports.nonPositiveBigInt = exports.nonPositiveBigDecimal = exports.nonPositive = exports.nonNegativeBigInt = exports.nonNegativeBigDecimal = exports.nonNegative = exports.nonNaN = exports.nonEmpty = exports.negativeBigInt = exports.negativeBigDecimal = exports.negative = exports.mutable = exports.multipleOf = exports.minLength = exports.minItems = exports.message = exports.maxLength = exports.maxItems = exports.make = exports.lowercased = exports.lessThanOrEqualToDuration = exports.lessThanOrEqualToBigInt = exports.lessThanOrEqualToBigDecimal = exports.lessThanOrEqualTo = exports.lessThanDuration = exports.lessThanBigInt = exports.lessThanBigDecimal = exports.lessThan = exports.length = exports.keyof = exports.jsonSchema = exports.itemsCount = exports.isSchema = void 0;
+exports.transformLiteral = exports.transform = exports.title = exports.suspend = exports.startsWith = exports.split = exports.required = exports.rename = exports.propertySignature = exports.positiveBigInt = exports.positiveBigDecimal = exports.positive = exports.pluck = exports.pickLiteral = exports.pick = exports.pattern = exports.partial = exports.parseNumber = exports.parseJson = exports.parseIssueTitle = exports.optionalToRequired = exports.optionalToOptional = exports.optionalElement = exports.optional = exports.omit = exports.nonPositiveBigInt = exports.nonPositiveBigDecimal = exports.nonPositive = exports.nonNegativeBigInt = exports.nonNegativeBigDecimal = exports.nonNegative = exports.nonNaN = exports.nonEmpty = exports.negativeBigInt = exports.negativeBigDecimal = exports.negative = exports.mutable = exports.multipleOf = exports.minLength = exports.minItems = exports.message = exports.maxLength = exports.maxItems = exports.make = exports.lowercased = exports.lessThanOrEqualToDuration = exports.lessThanOrEqualToBigInt = exports.lessThanOrEqualToBigDecimal = exports.lessThanOrEqualTo = exports.lessThanDuration = exports.lessThanBigInt = exports.lessThanBigDecimal = exports.lessThan = exports.length = exports.keyof = exports.jsonSchema = exports.itemsCount = exports.isSchema = void 0;
 exports.transformLiterals = transformLiterals;
-exports.trimmed = exports.transformOrFail = void 0;
-exports.validateEither = exports.validate = exports.validDate = exports.uppercased = exports.typeSchema = void 0;
+exports.transformOrFail = void 0;
+exports.validateEither = exports.validate = exports.validDate = exports.uppercased = exports.typeSchema = exports.trimmed = void 0;
 Object.defineProperty(exports, "validateOption", {
   enumerable: true,
   get: function () {
@@ -101,11 +101,11 @@ Object.defineProperty(exports, "validateSync", {
     return ParseResult.validateSync;
   }
 });
+exports.withDefaults = exports.withDecodingDefault = exports.withConstructorDefault = void 0;
 var array_ = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Array"));
 var bigDecimal_ = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/BigDecimal"));
 var bigInt_ = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/BigInt"));
 var boolean_ = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Boolean"));
-var brand_ = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Brand"));
 var cause_ = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Cause"));
 var chunk_ = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Chunk"));
 var data_ = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Data"));
@@ -138,7 +138,6 @@ var serializable_ = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("
 var util_ = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/util.js"));
 var ParseResult = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./ParseResult.js"));
 var pretty_ = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./Pretty.js"));
-var TreeFormatter = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./TreeFormatter.js"));
 function _getRequireWildcardCache(e) {
   if ("function" != typeof WeakMap) return null;
   var r = new WeakMap(),
@@ -173,6 +172,27 @@ function _interopRequireWildcard(e, r) {
  * @category symbol
  */
 const TypeId = exports.TypeId = /*#__PURE__*/Symbol.for("@effect/schema/Schema");
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+const make = ast => class SchemaClass {
+  [TypeId] = variance;
+  static Type;
+  static Encoded;
+  static [TypeId] = variance;
+  static ast = ast;
+  static annotations(annotations) {
+    return make(AST.annotations(this.ast, toASTAnnotations(annotations)));
+  }
+  static pipe() {
+    return (0, _Pipeable.pipeArguments)(this, arguments);
+  }
+  static toString() {
+    return String(ast);
+  }
+};
+exports.make = make;
 const variance = {
   /* c8 ignore next */
   _A: _ => _,
@@ -222,37 +242,15 @@ const toASTAnnotations = annotations => {
   move("parseIssueTitle", AST.ParseIssueTitleAnnotationId);
   return out;
 };
-class SchemaImpl {
-  ast;
-  [TypeId] = variance;
-  constructor(ast) {
-    this.ast = ast;
-  }
-  pipe() {
-    return (0, _Pipeable.pipeArguments)(this, arguments);
-  }
-  annotations(annotations) {
-    return new SchemaImpl(AST.annotations(this.ast, toASTAnnotations(annotations)));
-  }
-  toString() {
-    return String(this.ast);
-  }
-}
 /**
  * @since 1.0.0
  */
 const asSchema = schema => schema;
-/**
- * @category hashing
- * @since 1.0.0
- */
-exports.asSchema = asSchema;
-const hash = schema => AST.hash(schema.ast);
 /**
  * @category formatting
  * @since 1.0.0
  */
-exports.hash = hash;
+exports.asSchema = asSchema;
 const format = schema => String(schema.ast);
 /**
  * @since 1.0.0
@@ -385,28 +383,16 @@ const validatePromise = (schema, options) => {
  */
 exports.validatePromise = validatePromise;
 const isSchema = u => Predicate.hasProperty(u, TypeId) && Predicate.isObject(u[TypeId]);
-/**
- * @category constructors
- * @since 1.0.0
- */
 exports.isSchema = isSchema;
-const make = ast => new SchemaImpl(ast);
-exports.make = make;
-class LiteralImpl extends SchemaImpl {
-  static ast = literals => {
-    return AST.isMembers(literals) ? AST.Union.make(AST.mapMembers(literals, literal => new AST.Literal(literal))) : new AST.Literal(literals[0]);
-  };
-  literals;
-  constructor(literals, ast = LiteralImpl.ast(literals)) {
-    super(ast);
-    this.literals = [...literals];
-  }
-  annotations(annotations) {
-    return new LiteralImpl(this.literals, AST.annotations(this.ast, toASTAnnotations(annotations)));
+const getDefaultLiteralAST = literals => AST.isMembers(literals) ? AST.Union.make(AST.mapMembers(literals, literal => new AST.Literal(literal))) : new AST.Literal(literals[0]);
+const makeLiteralClass = (literals, ast = getDefaultLiteralAST(literals)) => class LiteralClass extends make(ast) {
+  static annotations(annotations) {
+    return makeLiteralClass(this.literals, AST.annotations(this.ast, toASTAnnotations(annotations)));
   }
-}
+  static literals = [...literals];
+};
 function Literal(...literals) {
-  return array_.isNonEmptyReadonlyArray(literals) ? new LiteralImpl(literals) : Never;
+  return array_.isNonEmptyReadonlyArray(literals) ? makeLiteralClass(literals) : Never;
 }
 /**
  * Creates a new `Schema` from a literal schema.
@@ -432,24 +418,20 @@ const pickLiteral = (...literals) => _schema => Literal(...literals);
 exports.pickLiteral = pickLiteral;
 const UniqueSymbolFromSelf = symbol => make(new AST.UniqueSymbol(symbol));
 exports.UniqueSymbolFromSelf = UniqueSymbolFromSelf;
-class EnumsImpl extends SchemaImpl {
-  enums;
-  static ast = enums => {
-    return new AST.Enums(Object.keys(enums).filter(key => typeof enums[enums[key]] !== "number").map(key => [key, enums[key]]));
-  };
-  constructor(enums, ast = EnumsImpl.ast(enums)) {
-    super(ast);
-    this.enums = enums;
-  }
-  annotations(annotations) {
-    return new EnumsImpl(this.enums, AST.annotations(this.ast, toASTAnnotations(annotations)));
+const getDefaultEnumsAST = enums => new AST.Enums(Object.keys(enums).filter(key => typeof enums[enums[key]] !== "number").map(key => [key, enums[key]]));
+const makeEnumsClass = (enums, ast = getDefaultEnumsAST(enums)) => class EnumsClass extends make(ast) {
+  static annotations(annotations) {
+    return makeEnumsClass(this.enums, AST.annotations(this.ast, toASTAnnotations(annotations)));
   }
-}
+  static enums = {
+    ...enums
+  };
+};
 /**
  * @category constructors
  * @since 1.0.0
  */
-const Enums = enums => new EnumsImpl(enums);
+const Enums = enums => makeEnumsClass(enums);
 /**
  * @category constructors
  * @since 1.0.0
@@ -519,7 +501,7 @@ const BrandTypeId = exports.BrandTypeId = /*#__PURE__*/Symbol.for("@effect/schem
  * @category constructors
  * @since 1.0.0
  */
-const fromBrand = (constructor, annotations) => self => make(new AST.Refinement(self.ast, (a, _, ast) => {
+const fromBrand = (constructor, annotations) => self => makeBrandClass(new AST.Refinement(self.ast, function predicate(a, _, ast) {
   const either = constructor.either(a);
   return either_.isLeft(either) ? option_.some(new ParseResult.Type(ast, a, either.left.map(v => v.message).join(", "))) : option_.none();
 }, toASTAnnotations({
@@ -558,61 +540,95 @@ const instanceOf = (constructor, annotations) => declare(u => u instanceof const
  * @since 1.0.0
  */
 exports.instanceOf = instanceOf;
-const Undefined = exports.Undefined = /*#__PURE__*/make(AST.undefinedKeyword);
+class Undefined extends make(AST.undefinedKeyword) {
+  static annotations = super.annotations;
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-const Void = exports.Void = /*#__PURE__*/make(AST.voidKeyword);
+exports.Undefined = Undefined;
+class Void extends make(AST.voidKeyword) {
+  static annotations = super.annotations;
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-const Null = exports.Null = /*#__PURE__*/make(AST.null);
+exports.Void = Void;
+class Null extends make(AST.null) {
+  static annotations = super.annotations;
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-const Never = exports.Never = /*#__PURE__*/make(AST.neverKeyword);
+exports.Null = Null;
+class Never extends make(AST.neverKeyword) {
+  static annotations = super.annotations;
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-const Unknown = exports.Unknown = /*#__PURE__*/make(AST.unknownKeyword);
+exports.Never = Never;
+class Unknown extends make(AST.unknownKeyword) {
+  static annotations = super.annotations;
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-const Any = exports.Any = /*#__PURE__*/make(AST.anyKeyword);
-const $String = exports.String = /*#__PURE__*/make(AST.stringKeyword);
-const $Number = exports.Number = /*#__PURE__*/make(AST.numberKeyword);
-const $Boolean = exports.Boolean = /*#__PURE__*/make(AST.booleanKeyword);
+exports.Unknown = Unknown;
+class Any extends make(AST.anyKeyword) {
+  static annotations = super.annotations;
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-const BigIntFromSelf = exports.BigIntFromSelf = /*#__PURE__*/make(AST.bigIntKeyword);
+exports.Any = Any;
+class BigIntFromSelf extends make(AST.bigIntKeyword) {
+  static annotations = super.annotations;
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-const SymbolFromSelf = exports.SymbolFromSelf = /*#__PURE__*/make(AST.symbolKeyword);
-const $Object = exports.Object = /*#__PURE__*/make(AST.objectKeyword);
-class UnionImpl extends SchemaImpl {
-  static ast = members => {
-    return AST.Union.members(members.map(m => m.ast));
-  };
-  members;
-  constructor(members, ast = UnionImpl.ast(members)) {
-    super(ast);
-    this.members = [...members];
-  }
-  annotations(annotations) {
-    return new UnionImpl(this.members, AST.annotations(this.ast, toASTAnnotations(annotations)));
-  }
+exports.BigIntFromSelf = BigIntFromSelf;
+class SymbolFromSelf extends make(AST.symbolKeyword) {
+  static annotations = super.annotations;
+}
+/** @ignore */
+exports.SymbolFromSelf = SymbolFromSelf;
+class String$ extends make(AST.stringKeyword) {
+  static annotations = super.annotations;
 }
+/** @ignore */
+exports.String = String$;
+class Number$ extends make(AST.numberKeyword) {
+  static annotations = super.annotations;
+}
+/** @ignore */
+exports.Number = Number$;
+class Boolean$ extends make(AST.booleanKeyword) {
+  static annotations = super.annotations;
+}
+/** @ignore */
+exports.Boolean = Boolean$;
+class Object$ extends make(AST.objectKeyword) {
+  static annotations = super.annotations;
+}
+exports.Object = Object$;
+const getDefaultUnionAST = members => AST.Union.members(members.map(m => m.ast));
+const makeUnionClass = (members, ast = getDefaultUnionAST(members)) => class UnionClass extends make(ast) {
+  static annotations(annotations) {
+    return makeUnionClass(this.members, AST.annotations(this.ast, toASTAnnotations(annotations)));
+  }
+  static members = [...members];
+};
 function Union(...members) {
-  return AST.isMembers(members) ? new UnionImpl(members) : array_.isNonEmptyReadonlyArray(members) ? members[0] : Never;
+  return AST.isMembers(members) ? makeUnionClass(members) : array_.isNonEmptyReadonlyArray(members) ? members[0] : Never;
 }
 /**
  * @category combinators
@@ -653,51 +669,36 @@ class OptionalElementImpl {
     return `${this.optionalElement.ast}?`;
   }
 }
-class TupleTypeImpl extends SchemaImpl {
-  elements;
-  rest;
-  static ast = (elements, rest) => {
-    return new AST.TupleType(elements.map(schema => isSchema(schema) ? new AST.Element(schema.ast, false) : new AST.Element(schema.optionalElement.ast, true)), rest.map(e => e.ast), true);
-  };
-  constructor(elements, rest, ast = TupleTypeImpl.ast(elements, rest)) {
-    super(ast);
-    this.elements = elements;
-    this.rest = rest;
-  }
-  annotations(annotations) {
-    return new TupleTypeImpl(this.elements, this.rest, AST.annotations(this.ast, toASTAnnotations(annotations)));
+const getDefaultTupleTypeAST = (elements, rest) => new AST.TupleType(elements.map(schema => isSchema(schema) ? new AST.Element(schema.ast, false) : new AST.Element(schema.optionalElement.ast, true)), rest.map(e => e.ast), true);
+const makeTupleTypeClass = (elements, rest, ast = getDefaultTupleTypeAST(elements, rest)) => class TupleTypeClass extends make(ast) {
+  static annotations(annotations) {
+    return makeTupleTypeClass(this.elements, this.rest, AST.annotations(this.ast, toASTAnnotations(annotations)));
   }
-}
+  static elements = [...elements];
+  static rest = [...rest];
+};
 function Tuple(...args) {
-  return Array.isArray(args[0]) ? new TupleTypeImpl(args[0], args.slice(1)) : new TupleTypeImpl(args, []);
+  return Array.isArray(args[0]) ? makeTupleTypeClass(args[0], args.slice(1)) : makeTupleTypeClass(args, []);
 }
-class $ArrayImpl extends TupleTypeImpl {
-  value;
-  constructor(value, ast) {
-    super([], [value], ast);
-    this.value = value;
+const makeArrayClass = (value, ast) => class ArrayClass extends makeTupleTypeClass([], [value], ast) {
+  static annotations(annotations) {
+    return makeArrayClass(this.value, AST.annotations(this.ast, toASTAnnotations(annotations)));
   }
-  annotations(annotations) {
-    return new $ArrayImpl(this.value, AST.annotations(this.ast, toASTAnnotations(annotations)));
-  }
-}
-const $Array = value => new $ArrayImpl(value);
-exports.Array = $Array;
-class NonEmptyArrayImpl extends TupleTypeImpl {
-  value;
-  constructor(value, ast) {
-    super([value], [value], ast);
-    this.value = value;
-  }
-  annotations(annotations) {
-    return new NonEmptyArrayImpl(this.value, AST.annotations(this.ast, toASTAnnotations(annotations)));
+  static value = value;
+};
+const Array$ = value => makeArrayClass(value);
+exports.Array = Array$;
+const makeNonEmptyArrayClass = (value, ast) => class NonEmptyArrayClass extends makeTupleTypeClass([value], [value], ast) {
+  static annotations(annotations) {
+    return makeNonEmptyArrayClass(this.value, AST.annotations(this.ast, toASTAnnotations(annotations)));
   }
-}
+  static value = value;
+};
 /**
  * @category constructors
  * @since 1.0.0
  */
-const NonEmptyArray = value => new NonEmptyArrayImpl(value);
+const NonEmptyArray = value => makeNonEmptyArrayClass(value);
 exports.NonEmptyArray = NonEmptyArray;
 const formatToken = isOptional => isOptional ? "\"?:\"" : "\":\"";
 /**
@@ -709,15 +710,17 @@ class PropertySignatureDeclaration {
   isOptional;
   isReadonly;
   annotations;
+  defaultValue;
   /**
    * @since 1.0.0
    */
   _tag = "PropertySignatureDeclaration";
-  constructor(type, isOptional, isReadonly, annotations) {
+  constructor(type, isOptional, isReadonly, annotations, defaultValue) {
     this.type = type;
     this.isOptional = isOptional;
     this.isReadonly = isReadonly;
     this.annotations = annotations;
+    this.defaultValue = defaultValue;
   }
   /**
    * @since 1.0.0
@@ -757,11 +760,13 @@ class ToPropertySignature {
   isOptional;
   isReadonly;
   annotations;
-  constructor(type, isOptional, isReadonly, annotations) {
+  defaultValue;
+  constructor(type, isOptional, isReadonly, annotations, defaultValue) {
     this.type = type;
     this.isOptional = isOptional;
     this.isReadonly = isReadonly;
     this.annotations = annotations;
+    this.defaultValue = defaultValue;
   }
 }
 exports.ToPropertySignature = ToPropertySignature;
@@ -813,14 +818,14 @@ const propertySignatureAnnotations_ = (ast, annotations) => {
         return new PropertySignatureDeclaration(ast.type, ast.isOptional, ast.isReadonly, {
           ...ast.annotations,
           ...annotations
-        });
+        }, ast.defaultValue);
       }
     case "PropertySignatureTransformation":
       {
         return new PropertySignatureTransformation(new FromPropertySignature(ast.from.type, ast.from.isOptional, ast.from.isReadonly, ast.from.annotations), new ToPropertySignature(ast.to.type, ast.to.isOptional, ast.to.isReadonly, {
           ...ast.to.annotations,
           ...annotations
-        }), ast.decode, ast.encode);
+        }, ast.to.defaultValue), ast.decode, ast.encode);
       }
   }
 };
@@ -829,9 +834,10 @@ class PropertySignatureImpl {
   ast;
   [TypeId];
   [PropertySignatureTypeId] = null;
+  _TypeToken;
   _Key;
   _EncodedToken;
-  _TypeToken;
+  _HasDefault;
   constructor(ast) {
     this.ast = ast;
   }
@@ -846,48 +852,97 @@ class PropertySignatureImpl {
   }
 }
 /**
+ * Lifts a `Schema` into a `PropertySignature`.
+ *
  * @category PropertySignature
  * @since 1.0.0
  */
 exports.PropertySignatureImpl = PropertySignatureImpl;
-const propertySignature = self => new PropertySignatureImpl(new PropertySignatureDeclaration(self.ast, false, true, {}));
+const propertySignature = self => new PropertySignatureImpl(new PropertySignatureDeclaration(self.ast, false, true, {}, undefined));
 /**
+ * Enhances a property signature with a default constructor value.
+ *
  * @category PropertySignature
  * @since 1.0.0
  */
 exports.propertySignature = propertySignature;
+const withConstructorDefault = exports.withConstructorDefault = /*#__PURE__*/(0, _Function.dual)(2, (self, defaultValue) => {
+  const ast = self.ast;
+  switch (ast._tag) {
+    case "PropertySignatureDeclaration":
+      return new PropertySignatureImpl(new PropertySignatureDeclaration(ast.type, ast.isOptional, ast.isReadonly, ast.annotations, defaultValue));
+    case "PropertySignatureTransformation":
+      return new PropertySignatureImpl(new PropertySignatureTransformation(ast.from, new ToPropertySignature(ast.to.type, ast.to.isOptional, ast.to.isReadonly, ast.to.annotations, defaultValue), ast.decode, ast.encode));
+  }
+});
+const applyDefaultValue = (o, defaultValue) => option_.match(o, {
+  onNone: () => option_.some(defaultValue()),
+  onSome: value => option_.some(value === undefined ? defaultValue() : value)
+});
+/**
+ * Enhances a property signature with a default decoding value.
+ *
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+const withDecodingDefault = exports.withDecodingDefault = /*#__PURE__*/(0, _Function.dual)(2, (self, defaultValue) => {
+  const ast = self.ast;
+  switch (ast._tag) {
+    case "PropertySignatureDeclaration":
+      return new PropertySignatureImpl(new PropertySignatureTransformation(ast, new ToPropertySignature(AST.typeAST(ast.type), false, true, {}, undefined), o => applyDefaultValue(o, defaultValue), _Function.identity));
+    case "PropertySignatureTransformation":
+      return new PropertySignatureImpl(new PropertySignatureTransformation(ast.from, new ToPropertySignature(ast.to.type, false, ast.to.isReadonly, ast.to.annotations, ast.to.defaultValue), o => applyDefaultValue(ast.decode(o), defaultValue), ast.encode));
+  }
+});
+/**
+ * Enhances a property signature with a default decoding value and a default constructor value.
+ *
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+const withDefaults = exports.withDefaults = /*#__PURE__*/(0, _Function.dual)(2, (self, defaults) => self.pipe(withDecodingDefault(defaults.decoding), withConstructorDefault(defaults.constructor)));
+/**
+ * Enhances a property signature by specifying a different key for it in the Encoded type.
+ *
+ * @category PropertySignature
+ * @since 1.0.0
+ */
 const fromKey = exports.fromKey = /*#__PURE__*/(0, _Function.dual)(2, (self, key) => {
   const ast = self.ast;
   switch (ast._tag) {
     case "PropertySignatureDeclaration":
       {
-        return new PropertySignatureImpl(new PropertySignatureTransformation(new FromPropertySignature(ast.type, ast.isOptional, ast.isReadonly, ast.annotations, key), new ToPropertySignature(AST.typeAST(ast.type), ast.isOptional, ast.isReadonly, {}), _Function.identity, _Function.identity));
+        return new PropertySignatureImpl(new PropertySignatureTransformation(new FromPropertySignature(ast.type, ast.isOptional, ast.isReadonly, ast.annotations, key), new ToPropertySignature(AST.typeAST(ast.type), ast.isOptional, ast.isReadonly, {}, ast.defaultValue), _Function.identity, _Function.identity));
       }
     case "PropertySignatureTransformation":
       return new PropertySignatureImpl(new PropertySignatureTransformation(new FromPropertySignature(ast.from.type, ast.from.isOptional, ast.from.isReadonly, ast.from.annotations, key), ast.to, ast.decode, ast.encode));
   }
 });
 /**
- * - `decode`: `none` as argument means: the value is missing in the input
- * - `encode`: `none` as return value means: the value will be missing in the output
+ * Converts an optional property to a required one through a transformation `Option -> Option`.
+ *
+ * - `decode`: `none` as argument means the value is missing in the input.
+ * - `encode`: `none` as return value means the value will be missing in the output.
  *
  * @category PropertySignature
  * @since 1.0.0
  */
-const optionalToRequired = (from, to, options) => new PropertySignatureImpl(new PropertySignatureTransformation(new FromPropertySignature(from.ast, true, true, {}, undefined), new ToPropertySignature(to.ast, false, true, {}), o => option_.some(options.decode(o)), option_.flatMap(options.encode)));
+const optionalToRequired = (from, to, options) => new PropertySignatureImpl(new PropertySignatureTransformation(new FromPropertySignature(from.ast, true, true, {}, undefined), new ToPropertySignature(to.ast, false, true, {}, undefined), o => option_.some(options.decode(o)), option_.flatMap(options.encode)));
 /**
+ * Converts an optional property to another optional property through a transformation `Option -> Option`.
+ *
  * - `decode`:
- *   - `none` as argument means: the value is missing in the input
- *   - `none` as return value means: the value will be missing in the output
+ *   - `none` as argument means the value is missing in the input.
+ *   - `none` as return value means the value will be missing in the output.
  * - `encode`:
- *   - `none` as argument means: the value is missing in the input
- *   - `none` as return value means: the value will be missing in the output
+ *   - `none` as argument means the value is missing in the input.
+ *   - `none` as return value means the value will be missing in the output.
  *
  * @category PropertySignature
  * @since 1.0.0
  */
 exports.optionalToRequired = optionalToRequired;
-const optionalToOptional = (from, to, options) => new PropertySignatureImpl(new PropertySignatureTransformation(new FromPropertySignature(from.ast, true, true, {}, undefined), new ToPropertySignature(to.ast, true, true, {}), options.decode, options.encode));
+const optionalToOptional = (from, to, options) => new PropertySignatureImpl(new PropertySignatureTransformation(new FromPropertySignature(from.ast, true, true, {}, undefined), new ToPropertySignature(to.ast, true, true, {}, undefined), options.decode, options.encode));
 /**
  * @category PropertySignature
  * @since 1.0.0
@@ -936,7 +991,7 @@ const optional = exports.optional = /*#__PURE__*/(0, _Function.dual)(args => isS
           encode: _Function.identity
         });
       } else {
-        return new PropertySignatureImpl(new PropertySignatureDeclaration(schema.ast, true, true, {}));
+        return new PropertySignatureImpl(new PropertySignatureDeclaration(schema.ast, true, true, {}, undefined));
       }
     }
   } else {
@@ -977,122 +1032,133 @@ const optional = exports.optional = /*#__PURE__*/(0, _Function.dual)(args => isS
           encode: _Function.identity
         });
       } else {
-        return new PropertySignatureImpl(new PropertySignatureDeclaration(UndefinedOr(schema).ast, true, true, {}));
+        return new PropertySignatureImpl(new PropertySignatureDeclaration(UndefinedOr(schema).ast, true, true, {}, undefined));
       }
     }
   }
 });
 const isPropertySignature = u => Predicate.hasProperty(u, PropertySignatureTypeId);
-class TypeLiteralImpl extends SchemaImpl {
-  static ast = (fields, records) => {
-    const ownKeys = util_.ownKeys(fields);
-    const pss = [];
-    if (ownKeys.length > 0) {
-      const from = [];
-      const to = [];
-      const transformations = [];
-      for (let i = 0; i < ownKeys.length; i++) {
-        const key = ownKeys[i];
-        const field = fields[key];
-        if (isPropertySignature(field)) {
-          const ast = field.ast;
-          switch (ast._tag) {
-            case "PropertySignatureDeclaration":
-              {
-                const type = ast.type;
-                const isOptional = ast.isOptional;
-                const toAnnotations = ast.annotations;
-                from.push(new AST.PropertySignature(key, type, isOptional, true));
-                to.push(new AST.PropertySignature(key, AST.typeAST(type), isOptional, true, toAnnotations));
-                pss.push(new AST.PropertySignature(key, type, isOptional, true, toAnnotations));
-                break;
-              }
-            case "PropertySignatureTransformation":
-              {
-                const fromKey = ast.from.fromKey ?? key;
-                from.push(new AST.PropertySignature(fromKey, ast.from.type, ast.from.isOptional, true, ast.from.annotations));
-                to.push(new AST.PropertySignature(key, ast.to.type, ast.to.isOptional, true, ast.to.annotations));
-                transformations.push(new AST.PropertySignatureTransformation(fromKey, key, ast.decode, ast.encode));
-                break;
-              }
-          }
-        } else {
-          from.push(new AST.PropertySignature(key, field.ast, false, true));
-          to.push(new AST.PropertySignature(key, AST.typeAST(field.ast), false, true));
-          pss.push(new AST.PropertySignature(key, field.ast, false, true));
+const getDefaultTypeLiteralAST = (fields, records) => {
+  const ownKeys = util_.ownKeys(fields);
+  const pss = [];
+  if (ownKeys.length > 0) {
+    const from = [];
+    const to = [];
+    const transformations = [];
+    for (let i = 0; i < ownKeys.length; i++) {
+      const key = ownKeys[i];
+      const field = fields[key];
+      if (isPropertySignature(field)) {
+        const ast = field.ast;
+        switch (ast._tag) {
+          case "PropertySignatureDeclaration":
+            {
+              const type = ast.type;
+              const isOptional = ast.isOptional;
+              const toAnnotations = ast.annotations;
+              from.push(new AST.PropertySignature(key, type, isOptional, true));
+              to.push(new AST.PropertySignature(key, AST.typeAST(type), isOptional, true, toAnnotations));
+              pss.push(new AST.PropertySignature(key, type, isOptional, true, toAnnotations));
+              break;
+            }
+          case "PropertySignatureTransformation":
+            {
+              const fromKey = ast.from.fromKey ?? key;
+              from.push(new AST.PropertySignature(fromKey, ast.from.type, ast.from.isOptional, true, ast.from.annotations));
+              to.push(new AST.PropertySignature(key, ast.to.type, ast.to.isOptional, true, ast.to.annotations));
+              transformations.push(new AST.PropertySignatureTransformation(fromKey, key, ast.decode, ast.encode));
+              break;
+            }
         }
+      } else {
+        from.push(new AST.PropertySignature(key, field.ast, false, true));
+        to.push(new AST.PropertySignature(key, AST.typeAST(field.ast), false, true));
+        pss.push(new AST.PropertySignature(key, field.ast, false, true));
       }
-      if (array_.isNonEmptyReadonlyArray(transformations)) {
-        const issFrom = [];
-        const issTo = [];
-        for (const r of records) {
-          const {
-            indexSignatures,
-            propertySignatures
-          } = AST.record(r.key.ast, r.value.ast);
-          propertySignatures.forEach(ps => {
-            from.push(ps);
-            to.push(new AST.PropertySignature(ps.name, AST.typeAST(ps.type), ps.isOptional, ps.isReadonly, ps.annotations));
-          });
-          indexSignatures.forEach(is => {
-            issFrom.push(is);
-            issTo.push(new AST.IndexSignature(is.parameter, AST.typeAST(is.type), is.isReadonly));
-          });
-        }
-        return new AST.Transformation(new AST.TypeLiteral(from, issFrom, {
-          [AST.TitleAnnotationId]: "Struct (Encoded side)"
-        }), new AST.TypeLiteral(to, issTo, {
-          [AST.TitleAnnotationId]: "Struct (Type side)"
-        }), new AST.TypeLiteralTransformation(transformations));
+    }
+    if (array_.isNonEmptyReadonlyArray(transformations)) {
+      const issFrom = [];
+      const issTo = [];
+      for (const r of records) {
+        const {
+          indexSignatures,
+          propertySignatures
+        } = AST.record(r.key.ast, r.value.ast);
+        propertySignatures.forEach(ps => {
+          from.push(ps);
+          to.push(new AST.PropertySignature(ps.name, AST.typeAST(ps.type), ps.isOptional, ps.isReadonly, ps.annotations));
+        });
+        indexSignatures.forEach(is => {
+          issFrom.push(is);
+          issTo.push(new AST.IndexSignature(is.parameter, AST.typeAST(is.type), is.isReadonly));
+        });
       }
+      return new AST.Transformation(new AST.TypeLiteral(from, issFrom, {
+        [AST.TitleAnnotationId]: "Struct (Encoded side)"
+      }), new AST.TypeLiteral(to, issTo, {
+        [AST.TitleAnnotationId]: "Struct (Type side)"
+      }), new AST.TypeLiteralTransformation(transformations));
     }
-    const iss = [];
-    for (const r of records) {
-      const {
-        indexSignatures,
-        propertySignatures
-      } = AST.record(r.key.ast, r.value.ast);
-      propertySignatures.forEach(ps => pss.push(ps));
-      indexSignatures.forEach(is => iss.push(is));
+  }
+  const iss = [];
+  for (const r of records) {
+    const {
+      indexSignatures,
+      propertySignatures
+    } = AST.record(r.key.ast, r.value.ast);
+    propertySignatures.forEach(ps => pss.push(ps));
+    indexSignatures.forEach(is => iss.push(is));
+  }
+  return new AST.TypeLiteral(pss, iss);
+};
+const lazilyMergeDefaults = (fields, out) => {
+  const ownKeys = util_.ownKeys(fields);
+  for (const key of ownKeys) {
+    const field = fields[key];
+    if (out[key] === undefined && isPropertySignature(field)) {
+      const ast = field.ast;
+      const defaultValue = ast._tag === "PropertySignatureDeclaration" ? ast.defaultValue : ast.to.defaultValue;
+      if (defaultValue !== undefined) {
+        out[key] = defaultValue();
+      }
     }
-    return new AST.TypeLiteral(pss, iss);
-  };
-  fields;
-  records;
-  constructor(fields, records, ast = TypeLiteralImpl.ast(fields, records)) {
-    super(ast);
-    this.fields = {
+  }
+  return out;
+};
+const makeTypeLiteralClass = (fields, records, ast = getDefaultTypeLiteralAST(fields, records)) => {
+  return class TypeLiteralClass extends make(ast) {
+    static annotations(annotations) {
+      return makeTypeLiteralClass(this.fields, this.records, AST.annotations(this.ast, toASTAnnotations(annotations)));
+    }
+    static fields = {
       ...fields
     };
-    this.records = [...records];
-  }
-  annotations(annotations) {
-    return new TypeLiteralImpl(this.fields, this.records, AST.annotations(this.ast, toASTAnnotations(annotations)));
-  }
-}
+    static records = [...records];
+    static make(props) {
+      return ParseResult.validateSync(this)(lazilyMergeDefaults(fields, {
+        ...props
+      }));
+    }
+  };
+};
 function Struct(fields, ...records) {
-  return new TypeLiteralImpl(fields, records);
+  return makeTypeLiteralClass(fields, records);
 }
-class $RecordImpl extends TypeLiteralImpl {
-  key;
-  value;
-  constructor(key, value, ast) {
-    super({}, [{
-      key,
-      value
-    }], ast);
-    this.key = key;
-    this.value = value;
-  }
-  annotations(annotations) {
-    return new $RecordImpl(this.key, this.value, AST.annotations(this.ast, toASTAnnotations(annotations)));
+const makeRecordClass = (key, value, ast) => class RecordClass extends makeTypeLiteralClass({}, [{
+  key,
+  value
+}], ast) {
+  static annotations(annotations) {
+    return makeRecordClass(key, value, AST.annotations(this.ast, toASTAnnotations(annotations)));
   }
-}
+  static key = key;
+  static value = value;
+};
 /**
  * @category constructors
  * @since 1.0.0
  */
-const Record = (key, value) => new $RecordImpl(key, value);
+const Record = (key, value) => makeRecordClass(key, value);
 /**
  * @category struct transformations
  * @since 1.0.0
@@ -1144,28 +1210,14 @@ const pluck = exports.pluck = /*#__PURE__*/(0, _Function.dual)(2, (schema, key)
     }
   });
 });
-const makeBrandSchema = (self, annotations) => {
-  const ast = AST.annotations(self, toASTAnnotations(annotations));
-  const schema = make(ast);
-  const validateEither_ = validateEither(schema);
-  //     v-- function
-  const out = brand_.refined(unbranded => either_.match(validateEither_(unbranded), {
-    onLeft: e => option_.some(brand_.error(TreeFormatter.formatErrorSync(e), e)),
-    onRight: () => option_.none()
-  }));
-  // ----------------
-  // Schema interface
-  // ----------------
-  Object.setPrototypeOf(Object.assign(out, schema, {
-    annotations: a => makeBrandSchema(ast, a)
-  }), Object.getPrototypeOf(schema));
-  return out;
+const makeBrandClass = ast => class BrandClass extends make(ast) {
+  static annotations(annotations) {
+    return makeBrandClass(AST.annotations(this.ast, toASTAnnotations(annotations)));
+  }
+  static make(a) {
+    return ParseResult.validateSync(this)(a);
+  }
 };
-/**
- * @category branding
- * @since 1.0.0
- */
-const asBrandSchema = schema => schema;
 /**
  * Returns a nominal branded schema by applying a brand to a given schema.
  *
@@ -1185,18 +1237,18 @@ const asBrandSchema = schema => schema;
  * @category branding
  * @since 1.0.0
  */
-exports.asBrandSchema = asBrandSchema;
 const brand = (brand, annotations) => self => {
-  const brandAnnotation = option_.match(AST.getBrandAnnotation(self.ast), {
+  const annotation = option_.match(AST.getBrandAnnotation(self.ast), {
     onNone: () => [brand],
     onSome: brands => [...brands, brand]
   });
-  return makeBrandSchema(self.ast, {
+  const ast = AST.annotations(self.ast, toASTAnnotations({
     // add a default title annotation containing the brand
     title: String(self.ast) + ` & Brand<${util_.formatUnknown(brand)}>`,
     ...annotations,
-    [AST.BrandAnnotationId]: brandAnnotation
-  });
+    [AST.BrandAnnotationId]: annotation
+  }));
+  return makeBrandClass(ast);
 };
 /**
  * @category combinators
@@ -1220,7 +1272,10 @@ const required = self => make(AST.required(self.ast));
 exports.required = required;
 const mutable = schema => make(AST.mutable(schema.ast));
 exports.mutable = mutable;
-const getExtendErrorMessage = (x, y, path) => errors_.getAPIErrorMessage("Extend", `cannot extend \`${x}\` with \`${y}\` (path [${path?.join(", ")}])`);
+const getExtendErrorMessage = (x, y, path) => {
+  const message = `unsupported schema or overlapping types, cannot extend ${x} with ${y}`;
+  return errors_.getErrorMessageWithPath(errors_.getErrorMessage("extend", message), path);
+};
 const intersectTypeLiterals = (x, y, path) => {
   if (AST.isTypeLiteral(x) && AST.isTypeLiteral(y)) {
     const propertySignatures = [...x.propertySignatures];
@@ -1234,37 +1289,98 @@ const intersectTypeLiterals = (x, y, path) => {
           isOptional,
           type
         } = propertySignatures[i];
-        path = [...path, util_.formatUnknown(name)];
-        propertySignatures[i] = new AST.PropertySignature(name, extendAST(type, ps.type, path), isOptional, true);
+        propertySignatures[i] = new AST.PropertySignature(name, extendAST(type, ps.type, path.concat(name)), isOptional, true);
       }
     }
     return new AST.TypeLiteral(propertySignatures, x.indexSignatures.concat(y.indexSignatures));
   }
   throw new Error(getExtendErrorMessage(x, y, path));
 };
+const addRefinementToMembers = (refinement, asts) => asts.map(ast => new AST.Refinement(ast, refinement.filter,
+// preserve message annotation
+option_.match(AST.getMessageAnnotation(refinement), {
+  onNone: () => undefined,
+  onSome: message => ({
+    [AST.MessageAnnotationId]: message
+  })
+})));
 const extendAST = (x, y, path) => AST.Union.make(intersectUnionMembers([x], [y], path));
+const getTypes = ast => AST.isUnion(ast) ? ast.types : [ast];
 const intersectUnionMembers = (xs, ys, path) => array_.flatMap(xs, x => array_.flatMap(ys, y => {
-  if (AST.isUnion(x)) {
-    return intersectUnionMembers(x.types, AST.isUnion(y) ? y.types : [y], path);
-  } else if (AST.isUnion(y)) {
-    return intersectUnionMembers([x], y.types, path);
-  }
-  if (AST.isTypeLiteral(x)) {
-    if (AST.isTypeLiteral(y)) {
-      return [intersectTypeLiterals(x, y, path)];
-    } else if (AST.isTransformation(y) && AST.isTypeLiteralTransformation(y.transformation)) {
-      return [new AST.Transformation(intersectTypeLiterals(x, y.from, path), intersectTypeLiterals(AST.typeAST(x), y.to, path), new AST.TypeLiteralTransformation(y.transformation.propertySignatureTransformations))];
-    }
-  } else if (AST.isTransformation(x) && AST.isTypeLiteralTransformation(x.transformation)) {
-    if (AST.isTypeLiteral(y)) {
-      return [new AST.Transformation(intersectTypeLiterals(x.from, y, path), intersectTypeLiterals(x.to, AST.typeAST(y), path), new AST.TypeLiteralTransformation(x.transformation.propertySignatureTransformations))];
-    } else if (AST.isTransformation(y) && AST.isTypeLiteralTransformation(y.transformation)) {
-      return [new AST.Transformation(intersectTypeLiterals(x.from, y.from, path), intersectTypeLiterals(x.to, y.to, path), new AST.TypeLiteralTransformation(x.transformation.propertySignatureTransformations.concat(y.transformation.propertySignatureTransformations)))];
-    }
+  switch (x._tag) {
+    case "Union":
+      return intersectUnionMembers(x.types, getTypes(y), path);
+    case "Suspend":
+      return [new AST.Suspend(() => extendAST(x.f(), y, path))];
+    case "Refinement":
+      return addRefinementToMembers(x, intersectUnionMembers(getTypes(x.from), getTypes(y), path));
+    case "TypeLiteral":
+      {
+        switch (y._tag) {
+          case "Union":
+            return intersectUnionMembers([x], y.types, path);
+          case "Suspend":
+            return [new AST.Suspend(() => extendAST(x, y.f(), path))];
+          case "Refinement":
+            return addRefinementToMembers(y, intersectUnionMembers([x], getTypes(y.from), path));
+          case "TypeLiteral":
+            return [intersectTypeLiterals(x, y, path)];
+          case "Transformation":
+            {
+              if (AST.isTypeLiteralTransformation(y.transformation)) {
+                return [new AST.Transformation(intersectTypeLiterals(x, y.from, path), intersectTypeLiterals(AST.typeAST(x), y.to, path), new AST.TypeLiteralTransformation(y.transformation.propertySignatureTransformations))];
+              }
+              break;
+            }
+        }
+        break;
+      }
+    case "Transformation":
+      {
+        if (AST.isTypeLiteralTransformation(x.transformation)) {
+          switch (y._tag) {
+            case "TypeLiteral":
+              return [new AST.Transformation(intersectTypeLiterals(x.from, y, path), intersectTypeLiterals(x.to, AST.typeAST(y), path), new AST.TypeLiteralTransformation(x.transformation.propertySignatureTransformations))];
+            case "Transformation":
+              {
+                if (AST.isTypeLiteralTransformation(y.transformation)) {
+                  return [new AST.Transformation(intersectTypeLiterals(x.from, y.from, path), intersectTypeLiterals(x.to, y.to, path), new AST.TypeLiteralTransformation(x.transformation.propertySignatureTransformations.concat(y.transformation.propertySignatureTransformations)))];
+                }
+              }
+              break;
+          }
+        }
+        break;
+      }
   }
   throw new Error(getExtendErrorMessage(x, y, path));
 }));
 /**
+ * Extends a schema by adding additional fields or index signatures.
+ *
+ * 1) It only supports **structs**, refinements of structs, unions of structs, suspensions of structs
+ * (informally `Supported = Struct | Refinement of Supported | Union of Supported | suspend(() => Supported)`)
+ * 2) The arguments must represent disjoint types (e.g., `extend(Struct({ a: String }), Struct({ a: String })))` raises an error)
+ *
+ * @example
+ * import * as Schema from "@effect/schema/Schema"
+ *
+ * const schema = Schema.Struct({
+ *   a: Schema.String,
+ *   b: Schema.String
+ * })
+ *
+ * // const extended: S.Schema<{
+ * //     readonly [x: string]: string;
+ * //     readonly a: string;
+ * //     readonly b: string;
+ * //     readonly c: string;
+ * // }>
+ * const extended = Schema.asSchema(schema.pipe(
+ *   Schema.extend(Schema.Struct({ c: Schema.String })), // <= you can add more fields
+ *   Schema.extend(Schema.Record(Schema.String, Schema.String)) // <= you can add index signatures
+ * ))
+ *
  * @category combinators
  * @since 1.0.0
  */
@@ -1280,27 +1396,39 @@ const compose = exports.compose = /*#__PURE__*/(0, _Function.dual)(args => isSch
  */
 const suspend = f => make(new AST.Suspend(() => f().ast));
 exports.suspend = suspend;
+const makeRefineClass = (from, filter, ast) => class RefineClass extends make(ast) {
+  static annotations(annotations) {
+    return makeRefineClass(this.from, this.filter, AST.annotations(this.ast, toASTAnnotations(annotations)));
+  }
+  static from = from;
+  static filter = filter;
+  static make(a) {
+    return ParseResult.validateSync(this)(a);
+  }
+};
 function filter(predicate, annotations) {
-  return self => make(new AST.Refinement(self.ast, (a, options, ast) => {
-    const out = predicate(a, options, ast);
-    if (Predicate.isBoolean(out)) {
-      return out ? option_.none() : option_.some(new ParseResult.Type(ast, a));
+  return self => {
+    function filter(a, options, ast) {
+      const out = predicate(a, options, ast);
+      if (Predicate.isBoolean(out)) {
+        return out ? option_.none() : option_.some(new ParseResult.Type(ast, a));
+      }
+      if (Predicate.isString(out)) {
+        return option_.some(new ParseResult.Type(ast, a, out));
+      }
+      return out === undefined ? option_.none() : option_.some(out);
     }
-    return out;
-  }, toASTAnnotations(annotations)));
+    const ast = new AST.Refinement(self.ast, filter, toASTAnnotations(annotations));
+    return makeRefineClass(self, filter, ast);
+  };
 }
-class transformOrFailImpl extends SchemaImpl {
-  from;
-  to;
-  constructor(from, to, ast) {
-    super(ast);
-    this.from = from;
-    this.to = to;
+const makeTransformationClass = (from, to, ast) => class TransformationClass extends make(ast) {
+  static annotations(annotations) {
+    return makeTransformationClass(this.from, this.to, AST.annotations(this.ast, toASTAnnotations(annotations)));
   }
-  annotations(annotations) {
-    return new transformOrFailImpl(this.from, this.to, AST.annotations(this.ast, toASTAnnotations(annotations)));
-  }
-}
+  static from = from;
+  static to = to;
+};
 /**
  * Create a new `Schema` by transforming the input and output of an existing `Schema`
  * using the provided decoding functions.
@@ -1308,7 +1436,7 @@ class transformOrFailImpl extends SchemaImpl {
  * @category combinators
  * @since 1.0.0
  */
-const transformOrFail = exports.transformOrFail = /*#__PURE__*/(0, _Function.dual)(args => isSchema(args[0]) && isSchema(args[1]), (from, to, options) => new transformOrFailImpl(from, to, new AST.Transformation(from.ast, to.ast, new AST.FinalTransformation(options.decode, options.encode))));
+const transformOrFail = exports.transformOrFail = /*#__PURE__*/(0, _Function.dual)(args => isSchema(args[0]) && isSchema(args[1]), (from, to, options) => makeTransformationClass(from, to, new AST.Transformation(from.ast, to.ast, new AST.FinalTransformation(options.decode, options.encode))));
 /**
  * Create a new `Schema` by transforming the input and output of an existing `Schema`
  * using the provided mapping functions.
@@ -1420,10 +1548,10 @@ const examples = examples => self => self.annotations({
   [AST.ExamplesAnnotationId]: examples
 });
 exports.examples = examples;
-const $default = value => self => self.annotations({
+const default$ = value => self => self.annotations({
   [AST.DefaultAnnotationId]: value
 });
-exports.default = $default;
+exports.default = default$;
 /**
  * @category annotations
  * @since 1.0.0
@@ -1480,9 +1608,7 @@ const parseIssueTitle = f => self => self.annotations({
  * @since 1.0.0
  */
 exports.parseIssueTitle = parseIssueTitle;
-const rename = exports.rename = /*#__PURE__*/(0, _Function.dual)(2, (self, mapping) => {
-  return make(AST.rename(self.ast, mapping));
-});
+const rename = exports.rename = /*#__PURE__*/(0, _Function.dual)(2, (self, mapping) => make(AST.rename(self.ast, mapping)));
 /**
  * @category type id
  * @since 1.0.0
@@ -1500,6 +1626,9 @@ const TrimmedTypeId = exports.TrimmedTypeId = /*#__PURE__*/Symbol.for("@effect/s
 const trimmed = annotations => self => self.pipe(filter(a => a === a.trim(), {
   typeId: TrimmedTypeId,
   description: "a string with no leading or trailing whitespace",
+  jsonSchema: {
+    pattern: "^.*[a-zA-Z0-9]+.*$"
+  },
   ...annotations
 }));
 /**
@@ -1660,14 +1789,17 @@ const lowercased = annotations => self => self.pipe(filter(a => a === a.toLowerC
  * @since 1.0.0
  */
 exports.lowercased = lowercased;
-const Lowercased = exports.Lowercased = /*#__PURE__*/$String.pipe( /*#__PURE__*/lowercased({
+class Lowercased extends String$.pipe(lowercased({
   identifier: "Lowercased",
   title: "Lowercased"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category type id
  * @since 1.0.0
  */
+exports.Lowercased = Lowercased;
 const UppercasedTypeId = exports.UppercasedTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/Uppercased");
 /**
  * Verifies that a string is uppercased.
@@ -1685,14 +1817,17 @@ const uppercased = annotations => self => self.pipe(filter(a => a === a.toUpperC
  * @since 1.0.0
  */
 exports.uppercased = uppercased;
-const Uppercased = exports.Uppercased = /*#__PURE__*/$String.pipe( /*#__PURE__*/uppercased({
+class Uppercased extends String$.pipe(uppercased({
   identifier: "Uppercased",
   title: "Uppercased"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category type id
  * @since 1.0.0
  */
+exports.Uppercased = Uppercased;
 const LengthTypeId = exports.LengthTypeId = filters_.LengthTypeId;
 /**
  * @category string filters
@@ -1729,13 +1864,16 @@ const length = (length, annotations) => self => {
  * @since 1.0.0
  */
 exports.length = length;
-const Char = exports.Char = /*#__PURE__*/$String.pipe( /*#__PURE__*/length(1, {
+class Char extends String$.pipe(length(1, {
   identifier: "Char"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category string filters
  * @since 1.0.0
  */
+exports.Char = Char;
 const nonEmpty = annotations => minLength(1, {
   description: "a non empty string",
   ...annotations
@@ -1747,56 +1885,68 @@ const nonEmpty = annotations => minLength(1, {
  * @since 1.0.0
  */
 exports.nonEmpty = nonEmpty;
-const Lowercase = exports.Lowercase = /*#__PURE__*/transform($String, Lowercased, {
+class Lowercase extends transform(String$, Lowercased, {
   decode: s => s.toLowerCase(),
   encode: _Function.identity
 }).annotations({
   identifier: "Lowercase"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * This schema converts a string to uppercase.
  *
  * @category string transformations
  * @since 1.0.0
  */
-const Uppercase = exports.Uppercase = /*#__PURE__*/transform($String, Uppercased, {
+exports.Lowercase = Lowercase;
+class Uppercase extends transform(String$, Uppercased, {
   decode: s => s.toUpperCase(),
   encode: _Function.identity
 }).annotations({
   identifier: "Uppercase"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * @category string constructors
  * @since 1.0.0
  */
-const Trimmed = exports.Trimmed = /*#__PURE__*/$String.pipe( /*#__PURE__*/trimmed({
+exports.Uppercase = Uppercase;
+class Trimmed extends String$.pipe(trimmed({
   identifier: "Trimmed",
   title: "Trimmed"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * This schema allows removing whitespaces from the beginning and end of a string.
  *
  * @category string transformations
  * @since 1.0.0
  */
-const Trim = exports.Trim = /*#__PURE__*/transform($String, Trimmed, {
+exports.Trimmed = Trimmed;
+class Trim extends transform(String$, Trimmed, {
   decode: s => s.trim(),
   encode: _Function.identity
 }).annotations({
   identifier: "Trim"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * Returns a schema that allows splitting a string into an array of strings.
  *
  * @category string transformations
  * @since 1.0.0
  */
-const split = separator => transform($String, $Array($String), {
+exports.Trim = Trim;
+const split = separator => transform(String$, Array$(String$), {
   decode: string_.split(separator),
   encode: array_.join(separator)
 });
 exports.split = split;
-const JsonString = /*#__PURE__*/$String.annotations({
+const JsonString = /*#__PURE__*/String$.annotations({
   [AST.IdentifierAnnotationId]: "JsonString",
   [AST.TitleAnnotationId]: "JsonString",
   [AST.DescriptionAnnotationId]: "a JSON string"
@@ -1839,16 +1989,19 @@ const parseJson = (schema, o) => {
  * @since 1.0.0
  */
 exports.parseJson = parseJson;
-const NonEmpty = exports.NonEmpty = /*#__PURE__*/$String.pipe( /*#__PURE__*/nonEmpty({
+class NonEmpty extends String$.pipe(nonEmpty({
   identifier: "NonEmpty",
   title: "NonEmpty"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category type id
  * @since 1.0.0
  */
+exports.NonEmpty = NonEmpty;
 const UUIDTypeId = exports.UUIDTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/UUID");
-const uuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;
+const uuidRegexp = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;
 /**
  * Represents a Universally Unique Identifier (UUID).
  *
@@ -1857,19 +2010,22 @@ const uuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-
  * @category string constructors
  * @since 1.0.0
  */
-const UUID = exports.UUID = /*#__PURE__*/$String.pipe( /*#__PURE__*/pattern(uuidRegex, {
+class UUID extends String$.pipe(pattern(uuidRegexp, {
   typeId: UUIDTypeId,
   identifier: "UUID",
   title: "UUID",
   description: "a Universally Unique Identifier",
   arbitrary: () => fc => fc.uuid()
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category type id
  * @since 1.0.0
  */
+exports.UUID = UUID;
 const ULIDTypeId = exports.ULIDTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/ULID");
-const ulidRegex = /^[0-7][0-9A-HJKMNP-TV-Z]{25}$/i;
+const ulidRegexp = /^[0-7][0-9A-HJKMNP-TV-Z]{25}$/i;
 /**
  * Represents a Universally Unique Lexicographically Sortable Identifier (ULID).
  *
@@ -1879,17 +2035,20 @@ const ulidRegex = /^[0-7][0-9A-HJKMNP-TV-Z]{25}$/i;
  * @category string constructors
  * @since 1.0.0
  */
-const ULID = exports.ULID = /*#__PURE__*/$String.pipe( /*#__PURE__*/pattern(ulidRegex, {
+class ULID extends String$.pipe(pattern(ulidRegexp, {
   typeId: ULIDTypeId,
   identifier: "ULID",
   title: "ULID",
   description: "a Universally Unique Lexicographically Sortable Identifier",
   arbitrary: () => fc => fc.ulid()
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category type id
  * @since 1.0.0
  */
+exports.ULID = ULID;
 const FiniteTypeId = exports.FiniteTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/Finite");
 /**
  * Ensures that the provided value is a finite number.
@@ -2098,82 +2257,119 @@ const clamp = (minimum, maximum) => self => transform(self, self.pipe(typeSchema
   encode: _Function.identity
 });
 /**
- * This schema transforms a `string` into a `number` by parsing the string using the `Number` function.
+ * Transforms a `string` into a `number` by parsing the string using the `parse` function of the `effect/Number` module.
  *
  * It returns an error if the value can't be converted (for example when non-numeric characters are provided).
  *
  * The following special string values are supported: "NaN", "Infinity", "-Infinity".
  *
- * @category number constructors
+ * @category number transformations
  * @since 1.0.0
  */
 exports.clamp = clamp;
-const NumberFromString = exports.NumberFromString = /*#__PURE__*/transformOrFail($String, $Number, {
+const parseNumber = self => transformOrFail(self, Number$, {
+  strict: false,
   decode: (s, _, ast) => ParseResult.fromOption(number_.parse(s), () => new ParseResult.Type(ast, s)),
   encode: n => ParseResult.succeed(String(n))
-}).annotations({
-  identifier: "NumberFromString"
 });
 /**
+ * This schema transforms a `string` into a `number` by parsing the string using the `parse` function of the `effect/Number` module.
+ *
+ * It returns an error if the value can't be converted (for example when non-numeric characters are provided).
+ *
+ * The following special string values are supported: "NaN", "Infinity", "-Infinity".
+ *
  * @category number constructors
  * @since 1.0.0
  */
-const Finite = exports.Finite = /*#__PURE__*/$Number.pipe( /*#__PURE__*/finite({
+exports.parseNumber = parseNumber;
+class NumberFromString extends parseNumber(String$).annotations({
+  identifier: "NumberFromString"
+}) {
+  static annotations = super.annotations;
+}
+/**
+ * @category number constructors
+ * @since 1.0.0
+ */
+exports.NumberFromString = NumberFromString;
+class Finite extends Number$.pipe(finite({
   identifier: "Finite",
   title: "Finite"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category number constructors
  * @since 1.0.0
  */
-const Int = exports.Int = /*#__PURE__*/$Number.pipe( /*#__PURE__*/int({
+exports.Finite = Finite;
+class Int extends Number$.pipe(int({
   identifier: "Int",
   title: "Int"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category number constructors
  * @since 1.0.0
  */
-const NonNaN = exports.NonNaN = /*#__PURE__*/$Number.pipe( /*#__PURE__*/nonNaN({
+exports.Int = Int;
+class NonNaN extends Number$.pipe(nonNaN({
   identifier: "NonNaN",
   title: "NonNaN"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category number constructors
  * @since 1.0.0
  */
-const Positive = exports.Positive = /*#__PURE__*/$Number.pipe( /*#__PURE__*/positive({
+exports.NonNaN = NonNaN;
+class Positive extends Number$.pipe(positive({
   identifier: "Positive",
   title: "Positive"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category number constructors
  * @since 1.0.0
  */
-const Negative = exports.Negative = /*#__PURE__*/$Number.pipe( /*#__PURE__*/negative({
+exports.Positive = Positive;
+class Negative extends Number$.pipe(negative({
   identifier: "Negative",
   title: "Negative"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category number constructors
  * @since 1.0.0
  */
-const NonPositive = exports.NonPositive = /*#__PURE__*/$Number.pipe( /*#__PURE__*/nonPositive({
+exports.Negative = Negative;
+class NonPositive extends Number$.pipe(nonPositive({
   identifier: "NonPositive",
   title: "NonPositive"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category number constructors
  * @since 1.0.0
  */
-const NonNegative = exports.NonNegative = /*#__PURE__*/$Number.pipe( /*#__PURE__*/nonNegative({
+exports.NonPositive = NonPositive;
+class NonNegative extends Number$.pipe(nonNegative({
   identifier: "NonNegative",
   title: "NonNegative"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category type id
  * @since 1.0.0
  */
+exports.NonNegative = NonNegative;
 const JsonNumberTypeId = exports.JsonNumberTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/JsonNumber");
 /**
  * The `JsonNumber` is a schema for representing JSON numbers. It ensures that the provided value is a valid
@@ -2193,7 +2389,7 @@ const JsonNumberTypeId = exports.JsonNumberTypeId = /*#__PURE__*/Symbol.for("@ef
  * @category number constructors
  * @since 1.0.0
  */
-const JsonNumber = exports.JsonNumber = /*#__PURE__*/$Number.pipe( /*#__PURE__*/filter(n => !Number.isNaN(n) && Number.isFinite(n), {
+class JsonNumber extends Number$.pipe(filter(n => !Number.isNaN(n) && Number.isFinite(n), {
   typeId: JsonNumberTypeId,
   identifier: "JsonNumber",
   title: "JSON-compatible number",
@@ -2201,22 +2397,32 @@ const JsonNumber = exports.JsonNumber = /*#__PURE__*/$Number.pipe( /*#__PURE__*/
   jsonSchema: {
     type: "number"
   }
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category boolean transformations
  * @since 1.0.0
  */
-const Not = exports.Not = /*#__PURE__*/transform($Boolean, $Boolean, {
+exports.JsonNumber = JsonNumber;
+class Not extends transform(Boolean$, Boolean$, {
   decode: boolean_.not,
   encode: boolean_.not
-});
-const $Symbol = exports.Symbol = /*#__PURE__*/transform($String, SymbolFromSelf, {
+}) {
+  static annotations = super.annotations;
+}
+/** @ignore */
+exports.Not = Not;
+class Symbol$ extends transform(String$, SymbolFromSelf, {
   strict: false,
   decode: s => Symbol.for(s),
   encode: sym => sym.description
 }).annotations({
   identifier: "symbol"
-});
+}) {
+  static annotations = super.annotations;
+}
+exports.Symbol = Symbol$;
 /**
  * @category type id
  * @since 1.0.0
@@ -2356,13 +2562,17 @@ const clampBigInt = (minimum, maximum) => self => transform(self, self.pipe(type
   }),
   encode: _Function.identity
 });
+/** @ignore */
 exports.clampBigInt = clampBigInt;
-const bigint = exports.BigInt = /*#__PURE__*/transformOrFail($String, BigIntFromSelf, {
+class BigInt$ extends transformOrFail(String$, BigIntFromSelf, {
   decode: (s, _, ast) => ParseResult.fromOption(bigInt_.fromString(s), () => new ParseResult.Type(ast, s)),
   encode: n => ParseResult.succeed(String(n))
 }).annotations({
   identifier: "bigint"
-});
+}) {
+  static annotations = super.annotations;
+}
+exports.BigInt = BigInt$;
 /**
  * @category bigint constructors
  * @since 1.0.0
@@ -2375,7 +2585,7 @@ const PositiveBigIntFromSelf = exports.PositiveBigIntFromSelf = /*#__PURE__*/Big
  * @category bigint constructors
  * @since 1.0.0
  */
-const PositiveBigInt = exports.PositiveBigInt = /*#__PURE__*/bigint.pipe( /*#__PURE__*/positiveBigInt({
+const PositiveBigInt = exports.PositiveBigInt = /*#__PURE__*/BigInt$.pipe( /*#__PURE__*/positiveBigInt({
   identifier: "PositiveBigint",
   title: "PositiveBigint"
 }));
@@ -2391,7 +2601,7 @@ const NegativeBigIntFromSelf = exports.NegativeBigIntFromSelf = /*#__PURE__*/Big
  * @category bigint constructors
  * @since 1.0.0
  */
-const NegativeBigInt = exports.NegativeBigInt = /*#__PURE__*/bigint.pipe( /*#__PURE__*/negativeBigInt({
+const NegativeBigInt = exports.NegativeBigInt = /*#__PURE__*/BigInt$.pipe( /*#__PURE__*/negativeBigInt({
   identifier: "NegativeBigint",
   title: "NegativeBigint"
 }));
@@ -2407,7 +2617,7 @@ const NonPositiveBigIntFromSelf = exports.NonPositiveBigIntFromSelf = /*#__PURE_
  * @category bigint constructors
  * @since 1.0.0
  */
-const NonPositiveBigInt = exports.NonPositiveBigInt = /*#__PURE__*/bigint.pipe( /*#__PURE__*/nonPositiveBigInt({
+const NonPositiveBigInt = exports.NonPositiveBigInt = /*#__PURE__*/BigInt$.pipe( /*#__PURE__*/nonPositiveBigInt({
   identifier: "NonPositiveBigint",
   title: "NonPositiveBigint"
 }));
@@ -2423,7 +2633,7 @@ const NonNegativeBigIntFromSelf = exports.NonNegativeBigIntFromSelf = /*#__PURE_
  * @category bigint constructors
  * @since 1.0.0
  */
-const NonNegativeBigInt = exports.NonNegativeBigInt = /*#__PURE__*/bigint.pipe( /*#__PURE__*/nonNegativeBigInt({
+const NonNegativeBigInt = exports.NonNegativeBigInt = /*#__PURE__*/BigInt$.pipe( /*#__PURE__*/nonNegativeBigInt({
   identifier: "NonNegativeBigint",
   title: "NonNegativeBigint"
 }));
@@ -2435,44 +2645,55 @@ const NonNegativeBigInt = exports.NonNegativeBigInt = /*#__PURE__*/bigint.pipe(
  * @category bigint transformations
  * @since 1.0.0
  */
-const BigIntFromNumber = exports.BigIntFromNumber = /*#__PURE__*/transformOrFail($Number, BigIntFromSelf, {
+class BigIntFromNumber extends transformOrFail(Number$, BigIntFromSelf, {
   decode: (n, _, ast) => ParseResult.fromOption(bigInt_.fromNumber(n), () => new ParseResult.Type(ast, n)),
   encode: (b, _, ast) => ParseResult.fromOption(bigInt_.toNumber(b), () => new ParseResult.Type(ast, b))
 }).annotations({
   identifier: "BigintFromNumber"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * @category Secret constructors
  * @since 1.0.0
  */
-const SecretFromSelf = exports.SecretFromSelf = /*#__PURE__*/declare(secret_.isSecret, {
+exports.BigIntFromNumber = BigIntFromNumber;
+class SecretFromSelf extends declare(secret_.isSecret, {
   identifier: "SecretFromSelf",
   pretty: () => secret => String(secret),
   arbitrary: () => fc => fc.string().map(_ => secret_.fromString(_))
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * A schema that transforms a `string` into a `Secret`.
  *
  * @category Secret transformations
  * @since 1.0.0
  */
-const Secret = exports.Secret = /*#__PURE__*/transform($String, SecretFromSelf, {
+exports.SecretFromSelf = SecretFromSelf;
+class Secret extends transform(String$, SecretFromSelf, {
   strict: false,
   decode: str => secret_.fromString(str),
   encode: secret => secret_.value(secret)
 }).annotations({
   identifier: "Secret"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * @category Duration constructors
  * @since 1.0.0
  */
-const DurationFromSelf = exports.DurationFromSelf = /*#__PURE__*/declare(duration_.isDuration, {
+exports.Secret = Secret;
+class DurationFromSelf extends declare(duration_.isDuration, {
   identifier: "DurationFromSelf",
   pretty: () => String,
   arbitrary: () => fc => fc.oneof(fc.constant(duration_.infinity), fc.bigUint().map(_ => duration_.nanos(_)), fc.bigUint().map(_ => duration_.micros(_)), fc.maxSafeNat().map(_ => duration_.millis(_)), fc.maxSafeNat().map(_ => duration_.seconds(_)), fc.maxSafeNat().map(_ => duration_.minutes(_)), fc.maxSafeNat().map(_ => duration_.hours(_)), fc.maxSafeNat().map(_ => duration_.days(_)), fc.maxSafeNat().map(_ => duration_.weeks(_))),
   equivalence: () => duration_.Equivalence
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * A schema that transforms a `bigint` tuple into a `Duration`.
  * Treats the value as the number of nanoseconds.
@@ -2480,7 +2701,8 @@ const DurationFromSelf = exports.DurationFromSelf = /*#__PURE__*/declare(duratio
  * @category Duration transformations
  * @since 1.0.0
  */
-const DurationFromNanos = exports.DurationFromNanos = /*#__PURE__*/transformOrFail(BigIntFromSelf, DurationFromSelf, {
+exports.DurationFromSelf = DurationFromSelf;
+class DurationFromNanos extends transformOrFail(BigIntFromSelf, DurationFromSelf, {
   decode: nanos => ParseResult.succeed(duration_.nanos(nanos)),
   encode: (duration, _, ast) => option_.match(duration_.toNanos(duration), {
     onNone: () => ParseResult.fail(new ParseResult.Type(ast, duration)),
@@ -2488,7 +2710,9 @@ const DurationFromNanos = exports.DurationFromNanos = /*#__PURE__*/transformOrFa
   })
 }).annotations({
   identifier: "DurationFromNanos"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * A schema that transforms a `number` tuple into a `Duration`.
  * Treats the value as the number of milliseconds.
@@ -2496,12 +2720,16 @@ const DurationFromNanos = exports.DurationFromNanos = /*#__PURE__*/transformOrFa
  * @category Duration transformations
  * @since 1.0.0
  */
-const DurationFromMillis = exports.DurationFromMillis = /*#__PURE__*/transform($Number, DurationFromSelf, {
+exports.DurationFromNanos = DurationFromNanos;
+class DurationFromMillis extends transform(Number$, DurationFromSelf, {
   decode: ms => duration_.millis(ms),
   encode: n => duration_.toMillis(n)
 }).annotations({
   identifier: "DurationFromMillis"
-});
+}) {
+  static annotations = super.annotations;
+}
+exports.DurationFromMillis = DurationFromMillis;
 const hrTime = /*#__PURE__*/Tuple( /*#__PURE__*/NonNegative.pipe( /*#__PURE__*/finite({
   [AST.TitleAnnotationId]: "seconds",
   [AST.DescriptionAnnotationId]: "seconds"
@@ -2515,18 +2743,21 @@ const hrTime = /*#__PURE__*/Tuple( /*#__PURE__*/NonNegative.pipe( /*#__PURE__*/f
  * @category Duration transformations
  * @since 1.0.0
  */
-const Duration = exports.Duration = /*#__PURE__*/transform(hrTime, DurationFromSelf, {
+class Duration extends transform(hrTime, DurationFromSelf, {
   decode: ([seconds, nanos]) => duration_.nanos(BigInt(seconds) * BigInt(1e9) + BigInt(nanos)),
   encode: duration => duration_.toHrTime(duration)
 }).annotations({
   identifier: "Duration"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * Clamps a `Duration` between a minimum and a maximum value.
  *
  * @category Duration transformations
  * @since 1.0.0
  */
+exports.Duration = Duration;
 const clampDuration = (minimum, maximum) => self => transform(self, self.pipe(typeSchema, betweenDuration(minimum, maximum)), {
   strict: false,
   decode: self => duration_.clamp(self, {
@@ -2650,7 +2881,7 @@ const Uint8ArrayFromSelf = exports.Uint8ArrayFromSelf = /*#__PURE__*/declare(Pre
   arbitrary: () => fc => fc.uint8Array(),
   equivalence: () => array_.getEquivalence(Equal.equals)
 });
-const $Uint8Array = exports.Uint8Array = /*#__PURE__*/transform($Array($Number.pipe(between(0, 255, {
+const Uint8Array$ = exports.Uint8Array = /*#__PURE__*/transform(Array$(Number$.pipe(between(0, 255, {
   title: "8-bit unsigned integer",
   description: "a 8-bit unsigned integer"
 }))).annotations({
@@ -2661,8 +2892,7 @@ const $Uint8Array = exports.Uint8Array = /*#__PURE__*/transform($Array($Number.p
 }).annotations({
   identifier: "Uint8Array"
 });
-const makeEncodingTransformation = (id, decode, encode) => transformOrFail($String, Uint8ArrayFromSelf, {
-  strict: false,
+const makeEncodingTransformation = (id, decode, encode) => transformOrFail(String$, Uint8ArrayFromSelf, {
   decode: (s, _, ast) => either_.mapLeft(decode(s), decodeException => new ParseResult.Type(ast, s, decodeException.message)),
   encode: u => ParseResult.succeed(encode(u))
 }).annotations({
@@ -2793,7 +3023,7 @@ const validDate = annotations => self => self.pipe(filter(a => !Number.isNaN(a.g
  * @since 1.0.0
  */
 exports.validDate = validDate;
-const DateFromSelf = exports.DateFromSelf = /*#__PURE__*/declare(Predicate.isDate, {
+class DateFromSelf extends declare(Predicate.isDate, {
   identifier: "DateFromSelf",
   description: "a potentially invalid Date instance",
   pretty: () => date => `new Date(${JSON.stringify(date)})`,
@@ -2801,32 +3031,61 @@ const DateFromSelf = exports.DateFromSelf = /*#__PURE__*/declare(Predicate.isDat
     noInvalidDate: false
   }),
   equivalence: () => Equivalence.Date
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * Represents a schema for handling only **valid** dates. For example, `new Date("Invalid Date")` is rejected, even though it is an instance of `Date`.
  *
  * @category Date constructors
  * @since 1.0.0
  */
-const ValidDateFromSelf = exports.ValidDateFromSelf = /*#__PURE__*/DateFromSelf.pipe( /*#__PURE__*/validDate({
+exports.DateFromSelf = DateFromSelf;
+class ValidDateFromSelf extends DateFromSelf.pipe(validDate({
   identifier: "ValidDateFromSelf",
   description: "a valid Date instance"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * Represents a schema that converts a `string` into a (potentially invalid) `Date` (e.g., `new Date("Invalid Date")` is not rejected).
  *
  * @category Date transformations
  * @since 1.0.0
  */
-const DateFromString = exports.DateFromString = /*#__PURE__*/transform($String, DateFromSelf, {
+exports.ValidDateFromSelf = ValidDateFromSelf;
+class DateFromString extends transform(String$, DateFromSelf, {
   decode: s => new Date(s),
-  encode: n => n.toISOString()
+  encode: d => d.toISOString()
 }).annotations({
   identifier: "DateFromString"
-});
-const $Date = exports.Date = /*#__PURE__*/DateFromString.pipe( /*#__PURE__*/validDate({
+}) {
+  static annotations = super.annotations;
+}
+/** @ignore */
+exports.DateFromString = DateFromString;
+class Date$ extends DateFromString.pipe(validDate({
   identifier: "Date"
-}));
+})) {
+  static annotations = super.annotations;
+}
+exports.Date = Date$;
+/**
+ * Represents a schema that converts a `number` into a (potentially invalid) `Date` (e.g., `NaN`, `Infinity` and `-Infinity` are not rejected).
+ * Encoding will return `NaN` for invalid dates.
+ *
+ * @category Date transformations
+ * @since 1.0.0
+ */
+class DateFromNumber extends transform(Number$, DateFromSelf, {
+  decode: n => new Date(n),
+  encode: d => d.getTime()
+}).annotations({
+  identifier: "DateFromNumber"
+}) {
+  static annotations = super.annotations;
+}
+exports.DateFromNumber = DateFromNumber;
 const OptionNoneEncoded = /*#__PURE__*/Struct({
   _tag: Literal("None")
 }).annotations({
@@ -3056,8 +3315,8 @@ const readonlyMapEquivalence = (key, value) => {
 };
 const readonlyMapParse = decodeUnknown => (u, options, ast) => Predicate.isMap(u) ? ParseResult.map(decodeUnknown(Array.from(u.entries()), options), as => new Map(as)) : ParseResult.fail(new ParseResult.Type(ast, u));
 const mapFromSelf_ = (key, value, description) => declare([key, value], {
-  decode: (Key, Value) => readonlyMapParse(ParseResult.decodeUnknown($Array(Tuple(Key, Value)))),
-  encode: (Key, Value) => readonlyMapParse(ParseResult.encodeUnknown($Array(Tuple(Key, Value))))
+  decode: (Key, Value) => readonlyMapParse(ParseResult.decodeUnknown(Array$(Tuple(Key, Value)))),
+  encode: (Key, Value) => readonlyMapParse(ParseResult.encodeUnknown(Array$(Tuple(Key, Value))))
 }, {
   description,
   pretty: readonlyMapPretty,
@@ -3092,7 +3351,7 @@ const ReadonlyMap = ({
 }) => {
   const key_ = asSchema(key);
   const value_ = asSchema(value);
-  return transform($Array(Tuple(key_, value_)), ReadonlyMapFromSelf({
+  return transform(Array$(Tuple(key_, value_)), ReadonlyMapFromSelf({
     key: typeSchema(key_),
     value: typeSchema(value_)
   }), {
@@ -3107,7 +3366,7 @@ const map = ({
 }) => {
   const key_ = asSchema(key);
   const value_ = asSchema(value);
-  return transform($Array(Tuple(key_, value_)), MapFromSelf({
+  return transform(Array$(Tuple(key_, value_)), MapFromSelf({
     key: typeSchema(key_),
     value: typeSchema(value_)
   }), {
@@ -3124,8 +3383,8 @@ const readonlySetEquivalence = item => {
 };
 const readonlySetParse = decodeUnknown => (u, options, ast) => Predicate.isSet(u) ? ParseResult.map(decodeUnknown(Array.from(u.values()), options), as => new Set(as)) : ParseResult.fail(new ParseResult.Type(ast, u));
 const setFromSelf_ = (value, description) => declare([value], {
-  decode: item => readonlySetParse(ParseResult.decodeUnknown($Array(item))),
-  encode: item => readonlySetParse(ParseResult.encodeUnknown($Array(item)))
+  decode: item => readonlySetParse(ParseResult.decodeUnknown(Array$(item))),
+  encode: item => readonlySetParse(ParseResult.encodeUnknown(Array$(item)))
 }, {
   description,
   pretty: readonlySetPretty,
@@ -3150,7 +3409,7 @@ const SetFromSelf = value => setFromSelf_(value, `Set<${format(value)}>`);
 exports.SetFromSelf = SetFromSelf;
 const ReadonlySet = value => {
   const value_ = asSchema(value);
-  return transform($Array(value_), ReadonlySetFromSelf(typeSchema(value_)), {
+  return transform(Array$(value_), ReadonlySetFromSelf(typeSchema(value_)), {
     decode: as => new Set(as),
     encode: set => Array.from(set)
   });
@@ -3158,7 +3417,7 @@ const ReadonlySet = value => {
 exports.ReadonlySet = ReadonlySet;
 const set = value => {
   const value_ = asSchema(value);
-  return transform($Array(value_), SetFromSelf(typeSchema(value_)), {
+  return transform(Array$(value_), SetFromSelf(typeSchema(value_)), {
     decode: as => new Set(as),
     encode: set => Array.from(set)
   });
@@ -3170,17 +3429,20 @@ const bigDecimalArbitrary = () => fc => fc.tuple(fc.bigInt(), fc.integer()).map(
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-const BigDecimalFromSelf = exports.BigDecimalFromSelf = /*#__PURE__*/declare(bigDecimal_.isBigDecimal, {
+class BigDecimalFromSelf extends declare(bigDecimal_.isBigDecimal, {
   identifier: "BigDecimalFromSelf",
   pretty: bigDecimalPretty,
   arbitrary: bigDecimalArbitrary,
   equivalence: () => bigDecimal_.Equivalence
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-const BigDecimal = exports.BigDecimal = /*#__PURE__*/transformOrFail($String, BigDecimalFromSelf, {
+exports.BigDecimalFromSelf = BigDecimalFromSelf;
+class BigDecimal extends transformOrFail(String$, BigDecimalFromSelf, {
   decode: (num, _, ast) => bigDecimal_.fromString(num).pipe(option_.match({
     onNone: () => ParseResult.fail(new ParseResult.Type(ast, num)),
     onSome: val => ParseResult.succeed(bigDecimal_.normalize(val))
@@ -3188,7 +3450,9 @@ const BigDecimal = exports.BigDecimal = /*#__PURE__*/transformOrFail($String, Bi
   encode: val => ParseResult.succeed(bigDecimal_.format(bigDecimal_.normalize(val)))
 }).annotations({
   identifier: "BigDecimal"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * A schema that transforms a `number` into a `BigDecimal`.
  * When encoding, this Schema will produce incorrect results if the BigDecimal exceeds the 64-bit range of a number.
@@ -3196,16 +3460,20 @@ const BigDecimal = exports.BigDecimal = /*#__PURE__*/transformOrFail($String, Bi
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-const BigDecimalFromNumber = exports.BigDecimalFromNumber = /*#__PURE__*/transformOrFail($Number, BigDecimalFromSelf, {
+exports.BigDecimal = BigDecimal;
+class BigDecimalFromNumber extends transformOrFail(Number$, BigDecimalFromSelf, {
   decode: num => ParseResult.succeed(bigDecimal_.fromNumber(num)),
   encode: val => ParseResult.succeed(bigDecimal_.unsafeToNumber(val))
 }).annotations({
   identifier: "BigDecimalFromNumber"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * @category type id
  * @since 1.0.0
  */
+exports.BigDecimalFromNumber = BigDecimalFromNumber;
 const GreaterThanBigDecimalTypeId = exports.GreaterThanBigDecimalTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/GreaterThanBigDecimal");
 /**
  * @category BigDecimal filters
@@ -3434,8 +3702,8 @@ const chunkParse = decodeUnknown => (u, options, ast) => chunk_.isChunk(u) ? chu
  */
 const ChunkFromSelf = value => {
   return declare([value], {
-    decode: item => chunkParse(ParseResult.decodeUnknown($Array(item))),
-    encode: item => chunkParse(ParseResult.encodeUnknown($Array(item)))
+    decode: item => chunkParse(ParseResult.decodeUnknown(Array$(item))),
+    encode: item => chunkParse(ParseResult.encodeUnknown(Array$(item)))
   }, {
     description: `Chunk<${format(value)}>`,
     pretty: chunkPretty,
@@ -3450,7 +3718,7 @@ const ChunkFromSelf = value => {
 exports.ChunkFromSelf = ChunkFromSelf;
 const Chunk = value => {
   const value_ = asSchema(value);
-  return transform($Array(value_), ChunkFromSelf(typeSchema(value_)), {
+  return transform(Array$(value_), ChunkFromSelf(typeSchema(value_)), {
     decode: as => as.length === 0 ? chunk_.empty() : chunk_.fromIterable(as),
     encode: chunk_.toReadonlyArray
   });
@@ -3464,16 +3732,14 @@ const dataParse = decodeUnknown => (u, options, ast) => Equal.isEqual(u) ? Parse
  * @category Data transformations
  * @since 1.0.0
  */
-const DataFromSelf = item => {
-  return declare([item], {
-    decode: item => dataParse(ParseResult.decodeUnknown(item)),
-    encode: item => dataParse(ParseResult.encodeUnknown(item))
-  }, {
-    description: `Data<${format(item)}>`,
-    pretty: dataPretty,
-    arbitrary: dataArbitrary
-  });
-};
+const DataFromSelf = item => declare([item], {
+  decode: item => dataParse(ParseResult.decodeUnknown(item)),
+  encode: item => dataParse(ParseResult.encodeUnknown(item))
+}, {
+  description: `Data<${format(item)}>`,
+  pretty: dataPretty,
+  arbitrary: dataArbitrary
+});
 /**
  * @category Data transformations
  * @since 1.0.0
@@ -3484,54 +3750,71 @@ const Data = item => transform(item, DataFromSelf(typeSchema(item)), {
   decode: toData,
   encode: a => Array.isArray(a) ? Array.from(a) : Object.assign({}, a)
 });
+exports.Data = Data;
+const isField = u => isSchema(u) || isPropertySignature(u);
+const isFields = fields => util_.ownKeys(fields).every(key => isField(fields[key]));
+const getFields = hasFields => "fields" in hasFields ? hasFields.fields : getFields(hasFields.from);
+const getSchemaFromFieldsOr = fieldsOr => isFields(fieldsOr) ? Struct(fieldsOr) : isSchema(fieldsOr) ? fieldsOr : Struct(getFields(fieldsOr));
+const getFieldsFromFieldsOr = fieldsOr => isFields(fieldsOr) ? fieldsOr : getFields(fieldsOr);
 /**
  * @category classes
  * @since 1.0.0
  */
-exports.Data = Data;
-const Class = identifier => (fields, annotations) => makeClass({
+const Class = identifier => (fieldsOr, annotations) => makeClass({
   kind: "Class",
   identifier,
-  fields,
+  schema: getSchemaFromFieldsOr(fieldsOr),
+  fields: getFieldsFromFieldsOr(fieldsOr),
   Base: data_.Class,
   annotations
 });
+/** @internal */
+exports.Class = Class;
+const getClassTag = tag => withConstructorDefault(propertySignature(Literal(tag)), () => tag);
 /**
  * @category classes
  * @since 1.0.0
  */
-exports.Class = Class;
-const TaggedClass = identifier => (tag, fields, annotations) => makeClass({
-  kind: "TaggedClass",
-  identifier: identifier ?? tag,
-  fields: extendFields({
-    _tag: Literal(tag)
-  }, fields),
-  Base: data_.Class,
-  tag: {
-    _tag: tag
-  },
-  annotations
-});
+exports.getClassTag = getClassTag;
+const TaggedClass = identifier => (tag, fieldsOr, annotations) => {
+  const fields = getFieldsFromFieldsOr(fieldsOr);
+  const schema = getSchemaFromFieldsOr(fieldsOr);
+  const newFields = {
+    _tag: getClassTag(tag)
+  };
+  const taggedFields = extendFields(newFields, fields);
+  return class TaggedClass extends makeClass({
+    kind: "TaggedClass",
+    identifier: identifier ?? tag,
+    schema: extend(schema, Struct(newFields)),
+    fields: taggedFields,
+    Base: data_.Class,
+    annotations
+  }) {
+    static _tag = tag;
+  };
+};
 /**
  * @category classes
  * @since 1.0.0
  */
 exports.TaggedClass = TaggedClass;
-const TaggedError = identifier => (tag, fields, annotations) => {
+const TaggedError = identifier => (tag, fieldsOr, annotations) => {
   class Base extends data_.Error {}
   ;
   Base.prototype.name = tag;
-  return makeClass({
+  const fields = getFieldsFromFieldsOr(fieldsOr);
+  const schema = getSchemaFromFieldsOr(fieldsOr);
+  const newFields = {
+    _tag: getClassTag(tag)
+  };
+  const taggedFields = extendFields(newFields, fields);
+  return class TaggedErrorClass extends makeClass({
     kind: "TaggedError",
     identifier: identifier ?? tag,
-    fields: extendFields({
-      _tag: Literal(tag)
-    }, fields),
+    schema: extend(schema, Struct(newFields)),
+    fields: taggedFields,
     Base,
-    tag: {
-      _tag: tag
-    },
     annotations,
     toStringOverride(self) {
       if (Predicate.isString(self.message) && self.message.length > 0) {
@@ -3542,7 +3825,9 @@ const TaggedError = identifier => (tag, fields, annotations) => {
         return message;
       }
     }
-  });
+  }) {
+    static _tag = tag;
+  };
 };
 /**
  * @category classes
@@ -3561,18 +3846,19 @@ const TaggedRequest = identifier => (tag, Failure, Success, fields, annotations)
       };
     }
   }
-  return makeClass({
+  const taggedFields = extendFields({
+    _tag: getClassTag(tag)
+  }, fields);
+  return class TaggedRequestClass extends makeClass({
     kind: "TaggedRequest",
     identifier: identifier ?? tag,
-    fields: extendFields({
-      _tag: Literal(tag)
-    }, fields),
+    schema: Struct(taggedFields),
+    fields: taggedFields,
     Base: SerializableRequest,
-    tag: {
-      _tag: tag
-    },
     annotations
-  });
+  }) {
+    static _tag = tag;
+  };
 };
 exports.TaggedRequest = TaggedRequest;
 const extendFields = (a, b) => {
@@ -3587,34 +3873,37 @@ const extendFields = (a, b) => {
   }
   return out;
 };
+// does not overwrite existing title annotation
+const orElseTitleAnnotation = (schema, title) => {
+  const annotation = AST.getTitleAnnotation(schema.ast);
+  if (option_.isNone(annotation)) {
+    return schema.annotations({
+      title
+    });
+  }
+  return schema;
+};
 const makeClass = ({
   Base,
   annotations,
   fields,
-  fromSchema,
   identifier,
   kind,
-  tag,
+  schema,
   toStringOverride
 }) => {
-  const classSymbol = Symbol.for(`@effect/schema/${kind}/${identifier}`);
-  const schema = fromSchema ?? Struct(fields);
-  const from = option_.match(AST.getTitleAnnotation(schema.ast), {
-    onNone: () => schema.annotations({
-      title: `${identifier} (Encoded side)`
-    }),
-    onSome: () => schema
-  });
-  return class extends Base {
+  return class Class extends Base {
     constructor(props = {}, disableValidation = false) {
-      if (tag !== undefined) {
-        props = {
-          ...props,
-          ...tag
-        };
+      props = {
+        ...props
+      };
+      if (kind !== "Class") {
+        delete props["_tag"];
       }
+      props = lazilyMergeDefaults(fields, props);
       if (disableValidation !== true) {
-        props = ParseResult.validateSync(schema)(props);
+        // TODO: move once we adopt required identifier
+        props = ParseResult.validateSync(Class.validateSchema)(props);
       }
       super(props, true);
     }
@@ -3622,14 +3911,22 @@ const makeClass = ({
     // Schema interface
     // ----------------
     static [TypeId] = variance;
+    static get validateSchema() {
+      return orElseTitleAnnotation(schema, `${this.identifier} (Constructor)`);
+    }
+    static get encodedSide() {
+      return orElseTitleAnnotation(schema, `${this.identifier} (Encoded side)`);
+    }
     static get ast() {
-      const toSchema = typeSchema(schema);
-      const guard = ParseResult.is(toSchema);
-      const fallbackInstanceOf = u => Predicate.hasProperty(u, classSymbol) && guard(u);
-      const encode = ParseResult.encodeUnknown(toSchema);
-      const declaration = declare([toSchema], {
+      // TODO: can we cache this?
+      const identifier = this.identifier;
+      // TODO: move once we adopt required identifier
+      const typeSide = orElseTitleAnnotation(typeSchema(schema), `${identifier} (Type side)`);
+      const guard = ParseResult.is(typeSide);
+      const fallbackInstanceOf = u => Predicate.hasProperty(u, this.classSymbol) && guard(u);
+      const declaration = declare([typeSide], {
         decode: () => (input, _, ast) => input instanceof this || fallbackInstanceOf(input) ? ParseResult.succeed(input) : ParseResult.fail(new ParseResult.Type(ast, input)),
-        encode: () => (input, options) => input instanceof this ? ParseResult.succeed(input) : ParseResult.map(encode(input, options), props => new this(props, true))
+        encode: () => (input, options) => input instanceof this ? ParseResult.succeed(input) : ParseResult.map(ParseResult.encodeUnknown(typeSide)(input, options), props => new this(props, true))
       }, {
         identifier,
         title: identifier,
@@ -3637,10 +3934,10 @@ const makeClass = ({
         pretty: pretty => self => `${identifier}(${pretty(self)})`,
         arbitrary: arb => fc => arb(fc).map(props => new this(props)),
         equivalence: _Function.identity,
-        [AST.SurrogateAnnotationId]: toSchema.ast,
+        [AST.SurrogateAnnotationId]: typeSide.ast,
         ...annotations
       });
-      const transformation = transform(from, declaration, {
+      const transformation = transform(this.encodedSide, declaration, {
         decode: input => new this(input, true),
         encode: _Function.identity
       }).annotations({
@@ -3655,7 +3952,7 @@ const makeClass = ({
       return make(this.ast).annotations(annotations);
     }
     static toString() {
-      return `(${String(from)} <-> ${identifier})`;
+      return `(${String(this.encodedSide)} <-> ${this.identifier})`;
     }
     // ----------------
     // Class interface
@@ -3663,16 +3960,18 @@ const makeClass = ({
     static fields = {
       ...fields
     };
-    static identifier = identifier;
+    static customIdentifier;
     static extend(identifier) {
-      return (newFields, annotations) => {
+      return (newFieldsOr, annotations) => {
+        const newFields = getFieldsFromFieldsOr(newFieldsOr);
+        const newSchema = getSchemaFromFieldsOr(newFieldsOr);
         const extendedFields = extendFields(fields, newFields);
         return makeClass({
           kind,
           identifier,
+          schema: extend(schema, newSchema),
           fields: extendedFields,
           Base: this,
-          tag,
           annotations
         });
       };
@@ -3683,10 +3982,9 @@ const makeClass = ({
         return makeClass({
           kind,
           identifier,
-          fromSchema: transformOrFail(schema, typeSchema(Struct(transformedFields)), options),
+          schema: transformOrFail(schema, typeSchema(Struct(transformedFields)), options),
           fields: transformedFields,
           Base: this,
-          tag,
           annotations
         });
       };
@@ -3697,10 +3995,9 @@ const makeClass = ({
         return makeClass({
           kind,
           identifier,
-          fromSchema: transformOrFail(encodedSchema(schema), Struct(transformedFields), options),
+          schema: transformOrFail(encodedSchema(schema), Struct(transformedFields), options),
           fields: transformedFields,
           Base: this,
-          tag,
           annotations
         });
       };
@@ -3708,8 +4005,11 @@ const makeClass = ({
     // ----------------
     // other
     // ----------------
-    get [classSymbol]() {
-      return classSymbol;
+    static get identifier() {
+      return identifier || this.customIdentifier || this.name;
+    }
+    static get classSymbol() {
+      return Symbol.for(`@effect/schema/${kind}/${this.identifier}`);
     }
     toString() {
       if (toStringOverride !== undefined) {
@@ -3718,7 +4018,7 @@ const makeClass = ({
           return out;
         }
       }
-      return `${identifier}({ ${util_.ownKeys(fields).map(p => `${util_.formatPropertyKey(p)}: ${util_.formatUnknown(this[p])}`).join(", ")} })`;
+      return `${this.identifier}({ ${util_.ownKeys(fields).map(p => `${util_.formatPropertyKey(p)}: ${util_.formatUnknown(this[p])}`).join(", ")} })`;
     }
   };
 };
@@ -3780,11 +4080,14 @@ const fiberIdPretty = fiberId => {
  * @category FiberId constructors
  * @since 1.0.0
  */
-const FiberIdFromSelf = exports.FiberIdFromSelf = /*#__PURE__*/declare(fiberId_.isFiberId, {
+class FiberIdFromSelf extends declare(fiberId_.isFiberId, {
   identifier: "FiberIdFromSelf",
   pretty: () => fiberIdPretty,
   arbitrary: () => fiberIdArbitrary
-});
+}) {
+  static annotations = super.annotations;
+}
+exports.FiberIdFromSelf = FiberIdFromSelf;
 const fiberIdDecode = input => {
   switch (input._tag) {
     case "None":
@@ -3819,12 +4122,15 @@ const fiberIdEncode = input => {
  * @category FiberId transformations
  * @since 1.0.0
  */
-const FiberId = exports.FiberId = /*#__PURE__*/transform(FiberIdEncoded, FiberIdFromSelf, {
+class FiberId extends transform(FiberIdEncoded, FiberIdFromSelf, {
   decode: fiberIdDecode,
   encode: fiberIdEncode
 }).annotations({
   identifier: "FiberId"
-});
+}) {
+  static annotations = super.annotations;
+}
+exports.FiberId = FiberId;
 const causeDieEncoded = defect => Struct({
   _tag: Literal("Die"),
   defect
@@ -4118,8 +4424,8 @@ const hashSetParse = decodeUnknown => (u, options, ast) => hashSet_.isHashSet(u)
  */
 const HashSetFromSelf = value => {
   return declare([value], {
-    decode: item => hashSetParse(ParseResult.decodeUnknown($Array(item))),
-    encode: item => hashSetParse(ParseResult.encodeUnknown($Array(item)))
+    decode: item => hashSetParse(ParseResult.decodeUnknown(Array$(item))),
+    encode: item => hashSetParse(ParseResult.encodeUnknown(Array$(item)))
   }, {
     description: `HashSet<${format(value)}>`,
     pretty: hashSetPretty,
@@ -4134,7 +4440,7 @@ const HashSetFromSelf = value => {
 exports.HashSetFromSelf = HashSetFromSelf;
 const HashSet = value => {
   const value_ = asSchema(value);
-  return transform($Array(value_), HashSetFromSelf(typeSchema(value_)), {
+  return transform(Array$(value_), HashSetFromSelf(typeSchema(value_)), {
     decode: as => hashSet_.fromIterable(as),
     encode: set => Array.from(set)
   });
@@ -4156,8 +4462,8 @@ const HashMapFromSelf = ({
   value
 }) => {
   return declare([key, value], {
-    decode: (key, value) => hashMapParse(ParseResult.decodeUnknown($Array(Tuple(key, value)))),
-    encode: (key, value) => hashMapParse(ParseResult.encodeUnknown($Array(Tuple(key, value))))
+    decode: (key, value) => hashMapParse(ParseResult.decodeUnknown(Array$(Tuple(key, value)))),
+    encode: (key, value) => hashMapParse(ParseResult.encodeUnknown(Array$(Tuple(key, value))))
   }, {
     description: `HashMap<${format(key)}, ${format(value)}>`,
     pretty: hashMapPretty,
@@ -4176,7 +4482,7 @@ const HashMap = ({
 }) => {
   const key_ = asSchema(key);
   const value_ = asSchema(value);
-  return transform($Array(Tuple(key_, value_)), HashMapFromSelf({
+  return transform(Array$(Tuple(key_, value_)), HashMapFromSelf({
     key: typeSchema(key_),
     value: typeSchema(value_)
   }), {
@@ -4198,8 +4504,8 @@ const listParse = decodeUnknown => (u, options, ast) => list_.isList(u) ? ParseR
  */
 const ListFromSelf = value => {
   return declare([value], {
-    decode: item => listParse(ParseResult.decodeUnknown($Array(item))),
-    encode: item => listParse(ParseResult.encodeUnknown($Array(item)))
+    decode: item => listParse(ParseResult.decodeUnknown(Array$(item))),
+    encode: item => listParse(ParseResult.encodeUnknown(Array$(item)))
   }, {
     description: `List<${format(value)}>`,
     pretty: listPretty,
@@ -4214,7 +4520,7 @@ const ListFromSelf = value => {
 exports.ListFromSelf = ListFromSelf;
 const List = value => {
   const value_ = asSchema(value);
-  return transform($Array(value_), ListFromSelf(typeSchema(value_)), {
+  return transform(Array$(value_), ListFromSelf(typeSchema(value_)), {
     decode: as => list_.fromIterable(as),
     encode: set => Array.from(set)
   });
@@ -4229,8 +4535,8 @@ const sortedSetParse = (decodeUnknown, ord) => (u, options, ast) => sortedSet_.i
  */
 const SortedSetFromSelf = (value, ordA, ordI) => {
   return declare([value], {
-    decode: item => sortedSetParse(ParseResult.decodeUnknown($Array(item)), ordA),
-    encode: item => sortedSetParse(ParseResult.encodeUnknown($Array(item)), ordI)
+    decode: item => sortedSetParse(ParseResult.decodeUnknown(Array$(item)), ordA),
+    encode: item => sortedSetParse(ParseResult.encodeUnknown(Array$(item)), ordI)
   }, {
     description: `SortedSet<${format(value)}>`,
     pretty: sortedSetPretty,
@@ -4246,7 +4552,7 @@ exports.SortedSetFromSelf = SortedSetFromSelf;
 const SortedSet = (value, ordA) => {
   const value_ = asSchema(value);
   const to = typeSchema(value_);
-  return transform($Array(value_), SortedSetFromSelf(to, ordA, ordA), {
+  return transform(Array$(value_), SortedSetFromSelf(to, ordA, ordA), {
     decode: as => sortedSet_.fromIterable(as, ordA),
     encode: set => Array.from(sortedSet_.values(set))
   });
@@ -4260,10 +4566,13 @@ const SortedSet = (value, ordA) => {
  * @since 1.0.0
  */
 exports.SortedSet = SortedSet;
-const BooleanFromUnknown = exports.BooleanFromUnknown = /*#__PURE__*/transform(Unknown, $Boolean, {
+class BooleanFromUnknown extends transform(Unknown, Boolean$, {
   decode: Predicate.isTruthy,
   encode: _Function.identity
 }).annotations({
   identifier: "BooleanFromUnknown"
-});
+}) {
+  static annotations = super.annotations;
+}
+exports.BooleanFromUnknown = BooleanFromUnknown;
 //# sourceMappingURL=Schema.js.map
\ No newline at end of file
diff --git a/dist/cjs/Schema.js.map b/dist/cjs/Schema.js.map
index 7adedac826acb8df6133c6c9505ed86b870030be..7787a62002203f2905feb834ea080c66878694d0 100644
--- a/dist/cjs/Schema.js.map
+++ b/dist/cjs/Schema.js.map
@@ -1 +1 @@
-{"version":3,"file":"Schema.js","names":["array_","_interopRequireWildcard","require","bigDecimal_","bigInt_","boolean_","brand_","cause_","chunk_","data_","duration_","Effect","either_","Encoding","Equal","Equivalence","exit_","fiberId_","_Function","hashMap_","hashSet_","list_","number_","option_","_Pipeable","Predicate","Request","secret_","sortedSet_","string_","arbitrary_","AST","equivalence_","errors_","filters_","serializable_","util_","ParseResult","pretty_","TreeFormatter","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","TypeId","exports","Symbol","for","variance","_A","_","_I","_R","toASTAnnotations","annotations","out","custom","getOwnPropertySymbols","sym","typeId","undefined","TypeAnnotationId","id","annotation","move","from","to","MessageAnnotationId","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","DocumentationAnnotationId","JSONSchemaAnnotationId","ArbitraryHookId","PrettyHookId","EquivalenceHookId","ConcurrencyAnnotationId","BatchingAnnotationId","ParseIssueTitleAnnotationId","SchemaImpl","ast","constructor","pipe","pipeArguments","arguments","toString","String","asSchema","schema","hash","format","encodedSchema","make","encodedAST","typeSchema","typeAST","encodeUnknown","options","overrideOptions","mapError","parseError","encodeUnknownEither","mapLeft","encodeUnknownPromise","parser","runPromise","encode","encodeEither","encodePromise","decodeUnknown","decodeUnknownEither","decodeUnknownPromise","decode","decodeEither","decodePromise","validate","validateEither","validatePromise","isSchema","hasProperty","isObject","LiteralImpl","literals","isMembers","Union","mapMembers","literal","Literal","isNonEmptyReadonlyArray","Never","pickLiteral","_schema","UniqueSymbolFromSelf","symbol","UniqueSymbol","EnumsImpl","enums","Enums","keys","filter","key","map","TemplateLiteral","head","tail","types","getTemplateLiterals","span","flatMap","b","combineTemplateLiterals","isLiteral","spans","modifyNonEmptyLast","TemplateLiteralSpan","type","appendAll","_tag","Error","declareConstructor","typeParameters","Declaration","tp","declarePrimitive","is","input","succeed","fail","Type","declare","Array","isArray","BrandTypeId","fromBrand","self","Refinement","either","isLeft","some","left","v","message","join","none","InstanceOfTypeId","instanceOf","title","name","description","pretty","Undefined","undefinedKeyword","Void","voidKeyword","Null","null","neverKeyword","Unknown","unknownKeyword","Any","anyKeyword","$String","stringKeyword","$Number","Number","numberKeyword","$Boolean","Boolean","booleanKeyword","BigIntFromSelf","bigIntKeyword","SymbolFromSelf","symbolKeyword","$Object","objectKeyword","UnionImpl","members","m","NullOr","UndefinedOr","NullishOr","keyof","optionalElement","OptionalElementImpl","TupleTypeImpl","elements","rest","TupleType","Element","Tuple","args","slice","$ArrayImpl","value","$Array","NonEmptyArrayImpl","NonEmptyArray","formatToken","isOptional","PropertySignatureDeclaration","isReadonly","token","FromPropertySignature","fromKey","ToPropertySignature","formatPropertyKey","p","isString","JSON","stringify","PropertySignatureTransformation","PropertySignatureTypeId","propertySignatureAnnotations_","PropertySignatureImpl","_Key","_EncodedToken","_TypeToken","propertySignature","dual","identity","optionalToRequired","o","optionalToOptional","optional","isExact","exact","defaultValue","isNullable","nullable","asOption","as","match","onNone","onSome","OptionFromSelf","isNotNull","isNotUndefined","isPropertySignature","TypeLiteralImpl","fields","records","ownKeys","pss","length","transformations","field","toAnnotations","push","PropertySignature","issFrom","issTo","indexSignatures","propertySignatures","record","forEach","ps","IndexSignature","parameter","Transformation","TypeLiteral","TypeLiteralTransformation","iss","Struct","$RecordImpl","Record","pick","omit","pluck","getPropertyKeyIndexedAccess","orUndefined","transform","ak","makeBrandSchema","validateEither_","refined","unbranded","onLeft","error","formatErrorSync","onRight","setPrototypeOf","assign","getPrototypeOf","asBrandSchema","brand","brandAnnotation","getBrandAnnotation","brands","formatUnknown","BrandAnnotationId","partial","required","mutable","getExtendErrorMessage","x","y","path","getAPIErrorMessage","intersectTypeLiterals","isTypeLiteral","findIndex","extendAST","concat","intersectUnionMembers","xs","ys","isUnion","isTransformation","isTypeLiteralTransformation","transformation","propertySignatureTransformations","extend","that","compose","suspend","f","Suspend","predicate","isBoolean","transformOrFailImpl","transformOrFail","FinalTransformation","fromA","toI","transformLiteral","transformLiterals","pairs","attachPropertySignature","attached","isSymbol","identifier","examples","$default","documentation","jsonSchema","equivalence","concurrency","batching","parseIssueTitle","rename","mapping","TrimmedTypeId","trimmed","trim","MaxLengthTypeId","maxLength","MinLengthTypeId","minLength","PatternTypeId","pattern","regex","source","lastIndex","test","arbitrary","fc","stringMatching","StartsWithTypeId","startsWith","EndsWithTypeId","endsWith","IncludesTypeId","includes","searchString","LowercasedTypeId","lowercased","toLowerCase","Lowercased","UppercasedTypeId","uppercased","toUpperCase","Uppercased","LengthTypeId","Math","max","floor","min","Char","nonEmpty","Lowercase","s","Uppercase","Trimmed","Trim","split","separator","JsonString","parseJson","try","parse","reviver","catch","replacer","space","NonEmpty","UUIDTypeId","uuidRegex","UUID","uuid","ULIDTypeId","ulidRegex","ULID","ulid","FiniteTypeId","finite","isFinite","GreaterThanTypeId","greaterThan","exclusiveMinimum","GreaterThanOrEqualToTypeId","greaterThanOrEqualTo","minimum","MultipleOfTypeId","multipleOf","divisor","remainder","abs","IntTypeId","int","isSafeInteger","LessThanTypeId","lessThan","exclusiveMaximum","LessThanOrEqualToTypeId","lessThanOrEqualTo","maximum","BetweenTypeId","between","NonNaNTypeId","nonNaN","isNaN","positive","negative","nonPositive","nonNegative","clamp","strict","NumberFromString","fromOption","Finite","Int","NonNaN","Positive","Negative","NonPositive","NonNegative","JsonNumberTypeId","JsonNumber","Not","not","$Symbol","GreaterThanBigIntTypeId","GreaterThanBigintTypeId","greaterThanBigInt","GreaterThanOrEqualToBigIntTypeId","greaterThanOrEqualToBigInt","LessThanBigIntTypeId","lessThanBigInt","LessThanOrEqualToBigIntTypeId","lessThanOrEqualToBigInt","BetweenBigIntTypeId","BetweenBigintTypeId","betweenBigInt","positiveBigInt","negativeBigInt","nonNegativeBigInt","nonPositiveBigInt","clampBigInt","bigint","BigInt","fromString","PositiveBigIntFromSelf","PositiveBigInt","NegativeBigIntFromSelf","NegativeBigInt","NonPositiveBigIntFromSelf","NonPositiveBigInt","NonNegativeBigIntFromSelf","NonNegativeBigInt","BigIntFromNumber","fromNumber","toNumber","SecretFromSelf","isSecret","secret","string","Secret","str","DurationFromSelf","isDuration","oneof","constant","infinity","bigUint","nanos","micros","maxSafeNat","millis","seconds","minutes","hours","days","weeks","DurationFromNanos","duration","toNanos","val","DurationFromMillis","ms","toMillis","hrTime","Duration","toHrTime","clampDuration","betweenDuration","LessThanDurationTypeId","lessThanDuration","LessThanOrEqualToDurationTypeId","lessThanOrEqualToDuration","GreaterThanDurationTypeId","greaterThanDuration","GreaterThanOrEqualToDurationTypeId","greaterThanOrEqualToDuration","BetweenDurationTypeId","Uint8ArrayFromSelf","isUint8Array","u8arr","uint8Array","getEquivalence","equals","$Uint8Array","Uint8Array","numbers","makeEncodingTransformation","decodeException","Base64","decodeBase64","encodeBase64","Base64Url","decodeBase64Url","encodeBase64Url","Hex","decodeHex","encodeHex","MinItemsTypeId","minItems","MaxItemsTypeId","maxItems","ItemsCountTypeId","itemsCount","getNumberIndexedAccess","of","headOrElse","fallback","ValidDateTypeId","validDate","getTime","DateFromSelf","isDate","date","noInvalidDate","Date","ValidDateFromSelf","DateFromString","toISOString","$Date","OptionNoneEncoded","optionSomeEncoded","optionEncoded","optionDecode","optionArbitrary","optionPretty","optionParse","isOption","isNone","makeNoneEncoded","makeSomeEncoded","Option","value_","OptionFromNullOr","fromNullable","getOrNull","OptionFromNullishOr","onNoneEncoding","getOrUndefined","OptionFromUndefinedOr","rightEncoded","right","leftEncoded","eitherEncoded","eitherDecode","eitherArbitrary","eitherPretty","eitherParse","parseRight","decodeUnknownLeft","isEither","EitherFromSelf","makeLeftEncoded","makeRightEncoded","Either","right_","left_","EitherFromUnion","toright","toleft","fromRight","fromLeft","l","mapArbitrary","array","tuple","Map","readonlyMapPretty","entries","k","readonlyMapEquivalence","arrayEquivalence","ka","va","kb","vb","readonlyMapParse","isMap","mapFromSelf_","Key","Value","ReadonlyMapFromSelf","MapFromSelf","ReadonlyMap","key_","setArbitrary","item","Set","readonlySetPretty","values","readonlySetEquivalence","readonlySetParse","isSet","setFromSelf_","ReadonlySetFromSelf","SetFromSelf","ReadonlySet","bigDecimalPretty","normalize","bigDecimalArbitrary","bigInt","integer","scale","BigDecimalFromSelf","isBigDecimal","BigDecimal","num","BigDecimalFromNumber","unsafeToNumber","GreaterThanBigDecimalTypeId","greaterThanBigDecimal","GreaterThanOrEqualToBigDecimalTypeId","greaterThanOrEqualToBigDecimal","LessThanBigDecimalTypeId","lessThanBigDecimal","LessThanOrEqualToBigDecimalTypeId","lessThanOrEqualToBigDecimal","PositiveBigDecimalTypeId","positiveBigDecimal","isPositive","PositiveBigDecimalFromSelf","NonNegativeBigDecimalTypeId","nonNegativeBigDecimal","NonNegativeBigDecimalFromSelf","NegativeBigDecimalTypeId","negativeBigDecimal","isNegative","NegativeBigDecimalFromSelf","NonPositiveBigDecimalTypeId","nonPositiveBigDecimal","NonPositiveBigDecimalFromSelf","BetweenBigDecimalTypeId","betweenBigDecimal","clampBigDecimal","chunkArbitrary","fromIterable","chunkPretty","c","toReadonlyArray","chunkParse","isChunk","isEmpty","empty","ChunkFromSelf","Chunk","toData","struct","dataArbitrary","dataPretty","d","dataParse","isEqual","DataFromSelf","Data","Class","makeClass","kind","Base","TaggedClass","tag","extendFields","TaggedError","prototype","toStringOverride","stack","TaggedRequest","Failure","Success","SerializableRequest","symbolResult","getDuplicatePropertySignatureErrorMessage","fromSchema","classSymbol","getTitleAnnotation","props","disableValidation","validateSync","toSchema","guard","fallbackInstanceOf","declaration","arb","SurrogateAnnotationId","newFields","extendedFields","transformedFields","transformOrFailFrom","FiberIdNoneEncoded","FiberIdRuntimeEncoded","startTimeMillis","FiberIdCompositeEncoded","FiberIdEncoded","fiberIdArbitrary","letrec","tie","None","Runtime","Composite","FiberId","fiberIdDecode","fiberIdPretty","fiberId","FiberIdFromSelf","isFiberId","runtime","composite","fiberIdEncode","causeDieEncoded","defect","CauseEmptyEncoded","causeFailEncoded","CauseInterruptEncoded","causeParallelEncoded","causeEncoded","causeSequentialEncoded","recur","causeArbitrary","Empty","Fail","Die","Interrupt","Sequential","Parallel","Cause","causeDecode","causePretty","cause","causeParse","isCause","causeEncode","CauseFromSelf","die","interrupt","sequential","parallel","CauseDefectUnknown","err","error_","exitFailureEncoded","exitSuccessEncoded","exitEncoded","exitDecode","failCause","exitArbitrary","exitPretty","exit","exitParse","decodeUnknownValue","decodeUnknownCause","isExit","onFailure","onSuccess","ExitFromSelf","failure","success","Exit","success_","failure_","hashSetArbitrary","hashSetPretty","hashSetEquivalence","hashSetParse","isHashSet","HashSetFromSelf","HashSet","hashMapArbitrary","hashMapPretty","hashMapEquivalence","hashMapParse","isHashMap","HashMapFromSelf","HashMap","listArbitrary","listPretty","listEquivalence","listParse","isList","ListFromSelf","List","sortedSetArbitrary","ord","sortedSetPretty","sortedSetParse","isSortedSet","SortedSetFromSelf","ordA","ordI","SortedSet","BooleanFromUnknown","isTruthy"],"sources":["../../src/Schema.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"Schema.js","names":["array_","_interopRequireWildcard","require","bigDecimal_","bigInt_","boolean_","cause_","chunk_","data_","duration_","Effect","either_","Encoding","Equal","Equivalence","exit_","fiberId_","_Function","hashMap_","hashSet_","list_","number_","option_","_Pipeable","Predicate","Request","secret_","sortedSet_","string_","arbitrary_","AST","equivalence_","errors_","filters_","serializable_","util_","ParseResult","pretty_","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","TypeId","exports","Symbol","for","make","ast","SchemaClass","variance","Type","Encoded","annotations","toASTAnnotations","pipe","pipeArguments","arguments","toString","String","_A","_","_I","_R","out","custom","getOwnPropertySymbols","sym","typeId","undefined","TypeAnnotationId","id","annotation","move","from","to","MessageAnnotationId","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","DocumentationAnnotationId","JSONSchemaAnnotationId","ArbitraryHookId","PrettyHookId","EquivalenceHookId","ConcurrencyAnnotationId","BatchingAnnotationId","ParseIssueTitleAnnotationId","asSchema","schema","format","encodedSchema","encodedAST","typeSchema","typeAST","encodeUnknown","options","overrideOptions","mapError","parseError","encodeUnknownEither","mapLeft","encodeUnknownPromise","parser","runPromise","encode","encodeEither","encodePromise","decodeUnknown","decodeUnknownEither","decodeUnknownPromise","decode","decodeEither","decodePromise","validate","validateEither","validatePromise","isSchema","hasProperty","isObject","getDefaultLiteralAST","literals","isMembers","Union","mapMembers","literal","Literal","makeLiteralClass","LiteralClass","isNonEmptyReadonlyArray","Never","pickLiteral","_schema","UniqueSymbolFromSelf","symbol","UniqueSymbol","getDefaultEnumsAST","enums","Enums","keys","filter","key","map","makeEnumsClass","EnumsClass","TemplateLiteral","head","tail","types","getTemplateLiterals","span","flatMap","b","combineTemplateLiterals","isLiteral","spans","modifyNonEmptyLast","TemplateLiteralSpan","type","appendAll","_tag","Error","declareConstructor","typeParameters","Declaration","tp","declarePrimitive","is","input","succeed","fail","declare","Array","isArray","BrandTypeId","fromBrand","constructor","self","makeBrandClass","Refinement","predicate","either","isLeft","some","left","v","message","join","none","InstanceOfTypeId","instanceOf","title","name","description","pretty","Undefined","undefinedKeyword","Void","voidKeyword","Null","null","neverKeyword","Unknown","unknownKeyword","Any","anyKeyword","BigIntFromSelf","bigIntKeyword","SymbolFromSelf","symbolKeyword","String$","stringKeyword","Number$","numberKeyword","Number","Boolean$","booleanKeyword","Boolean","Object$","objectKeyword","getDefaultUnionAST","members","m","makeUnionClass","UnionClass","NullOr","UndefinedOr","NullishOr","keyof","optionalElement","OptionalElementImpl","getDefaultTupleTypeAST","elements","rest","TupleType","Element","makeTupleTypeClass","TupleTypeClass","Tuple","args","slice","makeArrayClass","value","ArrayClass","Array$","makeNonEmptyArrayClass","NonEmptyArrayClass","NonEmptyArray","formatToken","isOptional","PropertySignatureDeclaration","isReadonly","defaultValue","token","FromPropertySignature","fromKey","ToPropertySignature","formatPropertyKey","p","isString","JSON","stringify","PropertySignatureTransformation","PropertySignatureTypeId","propertySignatureAnnotations_","PropertySignatureImpl","_TypeToken","_Key","_EncodedToken","_HasDefault","propertySignature","withConstructorDefault","dual","applyDefaultValue","o","match","onNone","onSome","withDecodingDefault","identity","withDefaults","defaults","decoding","optionalToRequired","optionalToOptional","optional","isExact","exact","isNullable","nullable","asOption","as","OptionFromSelf","isNotNull","isNotUndefined","isPropertySignature","getDefaultTypeLiteralAST","fields","records","ownKeys","pss","length","transformations","field","toAnnotations","push","PropertySignature","issFrom","issTo","indexSignatures","propertySignatures","record","forEach","ps","IndexSignature","parameter","Transformation","TypeLiteral","TypeLiteralTransformation","iss","lazilyMergeDefaults","makeTypeLiteralClass","TypeLiteralClass","props","validateSync","Struct","makeRecordClass","RecordClass","Record","pick","omit","pluck","getPropertyKeyIndexedAccess","orUndefined","transform","ak","BrandClass","brand","getBrandAnnotation","brands","formatUnknown","BrandAnnotationId","partial","required","mutable","getExtendErrorMessage","x","y","path","getErrorMessageWithPath","getErrorMessage","intersectTypeLiterals","isTypeLiteral","findIndex","extendAST","concat","addRefinementToMembers","refinement","asts","getMessageAnnotation","intersectUnionMembers","getTypes","isUnion","xs","ys","Suspend","f","isTypeLiteralTransformation","transformation","propertySignatureTransformations","extend","that","compose","suspend","makeRefineClass","RefineClass","isBoolean","makeTransformationClass","TransformationClass","transformOrFail","FinalTransformation","fromA","toI","transformLiteral","transformLiterals","pairs","attachPropertySignature","attached","isSymbol","identifier","examples","default$","documentation","jsonSchema","equivalence","concurrency","batching","parseIssueTitle","rename","mapping","TrimmedTypeId","trimmed","trim","pattern","MaxLengthTypeId","maxLength","MinLengthTypeId","minLength","PatternTypeId","regex","source","lastIndex","test","arbitrary","fc","stringMatching","StartsWithTypeId","startsWith","EndsWithTypeId","endsWith","IncludesTypeId","includes","searchString","LowercasedTypeId","lowercased","toLowerCase","Lowercased","UppercasedTypeId","uppercased","toUpperCase","Uppercased","LengthTypeId","Math","max","floor","min","Char","nonEmpty","Lowercase","s","Uppercase","Trimmed","Trim","split","separator","JsonString","parseJson","try","parse","reviver","catch","replacer","space","NonEmpty","UUIDTypeId","uuidRegexp","UUID","uuid","ULIDTypeId","ulidRegexp","ULID","ulid","FiniteTypeId","finite","isFinite","GreaterThanTypeId","greaterThan","exclusiveMinimum","GreaterThanOrEqualToTypeId","greaterThanOrEqualTo","minimum","MultipleOfTypeId","multipleOf","divisor","remainder","abs","IntTypeId","int","isSafeInteger","LessThanTypeId","lessThan","exclusiveMaximum","LessThanOrEqualToTypeId","lessThanOrEqualTo","maximum","BetweenTypeId","between","NonNaNTypeId","nonNaN","isNaN","positive","negative","nonPositive","nonNegative","clamp","strict","parseNumber","fromOption","NumberFromString","Finite","Int","NonNaN","Positive","Negative","NonPositive","NonNegative","JsonNumberTypeId","JsonNumber","Not","not","Symbol$","GreaterThanBigIntTypeId","GreaterThanBigintTypeId","greaterThanBigInt","GreaterThanOrEqualToBigIntTypeId","greaterThanOrEqualToBigInt","LessThanBigIntTypeId","lessThanBigInt","LessThanOrEqualToBigIntTypeId","lessThanOrEqualToBigInt","BetweenBigIntTypeId","BetweenBigintTypeId","betweenBigInt","positiveBigInt","negativeBigInt","nonNegativeBigInt","nonPositiveBigInt","clampBigInt","BigInt$","fromString","PositiveBigIntFromSelf","PositiveBigInt","NegativeBigIntFromSelf","NegativeBigInt","NonPositiveBigIntFromSelf","NonPositiveBigInt","NonNegativeBigIntFromSelf","NonNegativeBigInt","BigIntFromNumber","fromNumber","toNumber","SecretFromSelf","isSecret","secret","string","Secret","str","DurationFromSelf","isDuration","oneof","constant","infinity","bigUint","nanos","micros","maxSafeNat","millis","seconds","minutes","hours","days","weeks","DurationFromNanos","duration","toNanos","val","DurationFromMillis","ms","toMillis","hrTime","Duration","BigInt","toHrTime","clampDuration","betweenDuration","LessThanDurationTypeId","lessThanDuration","LessThanOrEqualToDurationTypeId","lessThanOrEqualToDuration","GreaterThanDurationTypeId","greaterThanDuration","GreaterThanOrEqualToDurationTypeId","greaterThanOrEqualToDuration","BetweenDurationTypeId","Uint8ArrayFromSelf","isUint8Array","u8arr","uint8Array","getEquivalence","equals","Uint8Array$","Uint8Array","numbers","makeEncodingTransformation","decodeException","Base64","decodeBase64","encodeBase64","Base64Url","decodeBase64Url","encodeBase64Url","Hex","decodeHex","encodeHex","MinItemsTypeId","minItems","MaxItemsTypeId","maxItems","ItemsCountTypeId","itemsCount","getNumberIndexedAccess","of","headOrElse","fallback","ValidDateTypeId","validDate","getTime","DateFromSelf","isDate","date","noInvalidDate","Date","ValidDateFromSelf","DateFromString","d","toISOString","Date$","DateFromNumber","OptionNoneEncoded","optionSomeEncoded","optionEncoded","optionDecode","optionArbitrary","optionPretty","optionParse","isOption","isNone","makeNoneEncoded","makeSomeEncoded","Option","value_","OptionFromNullOr","fromNullable","getOrNull","OptionFromNullishOr","onNoneEncoding","getOrUndefined","OptionFromUndefinedOr","rightEncoded","right","leftEncoded","eitherEncoded","eitherDecode","eitherArbitrary","eitherPretty","onLeft","onRight","eitherParse","parseRight","decodeUnknownLeft","isEither","EitherFromSelf","makeLeftEncoded","makeRightEncoded","Either","right_","left_","EitherFromUnion","toright","toleft","fromRight","fromLeft","l","mapArbitrary","array","tuple","Map","readonlyMapPretty","entries","k","readonlyMapEquivalence","arrayEquivalence","ka","va","kb","vb","readonlyMapParse","isMap","mapFromSelf_","Key","Value","ReadonlyMapFromSelf","MapFromSelf","ReadonlyMap","key_","setArbitrary","item","Set","readonlySetPretty","values","readonlySetEquivalence","readonlySetParse","isSet","setFromSelf_","ReadonlySetFromSelf","SetFromSelf","ReadonlySet","bigDecimalPretty","normalize","bigDecimalArbitrary","bigInt","integer","scale","BigDecimalFromSelf","isBigDecimal","BigDecimal","num","BigDecimalFromNumber","unsafeToNumber","GreaterThanBigDecimalTypeId","greaterThanBigDecimal","GreaterThanOrEqualToBigDecimalTypeId","greaterThanOrEqualToBigDecimal","LessThanBigDecimalTypeId","lessThanBigDecimal","LessThanOrEqualToBigDecimalTypeId","lessThanOrEqualToBigDecimal","PositiveBigDecimalTypeId","positiveBigDecimal","isPositive","PositiveBigDecimalFromSelf","NonNegativeBigDecimalTypeId","nonNegativeBigDecimal","NonNegativeBigDecimalFromSelf","NegativeBigDecimalTypeId","negativeBigDecimal","isNegative","NegativeBigDecimalFromSelf","NonPositiveBigDecimalTypeId","nonPositiveBigDecimal","NonPositiveBigDecimalFromSelf","BetweenBigDecimalTypeId","betweenBigDecimal","clampBigDecimal","chunkArbitrary","fromIterable","chunkPretty","c","toReadonlyArray","chunkParse","isChunk","isEmpty","empty","ChunkFromSelf","Chunk","toData","struct","dataArbitrary","dataPretty","dataParse","isEqual","DataFromSelf","Data","assign","isField","isFields","every","getFields","hasFields","getSchemaFromFieldsOr","fieldsOr","getFieldsFromFieldsOr","Class","makeClass","kind","Base","getClassTag","tag","TaggedClass","newFields","taggedFields","extendFields","TaggedError","prototype","TaggedErrorClass","toStringOverride","stack","TaggedRequest","Failure","Success","SerializableRequest","symbolResult","TaggedRequestClass","getDuplicatePropertySignatureErrorMessage","orElseTitleAnnotation","getTitleAnnotation","disableValidation","validateSchema","encodedSide","typeSide","guard","fallbackInstanceOf","classSymbol","declaration","arb","SurrogateAnnotationId","customIdentifier","newFieldsOr","newSchema","extendedFields","transformedFields","transformOrFailFrom","FiberIdNoneEncoded","FiberIdRuntimeEncoded","startTimeMillis","FiberIdCompositeEncoded","FiberIdEncoded","fiberIdArbitrary","letrec","tie","None","Runtime","Composite","FiberId","fiberIdDecode","fiberIdPretty","fiberId","FiberIdFromSelf","isFiberId","runtime","composite","fiberIdEncode","causeDieEncoded","defect","CauseEmptyEncoded","causeFailEncoded","error","CauseInterruptEncoded","causeParallelEncoded","causeEncoded","causeSequentialEncoded","recur","causeArbitrary","Empty","Fail","Die","Interrupt","Sequential","Parallel","Cause","causeDecode","causePretty","cause","causeParse","isCause","causeEncode","CauseFromSelf","die","interrupt","sequential","parallel","CauseDefectUnknown","err","error_","exitFailureEncoded","exitSuccessEncoded","exitEncoded","exitDecode","failCause","exitArbitrary","exitPretty","exit","exitParse","decodeUnknownValue","decodeUnknownCause","isExit","onFailure","onSuccess","ExitFromSelf","failure","success","Exit","success_","failure_","hashSetArbitrary","hashSetPretty","hashSetEquivalence","hashSetParse","isHashSet","HashSetFromSelf","HashSet","hashMapArbitrary","hashMapPretty","hashMapEquivalence","hashMapParse","isHashMap","HashMapFromSelf","HashMap","listArbitrary","listPretty","listEquivalence","listParse","isList","ListFromSelf","List","sortedSetArbitrary","ord","sortedSetPretty","sortedSetParse","isSortedSet","SortedSetFromSelf","ordA","ordI","SortedSet","BooleanFromUnknown","isTruthy"],"sources":["../../src/Schema.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/cjs/Serializable.js.map b/dist/cjs/Serializable.js.map
index f71d45f2387f8306b15804403dba94b4f0609f9a..748e9799cec6ff1adee97e6ba795a5f362b1f8d4 100644
--- a/dist/cjs/Serializable.js.map
+++ b/dist/cjs/Serializable.js.map
@@ -1 +1 @@
-{"version":3,"file":"Serializable.js","names":["_Function","require","_GlobalValue","serializable_","_interopRequireWildcard","Schema","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","symbol","exports","selfSchema","self","symbolResult","failureSchema","Failure","successSchema","Success","exitSchemaCache","globalValue","exitSchema","proto","getPrototypeOf","Exit","failure","success","schema","undefined","serialize","encode","deserialize","dual","value","decodeUnknown","serializeFailure","deserializeFailure","serializeSuccess","deserializeSuccess","serializeExit","deserializeExit"],"sources":["../../src/Serializable.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"Serializable.js","names":["_Function","require","_GlobalValue","serializable_","_interopRequireWildcard","Schema","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","symbol","exports","selfSchema","self","symbolResult","failureSchema","Failure","successSchema","Success","exitSchemaCache","globalValue","exitSchema","proto","getPrototypeOf","Exit","failure","success","schema","undefined","serialize","encode","deserialize","dual","value","decodeUnknown","serializeFailure","deserializeFailure","serializeSuccess","deserializeSuccess","serializeExit","deserializeExit"],"sources":["../../src/Serializable.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/cjs/TreeFormatter.js b/dist/cjs/TreeFormatter.js
index 2549ea77dc2e9a165fd50d29a4489d72929b1e3c..af6a8a25faeb6f7b71b0ab204ef4b83606187d3f 100644
--- a/dist/cjs/TreeFormatter.js
+++ b/dist/cjs/TreeFormatter.js
@@ -97,7 +97,7 @@ const formatRefinementKind = kind => {
       return "Predicate refinement failure";
   }
 };
-const getPrevMessage = issue => {
+const getInnerMessage = issue => {
   switch (issue._tag) {
     case "Refinement":
       {
@@ -107,16 +107,38 @@ const getPrevMessage = issue => {
         break;
       }
     case "Transformation":
-      return getMessage(issue.error);
+      {
+        return getMessage(issue.error);
+      }
   }
   return Option.none();
 };
 const getCurrentMessage = issue => AST.getMessageAnnotation(issue.ast).pipe(Effect.flatMap(annotation => {
   const out = annotation(issue);
-  return Predicate.isString(out) ? Effect.succeed(out) : out;
+  return Predicate.isString(out) ? Effect.succeed({
+    message: out,
+    override: false
+  }) : Effect.isEffect(out) ? Effect.map(out, message => ({
+    message,
+    override: false
+  })) : Predicate.isString(out.message) ? Effect.succeed({
+    message: out.message,
+    override: out.override
+  }) : Effect.map(out.message, message => ({
+    message,
+    override: out.override
+  }));
 }));
 /** @internal */
-const getMessage = issue => Effect.catchAll(getPrevMessage(issue), () => getCurrentMessage(issue));
+const getMessage = issue => {
+  const current = getCurrentMessage(issue);
+  return getInnerMessage(issue).pipe(Effect.flatMap(inner => Effect.map(current, current => current.override ? current.message : inner)), Effect.catchAll(() => Effect.flatMap(current, current => {
+    if (!current.override && (issue._tag === "Refinement" && issue.kind !== "Predicate" || issue._tag === "Transformation" && issue.kind !== "Transformation")) {
+      return Option.none();
+    }
+    return Effect.succeed(current.message);
+  })));
+};
 exports.getMessage = getMessage;
 const getParseIssueTitleAnnotation = issue => Option.filterMap(AST.getParseIssueTitleAnnotation(issue.ast), annotation => Option.fromNullable(annotation(issue)));
 /** @internal */
@@ -150,9 +172,9 @@ const go = e => {
         }
       }), forest => make(getParseIssueTitle(e), forest)));
     case "TupleType":
-      return getTree(e, () => Effect.map(Effect.forEach(e.errors, index => Effect.map(go(index.error), tree => make(`[${index.index}]`, [tree]))), forest => make(getParseIssueTitle(e), forest)));
+      return getTree(e, () => Effect.map(Effect.forEach(e.errors, index => Effect.map(go(index.error), tree => make(`[${util_.formatPropertyKey(index.index)}]`, [tree]))), forest => make(getParseIssueTitle(e), forest)));
     case "TypeLiteral":
-      return getTree(e, () => Effect.map(Effect.forEach(e.errors, key => Effect.map(go(key.error), tree => make(`[${util_.formatUnknown(key.key)}]`, [tree]))), forest => make(getParseIssueTitle(e), forest)));
+      return getTree(e, () => Effect.map(Effect.forEach(e.errors, key => Effect.map(go(key.error), tree => make(`[${util_.formatPropertyKey(key.key)}]`, [tree]))), forest => make(getParseIssueTitle(e), forest)));
     case "Transformation":
       return getTree(e, () => Effect.map(go(e.error), tree => make(getParseIssueTitle(e), [make(formatTransformationKind(e.kind), [tree])])));
     case "Refinement":
diff --git a/dist/cjs/TreeFormatter.js.map b/dist/cjs/TreeFormatter.js.map
index 187f036ab4221ac2033879ac5cb369a14fe8088e..ce3ba071fc0210ad8d8c4dafdbc904836ac17846 100644
--- a/dist/cjs/TreeFormatter.js.map
+++ b/dist/cjs/TreeFormatter.js.map
@@ -1 +1 @@
-{"version":3,"file":"TreeFormatter.js","names":["Effect","_interopRequireWildcard","require","Option","Predicate","AST","util_","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","make","value","forest","formatIssue","issue","map","go","tree","drawTree","exports","formatIssueSync","runSync","formatError","error","formatErrorSync","draw","indentation","len","length","isLast","formatTransformationKind","kind","formatRefinementKind","getPrevMessage","_tag","getMessage","none","getCurrentMessage","getMessageAnnotation","ast","pipe","flatMap","annotation","out","isString","succeed","catchAll","getParseIssueTitleAnnotation","filterMap","fromNullable","formatTypeMessage","orElse","message","toString","formatUnknown","actual","getParseIssueTitle","getOrElse","String","formatForbiddenMessage","getTree","onFailure","matchEffect","onSuccess","forEach","errors","index","key","shouldSkipDefaultMessage"],"sources":["../../src/TreeFormatter.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"TreeFormatter.js","names":["Effect","_interopRequireWildcard","require","Option","Predicate","AST","util_","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","make","value","forest","formatIssue","issue","map","go","tree","drawTree","exports","formatIssueSync","runSync","formatError","error","formatErrorSync","draw","indentation","len","length","isLast","formatTransformationKind","kind","formatRefinementKind","getInnerMessage","_tag","getMessage","none","getCurrentMessage","getMessageAnnotation","ast","pipe","flatMap","annotation","out","isString","succeed","message","override","isEffect","current","inner","catchAll","getParseIssueTitleAnnotation","filterMap","fromNullable","formatTypeMessage","orElse","toString","formatUnknown","actual","getParseIssueTitle","getOrElse","String","formatForbiddenMessage","getTree","onFailure","matchEffect","onSuccess","forEach","errors","index","formatPropertyKey","key","shouldSkipDefaultMessage"],"sources":["../../src/TreeFormatter.ts"],"sourcesContent":[null],"mappings":";;;;;;AAKA,IAAAA,MAAA,gBAAAC,uBAAA,eAAAC,OAAA;AACA,IAAAC,MAAA,gBAAAF,uBAAA,eAAAC,OAAA;AACA,IAAAE,SAAA,gBAAAH,uBAAA,eAAAC,OAAA;AACA,IAAAG,GAAA,gBAAAJ,uBAAA,eAAAC,OAAA;AACA,IAAAI,KAAA,gBAAAL,uBAAA,eAAAC,OAAA;AAA2C,SAAAK,yBAAAC,CAAA;EAAA,yBAAAC,OAAA;EAAA,IAAAC,CAAA,OAAAD,OAAA;IAAAE,CAAA,OAAAF,OAAA;EAAA,QAAAF,wBAAA,YAAAA,CAAAC,CAAA;IAAA,OAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA;EAAA,GAAAF,CAAA;AAAA;AAAA,SAAAP,wBAAAO,CAAA,EAAAE,CAAA;EAAA,KAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA;EAAA,aAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA;IAAAK,OAAA,EAAAL;EAAA;EAAA,IAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA;EAAA,IAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA;EAAA,IAAAQ,CAAA;MAAAC,SAAA;IAAA;IAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA;EAAA,SAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,CAAA;IAAA,IAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA;IAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA;EAAA;EAAA,OAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAAA;AAT3C;;;;AAmBA,MAAMW,IAAI,GAAGA,CAAIC,KAAQ,EAAEC,MAAA,GAAoB,EAAE,MAAe;EAC9DD,KAAK;EACLC;CACD,CAAC;AAEF;;;;AAIO,MAAMC,WAAW,GAAIC,KAA6B,IACvD/B,MAAM,CAACgC,GAAG,CAACC,EAAE,CAACF,KAAK,CAAC,EAAGG,IAAI,IAAKC,QAAQ,CAACD,IAAI,CAAC,CAAC;AAEjD;;;;AAAAE,OAAA,CAAAN,WAAA,GAAAA,WAAA;AAIO,MAAMO,eAAe,GAAIN,KAA6B,IAAa/B,MAAM,CAACsC,OAAO,CAACR,WAAW,CAACC,KAAK,CAAC,CAAC;AAE5G;;;;AAAAK,OAAA,CAAAC,eAAA,GAAAA,eAAA;AAIO,MAAME,WAAW,GAAIC,KAA6B,IAA4BV,WAAW,CAACU,KAAK,CAACA,KAAK,CAAC;AAE7G;;;;AAAAJ,OAAA,CAAAG,WAAA,GAAAA,WAAA;AAIO,MAAME,eAAe,GAAID,KAA6B,IAAaH,eAAe,CAACG,KAAK,CAACA,KAAK,CAAC;AAAAJ,OAAA,CAAAK,eAAA,GAAAA,eAAA;AAEtG,MAAMN,QAAQ,GAAID,IAAkB,IAAaA,IAAI,CAACN,KAAK,GAAGc,IAAI,CAAC,IAAI,EAAER,IAAI,CAACL,MAAM,CAAC;AAErF,MAAMa,IAAI,GAAGA,CAACC,WAAmB,EAAEd,MAAsB,KAAY;EACnE,IAAInB,CAAC,GAAG,EAAE;EACV,MAAMkC,GAAG,GAAGf,MAAM,CAACgB,MAAM;EACzB,IAAIX,IAAkB;EACtB,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmB,GAAG,EAAEnB,CAAC,EAAE,EAAE;IAC5BS,IAAI,GAAGL,MAAM,CAACJ,CAAC,CAAC;IAChB,MAAMqB,MAAM,GAAGrB,CAAC,KAAKmB,GAAG,GAAG,CAAC;IAC5BlC,CAAC,IAAIiC,WAAW,IAAIG,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI,GAAGZ,IAAI,CAACN,KAAK;IAC3DlB,CAAC,IAAIgC,IAAI,CAACC,WAAW,IAAIC,GAAG,GAAG,CAAC,IAAI,CAACE,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC,EAAEZ,IAAI,CAACL,MAAM,CAAC;EAC5E;EACA,OAAOnB,CAAC;AACV,CAAC;AAED,MAAMqC,wBAAwB,GAAIC,IAAwC,IAAY;EACpF,QAAQA,IAAI;IACV,KAAK,SAAS;MACZ,OAAO,qCAAqC;IAC9C,KAAK,gBAAgB;MACnB,OAAO,gCAAgC;IACzC,KAAK,MAAM;MACT,OAAO,kCAAkC;EAC7C;AACF,CAAC;AAED,MAAMC,oBAAoB,GAAID,IAAoC,IAAY;EAC5E,QAAQA,IAAI;IACV,KAAK,MAAM;MACT,OAAO,8BAA8B;IACvC,KAAK,WAAW;MACd,OAAO,8BAA8B;EACzC;AACF,CAAC;AAED,MAAME,eAAe,GACnBnB,KAA6B,IAC0B;EACvD,QAAQA,KAAK,CAACoB,IAAI;IAChB,KAAK,YAAY;MAAE;QACjB,IAAIpB,KAAK,CAACiB,IAAI,KAAK,MAAM,EAAE;UACzB,OAAOI,UAAU,CAACrB,KAAK,CAACS,KAAK,CAAC;QAChC;QACA;MACF;IACA,KAAK,gBAAgB;MAAE;QACrB,OAAOY,UAAU,CAACrB,KAAK,CAACS,KAAK,CAAC;MAChC;EACF;EACA,OAAOrC,MAAM,CAACkD,IAAI,EAAE;AACtB,CAAC;AAED,MAAMC,iBAAiB,GAGrBvB,KAA6B,IAE7B1B,GAAG,CAACkD,oBAAoB,CAACxB,KAAK,CAACyB,GAAG,CAAC,CAACC,IAAI,CAACzD,MAAM,CAAC0D,OAAO,CAAEC,UAAU,IAAI;EACrE,MAAMC,GAAG,GAAGD,UAAU,CAAC5B,KAAK,CAAC;EAC7B,OAAO3B,SAAS,CAACyD,QAAQ,CAACD,GAAG,CAAC,GAC1B5D,MAAM,CAAC8D,OAAO,CAAC;IAAEC,OAAO,EAAEH,GAAG;IAAEI,QAAQ,EAAE;EAAK,CAAE,CAAC,GACjDhE,MAAM,CAACiE,QAAQ,CAACL,GAAG,CAAC,GACpB5D,MAAM,CAACgC,GAAG,CAAC4B,GAAG,EAAGG,OAAO,KAAM;IAAEA,OAAO;IAAEC,QAAQ,EAAE;EAAK,CAAE,CAAC,CAAC,GAC5D5D,SAAS,CAACyD,QAAQ,CAACD,GAAG,CAACG,OAAO,CAAC,GAC/B/D,MAAM,CAAC8D,OAAO,CAAC;IAAEC,OAAO,EAAEH,GAAG,CAACG,OAAO;IAAEC,QAAQ,EAAEJ,GAAG,CAACI;EAAQ,CAAE,CAAC,GAChEhE,MAAM,CAACgC,GAAG,CAAC4B,GAAG,CAACG,OAAO,EAAGA,OAAO,KAAM;IAAEA,OAAO;IAAEC,QAAQ,EAAEJ,GAAG,CAACI;EAAQ,CAAE,CAAC,CAAC;AACjF,CAAC,CAAC,CAAC;AAEL;AACO,MAAMZ,UAAU,GAEqCrB,KAA6B,IAAI;EAC3F,MAAMmC,OAAO,GAAGZ,iBAAiB,CAACvB,KAAK,CAAC;EACxC,OAAOmB,eAAe,CAACnB,KAAK,CAAC,CAAC0B,IAAI,CAChCzD,MAAM,CAAC0D,OAAO,CAAES,KAAK,IAAKnE,MAAM,CAACgC,GAAG,CAACkC,OAAO,EAAGA,OAAO,IAAKA,OAAO,CAACF,QAAQ,GAAGE,OAAO,CAACH,OAAO,GAAGI,KAAK,CAAC,CAAC,EACvGnE,MAAM,CAACoE,QAAQ,CAAC,MACdpE,MAAM,CAAC0D,OAAO,CAACQ,OAAO,EAAGA,OAAO,IAAI;IAClC,IACE,CAACA,OAAO,CAACF,QAAQ,KACdjC,KAAK,CAACoB,IAAI,KAAK,YAAY,IAAIpB,KAAK,CAACiB,IAAI,KAAK,WAAW,IACzDjB,KAAK,CAACoB,IAAI,KAAK,gBAAgB,IAAIpB,KAAK,CAACiB,IAAI,KAAK,gBAAiB,CACrE,EACD;MACA,OAAO7C,MAAM,CAACkD,IAAI,EAAE;IACtB;IACA,OAAOrD,MAAM,CAAC8D,OAAO,CAACI,OAAO,CAACH,OAAO,CAAC;EACxC,CAAC,CAAC,CACH,CACF;AACH,CAAC;AAAA3B,OAAA,CAAAgB,UAAA,GAAAA,UAAA;AAED,MAAMiB,4BAA4B,GAAItC,KAA6B,IACjE5B,MAAM,CAACmE,SAAS,CACdjE,GAAG,CAACgE,4BAA4B,CAACtC,KAAK,CAACyB,GAAG,CAAC,EAC1CG,UAAU,IAAKxD,MAAM,CAACoE,YAAY,CAACZ,UAAU,CAAC5B,KAAK,CAAC,CAAC,CACvD;AAEH;AACO,MAAMyC,iBAAiB,GAAIhE,CAAmB,IACnD4C,UAAU,CAAC5C,CAAC,CAAC,CAACiD,IAAI,CAChBzD,MAAM,CAACyE,MAAM,CAAC,MAAMJ,4BAA4B,CAAC7D,CAAC,CAAC,CAAC,EACpDR,MAAM,CAACyE,MAAM,CAAC,MAAMjE,CAAC,CAACuD,OAAO,CAAC,EAC9B/D,MAAM,CAACoE,QAAQ,CAAC,MAAMpE,MAAM,CAAC8D,OAAO,CAAC,YAAYtD,CAAC,CAACgD,GAAG,CAACkB,QAAQ,CAAC,IAAI,CAAC,YAAYpE,KAAK,CAACqE,aAAa,CAACnE,CAAC,CAACoE,MAAM,CAAC,EAAE,CAAC,CAAC,CACnH;AAAAxC,OAAA,CAAAoC,iBAAA,GAAAA,iBAAA;AAEH,MAAMK,kBAAkB,GAAI9C,KAA6B,IACvD5B,MAAM,CAAC2E,SAAS,CAACT,4BAA4B,CAACtC,KAAK,CAAC,EAAE,MAAMgD,MAAM,CAAChD,KAAK,CAACyB,GAAG,CAAC,CAAC;AAEhF;AACO,MAAMwB,sBAAsB,GAAIxE,CAAwB,IAC7DL,MAAM,CAAC2E,SAAS,CAACtE,CAAC,CAACuD,OAAO,EAAE,MAAM,cAAc,CAAC;AAAA3B,OAAA,CAAA4C,sBAAA,GAAAA,sBAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAClD,KAA6B,EAAEmD,SAA4C,KAC1FlF,MAAM,CAACmF,WAAW,CAAC/B,UAAU,CAACrB,KAAK,CAAC,EAAE;EACpCmD,SAAS;EACTE,SAAS,EAAGrB,OAAO,IAAK/D,MAAM,CAAC8D,OAAO,CAACnC,IAAI,CAACoC,OAAO,CAAC;CACrD,CAAC;AAEJ,MAAM9B,EAAE,GAAIzB,CAAwE,IAAiC;EACnH,QAAQA,CAAC,CAAC2C,IAAI;IACZ,KAAK,MAAM;MACT,OAAOnD,MAAM,CAACgC,GAAG,CAACwC,iBAAiB,CAAChE,CAAC,CAAC,EAAEmB,IAAI,CAAC;IAC/C,KAAK,WAAW;MACd,OAAO3B,MAAM,CAAC8D,OAAO,CAACnC,IAAI,CAACkD,kBAAkB,CAACrE,CAAC,CAAC,EAAE,CAACmB,IAAI,CAACqD,sBAAsB,CAACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvF,KAAK,YAAY;MACf,OAAOR,MAAM,CAAC8D,OAAO,CAACnC,IAAI,CAAC,2BAA2BnB,CAAC,CAACgD,GAAG,CAACkB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAChF,KAAK,SAAS;MACZ,OAAO1E,MAAM,CAAC8D,OAAO,CAACnC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC3C,KAAK,OAAO;MACV,OAAOsD,OAAO,CAACzE,CAAC,EAAE,MAChBR,MAAM,CAACgC,GAAG,CACRhC,MAAM,CAACqF,OAAO,CAAC7E,CAAC,CAAC8E,MAAM,EAAG9E,CAAC,IAAI;QAC7B,QAAQA,CAAC,CAAC2C,IAAI;UACZ,KAAK,QAAQ;YACX,OAAOnD,MAAM,CAACgC,GAAG,CAACC,EAAE,CAACzB,CAAC,CAACgC,KAAK,CAAC,EAAGN,IAAI,IAAKP,IAAI,CAAC,cAAc,EAAE,CAACO,IAAI,CAAC,CAAC,CAAC;UACxE;YACE,OAAOD,EAAE,CAACzB,CAAC,CAAC;QAChB;MACF,CAAC,CAAC,EACDqB,MAAM,IAAKF,IAAI,CAACkD,kBAAkB,CAACrE,CAAC,CAAC,EAAEqB,MAAM,CAAC,CAChD,CAAC;IACN,KAAK,WAAW;MACd,OAAOoD,OAAO,CAACzE,CAAC,EAAE,MAChBR,MAAM,CAACgC,GAAG,CACRhC,MAAM,CAACqF,OAAO,CACZ7E,CAAC,CAAC8E,MAAM,EACPC,KAAK,IAAKvF,MAAM,CAACgC,GAAG,CAACC,EAAE,CAACsD,KAAK,CAAC/C,KAAK,CAAC,EAAGN,IAAI,IAAKP,IAAI,CAAC,IAAIrB,KAAK,CAACkF,iBAAiB,CAACD,KAAK,CAACA,KAAK,CAAC,GAAG,EAAE,CAACrD,IAAI,CAAC,CAAC,CAAC,CAC5G,EACAL,MAAM,IAAKF,IAAI,CAACkD,kBAAkB,CAACrE,CAAC,CAAC,EAAEqB,MAAM,CAAC,CAChD,CAAC;IACN,KAAK,aAAa;MAChB,OAAOoD,OAAO,CAACzE,CAAC,EAAE,MAChBR,MAAM,CAACgC,GAAG,CACRhC,MAAM,CAACqF,OAAO,CAAC7E,CAAC,CAAC8E,MAAM,EAAGG,GAAG,IAC3BzF,MAAM,CAACgC,GAAG,CAACC,EAAE,CAACwD,GAAG,CAACjD,KAAK,CAAC,EAAGN,IAAI,IAAKP,IAAI,CAAC,IAAIrB,KAAK,CAACkF,iBAAiB,CAACC,GAAG,CAACA,GAAG,CAAC,GAAG,EAAE,CAACvD,IAAI,CAAC,CAAC,CAAC,CAAC,EAC5FL,MAAM,IACLF,IAAI,CAACkD,kBAAkB,CAACrE,CAAC,CAAC,EAAEqB,MAAM,CAAC,CACtC,CAAC;IACN,KAAK,gBAAgB;MACnB,OAAOoD,OAAO,CAACzE,CAAC,EAAE,MAChBR,MAAM,CAACgC,GAAG,CACRC,EAAE,CAACzB,CAAC,CAACgC,KAAK,CAAC,EACVN,IAAI,IAAKP,IAAI,CAACkD,kBAAkB,CAACrE,CAAC,CAAC,EAAE,CAACmB,IAAI,CAACoB,wBAAwB,CAACvC,CAAC,CAACwC,IAAI,CAAC,EAAE,CAACd,IAAI,CAAC,CAAC,CAAC,CAAC,CACxF,CAAC;IACN,KAAK,YAAY;MACf,OAAO+C,OAAO,CACZzE,CAAC,EACD,MACER,MAAM,CAACgC,GAAG,CAACC,EAAE,CAACzB,CAAC,CAACgC,KAAK,CAAC,EAAGN,IAAI,IAAKP,IAAI,CAACkD,kBAAkB,CAACrE,CAAC,CAAC,EAAE,CAACmB,IAAI,CAACsB,oBAAoB,CAACzC,CAAC,CAACwC,IAAI,CAAC,EAAE,CAACd,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAC/G;IACH,KAAK,aAAa;MAChB,OAAO+C,OAAO,CAACzE,CAAC,EAAE,MAAK;QACrB,MAAMgC,KAAK,GAAGhC,CAAC,CAACgC,KAAK;QACrB,MAAMkD,wBAAwB,GAAGlD,KAAK,CAACW,IAAI,KAAK,MAAM,IAAIX,KAAK,CAACgB,GAAG,KAAKhD,CAAC,CAACgD,GAAG;QAC7E,OAAOkC,wBAAwB,GAC3BzD,EAAE,CAACO,KAAK,CAAC,GACTxC,MAAM,CAACgC,GAAG,CAACC,EAAE,CAACO,KAAK,CAAC,EAAGN,IAAI,IAAKP,IAAI,CAACkD,kBAAkB,CAACrE,CAAC,CAAC,EAAE,CAAC0B,IAAI,CAAC,CAAC,CAAC;MAC1E,CAAC,CAAC;EACN;AACF,CAAC","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/cjs/internal/errors.js b/dist/cjs/internal/errors.js
index 5420bcea09254e485920fe8ee7c7409d8596e1d5..046b60eea2fd1edc712db31d6a0d918cd97dbfba 100644
--- a/dist/cjs/internal/errors.js
+++ b/dist/cjs/internal/errors.js
@@ -3,7 +3,7 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.getRequiredElementFollowinAnOptionalElementErrorMessage = exports.getPrettyErrorMessage = exports.getIndexSignatureParameterErrorMessage = exports.getEquivalenceErrorMessage = exports.getDuplicatePropertySignatureTransformationErrorMessage = exports.getDuplicatePropertySignatureErrorMessage = exports.getDuplicateIndexSignatureErrorMessage = exports.getArbitraryErrorMessage = exports.getAPIErrorMessage = void 0;
+exports.getErrorMessageWithPath = exports.getErrorMessage = exports.getDuplicatePropertySignatureErrorMessage = void 0;
 var util_ = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./util.js"));
 function _getRequireWildcardCache(e) {
   if ("function" != typeof WeakMap) return null;
@@ -34,25 +34,15 @@ function _interopRequireWildcard(e, r) {
 const getDuplicatePropertySignatureErrorMessage = name => `Duplicate property signature ${util_.formatUnknown(name)}`;
 /** @internal */
 exports.getDuplicatePropertySignatureErrorMessage = getDuplicatePropertySignatureErrorMessage;
-const getDuplicateIndexSignatureErrorMessage = name => `Duplicate index signature for type \`${name}\``;
+const getErrorMessage = (api, message) => `${api}: ${message}`;
 /** @internal */
-exports.getDuplicateIndexSignatureErrorMessage = getDuplicateIndexSignatureErrorMessage;
-const getIndexSignatureParameterErrorMessage = exports.getIndexSignatureParameterErrorMessage = "An index signature parameter type must be `string`, `symbol`, a template literal type or a refinement of the previous types";
-/** @internal */
-const getRequiredElementFollowinAnOptionalElementErrorMessage = exports.getRequiredElementFollowinAnOptionalElementErrorMessage = "A required element cannot follow an optional element. ts(1257)";
-/** @internal */
-const getDuplicatePropertySignatureTransformationErrorMessage = name => `Duplicate property signature transformation ${util_.formatUnknown(name)}`;
-/** @internal */
-exports.getDuplicatePropertySignatureTransformationErrorMessage = getDuplicatePropertySignatureTransformationErrorMessage;
-const getArbitraryErrorMessage = message => `cannot build an Arbitrary for ${message}`;
-/** @internal */
-exports.getArbitraryErrorMessage = getArbitraryErrorMessage;
-const getPrettyErrorMessage = message => `cannot build a Pretty for ${message}`;
-/** @internal */
-exports.getPrettyErrorMessage = getPrettyErrorMessage;
-const getEquivalenceErrorMessage = message => `cannot build an Equivalence for ${message}`;
-/** @internal */
-exports.getEquivalenceErrorMessage = getEquivalenceErrorMessage;
-const getAPIErrorMessage = (api, message) => `${api}: ${message}`;
-exports.getAPIErrorMessage = getAPIErrorMessage;
+exports.getErrorMessage = getErrorMessage;
+const getErrorMessageWithPath = (message, path) => {
+  let out = message;
+  if (path.length > 0) {
+    out += ` (path [${path.map(util_.formatPropertyKey).join(", ")}])`;
+  }
+  return out;
+};
+exports.getErrorMessageWithPath = getErrorMessageWithPath;
 //# sourceMappingURL=errors.js.map
\ No newline at end of file
diff --git a/dist/cjs/internal/errors.js.map b/dist/cjs/internal/errors.js.map
index 1e81c9fb6672935f9dc12107ee5474dafcb2530c..f60cd33ad49867b0dc71d447a1f970acb74e53fd 100644
--- a/dist/cjs/internal/errors.js.map
+++ b/dist/cjs/internal/errors.js.map
@@ -1 +1 @@
-{"version":3,"file":"errors.js","names":["util_","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","getDuplicatePropertySignatureErrorMessage","name","formatUnknown","exports","getDuplicateIndexSignatureErrorMessage","getIndexSignatureParameterErrorMessage","getRequiredElementFollowinAnOptionalElementErrorMessage","getDuplicatePropertySignatureTransformationErrorMessage","getArbitraryErrorMessage","message","getPrettyErrorMessage","getEquivalenceErrorMessage","getAPIErrorMessage","api"],"sources":["../../../src/internal/errors.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,IAAAA,KAAA,gBAAAC,uBAAA,eAAAC,OAAA;AAAkC,SAAAC,yBAAAC,CAAA;EAAA,yBAAAC,OAAA;EAAA,IAAAC,CAAA,OAAAD,OAAA;IAAAE,CAAA,OAAAF,OAAA;EAAA,QAAAF,wBAAA,YAAAA,CAAAC,CAAA;IAAA,OAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA;EAAA,GAAAF,CAAA;AAAA;AAAA,SAAAH,wBAAAG,CAAA,EAAAE,CAAA;EAAA,KAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA;EAAA,aAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA;IAAAK,OAAA,EAAAL;EAAA;EAAA,IAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA;EAAA,IAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA;EAAA,IAAAQ,CAAA;MAAAC,SAAA;IAAA;IAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA;EAAA,SAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,CAAA;IAAA,IAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA;IAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA;EAAA;EAAA,OAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAAA;AAElC;AACO,MAAMW,yCAAyC,GAAIC,IAAiB,IACzE,gCAAgCxB,KAAK,CAACyB,aAAa,CAACD,IAAI,CAAC,EAAE;AAE7D;AAAAE,OAAA,CAAAH,yCAAA,GAAAA,yCAAA;AACO,MAAMI,sCAAsC,GAAIH,IAAyB,IAC9E,wCAAwCA,IAAI,IAAI;AAElD;AAAAE,OAAA,CAAAC,sCAAA,GAAAA,sCAAA;AACO,MAAMC,sCAAsC,GAAAF,OAAA,CAAAE,sCAAA,GACjD,6HAA6H;AAE/H;AACO,MAAMC,uDAAuD,GAAAH,OAAA,CAAAG,uDAAA,GAClE,gEAAgE;AAElE;AACO,MAAMC,uDAAuD,GAAIN,IAAiB,IACvF,+CAA+CxB,KAAK,CAACyB,aAAa,CAACD,IAAI,CAAC,EAAE;AAE5E;AAAAE,OAAA,CAAAI,uDAAA,GAAAA,uDAAA;AACO,MAAMC,wBAAwB,GAAIC,OAAe,IAAK,iCAAiCA,OAAO,EAAE;AAEvG;AAAAN,OAAA,CAAAK,wBAAA,GAAAA,wBAAA;AACO,MAAME,qBAAqB,GAAID,OAAe,IAAK,6BAA6BA,OAAO,EAAE;AAEhG;AAAAN,OAAA,CAAAO,qBAAA,GAAAA,qBAAA;AACO,MAAMC,0BAA0B,GAAIF,OAAe,IAAK,mCAAmCA,OAAO,EAAE;AAE3G;AAAAN,OAAA,CAAAQ,0BAAA,GAAAA,0BAAA;AACO,MAAMC,kBAAkB,GAAGA,CAACC,GAAW,EAAEJ,OAAe,KAAK,GAAGI,GAAG,KAAKJ,OAAO,EAAE;AAAAN,OAAA,CAAAS,kBAAA,GAAAA,kBAAA","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"errors.js","names":["util_","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","getDuplicatePropertySignatureErrorMessage","name","formatUnknown","exports","getErrorMessage","api","message","getErrorMessageWithPath","path","out","length","map","formatPropertyKey","join"],"sources":["../../../src/internal/errors.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,IAAAA,KAAA,gBAAAC,uBAAA,eAAAC,OAAA;AAAkC,SAAAC,yBAAAC,CAAA;EAAA,yBAAAC,OAAA;EAAA,IAAAC,CAAA,OAAAD,OAAA;IAAAE,CAAA,OAAAF,OAAA;EAAA,QAAAF,wBAAA,YAAAA,CAAAC,CAAA;IAAA,OAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA;EAAA,GAAAF,CAAA;AAAA;AAAA,SAAAH,wBAAAG,CAAA,EAAAE,CAAA;EAAA,KAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA;EAAA,aAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA;IAAAK,OAAA,EAAAL;EAAA;EAAA,IAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA;EAAA,IAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA;EAAA,IAAAQ,CAAA;MAAAC,SAAA;IAAA;IAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA;EAAA,SAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,CAAA;IAAA,IAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA;IAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA;EAAA;EAAA,OAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAAA;AAElC;AACO,MAAMW,yCAAyC,GAAIC,IAAiB,IACzE,gCAAgCxB,KAAK,CAACyB,aAAa,CAACD,IAAI,CAAC,EAAE;AAE7D;AAAAE,OAAA,CAAAH,yCAAA,GAAAA,yCAAA;AACO,MAAMI,eAAe,GAAGA,CAACC,GAAW,EAAEC,OAAe,KAAK,GAAGD,GAAG,KAAKC,OAAO,EAAE;AAErF;AAAAH,OAAA,CAAAC,eAAA,GAAAA,eAAA;AACO,MAAMG,uBAAuB,GAAGA,CAACD,OAAe,EAAEE,IAAgC,KAAI;EAC3F,IAAIC,GAAG,GAAGH,OAAO;EACjB,IAAIE,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;IACnBD,GAAG,IAAI,WAAWD,IAAI,CAACG,GAAG,CAAClC,KAAK,CAACmC,iBAAiB,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,IAAI;EACpE;EACA,OAAOJ,GAAG;AACZ,CAAC;AAAAN,OAAA,CAAAI,uBAAA,GAAAA,uBAAA","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dts/AST.d.ts b/dist/dts/AST.d.ts
index bb959f3df83259251c81ae78c9d49554b970a776..f966e9296ad65fc71659f3a93b56363093a816e2 100644
--- a/dist/dts/AST.d.ts
+++ b/dist/dts/AST.d.ts
@@ -35,7 +35,10 @@ export declare const TypeAnnotationId: unique symbol;
  * @category annotations
  * @since 1.0.0
  */
-export type MessageAnnotation = (issue: ParseIssue) => string | Effect<string>;
+export type MessageAnnotation = (issue: ParseIssue) => string | Effect<string> | {
+    readonly message: string | Effect<string>;
+    readonly override: boolean;
+};
 /**
  * @category annotations
  * @since 1.0.0
@@ -1099,14 +1102,14 @@ export declare const mutable: (ast: AST) => AST;
 /**
  * @since 1.0.0
  */
-export type Compiler<A> = (ast: AST) => A;
+export type Compiler<A> = (ast: AST, path: ReadonlyArray<PropertyKey>) => A;
 /**
  * @since 1.0.0
  */
 export type Match<A> = {
     [K in AST["_tag"]]: (ast: Extract<AST, {
         _tag: K;
-    }>, compile: Compiler<A>) => A;
+    }>, compile: Compiler<A>, path: ReadonlyArray<PropertyKey>) => A;
 };
 /**
  * @since 1.0.0
@@ -1120,8 +1123,4 @@ export declare const typeAST: (ast: AST) => AST;
  * @since 1.0.0
  */
 export declare const encodedAST: (ast: AST) => AST;
-/**
- * @since 1.0.0
- */
-export declare const hash: (ast: AST) => number;
 //# sourceMappingURL=AST.d.ts.map
\ No newline at end of file
diff --git a/dist/dts/AST.d.ts.map b/dist/dts/AST.d.ts.map
index fc55fc38931b1ef775b8ad21815d5480445592e5..ae0e8f3e553bcee71fdd0cab420d2143ff7ab3ca 100644
--- a/dist/dts/AST.d.ts.map
+++ b/dist/dts/AST.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"AST.d.ts","sourceRoot":"","sources":["../../src/AST.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"AST.d.ts","sourceRoot":"","sources":["../../src/AST.ts"],"names":[],"mappings":"AAAA;;GAEG;AAEH,OAAO,KAAK,GAAG,MAAM,cAAc,CAAA;AACnC,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAA;AAI3C,OAAO,KAAK,MAAM,MAAM,eAAe,CAAA;AAIvC,OAAO,KAAK,EAAE,WAAW,EAAE,MAAM,cAAc,CAAA;AAG/C,OAAO,KAAK,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAA;AAElD;;;GAGG;AACH,MAAM,MAAM,GAAG,GACX,WAAW,GACX,OAAO,GACP,YAAY,GACZ,gBAAgB,GAChB,WAAW,GACX,YAAY,GACZ,cAAc,GACd,UAAU,GACV,aAAa,GACb,aAAa,GACb,cAAc,GACd,aAAa,GACb,aAAa,GACb,aAAa,GACb,KAAK,GACL,eAAe,GAEf,UAAU,GACV,SAAS,GACT,WAAW,GACX,KAAK,GACL,OAAO,GAEP,cAAc,CAAA;AAMlB;;;GAGG;AACH,MAAM,MAAM,eAAe,GAAG,GAAG,CAAC,qBAAqB,CAAC,MAAM,GAAG,MAAM,CAAC,CAAA;AAExE;;;GAGG;AACH,eAAO,MAAM,iBAAiB,eAAgD,CAAA;AAE9E;;;GAGG;AACH,MAAM,MAAM,cAAc,GAAG,MAAM,CAAA;AAEnC;;;GAGG;AACH,eAAO,MAAM,gBAAgB,eAA+C,CAAA;AAE5E;;;GAGG;AACH,MAAM,MAAM,iBAAiB,GAAG,CAC9B,KAAK,EAAE,UAAU,KACd,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG;IAC7B,QAAQ,CAAC,OAAO,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA;IACzC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAA;CAC3B,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,mBAAmB,eAAkD,CAAA;AAElF;;;GAGG;AACH,MAAM,MAAM,oBAAoB,GAAG,MAAM,CAAA;AAEzC;;;GAGG;AACH,eAAO,MAAM,sBAAsB,eAAqD,CAAA;AAExF;;;GAGG;AACH,MAAM,MAAM,eAAe,GAAG,MAAM,CAAA;AAEpC;;;GAGG;AACH,eAAO,MAAM,iBAAiB,eAAgD,CAAA;AAE9E;;;GAGG;AACH,MAAM,MAAM,qBAAqB,GAAG,MAAM,CAAA;AAE1C;;;GAGG;AACH,eAAO,MAAM,uBAAuB,eAAsD,CAAA;AAE1F;;;GAGG;AACH,MAAM,MAAM,kBAAkB,CAAC,CAAC,IAAI,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAA;AAEhE;;;GAGG;AACH,eAAO,MAAM,oBAAoB,eAAmD,CAAA;AAEpF;;;GAGG;AACH,MAAM,MAAM,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAA;AAEpC;;;GAGG;AACH,eAAO,MAAM,mBAAmB,eAAkD,CAAA;AAElF;;;GAGG;AACH,MAAM,MAAM,oBAAoB,GAAG,MAAM,CAAA;AAEzC;;;GAGG;AACH,eAAO,MAAM,sBAAsB,eAAqD,CAAA;AAExF;;;GAGG;AACH,MAAM,MAAM,uBAAuB,GAAG,MAAM,CAAA;AAE5C;;;GAGG;AACH,eAAO,MAAM,yBAAyB,eAAwD,CAAA;AAE9F;;;GAGG;AACH,MAAM,MAAM,qBAAqB,GAAG,WAAW,GAAG,SAAS,CAAA;AAE3D;;;GAGG;AACH,eAAO,MAAM,uBAAuB,eAAsD,CAAA;AAE1F;;;GAGG;AACH,MAAM,MAAM,kBAAkB,GAAG,OAAO,GAAG,SAAS,GAAG,SAAS,CAAA;AAEhE;;;GAGG;AACH,eAAO,MAAM,oBAAoB,eAAmD,CAAA;AAKpF;;;GAGG;AACH,MAAM,MAAM,yBAAyB,GAAG,CAAC,KAAK,EAAE,UAAU,KAAK,MAAM,GAAG,SAAS,CAAA;AAEjF;;;GAGG;AACH,eAAO,MAAM,2BAA2B,eAA0D,CAAA;AAgBlG;;;GAGG;AACH,MAAM,WAAW,WAAW;IAC1B,QAAQ,EAAE,CAAC,EAAE,MAAM,GAAG,OAAO,CAAA;CAC9B;AAED;;;GAGG;AACH,MAAM,WAAW,SAAS;IACxB,QAAQ,CAAC,WAAW,EAAE,WAAW,CAAA;CAClC;AAED;;;GAGG;AACH,eAAO,MAAM,aAAa,EAAE;IAC1B,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;IAC5D,CAAC,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;CAOzD,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,kBAAkB,cAdC,SAAS,sEAc0C,CAAA;AAEnF;;;GAGG;AACH,eAAO,MAAM,oBAAoB,cApBD,SAAS,qCAoBgD,CAAA;AAEzF;;;GAGG;AACH,eAAO,MAAM,kBAAkB,cA1BC,SAAS,0BA0B0C,CAAA;AAEnF;;;GAGG;AACH,eAAO,MAAM,uBAAuB,cAhCJ,SAAS,0BAgCyD,CAAA;AAElG;;;GAGG;AACH,eAAO,MAAM,wBAAwB,cAtCL,SAAS,0BAsC4D,CAAA;AAErG;;;GAGG;AACH,eAAO,MAAM,qBAAqB,cA5CF,SAAS,oDA4C4D,CAAA;AAErG;;;GAGG;AACH,eAAO,MAAM,oBAAoB,cAlDD,SAAS,2BAkDyD,CAAA;AAElG;;;GAGG;AACH,eAAO,MAAM,uBAAuB,cAxDJ,SAAS,0BAwDyD,CAAA;AAElG;;;GAGG;AACH,eAAO,MAAM,0BAA0B,cA9DP,SAAS,0BA8DkE,CAAA;AAE3G;;;GAGG;AACH,eAAO,MAAM,wBAAwB,cApEL,SAAS,yCAoE4D,CAAA;AAErG;;;GAGG;AACH,eAAO,MAAM,qBAAqB,cA1EF,SAAS,sCA0EmD,CAAA;AAE5F;;;GAGG;AACH,eAAO,MAAM,4BAA4B,cAhFT,SAAS,6CAgFwE,CAAA;AAUjH;;;GAGG;AACH,qBAAa,WAAY,YAAW,SAAS;IAMzC,QAAQ,CAAC,cAAc,EAAE,aAAa,CAAC,GAAG,CAAC;IAC3C,QAAQ,CAAC,aAAa,EAAE,CACtB,GAAG,cAAc,EAAE,aAAa,CAAC,GAAG,CAAC,KAClC,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,WAAW,KAAK,MAAM,CAAC,GAAG,EAAE,UAAU,EAAE,GAAG,CAAC;IAC/F,QAAQ,CAAC,aAAa,EAAE,CACtB,GAAG,cAAc,EAAE,aAAa,CAAC,GAAG,CAAC,KAClC,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,WAAW,KAAK,MAAM,CAAC,GAAG,EAAE,UAAU,EAAE,GAAG,CAAC;IAC/F,QAAQ,CAAC,WAAW,EAAE,WAAW;IAZnC;;OAEG;IACH,QAAQ,CAAC,IAAI,iBAAgB;gBAElB,cAAc,EAAE,aAAa,CAAC,GAAG,CAAC,EAClC,aAAa,EAAE,CACtB,GAAG,cAAc,EAAE,aAAa,CAAC,GAAG,CAAC,KAClC,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,WAAW,KAAK,MAAM,CAAC,GAAG,EAAE,UAAU,EAAE,GAAG,CAAC,EACtF,aAAa,EAAE,CACtB,GAAG,cAAc,EAAE,aAAa,CAAC,GAAG,CAAC,KAClC,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,WAAW,KAAK,MAAM,CAAC,GAAG,EAAE,UAAU,EAAE,GAAG,CAAC,EACtF,WAAW,GAAE,WAAgB;IAExC;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAOjB;AAKD;;;GAGG;AACH,eAAO,MAAM,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,WAA2C,CAAA;AAE5F;;;GAGG;AACH,MAAM,MAAM,YAAY,GAAG,MAAM,GAAG,MAAM,GAAG,OAAO,GAAG,IAAI,GAAG,MAAM,CAAA;AAEpE;;;GAGG;AACH,qBAAa,OAAQ,YAAW,SAAS;IAK3B,QAAQ,CAAC,OAAO,EAAE,YAAY;IAAE,QAAQ,CAAC,WAAW,EAAE,WAAW;IAJ7E;;OAEG;IACH,QAAQ,CAAC,IAAI,aAAY;gBACJ,OAAO,EAAE,YAAY,EAAW,WAAW,GAAE,WAAgB;IAClF;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAOjB;AAED;;;GAGG;AACH,eAAO,MAAM,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,OAAmC,CAAA;AAEhF,QAAA,MAAM,KAAK,SAET,CAAA;AAEF,OAAO;AACL;;;GAGG;AACH,KAAK,IAAI,IAAI,EACd,CAAA;AAED;;;GAGG;AACH,qBAAa,YAAa,YAAW,SAAS;IAKhC,QAAQ,CAAC,MAAM,EAAE,MAAM;IAAE,QAAQ,CAAC,WAAW,EAAE,WAAW;IAJtE;;OAEG;IACH,QAAQ,CAAC,IAAI,kBAAiB;gBACT,MAAM,EAAE,MAAM,EAAW,WAAW,GAAE,WAAgB;IAC3E;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAOjB;AAED;;;GAGG;AACH,eAAO,MAAM,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,YAA6C,CAAA;AAE/F;;;GAGG;AACH,qBAAa,gBAAiB,YAAW,SAAS;IAKpC,QAAQ,CAAC,WAAW,EAAE,WAAW;IAJ7C;;OAEG;IACH,QAAQ,CAAC,IAAI,sBAAqB;gBACb,WAAW,GAAE,WAAgB;IAClD;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAMjB;AAED;;;GAGG;AACH,eAAO,MAAM,gBAAgB,EAAE,gBAE7B,CAAA;AAEF;;;GAGG;AACH,eAAO,MAAM,kBAAkB,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,gBAAqD,CAAA;AAE3G;;;GAGG;AACH,qBAAa,WAAY,YAAW,SAAS;IAK/B,QAAQ,CAAC,WAAW,EAAE,WAAW;IAJ7C;;OAEG;IACH,QAAQ,CAAC,IAAI,iBAAgB;gBACR,WAAW,GAAE,WAAgB;IAClD;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAMjB;AAED;;;GAGG;AACH,eAAO,MAAM,WAAW,EAAE,WAExB,CAAA;AAEF;;;GAGG;AACH,eAAO,MAAM,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,WAA2C,CAAA;AAE5F;;;GAGG;AACH,qBAAa,YAAa,YAAW,SAAS;IAKhC,QAAQ,CAAC,WAAW,EAAE,WAAW;IAJ7C;;OAEG;IACH,QAAQ,CAAC,IAAI,kBAAiB;gBACT,WAAW,GAAE,WAAgB;IAClD;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAMjB;AAED;;;GAGG;AACH,eAAO,MAAM,YAAY,EAAE,YAEzB,CAAA;AAEF;;;GAGG;AACH,eAAO,MAAM,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,YAA6C,CAAA;AAE/F;;;GAGG;AACH,qBAAa,cAAe,YAAW,SAAS;IAKlC,QAAQ,CAAC,WAAW,EAAE,WAAW;IAJ7C;;OAEG;IACH,QAAQ,CAAC,IAAI,oBAAmB;gBACX,WAAW,GAAE,WAAgB;IAClD;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAMjB;AAED;;;GAGG;AACH,eAAO,MAAM,cAAc,EAAE,cAE3B,CAAA;AAEF;;;GAGG;AACH,eAAO,MAAM,gBAAgB,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,cAAiD,CAAA;AAErG;;;GAGG;AACH,qBAAa,UAAW,YAAW,SAAS;IAK9B,QAAQ,CAAC,WAAW,EAAE,WAAW;IAJ7C;;OAEG;IACH,QAAQ,CAAC,IAAI,gBAAe;gBACP,WAAW,GAAE,WAAgB;IAClD;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAMjB;AAED;;;GAGG;AACH,eAAO,MAAM,UAAU,EAAE,UAEvB,CAAA;AAEF;;;GAGG;AACH,eAAO,MAAM,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,UAAyC,CAAA;AAEzF;;;GAGG;AACH,qBAAa,aAAc,YAAW,SAAS;IAKjC,QAAQ,CAAC,WAAW,EAAE,WAAW;IAJ7C;;OAEG;IACH,QAAQ,CAAC,IAAI,mBAAkB;gBACV,WAAW,GAAE,WAAgB;IAClD;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAMjB;AAED;;;GAGG;AACH,eAAO,MAAM,aAAa,EAAE,aAG1B,CAAA;AAEF;;;GAGG;AACH,eAAO,MAAM,eAAe,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,aAA+C,CAAA;AAElG;;;GAGG;AACH,qBAAa,aAAc,YAAW,SAAS;IAKjC,QAAQ,CAAC,WAAW,EAAE,WAAW;IAJ7C;;OAEG;IACH,QAAQ,CAAC,IAAI,mBAAkB;gBACV,WAAW,GAAE,WAAgB;IAClD;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAMjB;AAED;;;GAGG;AACH,eAAO,MAAM,aAAa,EAAE,aAG1B,CAAA;AAEF;;;GAGG;AACH,eAAO,MAAM,eAAe,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,aAA+C,CAAA;AAElG;;;GAGG;AACH,qBAAa,cAAe,YAAW,SAAS;IAKlC,QAAQ,CAAC,WAAW,EAAE,WAAW;IAJ7C;;OAEG;IACH,QAAQ,CAAC,IAAI,oBAAmB;gBACX,WAAW,GAAE,WAAgB;IAClD;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAMjB;AAED;;;GAGG;AACH,eAAO,MAAM,cAAc,EAAE,cAG3B,CAAA;AAEF;;;GAGG;AACH,eAAO,MAAM,gBAAgB,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,cAAiD,CAAA;AAErG;;;GAGG;AACH,qBAAa,aAAc,YAAW,SAAS;IAKjC,QAAQ,CAAC,WAAW,EAAE,WAAW;IAJ7C;;OAEG;IACH,QAAQ,CAAC,IAAI,mBAAkB;gBACV,WAAW,GAAE,WAAgB;IAClD;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAMjB;AAED;;;GAGG;AACH,eAAO,MAAM,aAAa,EAAE,aAG1B,CAAA;AAEF;;;GAGG;AACH,eAAO,MAAM,eAAe,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,aAA+C,CAAA;AAElG;;;GAGG;AACH,qBAAa,aAAc,YAAW,SAAS;IAKjC,QAAQ,CAAC,WAAW,EAAE,WAAW;IAJ7C;;OAEG;IACH,QAAQ,CAAC,IAAI,mBAAkB;gBACV,WAAW,GAAE,WAAgB;IAClD;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAMjB;AAED;;;GAGG;AACH,eAAO,MAAM,aAAa,EAAE,aAG1B,CAAA;AAEF;;;GAGG;AACH,eAAO,MAAM,eAAe,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,aAA+C,CAAA;AAElG;;;GAGG;AACH,qBAAa,aAAc,YAAW,SAAS;IAKjC,QAAQ,CAAC,WAAW,EAAE,WAAW;IAJ7C;;OAEG;IACH,QAAQ,CAAC,IAAI,mBAAkB;gBACV,WAAW,GAAE,WAAgB;IAClD;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAMjB;AAED;;;GAGG;AACH,eAAO,MAAM,aAAa,EAAE,aAI1B,CAAA;AAEF;;;GAGG;AACH,eAAO,MAAM,eAAe,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,aAA+C,CAAA;AAElG;;;GAGG;AACH,qBAAa,KAAM,YAAW,SAAS;IAMnC,QAAQ,CAAC,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;IACjE,QAAQ,CAAC,WAAW,EAAE,WAAW;IANnC;;OAEG;IACH,QAAQ,CAAC,IAAI,WAAU;gBAEZ,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC,EACxD,WAAW,GAAE,WAAgB;IAExC;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAMjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAOjB;AAED;;;GAGG;AACH,eAAO,MAAM,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,KAA+B,CAAA;AAE1E;;;GAGG;AACH,qBAAa,mBAAmB;IAClB,QAAQ,CAAC,IAAI,EAAE,aAAa,GAAG,aAAa;IAAE,QAAQ,CAAC,OAAO,EAAE,MAAM;gBAA7D,IAAI,EAAE,aAAa,GAAG,aAAa,EAAW,OAAO,EAAE,MAAM;IAClF;;OAEG;IACH,QAAQ;IAQR;;OAEG;IACH,MAAM,IAAI,MAAM;CAMjB;AAED;;;GAGG;AACH,qBAAa,eAAgB,YAAW,SAAS;IAe7C,QAAQ,CAAC,IAAI,EAAE,MAAM;IACrB,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,qBAAqB,CAAC,mBAAmB,CAAC;IAC9D,QAAQ,CAAC,WAAW,EAAE,WAAW;IAhBnC,MAAM,CAAC,IAAI,SACH,MAAM,SACL,cAAc,mBAAmB,CAAC,gBAC5B,WAAW,KACvB,eAAe,GAAG,OAAO,CAGP;IAErB;;OAEG;IACH,QAAQ,CAAC,IAAI,qBAAoB;IACjC,OAAO;IAKP;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAQjB;AAMD;;;GAGG;AACH,eAAO,MAAM,iBAAiB,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,eAAmD,CAAA;AAExG;;;GAGG;AACH,qBAAa,OAAO;IACN,QAAQ,CAAC,IAAI,EAAE,GAAG;IAAE,QAAQ,CAAC,UAAU,EAAE,OAAO;gBAAvC,IAAI,EAAE,GAAG,EAAW,UAAU,EAAE,OAAO;IAC5D;;OAEG;IACH,MAAM,IAAI,MAAM;IAMhB;;OAEG;IACH,QAAQ;CAGT;AAED;;;GAGG;AACH,qBAAa,SAAU,YAAW,SAAS;IAMvC,QAAQ,CAAC,QAAQ,EAAE,aAAa,CAAC,OAAO,CAAC;IACzC,QAAQ,CAAC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC;IACjC,QAAQ,CAAC,UAAU,EAAE,OAAO;IAC5B,QAAQ,CAAC,WAAW,EAAE,WAAW;IARnC;;OAEG;IACH,QAAQ,CAAC,IAAI,eAAc;gBAEhB,QAAQ,EAAE,aAAa,CAAC,OAAO,CAAC,EAChC,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,EACxB,UAAU,EAAE,OAAO,EACnB,WAAW,GAAE,WAAgB;IAgBxC;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CASjB;AA6BD;;;GAGG;AACH,eAAO,MAAM,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,SAAuC,CAAA;AAEtF;;;GAGG;AACH,qBAAa,iBAAkB,YAAW,SAAS;IAE/C,QAAQ,CAAC,IAAI,EAAE,WAAW;IAC1B,QAAQ,CAAC,IAAI,EAAE,GAAG;IAClB,QAAQ,CAAC,UAAU,EAAE,OAAO;IAC5B,QAAQ,CAAC,UAAU,EAAE,OAAO;IAC5B,QAAQ,CAAC,WAAW,EAAE,WAAW;gBAJxB,IAAI,EAAE,WAAW,EACjB,IAAI,EAAE,GAAG,EACT,UAAU,EAAE,OAAO,EACnB,UAAU,EAAE,OAAO,EACnB,WAAW,GAAE,WAAgB;IAExC;;OAEG;IACH,MAAM,IAAI,MAAM;CASjB;AAED;;GAEG;AACH,MAAM,MAAM,SAAS,GAAG,aAAa,GAAG,aAAa,GAAG,eAAe,GAAG,UAAU,CAAC,SAAS,CAAC,CAAA;AAE/F;;GAEG;AACH,eAAO,MAAM,WAAW,QAAS,GAAG,qBAUnC,CAAA;AAED;;;GAGG;AACH,qBAAa,cAAc;IAOvB,QAAQ,CAAC,IAAI,EAAE,GAAG;IAClB,QAAQ,CAAC,UAAU,EAAE,OAAO;IAP9B;;OAEG;IACH,QAAQ,CAAC,SAAS,EAAE,SAAS,CAAA;gBAE3B,SAAS,EAAE,GAAG,EACL,IAAI,EAAE,GAAG,EACT,UAAU,EAAE,OAAO;IAQ9B;;OAEG;IACH,MAAM,IAAI,MAAM;CAOjB;AAED;;;GAGG;AACH,qBAAa,WAAY,YAAW,SAAS;IAgBzC,QAAQ,CAAC,WAAW,EAAE,WAAW;IAfnC;;OAEG;IACH,QAAQ,CAAC,IAAI,iBAAgB;IAC7B;;OAEG;IACH,QAAQ,CAAC,kBAAkB,EAAE,aAAa,CAAC,iBAAiB,CAAC,CAAA;IAC7D;;OAEG;IACH,QAAQ,CAAC,eAAe,EAAE,aAAa,CAAC,cAAc,CAAC,CAAA;gBAErD,kBAAkB,EAAE,aAAa,CAAC,iBAAiB,CAAC,EACpD,eAAe,EAAE,aAAa,CAAC,cAAc,CAAC,EACrC,WAAW,GAAE,WAAgB;IAkCxC;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAQjB;AAwBD;;;GAGG;AACH,eAAO,MAAM,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,WAA2C,CAAA;AAE5F;;GAEG;AACH,MAAM,MAAM,OAAO,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;AAwHrD;;;GAGG;AACH,qBAAa,KAAM,YAAW,SAAS;IA8BjB,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC;IAAE,QAAQ,CAAC,WAAW,EAAE,WAAW;IA7BnF,MAAM,CAAC,IAAI,eAAgB,cAAc,GAAG,CAAC,gBAAgB,WAAW,KAAG,GAAG,CAY7E;IAaD;;OAEG;IACH,QAAQ,CAAC,IAAI,WAAU;IACvB,OAAO;IACP;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAMjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAOjB;AAQD;;;GAGG;AACH,eAAO,MAAM,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,KAA+B,CAAA;AAO1E;;;GAGG;AACH,qBAAa,OAAQ,YAAW,SAAS;IAK3B,QAAQ,CAAC,CAAC,EAAE,MAAM,GAAG;IAAE,QAAQ,CAAC,WAAW,EAAE,WAAW;IAJpE;;OAEG;IACH,QAAQ,CAAC,IAAI,aAAY;gBACJ,CAAC,EAAE,MAAM,GAAG,EAAW,WAAW,GAAE,WAAgB;IAGzE;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAWjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAejB;AAED;;;GAGG;AACH,eAAO,MAAM,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,OAAmC,CAAA;AAEhF;;;GAGG;AACH,qBAAa,UAAU,CAAC,IAAI,SAAS,GAAG,GAAG,GAAG,CAAE,YAAW,SAAS;IAMhE,QAAQ,CAAC,IAAI,EAAE,IAAI;IACnB,QAAQ,CAAC,MAAM,EAAE,CACf,KAAK,EAAE,GAAG,EACV,OAAO,EAAE,YAAY,EACrB,IAAI,EAAE,UAAU,KACb,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC;IAC9B,QAAQ,CAAC,WAAW,EAAE,WAAW;IAXnC;;OAEG;IACH,QAAQ,CAAC,IAAI,gBAAe;gBAEjB,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,CACf,KAAK,EAAE,GAAG,EACV,OAAO,EAAE,YAAY,EACrB,IAAI,EAAE,UAAU,KACb,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,EACrB,WAAW,GAAE,WAAgB;IAExC;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAGjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAOjB;AAED;;;GAGG;AACH,eAAO,MAAM,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,UAAU,CAAC,GAAG,CAAgC,CAAA;AAE9F;;;GAGG;AACH,MAAM,WAAW,YAAY;IAC3B,sBAAsB;IACtB,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,GAAG,KAAK,GAAG,SAAS,CAAA;IAC7C,uBAAuB;IACvB,QAAQ,CAAC,gBAAgB,CAAC,EAAE,QAAQ,GAAG,OAAO,GAAG,UAAU,GAAG,SAAS,CAAA;CACxE;AAED;;GAEG;AACH,eAAO,MAAM,kBAAkB,EAAE,YAAiB,CAAA;AAElD;;;GAGG;AACH,qBAAa,cAAe,YAAW,SAAS;IAM5C,QAAQ,CAAC,IAAI,EAAE,GAAG;IAClB,QAAQ,CAAC,EAAE,EAAE,GAAG;IAChB,QAAQ,CAAC,cAAc,EAAE,kBAAkB;IAC3C,QAAQ,CAAC,WAAW,EAAE,WAAW;IARnC;;OAEG;IACH,QAAQ,CAAC,IAAI,oBAAmB;gBAErB,IAAI,EAAE,GAAG,EACT,EAAE,EAAE,GAAG,EACP,cAAc,EAAE,kBAAkB,EAClC,WAAW,GAAE,WAAgB;IAExC;;OAEG;IACH,QAAQ,CAAC,OAAO,GAAE,OAAe;IAMjC;;OAEG;IACH,MAAM,IAAI,MAAM;CAQjB;AAED;;;GAGG;AACH,eAAO,MAAM,gBAAgB,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,cAAiD,CAAA;AAErG;;;GAGG;AACH,MAAM,MAAM,kBAAkB,GAC1B,mBAAmB,GACnB,qBAAqB,GACrB,yBAAyB,CAAA;AAE7B;;;GAGG;AACH,qBAAa,mBAAmB;IAM5B,QAAQ,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,cAAc,KAAK,MAAM,CAAC,GAAG,EAAE,UAAU,EAAE,GAAG,CAAC;IAC1G,QAAQ,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,cAAc,KAAK,MAAM,CAAC,GAAG,EAAE,UAAU,EAAE,GAAG,CAAC;IAN5G;;OAEG;IACH,QAAQ,CAAC,IAAI,yBAAwB;gBAE1B,MAAM,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,cAAc,KAAK,MAAM,CAAC,GAAG,EAAE,UAAU,EAAE,GAAG,CAAC,EACjG,MAAM,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,cAAc,KAAK,MAAM,CAAC,GAAG,EAAE,UAAU,EAAE,GAAG,CAAC;CAE7G;AAMD;;;GAGG;AACH,eAAO,MAAM,qBAAqB,EAAE,CAAC,GAAG,EAAE,kBAAkB,KAAK,GAAG,IAAI,mBAEvE,CAAA;AAED;;;GAGG;AACH,qBAAa,qBAAqB;IAChC;;OAEG;IACH,QAAQ,CAAC,IAAI,2BAA0B;CACxC;AAED;;;GAGG;AACH,eAAO,MAAM,qBAAqB,EAAE,qBAAmD,CAAA;AAEvF;;;GAGG;AACH,eAAO,MAAM,uBAAuB,EAAE,CAAC,GAAG,EAAE,kBAAkB,KAAK,GAAG,IAAI,qBAGvE,CAAA;AAEH;;;;;;;;;;;;;GAaG;AACH,qBAAa,+BAA+B;IAExC,QAAQ,CAAC,IAAI,EAAE,WAAW;IAC1B,QAAQ,CAAC,EAAE,EAAE,WAAW;IACxB,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;IAC9D,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;gBAHrD,IAAI,EAAE,WAAW,EACjB,EAAE,EAAE,WAAW,EACf,MAAM,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EACrD,MAAM,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;CAEjE;AAKD;;;GAGG;AACH,qBAAa,yBAAyB;IAMlC,QAAQ,CAAC,gCAAgC,EAAE,aAAa,CACtD,+BAA+B,CAChC;IAPH;;OAEG;IACH,QAAQ,CAAC,IAAI,+BAA8B;gBAEhC,gCAAgC,EAAE,aAAa,CACtD,+BAA+B,CAChC;CAkBJ;AAED;;;GAGG;AACH,eAAO,MAAM,2BAA2B,EAAE,CAAC,GAAG,EAAE,kBAAkB,KAAK,GAAG,IAAI,yBACtB,CAAA;AAMxD;;;;GAIG;AACH,eAAO,MAAM,WAAW,QAAS,GAAG,eAAe,WAAW,KAAG,GAIhE,CAAA;AAED;;;;GAIG;AACH,eAAO,MAAM,KAAK,QAAS,GAAG,KAAG,GAA+B,CAAA;AAKhE;;GAEG;AACH,eAAO,MAAM,wBAAwB,QAAS,eAAe,KAAG,MAc/D,CAAA;AAED;;GAEG;AACH,eAAO,MAAM,qBAAqB,QAAS,GAAG,KAAG,MAAM,iBAAiB,CAevE,CAAA;AAoJD;;;;GAIG;AACH,eAAO,MAAM,IAAI,QAAS,GAAG,QAAQ,cAAc,WAAW,CAAC,KAAG,WAAW,GAAG,cAuC/E,CAAA;AAED;;;;GAIG;AACH,eAAO,MAAM,IAAI,QAAS,GAAG,QAAQ,cAAc,WAAW,CAAC,KAAG,WAAW,GAAG,cACR,CAAA;AAKxE;;;;GAIG;AACH,eAAO,MAAM,OAAO,QAAS,GAAG,YAAY;IAAE,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAA;CAAE,KAAG,GAsCtE,CAAA;AAED;;;;GAIG;AACH,eAAO,MAAM,QAAQ,QAAS,GAAG,KAAG,GAgCnC,CAAA;AAED;;;;;;GAMG;AACH,eAAO,MAAM,OAAO,QAAS,GAAG,KAAG,GAqClC,CAAA;AAMD;;GAEG;AACH,MAAM,MAAM,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;AAE3E;;GAEG;AACH,MAAM,MAAM,KAAK,CAAC,CAAC,IAAI;KACpB,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE;QAAE,IAAI,EAAE,CAAC,CAAA;KAAE,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC;CAClH,CAAA;AAED;;GAEG;AACH,eAAO,MAAM,WAAW,aAAc,MAAM,CAAC,CAAC,KAAG,SAAS,CAAC,CAG1D,CAAA;AAUD;;GAEG;AACH,eAAO,MAAM,OAAO,QAAS,GAAG,KAAG,GA+ClC,CAAA;AA+BD;;GAEG;AACH,eAAO,MAAM,UAAU,QAAS,GAAG,KAAG,GA4CrC,CAAA"}
\ No newline at end of file
diff --git a/dist/dts/Arbitrary.d.ts.map b/dist/dts/Arbitrary.d.ts.map
index fa4a41088a103ca245905e5b9fd5381698cb5d8c..f90ba71736cab470a8c9a0f20c1508c67247004b 100644
--- a/dist/dts/Arbitrary.d.ts.map
+++ b/dist/dts/Arbitrary.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"Arbitrary.d.ts","sourceRoot":"","sources":["../../src/Arbitrary.ts"],"names":[],"mappings":"AAAA;;GAEG;AAMH,OAAO,KAAK,SAAS,MAAM,gBAAgB,CAAA;AAI3C,OAAO,KAAK,KAAK,MAAM,MAAM,aAAa,CAAA;AAE1C;;;GAGG;AACH,MAAM,WAAW,aAAa,CAAC,CAAC;IAC9B,CAAC,EAAE,EAAE,OAAO,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;CAC/C;AAED;;;GAGG;AACH,eAAO,MAAM,eAAe,EAAE,OAAO,MAAqD,CAAA;AAE1F;;;GAGG;AACH,MAAM,MAAM,eAAe,GAAG,OAAO,eAAe,CAAA;AAEpD;;;GAGG;AACH,eAAO,MAAM,SAAS,eACP,CAAC,GAAG,IAAI,EAAE,cAAc,cAAc,GAAG,CAAC,CAAC,KAAK,cAAc,CAAC,CAAC,kBAChE,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAqD,CAAA;AAElH;;;;;GAKG;AACH,eAAO,MAAM,QAAQ,oBAAqB,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,cAAc,CAAC,CAAuB,CAAA;AAEzG;;;;;GAKG;AACH,eAAO,MAAM,IAAI,oBAAqB,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,UAAU,SAAS,CAAC,CAAC,CAAgC,CAAA"}
\ No newline at end of file
+{"version":3,"file":"Arbitrary.d.ts","sourceRoot":"","sources":["../../src/Arbitrary.ts"],"names":[],"mappings":"AAAA;;GAEG;AAMH,OAAO,KAAK,SAAS,MAAM,gBAAgB,CAAA;AAI3C,OAAO,KAAK,KAAK,MAAM,MAAM,aAAa,CAAA;AAE1C;;;GAGG;AACH,MAAM,WAAW,aAAa,CAAC,CAAC;IAC9B,CAAC,EAAE,EAAE,OAAO,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;CAC/C;AAED;;;GAGG;AACH,eAAO,MAAM,eAAe,EAAE,OAAO,MAAqD,CAAA;AAE1F;;;GAGG;AACH,MAAM,MAAM,eAAe,GAAG,OAAO,eAAe,CAAA;AAEpD;;;GAGG;AACH,eAAO,MAAM,SAAS,eACP,CAAC,GAAG,IAAI,EAAE,cAAc,cAAc,GAAG,CAAC,CAAC,KAAK,cAAc,CAAC,CAAC,kBAChE,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAqD,CAAA;AAElH;;;;;GAKG;AACH,eAAO,MAAM,QAAQ,oBAAqB,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,cAAc,CAAC,CAA2B,CAAA;AAE7G;;;;;GAKG;AACH,eAAO,MAAM,IAAI,oBAAqB,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,UAAU,SAAS,CAAC,CAAC,CAAgC,CAAA"}
\ No newline at end of file
diff --git a/dist/dts/ArrayFormatter.d.ts b/dist/dts/ArrayFormatter.d.ts
index 9937f5a7fd600fd54409b24327e6eba2493e025d..55241299da0713cebe7f925d0115e245d4094bc8 100644
--- a/dist/dts/ArrayFormatter.d.ts
+++ b/dist/dts/ArrayFormatter.d.ts
@@ -8,7 +8,7 @@ import type * as ParseResult from "./ParseResult.js";
  * @since 1.0.0
  */
 export interface Issue {
-    readonly _tag: ParseResult.ParseIssue["_tag"] | ParseResult.Missing["_tag"] | ParseResult.Unexpected["_tag"];
+    readonly _tag: "Transformation" | "Type" | "Declaration" | "Refinement" | "TupleType" | "TypeLiteral" | "Union" | "Forbidden" | "Missing" | "Unexpected";
     readonly path: ReadonlyArray<PropertyKey>;
     readonly message: string;
 }
diff --git a/dist/dts/ArrayFormatter.d.ts.map b/dist/dts/ArrayFormatter.d.ts.map
index 202b4c39d2f16b756ba484758eade777bcde3efb..9018487414efd3dae75a18697665d1239bec8742 100644
--- a/dist/dts/ArrayFormatter.d.ts.map
+++ b/dist/dts/ArrayFormatter.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"ArrayFormatter.d.ts","sourceRoot":"","sources":["../../src/ArrayFormatter.ts"],"names":[],"mappings":"AAAA;;GAEG;AAGH,OAAO,KAAK,MAAM,MAAM,eAAe,CAAA;AACvC,OAAO,KAAK,KAAK,WAAW,MAAM,kBAAkB,CAAA;AAGpD;;;GAGG;AACH,MAAM,WAAW,KAAK;IACpB,QAAQ,CAAC,IAAI,EAAE,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;IAC5G,QAAQ,CAAC,IAAI,EAAE,aAAa,CAAC,WAAW,CAAC,CAAA;IACzC,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAA;CACzB;AAED;;;GAGG;AACH,eAAO,MAAM,WAAW,UAAW,YAAY,UAAU,KAAG,OAAO,MAAM,CAAC,MAAM,KAAK,CAAC,CAAc,CAAA;AAEpG;;;GAGG;AACH,eAAO,MAAM,eAAe,UAAW,YAAY,UAAU,KAAG,MAAM,KAAK,CAAuC,CAAA;AAElH;;;GAGG;AACH,eAAO,MAAM,WAAW,UAAW,YAAY,UAAU,KAAG,OAAO,MAAM,CAAC,MAAM,KAAK,CAAC,CAA6B,CAAA;AAEnH;;;GAGG;AACH,eAAO,MAAM,eAAe,UAAW,YAAY,UAAU,KAAG,MAAM,KAAK,CAAiC,CAAA"}
\ No newline at end of file
+{"version":3,"file":"ArrayFormatter.d.ts","sourceRoot":"","sources":["../../src/ArrayFormatter.ts"],"names":[],"mappings":"AAAA;;GAEG;AAGH,OAAO,KAAK,MAAM,MAAM,eAAe,CAAA;AACvC,OAAO,KAAK,KAAK,WAAW,MAAM,kBAAkB,CAAA;AAGpD;;;GAGG;AACH,MAAM,WAAW,KAAK;IACpB,QAAQ,CAAC,IAAI,EACT,gBAAgB,GAChB,MAAM,GACN,aAAa,GACb,YAAY,GACZ,WAAW,GACX,aAAa,GACb,OAAO,GACP,WAAW,GACX,SAAS,GACT,YAAY,CAAA;IAChB,QAAQ,CAAC,IAAI,EAAE,aAAa,CAAC,WAAW,CAAC,CAAA;IACzC,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAA;CACzB;AAED;;;GAGG;AACH,eAAO,MAAM,WAAW,UAAW,YAAY,UAAU,KAAG,OAAO,MAAM,CAAC,MAAM,KAAK,CAAC,CAAc,CAAA;AAEpG;;;GAGG;AACH,eAAO,MAAM,eAAe,UAAW,YAAY,UAAU,KAAG,MAAM,KAAK,CAAuC,CAAA;AAElH;;;GAGG;AACH,eAAO,MAAM,WAAW,UAAW,YAAY,UAAU,KAAG,OAAO,MAAM,CAAC,MAAM,KAAK,CAAC,CAA6B,CAAA;AAEnH;;;GAGG;AACH,eAAO,MAAM,eAAe,UAAW,YAAY,UAAU,KAAG,MAAM,KAAK,CAAiC,CAAA"}
\ No newline at end of file
diff --git a/dist/dts/Equivalence.d.ts.map b/dist/dts/Equivalence.d.ts.map
index 68d7f2ec277feb5b7a512507be662094cd5139cc..6284ce6e4d41ff2363570b4c89778c187dace313 100644
--- a/dist/dts/Equivalence.d.ts.map
+++ b/dist/dts/Equivalence.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"Equivalence.d.ts","sourceRoot":"","sources":["../../src/Equivalence.ts"],"names":[],"mappings":"AAAA;;GAEG;AAIH,OAAO,KAAK,WAAW,MAAM,oBAAoB,CAAA;AAOjD,OAAO,KAAK,KAAK,MAAM,MAAM,aAAa,CAAA;AAE1C;;;GAGG;AACH,eAAO,MAAM,iBAAiB,EAAE,OAAO,MAAuD,CAAA;AAE9F;;;GAGG;AACH,MAAM,MAAM,iBAAiB,GAAG,OAAO,iBAAiB,CAAA;AAExD;;;GAGG;AACH,eAAO,MAAM,WAAW,eACT,CAAC,GAAG,IAAI,EAAE,cAAc,YAAY,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,YAAY,WAAW,CAAC,CAAC,CAAC,kBACpF,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAuD,CAAA;AAEpH;;;GAGG;AACH,eAAO,MAAM,IAAI,oBAAqB,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,YAAY,WAAW,CAAC,CAAC,CAAmB,CAAA"}
\ No newline at end of file
+{"version":3,"file":"Equivalence.d.ts","sourceRoot":"","sources":["../../src/Equivalence.ts"],"names":[],"mappings":"AAAA;;GAEG;AAIH,OAAO,KAAK,WAAW,MAAM,oBAAoB,CAAA;AAOjD,OAAO,KAAK,KAAK,MAAM,MAAM,aAAa,CAAA;AAE1C;;;GAGG;AACH,eAAO,MAAM,iBAAiB,EAAE,OAAO,MAAuD,CAAA;AAE9F;;;GAGG;AACH,MAAM,MAAM,iBAAiB,GAAG,OAAO,iBAAiB,CAAA;AAExD;;;GAGG;AACH,eAAO,MAAM,WAAW,eACT,CAAC,GAAG,IAAI,EAAE,cAAc,YAAY,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,YAAY,WAAW,CAAC,CAAC,CAAC,kBACpF,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAuD,CAAA;AAEpH;;;GAGG;AACH,eAAO,MAAM,IAAI,oBAAqB,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,YAAY,WAAW,CAAC,CAAC,CAAuB,CAAA"}
\ No newline at end of file
diff --git a/dist/dts/JSONSchema.d.ts b/dist/dts/JSONSchema.d.ts
index 9fff02224856cc683491508ebb0a01e5988dbacb..854b1f5befe0da90d4b6656e6f550f2102baf2d7 100644
--- a/dist/dts/JSONSchema.d.ts
+++ b/dist/dts/JSONSchema.d.ts
@@ -7,21 +7,31 @@ import type * as Schema from "./Schema.js";
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Any {
+export interface JsonSchemaAnnotations {
+    title?: string;
+    description?: string;
+    default?: unknown;
+    examples?: Array<unknown>;
+}
+/**
+ * @category model
+ * @since 1.0.0
+ */
+export interface JsonSchema7Any extends JsonSchemaAnnotations {
     $id: "/schemas/any";
 }
 /**
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Unknown {
+export interface JsonSchema7Unknown extends JsonSchemaAnnotations {
     $id: "/schemas/unknown";
 }
 /**
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7object {
+export interface JsonSchema7object extends JsonSchemaAnnotations {
     $id: "/schemas/object";
     oneOf: [
         {
@@ -36,7 +46,7 @@ export interface JsonSchema7object {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7empty {
+export interface JsonSchema7empty extends JsonSchemaAnnotations {
     $id: "/schemas/{}";
     oneOf: [
         {
@@ -51,32 +61,31 @@ export interface JsonSchema7empty {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Ref {
+export interface JsonSchema7Ref extends JsonSchemaAnnotations {
     $ref: string;
 }
 /**
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Const {
+export interface JsonSchema7Const extends JsonSchemaAnnotations {
     const: AST.LiteralValue;
 }
 /**
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7String {
+export interface JsonSchema7String extends JsonSchemaAnnotations {
     type: "string";
     minLength?: number;
     maxLength?: number;
     pattern?: string;
-    description?: string;
 }
 /**
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Numeric {
+export interface JsonSchema7Numeric extends JsonSchemaAnnotations {
     minimum?: number;
     exclusiveMinimum?: number;
     maximum?: number;
@@ -100,14 +109,14 @@ export interface JsonSchema7Integer extends JsonSchema7Numeric {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Boolean {
+export interface JsonSchema7Boolean extends JsonSchemaAnnotations {
     type: "boolean";
 }
 /**
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Array {
+export interface JsonSchema7Array extends JsonSchemaAnnotations {
     type: "array";
     items?: JsonSchema7 | Array<JsonSchema7>;
     minItems?: number;
@@ -118,21 +127,21 @@ export interface JsonSchema7Array {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7OneOf {
+export interface JsonSchema7OneOf extends JsonSchemaAnnotations {
     oneOf: Array<JsonSchema7>;
 }
 /**
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Enum {
+export interface JsonSchema7Enum extends JsonSchemaAnnotations {
     enum: Array<AST.LiteralValue>;
 }
 /**
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Enums {
+export interface JsonSchema7Enums extends JsonSchemaAnnotations {
     $comment: "/schemas/enums";
     oneOf: Array<{
         title: string;
@@ -143,14 +152,14 @@ export interface JsonSchema7Enums {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7AnyOf {
+export interface JsonSchema7AnyOf extends JsonSchemaAnnotations {
     anyOf: Array<JsonSchema7>;
 }
 /**
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Object {
+export interface JsonSchema7Object extends JsonSchemaAnnotations {
     type: "object";
     required: Array<string>;
     properties: Record<string, JsonSchema7>;
diff --git a/dist/dts/JSONSchema.d.ts.map b/dist/dts/JSONSchema.d.ts.map
index 7447b46b060bba70c283e4c41ef3bfa2b99f9121..54fd017c8c0010014d7e2c7fb71922cd175dcfed 100644
--- a/dist/dts/JSONSchema.d.ts.map
+++ b/dist/dts/JSONSchema.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"JSONSchema.d.ts","sourceRoot":"","sources":["../../src/JSONSchema.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"JSONSchema.d.ts","sourceRoot":"","sources":["../../src/JSONSchema.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/dts/ParseResult.d.ts.map b/dist/dts/ParseResult.d.ts.map
index 9a76539591b6db0b44e097872acaa464fac4951e..06c744fe478c1fc3d709beaf33b256ab7611b574 100644
--- a/dist/dts/ParseResult.d.ts.map
+++ b/dist/dts/ParseResult.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"ParseResult.d.ts","sourceRoot":"","sources":["../../src/ParseResult.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"ParseResult.d.ts","sourceRoot":"","sources":["../../src/ParseResult.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/dts/Pretty.d.ts.map b/dist/dts/Pretty.d.ts.map
index 3241ec1692a3635e47ce5d4a685963cb150fde4b..0d3d3258dedbd95ff085770f8790878355fccffd 100644
--- a/dist/dts/Pretty.d.ts.map
+++ b/dist/dts/Pretty.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"Pretty.d.ts","sourceRoot":"","sources":["../../src/Pretty.ts"],"names":[],"mappings":"AAKA,OAAO,KAAK,GAAG,MAAM,UAAU,CAAA;AAI/B,OAAO,KAAK,KAAK,MAAM,MAAM,aAAa,CAAA;AAE1C;;;GAGG;AACH,MAAM,WAAW,MAAM,CAAC,EAAE;IACxB,CAAC,CAAC,EAAE,EAAE,GAAG,MAAM,CAAA;CAChB;AAED;;;GAGG;AACH,eAAO,MAAM,YAAY,EAAE,OAAO,MAAkD,CAAA;AAEpF;;;GAGG;AACH,MAAM,MAAM,YAAY,GAAG,OAAO,YAAY,CAAA;AAE9C;;;GAGG;AACH,eAAO,MAAM,MAAM,eACJ,CAAC,GAAG,IAAI,EAAE,cAAc,OAAO,GAAG,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,kBAClD,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAkD,CAAA;AAE/G;;;GAGG;AACH,eAAO,MAAM,IAAI,oBAAqB,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,CAAC,CAAC,EAAE,CAAC,KAAK,MAA6B,CAAA;AAkBtG;;GAEG;AACH,eAAO,MAAM,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAoJxC,CAAA"}
\ No newline at end of file
+{"version":3,"file":"Pretty.d.ts","sourceRoot":"","sources":["../../src/Pretty.ts"],"names":[],"mappings":"AAKA,OAAO,KAAK,GAAG,MAAM,UAAU,CAAA;AAI/B,OAAO,KAAK,KAAK,MAAM,MAAM,aAAa,CAAA;AAE1C;;;GAGG;AACH,MAAM,WAAW,MAAM,CAAC,EAAE;IACxB,CAAC,CAAC,EAAE,EAAE,GAAG,MAAM,CAAA;CAChB;AAED;;;GAGG;AACH,eAAO,MAAM,YAAY,EAAE,OAAO,MAAkD,CAAA;AAEpF;;;GAGG;AACH,MAAM,MAAM,YAAY,GAAG,OAAO,YAAY,CAAA;AAE9C;;;GAGG;AACH,eAAO,MAAM,MAAM,eACJ,CAAC,GAAG,IAAI,EAAE,cAAc,OAAO,GAAG,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,kBAClD,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAkD,CAAA;AAE/G;;;GAGG;AACH,eAAO,MAAM,IAAI,oBAAqB,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,CAAC,CAAC,EAAE,CAAC,KAAK,MAAiC,CAAA;AAqB1G;;GAEG;AACH,eAAO,MAAM,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAoJxC,CAAA"}
\ No newline at end of file
diff --git a/dist/dts/Schema.d.ts b/dist/dts/Schema.d.ts
index 5aadc72bb24c771926f7b456dbebdcff3118cf46..321bb0659ea85ee760333eab7904e44217d3b377 100644
--- a/dist/dts/Schema.d.ts
+++ b/dist/dts/Schema.d.ts
@@ -3,7 +3,7 @@
  */
 import * as array_ from "effect/Array";
 import * as bigDecimal_ from "effect/BigDecimal";
-import * as brand_ from "effect/Brand";
+import type { Brand } from "effect/Brand";
 import * as cause_ from "effect/Cause";
 import * as chunk_ from "effect/Chunk";
 import * as duration_ from "effect/Duration";
@@ -19,7 +19,6 @@ import * as list_ from "effect/List";
 import * as option_ from "effect/Option";
 import type * as Order from "effect/Order";
 import type { Pipeable } from "effect/Pipeable";
-import * as Predicate from "effect/Predicate";
 import * as Request from "effect/Request";
 import * as secret_ from "effect/Secret";
 import * as sortedSet_ from "effect/SortedSet";
@@ -51,9 +50,22 @@ export type TypeId = typeof TypeId;
  * @since 1.0.0
  */
 export interface Schema<in out A, in out I = A, out R = never> extends Schema.Variance<A, I, R>, Pipeable {
+    readonly Type: A;
+    readonly Encoded: I;
     readonly ast: AST.AST;
     annotations(annotations: Annotations.Schema<A>): Schema<A, I, R>;
 }
+/**
+ * @category model
+ * @since 1.0.0
+ */
+export interface SchemaClass<A, I = A, R = never> extends AnnotableClass<SchemaClass<A, I, R>, A, I, R> {
+}
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+export declare const make: <A, I = A, R = never>(ast: AST.AST) => SchemaClass<A, I, R>;
 /**
  * @category annotations
  * @since 1.0.0
@@ -80,14 +92,16 @@ export interface Annotable<Self extends Schema<A, I, R>, A, I = A, R = never> ex
     annotations(annotations: Annotations.Schema<A>): Self;
 }
 /**
+ * @category annotations
  * @since 1.0.0
  */
-export declare const asSchema: <S extends Schema.All>(schema: S) => Schema<Schema.Type<S>, Schema.Encoded<S>, Schema.Context<S>>;
+export interface AnnotableClass<Self extends Schema<A, I, R>, A, I = A, R = never> extends Annotable<Self, A, I, R> {
+    new (_: never): Schema.Variance<A, I, R>;
+}
 /**
- * @category hashing
  * @since 1.0.0
  */
-export declare const hash: <A, I, R>(schema: Schema<A, I, R>) => number;
+export declare const asSchema: <S extends Schema.All>(schema: S) => Schema<Schema.Type<S>, Schema.Encoded<S>, Schema.Context<S>>;
 /**
  * @category formatting
  * @since 1.0.0
@@ -141,15 +155,21 @@ export declare namespace Schema {
      * @since 1.0.0
      */
     type All = Any | Schema<any, never, unknown> | Schema<never, any, unknown> | Schema<never, never, unknown>;
+    /**
+     * Type-level counterpart of `Schema.asSchema` function.
+     *
+     * @since 1.0.0
+     */
+    type AsSchema<S extends All> = Schema<Type<S>, Encoded<S>, Context<S>>;
 }
 /**
  * @since 1.0.0
  */
-export declare const encodedSchema: <A, I, R>(schema: Schema<A, I, R>) => Schema<I>;
+export declare const encodedSchema: <A, I, R>(schema: Schema<A, I, R>) => SchemaClass<I>;
 /**
  * @since 1.0.0
  */
-export declare const typeSchema: <A, I, R>(schema: Schema<A, I, R>) => Schema<A>;
+export declare const typeSchema: <A, I, R>(schema: Schema<A, I, R>) => SchemaClass<A>;
 export { 
 /**
  * @category validation
@@ -293,16 +313,11 @@ export declare const validatePromise: <A, I>(schema: Schema<A, I, never>, option
  * @since 1.0.0
  */
 export declare const isSchema: (u: unknown) => u is Schema.Any;
-/**
- * @category constructors
- * @since 1.0.0
- */
-export declare const make: <A, I = A, R = never>(ast: AST.AST) => Schema<A, I, R>;
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface Literal<Literals extends array_.NonEmptyReadonlyArray<AST.LiteralValue>> extends Annotable<Literal<Literals>, Literals[number]> {
+export interface Literal<Literals extends array_.NonEmptyReadonlyArray<AST.LiteralValue>> extends AnnotableClass<Literal<Literals>, Literals[number]> {
     readonly literals: Readonly<Literals>;
 }
 /**
@@ -333,29 +348,31 @@ export declare const pickLiteral: <A extends AST.LiteralValue, L extends readonl
  * @category constructors
  * @since 1.0.0
  */
-export declare const UniqueSymbolFromSelf: <S extends symbol>(symbol: S) => Schema<S>;
+export declare const UniqueSymbolFromSelf: <S extends symbol>(symbol: S) => SchemaClass<S>;
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface Enums<A extends {
-    [x: string]: string | number;
-}> extends Annotable<Enums<A>, A[keyof A]> {
+export interface Enums<A extends EnumsDefinition> extends AnnotableClass<Enums<A>, A[keyof A]> {
     readonly enums: A;
 }
 /**
- * @category constructors
  * @since 1.0.0
  */
-export declare const Enums: <A extends {
+export type EnumsDefinition = {
     [x: string]: string | number;
-}>(enums: A) => Enums<A>;
+};
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+export declare const Enums: <A extends EnumsDefinition>(enums: A) => Enums<A>;
 type Join<T> = T extends [infer Head, ...infer Tail] ? `${Head & (string | number | bigint | boolean | null | undefined)}${Tail extends [] ? "" : Join<Tail>}` : never;
 /**
  * @category constructors
  * @since 1.0.0
  */
-export declare const TemplateLiteral: <T extends [Schema.AnyNoContext, ...Schema.AnyNoContext[]]>(...[head, ...tail]: T) => Schema<Join<{ [K in keyof T]: Schema.Type<T[K]>; }>, Join<{ [K in keyof T]: Schema.Type<T[K]>; }>, never>;
+export declare const TemplateLiteral: <T extends [Schema.AnyNoContext, ...Schema.AnyNoContext[]]>(...[head, ...tail]: T) => SchemaClass<Join<{ [K in keyof T]: Schema.Type<T[K]>; }>, Join<{ [K in keyof T]: Schema.Type<T[K]>; }>, never>;
 /**
  * The constraint `R extends Schema.Context<P[number]>` enforces dependencies solely from `typeParameters`.
  * This ensures that when you call `Schema.to` or `Schema.from`, you receive a schema with a `never` context.
@@ -364,7 +381,7 @@ export declare const TemplateLiteral: <T extends [Schema.AnyNoContext, ...Schema
  * @since 1.0.0
  */
 export declare const declare: {
-    <A>(is: (input: unknown) => input is A, annotations?: Annotations.Schema<A>): Schema<A>;
+    <A>(is: (input: unknown) => input is A, annotations?: Annotations.Schema<A>): SchemaClass<A>;
     <const P extends ReadonlyArray<Schema.Any>, I, A>(typeParameters: P, options: {
         readonly decode: (...typeParameters: {
             readonly [K in keyof P]: Schema<Schema.Type<P[K]>, Schema.Encoded<P[K]>, never>;
@@ -374,7 +391,7 @@ export declare const declare: {
         }) => (input: unknown, options: ParseOptions, ast: AST.Declaration) => Effect.Effect<I, ParseResult.ParseIssue, never>;
     }, annotations?: Annotations.Schema<A, {
         readonly [K in keyof P]: Schema.Type<P[K]>;
-    }>): Schema<A, I, Schema.Context<P[number]>>;
+    }>): SchemaClass<A, I, Schema.Context<P[number]>>;
 };
 /**
  * @category type id
@@ -385,7 +402,7 @@ export declare const BrandTypeId: unique symbol;
  * @category constructors
  * @since 1.0.0
  */
-export declare const fromBrand: <C extends brand_.Brand<string | symbol>>(constructor: brand_.Brand.Constructor<C>, annotations?: Annotations.Filter<brand_.Brand.Unbranded<C>>) => <R, I, A extends brand_.Brand.Unbranded<C>>(self: Schema<A, I, R>) => Schema<A & C, I, R>;
+export declare const fromBrand: <C extends Brand<string | symbol>, A extends Brand.Unbranded<C>>(constructor: Brand.Constructor<C>, annotations?: Annotations.Filter<C, A>) => <I, R>(self: Schema<A, I, R>) => BrandSchema<A & C, I, R>;
 /**
  * @category type id
  * @since 1.0.0
@@ -395,155 +412,123 @@ export declare const InstanceOfTypeId: unique symbol;
  * @category api interface
  * @since 1.0.0
  */
-export interface instanceOf<A> extends Annotable<instanceOf<A>, A> {
+export interface instanceOf<A> extends AnnotableClass<instanceOf<A>, A> {
 }
 /**
  * @category constructors
  * @since 1.0.0
  */
 export declare const instanceOf: <A extends abstract new (...args: any) => any>(constructor: A, annotations?: Annotations.Schema<InstanceType<A>>) => instanceOf<InstanceType<A>>;
+declare const Undefined_base: SchemaClass<undefined, undefined, never>;
 /**
- * @category api interface
+ * @category primitives
  * @since 1.0.0
  */
-export interface Undefined extends Annotable<Undefined, undefined> {
+export declare class Undefined extends Undefined_base {
+    static annotations: (annotations: Annotations.Schema<undefined>) => typeof Undefined;
 }
+declare const Void_base: SchemaClass<void, void, never>;
 /**
  * @category primitives
  * @since 1.0.0
  */
-export declare const Undefined: Undefined;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Void extends Annotable<Void, void> {
+export declare class Void extends Void_base {
+    static annotations: (annotations: Annotations.Schema<void>) => typeof Void;
 }
+declare const Null_base: SchemaClass<null, null, never>;
 /**
  * @category primitives
  * @since 1.0.0
  */
-export declare const Void: Void;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Null extends Annotable<Null, null> {
+export declare class Null extends Null_base {
+    static annotations: (annotations: Annotations.Schema<null>) => typeof Null;
 }
+declare const Never_base: SchemaClass<never, never, never>;
 /**
  * @category primitives
  * @since 1.0.0
  */
-export declare const Null: Null;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Never extends Annotable<Never, never> {
+export declare class Never extends Never_base {
+    static annotations: (annotations: Annotations.Schema<never>) => typeof Never;
 }
+declare const Unknown_base: SchemaClass<unknown, unknown, never>;
 /**
  * @category primitives
  * @since 1.0.0
  */
-export declare const Never: Never;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Unknown extends Annotable<Unknown, unknown> {
+export declare class Unknown extends Unknown_base {
+    static annotations: (annotations: Annotations.Schema<unknown>) => typeof Unknown;
 }
+declare const Any_base: SchemaClass<any, any, never>;
 /**
  * @category primitives
  * @since 1.0.0
  */
-export declare const Unknown: Unknown;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Any extends Annotable<Any, any> {
+export declare class Any extends Any_base {
+    static annotations: (annotations: Annotations.Schema<any>) => typeof Any;
 }
+declare const BigIntFromSelf_base: SchemaClass<bigint, bigint, never>;
 /**
  * @category primitives
  * @since 1.0.0
  */
-export declare const Any: Any;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface $String extends Annotable<$String, string> {
+export declare class BigIntFromSelf extends BigIntFromSelf_base {
+    static annotations: (annotations: Annotations.Schema<bigint>) => typeof BigIntFromSelf;
 }
-declare const $String: $String;
+declare const SymbolFromSelf_base: SchemaClass<symbol, symbol, never>;
 /**
- * @category api interface
+ * @category primitives
  * @since 1.0.0
  */
-export interface $Number extends Annotable<$Number, number> {
+export declare class SymbolFromSelf extends SymbolFromSelf_base {
+    static annotations: (annotations: Annotations.Schema<symbol>) => typeof SymbolFromSelf;
 }
-declare const $Number: $Number;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface $Boolean extends Annotable<$Boolean, boolean> {
+declare const String$_base: SchemaClass<string, string, never>;
+/** @ignore */
+declare class String$ extends String$_base {
+    static annotations: (annotations: Annotations.Schema<string>) => typeof String$;
 }
-declare const $Boolean: $Boolean;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface BigIntFromSelf extends Annotable<BigIntFromSelf, bigint> {
+declare const Number$_base: SchemaClass<number, number, never>;
+/** @ignore */
+declare class Number$ extends Number$_base {
+    static annotations: (annotations: Annotations.Schema<number>) => typeof Number$;
 }
-/**
- * @category primitives
- * @since 1.0.0
- */
-export declare const BigIntFromSelf: BigIntFromSelf;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface SymbolFromSelf extends Annotable<SymbolFromSelf, symbol> {
+declare const Boolean$_base: SchemaClass<boolean, boolean, never>;
+/** @ignore */
+declare class Boolean$ extends Boolean$_base {
+    static annotations: (annotations: Annotations.Schema<boolean>) => typeof Boolean$;
 }
-/**
- * @category primitives
- * @since 1.0.0
- */
-export declare const SymbolFromSelf: SymbolFromSelf;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface $Object extends Annotable<$Object, object> {
+declare const Object$_base: SchemaClass<object, object, never>;
+/** @ignore */
+declare class Object$ extends Object$_base {
+    static annotations: (annotations: Annotations.Schema<object>) => typeof Object$;
 }
-declare const $Object: $Object;
 export { 
 /**
  * @category primitives
  * @since 1.0.0
  */
-$Boolean as Boolean, 
+Boolean$ as Boolean, 
 /**
  * @category primitives
  * @since 1.0.0
  */
-$Number as Number, 
+Number$ as Number, 
 /**
  * @category primitives
  * @since 1.0.0
  */
-$Object as Object, 
+Object$ as Object, 
 /**
  * @category primitives
  * @since 1.0.0
  */
-$String as String };
+String$ as String };
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface Union<Members extends ReadonlyArray<Schema.Any>> extends Schema<Schema.Type<Members[number]>, Schema.Encoded<Members[number]>, Schema.Context<Members[number]>> {
+export interface Union<Members extends ReadonlyArray<Schema.Any>> extends AnnotableClass<Union<Members>, Schema.Type<Members[number]>, Schema.Encoded<Members[number]>, Schema.Context<Members[number]>> {
     readonly members: Readonly<Members>;
     annotations(annotations: Annotations.Schema<Schema.Type<Members[number]>>): Union<Members>;
 }
@@ -553,13 +538,13 @@ export interface Union<Members extends ReadonlyArray<Schema.Any>> extends Schema
  */
 export declare function Union<Members extends AST.Members<Schema.Any>>(...members: Members): Union<Members>;
 export declare function Union<Member extends Schema.Any>(member: Member): Member;
-export declare function Union(): Never;
+export declare function Union(): typeof Never;
 export declare function Union<Members extends ReadonlyArray<Schema.Any>>(...members: Members): Schema<Schema.Type<Members[number]>, Schema.Encoded<Members[number]>, Schema.Context<Members[number]>>;
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface NullOr<S extends Schema.Any> extends Union<[S, Null]> {
+export interface NullOr<S extends Schema.Any> extends Union<[S, typeof Null]> {
     annotations(annotations: Annotations.Schema<Schema.Type<S> | null>): NullOr<S>;
 }
 /**
@@ -571,7 +556,7 @@ export declare const NullOr: <S extends Schema.Any>(self: S) => NullOr<S>;
  * @category api interface
  * @since 1.0.0
  */
-export interface UndefinedOr<S extends Schema.Any> extends Union<[S, Undefined]> {
+export interface UndefinedOr<S extends Schema.Any> extends Union<[S, typeof Undefined]> {
     annotations(annotations: Annotations.Schema<Schema.Type<S> | undefined>): UndefinedOr<S>;
 }
 /**
@@ -583,7 +568,7 @@ export declare const UndefinedOr: <S extends Schema.Any>(self: S) => UndefinedOr
  * @category api interface
  * @since 1.0.0
  */
-export interface NullishOr<S extends Schema.Any> extends Union<[S, Null, Undefined]> {
+export interface NullishOr<S extends Schema.Any> extends Union<[S, typeof Null, typeof Undefined]> {
     annotations(annotations: Annotations.Schema<Schema.Type<S> | null | undefined>): NullishOr<S>;
 }
 /**
@@ -595,7 +580,7 @@ export declare const NullishOr: <S extends Schema.Any>(self: S) => NullishOr<S>;
  * @category combinators
  * @since 1.0.0
  */
-export declare const keyof: <A, I, R>(self: Schema<A, I, R>) => Schema<keyof A>;
+export declare const keyof: <A, I, R>(self: Schema<A, I, R>) => SchemaClass<keyof A>;
 /**
  * @since 1.0.0
  */
@@ -645,10 +630,9 @@ export declare namespace TupleType {
  * @category api interface
  * @since 1.0.0
  */
-export interface TupleType<Elements extends TupleType.Elements, Rest extends ReadonlyArray<Schema.Any>> extends Schema<TupleType.Type<Elements, Rest>, TupleType.Encoded<Elements, Rest>, Schema.Context<Elements[number]> | Schema.Context<Rest[number]>> {
+export interface TupleType<Elements extends TupleType.Elements, Rest extends ReadonlyArray<Schema.Any>> extends AnnotableClass<TupleType<Elements, Rest>, TupleType.Type<Elements, Rest>, TupleType.Encoded<Elements, Rest>, Schema.Context<Elements[number]> | Schema.Context<Rest[number]>> {
     readonly elements: Readonly<Elements>;
     readonly rest: Readonly<Rest>;
-    annotations(annotations: Annotations.Schema<TupleType.Type<Elements, Rest>>): TupleType<Elements, Rest>;
 }
 /**
  * @category api interface
@@ -667,17 +651,17 @@ export declare function Tuple<Elements extends TupleType.Elements>(...elements:
  * @category api interface
  * @since 1.0.0
  */
-export interface $Array<Value extends Schema.Any> extends TupleType<[], [Value]> {
+export interface Array$<Value extends Schema.Any> extends TupleType<[], [Value]> {
     readonly value: Value;
-    annotations(annotations: Annotations.Schema<TupleType.Type<[], [Value]>>): $Array<Value>;
+    annotations(annotations: Annotations.Schema<TupleType.Type<[], [Value]>>): Array$<Value>;
 }
-declare const $Array: <Value extends Schema.Any>(value: Value) => $Array<Value>;
+declare const Array$: <Value extends Schema.Any>(value: Value) => Array$<Value>;
 export { 
 /**
  * @category constructors
  * @since 1.0.0
  */
-$Array as Array };
+Array$ as Array };
 /**
  * @category api interface
  * @since 1.0.0
@@ -706,11 +690,11 @@ export declare namespace PropertySignature {
     /**
      * @since 1.0.0
      */
-    type Any<Key extends PropertyKey = PropertyKey> = PropertySignature<Token, any, Key, Token, any, unknown>;
+    type Any<Key extends PropertyKey = PropertyKey> = PropertySignature<Token, any, Key, Token, any, boolean, unknown>;
     /**
      * @since 1.0.0
      */
-    type All<Key extends PropertyKey = PropertyKey> = Any<Key> | PropertySignature<Token, never, Key, Token, any, unknown> | PropertySignature<Token, any, Key, Token, never, unknown> | PropertySignature<Token, never, Key, Token, never, unknown>;
+    type All<Key extends PropertyKey = PropertyKey> = Any<Key> | PropertySignature<Token, never, Key, Token, any, boolean, unknown> | PropertySignature<Token, any, Key, Token, never, boolean, unknown> | PropertySignature<Token, never, Key, Token, never, boolean, unknown>;
     /**
      * @since 1.0.0
      */
@@ -730,11 +714,12 @@ export declare class PropertySignatureDeclaration {
     readonly isOptional: boolean;
     readonly isReadonly: boolean;
     readonly annotations: AST.Annotations;
+    readonly defaultValue: (() => unknown) | undefined;
     /**
      * @since 1.0.0
      */
     readonly _tag = "PropertySignatureDeclaration";
-    constructor(type: AST.AST, isOptional: boolean, isReadonly: boolean, annotations: AST.Annotations);
+    constructor(type: AST.AST, isOptional: boolean, isReadonly: boolean, annotations: AST.Annotations, defaultValue: (() => unknown) | undefined);
     /**
      * @since 1.0.0
      */
@@ -761,7 +746,8 @@ export declare class ToPropertySignature implements AST.Annotated {
     readonly isOptional: boolean;
     readonly isReadonly: boolean;
     readonly annotations: AST.Annotations;
-    constructor(type: AST.AST, isOptional: boolean, isReadonly: boolean, annotations: AST.Annotations);
+    readonly defaultValue: (() => unknown) | undefined;
+    constructor(type: AST.AST, isOptional: boolean, isReadonly: boolean, annotations: AST.Annotations, defaultValue: (() => unknown) | undefined);
 }
 /**
  * @category PropertySignature
@@ -796,30 +782,73 @@ export type PropertySignatureTypeId = typeof PropertySignatureTypeId;
  * @category PropertySignature
  * @since 1.0.0
  */
-export interface PropertySignature<TypeToken extends PropertySignature.Token, Type, Key extends PropertyKey, EncodedToken extends PropertySignature.Token, Encoded, R = never> extends Schema.Variance<Type, Encoded, R>, Pipeable {
+export interface PropertySignature<TypeToken extends PropertySignature.Token, Type, Key extends PropertyKey, EncodedToken extends PropertySignature.Token, Encoded, HasDefault extends boolean = false, R = never> extends Schema.Variance<Type, Encoded, R>, Pipeable {
     readonly [PropertySignatureTypeId]: null;
-    readonly _EncodedToken: EncodedToken;
     readonly _TypeToken: TypeToken;
+    readonly _EncodedToken: EncodedToken;
+    readonly _HasDefault: HasDefault;
     readonly _Key: Key;
     readonly ast: PropertySignature.AST;
-    annotations(annotations: PropertySignature.Annotations<Type>): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, R>;
+    annotations(annotations: PropertySignature.Annotations<Type>): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R>;
 }
 /**
+ * Lifts a `Schema` into a `PropertySignature`.
+ *
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export declare const propertySignature: <A, I, R>(self: Schema<A, I, R>) => PropertySignature<PropertySignature.GetToken<false>, A, never, PropertySignature.GetToken<false>, I, false, R>;
+/**
+ * Enhances a property signature with a default constructor value.
+ *
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export declare const withConstructorDefault: {
+    <Type>(defaultValue: () => Types.NoInfer<Type>): <TypeToken extends PropertySignature.Token, Key extends PropertyKey, EncodedToken extends PropertySignature.Token, Encoded, R>(self: PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, boolean, R>) => PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, true, R>;
+    <TypeToken extends PropertySignature.Token, Type, Key extends PropertyKey, EncodedToken extends PropertySignature.Token, Encoded, R>(self: PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, boolean, R>, defaultValue: () => Types.NoInfer<Type>): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, true, R>;
+};
+/**
+ * Enhances a property signature with a default decoding value.
+ *
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export declare const withDecodingDefault: {
+    <Type>(defaultValue: () => Types.NoInfer<Type>): <Key extends PropertyKey, Encoded, HasDefault extends boolean, R>(self: PropertySignature<"?:", Type, Key, "?:", Encoded, HasDefault, R>) => PropertySignature<":", Exclude<Type, undefined>, Key, "?:", Encoded, HasDefault, R>;
+    <Type, Key extends PropertyKey, Encoded, HasDefault extends boolean, R>(self: PropertySignature<"?:", Type, Key, "?:", Encoded, HasDefault, R>, defaultValue: () => Types.NoInfer<Type>): PropertySignature<":", Exclude<Type, undefined>, Key, "?:", Encoded, HasDefault, R>;
+};
+/**
+ * Enhances a property signature with a default decoding value and a default constructor value.
+ *
  * @category PropertySignature
  * @since 1.0.0
  */
-export declare const propertySignature: <A, I, R>(self: Schema<A, I, R>) => PropertySignature<PropertySignature.GetToken<false>, A, never, PropertySignature.GetToken<false>, I, R>;
+export declare const withDefaults: {
+    <Type>(defaults: {
+        constructor: () => Types.NoInfer<Exclude<Type, undefined>>;
+        decoding: () => Types.NoInfer<Type>;
+    }): <Key extends PropertyKey, Encoded, R>(self: PropertySignature<"?:", Type, Key, "?:", Encoded, boolean, R>) => PropertySignature<":", Exclude<Type, undefined>, Key, "?:", Encoded, true, R>;
+    <Type, Key extends PropertyKey, Encoded, R>(self: PropertySignature<"?:", Type, Key, "?:", Encoded, boolean, R>, defaults: {
+        constructor: () => Types.NoInfer<Exclude<Type, undefined>>;
+        decoding: () => Types.NoInfer<Type>;
+    }): PropertySignature<":", Exclude<Type, undefined>, Key, "?:", Encoded, true, R>;
+};
 /**
+ * Enhances a property signature by specifying a different key for it in the Encoded type.
+ *
  * @category PropertySignature
  * @since 1.0.0
  */
 export declare const fromKey: {
-    <Key extends PropertyKey>(key: Key): <Type, TypeToken extends PropertySignature.Token, Encoded, EncodedToken extends PropertySignature.Token, R>(self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, R>) => PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, R>;
-    <Type, TypeToken extends PropertySignature.Token, Encoded, EncodedToken extends PropertySignature.Token, R, Key extends PropertyKey>(self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, R>, key: Key): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, R>;
+    <Key extends PropertyKey>(key: Key): <TypeToken extends PropertySignature.Token, Type, EncodedToken extends PropertySignature.Token, Encoded, HasDefault extends boolean, R>(self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, HasDefault, R>) => PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R>;
+    <Type, TypeToken extends PropertySignature.Token, Encoded, EncodedToken extends PropertySignature.Token, HasDefault extends boolean, R, Key extends PropertyKey>(self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, HasDefault, R>, key: Key): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R>;
 };
 /**
- * - `decode`: `none` as argument means: the value is missing in the input
- * - `encode`: `none` as return value means: the value will be missing in the output
+ * Converts an optional property to a required one through a transformation `Option -> Option`.
+ *
+ * - `decode`: `none` as argument means the value is missing in the input.
+ * - `encode`: `none` as return value means the value will be missing in the output.
  *
  * @category PropertySignature
  * @since 1.0.0
@@ -827,14 +856,16 @@ export declare const fromKey: {
 export declare const optionalToRequired: <FA, FI, FR, TA, TI, TR>(from: Schema<FA, FI, FR>, to: Schema<TA, TI, TR>, options: {
     readonly decode: (o: option_.Option<FA>) => TI;
     readonly encode: (ti: TI) => option_.Option<FA>;
-}) => PropertySignature<":", TA, never, "?:", FI, FR | TR>;
+}) => PropertySignature<":", TA, never, "?:", FI, false, FR | TR>;
 /**
+ * Converts an optional property to another optional property through a transformation `Option -> Option`.
+ *
  * - `decode`:
- *   - `none` as argument means: the value is missing in the input
- *   - `none` as return value means: the value will be missing in the output
+ *   - `none` as argument means the value is missing in the input.
+ *   - `none` as return value means the value will be missing in the output.
  * - `encode`:
- *   - `none` as argument means: the value is missing in the input
- *   - `none` as return value means: the value will be missing in the output
+ *   - `none` as argument means the value is missing in the input.
+ *   - `none` as return value means the value will be missing in the output.
  *
  * @category PropertySignature
  * @since 1.0.0
@@ -842,7 +873,7 @@ export declare const optionalToRequired: <FA, FI, FR, TA, TI, TR>(from: Schema<F
 export declare const optionalToOptional: <FA, FI, FR, TA, TI, TR>(from: Schema<FA, FI, FR>, to: Schema<TA, TI, TR>, options: {
     readonly decode: (o: option_.Option<FA>) => option_.Option<TI>;
     readonly encode: (o: option_.Option<TI>) => option_.Option<FA>;
-}) => PropertySignature<"?:", TA, never, "?:", FI, FR | TR>;
+}) => PropertySignature<"?:", TA, never, "?:", FI, false, FR | TR>;
 /**
  * @category PropertySignature
  * @since 1.0.0
@@ -863,7 +894,7 @@ export declare const optional: {
         readonly default?: never;
         readonly exact?: true;
         readonly nullable?: true;
-    } | undefined>(options?: Options): <I, R>(schema: Schema<A, I, R>) => [undefined] extends [Options] ? PropertySignature<"?:", A | undefined, never, "?:", I | undefined, R> : PropertySignature<Types.Has<Options, "as" | "default"> extends true ? ":" : "?:", (Types.Has<Options, "as"> extends true ? option_.Option<A> : A) | (Types.Has<Options, "as" | "default" | "exact"> extends true ? never : undefined), never, "?:", I | (Types.Has<Options, "nullable"> extends true ? null : never) | (Types.Has<Options, "exact"> extends true ? never : undefined), R>;
+    } | undefined>(options?: Options): <I, R>(schema: Schema<A, I, R>) => [undefined] extends [Options] ? PropertySignature<"?:", A | undefined, never, "?:", I | undefined, false, R> : PropertySignature<Types.Has<Options, "as" | "default"> extends true ? ":" : "?:", (Types.Has<Options, "as"> extends true ? option_.Option<A> : A) | (Types.Has<Options, "as" | "default" | "exact"> extends true ? never : undefined), never, "?:", I | (Types.Has<Options, "nullable"> extends true ? null : never) | (Types.Has<Options, "exact"> extends true ? never : undefined), false, R>;
     <A, I, R, const Options extends {
         readonly default?: never;
         readonly as?: never;
@@ -879,7 +910,7 @@ export declare const optional: {
         readonly default?: never;
         readonly exact?: true;
         readonly nullable?: true;
-    } | undefined>(schema: Schema<A, I, R>, options?: Options): [undefined] extends [Options] ? PropertySignature<"?:", A | undefined, never, "?:", I | undefined, R> : PropertySignature<Types.Has<Options, "as" | "default"> extends true ? ":" : "?:", (Types.Has<Options, "as"> extends true ? option_.Option<A> : A) | (Types.Has<Options, "as" | "default" | "exact"> extends true ? never : undefined), never, "?:", I | (Types.Has<Options, "nullable"> extends true ? null : never) | (Types.Has<Options, "exact"> extends true ? never : undefined), R>;
+    } | undefined>(schema: Schema<A, I, R>, options?: Options): [undefined] extends [Options] ? PropertySignature<"?:", A | undefined, never, "?:", I | undefined, false, R> : PropertySignature<Types.Has<Options, "as" | "default"> extends true ? ":" : "?:", (Types.Has<Options, "as"> extends true ? option_.Option<A> : A) | (Types.Has<Options, "as" | "default" | "exact"> extends true ? never : undefined), never, "?:", I | (Types.Has<Options, "nullable"> extends true ? null : never) | (Types.Has<Options, "exact"> extends true ? never : undefined), false, R>;
 };
 /**
  * @since 1.0.0
@@ -893,12 +924,12 @@ export declare namespace Struct {
     };
     type Key<F extends Fields, K extends keyof F> = [K] extends [never] ? never : F[K] extends PropertySignature.All<infer Key> ? [Key] extends [never] ? K : Key : K;
     type EncodedTokenKeys<Fields extends Struct.Fields> = {
-        [K in keyof Fields]: Fields[K] extends PropertySignature<PropertySignature.Token, any, PropertyKey, "?:", any, unknown> | PropertySignature<PropertySignature.Token, any, PropertyKey, "?:", never, unknown> | PropertySignature<PropertySignature.Token, never, PropertyKey, "?:", any, unknown> | PropertySignature<PropertySignature.Token, never, PropertyKey, "?:", never, unknown> ? K : never;
+        [K in keyof Fields]: Fields[K] extends PropertySignature<PropertySignature.Token, any, PropertyKey, "?:", any, boolean, unknown> | PropertySignature<PropertySignature.Token, any, PropertyKey, "?:", never, boolean, unknown> | PropertySignature<PropertySignature.Token, never, PropertyKey, "?:", any, boolean, unknown> | PropertySignature<PropertySignature.Token, never, PropertyKey, "?:", never, boolean, unknown> ? K : never;
     }[keyof Fields];
     type TypeTokenKeys<Fields extends Struct.Fields> = {
         [K in keyof Fields]: Fields[K] extends OptionalPropertySignature ? K : never;
     }[keyof Fields];
-    type OptionalPropertySignature = PropertySignature<"?:", any, PropertyKey, PropertySignature.Token, any, unknown> | PropertySignature<"?:", any, PropertyKey, PropertySignature.Token, never, unknown> | PropertySignature<"?:", never, PropertyKey, PropertySignature.Token, any, unknown> | PropertySignature<"?:", never, PropertyKey, PropertySignature.Token, never, unknown>;
+    type OptionalPropertySignature = PropertySignature<"?:", any, PropertyKey, PropertySignature.Token, any, boolean, unknown> | PropertySignature<"?:", any, PropertyKey, PropertySignature.Token, never, boolean, unknown> | PropertySignature<"?:", never, PropertyKey, PropertySignature.Token, any, boolean, unknown> | PropertySignature<"?:", never, PropertyKey, PropertySignature.Token, never, boolean, unknown>;
     /**
      * @since 1.0.0
      */
@@ -921,6 +952,19 @@ export declare namespace Struct {
      * @since 1.0.0
      */
     type Context<F extends Fields> = Schema.Context<F[keyof F]>;
+    type PropertySignatureWithDefault = PropertySignature<PropertySignature.Token, any, PropertyKey, PropertySignature.Token, any, true, unknown> | PropertySignature<PropertySignature.Token, any, PropertyKey, PropertySignature.Token, never, true, unknown> | PropertySignature<PropertySignature.Token, never, PropertyKey, PropertySignature.Token, any, true, unknown> | PropertySignature<PropertySignature.Token, never, PropertyKey, PropertySignature.Token, never, true, unknown>;
+    /**
+     * @since 1.0.0
+     */
+    type Constructor<F extends Fields> = Types.UnionToIntersection<{
+        [K in keyof F]: F[K] extends OptionalPropertySignature ? {
+            readonly [H in K]?: Schema.Type<F[H]>;
+        } : F[K] extends PropertySignatureWithDefault ? {
+            readonly [H in K]?: Schema.Type<F[H]>;
+        } : {
+            readonly [h in K]: Schema.Type<F[h]>;
+        };
+    }[keyof F]> extends infer Q ? Q : never;
 }
 /**
  * @since 1.0.0
@@ -976,17 +1020,22 @@ export declare namespace TypeLiteral {
      * @since 1.0.0
      */
     type Encoded<Fields extends Struct.Fields, Records extends IndexSignature.Records> = Struct.Encoded<Fields> & IndexSignature.Encoded<Records>;
+    /**
+     * @since 1.0.0
+     */
+    type Constructor<Fields extends Struct.Fields, Records extends IndexSignature.Records> = Struct.Constructor<Fields> & IndexSignature.Type<Records>;
 }
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface TypeLiteral<Fields extends Struct.Fields, Records extends IndexSignature.Records> extends Schema<Types.Simplify<TypeLiteral.Type<Fields, Records>>, Types.Simplify<TypeLiteral.Encoded<Fields, Records>>, Struct.Context<Fields> | IndexSignature.Context<Records>> {
+export interface TypeLiteral<Fields extends Struct.Fields, Records extends IndexSignature.Records> extends AnnotableClass<TypeLiteral<Fields, Records>, Types.Simplify<TypeLiteral.Type<Fields, Records>>, Types.Simplify<TypeLiteral.Encoded<Fields, Records>>, Struct.Context<Fields> | IndexSignature.Context<Records>> {
     readonly fields: {
         readonly [K in keyof Fields]: Fields[K];
     };
     readonly records: Readonly<Records>;
     annotations(annotations: Annotations.Schema<Types.Simplify<TypeLiteral.Type<Fields, Records>>>): TypeLiteral<Fields, Records>;
+    make(props: Types.Simplify<TypeLiteral.Constructor<Fields, Records>>): Types.Simplify<TypeLiteral.Type<Fields, Records>>;
 }
 /**
  * @category api interface
@@ -1005,7 +1054,7 @@ export declare function Struct<Fields extends Struct.Fields>(fields: Fields): St
  * @category api interface
  * @since 1.0.0
  */
-export interface $Record<K extends Schema.All, V extends Schema.All> extends TypeLiteral<{}, [{
+export interface Record$<K extends Schema.All, V extends Schema.All> extends TypeLiteral<{}, [{
     key: K;
     value: V;
 }]> {
@@ -1014,23 +1063,23 @@ export interface $Record<K extends Schema.All, V extends Schema.All> extends Typ
     annotations(annotations: Annotations.Schema<Types.Simplify<TypeLiteral.Type<{}, [{
         key: K;
         value: V;
-    }]>>>): $Record<K, V>;
+    }]>>>): Record$<K, V>;
 }
 /**
  * @category constructors
  * @since 1.0.0
  */
-export declare const Record: <K extends Schema.All, V extends Schema.All>(key: K, value: V) => $Record<K, V>;
+export declare const Record: <K extends Schema.All, V extends Schema.All>(key: K, value: V) => Record$<K, V>;
 /**
  * @category struct transformations
  * @since 1.0.0
  */
-export declare const pick: <A, I, Keys extends readonly (keyof A & keyof I)[]>(...keys: Keys) => <R>(self: Schema<A, I, R>) => Schema<Types.Simplify<Pick<A, Keys[number]>>, Types.Simplify<Pick<I, Keys[number]>>, R>;
+export declare const pick: <A, I, Keys extends readonly (keyof A & keyof I)[]>(...keys: Keys) => <R>(self: Schema<A, I, R>) => SchemaClass<Types.Simplify<Pick<A, Keys[number]>>, Types.Simplify<Pick<I, Keys[number]>>, R>;
 /**
  * @category struct transformations
  * @since 1.0.0
  */
-export declare const omit: <A, I, Keys extends readonly (keyof A & keyof I)[]>(...keys: Keys) => <R>(self: Schema<A, I, R>) => Schema<Types.Simplify<Omit<A, Keys[number]>>, Types.Simplify<Omit<I, Keys[number]>>, R>;
+export declare const omit: <A, I, Keys extends readonly (keyof A & keyof I)[]>(...keys: Keys) => <R>(self: Schema<A, I, R>) => SchemaClass<Types.Simplify<Omit<A, Keys[number]>>, Types.Simplify<Omit<I, Keys[number]>>, R>;
 /**
  * Given a schema `Schema<A, I, R>` and a key `key: K`, this function extracts a specific field from the `A` type,
  * producing a new schema that represents a transformation from the `{ readonly [key]: I[K] }` type to `A[K]`.
@@ -1071,20 +1120,16 @@ export declare const pluck: {
  * @category branding
  * @since 1.0.0
  */
-export interface BrandSchema<A extends brand_.Brand<any>, I> extends Annotable<BrandSchema<A, I>, A, I>, brand_.Brand.Constructor<A> {
+export interface BrandSchema<A extends Brand<any>, I = A, R = never> extends AnnotableClass<BrandSchema<A, I, R>, A, I, R> {
+    make(a: Brand.Unbranded<A>): A;
 }
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface brand<S extends Schema.AnyNoContext, B extends string | symbol> extends BrandSchema<Schema.Type<S> & brand_.Brand<B>, Schema.Encoded<S>> {
-    annotations(annotations: Annotations.Schema<Schema.Type<S> & brand_.Brand<B>>): brand<S, B>;
+export interface brand<S extends Schema.Any, B extends string | symbol> extends BrandSchema<Schema.Type<S> & Brand<B>, Schema.Encoded<S>, Schema.Context<S>> {
+    annotations(annotations: Annotations.Schema<Schema.Type<S> & Brand<B>>): brand<S, B>;
 }
-/**
- * @category branding
- * @since 1.0.0
- */
-export declare const asBrandSchema: <A extends brand_.Brand<any>, I>(schema: BrandSchema<A, I>) => BrandSchema<A, I>;
 /**
  * Returns a nominal branded schema by applying a brand to a given schema.
  *
@@ -1104,7 +1149,7 @@ export declare const asBrandSchema: <A extends brand_.Brand<any>, I>(schema: Bra
  * @category branding
  * @since 1.0.0
  */
-export declare const brand: <S extends Schema.AnyNoContext, B extends string | symbol>(brand: B, annotations?: Annotations.Schema<Schema.Type<S> & brand_.Brand<B>>) => (self: S) => brand<S, B>;
+export declare const brand: <S extends Schema.AnyNoContext, B extends string | symbol>(brand: B, annotations?: Annotations.Schema<Schema.Type<S> & Brand<B>>) => (self: S) => brand<S, B>;
 /**
  * @category combinators
  * @since 1.0.0
@@ -1112,14 +1157,14 @@ export declare const brand: <S extends Schema.AnyNoContext, B extends string | s
 export declare const partial: {
     <const Options extends {
         readonly exact: true;
-    } | undefined>(options?: Options): <A, I, R>(self: Schema<A, I, R>) => Schema<{
+    } | undefined>(options?: Options): <A, I, R>(self: Schema<A, I, R>) => SchemaClass<{
         [K in keyof A]?: A[K] | ([undefined] extends [Options] ? undefined : never);
     }, {
         [K in keyof I]?: I[K] | ([undefined] extends [Options] ? undefined : never);
     }, R>;
     <A, I, R, const Options extends {
         readonly exact: true;
-    } | undefined>(self: Schema<A, I, R>, options?: Options): Schema<{
+    } | undefined>(self: Schema<A, I, R>, options?: Options): SchemaClass<{
         [K in keyof A]?: A[K] | ([undefined] extends [Options] ? undefined : never);
     }, {
         [K in keyof I]?: I[K] | ([undefined] extends [Options] ? undefined : never);
@@ -1129,12 +1174,12 @@ export declare const partial: {
  * @category combinators
  * @since 1.0.0
  */
-export declare const required: <A, I, R>(self: Schema<A, I, R>) => Schema<{ [K in keyof A]-?: A[K]; }, { [K_1 in keyof I]-?: I[K_1]; }, R>;
+export declare const required: <A, I, R>(self: Schema<A, I, R>) => SchemaClass<{ [K in keyof A]-?: A[K]; }, { [K_1 in keyof I]-?: I[K_1]; }, R>;
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface mutable<S extends Schema.Any> extends Annotable<mutable<S>, SimplifyMutable<Schema.Type<S>>, SimplifyMutable<Schema.Encoded<S>>, Schema.Context<S>> {
+export interface mutable<S extends Schema.Any> extends AnnotableClass<mutable<S>, SimplifyMutable<Schema.Type<S>>, SimplifyMutable<Schema.Encoded<S>>, Schema.Context<S>> {
 }
 /**
  * Creates a new schema with shallow mutability applied to its properties.
@@ -1149,9 +1194,34 @@ export declare const mutable: <S extends Schema.Any>(schema: S) => mutable<S>;
  * @category api interface
  * @since 1.0.0
  */
-export interface extend<Self extends Schema.Any, That extends Schema.Any> extends Schema<Types.Simplify<Schema.Type<Self> & Schema.Type<That>>, Types.Simplify<Schema.Encoded<Self> & Schema.Encoded<That>>, Schema.Context<Self> | Schema.Context<That>> {
+export interface extend<Self extends Schema.Any, That extends Schema.Any> extends AnnotableClass<extend<Self, That>, Types.Simplify<Schema.Type<Self> & Schema.Type<That>>, Types.Simplify<Schema.Encoded<Self> & Schema.Encoded<That>>, Schema.Context<Self> | Schema.Context<That>> {
 }
 /**
+ * Extends a schema by adding additional fields or index signatures.
+ *
+ * 1) It only supports **structs**, refinements of structs, unions of structs, suspensions of structs
+ * (informally `Supported = Struct | Refinement of Supported | Union of Supported | suspend(() => Supported)`)
+ * 2) The arguments must represent disjoint types (e.g., `extend(Struct({ a: String }), Struct({ a: String })))` raises an error)
+ *
+ * @example
+ * import * as Schema from "@effect/schema/Schema"
+ *
+ * const schema = Schema.Struct({
+ *   a: Schema.String,
+ *   b: Schema.String
+ * })
+ *
+ * // const extended: S.Schema<{
+ * //     readonly [x: string]: string;
+ * //     readonly a: string;
+ * //     readonly b: string;
+ * //     readonly c: string;
+ * // }>
+ * const extended = Schema.asSchema(schema.pipe(
+ *   Schema.extend(Schema.Struct({ c: Schema.String })), // <= you can add more fields
+ *   Schema.extend(Schema.Record(Schema.String, Schema.String)) // <= you can add index signatures
+ * ))
+ *
  * @category combinators
  * @since 1.0.0
  */
@@ -1164,47 +1234,60 @@ export declare const extend: {
  * @since 1.0.0
  */
 export declare const compose: {
-    <D, C extends B, R2, B>(to: Schema<D, C, R2>): <A, R1>(from: Schema<B, A, R1>) => Schema<D, A, R1 | R2>;
-    <D, C, R2>(to: Schema<D, C, R2>): <B extends C, A, R1>(from: Schema<B, A, R1>) => Schema<D, A, R1 | R2>;
+    <D, C extends B, R2, B>(to: Schema<D, C, R2>): <A, R1>(from: Schema<B, A, R1>) => SchemaClass<D, A, R1 | R2>;
+    <D, C, R2>(to: Schema<D, C, R2>): <B extends C, A, R1>(from: Schema<B, A, R1>) => SchemaClass<D, A, R1 | R2>;
     <C, B, R2>(to: Schema<C, B, R2>, options?: {
         readonly strict: true;
-    }): <A, R1>(from: Schema<B, A, R1>) => Schema<C, A, R1 | R2>;
+    }): <A, R1>(from: Schema<B, A, R1>) => SchemaClass<C, A, R1 | R2>;
     <D, C, R2>(to: Schema<D, C, R2>, options: {
         readonly strict: false;
-    }): <B, A, R1>(from: Schema<B, A, R1>) => Schema<D, A, R1 | R2>;
-    <B, A, R1, D, C extends B, R2>(from: Schema<B, A, R1>, to: Schema<D, C, R2>): Schema<D, A, R1 | R2>;
-    <B extends C, A, R1, D, C, R2>(from: Schema<B, A, R1>, to: Schema<D, C, R2>): Schema<D, A, R1 | R2>;
+    }): <B, A, R1>(from: Schema<B, A, R1>) => SchemaClass<D, A, R1 | R2>;
+    <B, A, R1, D, C extends B, R2>(from: Schema<B, A, R1>, to: Schema<D, C, R2>): SchemaClass<D, A, R1 | R2>;
+    <B extends C, A, R1, D, C, R2>(from: Schema<B, A, R1>, to: Schema<D, C, R2>): SchemaClass<D, A, R1 | R2>;
     <B, A, R1, C, R2>(from: Schema<B, A, R1>, to: Schema<C, B, R2>, options?: {
         readonly strict: true;
-    }): Schema<C, A, R1 | R2>;
+    }): SchemaClass<C, A, R1 | R2>;
     <B, A, R1, D, C, R2>(from: Schema<B, A, R1>, to: Schema<D, C, R2>, options: {
         readonly strict: false;
-    }): Schema<D, A, R1 | R2>;
+    }): SchemaClass<D, A, R1 | R2>;
 };
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface suspend<A, I, R> extends Schema<A, I, R> {
-    annotations(annotations: Annotations.Schema<A>): suspend<A, I, R>;
+export interface suspend<A, I, R> extends AnnotableClass<suspend<A, I, R>, A, I, R> {
 }
 /**
  * @category constructors
  * @since 1.0.0
  */
 export declare const suspend: <A, I, R>(f: () => Schema<A, I, R>) => suspend<A, I, R>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface refine<A, From extends Schema.Any> extends AnnotableClass<refine<A, From>, A, Schema.Encoded<From>, Schema.Context<From>> {
+    readonly from: From;
+    readonly filter: (a: Schema.Type<From>, options: ParseOptions, self: AST.Refinement) => option_.Option<ParseResult.ParseIssue>;
+    make(a: Schema.Type<From>): A;
+}
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface filter<From extends Schema.Any> extends refine<Schema.Type<From>, From> {
+}
 /**
  * @category combinators
  * @since 1.0.0
  */
-export declare function filter<A>(f: (a: A, options: ParseOptions, self: AST.Refinement) => option_.Option<ParseResult.ParseIssue>, annotations?: Annotations.Filter<A>): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
-export declare function filter<C extends A, B extends A, A = C>(refinement: Predicate.Refinement<A, B>, annotations?: Annotations.Filter<A>): <I, R>(self: Schema<C, I, R>) => Schema<C & B, I, R>;
-export declare function filter<A>(predicate: Predicate.Predicate<Types.NoInfer<A>>, annotations?: Annotations.Filter<Types.NoInfer<A>>): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare function filter<C extends A, B extends A, A = C>(refinement: (a: A, options: ParseOptions, self: AST.Refinement) => a is B, annotations?: Annotations.Filter<C & B, C>): <I, R>(self: Schema<C, I, R>) => refine<C & B, Schema<A, I, R>>;
+export declare function filter<S extends Schema.Any>(predicate: (a: Types.NoInfer<Schema.Type<S>>, options: ParseOptions, self: AST.Refinement) => undefined | boolean | string | ParseResult.ParseIssue, annotations?: Annotations.Filter<Types.NoInfer<Schema.Type<S>>>): (self: S) => filter<S>;
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface transformOrFail<From extends Schema.Any, To extends Schema.Any, R> extends Annotable<transformOrFail<From, To, R>, Schema.Type<To>, Schema.Encoded<From>, Schema.Context<From> | Schema.Context<To> | R> {
+export interface transformOrFail<From extends Schema.Any, To extends Schema.Any, R = never> extends AnnotableClass<transformOrFail<From, To, R>, Schema.Type<To>, Schema.Encoded<From>, Schema.Context<From> | Schema.Context<To> | R> {
     readonly from: From;
     readonly to: To;
 }
@@ -1239,7 +1322,7 @@ export declare const transformOrFail: {
  * @category api interface
  * @since 1.0.0
  */
-export interface transform<From extends Schema.Any, To extends Schema.Any> extends transformOrFail<From, To, never> {
+export interface transform<From extends Schema.Any, To extends Schema.Any> extends transformOrFail<From, To> {
     annotations(annotations: Annotations.Schema<Schema.Type<To>>): transform<From, To>;
 }
 /**
@@ -1342,12 +1425,12 @@ export declare function transformLiterals<const A extends ReadonlyArray<readonly
 export declare const attachPropertySignature: {
     <K extends PropertyKey, V extends AST.LiteralValue | symbol, A>(key: K, value: V, annotations?: Annotations.Schema<Types.Simplify<A & {
         readonly [k in K]: V;
-    }>>): <I, R>(schema: Schema<A, I, R>) => Schema<Types.Simplify<A & {
+    }>>): <I, R>(schema: SchemaClass<A, I, R>) => Schema<Types.Simplify<A & {
         readonly [k in K]: V;
     }>, I, R>;
     <A, I, R, K extends PropertyKey, V extends AST.LiteralValue | symbol>(schema: Schema<A, I, R>, key: K, value: V, annotations?: Annotations.Schema<Types.Simplify<A & {
         readonly [k in K]: V;
-    }>>): Schema<Types.Simplify<A & {
+    }>>): SchemaClass<Types.Simplify<A & {
         readonly [k in K]: V;
     }>, I, R>;
 };
@@ -1394,7 +1477,7 @@ export declare namespace Annotations {
     /**
      * @since 1.0.0
      */
-    interface Filter<A> extends Schema<A, readonly [A]> {
+    interface Filter<A, P = A> extends Schema<A, readonly [P]> {
     }
 }
 /**
@@ -1430,13 +1513,13 @@ export declare const description: (description: AST.DescriptionAnnotation) => <S
  * @since 1.0.0
  */
 export declare const examples: <S extends Annotable.All>(examples: readonly [Schema.Type<S>, ...Schema.Type<S>[]]) => (self: S) => Annotable.Self<S>;
-declare const $default: <S extends Annotable.All>(value: Schema.Type<S>) => (self: S) => Annotable.Self<S>;
+declare const default$: <S extends Annotable.All>(value: Schema.Type<S>) => (self: S) => Annotable.Self<S>;
 export { 
 /**
  * @category annotations
  * @since 1.0.0
  */
-$default as default };
+default$ as default };
 /**
  * @category annotations
  * @since 1.0.0
@@ -1483,12 +1566,12 @@ export declare const rename: {
         readonly [K in keyof A]?: PropertyKey;
     } & {
         readonly [K in Exclude<keyof M, keyof A>]: never;
-    }>(mapping: M): <I, R>(self: Schema<A, I, R>) => Schema<Types.Simplify<Rename<A, M>>, I, R>;
+    }>(mapping: M): <I, R>(self: Schema<A, I, R>) => SchemaClass<Types.Simplify<Rename<A, M>>, I, R>;
     <A, I, R, const M extends {
         readonly [K in keyof A]?: PropertyKey;
     } & {
         readonly [K in Exclude<keyof M, keyof A>]: never;
-    }>(self: Schema<A, I, R>, mapping: M): Schema<Types.Simplify<Rename<A, M>>, I, R>;
+    }>(self: Schema<A, I, R>, mapping: M): SchemaClass<Types.Simplify<Rename<A, M>>, I, R>;
 };
 /**
  * @category type id
@@ -1504,7 +1587,7 @@ export declare const TrimmedTypeId: unique symbol;
  * @category string filters
  * @since 1.0.0
  */
-export declare const trimmed: <A extends string>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const trimmed: <A extends string>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1519,7 +1602,7 @@ export type MaxLengthTypeId = typeof MaxLengthTypeId;
  * @category string filters
  * @since 1.0.0
  */
-export declare const maxLength: <A extends string>(maxLength: number, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const maxLength: <A extends string>(maxLength: number, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1534,7 +1617,7 @@ export type MinLengthTypeId = typeof MinLengthTypeId;
  * @category string filters
  * @since 1.0.0
  */
-export declare const minLength: <A extends string>(minLength: number, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const minLength: <A extends string>(minLength: number, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1544,7 +1627,7 @@ export declare const PatternTypeId: unique symbol;
  * @category string filters
  * @since 1.0.0
  */
-export declare const pattern: <A extends string>(regex: RegExp, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const pattern: <A extends string>(regex: RegExp, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1554,7 +1637,7 @@ export declare const StartsWithTypeId: unique symbol;
  * @category string filters
  * @since 1.0.0
  */
-export declare const startsWith: <A extends string>(startsWith: string, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const startsWith: <A extends string>(startsWith: string, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1564,7 +1647,7 @@ export declare const EndsWithTypeId: unique symbol;
  * @category string filters
  * @since 1.0.0
  */
-export declare const endsWith: <A extends string>(endsWith: string, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const endsWith: <A extends string>(endsWith: string, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1574,7 +1657,7 @@ export declare const IncludesTypeId: unique symbol;
  * @category string filters
  * @since 1.0.0
  */
-export declare const includes: <A extends string>(searchString: string, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const includes: <A extends string>(searchString: string, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1586,12 +1669,15 @@ export declare const LowercasedTypeId: unique symbol;
  * @category string filters
  * @since 1.0.0
  */
-export declare const lowercased: <A extends string>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lowercased: <A extends string>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
+declare const Lowercased_base: filter<Schema<string, string, never>>;
 /**
  * @category string constructors
  * @since 1.0.0
  */
-export declare const Lowercased: $String;
+export declare class Lowercased extends Lowercased_base {
+    static annotations: (annotations: Annotations.Schema<string>) => typeof Lowercased;
+}
 /**
  * @category type id
  * @since 1.0.0
@@ -1603,12 +1689,15 @@ export declare const UppercasedTypeId: unique symbol;
  * @category string filters
  * @since 1.0.0
  */
-export declare const uppercased: <A extends string>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const uppercased: <A extends string>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
+declare const Uppercased_base: filter<Schema<string, string, never>>;
 /**
  * @category string constructors
  * @since 1.0.0
  */
-export declare const Uppercased: $String;
+export declare class Uppercased extends Uppercased_base {
+    static annotations: (annotations: Annotations.Schema<string>) => typeof Uppercased;
+}
 /**
  * @category type id
  * @since 1.0.0
@@ -1626,70 +1715,67 @@ export type LengthTypeId = typeof LengthTypeId;
 export declare const length: <A extends string>(length: number | {
     readonly min: number;
     readonly max: number;
-}, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+}, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
+declare const Char_base: filter<Schema<string, string, never>>;
 /**
  * A schema representing a single character.
  *
  * @category string constructors
  * @since 1.0.0
  */
-export declare const Char: Schema<string, string, never>;
+export declare class Char extends Char_base {
+    static annotations: (annotations: Annotations.Schema<string>) => typeof Char;
+}
 /**
  * @category string filters
  * @since 1.0.0
  */
-export declare const nonEmpty: <A extends string>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Lowercase extends Annotable<Lowercase, string> {
-}
+export declare const nonEmpty: <A extends string>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
+declare const Lowercase_base: transform<typeof String$, typeof Lowercased>;
 /**
  * This schema converts a string to lowercase.
  *
  * @category string transformations
  * @since 1.0.0
  */
-export declare const Lowercase: Lowercase;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Uppercase extends Annotable<Uppercase, string> {
+export declare class Lowercase extends Lowercase_base {
+    static annotations: (annotations: Annotations.Schema<string>) => typeof Lowercase;
 }
+declare const Uppercase_base: transform<typeof String$, typeof Uppercased>;
 /**
  * This schema converts a string to uppercase.
  *
  * @category string transformations
  * @since 1.0.0
  */
-export declare const Uppercase: Uppercase;
+export declare class Uppercase extends Uppercase_base {
+    static annotations: (annotations: Annotations.Schema<string>) => typeof Uppercase;
+}
+declare const Trimmed_base: filter<Schema<string, string, never>>;
 /**
  * @category string constructors
  * @since 1.0.0
  */
-export declare const Trimmed: $String;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Trim extends Annotable<Trim, string> {
+export declare class Trimmed extends Trimmed_base {
+    static annotations: (annotations: Annotations.Schema<string>) => typeof Trimmed;
 }
+declare const Trim_base: transform<typeof String$, typeof Trimmed>;
 /**
  * This schema allows removing whitespaces from the beginning and end of a string.
  *
  * @category string transformations
  * @since 1.0.0
  */
-export declare const Trim: Trim;
+export declare class Trim extends Trim_base {
+    static annotations: (annotations: Annotations.Schema<string>) => typeof Trim;
+}
 /**
  * Returns a schema that allows splitting a string into an array of strings.
  *
  * @category string transformations
  * @since 1.0.0
  */
-export declare const split: (separator: string) => Schema<ReadonlyArray<string>, string>;
+export declare const split: (separator: string) => transform<typeof String$, Array$<typeof String$>>;
 /**
  * @since 1.0.0
  */
@@ -1716,19 +1802,23 @@ export type ParseJsonOptions = {
  * @since 1.0.0
  */
 export declare const parseJson: {
-    <A, I, R>(schema: Schema<A, I, R>, options?: ParseJsonOptions): Schema<A, string, R>;
-    (options?: ParseJsonOptions): Schema<unknown, string>;
+    <A, I, R>(schema: Schema<A, I, R>, options?: ParseJsonOptions): SchemaClass<A, string, R>;
+    (options?: ParseJsonOptions): SchemaClass<unknown, string>;
 };
+declare const NonEmpty_base: filter<Schema<string, string, never>>;
 /**
  * @category string constructors
  * @since 1.0.0
  */
-export declare const NonEmpty: $String;
+export declare class NonEmpty extends NonEmpty_base {
+    static annotations: (annotations: Annotations.Schema<string>) => typeof NonEmpty;
+}
 /**
  * @category type id
  * @since 1.0.0
  */
 export declare const UUIDTypeId: unique symbol;
+declare const UUID_base: filter<Schema<string, string, never>>;
 /**
  * Represents a Universally Unique Identifier (UUID).
  *
@@ -1737,12 +1827,15 @@ export declare const UUIDTypeId: unique symbol;
  * @category string constructors
  * @since 1.0.0
  */
-export declare const UUID: $String;
+export declare class UUID extends UUID_base {
+    static annotations: (annotations: Annotations.Schema<string>) => typeof UUID;
+}
 /**
  * @category type id
  * @since 1.0.0
  */
 export declare const ULIDTypeId: unique symbol;
+declare const ULID_base: filter<Schema<string, string, never>>;
 /**
  * Represents a Universally Unique Lexicographically Sortable Identifier (ULID).
  *
@@ -1752,7 +1845,9 @@ export declare const ULIDTypeId: unique symbol;
  * @category string constructors
  * @since 1.0.0
  */
-export declare const ULID: $String;
+export declare class ULID extends ULID_base {
+    static annotations: (annotations: Annotations.Schema<string>) => typeof ULID;
+}
 /**
  * @category type id
  * @since 1.0.0
@@ -1766,7 +1861,7 @@ export declare const FiniteTypeId: unique symbol;
  * @category number filters
  * @since 1.0.0
  */
-export declare const finite: <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const finite: <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1783,7 +1878,7 @@ export type GreaterThanTypeId = typeof GreaterThanTypeId;
  * @category number filters
  * @since 1.0.0
  */
-export declare const greaterThan: <A extends number>(min: number, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const greaterThan: <A extends number>(min: number, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1800,7 +1895,7 @@ export type GreaterThanOrEqualToTypeId = typeof GreaterThanOrEqualToTypeId;
  * @category number filters
  * @since 1.0.0
  */
-export declare const greaterThanOrEqualTo: <A extends number>(min: number, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const greaterThanOrEqualTo: <A extends number>(min: number, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1810,7 +1905,7 @@ export declare const MultipleOfTypeId: unique symbol;
  * @category number filters
  * @since 1.0.0
  */
-export declare const multipleOf: <A extends number>(divisor: number, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const multipleOf: <A extends number>(divisor: number, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1825,7 +1920,7 @@ export type IntTypeId = typeof IntTypeId;
  * @category number filters
  * @since 1.0.0
  */
-export declare const int: <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const int: <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1842,7 +1937,7 @@ export type LessThanTypeId = typeof LessThanTypeId;
  * @category number filters
  * @since 1.0.0
  */
-export declare const lessThan: <A extends number>(max: number, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lessThan: <A extends number>(max: number, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1859,7 +1954,7 @@ export type LessThanOrEqualToTypeId = typeof LessThanOrEqualToTypeId;
  * @category number filters
  * @since 1.0.0
  */
-export declare const lessThanOrEqualTo: <A extends number>(max: number, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lessThanOrEqualTo: <A extends number>(max: number, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1876,7 +1971,7 @@ export type BetweenTypeId = typeof BetweenTypeId;
  * @category number filters
  * @since 1.0.0
  */
-export declare const between: <A extends number>(min: number, max: number, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const between: <A extends number>(min: number, max: number, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -1886,42 +1981,48 @@ export declare const NonNaNTypeId: unique symbol;
  * @category number filters
  * @since 1.0.0
  */
-export declare const nonNaN: <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const nonNaN: <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category number filters
  * @since 1.0.0
  */
-export declare const positive: <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const positive: <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category number filters
  * @since 1.0.0
  */
-export declare const negative: <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const negative: <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category number filters
  * @since 1.0.0
  */
-export declare const nonPositive: <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const nonPositive: <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category number filters
  * @since 1.0.0
  */
-export declare const nonNegative: <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const nonNegative: <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * Clamps a number between a minimum and a maximum value.
  *
  * @category number transformations
  * @since 1.0.0
  */
-export declare const clamp: (minimum: number, maximum: number) => <R, I, A extends number>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const clamp: (minimum: number, maximum: number) => <A extends number, I, R>(self: Schema<A, I, R>) => transform<Schema<A, I, R>, filter<Schema<A>>>;
 /**
- * @category api interface
+ * Transforms a `string` into a `number` by parsing the string using the `parse` function of the `effect/Number` module.
+ *
+ * It returns an error if the value can't be converted (for example when non-numeric characters are provided).
+ *
+ * The following special string values are supported: "NaN", "Infinity", "-Infinity".
+ *
+ * @category number transformations
  * @since 1.0.0
  */
-export interface NumberFromString extends Annotable<NumberFromString, number, string> {
-}
+export declare const parseNumber: <A extends string, I, R>(self: Schema<A, I, R>) => transformOrFail<Schema<A, I, R>, typeof Number$>;
+declare const NumberFromString_base: transformOrFail<Schema<string, string, never>, typeof Number$, never>;
 /**
- * This schema transforms a `string` into a `number` by parsing the string using the `Number` function.
+ * This schema transforms a `string` into a `number` by parsing the string using the `parse` function of the `effect/Number` module.
  *
  * It returns an error if the value can't be converted (for example when non-numeric characters are provided).
  *
@@ -1930,47 +2031,71 @@ export interface NumberFromString extends Annotable<NumberFromString, number, st
  * @category number constructors
  * @since 1.0.0
  */
-export declare const NumberFromString: NumberFromString;
+export declare class NumberFromString extends NumberFromString_base {
+    static annotations: (annotations: Annotations.Schema<number>) => typeof NumberFromString;
+}
+declare const Finite_base: filter<Schema<number, number, never>>;
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export declare const Finite: $Number;
+export declare class Finite extends Finite_base {
+    static annotations: (annotations: Annotations.Schema<number>) => typeof Finite;
+}
+declare const Int_base: filter<Schema<number, number, never>>;
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export declare const Int: $Number;
+export declare class Int extends Int_base {
+    static annotations: (annotations: Annotations.Schema<number>) => typeof Int;
+}
+declare const NonNaN_base: filter<Schema<number, number, never>>;
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export declare const NonNaN: $Number;
+export declare class NonNaN extends NonNaN_base {
+    static annotations: (annotations: Annotations.Schema<number>) => typeof NonNaN;
+}
+declare const Positive_base: filter<Schema<number, number, never>>;
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export declare const Positive: $Number;
+export declare class Positive extends Positive_base {
+    static annotations: (annotations: Annotations.Schema<number>) => typeof Positive;
+}
+declare const Negative_base: filter<Schema<number, number, never>>;
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export declare const Negative: $Number;
+export declare class Negative extends Negative_base {
+    static annotations: (annotations: Annotations.Schema<number>) => typeof Negative;
+}
+declare const NonPositive_base: filter<Schema<number, number, never>>;
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export declare const NonPositive: $Number;
+export declare class NonPositive extends NonPositive_base {
+    static annotations: (annotations: Annotations.Schema<number>) => typeof NonPositive;
+}
+declare const NonNegative_base: filter<Schema<number, number, never>>;
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export declare const NonNegative: $Number;
+export declare class NonNegative extends NonNegative_base {
+    static annotations: (annotations: Annotations.Schema<number>) => typeof NonNegative;
+}
 /**
  * @category type id
  * @since 1.0.0
  */
 export declare const JsonNumberTypeId: unique symbol;
+declare const JsonNumber_base: filter<typeof Number$>;
 /**
  * The `JsonNumber` is a schema for representing JSON numbers. It ensures that the provided value is a valid
  * number by filtering out `NaN` and `(+/-) Infinity`. This is useful when you want to validate and represent numbers in JSON
@@ -1989,25 +2114,22 @@ export declare const JsonNumberTypeId: unique symbol;
  * @category number constructors
  * @since 1.0.0
  */
-export declare const JsonNumber: $Number;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Not extends Annotable<Not, boolean> {
+export declare class JsonNumber extends JsonNumber_base {
+    static annotations: (annotations: Annotations.Schema<number>) => typeof JsonNumber;
 }
+declare const Not_base: transform<typeof Boolean$, typeof Boolean$>;
 /**
  * @category boolean transformations
  * @since 1.0.0
  */
-export declare const Not: Not;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface $Symbol extends Annotable<$Symbol, symbol, string> {
+export declare class Not extends Not_base {
+    static annotations: (annotations: Annotations.Schema<boolean>) => typeof Not;
+}
+declare const Symbol$_base: transform<typeof String$, typeof SymbolFromSelf>;
+/** @ignore */
+declare class Symbol$ extends Symbol$_base {
+    static annotations: (annotations: Annotations.Schema<symbol>) => typeof Symbol$;
 }
-declare const $Symbol: $Symbol;
 export { 
 /**
  * This schema transforms a `string` into a `symbol`.
@@ -2015,7 +2137,7 @@ export {
  * @category symbol transformations
  * @since 1.0.0
  */
-$Symbol as Symbol };
+Symbol$ as Symbol };
 /**
  * @category type id
  * @since 1.0.0
@@ -2030,7 +2152,7 @@ export type GreaterThanBigIntTypeId = typeof GreaterThanBigIntTypeId;
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const greaterThanBigInt: <A extends bigint>(min: bigint, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const greaterThanBigInt: <A extends bigint>(min: bigint, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2045,7 +2167,7 @@ export type GreaterThanOrEqualToBigIntTypeId = typeof GreaterThanOrEqualToBigInt
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const greaterThanOrEqualToBigInt: <A extends bigint>(min: bigint, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const greaterThanOrEqualToBigInt: <A extends bigint>(min: bigint, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2060,7 +2182,7 @@ export type LessThanBigIntTypeId = typeof LessThanBigIntTypeId;
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const lessThanBigInt: <A extends bigint>(max: bigint, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lessThanBigInt: <A extends bigint>(max: bigint, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2075,7 +2197,7 @@ export type LessThanOrEqualToBigIntTypeId = typeof LessThanOrEqualToBigIntTypeId
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const lessThanOrEqualToBigInt: <A extends bigint>(max: bigint, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lessThanOrEqualToBigInt: <A extends bigint>(max: bigint, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2090,41 +2212,39 @@ export type BetweenBigIntTypeId = typeof BetweenBigIntTypeId;
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const betweenBigInt: <A extends bigint>(min: bigint, max: bigint, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const betweenBigInt: <A extends bigint>(min: bigint, max: bigint, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const positiveBigInt: <A extends bigint>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const positiveBigInt: <A extends bigint>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const negativeBigInt: <A extends bigint>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const negativeBigInt: <A extends bigint>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const nonNegativeBigInt: <A extends bigint>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const nonNegativeBigInt: <A extends bigint>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category bigint filters
  * @since 1.0.0
  */
-export declare const nonPositiveBigInt: <A extends bigint>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const nonPositiveBigInt: <A extends bigint>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * Clamps a bigint between a minimum and a maximum value.
  *
  * @category bigint transformations
  * @since 1.0.0
  */
-export declare const clampBigInt: (minimum: bigint, maximum: bigint) => <R, I, A extends bigint>(self: Schema<A, I, R>) => Schema<A, I, R>;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface $BigInt extends Annotable<$BigInt, bigint, string> {
+export declare const clampBigInt: (minimum: bigint, maximum: bigint) => <A extends bigint, I, R>(self: Schema<A, I, R>) => transform<Schema<A, I, R>, filter<Schema<A>>>;
+declare const BigInt$_base: transformOrFail<typeof String$, typeof BigIntFromSelf, never>;
+/** @ignore */
+declare class BigInt$ extends BigInt$_base {
+    static annotations: (annotations: Annotations.Schema<bigint>) => typeof BigInt$;
 }
-declare const bigint: $BigInt;
 export { 
 /**
  * This schema transforms a `string` into a `bigint` by parsing the string using the `BigInt` function.
@@ -2134,53 +2254,48 @@ export {
  * @category bigint transformations
  * @since 1.0.0
  */
-bigint as BigInt };
+BigInt$ as BigInt };
 /**
  * @category bigint constructors
  * @since 1.0.0
  */
-export declare const PositiveBigIntFromSelf: Schema<bigint>;
+export declare const PositiveBigIntFromSelf: filter<Schema<bigint>>;
 /**
  * @category bigint constructors
  * @since 1.0.0
  */
-export declare const PositiveBigInt: Schema<bigint, string>;
+export declare const PositiveBigInt: filter<Schema<bigint, string>>;
 /**
  * @category bigint constructors
  * @since 1.0.0
  */
-export declare const NegativeBigIntFromSelf: Schema<bigint>;
+export declare const NegativeBigIntFromSelf: filter<Schema<bigint>>;
 /**
  * @category bigint constructors
  * @since 1.0.0
  */
-export declare const NegativeBigInt: Schema<bigint, string>;
+export declare const NegativeBigInt: filter<Schema<bigint, string>>;
 /**
  * @category bigint constructors
  * @since 1.0.0
  */
-export declare const NonPositiveBigIntFromSelf: Schema<bigint>;
+export declare const NonPositiveBigIntFromSelf: filter<Schema<bigint>>;
 /**
  * @category bigint constructors
  * @since 1.0.0
  */
-export declare const NonPositiveBigInt: Schema<bigint, string>;
+export declare const NonPositiveBigInt: filter<Schema<bigint, string>>;
 /**
  * @category bigint constructors
  * @since 1.0.0
  */
-export declare const NonNegativeBigIntFromSelf: Schema<bigint>;
+export declare const NonNegativeBigIntFromSelf: filter<Schema<bigint>>;
 /**
  * @category bigint constructors
  * @since 1.0.0
  */
-export declare const NonNegativeBigInt: Schema<bigint, string>;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface BigIntFromNumber extends Annotable<BigIntFromNumber, bigint, number> {
-}
+export declare const NonNegativeBigInt: filter<Schema<bigint, string>>;
+declare const BigIntFromNumber_base: transformOrFail<typeof Number$, typeof BigIntFromSelf, never>;
 /**
  * This schema transforms a `number` into a `bigint` by parsing the number using the `BigInt` function.
  *
@@ -2189,48 +2304,36 @@ export interface BigIntFromNumber extends Annotable<BigIntFromNumber, bigint, nu
  * @category bigint transformations
  * @since 1.0.0
  */
-export declare const BigIntFromNumber: BigIntFromNumber;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface SecretFromSelf extends Annotable<SecretFromSelf, secret_.Secret> {
+export declare class BigIntFromNumber extends BigIntFromNumber_base {
+    static annotations: (annotations: Annotations.Schema<bigint>) => typeof BigIntFromNumber;
 }
+declare const SecretFromSelf_base: SchemaClass<secret_.Secret, secret_.Secret, never>;
 /**
  * @category Secret constructors
  * @since 1.0.0
  */
-export declare const SecretFromSelf: SecretFromSelf;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Secret extends Annotable<Secret, secret_.Secret, string> {
+export declare class SecretFromSelf extends SecretFromSelf_base {
+    static annotations: (annotations: Annotations.Schema<secret_.Secret>) => typeof SecretFromSelf;
 }
+declare const Secret_base: transform<typeof String$, typeof SecretFromSelf>;
 /**
  * A schema that transforms a `string` into a `Secret`.
  *
  * @category Secret transformations
  * @since 1.0.0
  */
-export declare const Secret: Secret;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface DurationFromSelf extends Annotable<DurationFromSelf, duration_.Duration> {
+export declare class Secret extends Secret_base {
+    static annotations: (annotations: Annotations.Schema<secret_.Secret>) => typeof Secret;
 }
+declare const DurationFromSelf_base: SchemaClass<duration_.Duration, duration_.Duration, never>;
 /**
  * @category Duration constructors
  * @since 1.0.0
  */
-export declare const DurationFromSelf: DurationFromSelf;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface DurationFromNanos extends Annotable<DurationFromNanos, duration_.Duration, bigint> {
+export declare class DurationFromSelf extends DurationFromSelf_base {
+    static annotations: (annotations: Annotations.Schema<duration_.Duration>) => typeof DurationFromSelf;
 }
+declare const DurationFromNanos_base: transformOrFail<typeof BigIntFromSelf, typeof DurationFromSelf, never>;
 /**
  * A schema that transforms a `bigint` tuple into a `Duration`.
  * Treats the value as the number of nanoseconds.
@@ -2238,13 +2341,10 @@ export interface DurationFromNanos extends Annotable<DurationFromNanos, duration
  * @category Duration transformations
  * @since 1.0.0
  */
-export declare const DurationFromNanos: DurationFromNanos;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface DurationFromMillis extends Annotable<DurationFromMillis, duration_.Duration, number> {
+export declare class DurationFromNanos extends DurationFromNanos_base {
+    static annotations: (annotations: Annotations.Schema<duration_.Duration>) => typeof DurationFromNanos;
 }
+declare const DurationFromMillis_base: transform<typeof Number$, typeof DurationFromSelf>;
 /**
  * A schema that transforms a `number` tuple into a `Duration`.
  * Treats the value as the number of milliseconds.
@@ -2252,27 +2352,26 @@ export interface DurationFromMillis extends Annotable<DurationFromMillis, durati
  * @category Duration transformations
  * @since 1.0.0
  */
-export declare const DurationFromMillis: DurationFromMillis;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Duration extends Annotable<Duration, duration_.Duration, readonly [seconds: number, nanos: number]> {
+export declare class DurationFromMillis extends DurationFromMillis_base {
+    static annotations: (annotations: Annotations.Schema<duration_.Duration>) => typeof DurationFromMillis;
 }
+declare const Duration_base: transform<Schema<readonly [seconds: number, nanos: number], readonly [seconds: number, nanos: number], never>, typeof DurationFromSelf>;
 /**
  * A schema that transforms a `[number, number]` tuple into a `Duration`.
  *
  * @category Duration transformations
  * @since 1.0.0
  */
-export declare const Duration: Duration;
+export declare class Duration extends Duration_base {
+    static annotations: (annotations: Annotations.Schema<duration_.Duration>) => typeof Duration;
+}
 /**
  * Clamps a `Duration` between a minimum and a maximum value.
  *
  * @category Duration transformations
  * @since 1.0.0
  */
-export declare const clampDuration: (minimum: duration_.DurationInput, maximum: duration_.DurationInput) => <R, I, A extends duration_.Duration>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const clampDuration: (minimum: duration_.DurationInput, maximum: duration_.DurationInput) => <A extends duration_.Duration, I, R>(self: Schema<A, I, R>) => transform<Schema<A, I, R>, filter<Schema<A>>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2282,7 +2381,7 @@ export declare const LessThanDurationTypeId: unique symbol;
  * @category Duration filters
  * @since 1.0.0
  */
-export declare const lessThanDuration: <A extends duration_.Duration>(max: duration_.DurationInput, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lessThanDuration: <A extends duration_.Duration>(max: duration_.DurationInput, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2292,7 +2391,7 @@ export declare const LessThanOrEqualToDurationTypeId: unique symbol;
  * @category Duration filters
  * @since 1.0.0
  */
-export declare const lessThanOrEqualToDuration: <A extends duration_.Duration>(max: duration_.DurationInput, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lessThanOrEqualToDuration: <A extends duration_.Duration>(max: duration_.DurationInput, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2302,7 +2401,7 @@ export declare const GreaterThanDurationTypeId: unique symbol;
  * @category Duration filters
  * @since 1.0.0
  */
-export declare const greaterThanDuration: <A extends duration_.Duration>(min: duration_.DurationInput, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const greaterThanDuration: <A extends duration_.Duration>(min: duration_.DurationInput, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2312,7 +2411,7 @@ export declare const GreaterThanOrEqualToDurationTypeId: unique symbol;
  * @category Duration filters
  * @since 1.0.0
  */
-export declare const greaterThanOrEqualToDuration: <A extends duration_.Duration>(min: duration_.DurationInput, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const greaterThanOrEqualToDuration: <A extends duration_.Duration>(min: duration_.DurationInput, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2322,13 +2421,13 @@ export declare const BetweenDurationTypeId: unique symbol;
  * @category Duration filters
  * @since 1.0.0
  */
-export declare const betweenDuration: <A extends duration_.Duration>(minimum: duration_.DurationInput, maximum: duration_.DurationInput, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const betweenDuration: <A extends duration_.Duration>(minimum: duration_.DurationInput, maximum: duration_.DurationInput, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category Uint8Array constructors
  * @since 1.0.0
  */
 export declare const Uint8ArrayFromSelf: Schema<Uint8Array>;
-declare const $Uint8Array: Schema<Uint8Array, ReadonlyArray<number>>;
+declare const Uint8Array$: Schema<Uint8Array, ReadonlyArray<number>>;
 export { 
 /**
  * A schema that transforms a `number` array into a `Uint8Array`.
@@ -2336,7 +2435,7 @@ export {
  * @category Uint8Array transformations
  * @since 1.0.0
  */
-$Uint8Array as Uint8Array };
+Uint8Array$ as Uint8Array };
 /**
  * @category Encoding transformations
  * @since 1.0.0
@@ -2366,7 +2465,7 @@ export type MinItemsTypeId = typeof MinItemsTypeId;
  * @category ReadonlyArray filters
  * @since 1.0.0
  */
-export declare const minItems: <A>(n: number, annotations?: Annotations.Filter<ReadonlyArray<A>>) => <I, R>(self: Schema<ReadonlyArray<A>, I, R>) => Schema<ReadonlyArray<A>, I, R>;
+export declare const minItems: <A>(n: number, annotations?: Annotations.Filter<ReadonlyArray<A>>) => <I, R>(self: Schema<ReadonlyArray<A>, I, R>) => filter<Schema<ReadonlyArray<A>, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2381,7 +2480,7 @@ export type MaxItemsTypeId = typeof MaxItemsTypeId;
  * @category ReadonlyArray filters
  * @since 1.0.0
  */
-export declare const maxItems: <A>(n: number, annotations?: Annotations.Filter<ReadonlyArray<A>>) => <I, R>(self: Schema<ReadonlyArray<A>, I, R>) => Schema<ReadonlyArray<A>, I, R>;
+export declare const maxItems: <A>(n: number, annotations?: Annotations.Filter<ReadonlyArray<A>>) => <I, R>(self: Schema<ReadonlyArray<A>, I, R>) => filter<Schema<ReadonlyArray<A>, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2396,19 +2495,19 @@ export type ItemsCountTypeId = typeof ItemsCountTypeId;
  * @category ReadonlyArray filters
  * @since 1.0.0
  */
-export declare const itemsCount: <A>(n: number, annotations?: Annotations.Filter<ReadonlyArray<A>>) => <I, R>(self: Schema<ReadonlyArray<A>, I, R>) => Schema<ReadonlyArray<A>, I, R>;
+export declare const itemsCount: <A>(n: number, annotations?: Annotations.Filter<ReadonlyArray<A>>) => <I, R>(self: Schema<ReadonlyArray<A>, I, R>) => filter<Schema<ReadonlyArray<A>, I, R>>;
 /**
  * @category ReadonlyArray transformations
  * @since 1.0.0
  */
-export declare const getNumberIndexedAccess: <A extends readonly any[], I extends readonly any[], R>(self: Schema<A, I, R>) => Schema<A[number], I[number], R>;
+export declare const getNumberIndexedAccess: <A extends readonly any[], I extends readonly any[], R>(self: Schema<A, I, R>) => SchemaClass<A[number], I[number], R>;
 /**
  * Get the first element of a `ReadonlyArray`, or `None` if the array is empty.
  *
  * @category ReadonlyArray transformations
  * @since 1.0.0
  */
-export declare const head: <A, I, R>(self: Schema<ReadonlyArray<A>, I, R>) => Schema<option_.Option<A>, I, R>;
+export declare const head: <A, I, R>(self: Schema<ReadonlyArray<A>, I, R>) => SchemaClass<option_.Option<A>, I, R>;
 /**
  * Retrieves the first element of a `ReadonlyArray`.
  *
@@ -2418,8 +2517,8 @@ export declare const head: <A, I, R>(self: Schema<ReadonlyArray<A>, I, R>) => Sc
  * @since 1.0.0
  */
 export declare const headOrElse: {
-    <A>(fallback?: LazyArg<A>): <I, R>(self: Schema<ReadonlyArray<A>, I, R>) => Schema<A, I, R>;
-    <A, I, R>(self: Schema<ReadonlyArray<A>, I, R>, fallback?: LazyArg<A>): Schema<A, I, R>;
+    <A>(fallback?: LazyArg<A>): <I, R>(self: Schema<ReadonlyArray<A>, I, R>) => SchemaClass<A, I, R>;
+    <A, I, R>(self: Schema<ReadonlyArray<A>, I, R>, fallback?: LazyArg<A>): SchemaClass<A, I, R>;
 };
 /**
  * @category type id
@@ -2432,53 +2531,42 @@ export declare const ValidDateTypeId: unique symbol;
  * @category Date filters
  * @since 1.0.0
  */
-export declare const validDate: (annotations?: Annotations.Filter<Date>) => <I, R>(self: Schema<Date, I, R>) => Schema<Date, I, R>;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface DateFromSelf extends Annotable<DateFromSelf, Date> {
-}
+export declare const validDate: (annotations?: Annotations.Filter<Date>) => <I, R>(self: Schema<Date, I, R>) => filter<Schema<Date, I, R>>;
+declare const DateFromSelf_base: SchemaClass<Date, Date, never>;
 /**
  * Represents a schema for handling potentially **invalid** `Date` instances (e.g., `new Date("Invalid Date")` is not rejected).
  *
  * @category Date constructors
  * @since 1.0.0
  */
-export declare const DateFromSelf: DateFromSelf;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface ValidDateFromSelf extends Annotable<ValidDateFromSelf, Date> {
+export declare class DateFromSelf extends DateFromSelf_base {
+    static annotations: (annotations: Annotations.Schema<Date>) => typeof DateFromSelf;
 }
+declare const ValidDateFromSelf_base: filter<Schema<Date, Date, never>>;
 /**
  * Represents a schema for handling only **valid** dates. For example, `new Date("Invalid Date")` is rejected, even though it is an instance of `Date`.
  *
  * @category Date constructors
  * @since 1.0.0
  */
-export declare const ValidDateFromSelf: ValidDateFromSelf;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface DateFromString extends Annotable<DateFromString, Date, string> {
+export declare class ValidDateFromSelf extends ValidDateFromSelf_base {
+    static annotations: (annotations: Annotations.Schema<Date>) => typeof ValidDateFromSelf;
 }
+declare const DateFromString_base: transform<typeof String$, typeof DateFromSelf>;
 /**
  * Represents a schema that converts a `string` into a (potentially invalid) `Date` (e.g., `new Date("Invalid Date")` is not rejected).
  *
  * @category Date transformations
  * @since 1.0.0
  */
-export declare const DateFromString: DateFromString;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface $Date extends Annotable<$Date, Date, string> {
+export declare class DateFromString extends DateFromString_base {
+    static annotations: (annotations: Annotations.Schema<Date>) => typeof DateFromString;
+}
+declare const Date$_base: filter<Schema<Date, string, never>>;
+/** @ignore */
+declare class Date$ extends Date$_base {
+    static annotations: (annotations: Annotations.Schema<Date>) => typeof Date$;
 }
-declare const $Date: $Date;
 export { 
 /**
  * A schema that transforms a `string` into a **valid** `Date`, ensuring that invalid dates, such as `new Date("Invalid Date")`, are rejected.
@@ -2486,7 +2574,18 @@ export {
  * @category Date transformations
  * @since 1.0.0
  */
-$Date as Date };
+Date$ as Date };
+declare const DateFromNumber_base: transform<typeof Number$, typeof DateFromSelf>;
+/**
+ * Represents a schema that converts a `number` into a (potentially invalid) `Date` (e.g., `NaN`, `Infinity` and `-Infinity` are not rejected).
+ * Encoding will return `NaN` for invalid dates.
+ *
+ * @category Date transformations
+ * @since 1.0.0
+ */
+export declare class DateFromNumber extends DateFromNumber_base {
+    static annotations: (annotations: Annotations.Schema<Date>) => typeof DateFromNumber;
+}
 /**
  * @category Option utils
  * @since 1.0.0
@@ -2501,7 +2600,7 @@ export type OptionEncoded<I> = {
  * @category api interface
  * @since 1.0.0
  */
-export interface OptionFromSelf<Value extends Schema.Any> extends Annotable<OptionFromSelf<Value>, option_.Option<Schema.Type<Value>>, option_.Option<Schema.Encoded<Value>>, Schema.Context<Value>> {
+export interface OptionFromSelf<Value extends Schema.Any> extends AnnotableClass<OptionFromSelf<Value>, option_.Option<Schema.Type<Value>>, option_.Option<Schema.Encoded<Value>>, Schema.Context<Value>> {
 }
 /**
  * @category Option transformations
@@ -2512,7 +2611,7 @@ export declare const OptionFromSelf: <Value extends Schema.Any>(value: Value) =>
  * @category api interface
  * @since 1.0.0
  */
-export interface Option<Value extends Schema.Any> extends Annotable<Option<Value>, option_.Option<Schema.Type<Value>>, OptionEncoded<Schema.Encoded<Value>>, Schema.Context<Value>> {
+export interface Option<Value extends Schema.Any> extends AnnotableClass<Option<Value>, option_.Option<Schema.Type<Value>>, OptionEncoded<Schema.Encoded<Value>>, Schema.Context<Value>> {
 }
 /**
  * @category Option transformations
@@ -2523,7 +2622,7 @@ export declare const Option: <Value extends Schema.Any>(value: Value) => Option<
  * @category api interface
  * @since 1.0.0
  */
-export interface OptionFromNullOr<Value extends Schema.Any> extends Annotable<OptionFromNullOr<Value>, option_.Option<Schema.Type<Value>>, Schema.Encoded<Value> | null, Schema.Context<Value>> {
+export interface OptionFromNullOr<Value extends Schema.Any> extends AnnotableClass<OptionFromNullOr<Value>, option_.Option<Schema.Type<Value>>, Schema.Encoded<Value> | null, Schema.Context<Value>> {
 }
 /**
  * @category Option transformations
@@ -2534,7 +2633,7 @@ export declare const OptionFromNullOr: <Value extends Schema.Any>(value: Value)
  * @category api interface
  * @since 1.0.0
  */
-export interface OptionFromNullishOr<Value extends Schema.Any> extends Annotable<OptionFromNullishOr<Value>, option_.Option<Schema.Type<Value>>, Schema.Encoded<Value> | null | undefined, Schema.Context<Value>> {
+export interface OptionFromNullishOr<Value extends Schema.Any> extends AnnotableClass<OptionFromNullishOr<Value>, option_.Option<Schema.Type<Value>>, Schema.Encoded<Value> | null | undefined, Schema.Context<Value>> {
 }
 /**
  * @category Option transformations
@@ -2545,7 +2644,7 @@ export declare const OptionFromNullishOr: <Value extends Schema.Any>(value: Valu
  * @category api interface
  * @since 1.0.0
  */
-export interface OptionFromUndefinedOr<Value extends Schema.Any> extends Annotable<OptionFromUndefinedOr<Value>, option_.Option<Schema.Type<Value>>, Schema.Encoded<Value> | undefined, Schema.Context<Value>> {
+export interface OptionFromUndefinedOr<Value extends Schema.Any> extends AnnotableClass<OptionFromUndefinedOr<Value>, option_.Option<Schema.Type<Value>>, Schema.Encoded<Value> | undefined, Schema.Context<Value>> {
 }
 /**
  * @category Option transformations
@@ -2577,7 +2676,7 @@ export type EitherEncoded<IR, IL> = RightEncoded<IR> | LeftEncoded<IL>;
  * @category api interface
  * @since 1.0.0
  */
-export interface EitherFromSelf<R extends Schema.Any, L extends Schema.Any> extends Annotable<EitherFromSelf<R, L>, either_.Either<Schema.Type<R>, Schema.Type<L>>, either_.Either<Schema.Encoded<R>, Schema.Encoded<L>>, Schema.Context<R> | Schema.Context<L>> {
+export interface EitherFromSelf<R extends Schema.Any, L extends Schema.Any> extends AnnotableClass<EitherFromSelf<R, L>, either_.Either<Schema.Type<R>, Schema.Type<L>>, either_.Either<Schema.Encoded<R>, Schema.Encoded<L>>, Schema.Context<R> | Schema.Context<L>> {
 }
 /**
  * @category Either transformations
@@ -2591,7 +2690,7 @@ export declare const EitherFromSelf: <R extends Schema.Any, L extends Schema.Any
  * @category api interface
  * @since 1.0.0
  */
-export interface Either<R extends Schema.Any, L extends Schema.Any> extends Annotable<Either<R, L>, either_.Either<Schema.Type<R>, Schema.Type<L>>, EitherEncoded<Schema.Encoded<R>, Schema.Encoded<L>>, Schema.Context<R> | Schema.Context<L>> {
+export interface Either<R extends Schema.Any, L extends Schema.Any> extends AnnotableClass<Either<R, L>, either_.Either<Schema.Type<R>, Schema.Type<L>>, EitherEncoded<Schema.Encoded<R>, Schema.Encoded<L>>, Schema.Context<R> | Schema.Context<L>> {
 }
 /**
  * @category Either transformations
@@ -2605,7 +2704,7 @@ export declare const Either: <R extends Schema.Any, L extends Schema.Any>({ left
  * @category api interface
  * @since 1.0.0
  */
-export interface EitherFromUnion<R extends Schema.Any, L extends Schema.Any> extends Annotable<EitherFromUnion<R, L>, either_.Either<Schema.Type<R>, Schema.Type<L>>, Schema.Encoded<R> | Schema.Encoded<L>, Schema.Context<R> | Schema.Context<L>> {
+export interface EitherFromUnion<R extends Schema.Any, L extends Schema.Any> extends AnnotableClass<EitherFromUnion<R, L>, either_.Either<Schema.Type<R>, Schema.Type<L>>, Schema.Encoded<R> | Schema.Encoded<L>, Schema.Context<R> | Schema.Context<L>> {
 }
 /**
  * @example
@@ -2625,7 +2724,7 @@ export declare const EitherFromUnion: <R extends Schema.Any, L extends Schema.An
  * @category api interface
  * @since 1.0.0
  */
-export interface ReadonlyMapFromSelf<K extends Schema.Any, V extends Schema.Any> extends Annotable<ReadonlyMapFromSelf<K, V>, ReadonlyMap<Schema.Type<K>, Schema.Type<V>>, ReadonlyMap<Schema.Encoded<K>, Schema.Encoded<V>>, Schema.Context<K> | Schema.Context<V>> {
+export interface ReadonlyMapFromSelf<K extends Schema.Any, V extends Schema.Any> extends AnnotableClass<ReadonlyMapFromSelf<K, V>, ReadonlyMap<Schema.Type<K>, Schema.Type<V>>, ReadonlyMap<Schema.Encoded<K>, Schema.Encoded<V>>, Schema.Context<K> | Schema.Context<V>> {
 }
 /**
  * @category ReadonlyMap
@@ -2639,7 +2738,7 @@ export declare const ReadonlyMapFromSelf: <K extends Schema.Any, V extends Schem
  * @category api interface
  * @since 1.0.0
  */
-export interface MapFromSelf<K extends Schema.Any, V extends Schema.Any> extends Annotable<MapFromSelf<K, V>, Map<Schema.Type<K>, Schema.Type<V>>, ReadonlyMap<Schema.Encoded<K>, Schema.Encoded<V>>, Schema.Context<K> | Schema.Context<V>> {
+export interface MapFromSelf<K extends Schema.Any, V extends Schema.Any> extends AnnotableClass<MapFromSelf<K, V>, Map<Schema.Type<K>, Schema.Type<V>>, ReadonlyMap<Schema.Encoded<K>, Schema.Encoded<V>>, Schema.Context<K> | Schema.Context<V>> {
 }
 /**
  * @category Map
@@ -2653,7 +2752,7 @@ export declare const MapFromSelf: <K extends Schema.Any, V extends Schema.Any>({
  * @category api interface
  * @since 1.0.0
  */
-export interface $ReadonlyMap<K extends Schema.Any, V extends Schema.Any> extends Annotable<$ReadonlyMap<K, V>, ReadonlyMap<Schema.Type<K>, Schema.Type<V>>, ReadonlyArray<readonly [Schema.Encoded<K>, Schema.Encoded<V>]>, Schema.Context<K> | Schema.Context<V>> {
+export interface ReadonlyMap$<K extends Schema.Any, V extends Schema.Any> extends AnnotableClass<ReadonlyMap$<K, V>, ReadonlyMap<Schema.Type<K>, Schema.Type<V>>, ReadonlyArray<readonly [Schema.Encoded<K>, Schema.Encoded<V>]>, Schema.Context<K> | Schema.Context<V>> {
 }
 /**
  * @category ReadonlyMap transformations
@@ -2662,17 +2761,17 @@ export interface $ReadonlyMap<K extends Schema.Any, V extends Schema.Any> extend
 export declare const ReadonlyMap: <K extends Schema.Any, V extends Schema.Any>({ key, value }: {
     readonly key: K;
     readonly value: V;
-}) => $ReadonlyMap<K, V>;
+}) => ReadonlyMap$<K, V>;
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface $Map<K extends Schema.Any, V extends Schema.Any> extends Annotable<$Map<K, V>, Map<Schema.Type<K>, Schema.Type<V>>, ReadonlyArray<readonly [Schema.Encoded<K>, Schema.Encoded<V>]>, Schema.Context<K> | Schema.Context<V>> {
+export interface Map$<K extends Schema.Any, V extends Schema.Any> extends AnnotableClass<Map$<K, V>, Map<Schema.Type<K>, Schema.Type<V>>, ReadonlyArray<readonly [Schema.Encoded<K>, Schema.Encoded<V>]>, Schema.Context<K> | Schema.Context<V>> {
 }
 declare const map: <K extends Schema.Any, V extends Schema.Any>({ key, value }: {
     readonly key: K;
     readonly value: V;
-}) => $Map<K, V>;
+}) => Map$<K, V>;
 export { 
 /**
  * @category Map transformations
@@ -2683,7 +2782,7 @@ map as Map };
  * @category api interface
  * @since 1.0.0
  */
-export interface ReadonlySetFromSelf<Value extends Schema.Any> extends Annotable<ReadonlySetFromSelf<Value>, ReadonlySet<Schema.Type<Value>>, ReadonlySet<Schema.Encoded<Value>>, Schema.Context<Value>> {
+export interface ReadonlySetFromSelf<Value extends Schema.Any> extends AnnotableClass<ReadonlySetFromSelf<Value>, ReadonlySet<Schema.Type<Value>>, ReadonlySet<Schema.Encoded<Value>>, Schema.Context<Value>> {
 }
 /**
  * @category ReadonlySet
@@ -2694,7 +2793,7 @@ export declare const ReadonlySetFromSelf: <Value extends Schema.Any>(value: Valu
  * @category api interface
  * @since 1.0.0
  */
-export interface SetFromSelf<Value extends Schema.Any> extends Annotable<SetFromSelf<Value>, Set<Schema.Type<Value>>, ReadonlySet<Schema.Encoded<Value>>, Schema.Context<Value>> {
+export interface SetFromSelf<Value extends Schema.Any> extends AnnotableClass<SetFromSelf<Value>, Set<Schema.Type<Value>>, ReadonlySet<Schema.Encoded<Value>>, Schema.Context<Value>> {
 }
 /**
  * @category Set
@@ -2705,54 +2804,43 @@ export declare const SetFromSelf: <Value extends Schema.Any>(value: Value) => Se
  * @category api interface
  * @since 1.0.0
  */
-export interface $ReadonlySet<Value extends Schema.Any> extends Annotable<$ReadonlySet<Value>, ReadonlySet<Schema.Type<Value>>, ReadonlyArray<Schema.Encoded<Value>>, Schema.Context<Value>> {
+export interface ReadonlySet$<Value extends Schema.Any> extends AnnotableClass<ReadonlySet$<Value>, ReadonlySet<Schema.Type<Value>>, ReadonlyArray<Schema.Encoded<Value>>, Schema.Context<Value>> {
 }
 /**
  * @category ReadonlySet transformations
  * @since 1.0.0
  */
-export declare const ReadonlySet: <Value extends Schema.Any>(value: Value) => $ReadonlySet<Value>;
+export declare const ReadonlySet: <Value extends Schema.Any>(value: Value) => ReadonlySet$<Value>;
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface $Set<Value extends Schema.Any> extends Annotable<$Set<Value>, Set<Schema.Type<Value>>, ReadonlyArray<Schema.Encoded<Value>>, Schema.Context<Value>> {
+export interface Set$<Value extends Schema.Any> extends AnnotableClass<Set$<Value>, Set<Schema.Type<Value>>, ReadonlyArray<Schema.Encoded<Value>>, Schema.Context<Value>> {
 }
-declare const set: <Value extends Schema.Any>(value: Value) => $Set<Value>;
+declare const set: <Value extends Schema.Any>(value: Value) => Set$<Value>;
 export { 
 /**
  * @category Set transformations
  * @since 1.0.0
  */
 set as Set };
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface BigDecimalFromSelf extends Annotable<BigDecimalFromSelf, bigDecimal_.BigDecimal> {
-}
+declare const BigDecimalFromSelf_base: SchemaClass<bigDecimal_.BigDecimal, bigDecimal_.BigDecimal, never>;
 /**
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export declare const BigDecimalFromSelf: BigDecimalFromSelf;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface BigDecimal extends Annotable<BigDecimal, bigDecimal_.BigDecimal, string> {
+export declare class BigDecimalFromSelf extends BigDecimalFromSelf_base {
+    static annotations: (annotations: Annotations.Schema<bigDecimal_.BigDecimal>) => typeof BigDecimalFromSelf;
 }
+declare const BigDecimal_base: transformOrFail<typeof String$, typeof BigDecimalFromSelf, never>;
 /**
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-export declare const BigDecimal: BigDecimal;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface BigDecimalFromNumber extends Annotable<BigDecimalFromNumber, bigDecimal_.BigDecimal, number> {
+export declare class BigDecimal extends BigDecimal_base {
+    static annotations: (annotations: Annotations.Schema<bigDecimal_.BigDecimal>) => typeof BigDecimal;
 }
+declare const BigDecimalFromNumber_base: transformOrFail<typeof Number$, typeof BigDecimalFromSelf, never>;
 /**
  * A schema that transforms a `number` into a `BigDecimal`.
  * When encoding, this Schema will produce incorrect results if the BigDecimal exceeds the 64-bit range of a number.
@@ -2760,7 +2848,9 @@ export interface BigDecimalFromNumber extends Annotable<BigDecimalFromNumber, bi
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-export declare const BigDecimalFromNumber: BigDecimalFromNumber;
+export declare class BigDecimalFromNumber extends BigDecimalFromNumber_base {
+    static annotations: (annotations: Annotations.Schema<bigDecimal_.BigDecimal>) => typeof BigDecimalFromNumber;
+}
 /**
  * @category type id
  * @since 1.0.0
@@ -2770,7 +2860,7 @@ export declare const GreaterThanBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const greaterThanBigDecimal: <A extends bigDecimal_.BigDecimal>(min: bigDecimal_.BigDecimal, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const greaterThanBigDecimal: <A extends bigDecimal_.BigDecimal>(min: bigDecimal_.BigDecimal, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2780,7 +2870,7 @@ export declare const GreaterThanOrEqualToBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const greaterThanOrEqualToBigDecimal: <A extends bigDecimal_.BigDecimal>(min: bigDecimal_.BigDecimal, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const greaterThanOrEqualToBigDecimal: <A extends bigDecimal_.BigDecimal>(min: bigDecimal_.BigDecimal, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2790,7 +2880,7 @@ export declare const LessThanBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const lessThanBigDecimal: <A extends bigDecimal_.BigDecimal>(max: bigDecimal_.BigDecimal, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lessThanBigDecimal: <A extends bigDecimal_.BigDecimal>(max: bigDecimal_.BigDecimal, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2800,7 +2890,7 @@ export declare const LessThanOrEqualToBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const lessThanOrEqualToBigDecimal: <A extends bigDecimal_.BigDecimal>(max: bigDecimal_.BigDecimal, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const lessThanOrEqualToBigDecimal: <A extends bigDecimal_.BigDecimal>(max: bigDecimal_.BigDecimal, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2810,12 +2900,12 @@ export declare const PositiveBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const positiveBigDecimal: <A extends bigDecimal_.BigDecimal>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const positiveBigDecimal: <A extends bigDecimal_.BigDecimal>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export declare const PositiveBigDecimalFromSelf: Schema<bigDecimal_.BigDecimal, bigDecimal_.BigDecimal, never>;
+export declare const PositiveBigDecimalFromSelf: filter<Schema<bigDecimal_.BigDecimal>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2825,12 +2915,12 @@ export declare const NonNegativeBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const nonNegativeBigDecimal: <A extends bigDecimal_.BigDecimal>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const nonNegativeBigDecimal: <A extends bigDecimal_.BigDecimal>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export declare const NonNegativeBigDecimalFromSelf: Schema<bigDecimal_.BigDecimal, bigDecimal_.BigDecimal, never>;
+export declare const NonNegativeBigDecimalFromSelf: filter<Schema<bigDecimal_.BigDecimal>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2840,12 +2930,12 @@ export declare const NegativeBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const negativeBigDecimal: <A extends bigDecimal_.BigDecimal>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const negativeBigDecimal: <A extends bigDecimal_.BigDecimal>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export declare const NegativeBigDecimalFromSelf: Schema<bigDecimal_.BigDecimal, bigDecimal_.BigDecimal, never>;
+export declare const NegativeBigDecimalFromSelf: filter<Schema<bigDecimal_.BigDecimal>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2855,12 +2945,12 @@ export declare const NonPositiveBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const nonPositiveBigDecimal: <A extends bigDecimal_.BigDecimal>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const nonPositiveBigDecimal: <A extends bigDecimal_.BigDecimal>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export declare const NonPositiveBigDecimalFromSelf: Schema<bigDecimal_.BigDecimal, bigDecimal_.BigDecimal, never>;
+export declare const NonPositiveBigDecimalFromSelf: filter<Schema<bigDecimal_.BigDecimal>>;
 /**
  * @category type id
  * @since 1.0.0
@@ -2870,19 +2960,19 @@ export declare const BetweenBigDecimalTypeId: unique symbol;
  * @category BigDecimal filters
  * @since 1.0.0
  */
-export declare const betweenBigDecimal: <A extends bigDecimal_.BigDecimal>(minimum: bigDecimal_.BigDecimal, maximum: bigDecimal_.BigDecimal, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const betweenBigDecimal: <A extends bigDecimal_.BigDecimal>(minimum: bigDecimal_.BigDecimal, maximum: bigDecimal_.BigDecimal, annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>>;
 /**
  * Clamps a `BigDecimal` between a minimum and a maximum value.
  *
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-export declare const clampBigDecimal: (minimum: bigDecimal_.BigDecimal, maximum: bigDecimal_.BigDecimal) => <R, I, A extends bigDecimal_.BigDecimal>(self: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const clampBigDecimal: (minimum: bigDecimal_.BigDecimal, maximum: bigDecimal_.BigDecimal) => <A extends bigDecimal_.BigDecimal, I, R>(self: Schema<A, I, R>) => transform<Schema<A, I, R>, filter<Schema<A>>>;
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface ChunkFromSelf<Value extends Schema.Any> extends Annotable<ChunkFromSelf<Value>, chunk_.Chunk<Schema.Type<Value>>, chunk_.Chunk<Schema.Encoded<Value>>, Schema.Context<Value>> {
+export interface ChunkFromSelf<Value extends Schema.Any> extends AnnotableClass<ChunkFromSelf<Value>, chunk_.Chunk<Schema.Type<Value>>, chunk_.Chunk<Schema.Encoded<Value>>, Schema.Context<Value>> {
 }
 /**
  * @category Chunk transformations
@@ -2893,7 +2983,7 @@ export declare const ChunkFromSelf: <Value extends Schema.Any>(value: Value) =>
  * @category api interface
  * @since 1.0.0
  */
-export interface Chunk<Value extends Schema.Any> extends Annotable<Chunk<Value>, chunk_.Chunk<Schema.Type<Value>>, ReadonlyArray<Schema.Encoded<Value>>, Schema.Context<Value>> {
+export interface Chunk<Value extends Schema.Any> extends AnnotableClass<Chunk<Value>, chunk_.Chunk<Schema.Type<Value>>, ReadonlyArray<Schema.Encoded<Value>>, Schema.Context<Value>> {
 }
 /**
  * @category Chunk transformations
@@ -2904,65 +2994,80 @@ export declare const Chunk: <Value extends Schema.Any>(value: Value) => Chunk<Va
  * @category Data transformations
  * @since 1.0.0
  */
-export declare const DataFromSelf: <R, I extends readonly any[] | Readonly<Record<string, any>>, A extends readonly any[] | Readonly<Record<string, any>>>(item: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const DataFromSelf: <R, I extends readonly any[] | Readonly<Record<string, any>>, A extends readonly any[] | Readonly<Record<string, any>>>(item: Schema<A, I, R>) => SchemaClass<A, I, R>;
 /**
  * @category Data transformations
  * @since 1.0.0
  */
-export declare const Data: <R, I extends readonly any[] | Readonly<Record<string, any>>, A extends readonly any[] | Readonly<Record<string, any>>>(item: Schema<A, I, R>) => Schema<A, I, R>;
+export declare const Data: <R, I extends readonly any[] | Readonly<Record<string, any>>, A extends readonly any[] | Readonly<Record<string, any>>>(item: Schema<A, I, R>) => SchemaClass<A, I, R>;
 type MissingSelfGeneric<Usage extends string, Params extends string = ""> = `Missing \`Self\` generic - use \`class Self extends ${Usage}<Self>()(${Params}{ ... })\``;
+type RequiredKeys<T> = {
+    [K in keyof T]-?: {} extends Pick<T, K> ? never : K;
+}[keyof T];
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface Class<Self, Fields extends Struct.Fields, A, I, R, C, Inherited, Proto> extends Schema<Self, I, R> {
-    new (props: keyof C extends never ? void | {} : C, disableValidation?: boolean | undefined): A & Omit<Inherited, keyof A> & Proto;
+export interface Class<Self, Fields extends Struct.Fields, I, R, C, Inherited, Proto> extends Schema<Self, Types.Simplify<I>, R> {
+    new (props: RequiredKeys<C> extends never ? void | {} : Types.Simplify<C>, disableValidation?: boolean | undefined): Struct.Type<Fields> & Omit<Inherited, keyof Fields> & Proto;
+    annotations(annotations: Annotations.Schema<Self>): SchemaClass<Self, Types.Simplify<I>, R>;
     readonly fields: {
         readonly [K in keyof Fields]: Fields[K];
     };
     readonly identifier: string;
-    readonly extend: <Extended = never>(identifier: string) => <newFields extends Struct.Fields>(fields: newFields, annotations?: Annotations.Schema<Extended>) => [Extended] extends [never] ? MissingSelfGeneric<"Base.extend"> : Class<Extended, Fields & newFields, Types.Simplify<A & Struct.Type<newFields>>, Types.Simplify<I & Struct.Encoded<newFields>>, R | Struct.Context<newFields>, Types.Simplify<C & Struct.Type<newFields>>, Self, Proto>;
-    readonly transformOrFail: <Transformed = never>(identifier: string) => <newFields extends Struct.Fields, R2, R3>(fields: newFields, options: {
-        readonly decode: (input: A, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<Types.Simplify<A & Struct.Type<newFields>>, ParseResult.ParseIssue, R2>;
-        readonly encode: (input: Types.Simplify<A & Struct.Type<newFields>>, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<A, ParseResult.ParseIssue, R3>;
-    }, annotations?: Annotations.Schema<Transformed>) => [Transformed] extends [never] ? MissingSelfGeneric<"Base.transform"> : Class<Transformed, Fields & newFields, Types.Simplify<A & Struct.Type<newFields>>, I, R | Struct.Context<newFields> | R2 | R3, Types.Simplify<C & Struct.Type<newFields>>, Self, Proto>;
-    readonly transformOrFailFrom: <Transformed = never>(identifier: string) => <newFields extends Struct.Fields, R2, R3>(fields: newFields, options: {
-        readonly decode: (input: I, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<Types.Simplify<I & Struct.Encoded<newFields>>, ParseResult.ParseIssue, R2>;
+    extend<Extended = never>(identifier?: string | undefined): <newFields extends Struct.Fields>(fields: newFields | HasFields<newFields>, annotations?: Annotations.Schema<Extended>) => [Extended] extends [never] ? MissingSelfGeneric<"Base.extend"> : Class<Extended, Fields & newFields, I & Struct.Encoded<newFields>, R | Struct.Context<newFields>, C & Struct.Constructor<newFields>, Self, Proto>;
+    transformOrFail<Transformed = never>(identifier?: string | undefined): <newFields extends Struct.Fields, R2, R3>(fields: newFields, options: {
+        readonly decode: (input: Types.Simplify<Struct.Type<Fields>>, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<Types.Simplify<Struct.Type<Fields & newFields>>, ParseResult.ParseIssue, R2>;
+        readonly encode: (input: Types.Simplify<Struct.Type<Fields & newFields>>, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<Struct.Type<Fields>, ParseResult.ParseIssue, R3>;
+    }, annotations?: Annotations.Schema<Transformed>) => [Transformed] extends [never] ? MissingSelfGeneric<"Base.transform"> : Class<Transformed, Fields & newFields, I, R | Struct.Context<newFields> | R2 | R3, C & Struct.Constructor<newFields>, Self, Proto>;
+    transformOrFailFrom<Transformed = never>(identifier?: string | undefined): <newFields extends Struct.Fields, R2, R3>(fields: newFields, options: {
+        readonly decode: (input: Types.Simplify<I>, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<Types.Simplify<I & Struct.Encoded<newFields>>, ParseResult.ParseIssue, R2>;
         readonly encode: (input: Types.Simplify<I & Struct.Encoded<newFields>>, options: ParseOptions, ast: AST.Transformation) => Effect.Effect<I, ParseResult.ParseIssue, R3>;
-    }, annotations?: Annotations.Schema<Transformed>) => [Transformed] extends [never] ? MissingSelfGeneric<"Base.transformFrom"> : Class<Transformed, Fields & newFields, Types.Simplify<A & Struct.Type<newFields>>, I, R | Struct.Context<newFields> | R2 | R3, Types.Simplify<C & Struct.Type<newFields>>, Self, Proto>;
+    }, annotations?: Annotations.Schema<Transformed>) => [Transformed] extends [never] ? MissingSelfGeneric<"Base.transformFrom"> : Class<Transformed, Fields & newFields, I, R | Struct.Context<newFields> | R2 | R3, C & Struct.Constructor<newFields>, Self, Proto>;
 }
+type HasFields<Fields extends Struct.Fields> = {
+    readonly fields: Fields;
+} | {
+    readonly from: HasFields<Fields>;
+};
 /**
  * @category classes
  * @since 1.0.0
  */
-export declare const Class: <Self = never>(identifier: string) => <Fields extends Struct.Fields>(fields: Fields, annotations?: Annotations.Schema<Self>) => [Self] extends [never] ? MissingSelfGeneric<"Class"> : Class<Self, Fields, Types.Simplify<Struct.Type<Fields>>, Types.Simplify<Struct.Encoded<Fields>>, Struct.Context<Fields>, Types.Simplify<Struct.Type<Fields>>, {}, {}>;
+export declare const Class: <Self = never>(identifier?: string | undefined) => <Fields extends Struct.Fields>(fieldsOr: Fields | HasFields<Fields>, annotations?: Annotations.Schema<Self>) => [Self] extends [never] ? MissingSelfGeneric<"Class"> : Class<Self, Fields, Struct.Encoded<Fields>, Struct.Context<Fields>, Struct.Constructor<Fields>, {}, {}>;
 /**
- * @category classes
+ * @category api interface
  * @since 1.0.0
  */
-export declare const TaggedClass: <Self = never>(identifier?: string) => <Tag extends string, Fields extends Struct.Fields>(tag: Tag, fields: Fields, annotations?: Annotations.Schema<Self>) => [Self] extends [never] ? MissingSelfGeneric<"TaggedClass", `"Tag", `> : Class<Self, {
-    readonly _tag: Literal<[Tag]>;
-} & Fields, Types.Simplify<{
+export interface TaggedClass<Self, Tag extends string, Fields extends Struct.Fields> extends Class<Self, Fields, Struct.Encoded<Fields>, Struct.Context<Fields>, Struct.Constructor<Omit<Fields, "_tag">>, {}, {}> {
     readonly _tag: Tag;
-} & Struct.Type<Fields>>, Types.Simplify<{
-    readonly _tag: Tag;
-} & Struct.Encoded<Fields>>, Struct.Context<Fields>, Types.Simplify<Struct.Type<Fields>>, {}, {}>;
+}
 /**
  * @category classes
  * @since 1.0.0
  */
-export declare const TaggedError: <Self = never>(identifier?: string) => <Tag extends string, Fields extends Struct.Fields>(tag: Tag, fields: Fields, annotations?: Annotations.Schema<Self>) => [Self] extends [never] ? MissingSelfGeneric<"TaggedError", `"Tag", `> : Class<Self, {
-    readonly _tag: Literal<[Tag]>;
-} & Fields, Types.Simplify<{
-    readonly _tag: Tag;
-} & Struct.Type<Fields>>, Types.Simplify<{
+export declare const TaggedClass: <Self = never>(identifier?: string) => <Tag extends string, Fields extends Struct.Fields>(tag: Tag, fieldsOr: Fields | HasFields<Fields>, annotations?: Annotations.Schema<Self>) => [Self] extends [never] ? MissingSelfGeneric<"TaggedClass", `"Tag", `> : TaggedClass<Self, Tag, {
+    readonly _tag: PropertySignature<":", Tag, never, ":", Tag, true, never>;
+} & Fields>;
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface TaggedErrorClass<Self, Tag extends string, Fields extends Struct.Fields> extends Class<Self, Fields, Struct.Encoded<Fields>, Struct.Context<Fields>, Struct.Constructor<Omit<Fields, "_tag">>, {}, cause_.YieldableError> {
     readonly _tag: Tag;
-} & Struct.Encoded<Fields>>, Struct.Context<Fields>, Types.Simplify<Struct.Type<Fields>>, {}, cause_.YieldableError>;
+}
 /**
  * @category classes
  * @since 1.0.0
  */
-export interface TaggedRequest<Tag extends string, S, SI, SR, A, AI, E, EI, RR> extends Request.Request<A, E>, Serializable.SerializableWithResult<S, SI, SR, A, AI, E, EI, RR> {
+export declare const TaggedError: <Self = never>(identifier?: string) => <Tag extends string, Fields extends Struct.Fields>(tag: Tag, fieldsOr: Fields | HasFields<Fields>, annotations?: Annotations.Schema<Self>) => [Self] extends [never] ? MissingSelfGeneric<"TaggedError", `"Tag", `> : TaggedErrorClass<Self, Tag, {
+    readonly _tag: PropertySignature<":", Tag, never, ":", Tag, true, never>;
+} & Fields>;
+/**
+ * @category classes
+ * @since 1.0.0
+ */
+export interface TaggedRequest<Tag extends string, Self, FieldsI, FieldsR, SuccessA, SuccessI, FailureA, FailureI, SuccessAndFailureR> extends Request.Request<SuccessA, FailureA>, Serializable.SerializableWithResult<Self, FieldsI, FieldsR, SuccessA, SuccessI, FailureA, FailureI, SuccessAndFailureR> {
     readonly _tag: Tag;
 }
 /**
@@ -2977,18 +3082,19 @@ export declare namespace TaggedRequest {
     type Any = TaggedRequest<string, any, any, any, any, any, any, any, any> | TaggedRequest<string, any, any, any, any, any, never, never, any>;
 }
 /**
- * @category classes
+ * @category api interface
  * @since 1.0.0
  */
-export declare const TaggedRequest: <Self = never>(identifier?: string) => <Tag extends string, Fields extends Struct.Fields, EA, EI, ER, AA, AI, AR>(tag: Tag, Failure: Schema<EA, EI, ER>, Success: Schema<AA, AI, AR>, fields: Fields, annotations?: Annotations.Schema<Self>) => [Self] extends [never] ? MissingSelfGeneric<"TaggedRequest", `"Tag", SuccessSchema, FailureSchema, `> : Class<Self, {
-    readonly _tag: Literal<[Tag]>;
-} & Fields, Types.Simplify<{
-    readonly _tag: Tag;
-} & Struct.Type<Fields>>, Types.Simplify<{
+export interface TaggedRequestClass<Self, Tag extends string, Fields extends Struct.Fields, Failure extends Schema.All, Success extends Schema.All> extends Class<Self, Fields, Struct.Encoded<Fields>, Struct.Context<Fields>, Struct.Constructor<Omit<Fields, "_tag">>, TaggedRequest<Tag, Self, Struct.Encoded<Fields>, Struct.Context<Fields>, Schema.Type<Success>, Schema.Encoded<Success>, Schema.Type<Failure>, Schema.Encoded<Failure>, Schema.Context<Success> | Schema.Context<Failure>>, {}> {
     readonly _tag: Tag;
-} & Struct.Encoded<Fields>>, Struct.Context<Fields>, Types.Simplify<Struct.Type<Fields>>, TaggedRequest<Tag, Self, {
-    readonly _tag: Tag;
-} & Struct.Encoded<Fields>, Struct.Context<Fields>, AA, AI, EA, EI, ER | AR>, {}>;
+}
+/**
+ * @category classes
+ * @since 1.0.0
+ */
+export declare const TaggedRequest: <Self = never>(identifier?: string) => <Tag extends string, Fields extends Struct.Fields, Failure extends Schema.All, Success extends Schema.All>(tag: Tag, Failure: Failure, Success: Success, fields: Fields, annotations?: Annotations.Schema<Self>) => [Self] extends [never] ? "Missing `Self` generic - use `class Self extends TaggedRequest<Self>()(\"Tag\", SuccessSchema, FailureSchema, { ... })`" : TaggedRequestClass<Self, Tag, {
+    readonly _tag: PropertySignature<":", Tag, never, ":", Tag, true, never>;
+} & Fields, Failure, Success>;
 /**
  * @category FiberId
  * @since 1.0.0
@@ -3004,28 +3110,22 @@ export type FiberIdEncoded = {
     readonly id: number;
     readonly startTimeMillis: number;
 };
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface FiberIdFromSelf extends Annotable<FiberIdFromSelf, fiberId_.FiberId> {
-}
+declare const FiberIdFromSelf_base: SchemaClass<fiberId_.FiberId, fiberId_.FiberId, never>;
 /**
  * @category FiberId constructors
  * @since 1.0.0
  */
-export declare const FiberIdFromSelf: FiberIdFromSelf;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface FiberId extends Annotable<FiberId, fiberId_.FiberId, FiberIdEncoded> {
+export declare class FiberIdFromSelf extends FiberIdFromSelf_base {
+    static annotations: (annotations: Annotations.Schema<fiberId_.FiberId>) => typeof FiberIdFromSelf;
 }
+declare const FiberId_base: transform<Schema<FiberIdEncoded, FiberIdEncoded, never>, typeof FiberIdFromSelf>;
 /**
  * @category FiberId transformations
  * @since 1.0.0
  */
-export declare const FiberId: FiberId;
+export declare class FiberId extends FiberId_base {
+    static annotations: (annotations: Annotations.Schema<fiberId_.FiberId>) => typeof FiberId;
+}
 /**
  * @category Cause utils
  * @since 1.0.0
@@ -3054,7 +3154,7 @@ export type CauseEncoded<E> = {
  * @category api interface
  * @since 1.0.0
  */
-export interface CauseFromSelf<E extends Schema.Any, DR> extends Annotable<CauseFromSelf<E, DR>, cause_.Cause<Schema.Type<E>>, cause_.Cause<Schema.Encoded<E>>, Schema.Context<E> | DR> {
+export interface CauseFromSelf<E extends Schema.Any, DR> extends AnnotableClass<CauseFromSelf<E, DR>, cause_.Cause<Schema.Type<E>>, cause_.Cause<Schema.Encoded<E>>, Schema.Context<E> | DR> {
 }
 /**
  * @category Cause transformations
@@ -3068,12 +3168,12 @@ export declare const CauseFromSelf: <E extends Schema.Any, DR = never>({ defect,
  * @category Cause transformations
  * @since 1.0.0
  */
-export declare const CauseDefectUnknown: Unknown;
+export declare const CauseDefectUnknown: transform<typeof Unknown, typeof Unknown>;
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface Cause<E extends Schema.All, DR> extends Annotable<Cause<E, DR>, cause_.Cause<Schema.Type<E>>, CauseEncoded<Schema.Encoded<E>>, Schema.Context<E> | DR> {
+export interface Cause<E extends Schema.All, DR> extends AnnotableClass<Cause<E, DR>, cause_.Cause<Schema.Type<E>>, CauseEncoded<Schema.Encoded<E>>, Schema.Context<E> | DR> {
 }
 /**
  * @category Cause transformations
@@ -3098,7 +3198,7 @@ export type ExitEncoded<A, E> = {
  * @category api interface
  * @since 1.0.0
  */
-export interface ExitFromSelf<A extends Schema.Any, E extends Schema.Any, DR> extends Annotable<ExitFromSelf<A, E, DR>, exit_.Exit<Schema.Type<A>, Schema.Type<E>>, exit_.Exit<Schema.Encoded<A>, Schema.Encoded<E>>, Schema.Context<A> | Schema.Context<E> | DR> {
+export interface ExitFromSelf<A extends Schema.Any, E extends Schema.Any, DR> extends AnnotableClass<ExitFromSelf<A, E, DR>, exit_.Exit<Schema.Type<A>, Schema.Type<E>>, exit_.Exit<Schema.Encoded<A>, Schema.Encoded<E>>, Schema.Context<A> | Schema.Context<E> | DR> {
 }
 /**
  * @category Exit transformations
@@ -3113,7 +3213,7 @@ export declare const ExitFromSelf: <A extends Schema.Any, E extends Schema.Any,
  * @category api interface
  * @since 1.0.0
  */
-export interface Exit<A extends Schema.All, E extends Schema.All, DR> extends Annotable<Exit<A, E, DR>, exit_.Exit<Schema.Type<A>, Schema.Type<E>>, ExitEncoded<Schema.Encoded<A>, Schema.Encoded<E>>, Schema.Context<A> | Schema.Context<E> | DR> {
+export interface Exit<A extends Schema.All, E extends Schema.All, DR> extends AnnotableClass<Exit<A, E, DR>, exit_.Exit<Schema.Type<A>, Schema.Type<E>>, ExitEncoded<Schema.Encoded<A>, Schema.Encoded<E>>, Schema.Context<A> | Schema.Context<E> | DR> {
 }
 /**
  * @category Exit transformations
@@ -3128,7 +3228,7 @@ export declare const Exit: <A extends Schema.All, E extends Schema.All, DR = nev
  * @category api interface
  * @since 1.0.0
  */
-export interface HashSetFromSelf<Value extends Schema.Any> extends Annotable<HashSetFromSelf<Value>, hashSet_.HashSet<Schema.Type<Value>>, hashSet_.HashSet<Schema.Encoded<Value>>, Schema.Context<Value>> {
+export interface HashSetFromSelf<Value extends Schema.Any> extends AnnotableClass<HashSetFromSelf<Value>, hashSet_.HashSet<Schema.Type<Value>>, hashSet_.HashSet<Schema.Encoded<Value>>, Schema.Context<Value>> {
 }
 /**
  * @category HashSet transformations
@@ -3139,7 +3239,7 @@ export declare const HashSetFromSelf: <Value extends Schema.Any>(value: Value) =
  * @category api interface
  * @since 1.0.0
  */
-export interface HashSet<Value extends Schema.Any> extends Annotable<HashSet<Value>, hashSet_.HashSet<Schema.Type<Value>>, ReadonlyArray<Schema.Encoded<Value>>, Schema.Context<Value>> {
+export interface HashSet<Value extends Schema.Any> extends AnnotableClass<HashSet<Value>, hashSet_.HashSet<Schema.Type<Value>>, ReadonlyArray<Schema.Encoded<Value>>, Schema.Context<Value>> {
 }
 /**
  * @category HashSet transformations
@@ -3150,7 +3250,7 @@ export declare const HashSet: <Value extends Schema.Any>(value: Value) => HashSe
  * @category api interface
  * @since 1.0.0
  */
-export interface HashMapFromSelf<K extends Schema.Any, V extends Schema.Any> extends Annotable<HashMapFromSelf<K, V>, hashMap_.HashMap<Schema.Type<K>, Schema.Type<V>>, hashMap_.HashMap<Schema.Encoded<K>, Schema.Encoded<V>>, Schema.Context<K> | Schema.Context<V>> {
+export interface HashMapFromSelf<K extends Schema.Any, V extends Schema.Any> extends AnnotableClass<HashMapFromSelf<K, V>, hashMap_.HashMap<Schema.Type<K>, Schema.Type<V>>, hashMap_.HashMap<Schema.Encoded<K>, Schema.Encoded<V>>, Schema.Context<K> | Schema.Context<V>> {
 }
 /**
  * @category HashMap transformations
@@ -3164,7 +3264,7 @@ export declare const HashMapFromSelf: <K extends Schema.Any, V extends Schema.An
  * @category api interface
  * @since 1.0.0
  */
-export interface HashMap<K extends Schema.Any, V extends Schema.Any> extends Annotable<HashMap<K, V>, hashMap_.HashMap<Schema.Type<K>, Schema.Type<V>>, ReadonlyArray<readonly [Schema.Encoded<K>, Schema.Encoded<V>]>, Schema.Context<K> | Schema.Context<V>> {
+export interface HashMap<K extends Schema.Any, V extends Schema.Any> extends AnnotableClass<HashMap<K, V>, hashMap_.HashMap<Schema.Type<K>, Schema.Type<V>>, ReadonlyArray<readonly [Schema.Encoded<K>, Schema.Encoded<V>]>, Schema.Context<K> | Schema.Context<V>> {
 }
 /**
  * @category HashMap transformations
@@ -3178,7 +3278,7 @@ export declare const HashMap: <K extends Schema.Any, V extends Schema.Any>({ key
  * @category api interface
  * @since 1.0.0
  */
-export interface ListFromSelf<Value extends Schema.Any> extends Annotable<ListFromSelf<Value>, list_.List<Schema.Type<Value>>, list_.List<Schema.Encoded<Value>>, Schema.Context<Value>> {
+export interface ListFromSelf<Value extends Schema.Any> extends AnnotableClass<ListFromSelf<Value>, list_.List<Schema.Type<Value>>, list_.List<Schema.Encoded<Value>>, Schema.Context<Value>> {
 }
 /**
  * @category List transformations
@@ -3189,7 +3289,7 @@ export declare const ListFromSelf: <Value extends Schema.Any>(value: Value) => L
  * @category api interface
  * @since 1.0.0
  */
-export interface List<Value extends Schema.Any> extends Annotable<List<Value>, list_.List<Schema.Type<Value>>, ReadonlyArray<Schema.Encoded<Value>>, Schema.Context<Value>> {
+export interface List<Value extends Schema.Any> extends AnnotableClass<List<Value>, list_.List<Schema.Type<Value>>, ReadonlyArray<Schema.Encoded<Value>>, Schema.Context<Value>> {
 }
 /**
  * @category List transformations
@@ -3200,7 +3300,7 @@ export declare const List: <Value extends Schema.Any>(value: Value) => List<Valu
  * @category api interface
  * @since 1.0.0
  */
-export interface SortedSetFromSelf<Value extends Schema.Any> extends Annotable<SortedSetFromSelf<Value>, sortedSet_.SortedSet<Schema.Type<Value>>, sortedSet_.SortedSet<Schema.Encoded<Value>>, Schema.Context<Value>> {
+export interface SortedSetFromSelf<Value extends Schema.Any> extends AnnotableClass<SortedSetFromSelf<Value>, sortedSet_.SortedSet<Schema.Type<Value>>, sortedSet_.SortedSet<Schema.Encoded<Value>>, Schema.Context<Value>> {
 }
 /**
  * @category SortedSet transformations
@@ -3211,19 +3311,14 @@ export declare const SortedSetFromSelf: <Value extends Schema.Any>(value: Value,
  * @category api interface
  * @since 1.0.0
  */
-export interface SortedSet<Value extends Schema.Any> extends Annotable<SortedSet<Value>, sortedSet_.SortedSet<Schema.Type<Value>>, ReadonlyArray<Schema.Encoded<Value>>, Schema.Context<Value>> {
+export interface SortedSet<Value extends Schema.Any> extends AnnotableClass<SortedSet<Value>, sortedSet_.SortedSet<Schema.Type<Value>>, ReadonlyArray<Schema.Encoded<Value>>, Schema.Context<Value>> {
 }
 /**
  * @category SortedSet transformations
  * @since 1.0.0
  */
 export declare const SortedSet: <Value extends Schema.Any>(value: Value, ordA: Order.Order<Schema.Type<Value>>) => SortedSet<Value>;
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface BooleanFromUnknown extends Annotable<BooleanFromUnknown, boolean, unknown> {
-}
+declare const BooleanFromUnknown_base: transform<typeof Unknown, typeof Boolean$>;
 /**
  * Converts an arbitrary value to a `boolean` by testing whether it is truthy.
  * Uses `!!val` to coerce the value to a `boolean`.
@@ -3232,5 +3327,7 @@ export interface BooleanFromUnknown extends Annotable<BooleanFromUnknown, boolea
  * @category boolean constructors
  * @since 1.0.0
  */
-export declare const BooleanFromUnknown: BooleanFromUnknown;
+export declare class BooleanFromUnknown extends BooleanFromUnknown_base {
+    static annotations: (annotations: Annotations.Schema<boolean>) => typeof BooleanFromUnknown;
+}
 //# sourceMappingURL=Schema.d.ts.map
\ No newline at end of file
diff --git a/dist/dts/Schema.d.ts.map b/dist/dts/Schema.d.ts.map
index 7230b0c3ead538467d762a290343657ed30def81..ea1dc9b13f5b550bcf88aa2239125656e3ea1a6d 100644
--- a/dist/dts/Schema.d.ts.map
+++ b/dist/dts/Schema.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"Schema.d.ts","sourceRoot":"","sources":["../../src/Schema.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"Schema.d.ts","sourceRoot":"","sources":["../../src/Schema.ts"],"names":[],"mappings":"AAAA;;GAEG;AAEH,OAAO,KAAK,MAAM,MAAM,cAAc,CAAA;AACtC,OAAO,KAAK,WAAW,MAAM,mBAAmB,CAAA;AAGhD,OAAO,KAAK,EAAE,KAAK,EAAE,MAAM,cAAc,CAAA;AACzC,OAAO,KAAK,MAAM,MAAM,cAAc,CAAA;AACtC,OAAO,KAAK,MAAM,MAAM,cAAc,CAAA;AAEtC,OAAO,KAAK,SAAS,MAAM,iBAAiB,CAAA;AAC5C,OAAO,KAAK,MAAM,MAAM,eAAe,CAAA;AACvC,OAAO,KAAK,OAAO,MAAM,eAAe,CAAA;AAGxC,OAAO,KAAK,WAAW,MAAM,oBAAoB,CAAA;AACjD,OAAO,KAAK,KAAK,MAAM,aAAa,CAAA;AACpC,OAAO,KAAK,QAAQ,MAAM,gBAAgB,CAAA;AAC1C,OAAO,KAAK,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAA;AAE9C,OAAO,KAAK,QAAQ,MAAM,gBAAgB,CAAA;AAC1C,OAAO,KAAK,QAAQ,MAAM,gBAAgB,CAAA;AAC1C,OAAO,KAAK,KAAK,MAAM,aAAa,CAAA;AAEpC,OAAO,KAAK,OAAO,MAAM,eAAe,CAAA;AACxC,OAAO,KAAK,KAAK,KAAK,MAAM,cAAc,CAAA;AAC1C,OAAO,KAAK,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAA;AAG/C,OAAO,KAAK,OAAO,MAAM,gBAAgB,CAAA;AACzC,OAAO,KAAK,OAAO,MAAM,eAAe,CAAA;AACxC,OAAO,KAAK,UAAU,MAAM,kBAAkB,CAAA;AAE9C,OAAO,KAAK,KAAK,KAAK,MAAM,cAAc,CAAA;AAC1C,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAEnD,OAAO,KAAK,EAAE,YAAY,EAAE,MAAM,UAAU,CAAA;AAC5C,OAAO,KAAK,GAAG,MAAM,UAAU,CAAA;AAO/B,OAAO,KAAK,WAAW,MAAM,kBAAkB,CAAA;AAC/C,OAAO,KAAK,OAAO,MAAM,aAAa,CAAA;AACtC,OAAO,KAAK,KAAK,YAAY,MAAM,mBAAmB,CAAA;AAEtD;;GAEG;AACH,MAAM,MAAM,eAAe,CAAC,CAAC,IAAI;IAC/B,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;CAC/B,SAAS,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;AAE7B;;;GAGG;AACH,eAAO,MAAM,MAAM,EAAE,OAAO,MAA4C,CAAA;AAExE;;;GAGG;AACH,MAAM,MAAM,MAAM,GAAG,OAAO,MAAM,CAAA;AAElC;;;GAGG;AACH,MAAM,WAAW,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAE,SAAQ,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,QAAQ;IACvG,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAA;IAChB,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAA;IACnB,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAA;IACrB,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;CACjE;AAED;;;GAGG;AACH,MAAM,WAAW,WAAW,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAE,SAAQ,cAAc,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;CAAG;AAE1G;;;GAGG;AACH,eAAO,MAAM,IAAI,6BAA8B,IAAI,GAAG,KAAG,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,CAgBzE,CAAA;AA0DH;;;GAGG;AACH,MAAM,CAAC,OAAO,WAAW,SAAS,CAAC;IACjC;;OAEG;IACH,KAAY,IAAI,CAAC,CAAC,SAAS,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAA;IAE9D;;OAEG;IACH,KAAY,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,CAAA;IAEnD;;OAEG;IACH,KAAY,GAAG,GACX,GAAG,GACH,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,GACnC,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC,GACnC,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;CAC1C;AAED;;;GAGG;AACH,MAAM,WAAW,SAAS,CAAC,IAAI,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAE,SAAQ,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnG,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA;CACtD;AAED;;;GAGG;AACH,MAAM,WAAW,cAAc,CAAC,IAAI,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAE,SAAQ,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjH,KAAI,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;CACxC;AAED;;GAEG;AACH,eAAO,MAAM,QAAQ,iCACX,CAAC,KACR,OAAO,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,CAAkB,CAAA;AAEhF;;;GAGG;AACH,eAAO,MAAM,MAAM,oBAAqB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,MAA4B,CAAA;AAEtF;;GAEG;AACH,MAAM,CAAC,OAAO,WAAW,MAAM,CAAC;IAC9B;;OAEG;IACH,UAAiB,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;QAC/B,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE;YACjB,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;YAC/B,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;YAC/B,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;SAChC,CAAA;KACF;IAED;;OAEG;IACH,KAAY,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IAExF;;OAEG;IACH,KAAY,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,EAAE,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IAE3F;;OAEG;IACH,KAAY,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IAE3F;;OAEG;IACH,KAAY,SAAS,CAAC,CAAC,SAAS,YAAY,IAAI,CAC9C,KAAK,EAAE,OAAO,EACd,OAAO,CAAC,EAAE,GAAG,CAAC,YAAY,KACvB,OAAO,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IAEpC;;;;OAIG;IACH,KAAY,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,CAAA;IAE3C;;;;OAIG;IACH,KAAY,YAAY,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAA;IAElD;;;;OAIG;IACH,KAAY,GAAG,GACX,GAAG,GACH,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,GAC3B,MAAM,CAAC,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC,GAC3B,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;IAEjC;;;;OAIG;IACH,KAAY,QAAQ,CAAC,CAAC,SAAS,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;CAC9E;AAED;;GAEG;AACH,eAAO,MAAM,aAAa,oBAAqB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,YAAY,CAAC,CAAqC,CAAA;AAEnH;;GAEG;AACH,eAAO,MAAM,UAAU,oBAAqB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,YAAY,CAAC,CAAkC,CAAA;AAG7G,OAAO;AACL;;;GAGG;AACH,OAAO;AACP;;;GAGG;AACH,YAAY;AACZ;;;GAGG;AACH,UAAU;AACV;;;GAGG;AACH,mBAAmB;AACnB;;;GAGG;AACH,iBAAiB;AACjB;;;GAGG;AACH,YAAY;AACZ;;;GAGG;AACH,UAAU;AACV;;;GAGG;AACH,mBAAmB;AACnB;;;GAGG;AACH,iBAAiB;AACjB;;;GAGG;AACH,EAAE;AACF;;;GAGG;AACH,cAAc;AACd;;;GAGG;AACH,YAAY,EACb,MAAM,kBAAkB,CAAA;AAGzB;;;GAGG;AACH,eAAO,MAAM,aAAa,oBAChB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,YACb,YAAY,SAGX,OAAO,oBAAoB,YAAY,KAAG,OAAO,MAAM,CAAC,CAAC,EAAE,YAAY,UAAU,EAAE,CAAC,CAEhG,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,mBAAmB,iBACtB,OAAO,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,YACjB,YAAY,SAGX,OAAO,oBAAoB,YAAY,KAAG,cAAc,CAAC,CAAC,EAAE,YAAY,UAAU,CAE9F,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,oBAAoB,iBACvB,OAAO,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,YACjB,YAAY,SAGX,OAAO,oBAAoB,YAAY,KAAG,QAAQ,CAAC,CAC/D,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAC3B,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACvB,OAAO,CAAC,EAAE,YAAY,KACnB,CAAC,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC,EAAE,YAAY,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,CAAC,CAAiB,CAAA;AAE1G;;;GAGG;AACH,eAAO,MAAM,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAC9B,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAC3B,OAAO,CAAC,EAAE,YAAY,KACnB,CAAC,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC,EAAE,YAAY,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,CAAuB,CAAA;AAE9G;;;GAGG;AACH,eAAO,MAAM,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAC/B,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAC3B,OAAO,CAAC,EAAE,YAAY,KACnB,CAAC,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC,EAAE,YAAY,KAAK,OAAO,CAAC,CAAC,CAAwB,CAAA;AAEhF;;;GAGG;AACH,eAAO,MAAM,aAAa,oBAChB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,YACb,YAAY,SAGX,OAAO,oBAAoB,YAAY,KAAG,OAAO,MAAM,CAAC,CAAC,EAAE,YAAY,UAAU,EAAE,CAAC,CAEhG,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,mBAAmB,iBACtB,OAAO,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,YACjB,YAAY,SAGX,OAAO,oBAAoB,YAAY,KAAG,cAAc,CAAC,CAAC,EAAE,YAAY,UAAU,CAE9F,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,oBAAoB,iBACvB,OAAO,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,YACjB,YAAY,SAGX,OAAO,oBAAoB,YAAY,KAAG,QAAQ,CAAC,CAC/D,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAC3B,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACvB,OAAO,CAAC,EAAE,YAAY,KACnB,CAAC,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC,EAAE,YAAY,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,CAAC,CAAiB,CAAA;AAE1G;;;GAGG;AACH,eAAO,MAAM,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAC9B,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAC3B,OAAO,CAAC,EAAE,YAAY,KACnB,CAAC,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC,EAAE,YAAY,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,CAAuB,CAAA;AAE9G;;;GAGG;AACH,eAAO,MAAM,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAC/B,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAC3B,OAAO,CAAC,EAAE,YAAY,KACnB,CAAC,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC,EAAE,YAAY,KAAK,OAAO,CAAC,CAAC,CAAwB,CAAA;AAEhF;;;GAGG;AACH,eAAO,MAAM,QAAQ,oBACX,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,YACb,YAAY,SAGX,OAAO,oBAAoB,YAAY,KAAG,OAAO,MAAM,CAAC,CAAC,EAAE,YAAY,UAAU,EAAE,CAAC,CAEhG,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,cAAc,oBACjB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,YACb,YAAY,SAGX,OAAO,oBAAoB,YAAY,KAAG,cAAc,CAAC,CAAC,EAAE,YAAY,UAAU,CAE9F,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,eAAe,iBAClB,OAAO,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,YACjB,YAAY,SAGX,OAAO,oBAAoB,YAAY,KAAG,QAAQ,CAAC,CAC/D,CAAA;AAED;;;;;GAKG;AACH,eAAO,MAAM,QAAQ,MAAO,OAAO,oBACgC,CAAA;AAEnE;;;GAGG;AACH,MAAM,WAAW,OAAO,CAAC,QAAQ,SAAS,MAAM,CAAC,qBAAqB,CAAC,GAAG,CAAC,YAAY,CAAC,CACtF,SAAQ,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;IAE3D,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAA;CACtC;AAoBD;;;GAGG;AACH,wBAAgB,OAAO,CAAC,QAAQ,SAAS,MAAM,CAAC,qBAAqB,CAAC,GAAG,CAAC,YAAY,CAAC,EACrF,GAAG,QAAQ,EAAE,QAAQ,GACpB,OAAO,CAAC,QAAQ,CAAC,CAAA;AACpB,wBAAgB,OAAO,IAAI,KAAK,CAAA;AAChC,wBAAgB,OAAO,CAAC,QAAQ,SAAS,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,EACtE,GAAG,QAAQ,EAAE,QAAQ,GACpB,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAA;AAO3B;;;;;;;;;;;;;;;GAeG;AACH,eAAO,MAAM,WAAW,4EAC+D,CAAC,qBACtE,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAyB,CAAA;AAE3E;;;GAGG;AACH,eAAO,MAAM,oBAAoB,6BAA8B,CAAC,KAAG,YAAY,CAAC,CAAuC,CAAA;AAEvH;;;GAGG;AACH,MAAM,WAAW,KAAK,CAAC,CAAC,SAAS,eAAe,CAAE,SAAQ,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IAC5F,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;CAClB;AAED;;GAEG;AACH,MAAM,MAAM,eAAe,GAAG;IAAE,CAAC,CAAC,EAAE,MAAM,GAAG,MAAM,GAAG,MAAM,CAAA;CAAE,CAAA;AAqB9D;;;GAGG;AACH,eAAO,MAAM,KAAK,qCAAsC,CAAC,KAAG,MAAM,CAAC,CAA0B,CAAA;AAE7F,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,GAChD,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,OAAO,GAAG,IAAI,GAAG,SAAS,CAAC,GAAG,IAAI,SAAS,EAAE,GAAG,EAAE,GACtF,IAAI,CAAC,IAAI,CAAC,EAAE,GACd,KAAK,CAAA;AAET;;;GAGG;AACH,eAAO,MAAM,eAAe,kFACN,CAAC,mHAUtB,CAAA;AAuGD;;;;;;GAMG;AACH,eAAO,MAAM,OAAO,EAAE;IACpB,CAAC,CAAC,EACA,EAAE,EAAE,CAAC,KAAK,EAAE,OAAO,KAAK,KAAK,IAAI,CAAC,EAClC,WAAW,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,GAClC,WAAW,CAAC,CAAC,CAAC,CAAA;IACjB,CAAC,KAAK,CAAC,CAAC,SAAS,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAC9C,cAAc,EAAE,CAAC,EACjB,OAAO,EAAE;QACP,QAAQ,CAAC,MAAM,EAAE,CACf,GAAG,cAAc,EAAE;YAAE,QAAQ,EAAE,CAAC,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;SAAE,KACnG,CACH,KAAK,EAAE,OAAO,EACd,OAAO,EAAE,YAAY,EACrB,GAAG,EAAE,GAAG,CAAC,WAAW,KACjB,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,KAAK,CAAC,CAAA;QACpD,QAAQ,CAAC,MAAM,EAAE,CACf,GAAG,cAAc,EAAE;YAAE,QAAQ,EAAE,CAAC,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;SAAE,KACnG,CACH,KAAK,EAAE,OAAO,EACd,OAAO,EAAE,YAAY,EACrB,GAAG,EAAE,GAAG,CAAC,WAAW,KACjB,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,KAAK,CAAC,CAAA;KACrD,EACD,WAAW,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE;QAAE,QAAQ,EAAE,CAAC,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAAE,CAAC,GAClF,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;CAWzC,CAAA;AAER;;;GAGG;AACH,eAAO,MAAM,WAAW,EAAE,OAAO,MAAkD,CAAA;AAEnF;;;GAGG;AACH,eAAO,MAAM,SAAS,gFACP,MAAM,WAAW,CAAC,CAAC,CAAC,gBACnB,YAAY,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,kBAE3B,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAYnD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,gBAAgB,EAAE,OAAO,MAAuD,CAAA;AAE7F;;;GAGG;AACH,MAAM,WAAW,UAAU,CAAC,CAAC,CAAE,SAAQ,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;CAAG;AAE1E;;;GAGG;AACH,eAAO,MAAM,UAAU,oCAAoC,GAAG,KAAK,GAAG,eACvD,CAAC,gBACA,kBAAkB,CAAC,aAAa,CAAC,CAAC,CAAC,KAChD,WAAW,aAAa,CAAC,CAAC,CAU1B,CAAA;;AAEH;;;GAGG;AACH,qBAAa,SAAU,SAAQ,cAAqC;IAClE,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,OAAO,SAAS,CAAoB;CAClH;;AAED;;;GAGG;AACH,qBAAa,IAAK,SAAQ,SAA2B;IACnD,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,OAAO,IAAI,CAAoB;CACxG;;AAED;;;GAGG;AACH,qBAAa,IAAK,SAAQ,SAAoB;IAC5C,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,OAAO,IAAI,CAAoB;CACxG;;AAED;;;GAGG;AACH,qBAAa,KAAM,SAAQ,UAA6B;IACtD,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,OAAO,KAAK,CAAoB;CAC1G;;AAED;;;GAGG;AACH,qBAAa,OAAQ,SAAQ,YAAiC;IAC5D,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,OAAO,OAAO,CAAoB;CAC9G;;AAED;;;GAGG;AACH,qBAAa,GAAI,SAAQ,QAAyB;IAChD,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,OAAO,GAAG,CAAoB;CACtG;;AAED;;;GAGG;AACH,qBAAa,cAAe,SAAQ,mBAA+B;IACjE,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,cAAc,CAAoB;CACpH;;AAED;;;GAGG;AACH,qBAAa,cAAe,SAAQ,mBAA+B;IACjE,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,cAAc,CAAoB;CACpH;;AAED,cAAc;AACd,cAAM,OAAQ,SAAQ,YAA+B;IACnD,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,OAAO,CAAoB;CAC7G;;AAED,cAAc;AACd,cAAM,OAAQ,SAAQ,YAA+B;IACnD,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,OAAO,CAAoB;CAC7G;;AAED,cAAc;AACd,cAAM,QAAS,SAAQ,aAAiC;IACtD,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,OAAO,QAAQ,CAAoB;CAC/G;;AAED,cAAc;AACd,cAAM,OAAQ,SAAQ,YAA+B;IACnD,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,OAAO,CAAoB;CAC7G;AAED,OAAO;AACL;;;GAGG;AACH,QAAQ,IAAI,OAAO;AACnB;;;GAGG;AACH,OAAO,IAAI,MAAM;AACjB;;;GAGG;AACH,OAAO,IAAI,MAAM;AACjB;;;GAGG;AACH,OAAO,IAAI,MAAM,EAClB,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,KAAK,CAAC,OAAO,SAAS,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAE,SAChE,cAAc,CACZ,KAAK,CAAC,OAAO,CAAC,EACd,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC5B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC/B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAChC;IAED,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAA;IACnC,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAA;CAC3F;AAmBD;;;GAGG;AACH,wBAAgB,KAAK,CAAC,OAAO,SAAS,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,OAAO,EAAE,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAA;AACnG,wBAAgB,KAAK,CAAC,MAAM,SAAS,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,CAAA;AACxE,wBAAgB,KAAK,IAAI,OAAO,KAAK,CAAA;AACrC,wBAAgB,KAAK,CAAC,OAAO,SAAS,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,EAC7D,GAAG,OAAO,EAAE,OAAO,GAClB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AAczG;;;GAGG;AACH,MAAM,WAAW,MAAM,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,CAAE,SAAQ,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,CAAC;IAC3E,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;CAC/E;AAED;;;GAGG;AACH,eAAO,MAAM,MAAM,+BAAgC,CAAC,KAAG,OAAO,CAAC,CAAsB,CAAA;AAErF;;;GAGG;AACH,MAAM,WAAW,WAAW,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,CAAE,SAAQ,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,SAAS,CAAC,CAAC;IACrF,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAA;CACzF;AAED;;;GAGG;AACH,eAAO,MAAM,WAAW,+BAAgC,CAAC,KAAG,YAAY,CAAC,CAA2B,CAAA;AAEpG;;;GAGG;AACH,MAAM,WAAW,SAAS,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,CAAE,SAAQ,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,EAAE,OAAO,SAAS,CAAC,CAAC;IAChG,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,SAAS,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;CAC9F;AAED;;;GAGG;AACH,eAAO,MAAM,SAAS,+BAAgC,CAAC,KAAG,UAAU,CAAC,CAAiC,CAAA;AAEtG;;;GAGG;AACH,eAAO,MAAM,KAAK,kBAAmB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,YAAY,MAAM,CAAC,CAAuC,CAAA;AAEjH;;GAEG;AACH,MAAM,WAAW,eAAe,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,CACnD,SAAQ,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAE7E,QAAQ,CAAC,eAAe,EAAE,CAAC,CAAA;CAC5B;AAED;;GAEG;AACH,eAAO,MAAM,eAAe,+BAAgC,CAAC,KAAG,gBAAgB,CAAC,CAAkC,CAAA;AAUnH;;GAEG;AACH,MAAM,CAAC,OAAO,WAAW,SAAS,CAAC;IACjC,KAAK,YAAY,CACf,QAAQ,EACR,GAAG,SAAS,aAAa,CAAC,GAAG,CAAC,GAAG,SAAS,EAAE,IAC1C,QAAQ,SAAS,SAAS,CAAC,MAAM,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,GACvD,IAAI,SAAS,eAAe,CAAC,MAAM,CAAC,CAAC,GAAG,YAAY,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAC5F,YAAY,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GACxD,GAAG,CAAA;IAEP,KAAK,eAAe,CAClB,QAAQ,EACR,GAAG,SAAS,aAAa,CAAC,GAAG,CAAC,GAAG,SAAS,EAAE,IAC1C,QAAQ,SAAS,SAAS,CAAC,MAAM,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,GACvD,IAAI,SAAS,eAAe,CAAC,MAAM,CAAC,CAAC,GAAG,eAAe,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,GAAG,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAClG,eAAe,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,GAAG,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAC9D,GAAG,CAAA;IAEP;;OAEG;IACH,KAAY,OAAO,GAAG,MAAM,CAAC,GAAG,GAAG,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;IAE9D;;OAEG;IACH,KAAY,QAAQ,GAAG,aAAa,CAAC,OAAO,CAAC,CAAA;IAE7C;;OAEG;IACH,KAAY,IAAI,CACd,QAAQ,SAAS,SAAS,CAAC,QAAQ,EACnC,IAAI,SAAS,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,IACpC,IAAI,SAAS,CAAC,MAAM,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,GAAG,QAAQ,CAAC;QACpD,GAAG,YAAY,CAAC,QAAQ,CAAC;QACzB,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,GAAG;YAAE,QAAQ,EAAE,CAAC,IAAI,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAAE;KACxD,CAAC,GACF,YAAY,CAAC,QAAQ,CAAC,CAAA;IAExB;;OAEG;IACH,KAAY,OAAO,CACjB,QAAQ,SAAS,SAAS,CAAC,QAAQ,EACnC,IAAI,SAAS,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,IACpC,IAAI,SAAS,CAAC,MAAM,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,GAAG,QAAQ,CAAC;QACpD,GAAG,eAAe,CAAC,QAAQ,CAAC;QAC5B,GAAG,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACtC,GAAG;YAAE,QAAQ,EAAE,CAAC,IAAI,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAAE;KAC3D,CAAC,GACF,eAAe,CAAC,QAAQ,CAAC,CAAA;CAC5B;AAED;;;GAGG;AACH,MAAM,WAAW,SAAS,CACxB,QAAQ,SAAS,SAAS,CAAC,QAAQ,EACnC,IAAI,SAAS,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CACtC,SACA,cAAc,CACZ,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,EACzB,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,EAC9B,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,EACjC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAChE;IAED,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAA;IACrC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAA;CAC9B;AAyCD;;;GAGG;AACH,MAAM,WAAW,KAAK,CAAC,QAAQ,SAAS,SAAS,CAAC,QAAQ,CAAE,SAAQ,SAAS,CAAC,QAAQ,EAAE,EAAE,CAAC;IACzF,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAA;CAC5F;AAED;;;GAGG;AACH,wBAAgB,KAAK,CACnB,KAAK,CAAC,QAAQ,SAAS,SAAS,CAAC,QAAQ,EACzC,IAAI,SAAS,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,GAAG,CAAC,EACrD,QAAQ,EAAE,QAAQ,EAAE,GAAG,IAAI,EAAE,IAAI,GAAG,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAA;AAC/D,wBAAgB,KAAK,CAAC,QAAQ,SAAS,SAAS,CAAC,QAAQ,EAAE,GAAG,QAAQ,EAAE,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAA;AAOlG;;;GAGG;AACH,MAAM,WAAW,MAAM,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SAAQ,SAAS,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;IAC9E,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAA;IACrB,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAA;CACzF;AAWD,QAAA,MAAM,MAAM,oCAAqC,KAAK,KAAG,OAAO,KAAK,CAA0B,CAAA;AAE/F,OAAO;AACL;;;GAGG;AACH,MAAM,IAAI,KAAK,EAChB,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,aAAa,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SAAQ,SAAS,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;IAC1F,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAA;IACrB,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,CAAA;CACrG;AAWD;;;GAGG;AACH,eAAO,MAAM,aAAa,oCAAqC,KAAK,KAAG,cAAc,KAAK,CAC3D,CAAA;AAE/B;;GAEG;AACH,MAAM,CAAC,OAAO,WAAW,iBAAiB,CAAC;IACzC;;OAEG;IACH,KAAY,KAAK,GAAG,IAAI,GAAG,GAAG,CAAA;IAE9B;;OAEG;IACH,KAAY,QAAQ,CAAC,CAAC,SAAS,OAAO,IAAI,CAAC,SAAS,IAAI,GAAG,IAAI,GAAG,GAAG,CAAA;IAErE;;OAEG;IACH,KAAY,GAAG,CAAC,GAAG,SAAS,WAAW,GAAG,WAAW,IAAI,iBAAiB,CACxE,KAAK,EACL,GAAG,EACH,GAAG,EACH,KAAK,EACL,GAAG,EACH,OAAO,EACP,OAAO,CACR,CAAA;IAED;;OAEG;IACH,KAAY,GAAG,CAAC,GAAG,SAAS,WAAW,GAAG,WAAW,IACjD,GAAG,CAAC,GAAG,CAAC,GACR,iBAAiB,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,GAClE,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,GAClE,iBAAiB,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAA;IAExE;;OAEG;IACH,KAAY,GAAG,GACX,4BAA4B,GAC5B,+BAA+B,CAAA;IAEnC;;OAEG;IACH,UAAiB,WAAW,CAAC,CAAC,CAAE,SAAQ,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;KAAG;CAC9D;AAID;;;GAGG;AACH,qBAAa,4BAA4B;IAMrC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG;IACtB,QAAQ,CAAC,UAAU,EAAE,OAAO;IAC5B,QAAQ,CAAC,UAAU,EAAE,OAAO;IAC5B,QAAQ,CAAC,WAAW,EAAE,GAAG,CAAC,WAAW;IACrC,QAAQ,CAAC,YAAY,EAAE,CAAC,MAAM,OAAO,CAAC,GAAG,SAAS;IATpD;;OAEG;IACH,QAAQ,CAAC,IAAI,kCAAiC;gBAEnC,IAAI,EAAE,GAAG,CAAC,GAAG,EACb,UAAU,EAAE,OAAO,EACnB,UAAU,EAAE,OAAO,EACnB,WAAW,EAAE,GAAG,CAAC,WAAW,EAC5B,YAAY,EAAE,CAAC,MAAM,OAAO,CAAC,GAAG,SAAS;IAEpD;;OAEG;IACH,QAAQ;CAKT;AAED;;;GAGG;AACH,qBAAa,qBAAsB,YAAW,GAAG,CAAC,SAAS;IAEvD,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG;IACtB,QAAQ,CAAC,UAAU,EAAE,OAAO;IAC5B,QAAQ,CAAC,UAAU,EAAE,OAAO;IAC5B,QAAQ,CAAC,WAAW,EAAE,GAAG,CAAC,WAAW;IACrC,QAAQ,CAAC,OAAO,CAAC;gBAJR,IAAI,EAAE,GAAG,CAAC,GAAG,EACb,UAAU,EAAE,OAAO,EACnB,UAAU,EAAE,OAAO,EACnB,WAAW,EAAE,GAAG,CAAC,WAAW,EAC5B,OAAO,CAAC,yBAAyB;CAE7C;AAED;;;GAGG;AACH,qBAAa,mBAAoB,YAAW,GAAG,CAAC,SAAS;IAErD,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG;IACtB,QAAQ,CAAC,UAAU,EAAE,OAAO;IAC5B,QAAQ,CAAC,UAAU,EAAE,OAAO;IAC5B,QAAQ,CAAC,WAAW,EAAE,GAAG,CAAC,WAAW;IACrC,QAAQ,CAAC,YAAY,EAAE,CAAC,MAAM,OAAO,CAAC,GAAG,SAAS;gBAJzC,IAAI,EAAE,GAAG,CAAC,GAAG,EACb,UAAU,EAAE,OAAO,EACnB,UAAU,EAAE,OAAO,EACnB,WAAW,EAAE,GAAG,CAAC,WAAW,EAC5B,YAAY,EAAE,CAAC,MAAM,OAAO,CAAC,GAAG,SAAS;CAErD;AAYD;;;GAGG;AACH,qBAAa,+BAA+B;IAMxC,QAAQ,CAAC,IAAI,EAAE,qBAAqB;IACpC,QAAQ,CAAC,EAAE,EAAE,mBAAmB;IAChC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,+BAA+B,CAAC,QAAQ,CAAC;IAC9D,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,+BAA+B,CAAC,QAAQ,CAAC;IARhE;;OAEG;IACH,QAAQ,CAAC,IAAI,qCAAoC;gBAEtC,IAAI,EAAE,qBAAqB,EAC3B,EAAE,EAAE,mBAAmB,EACvB,MAAM,EAAE,GAAG,CAAC,+BAA+B,CAAC,QAAQ,CAAC,EACrD,MAAM,EAAE,GAAG,CAAC,+BAA+B,CAAC,QAAQ,CAAC;IAEhE;;OAEG;IACH,QAAQ;CAKT;AAED;;;GAGG;AACH,eAAO,MAAM,uBAAuB,EAAE,OAAO,MAAuD,CAAA;AAEpG;;;GAGG;AACH,MAAM,MAAM,uBAAuB,GAAG,OAAO,uBAAuB,CAAA;AAmCpE;;;GAGG;AACH,MAAM,WAAW,iBAAiB,CAChC,SAAS,SAAS,iBAAiB,CAAC,KAAK,EACzC,IAAI,EACJ,GAAG,SAAS,WAAW,EACvB,YAAY,SAAS,iBAAiB,CAAC,KAAK,EAC5C,OAAO,EACP,UAAU,SAAS,OAAO,GAAG,KAAK,EAClC,CAAC,GAAG,KAAK,CACT,SAAQ,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,QAAQ;IACnD,QAAQ,CAAC,CAAC,uBAAuB,CAAC,EAAE,IAAI,CAAA;IACxC,QAAQ,CAAC,UAAU,EAAE,SAAS,CAAA;IAC9B,QAAQ,CAAC,aAAa,EAAE,YAAY,CAAA;IACpC,QAAQ,CAAC,WAAW,EAAE,UAAU,CAAA;IAChC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAA;IAClB,QAAQ,CAAC,GAAG,EAAE,iBAAiB,CAAC,GAAG,CAAA;IAEnC,WAAW,CACT,WAAW,EAAE,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,GAC/C,iBAAiB,CAAC,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,CAAA;CACjF;AAsCD;;;;;GAKG;AACH,eAAO,MAAM,iBAAiB,kBACtB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KACpB,kBAAkB,kBAAkB,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,kBAAkB,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CACb,CAAA;AAEnG;;;;;GAKG;AACH,eAAO,MAAM,sBAAsB,EAAE;IACnC,CAAC,IAAI,EAAE,YAAY,EAAE,MAAM,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAC/C,SAAS,SAAS,iBAAiB,CAAC,KAAK,EACzC,GAAG,SAAS,WAAW,EACvB,YAAY,SAAS,iBAAiB,CAAC,KAAK,EAC5C,OAAO,EACP,CAAC,EAED,IAAI,EAAE,iBAAiB,CAAC,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,KAC7E,iBAAiB,CAAC,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE,YAAY,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAA;IAC5E,CACE,SAAS,SAAS,iBAAiB,CAAC,KAAK,EACzC,IAAI,EACJ,GAAG,SAAS,WAAW,EACvB,YAAY,SAAS,iBAAiB,CAAC,KAAK,EAC5C,OAAO,EACP,CAAC,EAED,IAAI,EAAE,iBAAiB,CAAC,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,EAChF,YAAY,EAAE,MAAM,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GACtC,iBAAiB,CAAC,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE,YAAY,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAA;CA4B1E,CAAA;AAQF;;;;;GAKG;AACH,eAAO,MAAM,mBAAmB,EAAE;IAChC,CAAC,IAAI,EAAE,YAAY,EAAE,MAAM,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAC/C,GAAG,SAAS,WAAW,EACvB,OAAO,EACP,UAAU,SAAS,OAAO,EAC1B,CAAC,EAED,IAAI,EAAE,iBAAiB,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,KACnE,iBAAiB,CAAC,GAAG,EAAE,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,CAAA;IACxF,CACE,IAAI,EACJ,GAAG,SAAS,WAAW,EACvB,OAAO,EACP,UAAU,SAAS,OAAO,EAC1B,CAAC,EAED,IAAI,EAAE,iBAAiB,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,EACtE,YAAY,EAAE,MAAM,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GACtC,iBAAiB,CAAC,GAAG,EAAE,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,CAAA;CA+BtF,CAAA;AAEF;;;;;GAKG;AACH,eAAO,MAAM,YAAY,EAAE;IACzB,CAAC,IAAI,EAAE,QAAQ,EAAE;QACf,WAAW,EAAE,MAAM,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAA;QAC1D,QAAQ,EAAE,MAAM,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;KACpC,GAAG,CACF,GAAG,SAAS,WAAW,EACvB,OAAO,EACP,CAAC,EAED,IAAI,EAAE,iBAAiB,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,KAChE,iBAAiB,CAAC,GAAG,EAAE,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAA;IAClF,CACE,IAAI,EACJ,GAAG,SAAS,WAAW,EACvB,OAAO,EACP,CAAC,EAED,IAAI,EAAE,iBAAiB,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,EACnE,QAAQ,EAAE;QACR,WAAW,EAAE,MAAM,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAA;QAC1D,QAAQ,EAAE,MAAM,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;KACpC,GACA,iBAAiB,CAAC,GAAG,EAAE,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAA;CAagB,CAAA;AAElG;;;;;GAKG;AACH,eAAO,MAAM,OAAO,EAAE;IACpB,CAAC,GAAG,SAAS,WAAW,EAAE,GAAG,EAAE,GAAG,GAAG,CACnC,SAAS,SAAS,iBAAiB,CAAC,KAAK,EACzC,IAAI,EACJ,YAAY,SAAS,iBAAiB,CAAC,KAAK,EAC5C,OAAO,EACP,UAAU,SAAS,OAAO,EAC1B,CAAC,EAED,IAAI,EAAE,iBAAiB,CAAC,SAAS,EAAE,IAAI,EAAE,WAAW,EAAE,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,KACxF,iBAAiB,CAAC,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,CAAA;IAClF,CACE,IAAI,EACJ,SAAS,SAAS,iBAAiB,CAAC,KAAK,EACzC,OAAO,EACP,YAAY,SAAS,iBAAiB,CAAC,KAAK,EAC5C,UAAU,SAAS,OAAO,EAC1B,CAAC,EACD,GAAG,SAAS,WAAW,EAEvB,IAAI,EAAE,iBAAiB,CAAC,SAAS,EAAE,IAAI,EAAE,WAAW,EAAE,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,EAC3F,GAAG,EAAE,GAAG,GACP,iBAAiB,CAAC,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,CAAA;CA+ChF,CAAA;AAEF;;;;;;;;GAQG;AACH,eAAO,MAAM,kBAAkB,iCACvB,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,MACpB,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,WACb;IACP,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,cAAc,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IAC9C,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,cAAc,CAAC,EAAE,CAAC,CAAA;CAChD,KACA,kBAAkB,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,CAQ1D,CAAA;AAEH;;;;;;;;;;;;GAYG;AACH,eAAO,MAAM,kBAAkB,iCACvB,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,MACpB,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,WACb;IACP,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,cAAc,CAAC,EAAE,CAAC,KAAK,cAAc,CAAC,EAAE,CAAC,CAAA;IAC9D,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,cAAc,CAAC,EAAE,CAAC,KAAK,cAAc,CAAC,EAAE,CAAC,CAAA;CAC/D,KACA,kBAAkB,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,CAQ3D,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,QAAQ,EAAE;IACrB,CACE,CAAC,EACD,KAAK,CAAC,OAAO,SAAS;QACpB,QAAQ,CAAC,OAAO,CAAC,EAAE,KAAK,CAAA;QACxB,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAA;QACnB,QAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,CAAA;QACrB,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAA;KACzB,GAAG;QACF,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,CAAA;QACzB,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAA;QACnB,QAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,CAAA;QACrB,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAA;KACzB,GAAG;QACF,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAA;QACrB,QAAQ,CAAC,OAAO,CAAC,EAAE,KAAK,CAAA;QACxB,QAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,CAAA;QACrB,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAA;KACzB,GAAG,SAAS,EAEb,OAAO,CAAC,EAAE,OAAO,GAChB,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,iBAAiB,CACnF,IAAI,EACJ,CAAC,GAAG,SAAS,EACb,KAAK,EACL,IAAI,EACJ,CAAC,GAAG,SAAS,EACb,KAAK,EACL,CAAC,CACF,GACD,iBAAiB,CACf,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,GAAG,SAAS,CAAC,SAAS,IAAI,GAAG,GAAG,GAAG,IAAI,EAC5D,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAC/D,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,GAAG,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,GAAG,KAAK,GAAG,SAAS,CAAC,EACnF,KAAK,EACL,IAAI,EACF,CAAC,GACD,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,SAAS,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,GAC5D,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,SAAS,IAAI,GAAG,KAAK,GAAG,SAAS,CAAC,EAChE,KAAK,EACL,CAAC,CACF,CAAA;IACH,CACE,CAAC,EACD,CAAC,EACD,CAAC,EACD,KAAK,CAAC,OAAO,SAAS;QACpB,QAAQ,CAAC,OAAO,CAAC,EAAE,KAAK,CAAA;QACxB,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAA;QACnB,QAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,CAAA;QACrB,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAA;KACzB,GAAG;QACF,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,CAAA;QACzB,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAA;QACnB,QAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,CAAA;QACrB,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAA;KACzB,GAAG;QACF,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAA;QACrB,QAAQ,CAAC,OAAO,CAAC,EAAE,KAAK,CAAA;QACxB,QAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,CAAA;QACrB,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAA;KACzB,GAAG,SAAS,EAEb,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACvB,OAAO,CAAC,EAAE,OAAO,GAChB,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,iBAAiB,CAChD,IAAI,EACJ,CAAC,GAAG,SAAS,EACb,KAAK,EACL,IAAI,EACJ,CAAC,GAAG,SAAS,EACb,KAAK,EACL,CAAC,CACF,GACD,iBAAiB,CACf,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,GAAG,SAAS,CAAC,SAAS,IAAI,GAAG,GAAG,GAAG,IAAI,EAC5D,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAC/D,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,GAAG,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,GAAG,KAAK,GAAG,SAAS,CAAC,EACnF,KAAK,EACL,IAAI,EACF,CAAC,GACD,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,SAAS,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,GAC5D,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,SAAS,IAAI,GAAG,KAAK,GAAG,SAAS,CAAC,EAChE,KAAK,EACL,CAAC,CACF,CAAA;CA2GH,CAAA;AAEF;;GAEG;AACH,MAAM,CAAC,OAAO,WAAW,MAAM,CAAC;IAC9B;;OAEG;IACH,KAAY,MAAM,GAAG;QACnB,QAAQ,EAAE,CAAC,EAAE,WAAW,GACpB,MAAM,CAAC,GAAG,GACV,iBAAiB,CAAC,GAAG,CAAA;KAC1B,CAAA;IAED,KAAK,GAAG,CAAC,CAAC,SAAS,MAAM,EAAE,CAAC,SAAS,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,GACzE,CAAC,CAAC,CAAC,CAAC,SAAS,iBAAiB,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,GAC/E,CAAC,CAAA;IAEH,KAAK,gBAAgB,CAAC,MAAM,SAAS,MAAM,CAAC,MAAM,IAAI;SACnD,CAAC,IAAI,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,SAC1B,iBAAiB,CAAC,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,GACzF,iBAAiB,CAAC,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,GAC3F,iBAAiB,CAAC,iBAAiB,CAAC,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,GAC3F,iBAAiB,CAAC,iBAAiB,CAAC,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,GACjG,KAAK;KACV,CAAC,MAAM,MAAM,CAAC,CAAA;IAEf,KAAK,aAAa,CAAC,MAAM,SAAS,MAAM,CAAC,MAAM,IAAI;SAChD,CAAC,IAAI,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,SAAS,yBAAyB,GAAG,CAAC,GAAG,KAAK;KAC7E,CAAC,MAAM,MAAM,CAAC,CAAA;IAEf,KAAK,yBAAyB,GAC1B,iBAAiB,CAAC,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,GACzF,iBAAiB,CAAC,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,iBAAiB,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,GAC3F,iBAAiB,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,GAC3F,iBAAiB,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,iBAAiB,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAA;IAEjG;;OAEG;IACH,KAAY,IAAI,CAAC,CAAC,SAAS,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAC5D;SACG,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,yBAAyB,GAAG;YAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAAE,GAChG;YAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAAE;KAC3C,CAAC,MAAM,CAAC,CAAC,CACX,SAAS,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IAE7B;;OAEG;IACH,KAAY,OAAO,CAAC,CAAC,SAAS,MAAM,IAChC;QAAE,QAAQ,EAAE,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAAE,GAC5F;QAAE,QAAQ,EAAE,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAAE,CAAA;IAE/E;;OAEG;IACH,KAAY,OAAO,CAAC,CAAC,SAAS,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;IAElE,KAAK,4BAA4B,GAC7B,iBAAiB,CAAC,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,GACzG,iBAAiB,CAAC,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE,iBAAiB,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,GAC3G,iBAAiB,CAAC,iBAAiB,CAAC,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,GAC3G,iBAAiB,CAAC,iBAAiB,CAAC,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,iBAAiB,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA;IAEjH;;OAEG;IACH,KAAY,WAAW,CAAC,CAAC,SAAS,MAAM,IAAI,KAAK,CAAC,mBAAmB,CACnE;SACG,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,yBAAyB,GAAG;YAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAAE,GAChG,CAAC,CAAC,CAAC,CAAC,SAAS,4BAA4B,GAAG;YAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAAE,GACrF;YAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAAE;KAC3C,CAAC,MAAM,CAAC,CAAC,CACX,SAAS,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;CAC9B;AAED;;GAEG;AACH,MAAM,CAAC,OAAO,WAAW,cAAc,CAAC;IACtC;;OAEG;IACH,KAAY,MAAM,GAAG;QAAE,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC;QAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAA;KAAE,CAAA;IAE7E;;OAEG;IACH,KAAY,OAAO,GAAG,aAAa,CAAC,MAAM,CAAC,CAAA;IAE3C;;OAEG;IACH,KAAY,eAAe,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAA;IAElE;;OAEG;IACH,KAAY,IAAI,CACd,OAAO,SAAS,cAAc,CAAC,OAAO,IACpC,KAAK,CAAC,mBAAmB,CAC3B;SACG,CAAC,IAAI,MAAM,OAAO,GAAG;YACpB,QAAQ,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;SACjF;KACF,CAAC,MAAM,CAAC,CACV,CAAA;IAED;;OAEG;IACH,KAAY,OAAO,CACjB,OAAO,SAAS,cAAc,CAAC,OAAO,IACpC,KAAK,CAAC,mBAAmB,CAC3B;SACG,CAAC,IAAI,MAAM,OAAO,GAAG;YACpB,QAAQ,EAAE,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;SACvF;KACF,CAAC,MAAM,CAAC,CACV,CAAA;IAED;;OAEG;IACH,KAAY,OAAO,CAAC,OAAO,SAAS,cAAc,CAAC,OAAO,IAAI;SAC3D,CAAC,IAAI,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;KAC9F,CAAC,MAAM,CAAC,CAAA;CACV;AAED;;GAEG;AACH,MAAM,CAAC,OAAO,WAAW,WAAW,CAAC;IACnC;;OAEG;IACH,KAAY,IAAI,CAAC,MAAM,SAAS,MAAM,CAAC,MAAM,EAAE,OAAO,SAAS,cAAc,CAAC,OAAO,IACjF,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GACnB,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IAEhC;;OAEG;IACH,KAAY,OAAO,CAAC,MAAM,SAAS,MAAM,CAAC,MAAM,EAAE,OAAO,SAAS,cAAc,CAAC,OAAO,IACpF,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,GACtB,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;IAEnC;;OAEG;IACH,KAAY,WAAW,CAAC,MAAM,SAAS,MAAM,CAAC,MAAM,EAAE,OAAO,SAAS,cAAc,CAAC,OAAO,IACxF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,GAC1B,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;CACjC;AAED;;;GAGG;AACH,MAAM,WAAW,WAAW,CAC1B,MAAM,SAAS,MAAM,CAAC,MAAM,EAC5B,OAAO,SAAS,cAAc,CAAC,OAAO,CACtC,SACA,cAAc,CACZ,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,EAC5B,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,EACjD,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,EAClD,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,GACtB,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAClC;IAED,QAAQ,CAAC,MAAM,EAAE;QAAE,QAAQ,EAAE,CAAC,IAAI,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;KAAE,CAAA;IAC5D,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAA;IACnC,WAAW,CACT,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,GACjF,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;IAC/B,IAAI,CACF,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,GAC9D,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAA;CACrD;AAoID;;;GAGG;AACH,MAAM,WAAW,MAAM,CAAC,MAAM,SAAS,MAAM,CAAC,MAAM,CAAE,SAAQ,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC;IACnF,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA;CAClG;AAED;;;GAGG;AACH,wBAAgB,MAAM,CAAC,MAAM,SAAS,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,OAAO,SAAS,cAAc,CAAC,eAAe,EACvG,MAAM,EAAE,MAAM,EACd,GAAG,OAAO,EAAE,OAAO,GAClB,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;AAC/B,wBAAgB,MAAM,CAAC,MAAM,SAAS,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA;AAQpF;;;GAGG;AACH,MAAM,WAAW,OAAO,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,CAAC,SAAS,MAAM,CAAC,GAAG,CAAE,SAAQ,WAAW,CAAC,EAAE,EAAE,CAAC;IAAE,GAAG,EAAE,CAAC,CAAC;IAAC,KAAK,EAAE,CAAC,CAAA;CAAE,CAAC,CAAC;IAClH,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAA;IACf,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;IACjB,WAAW,CACT,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;QAAE,GAAG,EAAE,CAAC,CAAC;QAAC,KAAK,EAAE,CAAC,CAAA;KAAE,CAAC,CAAC,CAAC,CAAC,GAC5F,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;CACjB;AAeD;;;GAGG;AACH,eAAO,MAAM,MAAM,oDAAqD,CAAC,SAAS,CAAC,KAAG,QAAQ,CAAC,EAAE,CAAC,CACrE,CAAA;AAE7B;;;GAGG;AACH,eAAO,MAAM,IAAI,+DAAkE,IAAI,eAE/E,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KACpB,YAAY,MAAM,QAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,QAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAC9D,CAAA;AAEhC;;;GAGG;AACH,eAAO,MAAM,IAAI,+DAAkE,IAAI,eAE/E,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KACpB,YAAY,MAAM,QAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,QAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAC9D,CAAA;AAEhC;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AACH,eAAO,MAAM,KAAK,EAAE;IAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,MAAM,CAAC,GAAG,MAAM,CAAC,EAChC,GAAG,EAAE,CAAC,GACL,CAAC,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAAE,EAAE,CAAC,CAAC,CAAA;IAC/E,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,MAAM,CAAC,GAAG,MAAM,CAAC,EACnC,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACvB,GAAG,EAAE,CAAC,GACL,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAAE,EAAE,CAAC,CAAC,CAAA;CAkBhD,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,WAAW,CAAC,CAAC,SAAS,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CACjE,SAAQ,cAAc,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAErD,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;CAC/B;AAED;;;GAGG;AACH,MAAM,WAAW,KAAK,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,CAAC,SAAS,MAAM,GAAG,MAAM,CACpE,SAAQ,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAEpF,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;CACrF;AAaD;;;;;;;;;;;;;;;;;;GAkBG;AACH,eAAO,MAAM,KAAK,oEACT,CAAC,gBACM,kBAAkB,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,YAEtD,CAAC,KAAG,MAAM,CAAC,EAAE,CAAC,CAepB,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,OAAO,EAAE;IACpB,CAAC,KAAK,CAAC,OAAO,SAAS;QAAE,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAA;KAAE,GAAG,SAAS,EACzD,OAAO,CAAC,EAAE,OAAO,GAChB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EACT,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAClB,WAAW,CACd;SAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,SAAS,GAAG,KAAK,CAAC;KAAE,EAC/E;SAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,SAAS,GAAG,KAAK,CAAC;KAAE,EAC/E,CAAC,CACF,CAAA;IACD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,SAAS;QAAE,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAA;KAAE,GAAG,SAAS,EAClE,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACrB,OAAO,CAAC,EAAE,OAAO,GAChB,WAAW,CACZ;SAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,SAAS,GAAG,KAAK,CAAC;KAAE,EAC/E;SAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,SAAS,GAAG,KAAK,CAAC;KAAE,EAC/E,CAAC,CACF,CAAA;CAI+E,CAAA;AAElF;;;GAGG;AACH,eAAO,MAAM,QAAQ,kBACb,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,iFACkF,CAAA;AAEzG;;;GAGG;AACH,MAAM,WAAW,OAAO,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,CAAE,SAC7C,cAAc,CACZ,OAAO,CAAC,CAAC,CAAC,EACV,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAC/B,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAClC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAClB;CACD;AAEF;;;;;;;GAOG;AACH,eAAO,MAAM,OAAO,iCAAkC,CAAC,KAAG,QAAQ,CAAC,CAAkC,CAAA;AAyIrG;;;GAGG;AACH,MAAM,WAAW,MAAM,CAAC,IAAI,SAAS,MAAM,CAAC,GAAG,EAAE,IAAI,SAAS,MAAM,CAAC,GAAG,CAAE,SACxE,cAAc,CACZ,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,EAClB,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EACrD,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAC3D,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAC5C;CACD;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AACH,eAAO,MAAM,MAAM,EAAE;IACnB,CAAC,IAAI,SAAS,MAAM,CAAC,GAAG,EACtB,IAAI,EAAE,IAAI,GACT,CAAC,IAAI,SAAS,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;IAC9D,CAAC,IAAI,SAAS,MAAM,CAAC,GAAG,EAAE,IAAI,SAAS,MAAM,CAAC,GAAG,EAC/C,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,GACT,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;CAOtB,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,OAAO,EAAE;IACpB,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,EACpB,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GACnB,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAA;IAChE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EACP,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GACnB,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAA;IAC7E,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EACP,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACpB,OAAO,CAAC,EAAE;QAAE,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAA;KAAE,GAClC,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAA;IAChE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EACP,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACpB,OAAO,EAAE;QAAE,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAA;KAAE,GAClC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAA;IAEnE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,EAC3B,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACtB,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GACnB,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAA;IAC7B,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAC3B,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACtB,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GACnB,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAA;IAC7B,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EACd,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACtB,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACpB,OAAO,CAAC,EAAE;QAAE,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAA;KAAE,GAClC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAA;IAC7B,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EACjB,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACtB,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACpB,OAAO,EAAE;QAAE,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAA;KAAE,GAClC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAA;CAK9B,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,SAAQ,cAAc,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;CAAG;AAEtF;;;GAGG;AACH,eAAO,MAAM,OAAO,eAAgB,MAAM,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAyC,CAAA;AAEpH;;;GAGG;AACH,MAAM,WAAW,MAAM,CAAC,CAAC,EAAE,IAAI,SAAS,MAAM,CAAC,GAAG,CAChD,SAAQ,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAEtF,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAA;IACnB,QAAQ,CAAC,MAAM,EAAE,CACf,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EACpB,OAAO,EAAE,YAAY,EACrB,IAAI,EAAE,GAAG,CAAC,UAAU,KACjB,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAAA;IAC3C,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;CAC9B;AAyBD;;;GAGG;AACH,MAAM,WAAW,MAAM,CAAC,IAAI,SAAS,MAAM,CAAC,GAAG,CAAE,SAAQ,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;CAAG;AAE3F;;;GAGG;AACH,wBAAgB,MAAM,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,EACpD,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,GAAG,CAAC,UAAU,KAAK,CAAC,IAAI,CAAC,EACzE,WAAW,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GACzC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;AAClE,wBAAgB,MAAM,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,EACzC,SAAS,EAAE,CACT,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAChC,OAAO,EAAE,YAAY,EACrB,IAAI,EAAE,GAAG,CAAC,UAAU,KACjB,SAAS,GAAG,OAAO,GAAG,MAAM,GAAG,WAAW,CAAC,UAAU,EAC1D,WAAW,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAC9D,CAAC,IAAI,EAAE,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAA;AA+BzB;;;GAGG;AACH,MAAM,WAAW,eAAe,CAAC,IAAI,SAAS,MAAM,CAAC,GAAG,EAAE,EAAE,SAAS,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,KAAK,CAAE,SAC1F,cAAc,CACZ,eAAe,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EAC5B,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EACf,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EACpB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAC9C;IAED,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAA;IACnB,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAA;CAChB;AAuBD;;;;;;GAMG;AACH,eAAO,MAAM,eAAe,EAAE;IAC5B,CAAC,EAAE,SAAS,MAAM,CAAC,GAAG,EAAE,IAAI,SAAS,MAAM,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EACrD,EAAE,EAAE,EAAE,EACN,OAAO,EAAE;QACP,QAAQ,CAAC,MAAM,EAAE,CACf,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EACxB,OAAO,EAAE,YAAY,EACrB,GAAG,EAAE,GAAG,CAAC,cAAc,KACpB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;QAClE,QAAQ,CAAC,MAAM,EAAE,CACf,GAAG,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EACvB,OAAO,EAAE,YAAY,EACrB,GAAG,EAAE,GAAG,CAAC,cAAc,KACpB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;QACjE,QAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,CAAA;KACvB,GAAG;QACF,QAAQ,CAAC,MAAM,EAAE,CACf,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EACxB,OAAO,EAAE,YAAY,EACrB,GAAG,EAAE,GAAG,CAAC,cAAc,KACpB,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,WAAW,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;QACvD,QAAQ,CAAC,MAAM,EAAE,CACf,GAAG,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EACvB,OAAO,EAAE,YAAY,EACrB,GAAG,EAAE,GAAG,CAAC,cAAc,KACpB,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,WAAW,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;QACvD,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAA;KACvB,GACA,CAAC,IAAI,EAAE,IAAI,KAAK,eAAe,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAA;IACrD,CAAC,EAAE,SAAS,MAAM,CAAC,GAAG,EAAE,IAAI,SAAS,MAAM,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EACrD,IAAI,EAAE,IAAI,EACV,EAAE,EAAE,EAAE,EACN,OAAO,EAAE;QACP,QAAQ,CAAC,MAAM,EAAE,CACf,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EACxB,OAAO,EAAE,YAAY,EACrB,GAAG,EAAE,GAAG,CAAC,cAAc,KACpB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;QAClE,QAAQ,CAAC,MAAM,EAAE,CACf,GAAG,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EACvB,OAAO,EAAE,YAAY,EACrB,GAAG,EAAE,GAAG,CAAC,cAAc,KACpB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;QACjE,QAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,CAAA;KACvB,GAAG;QACF,QAAQ,CAAC,MAAM,EAAE,CACf,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EACxB,OAAO,EAAE,YAAY,EACrB,GAAG,EAAE,GAAG,CAAC,cAAc,KACpB,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,WAAW,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;QACvD,QAAQ,CAAC,MAAM,EAAE,CACf,GAAG,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EACvB,OAAO,EAAE,YAAY,EACrB,GAAG,EAAE,GAAG,CAAC,cAAc,KACpB,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,WAAW,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;QACvD,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAA;KACvB,GACA,eAAe,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAA;CAyBnC,CAAA;AAEJ;;;GAGG;AACH,MAAM,WAAW,SAAS,CAAC,IAAI,SAAS,MAAM,CAAC,GAAG,EAAE,EAAE,SAAS,MAAM,CAAC,GAAG,CAAE,SAAQ,eAAe,CAAC,IAAI,EAAE,EAAE,CAAC;IAC1G,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;CACnF;AAED;;;;;;GAMG;AACH,eAAO,MAAM,SAAS,EAAE;IACtB,CAAC,EAAE,SAAS,MAAM,CAAC,GAAG,EAAE,IAAI,SAAS,MAAM,CAAC,GAAG,EAC7C,EAAE,EAAE,EAAE,EACN,OAAO,EAAE;QACP,QAAQ,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;QACjE,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC/D,QAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,CAAA;KACvB,GAAG;QACF,QAAQ,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,OAAO,CAAA;QACtD,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,OAAO,CAAA;QACrD,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAA;KACvB,GACA,CAAC,IAAI,EAAE,IAAI,KAAK,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;IACtC,CAAC,EAAE,SAAS,MAAM,CAAC,GAAG,EAAE,IAAI,SAAS,MAAM,CAAC,GAAG,EAC7C,IAAI,EAAE,IAAI,EACV,EAAE,EAAE,EAAE,EACN,OAAO,EAAE;QACP,QAAQ,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;QACjE,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC/D,QAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,CAAA;KACvB,GAAG;QACF,QAAQ,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,OAAO,CAAA;QACtD,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,OAAO,CAAA;QACrD,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAA;KACvB,GACA,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;CAmBvB,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAE,SAAQ,SAAS,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC;CAAG;AAErH;;;;;;;;;;;;GAYG;AACH,eAAO,MAAM,gBAAgB,0EACrB,OAAO,MACT,IAAI,KACP,iBAAiB,IAAI,EAAE,OAAO,CAAoF,CAAA;AAErH;;;;;;;;;;;;;;;;GAgBG;AACH,wBAAgB,iBAAiB,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC,YAAY,EAAE,EAAE,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC,EACpH,GAAG,KAAK,EAAE,CAAC,GACV,KAAK,CAAC;IAAE,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAAE,CAAC,CAAA;AAC1E,wBAAgB,iBAAiB,CAAC,OAAO,SAAS,GAAG,CAAC,YAAY,EAAE,IAAI,SAAS,GAAG,CAAC,YAAY,EAC/F,KAAK,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,GACrB,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;AAClC,wBAAgB,iBAAiB,CAC/B,KAAK,CAAC,CAAC,SAAS,aAAa,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC,YAAY,EAAE,EAAE,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC,EACtF,GAAG,KAAK,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AAOlD;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AACH,eAAO,MAAM,uBAAuB,EAAE;IACpC,CAAC,CAAC,SAAS,WAAW,EAAE,CAAC,SAAS,GAAG,CAAC,YAAY,GAAG,MAAM,EAAE,CAAC,EAC5D,GAAG,EAAE,CAAC,EACN,KAAK,EAAE,CAAC,EACR,WAAW,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG;QAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;KAAE,CAAC,CAAC,GAC7E,CAAC,CAAC,EAAE,CAAC,EACN,MAAM,EAAE,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KACzB,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG;QAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;KAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAC/D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,WAAW,EAAE,CAAC,SAAS,GAAG,CAAC,YAAY,GAAG,MAAM,EAClE,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACvB,GAAG,EAAE,CAAC,EACN,KAAK,EAAE,CAAC,EACR,WAAW,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG;QAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;KAAE,CAAC,CAAC,GAC7E,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG;QAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;KAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;CA8BnE,CAAA;AAED;;;GAGG;AACH,MAAM,CAAC,OAAO,WAAW,WAAW,CAAC;IACnC;;;OAGG;IACH,UAAiB,GAAG,CAAC,CAAC,CAAE,SAAQ,GAAG,CAAC,WAAW;QAC7C,QAAQ,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,eAAe,CAAA;QACpC,QAAQ,CAAC,WAAW,CAAC,EAAE,GAAG,CAAC,qBAAqB,CAAA;QAChD,QAAQ,CAAC,aAAa,CAAC,EAAE,GAAG,CAAC,uBAAuB,CAAA;QACpD,QAAQ,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAA;QAC7C,QAAQ,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAA;KAC5C;IAED;;OAEG;IACH,UAAiB,MAAM,CAAC,CAAC,EAAE,cAAc,SAAS,aAAa,CAAC,GAAG,CAAC,GAAG,SAAS,EAAE,CAAE,SAAQ,GAAG,CAAC,CAAC,CAAC;QAChG,QAAQ,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,oBAAoB,CAAA;QAC9C,QAAQ,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,iBAAiB,CAAA;QACxC,QAAQ,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,cAAc,GAAG;YAAE,EAAE,EAAE,GAAG,CAAC,cAAc,CAAC;YAAC,UAAU,EAAE,OAAO,CAAA;SAAE,CAAA;QACtF,QAAQ,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,oBAAoB,CAAA;QAC9C,QAAQ,CAAC,SAAS,CAAC,EAAE,CACnB,GAAG,WAAW,EAAE;YAAE,QAAQ,EAAE,CAAC,IAAI,MAAM,cAAc,GAAG,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;SAAE,KACvF,aAAa,CAAC,CAAC,CAAC,CAAA;QACrB,QAAQ,CAAC,MAAM,CAAC,EAAE,CAChB,GAAG,QAAQ,EAAE;YAAE,QAAQ,EAAE,CAAC,IAAI,MAAM,cAAc,GAAG,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;SAAE,KACrF,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACtB,QAAQ,CAAC,WAAW,CAAC,EAAE,CACrB,GAAG,YAAY,EAAE;YAAE,QAAQ,EAAE,CAAC,IAAI,MAAM,cAAc,GAAG,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;SAAE,KAClG,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;QAC/B,QAAQ,CAAC,WAAW,CAAC,EAAE,GAAG,CAAC,qBAAqB,CAAA;QAChD,QAAQ,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,kBAAkB,CAAA;QAC1C,QAAQ,CAAC,eAAe,CAAC,EAAE,GAAG,CAAC,yBAAyB,CAAA;KACzD;IAED;;OAEG;IACH,UAAiB,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAE,SAAQ,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;KAAG;CACrE;AAED;;;GAGG;AACH,eAAO,MAAM,WAAW,EAAE;IACxB,CAAC,CAAC,SAAS,SAAS,CAAC,GAAG,EAAE,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IAC1G,CAAC,CAAC,SAAS,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;CAIvG,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,OAAO,YAAa,IAAI,iBAAiB,qCAAqC,CAAC,KAAG,UAAU,IAAI,CAAC,CAAC,CACrD,CAAA;AAE1D;;;GAGG;AACH,eAAO,MAAM,UAAU,eACR,IAAI,oBAAoB,qCAAqC,CAAC,KAAG,UAAU,IAAI,CAAC,CAAC,CAC9B,CAAA;AAElE;;;GAGG;AACH,eAAO,MAAM,KAAK,UAAW,IAAI,eAAe,qCAAqC,CAAC,KAAG,UAAU,IAAI,CAAC,CAAC,CACnD,CAAA;AAEtD;;;GAGG;AACH,eAAO,MAAM,WAAW,gBACR,IAAI,qBAAqB,qCAAqC,CAAC,KAAG,UAAU,IAAI,CAAC,CAAC,CAC9B,CAAA;AAEpE;;;GAGG;AACH,eAAO,MAAM,QAAQ,gGACmE,CAAC,KAAG,UAAU,IAAI,CAAC,CAAC,CAC9C,CAAA;AAE9D,QAAA,MAAM,QAAQ,mCAAoC,OAAO,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,KAAG,UAAU,IAAI,CAAC,CAAC,CACxC,CAAA;AAExD,OAAO;AACL;;;GAGG;AACH,QAAQ,IAAI,OAAO,EACpB,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,aAAa,kBACR,IAAI,uBAAuB,qCAAqC,CAAC,KAAG,UAAU,IAAI,CAAC,CAAC,CAC9B,CAAA;AAExE;;;;;;;GAOG;AACH,eAAO,MAAM,UAAU,eACR,IAAI,oBAAoB,qCAAqC,CAAC,KAAG,UAAU,IAAI,CAAC,CAAC,CAC9B,CAAA;AAElE;;;GAGG;AACH,eAAO,MAAM,WAAW,yCACiB,YAAY,WAAW,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAG,UAAU,IAAI,CAAC,CAAC,CACnC,CAAA;AAE7E;;;GAGG;AACH,eAAO,MAAM,WAAW,gBACR,IAAI,qBAAqB,qCAAqC,CAAC,KAAG,UAAU,IAAI,CAAC,CAAC,CAC9B,CAAA;AAEpE;;;GAGG;AACH,eAAO,MAAM,QAAQ,aAAc,IAAI,kBAAkB,qCAAqC,CAAC,KAAG,UAAU,IAAI,CAAC,CAAC,CACtD,CAAA;AAE5D;;;GAGG;AACH,eAAO,MAAM,eAAe,MACtB,IAAI,yBAAyB,qCAAqC,CAAC,KAAG,UAAU,IAAI,CAAC,CAAC,CAC9B,CAAA;AAE9D,KAAK,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI;KAEhB,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,GAC/D,KAAK,GACL,CAAC,GACJ,CAAC,CAAC,CAAC,CAAC;CACR,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,MAAM,EAAE;IACnB,CACE,CAAC,EACD,KAAK,CAAC,CAAC,SACH;QAAE,QAAQ,EAAE,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,WAAW;KAAE,GACzC;QAAE,QAAQ,EAAE,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,KAAK;KAAE,EAExD,OAAO,EAAE,CAAC,GACT,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IACnF,CACE,CAAC,EACD,CAAC,EACD,CAAC,EACD,KAAK,CAAC,CAAC,SACH;QAAE,QAAQ,EAAE,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,WAAW;KAAE,GACzC;QAAE,QAAQ,EAAE,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,KAAK;KAAE,EAExD,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACrB,OAAO,EAAE,CAAC,GACT,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;CAcnD,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,aAAa,EAAE,OAAO,MAAoD,CAAA;AAEvF;;;;;;;;GAQG;AACH,eAAO,MAAM,OAAO,mCACe,YAAY,MAAM,CAAC,CAAC,CAAC,kBAAkB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAQ7G,CAAA;AAEL;;;GAGG;AACH,eAAO,MAAM,eAAe,EAAE,OAAO,MAAiC,CAAA;AAEtE;;;GAGG;AACH,MAAM,MAAM,eAAe,GAAG,OAAO,eAAe,CAAA;AAEpD;;;GAGG;AACH,eAAO,MAAM,SAAS,gCACT,MAAM,gBACH,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAWlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,eAAe,EAAE,OAAO,MAAiC,CAAA;AAEtE;;;GAGG;AACH,MAAM,MAAM,eAAe,GAAG,OAAO,eAAe,CAAA;AAEpD;;;GAGG;AACH,eAAO,MAAM,SAAS,gCACT,MAAM,gBACH,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAWlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,aAAa,EAAE,OAAO,MAAoD,CAAA;AAEvF;;;GAGG;AACH,eAAO,MAAM,OAAO,4BACX,MAAM,gBACC,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAkBpD,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,gBAAgB,EAAE,OAAO,MAAuD,CAAA;AAE7F;;;GAGG;AACH,eAAO,MAAM,UAAU,iCACT,MAAM,gBACJ,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAWlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,cAAc,EAAE,OAAO,MAAqD,CAAA;AAEzF;;;GAGG;AACH,eAAO,MAAM,QAAQ,+BACT,MAAM,gBACF,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAWlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,cAAc,EAAE,OAAO,MAAqD,CAAA;AAEzF;;;GAGG;AACH,eAAO,MAAM,QAAQ,mCACL,MAAM,gBACN,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAWlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,gBAAgB,EAAE,OAAO,MAAuD,CAAA;AAE7F;;;;;GAKG;AACH,eAAO,MAAM,UAAU,mCACY,YAAY,MAAM,CAAC,CAAC,CAAC,kBAAkB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAO7G,CAAA;;AAEL;;;GAGG;AACH,qBAAa,UAAW,SAAQ,eAE/B;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,UAAU,CAAoB;CAChH;AAED;;;GAGG;AACH,eAAO,MAAM,gBAAgB,EAAE,OAAO,MAAuD,CAAA;AAE7F;;;;;GAKG;AACH,eAAO,MAAM,UAAU,mCACY,YAAY,MAAM,CAAC,CAAC,CAAC,kBAAkB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAO7G,CAAA;;AAEL;;;GAGG;AACH,qBAAa,UAAW,SAAQ,eAE/B;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,UAAU,CAAoB;CAChH;AAED;;;GAGG;AACH,eAAO,MAAM,YAAY,EAAE,OAAO,MAA8B,CAAA;AAEhE;;;GAGG;AACH,MAAM,MAAM,YAAY,GAAG,OAAO,YAAY,CAAA;AAE9C;;;GAGG;AACH,eAAO,MAAM,MAAM,6BACT,MAAM,GAAG;IAAE,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC;IAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAA;CAAE,gBACjD,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAqBpD,CAAA;;AAED;;;;;GAKG;AACH,qBAAa,IAAK,SAAQ,SAA+C;IACvE,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,IAAI,CAAoB;CAC1G;AAED;;;GAGG;AACH,eAAO,MAAM,QAAQ,mCACL,YAAY,MAAM,CAAC,CAAC,CAAC,6DAKjC,CAAA;;AAEJ;;;;;GAKG;AACH,qBAAa,SAAU,SAAQ,cAIW;IACxC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,SAAS,CAAoB;CAC/G;;AAED;;;;;GAKG;AACH,qBAAa,SAAU,SAAQ,cAIW;IACxC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,SAAS,CAAoB;CAC/G;;AAED;;;GAGG;AACH,qBAAa,OAAQ,SAAQ,YAE5B;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,OAAO,CAAoB;CAC7G;;AAED;;;;;GAKG;AACH,qBAAa,IAAK,SAAQ,SAIW;IACnC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,IAAI,CAAoB;CAC1G;AAED;;;;;GAKG;AACH,eAAO,MAAM,KAAK,cAAe,MAAM,KAAG,UAAU,cAAc,EAAE,OAAO,cAAc,CAAC,CAKvF,CAAA;AAEH;;GAEG;AACH,MAAM,MAAM,gBAAgB,GAAG;IAC7B,QAAQ,CAAC,OAAO,CAAC,EAAE,UAAU,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;IACnD,QAAQ,CAAC,QAAQ,CAAC,EAAE,UAAU,CAAC,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;IACxD,QAAQ,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;CACtD,CAAA;AAQD;;;;;;;;;;;;;;;;GAgBG;AACH,eAAO,MAAM,SAAS,EAAE;IACtB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,gBAAgB,GAAG,WAAW,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAA;IACzF,CAAC,OAAO,CAAC,EAAE,gBAAgB,GAAG,WAAW,CAAC,OAAO,EAAE,MAAM,CAAC,CAAA;CAsB3D,CAAA;;AAED;;;GAGG;AACH,qBAAa,QAAS,SAAQ,aAE7B;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,QAAQ,CAAoB;CAC9G;AAED;;;GAGG;AACH,eAAO,MAAM,UAAU,EAAE,OAAO,MAAiD,CAAA;;AAIjF;;;;;;;GAOG;AACH,qBAAa,IAAK,SAAQ,SAQzB;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,IAAI,CAAoB;CAC1G;AAED;;;GAGG;AACH,eAAO,MAAM,UAAU,EAAE,OAAO,MAAiD,CAAA;;AAIjF;;;;;;;;GAQG;AACH,qBAAa,IAAK,SAAQ,SAQzB;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,IAAI,CAAoB;CAC1G;AAED;;;GAGG;AACH,eAAO,MAAM,YAAY,EAAE,OAAO,MAAmD,CAAA;AAErF;;;;;;;GAOG;AACH,eAAO,MAAM,MAAM,mCACgB,YAAY,MAAM,CAAC,CAAC,CAAC,kBAAkB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAO7G,CAAA;AAEL;;;GAGG;AACH,eAAO,MAAM,iBAAiB,EAAE,OAAO,MAAmC,CAAA;AAE1E;;;GAGG;AACH,MAAM,MAAM,iBAAiB,GAAG,OAAO,iBAAiB,CAAA;AAExD;;;;;GAKG;AACH,eAAO,MAAM,WAAW,0BACjB,MAAM,gBACG,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAQlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,0BAA0B,EAAE,OAAO,MAA4C,CAAA;AAE5F;;;GAGG;AACH,MAAM,MAAM,0BAA0B,GAAG,OAAO,0BAA0B,CAAA;AAE1E;;;;;GAKG;AACH,eAAO,MAAM,oBAAoB,0BAC1B,MAAM,gBACG,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAQlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,gBAAgB,EAAE,OAAO,MAAuD,CAAA;AAE7F;;;GAGG;AACH,eAAO,MAAM,UAAU,8BACZ,MAAM,gBACD,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAQlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,SAAS,EAAE,OAAO,MAA2B,CAAA;AAE1D;;;GAGG;AACH,MAAM,MAAM,SAAS,GAAG,OAAO,SAAS,CAAA;AAExC;;;GAGG;AACH,eAAO,MAAM,GAAG,mCACmB,YAAY,MAAM,CAAC,CAAC,CAAC,kBAAkB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAS7G,CAAA;AAEL;;;GAGG;AACH,eAAO,MAAM,cAAc,EAAE,OAAO,MAAgC,CAAA;AAEpE;;;GAGG;AACH,MAAM,MAAM,cAAc,GAAG,OAAO,cAAc,CAAA;AAElD;;;;;GAKG;AACH,eAAO,MAAM,QAAQ,0BACK,MAAM,gBAAgB,YAAY,MAAM,CAAC,CAAC,CAAC,kBACtD,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAQlD,CAAA;AAEL;;;GAGG;AACH,eAAO,MAAM,uBAAuB,EAAE,OAAO,MAAyC,CAAA;AAEtF;;;GAGG;AACH,MAAM,MAAM,uBAAuB,GAAG,OAAO,uBAAuB,CAAA;AAEpE;;;;;GAKG;AACH,eAAO,MAAM,iBAAiB,0BACvB,MAAM,gBACG,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAQlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,aAAa,EAAE,OAAO,MAA+B,CAAA;AAElE;;;GAGG;AACH,MAAM,MAAM,aAAa,GAAG,OAAO,aAAa,CAAA;AAEhD;;;;;GAKG;AACH,eAAO,MAAM,OAAO,0BACb,MAAM,OACN,MAAM,gBACG,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAQlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,YAAY,EAAE,OAAO,MAAmD,CAAA;AAErF;;;GAGG;AACH,eAAO,MAAM,MAAM,mCACgB,YAAY,MAAM,CAAC,CAAC,CAAC,kBAAkB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAO7G,CAAA;AAEL;;;GAGG;AACH,eAAO,MAAM,QAAQ,mCACL,YAAY,MAAM,CAAC,CAAC,CAAC,6DACqD,CAAA;AAE1F;;;GAGG;AACH,eAAO,MAAM,QAAQ,mCACL,YAAY,MAAM,CAAC,CAAC,CAAC,6DACkD,CAAA;AAEvF;;;GAGG;AACH,eAAO,MAAM,WAAW,mCACR,YAAY,MAAM,CAAC,CAAC,CAAC,6DAC2D,CAAA;AAEhG;;;GAGG;AACH,eAAO,MAAM,WAAW,mCACR,YAAY,MAAM,CAAC,CAAC,CAAC,6DAC8D,CAAA;AAEnG;;;;;GAKG;AACH,eAAO,MAAM,KAAK,YACN,MAAM,WAAW,MAAM,oCACF,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,UAAU,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,CAK1F,CAAA;AAEL;;;;;;;;;GASG;AACH,eAAO,MAAM,WAAW,iCAChB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KACpB,gBAAgB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,cAAc,CAS/C,CAAA;;AAEH;;;;;;;;;GASG;AACH,qBAAa,gBAAiB,SAAQ,qBAAoE;IACxG,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,gBAAgB,CAAoB;CACtH;;AAED;;;GAGG;AACH,qBAAa,MAAO,SAAQ,WAA+D;IACzF,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,MAAM,CAAoB;CAC5G;;AAED;;;GAGG;AACH,qBAAa,GAAI,SAAQ,QAAsD;IAC7E,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,GAAG,CAAoB;CACzG;;AAED;;;GAGG;AACH,qBAAa,MAAO,SAAQ,WAA+D;IACzF,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,MAAM,CAAoB;CAC5G;;AAED;;;GAGG;AACH,qBAAa,QAAS,SAAQ,aAE7B;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,QAAQ,CAAoB;CAC9G;;AAED;;;GAGG;AACH,qBAAa,QAAS,SAAQ,aAE7B;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,QAAQ,CAAoB;CAC9G;;AAED;;;GAGG;AACH,qBAAa,WAAY,SAAQ,gBAEhC;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,WAAW,CAAoB;CACjH;;AAED;;;GAGG;AACH,qBAAa,WAAY,SAAQ,gBAEhC;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,WAAW,CAAoB;CACjH;AAED;;;GAGG;AACH,eAAO,MAAM,gBAAgB,EAAE,OAAO,MAAuD,CAAA;;AAE7F;;;;;;;;;;;;;;;;;GAiBG;AACH,qBAAa,UAAW,SAAQ,eAQ/B;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,UAAU,CAAoB;CAChH;;AAED;;;GAGG;AACH,qBAAa,GAAI,SAAQ,QAA6E;IACpG,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,OAAO,GAAG,CAAoB;CAC1G;;AAED,cAAc;AACd,cAAM,OAAQ,SAAQ,YAIiB;IACrC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,OAAO,CAAoB;CAC7G;AAED,OAAO;AACL;;;;;GAKG;AACH,OAAO,IAAI,MAAM,EAClB,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,uBAAuB,EAAE,OAAO,MAAyC,CAAA;AAEtF;;;GAGG;AACH,MAAM,MAAM,uBAAuB,GAAG,OAAO,uBAAuB,CAAA;AAEpE;;;GAGG;AACH,eAAO,MAAM,iBAAiB,0BACvB,MAAM,gBACG,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,gCAAgC,EAAE,OAAO,MAAkD,CAAA;AAExG;;;GAGG;AACH,MAAM,MAAM,gCAAgC,GAAG,OAAO,gCAAgC,CAAA;AAEtF;;;GAGG;AACH,eAAO,MAAM,0BAA0B,0BAChC,MAAM,gBACG,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CASlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,oBAAoB,EAAE,OAAO,MAAsC,CAAA;AAEhF;;;GAGG;AACH,MAAM,MAAM,oBAAoB,GAAG,OAAO,oBAAoB,CAAA;AAE9D;;;GAGG;AACH,eAAO,MAAM,cAAc,0BACpB,MAAM,gBACG,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,6BAA6B,EAAE,OAAO,MAA+C,CAAA;AAElG;;;GAGG;AACH,MAAM,MAAM,6BAA6B,GAAG,OAAO,6BAA6B,CAAA;AAEhF;;;GAGG;AACH,eAAO,MAAM,uBAAuB,0BAC7B,MAAM,gBACG,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,mBAAmB,EAAE,OAAO,MAAqC,CAAA;AAE9E;;;GAGG;AACH,MAAM,MAAM,mBAAmB,GAAG,OAAO,mBAAmB,CAAA;AAE5D;;;GAGG;AACH,eAAO,MAAM,aAAa,0BACnB,MAAM,OACN,MAAM,gBACG,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,cAAc,mCACX,YAAY,MAAM,CAAC,CAAC,CAAC,6DAC4D,CAAA;AAEjG;;;GAGG;AACH,eAAO,MAAM,cAAc,mCACX,YAAY,MAAM,CAAC,CAAC,CAAC,6DACyD,CAAA;AAE9F;;;GAGG;AACH,eAAO,MAAM,iBAAiB,mCACd,YAAY,MAAM,CAAC,CAAC,CAAC,6DACqE,CAAA;AAE1G;;;GAGG;AACH,eAAO,MAAM,iBAAiB,mCACd,YAAY,MAAM,CAAC,CAAC,CAAC,6DACkE,CAAA;AAEvG;;;;;GAKG;AACH,eAAO,MAAM,WAAW,YACZ,MAAM,WAAW,MAAM,oCACF,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,UAAU,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,CAK1F,CAAA;;AAEL,cAAc;AACd,cAAM,OAAQ,SAAQ,YAOiB;IACrC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,OAAO,CAAoB;CAC7G;AAED,OAAO;AACL;;;;;;;GAOG;AACH,OAAO,IAAI,MAAM,EAClB,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,sBAAsB,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAEzD,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAEzD,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,sBAAsB,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAEzD,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAEzD,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,yBAAyB,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAE5D,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,iBAAiB,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAE5D,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,yBAAyB,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAE5D,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,iBAAiB,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAE5D,CAAA;;AAED;;;;;;;GAOG;AACH,qBAAa,gBAAiB,SAAQ,qBAWW;IAC/C,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,OAAO,gBAAgB,CAAoB;CACtH;;AAED;;;GAGG;AACH,qBAAa,cAAe,SAAQ,mBAOnC;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,OAAO,cAAc,CACzF;CACf;;AAED;;;;;GAKG;AACH,qBAAa,MAAO,SAAQ,WAIW;IACrC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,OAAO,MAAM,CAAoB;CACpH;;AAED;;;GAGG;AACH,qBAAa,gBAAiB,SAAQ,qBAmBrC;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,OAAO,gBAAgB,CAC/F;CACf;;AAED;;;;;;GAMG;AACH,qBAAa,iBAAkB,SAAQ,sBAWW;IAChD,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,OAAO,iBAAiB,CAChG;CACf;;AAED;;;;;;GAMG;AACH,qBAAa,kBAAmB,SAAQ,uBAIW;IACjD,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,OAAO,kBAAkB,CAC5F;CACpB;;AAiBD;;;;;GAKG;AACH,qBAAa,QAAS,SAAQ,aAOW;IACvC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,OAAO,QAAQ,CACvF;CACf;AAED;;;;;GAKG;AACH,eAAO,MAAM,aAAa,YACd,UAAU,aAAa,WAAW,UAAU,aAAa,gDACxB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,UAAU,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,CAKtG,CAAA;AAEL;;;GAGG;AACH,eAAO,MAAM,sBAAsB,EAAE,OAAO,MAA6D,CAAA;AAEzG;;;GAGG;AACH,eAAO,MAAM,gBAAgB,sCACtB,UAAU,aAAa,gBACd,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,+BAA+B,EAAE,OAAO,MAEpD,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,yBAAyB,sCAC/B,UAAU,aAAa,gBACd,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,yBAAyB,EAAE,OAAO,MAAgE,CAAA;AAE/G;;;GAGG;AACH,eAAO,MAAM,mBAAmB,sCACzB,UAAU,aAAa,gBACd,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,kCAAkC,EAAE,OAAO,MAEvD,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,4BAA4B,sCAClC,UAAU,aAAa,gBACd,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,qBAAqB,EAAE,OAAO,MAA4D,CAAA;AAEvG;;;GAGG;AACH,eAAO,MAAM,eAAe,0CACjB,UAAU,aAAa,WACvB,UAAU,aAAa,gBAClB,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,kBAAkB,EAAE,MAAM,CAAC,UAAU,CAQjD,CAAA;AAED,QAAA,MAAM,WAAW,EAAE,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,MAAM,CAAC,CAShB,CAAA;AAE3C,OAAO;AACL;;;;;GAKG;AACH,WAAW,IAAI,UAAU,EAC1B,CAAA;AAoBD;;;GAGG;AACH,eAAO,MAAM,MAAM,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAI7C,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,SAAS,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAIhD,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,GAAG,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAI1C,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,cAAc,EAAE,OAAO,MAAgC,CAAA;AAEpE;;;GAGG;AACH,MAAM,MAAM,cAAc,GAAG,OAAO,cAAc,CAAA;AAElD;;;GAGG;AACH,eAAO,MAAM,QAAQ,SAChB,MAAM,gBACK,YAAY,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,kBAEvC,OAAO,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAQhF,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,cAAc,EAAE,OAAO,MAAgC,CAAA;AAEpE;;;GAGG;AACH,MAAM,MAAM,cAAc,GAAG,OAAO,cAAc,CAAA;AAElD;;;GAGG;AACH,eAAO,MAAM,QAAQ,SAChB,MAAM,gBACK,YAAY,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,kBAEvC,OAAO,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAQhF,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,gBAAgB,EAAE,OAAO,MAAkC,CAAA;AAExE;;;GAGG;AACH,MAAM,MAAM,gBAAgB,GAAG,OAAO,gBAAgB,CAAA;AAEtD;;;GAGG;AACH,eAAO,MAAM,UAAU,SAClB,MAAM,gBACK,YAAY,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,kBAEvC,OAAO,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAQhF,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,sBAAsB,gEAC3B,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KACpB,YAAY,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAA+C,CAAA;AAErF;;;;;GAKG;AACH,eAAO,MAAM,IAAI,kBAAmB,OAAO,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,YAAY,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAKrG,CAAA;AAEH;;;;;;;GAOG;AACH,eAAO,MAAM,UAAU,EAAE;IACvB,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAChG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;CAiB7F,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,eAAe,EAAE,OAAO,MAAsD,CAAA;AAE3F;;;;;GAKG;AACH,eAAO,MAAM,SAAS,iBACL,YAAY,MAAM,CAAC,IAAI,CAAC,kBAAkB,OAAO,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAOpG,CAAA;;AAEL;;;;;GAKG;AACH,qBAAa,YAAa,SAAQ,iBASjC;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,OAAO,YAAY,CAAoB;CAChH;;AAED;;;;;GAKG;AACH,qBAAa,iBAAkB,SAAQ,sBAKtC;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,OAAO,iBAAiB,CAAoB;CACrH;;AAED;;;;;GAKG;AACH,qBAAa,cAAe,SAAQ,mBAIW;IAC7C,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,OAAO,cAAc,CAAoB;CAClH;;AAED,cAAc;AACd,cAAM,KAAM,SAAQ,UAEnB;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,OAAO,KAAK,CAAoB;CACzG;AAED,OAAO;AACL;;;;;GAKG;AACH,KAAK,IAAI,IAAI,EACd,CAAA;;AAED;;;;;;GAMG;AACH,qBAAa,cAAe,SAAQ,mBAIW;IAC7C,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,OAAO,cAAc,CAAoB;CAClH;AAED;;;GAGG;AACH,MAAM,MAAM,aAAa,CAAC,CAAC,IACvB;IACA,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAA;CACtB,GACC;IACA,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAA;IACrB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;CAClB,CAAA;AA4CH;;;GAGG;AACH,MAAM,WAAW,cAAc,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SACxD,cAAc,CACZ,cAAc,CAAC,KAAK,CAAC,EACrB,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAClC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EACrC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACtB;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,cAAc,oCAClB,KAAK,KACX,eAAe,KAAK,CActB,CAAA;AAUD;;;GAGG;AACH,MAAM,WAAW,MAAM,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SAChD,cAAc,CACZ,MAAM,CAAC,KAAK,CAAC,EACb,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAClC,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EACpC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACtB;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,MAAM,oCAAqC,KAAK,KAAG,OAAO,KAAK,CAa3E,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,gBAAgB,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SAC1D,cAAc,CACZ,gBAAgB,CAAC,KAAK,CAAC,EACvB,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAClC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,EAC5B,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACtB;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,gBAAgB,oCACpB,KAAK,KACX,iBAAiB,KAAK,CAMxB,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,mBAAmB,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SAC7D,cAAc,CACZ,mBAAmB,CAAC,KAAK,CAAC,EAC1B,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAClC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,SAAS,EACxC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACtB;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,mBAAmB,oCACvB,KAAK,kBACI,IAAI,GAAG,SAAS,KAC/B,oBAAoB,KAAK,CAO3B,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,qBAAqB,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SAC/D,cAAc,CACZ,qBAAqB,CAAC,KAAK,CAAC,EAC5B,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAClC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,SAAS,EACjC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACtB;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,qBAAqB,oCACzB,KAAK,KACX,sBAAsB,KAAK,CAM7B,CAAA;AAED;;;GAGG;AACH,MAAM,MAAM,YAAY,CAAC,EAAE,IAAI;IAC7B,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAA;IACtB,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAA;CACnB,CAAA;AAED;;;GAGG;AACH,MAAM,MAAM,WAAW,CAAC,EAAE,IAAI;IAC5B,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAA;IACrB,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAA;CAClB,CAAA;AAED;;;GAGG;AACH,MAAM,MAAM,aAAa,CAAC,EAAE,EAAE,EAAE,IAAI,YAAY,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,EAAE,CAAC,CAAA;AAwDtE;;;GAGG;AACH,MAAM,WAAW,cAAc,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,CAAC,SAAS,MAAM,CAAC,GAAG,CAAE,SAC1E,cAAc,CACZ,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,EACpB,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAC9C,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EACpD,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CACtC;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,cAAc,gEAAiE;IAC1F,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAA;IAChB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;CAClB,KAAG,eAAe,CAAC,EAAE,CAAC,CActB,CAAA;AAWD;;;GAGG;AACH,MAAM,WAAW,MAAM,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,CAAC,SAAS,MAAM,CAAC,GAAG,CAAE,SAClE,cAAc,CACZ,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EACZ,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAC9C,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EACnD,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CACtC;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,MAAM,gEAAiE;IAClF,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAA;IAChB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;CAClB,KAAG,OAAO,CAAC,EAAE,CAAC,CAQd,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,eAAe,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,CAAC,SAAS,MAAM,CAAC,GAAG,CAAE,SAC3E,cAAc,CACZ,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,EACrB,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAC9C,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EACrC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CACtC;CACD;AAEF;;;;;;;;;GASG;AACH,eAAO,MAAM,eAAe,gEAAiE;IAC3F,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAA;IAChB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;CAClB,KAAG,gBAAgB,CAAC,EAAE,CAAC,CAevB,CAAA;AAqCD;;;GAGG;AACH,MAAM,WAAW,mBAAmB,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,CAAC,SAAS,MAAM,CAAC,GAAG,CAAE,SAC/E,cAAc,CACZ,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,EACzB,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAC3C,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EACjD,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CACtC;CACD;AAqBF;;;GAGG;AACH,eAAO,MAAM,mBAAmB,+DAAgE;IAC9F,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAA;IACf,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;CAClB,KAAG,oBAAoB,CAAC,EAAE,CAAC,CAA8E,CAAA;AAE1G;;;GAGG;AACH,MAAM,WAAW,WAAW,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,CAAC,SAAS,MAAM,CAAC,GAAG,CAAE,SACvE,cAAc,CACZ,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,EACjB,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EACnC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EACjD,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CACtC;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,WAAW,+DAAgE;IACtF,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAA;IACf,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;CAClB,KAAG,YAAY,CAAC,EAAE,CAAC,CAA6E,CAAA;AAEjG;;;GAGG;AACH,MAAM,WAAW,YAAY,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,CAAC,SAAS,MAAM,CAAC,GAAG,CAAE,SACxE,cAAc,CACZ,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAClB,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAC3C,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9D,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CACtC;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,WAAW,+DAAgE;IACtF,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAA;IACf,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;CAClB,KAAG,aAAa,CAAC,EAAE,CAAC,CAQpB,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,IAAI,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,CAAC,SAAS,MAAM,CAAC,GAAG,CAAE,SAChE,cAAc,CACZ,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EACV,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EACnC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9D,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CACtC;CACD;AAEF,QAAA,MAAM,GAAG,+DAAgE;IACvE,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAA;IACf,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;CAClB,KAAG,KAAK,CAAC,EAAE,CAAC,CAQZ,CAAA;AAED,OAAO;AACL;;;GAGG;AACH,GAAG,IAAI,GAAG,EACX,CAAA;AAuBD;;;GAGG;AACH,MAAM,WAAW,mBAAmB,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SAC7D,cAAc,CACZ,mBAAmB,CAAC,KAAK,CAAC,EAC1B,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAC/B,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAClC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACtB;CACD;AAiBF;;;GAGG;AACH,eAAO,MAAM,mBAAmB,oCAAqC,KAAK,KAAG,oBAAoB,KAAK,CAChD,CAAA;AAEtD;;;GAGG;AACH,MAAM,WAAW,WAAW,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SACrD,cAAc,CACZ,WAAW,CAAC,KAAK,CAAC,EAClB,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EACvB,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAClC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACtB;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,WAAW,oCAAqC,KAAK,KAAG,YAAY,KAAK,CACjC,CAAA;AAErD;;;GAGG;AACH,MAAM,WAAW,YAAY,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SACtD,cAAc,CACZ,YAAY,CAAC,KAAK,CAAC,EACnB,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAC/B,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EACpC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACtB;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,WAAW,oCAAqC,KAAK,KAAG,aAAa,KAAK,CAOtF,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,IAAI,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SAC9C,cAAc,CACZ,IAAI,CAAC,KAAK,CAAC,EACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EACvB,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EACpC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACtB;CACD;AAEF,QAAA,MAAM,GAAG,oCAAqC,KAAK,KAAG,KAAK,KAAK,CAO/D,CAAA;AAED,OAAO;AACL;;;GAGG;AACH,GAAG,IAAI,GAAG,EACX,CAAA;;AAQD;;;GAGG;AACH,qBAAa,kBAAmB,SAAQ,uBAQvC;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,OAAO,kBAAkB,CAChG;CACpB;;AAED;;;GAGG;AACH,qBAAa,UAAW,SAAQ,eAWW;IACzC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,OAAO,UAAU,CAC7F;CACf;;AAED;;;;;;GAMG;AACH,qBAAa,oBAAqB,SAAQ,yBAOW;IACnD,OAAgB,WAAW,EAAE,CAC3B,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,KACpD,OAAO,oBAAoB,CAAoB;CACrD;AAED;;;GAGG;AACH,eAAO,MAAM,2BAA2B,EAAE,OAAO,MAAkE,CAAA;AAEnH;;;GAGG;AACH,eAAO,MAAM,qBAAqB,0CAC3B,sBAAsB,gBACb,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,oCAAoC,EAAE,OAAO,MAEzD,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,8BAA8B,0CACpC,sBAAsB,gBACb,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,wBAAwB,EAAE,OAAO,MAA+D,CAAA;AAE7G;;;GAGG;AACH,eAAO,MAAM,kBAAkB,0CACxB,sBAAsB,gBACb,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,iCAAiC,EAAE,OAAO,MAEtD,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,2BAA2B,0CACjC,sBAAsB,gBACb,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,wBAAwB,EAAE,OAAO,MAE7C,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,kBAAkB,mDACf,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,0BAA0B,EAAE,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAK7E,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,2BAA2B,EAAE,OAAO,MAEhD,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,qBAAqB,mDAClB,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,6BAA6B,EAAE,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAKhF,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,wBAAwB,EAAE,OAAO,MAE7C,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,kBAAkB,mDACf,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,0BAA0B,EAAE,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAK7E,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,2BAA2B,EAAE,OAAO,MAEhD,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,qBAAqB,mDAClB,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,6BAA6B,EAAE,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAKhF,CAAA;AAED;;;GAGG;AACH,eAAO,MAAM,uBAAuB,EAAE,OAAO,MAA8D,CAAA;AAE3G;;;GAGG;AACH,eAAO,MAAM,iBAAiB,8CACnB,sBAAsB,WACtB,sBAAsB,gBACjB,YAAY,MAAM,CAAC,CAAC,CAAC,kBAExB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAOlD,CAAA;AAEH;;;;;GAKG;AACH,eAAO,MAAM,eAAe,YAChB,sBAAsB,WAAW,sBAAsB,oDAClB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,UAAU,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,CAK1G,CAAA;AAkBL;;;GAGG;AACH,MAAM,WAAW,aAAa,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SACvD,cAAc,CACZ,aAAa,CAAC,KAAK,CAAC,EACpB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAChC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EACnC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACtB;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,aAAa,oCAAqC,KAAK,KAAG,cAAc,KAAK,CAczF,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,KAAK,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SAC/C,cAAc,CACZ,KAAK,CAAC,KAAK,CAAC,EACZ,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAChC,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EACpC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACtB;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,KAAK,oCAAqC,KAAK,KAAG,MAAM,KAAK,CAOzE,CAAA;AAuBD;;;GAGG;AACH,eAAO,MAAM,YAAY,gIAKjB,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KACpB,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,CAYnB,CAAA;AAEH;;;GAGG;AACH,eAAO,MAAM,IAAI,gIAKT,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KACpB,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,CAKnB,CAAA;AAEH,KAAK,kBAAkB,CAAC,KAAK,SAAS,MAAM,EAAE,MAAM,SAAS,MAAM,GAAG,EAAE,IACtE,uDAAuD,KAAK,YAAY,MAAM,YAAY,CAAA;AAE5F,KAAK,YAAY,CAAC,CAAC,IAAI;KACpB,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC;CACpD,CAAC,MAAM,CAAC,CAAC,CAAA;AAEV;;;GAGG;AACH,MAAM,WAAW,KAAK,CAAC,IAAI,EAAE,MAAM,SAAS,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,CAClF,SAAQ,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAE1C,KACE,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC,SAAS,KAAK,GAAG,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EACpE,iBAAiB,CAAC,EAAE,OAAO,GAAG,SAAS,GACtC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,MAAM,MAAM,CAAC,GAAG,KAAK,CAAA;IAE9D,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IAE3F,QAAQ,CAAC,MAAM,EAAE;QAAE,QAAQ,EAAE,CAAC,IAAI,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;KAAE,CAAA;IAE5D,QAAQ,CAAC,UAAU,EAAE,MAAM,CAAA;IAE3B,MAAM,CAAC,QAAQ,GAAG,KAAK,EAAE,UAAU,CAAC,EAAE,MAAM,GAAG,SAAS,GAAG,CAAC,SAAS,SAAS,MAAM,CAAC,MAAM,EACzF,MAAM,EAAE,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,EACxC,WAAW,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,KACvC,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,kBAAkB,CAAC,aAAa,CAAC,GAC/D,KAAK,CACL,QAAQ,EACR,MAAM,GAAG,SAAS,EAClB,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,EAC7B,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,EAC7B,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,EACjC,IAAI,EACJ,KAAK,CACN,CAAA;IAEH,eAAe,CAAC,WAAW,GAAG,KAAK,EAAE,UAAU,CAAC,EAAE,MAAM,GAAG,SAAS,GAAG,CACrE,SAAS,SAAS,MAAM,CAAC,MAAM,EAC/B,EAAE,EACF,EAAE,EAEF,MAAM,EAAE,SAAS,EACjB,OAAO,EAAE;QACP,QAAQ,CAAC,MAAM,EAAE,CACf,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAC1C,OAAO,EAAE,YAAY,EACrB,GAAG,EAAE,GAAG,CAAC,cAAc,KACpB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;QAC/F,QAAQ,CAAC,MAAM,EAAE,CACf,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,EACtD,OAAO,EAAE,YAAY,EACrB,GAAG,EAAE,GAAG,CAAC,cAAc,KACpB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;KACpE,EACD,WAAW,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,KAC1C,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,kBAAkB,CAAC,gBAAgB,CAAC,GACrE,KAAK,CACL,WAAW,EACX,MAAM,GAAG,SAAS,EAClB,CAAC,EACD,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,EACvC,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,EACjC,IAAI,EACJ,KAAK,CACN,CAAA;IAEH,mBAAmB,CAAC,WAAW,GAAG,KAAK,EAAE,UAAU,CAAC,EAAE,MAAM,GAAG,SAAS,GAAG,CACzE,SAAS,SAAS,MAAM,CAAC,MAAM,EAC/B,EAAE,EACF,EAAE,EAEF,MAAM,EAAE,SAAS,EACjB,OAAO,EAAE;QACP,QAAQ,CAAC,MAAM,EAAE,CACf,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EACxB,OAAO,EAAE,YAAY,EACrB,GAAG,EAAE,GAAG,CAAC,cAAc,KACpB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;QAC7F,QAAQ,CAAC,MAAM,EAAE,CACf,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EACpD,OAAO,EAAE,YAAY,EACrB,GAAG,EAAE,GAAG,CAAC,cAAc,KACpB,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;KAClD,EACD,WAAW,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,KAC1C,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,kBAAkB,CAAC,oBAAoB,CAAC,GACzE,KAAK,CACL,WAAW,EACX,MAAM,GAAG,SAAS,EAClB,CAAC,EACD,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,EACvC,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,EACjC,IAAI,EACJ,KAAK,CACN,CAAA;CACJ;AAED,KAAK,SAAS,CAAC,MAAM,SAAS,MAAM,CAAC,MAAM,IAAI;IAC7C,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAA;CACxB,GAAG;IACF,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAA;CACjC,CAAA;AAgBD;;;GAGG;AACH,eAAO,MAAM,KAAK,8BAA+B,MAAM,GAAG,SAAS,8CAEvD,MAAM,GAAG,UAAU,MAAM,CAAC,gBACtB,kBAAkB,CAAC,IAAI,CAAC,KACrC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,mBAAmB,OAAO,CAAC,GACnD,MACA,IAAI,EACJ,MAAM,EACN,OAAO,OAAO,CAAC,MAAM,CAAC,EACtB,OAAO,OAAO,CAAC,MAAM,CAAC,EACtB,OAAO,WAAW,CAAC,MAAM,CAAC,EAC1B,EAAE,EACF,EAAE,CASF,CAAA;AAMJ;;;GAGG;AACH,MAAM,WAAW,WAAW,CAAC,IAAI,EAAE,GAAG,SAAS,MAAM,EAAE,MAAM,SAAS,MAAM,CAAC,MAAM,CAAE,SACnF,KAAK,CACH,IAAI,EACJ,MAAM,EACN,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EACtB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EACtB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,EACxC,EAAE,EACF,EAAE,CACH;IAED,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAA;CACnB;AAED;;;GAGG;AACH,eAAO,MAAM,WAAW,8BAA+B,MAAM,6DAEtD,GAAG,YACE,MAAM,GAAG,UAAU,MAAM,CAAC,gBACtB,kBAAkB,CAAC,IAAI,CAAC,KACrC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,mBAAmB,aAAa,EAAE,SAAS,CAAC,GACpE,YAAY,IAAI,EAAE,GAAG,EAAE;IAAE,QAAQ,CAAC,IAAI,EAAE,kBAAkB,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;CAAE,GAAG,MAAM,CAgB/G,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,gBAAgB,CAAC,IAAI,EAAE,GAAG,SAAS,MAAM,EAAE,MAAM,SAAS,MAAM,CAAC,MAAM,CAAE,SACxF,KAAK,CACH,IAAI,EACJ,MAAM,EACN,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EACtB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EACtB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,EACxC,EAAE,EACF,MAAM,CAAC,cAAc,CACtB;IAED,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAA;CACnB;AAED;;;GAGG;AACH,eAAO,MAAM,WAAW,8BAA+B,MAAM,6DAEtD,GAAG,YACE,MAAM,GAAG,UAAU,MAAM,CAAC,gBACtB,kBAAkB,CAAC,IAAI,CAAC,KACrC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,mBAAmB,aAAa,EAAE,SAAS,CAAC,GACpE,iBACA,IAAI,EACJ,GAAG,EACH;IAAE,QAAQ,CAAC,IAAI,EAAE,kBAAkB,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;CAAE,GAAG,MAAM,CA4BxF,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,aAAa,CAC5B,GAAG,SAAS,MAAM,EAClB,IAAI,EACJ,OAAO,EACP,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,kBAAkB,CAClB,SACA,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,EACnC,YAAY,CAAC,sBAAsB,CACjC,IAAI,EACJ,OAAO,EACP,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,kBAAkB,CACnB;IAED,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAA;CACnB;AAED;;;GAGG;AACH,MAAM,CAAC,OAAO,WAAW,aAAa,CAAC;IACrC;;;OAGG;IACH,KAAY,GAAG,GACX,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAC7D,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;CACtE;AAED;;;GAGG;AACH,MAAM,WAAW,kBAAkB,CACjC,IAAI,EACJ,GAAG,SAAS,MAAM,EAClB,MAAM,SAAS,MAAM,CAAC,MAAM,EAC5B,OAAO,SAAS,MAAM,CAAC,GAAG,EAC1B,OAAO,SAAS,MAAM,CAAC,GAAG,CAC1B,SACA,KAAK,CACH,IAAI,EACJ,MAAM,EACN,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EACtB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EACtB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,EACxC,aAAa,CACX,GAAG,EACH,IAAI,EACJ,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EACtB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EACtB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EACpB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EACvB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EACpB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EACvB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAClD,EACD,EAAE,CACH;IAED,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAA;CACnB;AAED;;;GAGG;AACH,eAAO,MAAM,aAAa,8BACI,MAAM,qHAE3B,GAAG,8CAGA,MAAM,gBACA,kBAAkB,CAAC,IAAI,CAAC;mBAKnB,kBAAkB,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC;6BAwB7E,CAAA;AA8MH;;;GAGG;AACH,MAAM,MAAM,cAAc,GACtB;IACA,QAAQ,CAAC,IAAI,EAAE,WAAW,CAAA;IAC1B,QAAQ,CAAC,IAAI,EAAE,cAAc,CAAA;IAC7B,QAAQ,CAAC,KAAK,EAAE,cAAc,CAAA;CAC/B,GACC;IACA,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAA;CACtB,GACC;IACA,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAA;IACxB,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAA;IACnB,QAAQ,CAAC,eAAe,EAAE,MAAM,CAAA;CACjC,CAAA;;AAiDH;;;GAGG;AACH,qBAAa,eAAgB,SAAQ,oBAOpC;IACC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,OAAO,eAAe,CAC5F;CACf;;AA4BD;;;GAGG;AACH,qBAAa,OAAQ,SAAQ,YAIW;IACtC,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,OAAO,OAAO,CAAoB;CACvH;AAED;;;GAGG;AACH,MAAM,MAAM,YAAY,CAAC,CAAC,IACtB;IACA,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAA;CACvB,GACC;IACA,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAA;IACrB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;CAClB,GACC;IACA,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAA;IACpB,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAA;CACzB,GACC;IACA,QAAQ,CAAC,IAAI,EAAE,WAAW,CAAA;IAC1B,QAAQ,CAAC,OAAO,EAAE,cAAc,CAAA;CACjC,GACC;IACA,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAA;IAC3B,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC,CAAA;IAC9B,QAAQ,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC,CAAA;CAChC,GACC;IACA,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAA;IACzB,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC,CAAA;IAC9B,QAAQ,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC,CAAA;CAChC,CAAA;AAuGH;;;GAGG;AACH,MAAM,WAAW,aAAa,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,EAAE,CAAE,SACvD,cAAc,CACZ,aAAa,CAAC,CAAC,EAAE,EAAE,CAAC,EACpB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAC5B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAC/B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CACvB;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,aAAa,wDAAmE;IAC3F,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;IACjB,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,OAAO,EAAE,OAAO,EAAE,EAAE,CAAC,GAAG,SAAS,CAAA;CAC3D,KAAG,cAAc,CAAC,EAAE,EAAE,CAatB,CAAA;AA4CD;;;GAGG;AACH,eAAO,MAAM,kBAAkB,2CAyB9B,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,KAAK,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,EAAE,CAAE,SAC/C,cAAc,CACZ,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EACZ,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAC5B,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAC/B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CACvB;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,KAAK,wDAA8E;IAC9F,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;IACjB,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,OAAO,EAAE,OAAO,EAAE,EAAE,CAAC,GAAG,SAAS,CAAA;CAC3D,KAAG,MAAM,CAAC,EAAE,EAAE,CAOd,CAAA;AAED;;;GAGG;AACH,MAAM,MAAM,WAAW,CAAC,CAAC,EAAE,CAAC,IACxB;IACA,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAA;IACxB,QAAQ,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC,CAAA;CAChC,GACC;IACA,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAA;IACxB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;CAClB,CAAA;AAqEH;;;GAGG;AACH,MAAM,WAAW,YAAY,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,EAAE,CAAE,SAC5E,cAAc,CACZ,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACtB,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAC1C,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAChD,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CAC3C;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,YAAY,yFACiB;IACtC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAA;IACnB,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAA;IACnB,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,OAAO,EAAE,OAAO,EAAE,EAAE,CAAC,GAAG,SAAS,CAAA;CAC3D,KACA,aAAa,CAAC,EAAE,CAAC,EAAE,EAAE,CAoBrB,CAAA;AAEH;;;GAGG;AACH,MAAM,WAAW,IAAI,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,EAAE,CAAE,SACpE,cAAc,CACZ,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACd,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAC1C,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EACjD,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CAC3C;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,IAAI,yFACoC;IACjD,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAA;IACnB,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAA;IACnB,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,OAAO,EAAE,OAAO,EAAE,EAAE,CAAC,GAAG,SAAS,CAAA;CAC3D,KACA,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,CAcf,CAAA;AA0BD;;;GAGG;AACH,MAAM,WAAW,eAAe,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SACzD,cAAc,CACZ,eAAe,CAAC,KAAK,CAAC,EACtB,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EACpC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EACvC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACtB;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,eAAe,oCACnB,KAAK,KACX,gBAAgB,KAAK,CAcvB,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,OAAO,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SACjD,cAAc,CACZ,OAAO,CAAC,KAAK,CAAC,EACd,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EACpC,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EACpC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACtB;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,OAAO,oCAAqC,KAAK,KAAG,QAAQ,KAAK,CAO7E,CAAA;AAqCD;;;GAGG;AACH,MAAM,WAAW,eAAe,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,CAAC,SAAS,MAAM,CAAC,GAAG,CAAE,SAC3E,cAAc,CACZ,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,EACrB,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAChD,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EACtD,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CACtC;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,eAAe,+DAAgE;IAC1F,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAA;IACf,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;CAClB,KAAG,gBAAgB,CAAC,EAAE,CAAC,CAcvB,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,OAAO,CAAC,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,CAAC,SAAS,MAAM,CAAC,GAAG,CAAE,SACnE,cAAc,CACZ,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,EACb,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAChD,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9D,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CACtC;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,OAAO,+DAAgE;IAClF,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAA;IACf,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAA;CAClB,KAAG,QAAQ,CAAC,EAAE,CAAC,CAQf,CAAA;AA0BD;;;GAGG;AACH,MAAM,WAAW,YAAY,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SACtD,cAAc,CACZ,YAAY,CAAC,KAAK,CAAC,EACnB,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAC9B,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EACjC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACtB;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,YAAY,oCAChB,KAAK,KACX,aAAa,KAAK,CAcpB,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,IAAI,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SAC9C,cAAc,CACZ,IAAI,CAAC,KAAK,CAAC,EACX,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAC9B,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EACpC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACtB;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,IAAI,oCAAqC,KAAK,KAAG,KAAK,KAAK,CAOvE,CAAA;AAmBD;;;GAGG;AACH,MAAM,WAAW,iBAAiB,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SAC3D,cAAc,CACZ,iBAAiB,CAAC,KAAK,CAAC,EACxB,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EACxC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAC3C,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACtB;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,iBAAiB,oCACrB,KAAK,QACN,MAAM,KAAK,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,QAC/B,MAAM,KAAK,CAAC,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,KACvC,kBAAkB,KAAK,CAczB,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,SAAS,CAAC,KAAK,SAAS,MAAM,CAAC,GAAG,CAAE,SACnD,cAAc,CACZ,SAAS,CAAC,KAAK,CAAC,EAChB,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EACxC,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EACpC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACtB;CACD;AAEF;;;GAGG;AACH,eAAO,MAAM,SAAS,oCACb,KAAK,QACN,MAAM,KAAK,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,KACpC,UAAU,KAAK,CAQjB,CAAA;;AAED;;;;;;;GAOG;AACH,qBAAa,kBAAmB,SAAQ,uBAIW;IACjD,OAAgB,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,OAAO,kBAAkB,CACtF;CACf"}
\ No newline at end of file
diff --git a/dist/dts/Serializable.d.ts b/dist/dts/Serializable.d.ts
index efd26afca6833a4d50fd28bc69253ef8024a12b8..93c5a03f73eb1fad5c197eeabfc860382b875c10 100644
--- a/dist/dts/Serializable.d.ts
+++ b/dist/dts/Serializable.d.ts
@@ -43,10 +43,10 @@ export declare const symbolResult: unique symbol;
  * @since 1.0.0
  * @category model
  */
-export interface WithResult<A, I, E, EI, R> {
+export interface WithResult<SuccessA, SuccessI, FailureA, FailureI, SuccessAndFailureR> {
     readonly [symbolResult]: {
-        readonly Success: Schema.Schema<A, I, R>;
-        readonly Failure: Schema.Schema<E, EI, R>;
+        readonly Success: Schema.Schema<SuccessA, SuccessI, SuccessAndFailureR>;
+        readonly Failure: Schema.Schema<FailureA, FailureI, SuccessAndFailureR>;
     };
 }
 /**
@@ -78,7 +78,7 @@ export declare const exitSchema: <A, I, E, EI, R>(self: WithResult<A, I, E, EI,
  * @since 1.0.0
  * @category model
  */
-export interface SerializableWithResult<S, SI, SR, A, AI, E, EI, RR> extends Serializable<S, SI, SR>, WithResult<A, AI, E, EI, RR> {
+export interface SerializableWithResult<Self, FieldsI, FieldsR, SuccessA, SuccessI, FailureA, FailureI, SuccessAndFailureR> extends Serializable<Self, FieldsI, FieldsR>, WithResult<SuccessA, SuccessI, FailureA, FailureI, SuccessAndFailureR> {
 }
 /**
  * @since 1.0.0
diff --git a/dist/dts/Serializable.d.ts.map b/dist/dts/Serializable.d.ts.map
index 219b9d6e83bed40a0817d9711dd0914668efbd96..9ef1d7244c17d724d6d058e891dfe96ce7e2ca3d 100644
--- a/dist/dts/Serializable.d.ts.map
+++ b/dist/dts/Serializable.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"Serializable.d.ts","sourceRoot":"","sources":["../../src/Serializable.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"Serializable.d.ts","sourceRoot":"","sources":["../../src/Serializable.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AACH,OAAO,KAAK,KAAK,MAAM,MAAM,eAAe,CAAA;AAC5C,OAAO,KAAK,KAAK,IAAI,MAAM,aAAa,CAAA;AAIxC,OAAO,KAAK,KAAK,WAAW,MAAM,kBAAkB,CAAA;AACpD,OAAO,KAAK,MAAM,MAAM,aAAa,CAAA;AAErC;;;GAGG;AACH,eAAO,MAAM,MAAM,EAAE,OAAO,MAAoC,CAAA;AAEhE;;;GAGG;AACH,MAAM,WAAW,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IACnC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;CAC1C;AAED;;;GAGG;AACH,MAAM,CAAC,OAAO,WAAW,YAAY,CAAC;IACpC;;OAEG;IACH,KAAY,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,YAAY,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;CACzF;AAED;;;GAGG;AACH,eAAO,MAAM,UAAU,kBAAmB,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAG,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAiB,CAAA;AAExG;;;GAGG;AACH,eAAO,MAAM,YAAY,EAAE,OAAO,MAA0C,CAAA;AAE5E;;;GAGG;AACH,MAAM,WAAW,UAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,kBAAkB;IACpF,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE;QACvB,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,kBAAkB,CAAC,CAAA;QACvE,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,kBAAkB,CAAC,CAAA;KACxE,CAAA;CACF;AAED;;;GAGG;AACH,MAAM,CAAC,OAAO,WAAW,UAAU,CAAC;IAClC;;OAEG;IACH,KAAY,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,UAAU,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,EAAE,MAAM,GAAG,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;CAC5G;AAED;;;GAGG;AACH,eAAO,MAAM,aAAa,yBAClB,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,KAC/B,OAAO,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAA+B,CAAA;AAExD;;;GAGG;AACH,eAAO,MAAM,aAAa,yBAClB,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,KAC/B,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAA+B,CAAA;AAOvD;;;GAGG;AACH,eAAO,MAAM,UAAU,yBACf,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,KAC/B,OAAO,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAW7D,CAAA;AAED;;;GAGG;AACH,MAAM,WAAW,sBAAsB,CACrC,IAAI,EACJ,OAAO,EACP,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,kBAAkB,CAClB,SACA,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,EACpC,UAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,kBAAkB,CAAC;CACtE;AAEF;;;GAGG;AACH,MAAM,CAAC,OAAO,WAAW,sBAAsB,CAAC;IAC9C;;OAEG;IACH,KAAY,OAAO,CAAC,CAAC,IAAI,CAAC,SACxB,sBAAsB,CAAC,MAAM,EAAE,EAAE,MAAM,GAAG,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,EAAE,MAAM,GAAG,EAAE,MAAM,EAAE,EAAE,MAAM,GAAG,EAAE,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GACjH,KAAK,CAAA;CACV;AAED;;;GAGG;AACH,eAAO,MAAM,SAAS,kBACd,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAC1B,OAAO,MAAM,CAAC,CAAC,EAAE,YAAY,UAAU,EAAE,CAAC,CAA2C,CAAA;AAExF;;;GAGG;AACH,eAAO,MAAM,WAAW,EAAE;IACxB,CACE,KAAK,EAAE,OAAO,GACb,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;IACxF,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;CASrC,CAAA;AAEhE;;;GAGG;AACH,eAAO,MAAM,gBAAgB,EAAE;IAC7B,CAAC,CAAC,EACA,KAAK,EAAE,CAAC,GACP,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;IAClG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACb,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAChC,KAAK,EAAE,CAAC,GACP,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;CASsB,CAAA;AAEvE;;;GAGG;AACH,eAAO,MAAM,kBAAkB,EAAE;IAC/B,CAAC,KAAK,EAAE,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAC/B,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,KAC7B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;IAChD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACb,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAChC,KAAK,EAAE,OAAO,GACb,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;CAS8B,CAAA;AAE9E;;;GAGG;AACH,eAAO,MAAM,gBAAgB,EAAE;IAC7B,CAAC,CAAC,EACA,KAAK,EAAE,CAAC,GACP,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;IACjG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACb,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAChC,KAAK,EAAE,CAAC,GACP,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;CASuB,CAAA;AAEvE;;;GAGG;AACH,eAAO,MAAM,kBAAkB,EAAE;IAC/B,CACE,KAAK,EAAE,OAAO,GACb,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAChB,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,KAC7B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;IAChD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACb,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAChC,KAAK,EAAE,OAAO,GACb,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;CAS8B,CAAA;AAE9E;;;GAGG;AACH,eAAO,MAAM,aAAa,EAAE;IAC1B,CAAC,CAAC,EAAE,CAAC,EACH,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,GACrB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EACV,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,KAC7B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;IACxE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACb,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAChC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,GACrB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;CAIyC,CAAA;AAEjH;;;GAGG;AACH,eAAO,MAAM,eAAe,EAAE;IAC5B,CAAC,KAAK,EAAE,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAC/B,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,KAC7B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;IAC9D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACb,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAChC,KAAK,EAAE,OAAO,GACb,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAA;CAIgD,CAAA"}
\ No newline at end of file
diff --git a/dist/esm/AST.js b/dist/esm/AST.js
index 63f13f31352c1fd27c74116f1be035f2343459fe..be9b74615cd5f5f73b959b5709fefb25ef72cb90 100644
--- a/dist/esm/AST.js
+++ b/dist/esm/AST.js
@@ -4,7 +4,6 @@
 import * as Arr from "effect/Array";
 import { dual, identity } from "effect/Function";
 import { globalValue } from "effect/GlobalValue";
-import * as Hash from "effect/Hash";
 import * as Number from "effect/Number";
 import * as Option from "effect/Option";
 import * as Order from "effect/Order";
@@ -899,7 +898,7 @@ export class TupleType {
       }
     }
     if (hasIllegalRequiredElement || hasOptionalElement && rest.length > 1) {
-      throw new Error(errors_.getRequiredElementFollowinAnOptionalElementErrorMessage);
+      throw new Error(getRequiredElementFollowinAnOptionalElementErrorMessage);
     }
   }
   /**
@@ -1011,7 +1010,7 @@ export class IndexSignature {
     if (isParameter(parameter)) {
       this.parameter = parameter;
     } else {
-      throw new Error(errors_.getIndexSignatureParameterErrorMessage);
+      throw new Error(getIndexSignatureParameterErrorMessage);
     }
   }
   /**
@@ -1063,12 +1062,12 @@ export class TypeLiteral {
       const parameter = getParameterBase(indexSignatures[i].parameter);
       if (isStringKeyword(parameter)) {
         if (parameters.string) {
-          throw new Error(errors_.getDuplicateIndexSignatureErrorMessage("string"));
+          throw new Error(getDuplicateIndexSignatureErrorMessage("string"));
         }
         parameters.string = true;
       } else if (isSymbolKeyword(parameter)) {
         if (parameters.symbol) {
-          throw new Error(errors_.getDuplicateIndexSignatureErrorMessage("symbol"));
+          throw new Error(getDuplicateIndexSignatureErrorMessage("symbol"));
         }
         parameters.symbol = true;
       }
@@ -1095,9 +1094,9 @@ export class TypeLiteral {
   }
 }
 const formatTypeLiteral = ast => {
-  const formattedPropertySignatures = ast.propertySignatures.map(ps => String(ps.name) + (ps.isOptional ? "?" : "") + ": " + ps.type).join("; ");
+  const formattedPropertySignatures = ast.propertySignatures.map(ps => (ps.isReadonly ? "readonly " : "") + String(ps.name) + (ps.isOptional ? "?" : "") + ": " + ps.type).join("; ");
   if (ast.indexSignatures.length > 0) {
-    const formattedIndexSignatures = ast.indexSignatures.map(is => `[x: ${getParameterBase(is.parameter)}]: ${is.type}`).join("; ");
+    const formattedIndexSignatures = ast.indexSignatures.map(is => (is.isReadonly ? "readonly " : "") + `[x: ${getParameterBase(is.parameter)}]: ${is.type}`).join("; ");
     if (ast.propertySignatures.length > 0) {
       return `{ ${formattedPropertySignatures}; ${formattedIndexSignatures} }`;
     } else {
@@ -1369,7 +1368,7 @@ export class Refinement {
    * @since 1.0.0
    */
   toString(verbose = false) {
-    return Option.getOrElse(getExpected(this, verbose), () => "<refinement schema>");
+    return Option.getOrElse(getExpected(this, verbose), () => `{ ${this.from} | filter }`);
   }
   /**
    * @since 1.0.0
@@ -1520,12 +1519,12 @@ export class TypeLiteralTransformation {
     for (const pst of propertySignatureTransformations) {
       const from = pst.from;
       if (fromKeys[from]) {
-        throw new Error(errors_.getDuplicatePropertySignatureTransformationErrorMessage(from));
+        throw new Error(getDuplicatePropertySignatureTransformationErrorMessage(from));
       }
       fromKeys[from] = true;
       const to = pst.to;
       if (toKeys[to]) {
-        throw new Error(errors_.getDuplicatePropertySignatureTransformationErrorMessage(to));
+        throw new Error(getDuplicatePropertySignatureTransformationErrorMessage(to));
       }
       toKeys[to] = true;
     }
@@ -1622,7 +1621,7 @@ export const getNumberIndexedAccess = ast => {
     case "Suspend":
       return getNumberIndexedAccess(ast.f());
   }
-  throw new Error(errors_.getAPIErrorMessage("NumberIndexedAccess", `unsupported schema (${ast})`));
+  throw new Error(errors_.getErrorMessage("getNumberIndexedAccess", `unsupported schema (${ast})`));
 };
 /** @internal */
 export const getPropertyKeyIndexedAccess = (ast, name) => {
@@ -1649,19 +1648,19 @@ export const getPropertyKeyIndexedAccess = (ast, name) => {
                   {
                     const regex = getTemplateLiteralRegExp(parameterBase);
                     if (regex.test(name)) {
-                      return new PropertySignature(name, is.type, false, false);
+                      return new PropertySignature(name, is.type, false, true);
                     }
                     break;
                   }
                 case "StringKeyword":
-                  return new PropertySignature(name, is.type, false, false);
+                  return new PropertySignature(name, is.type, false, true);
               }
             }
           } else if (Predicate.isSymbol(name)) {
             for (const is of ast.indexSignatures) {
               const parameterBase = getParameterBase(is.parameter);
               if (isSymbolKeyword(parameterBase)) {
-                return new PropertySignature(name, is.type, false, false);
+                return new PropertySignature(name, is.type, false, true);
               }
             }
           }
@@ -1714,7 +1713,7 @@ export const record = (key, value) => {
         if (Predicate.isString(key.literal) || Predicate.isNumber(key.literal)) {
           propertySignatures.push(new PropertySignature(key.literal, value, false, true));
         } else {
-          throw new Error(errors_.getAPIErrorMessage("Record", `unsupported literal (${util_.formatUnknown(key.literal)})`));
+          throw new Error(errors_.getErrorMessage("record", `unsupported literal (${util_.formatUnknown(key.literal)})`));
         }
         break;
       case "UniqueSymbol":
@@ -1724,7 +1723,7 @@ export const record = (key, value) => {
         key.types.forEach(go);
         break;
       default:
-        throw new Error(errors_.getAPIErrorMessage("Record", `unsupported key schema (${key})`));
+        throw new Error(errors_.getErrorMessage("record", `unsupported key schema (${key})`));
     }
   };
   go(key);
@@ -1764,7 +1763,7 @@ export const pick = (ast, keys) => {
           if (Option.isSome(annotation)) {
             return pick(annotation.value, keys);
           }
-          throw new Error(errors_.getAPIErrorMessage("Pick", "cannot handle this kind of transformation"));
+          throw new Error(errors_.getErrorMessage("pick", "cannot handle this kind of transformation"));
         }
     }
   }
@@ -1798,15 +1797,15 @@ export const partial = (ast, options) => {
     case "Suspend":
       return new Suspend(() => partial(ast.f(), options));
     case "Declaration":
-      throw new Error(errors_.getAPIErrorMessage("partial", "cannot handle declarations"));
+      throw new Error(errors_.getErrorMessage("partial", "cannot handle declarations"));
     case "Refinement":
-      throw new Error(errors_.getAPIErrorMessage("partial", "cannot handle refinements"));
+      throw new Error(errors_.getErrorMessage("partial", "cannot handle refinements"));
     case "Transformation":
       {
         if (isTypeLiteralTransformation(ast.transformation) && ast.transformation.propertySignatureTransformations.every(isRenamingPropertySignatureTransformation)) {
           return new Transformation(partial(ast.from, options), partial(ast.to, options), ast.transformation);
         }
-        throw new Error(errors_.getAPIErrorMessage("partial", "cannot handle transformations"));
+        throw new Error(errors_.getErrorMessage("partial", "cannot handle transformations"));
       }
   }
   return ast;
@@ -1827,15 +1826,15 @@ export const required = ast => {
     case "Suspend":
       return new Suspend(() => required(ast.f()));
     case "Declaration":
-      throw new Error(errors_.getAPIErrorMessage("required", "cannot handle declarations"));
+      throw new Error(errors_.getErrorMessage("required", "cannot handle declarations"));
     case "Refinement":
-      throw new Error(errors_.getAPIErrorMessage("required", "cannot handle refinements"));
+      throw new Error(errors_.getErrorMessage("required", "cannot handle refinements"));
     case "Transformation":
       {
         if (isTypeLiteralTransformation(ast.transformation) && ast.transformation.propertySignatureTransformations.every(isRenamingPropertySignatureTransformation)) {
           return new Transformation(required(ast.from), required(ast.to), ast.transformation);
         }
-        throw new Error(errors_.getAPIErrorMessage("required", "cannot handle transformations"));
+        throw new Error(errors_.getErrorMessage("required", "cannot handle transformations"));
       }
   }
   return ast;
@@ -1882,7 +1881,7 @@ export const mutable = ast => {
  * @since 1.0.0
  */
 export const getCompiler = match => {
-  const compile = ast => match[ast._tag](ast, compile);
+  const compile = (ast, path) => match[ast._tag](ast, compile, path);
   return compile;
 };
 /** @internal */
@@ -2009,10 +2008,6 @@ const toJSONAnnotations = annotations => {
   }
   return out;
 };
-/**
- * @since 1.0.0
- */
-export const hash = ast => Hash.string(JSON.stringify(ast, null, 2));
 /** @internal */
 export const getCardinality = ast => {
   switch (ast._tag) {
@@ -2161,7 +2156,7 @@ const _keyof = ast => {
     case "Transformation":
       return _keyof(ast.to);
   }
-  throw new Error(errors_.getAPIErrorMessage("KeyOf", `unsupported schema (${ast})`));
+  throw new Error(errors_.getErrorMessage("keyof", `unsupported schema (${ast})`));
 };
 /** @internal */
 export const compose = (ab, cd) => new Transformation(ab, cd, composeTransformation);
@@ -2207,4 +2202,8 @@ const getExpected = (ast, verbose) => {
     return getIdentifierAnnotation(ast).pipe(Option.orElse(() => getTitleAnnotation(ast)), Option.orElse(() => getDescriptionAnnotation(ast)));
   }
 };
+const getDuplicateIndexSignatureErrorMessage = name => `Duplicate index signature for type \`${name}\``;
+const getIndexSignatureParameterErrorMessage = "An index signature parameter type must be `string`, `symbol`, a template literal type or a refinement of the previous types";
+const getRequiredElementFollowinAnOptionalElementErrorMessage = "A required element cannot follow an optional element. ts(1257)";
+const getDuplicatePropertySignatureTransformationErrorMessage = name => `Duplicate property signature transformation ${util_.formatUnknown(name)}`;
 //# sourceMappingURL=AST.js.map
\ No newline at end of file
diff --git a/dist/esm/AST.js.map b/dist/esm/AST.js.map
index 8ed43bb459ef6ccf216612ad7e9b65038bb0ae40..8337fdf297fb6950d24dc291f8625879a6f1f390 100644
--- a/dist/esm/AST.js.map
+++ b/dist/esm/AST.js.map
@@ -1 +1 @@
-{"version":3,"file":"AST.js","names":["Arr","dual","identity","globalValue","Hash","Number","Option","Order","Predicate","regexp","errors_","util_","BrandAnnotationId","Symbol","for","TypeAnnotationId","MessageAnnotationId","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","JSONSchemaAnnotationId","DocumentationAnnotationId","ConcurrencyAnnotationId","BatchingAnnotationId","SurrogateAnnotationId","ParseIssueTitleAnnotationId","getAnnotation","annotated","key","Object","prototype","hasOwnProperty","call","annotations","some","none","getBrandAnnotation","getMessageAnnotation","getTitleAnnotation","getIdentifierAnnotation","getDescriptionAnnotation","getExamplesAnnotation","getDefaultAnnotation","getJSONSchemaAnnotation","getDocumentationAnnotation","getConcurrencyAnnotation","getBatchingAnnotation","getParseIssueTitleAnnotation","getSurrogateAnnotation","JSONIdentifierAnnotationId","getJSONIdentifierAnnotation","Declaration","typeParameters","decodeUnknown","encodeUnknown","_tag","constructor","toString","verbose","getOrElse","getExpected","toJSON","map","ast","toJSONAnnotations","createASTGuard","tag","isDeclaration","Literal","literal","formatUnknown","isBigInt","String","isLiteral","$null","null","UniqueSymbol","symbol","isUniqueSymbol","UndefinedKeyword","formatKeyword","undefinedKeyword","isUndefinedKeyword","VoidKeyword","voidKeyword","isVoidKeyword","NeverKeyword","neverKeyword","isNeverKeyword","UnknownKeyword","unknownKeyword","isUnknownKeyword","AnyKeyword","anyKeyword","isAnyKeyword","StringKeyword","stringKeyword","isStringKeyword","NumberKeyword","numberKeyword","isNumberKeyword","BooleanKeyword","booleanKeyword","isBooleanKeyword","BigIntKeyword","bigIntKeyword","isBigIntKeyword","SymbolKeyword","symbolKeyword","isSymbolKeyword","ObjectKeyword","objectKeyword","isObjectKeyword","Enums","enums","length","_","value","JSON","stringify","join","isEnums","TemplateLiteralSpan","type","TemplateLiteral","head","spans","make","isNonEmptyReadonlyArray","formatTemplateLiteral","span","isTemplateLiteral","Element","isOptional","TupleType","elements","rest","isReadonly","hasOptionalElement","hasIllegalRequiredElement","e","Error","getRequiredElementFollowinAnOptionalElementErrorMessage","formatTuple","formattedElements","matchLeft","onEmpty","onNonEmpty","tail","formattedHead","wrappedHead","includes","formattedTail","isTupleType","PropertySignature","name","isParameter","from","IndexSignature","parameter","getIndexSignatureParameterErrorMessage","TypeLiteral","propertySignatures","indexSignatures","keys","i","getDuplicatePropertySignatureErrorMessage","parameters","string","getParameterBase","getDuplicateIndexSignatureErrorMessage","sortPropertySignatures","sortIndexSignatures","formatTypeLiteral","ps","formattedPropertySignatures","formattedIndexSignatures","is","isTypeLiteral","removeNevers","candidates","filter","sortCandidates","sort","mapInput","literalMap","number","boolean","bigint","flatten","flatMap","isUnion","types","unify","cs","out","uniques","literals","push","Union","memo","Set","has","add","union","members","isMembers","mapMembers","f","as","toJSONMemoMap","WeakMap","Suspend","memoizeThunk","pipe","orElse","liftThrowable","get","set","isSuspend","Refinement","isRefinement","defaultParseOption","Transformation","to","transformation","isTransformation","FinalTransformation","decode","encode","createTransformationGuard","isFinalTransformation","ComposeTransformation","composeTransformation","isComposeTransformation","PropertySignatureTransformation","isRenamingPropertySignatureTransformation","t","TypeLiteralTransformation","propertySignatureTransformations","fromKeys","toKeys","pst","getDuplicatePropertySignatureTransformationErrorMessage","isTypeLiteralTransformation","d","getOwnPropertyDescriptors","create","getPrototypeOf","keyof","_keyof","STRING_KEYWORD_PATTERN","NUMBER_KEYWORD_PATTERN","getTemplateLiteralRegExp","pattern","escape","RegExp","getPropertySignatures","annotation","isSome","slice","getPropertyKeys","getPropertyKeyIndexedAccess","getNumberIndexedAccess","hasOptional","concat","getAPIErrorMessage","ops","findFirst","isString","parameterBase","regex","test","isSymbol","reduce","intersection","record","go","isNumber","forEach","pick","ts","k","find","omit","orUndefined","partial","options","exact","match","member","every","required","mutable","changeMap","getCompiler","compile","getToPropertySignatures","p","typeAST","getToIndexSignatures","getJSONIdentifier","createJSONIdentifierAnnotation","onNone","undefined","onSome","identifier","changed","allocate","a","fa","encodedAST","getOwnPropertySymbols","hash","getCardinality","WeightOrder","tuple","maxWeight","max","emptyWeight","maxWeightAll","weights","getWeight","y","z","x","equalsTemplateLiteralSpan","getEquivalence","self","that","equalsEnums","equals","intersectionWith","compose","ab","cd","rename","mapping","ownKeys","description"],"sources":["../../src/AST.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"AST.js","names":["Arr","dual","identity","globalValue","Number","Option","Order","Predicate","regexp","errors_","util_","BrandAnnotationId","Symbol","for","TypeAnnotationId","MessageAnnotationId","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","JSONSchemaAnnotationId","DocumentationAnnotationId","ConcurrencyAnnotationId","BatchingAnnotationId","SurrogateAnnotationId","ParseIssueTitleAnnotationId","getAnnotation","annotated","key","Object","prototype","hasOwnProperty","call","annotations","some","none","getBrandAnnotation","getMessageAnnotation","getTitleAnnotation","getIdentifierAnnotation","getDescriptionAnnotation","getExamplesAnnotation","getDefaultAnnotation","getJSONSchemaAnnotation","getDocumentationAnnotation","getConcurrencyAnnotation","getBatchingAnnotation","getParseIssueTitleAnnotation","getSurrogateAnnotation","JSONIdentifierAnnotationId","getJSONIdentifierAnnotation","Declaration","typeParameters","decodeUnknown","encodeUnknown","_tag","constructor","toString","verbose","getOrElse","getExpected","toJSON","map","ast","toJSONAnnotations","createASTGuard","tag","isDeclaration","Literal","literal","formatUnknown","isBigInt","String","isLiteral","$null","null","UniqueSymbol","symbol","isUniqueSymbol","UndefinedKeyword","formatKeyword","undefinedKeyword","isUndefinedKeyword","VoidKeyword","voidKeyword","isVoidKeyword","NeverKeyword","neverKeyword","isNeverKeyword","UnknownKeyword","unknownKeyword","isUnknownKeyword","AnyKeyword","anyKeyword","isAnyKeyword","StringKeyword","stringKeyword","isStringKeyword","NumberKeyword","numberKeyword","isNumberKeyword","BooleanKeyword","booleanKeyword","isBooleanKeyword","BigIntKeyword","bigIntKeyword","isBigIntKeyword","SymbolKeyword","symbolKeyword","isSymbolKeyword","ObjectKeyword","objectKeyword","isObjectKeyword","Enums","enums","length","_","value","JSON","stringify","join","isEnums","TemplateLiteralSpan","type","TemplateLiteral","head","spans","make","isNonEmptyReadonlyArray","formatTemplateLiteral","span","isTemplateLiteral","Element","isOptional","TupleType","elements","rest","isReadonly","hasOptionalElement","hasIllegalRequiredElement","e","Error","getRequiredElementFollowinAnOptionalElementErrorMessage","formatTuple","formattedElements","matchLeft","onEmpty","onNonEmpty","tail","formattedHead","wrappedHead","includes","formattedTail","isTupleType","PropertySignature","name","isParameter","from","IndexSignature","parameter","getIndexSignatureParameterErrorMessage","TypeLiteral","propertySignatures","indexSignatures","keys","i","getDuplicatePropertySignatureErrorMessage","parameters","string","getParameterBase","getDuplicateIndexSignatureErrorMessage","sortPropertySignatures","sortIndexSignatures","formatTypeLiteral","ps","formattedPropertySignatures","formattedIndexSignatures","is","isTypeLiteral","removeNevers","candidates","filter","sortCandidates","sort","mapInput","literalMap","number","boolean","bigint","flatten","flatMap","isUnion","types","unify","cs","out","uniques","literals","push","Union","memo","Set","has","add","union","members","isMembers","mapMembers","f","as","toJSONMemoMap","WeakMap","Suspend","memoizeThunk","pipe","orElse","liftThrowable","get","set","isSuspend","Refinement","isRefinement","defaultParseOption","Transformation","to","transformation","isTransformation","FinalTransformation","decode","encode","createTransformationGuard","isFinalTransformation","ComposeTransformation","composeTransformation","isComposeTransformation","PropertySignatureTransformation","isRenamingPropertySignatureTransformation","t","TypeLiteralTransformation","propertySignatureTransformations","fromKeys","toKeys","pst","getDuplicatePropertySignatureTransformationErrorMessage","isTypeLiteralTransformation","d","getOwnPropertyDescriptors","create","getPrototypeOf","keyof","_keyof","STRING_KEYWORD_PATTERN","NUMBER_KEYWORD_PATTERN","getTemplateLiteralRegExp","pattern","escape","RegExp","getPropertySignatures","annotation","isSome","slice","getPropertyKeys","getPropertyKeyIndexedAccess","getNumberIndexedAccess","hasOptional","concat","getErrorMessage","ops","findFirst","isString","parameterBase","regex","test","isSymbol","reduce","intersection","record","go","isNumber","forEach","pick","ts","k","find","omit","orUndefined","partial","options","exact","match","member","every","required","mutable","changeMap","getCompiler","compile","path","getToPropertySignatures","p","typeAST","getToIndexSignatures","getJSONIdentifier","createJSONIdentifierAnnotation","onNone","undefined","onSome","identifier","changed","allocate","a","fa","encodedAST","getOwnPropertySymbols","getCardinality","WeightOrder","tuple","maxWeight","max","emptyWeight","maxWeightAll","weights","getWeight","y","z","x","equalsTemplateLiteralSpan","getEquivalence","self","that","equalsEnums","equals","intersectionWith","compose","ab","cd","rename","mapping","ownKeys","description"],"sources":["../../src/AST.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/esm/Arbitrary.js b/dist/esm/Arbitrary.js
index 01147a029b3e9aaa196aac34afb477383b90b0d9..769885533c784f57702e95dc05a28927028dbfbc 100644
--- a/dist/esm/Arbitrary.js
+++ b/dist/esm/Arbitrary.js
@@ -27,7 +27,7 @@ export const arbitrary = handler => self => self.annotations({
  * @category arbitrary
  * @since 1.0.0
  */
-export const makeLazy = schema => go(schema.ast, {});
+export const makeLazy = schema => go(schema.ast, {}, []);
 /**
  * Returns a fast-check Arbitrary for the `A` type of the provided schema.
  *
@@ -51,21 +51,22 @@ const record = (fc, key, value, options) => {
   });
 };
 const getHook = /*#__PURE__*/AST.getAnnotation(ArbitraryHookId);
-const getRefinementFromArbitrary = (ast, options) => {
+const getRefinementFromArbitrary = (ast, options, path) => {
   const constraints = combineConstraints(options.constraints, getConstraints(ast));
   return go(ast.from, constraints ? {
     ...options,
     constraints
-  } : options);
+  } : options, path);
 };
-const go = (ast, options) => {
+const getArbitraryErrorMessage = (message, path) => errors_.getErrorMessageWithPath(`cannot build an Arbitrary for ${message}`, path);
+const go = (ast, options, path) => {
   const hook = getHook(ast);
   if (Option.isSome(hook)) {
     switch (ast._tag) {
       case "Declaration":
-        return hook.value(...ast.typeParameters.map(p => go(p, options)));
+        return hook.value(...ast.typeParameters.map(p => go(p, options, path)));
       case "Refinement":
-        return hook.value(getRefinementFromArbitrary(ast, options));
+        return hook.value(getRefinementFromArbitrary(ast, options, path));
       default:
         return hook.value();
     }
@@ -73,7 +74,7 @@ const go = (ast, options) => {
   switch (ast._tag) {
     case "Declaration":
       {
-        throw new Error(errors_.getArbitraryErrorMessage(`a declaration without annotations (${ast})`));
+        throw new Error(getArbitraryErrorMessage(`a declaration without annotations (${ast})`, path));
       }
     case "Literal":
       return fc => fc.constant(ast.literal);
@@ -84,7 +85,7 @@ const go = (ast, options) => {
       return fc => fc.constant(undefined);
     case "NeverKeyword":
       return () => {
-        throw new Error(errors_.getArbitraryErrorMessage("`never`"));
+        throw new Error(getArbitraryErrorMessage("`never`", path));
       };
     case "UnknownKeyword":
     case "AnyKeyword":
@@ -152,13 +153,14 @@ const go = (ast, options) => {
       {
         const elements = [];
         let hasOptionals = false;
+        let i = 0;
         for (const element of ast.elements) {
-          elements.push(go(element.type, options));
+          elements.push(go(element.type, options, path.concat(i++)));
           if (element.isOptional) {
             hasOptionals = true;
           }
         }
-        const rest = ast.rest.map(e => go(e, options));
+        const rest = ast.rest.map(e => go(e, options, path));
         return fc => {
           // ---------------------------------------------
           // handle elements
@@ -208,8 +210,8 @@ const go = (ast, options) => {
       }
     case "TypeLiteral":
       {
-        const propertySignaturesTypes = ast.propertySignatures.map(f => go(f.type, options));
-        const indexSignatures = ast.indexSignatures.map(is => [go(is.parameter, options), go(is.type, options)]);
+        const propertySignaturesTypes = ast.propertySignatures.map(ps => go(ps.type, options, path.concat(ps.name)));
+        const indexSignatures = ast.indexSignatures.map(is => [go(is.parameter, options, path), go(is.type, options, path)]);
         return fc => {
           const arbs = {};
           const requiredKeys = [];
@@ -245,7 +247,7 @@ const go = (ast, options) => {
       }
     case "Union":
       {
-        const types = ast.types.map(t => go(t, options));
+        const types = ast.types.map(t => go(t, options, path));
         return fc => fc.oneof({
           depthSize
         }, ...types.map(arb => arb(fc)));
@@ -253,13 +255,13 @@ const go = (ast, options) => {
     case "Enums":
       {
         if (ast.enums.length === 0) {
-          throw new Error(errors_.getArbitraryErrorMessage("an empty enum"));
+          throw new Error(getArbitraryErrorMessage("an empty enum", path));
         }
         return fc => fc.oneof(...ast.enums.map(([_, value]) => fc.constant(value)));
       }
     case "Refinement":
       {
-        const from = getRefinementFromArbitrary(ast, options);
+        const from = getRefinementFromArbitrary(ast, options, path);
         return fc => from(fc).filter(a => Option.isNone(ast.filter(a, AST.defaultParseOption, ast)));
       }
     case "Suspend":
@@ -267,11 +269,11 @@ const go = (ast, options) => {
         const get = util_.memoizeThunk(() => go(ast.f(), {
           ...options,
           isSuspend: true
-        }));
+        }, path));
         return fc => fc.constant(null).chain(() => get()(fc));
       }
     case "Transformation":
-      return go(ast.to, options);
+      return go(ast.to, options, path);
   }
 };
 /** @internal */
diff --git a/dist/esm/Arbitrary.js.map b/dist/esm/Arbitrary.js.map
index 8a90f1eb1fe4d558ea42b5ccc886e19f90e52249..499bd32c105e8fc640bc1ba28b5745c3850a2a4c 100644
--- a/dist/esm/Arbitrary.js.map
+++ b/dist/esm/Arbitrary.js.map
@@ -1 +1 @@
-{"version":3,"file":"Arbitrary.js","names":["Arr","Option","Predicate","AST","FastCheck","errors_","filters_","util_","ArbitraryHookId","Symbol","for","arbitrary","handler","self","annotations","makeLazy","schema","go","ast","make","depthSize","record","fc","key","value","options","isSuspend","oneof","constant","array","tuple","minLength","maxLength","map","tuples","out","k","v","getHook","getAnnotation","getRefinementFromArbitrary","constraints","combineConstraints","getConstraints","from","hook","isSome","_tag","typeParameters","p","Error","getArbitraryErrorMessage","literal","symbol","undefined","anything","string","float","integer","boolean","bigInt","s","object","number","noDefaultInfinity","filter","n","Number","isNaN","components","head","span","spans","isStringKeyword","type","push","join","elements","hasOptionals","element","isOptional","rest","e","output","arb","indexes","chain","booleans","i","b","reverse","entries","splice","length","isNonEmptyReadonlyArray","tail","as","j","a","propertySignaturesTypes","propertySignatures","f","indexSignatures","is","parameter","arbs","requiredKeys","ps","name","o","d","types","t","enums","_","isNone","defaultParseOption","get","memoizeThunk","to","NumberConstraints","constructor","isNumber","min","Math","fround","max","isBoolean","noNaN","StringConstraints","IntegerConstraints","ArrayConstraints","BigIntConstraints","isBigInt","TypeAnnotationId","jsonSchema","JSONSchemaAnnotationId","IntTypeId","GreaterThanTypeId","GreaterThanOrEqualToTypeId","LessThanTypeId","LessThanOrEqualToTypeId","BetweenTypeId","exclusiveMinimum","minimum","exclusiveMaximum","maximum","GreaterThanBigintTypeId","GreaterThanOrEqualToBigIntTypeId","LessThanBigIntTypeId","LessThanOrEqualToBigIntTypeId","BetweenBigintTypeId","MinLengthTypeId","MaxLengthTypeId","LengthTypeId","MinItemsTypeId","MaxItemsTypeId","ItemsCountTypeId","minItems","maxItems","c1","c2","getMax","getMin","getOr","n1","n2"],"sources":["../../src/Arbitrary.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"Arbitrary.js","names":["Arr","Option","Predicate","AST","FastCheck","errors_","filters_","util_","ArbitraryHookId","Symbol","for","arbitrary","handler","self","annotations","makeLazy","schema","go","ast","make","depthSize","record","fc","key","value","options","isSuspend","oneof","constant","array","tuple","minLength","maxLength","map","tuples","out","k","v","getHook","getAnnotation","getRefinementFromArbitrary","path","constraints","combineConstraints","getConstraints","from","getArbitraryErrorMessage","message","getErrorMessageWithPath","hook","isSome","_tag","typeParameters","p","Error","literal","symbol","undefined","anything","string","float","integer","boolean","bigInt","s","object","number","noDefaultInfinity","filter","n","Number","isNaN","components","head","span","spans","isStringKeyword","type","push","join","elements","hasOptionals","i","element","concat","isOptional","rest","e","output","arb","indexes","chain","booleans","b","reverse","entries","splice","length","isNonEmptyReadonlyArray","tail","as","j","a","propertySignaturesTypes","propertySignatures","ps","name","indexSignatures","is","parameter","arbs","requiredKeys","o","d","types","t","enums","_","isNone","defaultParseOption","get","memoizeThunk","f","to","NumberConstraints","constructor","isNumber","min","Math","fround","max","isBoolean","noNaN","StringConstraints","IntegerConstraints","ArrayConstraints","BigIntConstraints","isBigInt","TypeAnnotationId","jsonSchema","JSONSchemaAnnotationId","IntTypeId","GreaterThanTypeId","GreaterThanOrEqualToTypeId","LessThanTypeId","LessThanOrEqualToTypeId","BetweenTypeId","exclusiveMinimum","minimum","exclusiveMaximum","maximum","GreaterThanBigintTypeId","GreaterThanOrEqualToBigIntTypeId","LessThanBigIntTypeId","LessThanOrEqualToBigIntTypeId","BetweenBigintTypeId","MinLengthTypeId","MaxLengthTypeId","LengthTypeId","MinItemsTypeId","MaxItemsTypeId","ItemsCountTypeId","minItems","maxItems","c1","c2","getMax","getMin","getOr","n1","n2"],"sources":["../../src/Arbitrary.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/esm/ArrayFormatter.js b/dist/esm/ArrayFormatter.js
index ede21b0bdc9ec8892c0bab6201220ca909c8a1d9..c06905b1c26f0d442dd1114df3a6193d79adb733 100644
--- a/dist/esm/ArrayFormatter.js
+++ b/dist/esm/ArrayFormatter.js
@@ -24,14 +24,16 @@ export const formatError = error => formatIssue(error.error);
  * @since 1.0.0
  */
 export const formatErrorSync = error => formatIssueSync(error.error);
+const succeed = issue => Effect.succeed([issue]);
 const getArray = (issue, path, onFailure) => Effect.matchEffect(TreeFormatter.getMessage(issue), {
   onFailure,
-  onSuccess: message => Effect.succeed([{
+  onSuccess: message => succeed({
     _tag: issue._tag,
     path,
     message
-  }])
+  })
 });
+const flatten = eff => Effect.map(eff, Arr.flatten);
 const go = (e, path = []) => {
   const _tag = e._tag;
   switch (_tag) {
@@ -42,39 +44,39 @@ const go = (e, path = []) => {
         message
       }]);
     case "Forbidden":
-      return Effect.succeed([{
+      return succeed({
         _tag,
         path,
         message: TreeFormatter.formatForbiddenMessage(e)
-      }]);
+      });
     case "Unexpected":
-      return Effect.succeed([{
+      return succeed({
         _tag,
         path,
         message: `is unexpected, expected ${e.ast.toString(true)}`
-      }]);
+      });
     case "Missing":
-      return Effect.succeed([{
+      return succeed({
         _tag,
         path,
         message: "is missing"
-      }]);
+      });
     case "Union":
-      return getArray(e, path, () => Effect.map(Effect.forEach(e.errors, e => {
+      return getArray(e, path, () => flatten(Effect.forEach(e.errors, e => {
         switch (e._tag) {
           case "Member":
             return go(e.error, path);
           default:
             return go(e, path);
         }
-      }), Arr.flatten));
+      })));
     case "TupleType":
-      return getArray(e, path, () => Effect.map(Effect.forEach(e.errors, index => go(index.error, [...path, index.index])), Arr.flatten));
+      return getArray(e, path, () => flatten(Effect.forEach(e.errors, index => go(index.error, path.concat(index.index)))));
     case "TypeLiteral":
-      return getArray(e, path, () => Effect.map(Effect.forEach(e.errors, key => go(key.error, [...path, key.key])), Arr.flatten));
-    case "Transformation":
-    case "Refinement":
+      return getArray(e, path, () => flatten(Effect.forEach(e.errors, key => go(key.error, path.concat(key.key)))));
     case "Declaration":
+    case "Refinement":
+    case "Transformation":
       return getArray(e, path, () => go(e.error, path));
   }
 };
diff --git a/dist/esm/ArrayFormatter.js.map b/dist/esm/ArrayFormatter.js.map
index 4fe32756e120f28b6b674fb8f3217a3c7a1bde21..32f2878ba965fbc29d10a46aafb5f6cf96122949 100644
--- a/dist/esm/ArrayFormatter.js.map
+++ b/dist/esm/ArrayFormatter.js.map
@@ -1 +1 @@
-{"version":3,"file":"ArrayFormatter.js","names":["Arr","Effect","TreeFormatter","formatIssue","issue","go","formatIssueSync","runSync","formatError","error","formatErrorSync","getArray","path","onFailure","matchEffect","getMessage","onSuccess","message","succeed","_tag","e","map","formatTypeMessage","formatForbiddenMessage","ast","toString","forEach","errors","flatten","index","key"],"sources":["../../src/ArrayFormatter.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"ArrayFormatter.js","names":["Arr","Effect","TreeFormatter","formatIssue","issue","go","formatIssueSync","runSync","formatError","error","formatErrorSync","succeed","getArray","path","onFailure","matchEffect","getMessage","onSuccess","message","_tag","flatten","eff","map","e","formatTypeMessage","formatForbiddenMessage","ast","toString","forEach","errors","index","concat","key"],"sources":["../../src/ArrayFormatter.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/esm/Equivalence.js b/dist/esm/Equivalence.js
index 3ed344ee290319df4aa238c42bcdeb8f96dc510d..6f28939f5be230471efb0e25ce8836806ea87711 100644
--- a/dist/esm/Equivalence.js
+++ b/dist/esm/Equivalence.js
@@ -26,25 +26,26 @@ export const equivalence = handler => self => self.annotations({
  * @category Equivalence
  * @since 1.0.0
  */
-export const make = schema => go(schema.ast);
+export const make = schema => go(schema.ast, []);
 const getHook = /*#__PURE__*/AST.getAnnotation(EquivalenceHookId);
-const go = ast => {
+const getEquivalenceErrorMessage = (message, path) => errors_.getErrorMessageWithPath(`cannot build an Equivalence for ${message}`, path);
+const go = (ast, path) => {
   const hook = getHook(ast);
   if (Option.isSome(hook)) {
     switch (ast._tag) {
       case "Declaration":
-        return hook.value(...ast.typeParameters.map(go));
+        return hook.value(...ast.typeParameters.map(tp => go(tp, path)));
       case "Refinement":
-        return hook.value(go(ast.from));
+        return hook.value(go(ast.from, path));
       default:
         return hook.value();
     }
   }
   switch (ast._tag) {
     case "NeverKeyword":
-      throw new Error(errors_.getEquivalenceErrorMessage("`never`"));
+      throw new Error(getEquivalenceErrorMessage("`never`", path));
     case "Transformation":
-      return go(ast.to);
+      return go(ast.to, path);
     case "Declaration":
     case "Literal":
     case "StringKeyword":
@@ -62,16 +63,16 @@ const go = ast => {
     case "ObjectKeyword":
       return Equal.equals;
     case "Refinement":
-      return go(ast.from);
+      return go(ast.from, path);
     case "Suspend":
       {
-        const get = util_.memoizeThunk(() => go(ast.f()));
+        const get = util_.memoizeThunk(() => go(ast.f(), path));
         return (a, b) => get()(a, b);
       }
     case "TupleType":
       {
-        const elements = ast.elements.map(element => go(element.type));
-        const rest = ast.rest.map(go);
+        const elements = ast.elements.map((element, i) => go(element.type, path.concat(i)));
+        const rest = ast.rest.map(ast => go(ast, path));
         return Equivalence.make((a, b) => {
           const len = a.length;
           if (len !== b.length) {
@@ -114,8 +115,8 @@ const go = ast => {
         if (ast.propertySignatures.length === 0 && ast.indexSignatures.length === 0) {
           return Equal.equals;
         }
-        const propertySignatures = ast.propertySignatures.map(ps => go(ps.type));
-        const indexSignatures = ast.indexSignatures.map(is => go(is.type));
+        const propertySignatures = ast.propertySignatures.map(ps => go(ps.type, path.concat(ps.name)));
+        const indexSignatures = ast.indexSignatures.map(is => go(is.type, path));
         return Equivalence.make((a, b) => {
           const aStringKeys = Object.keys(a);
           const aSymbolKeys = Object.getOwnPropertySymbols(a);
@@ -189,7 +190,7 @@ const go = ast => {
           if (searchTree.otherwise.length > 0) {
             candidates = candidates.concat(searchTree.otherwise);
           }
-          const tuples = candidates.map(ast => [go(ast), ParseResult.is({
+          const tuples = candidates.map(ast => [go(ast, path), ParseResult.is({
             ast
           })]);
           for (let i = 0; i < tuples.length; i++) {
diff --git a/dist/esm/Equivalence.js.map b/dist/esm/Equivalence.js.map
index e3b4b4ddd67a6a0ece3d1179d0a7ae1f35ccbd26..060b412ceab1a24a7d1a5ea9792426ff143e06af 100644
--- a/dist/esm/Equivalence.js.map
+++ b/dist/esm/Equivalence.js.map
@@ -1 +1 @@
-{"version":3,"file":"Equivalence.js","names":["Arr","Equal","Equivalence","Option","Predicate","AST","errors_","util_","ParseResult","EquivalenceHookId","Symbol","for","equivalence","handler","self","annotations","make","schema","go","ast","getHook","getAnnotation","hook","isSome","_tag","value","typeParameters","map","from","Error","getEquivalenceErrorMessage","to","equals","get","memoizeThunk","f","a","b","elements","element","type","rest","len","length","i","Math","min","isNonEmptyReadonlyArray","head","tail","j","propertySignatures","indexSignatures","ps","is","aStringKeys","Object","keys","aSymbolKeys","getOwnPropertySymbols","name","aHas","prototype","hasOwnProperty","call","bHas","isOptional","bSymbolKeys","bStringKeys","base","getParameterBase","parameter","isSymbol","isSymbolKeyword","aKeys","key","searchTree","getSearchTree","types","ownKeys","candidates","isRecord","buckets","literal","String","concat","otherwise","tuples"],"sources":["../../src/Equivalence.ts"],"sourcesContent":[null],"mappings":"AAAA;;;AAIA,OAAO,KAAKA,GAAG,MAAM,cAAc;AACnC,OAAO,KAAKC,KAAK,MAAM,cAAc;AACrC,OAAO,KAAKC,WAAW,MAAM,oBAAoB;AACjD,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,SAAS,MAAM,kBAAkB;AAC7C,OAAO,KAAKC,GAAG,MAAM,UAAU;AAC/B,OAAO,KAAKC,OAAO,MAAM,sBAAsB;AAC/C,OAAO,KAAKC,KAAK,MAAM,oBAAoB;AAC3C,OAAO,KAAKC,WAAW,MAAM,kBAAkB;AAG/C;;;;AAIA,OAAO,MAAMC,iBAAiB,gBAAkBC,MAAM,CAACC,GAAG,CAAC,kCAAkC,CAAC;AAQ9F;;;;AAIA,OAAO,MAAMC,WAAW,GAClBC,OAA6F,IAC1FC,IAA4B,IAA6BA,IAAI,CAACC,WAAW,CAAC;EAAE,CAACN,iBAAiB,GAAGI;AAAO,CAAE,CAAC;AAEpH;;;;AAIA,OAAO,MAAMG,IAAI,GAAaC,MAA8B,IAAiCC,EAAE,CAACD,MAAM,CAACE,GAAG,CAAC;AAE3G,MAAMC,OAAO,gBAAGf,GAAG,CAACgB,aAAa,CAG/BZ,iBAAiB,CAClB;AAED,MAAMS,EAAE,GAAIC,GAAY,IAAkC;EACxD,MAAMG,IAAI,GAAGF,OAAO,CAACD,GAAG,CAAC;EACzB,IAAIhB,MAAM,CAACoB,MAAM,CAACD,IAAI,CAAC,EAAE;IACvB,QAAQH,GAAG,CAACK,IAAI;MACd,KAAK,aAAa;QAChB,OAAOF,IAAI,CAACG,KAAK,CAAC,GAAGN,GAAG,CAACO,cAAc,CAACC,GAAG,CAACT,EAAE,CAAC,CAAC;MAClD,KAAK,YAAY;QACf,OAAOI,IAAI,CAACG,KAAK,CAACP,EAAE,CAACC,GAAG,CAACS,IAAI,CAAC,CAAC;MACjC;QACE,OAAON,IAAI,CAACG,KAAK,EAAE;IACvB;EACF;EACA,QAAQN,GAAG,CAACK,IAAI;IACd,KAAK,cAAc;MACjB,MAAM,IAAIK,KAAK,CAACvB,OAAO,CAACwB,0BAA0B,CAAC,SAAS,CAAC,CAAC;IAChE,KAAK,gBAAgB;MACnB,OAAOZ,EAAE,CAACC,GAAG,CAACY,EAAE,CAAC;IACnB,KAAK,aAAa;IAClB,KAAK,SAAS;IACd,KAAK,eAAe;IACpB,KAAK,iBAAiB;IACtB,KAAK,cAAc;IACnB,KAAK,eAAe;IACpB,KAAK,gBAAgB;IACrB,KAAK,YAAY;IACjB,KAAK,eAAe;IACpB,KAAK,gBAAgB;IACrB,KAAK,eAAe;IACpB,KAAK,kBAAkB;IACvB,KAAK,aAAa;IAClB,KAAK,OAAO;IACZ,KAAK,eAAe;MAClB,OAAO9B,KAAK,CAAC+B,MAAM;IACrB,KAAK,YAAY;MACf,OAAOd,EAAE,CAACC,GAAG,CAACS,IAAI,CAAC;IACrB,KAAK,SAAS;MAAE;QACd,MAAMK,GAAG,GAAG1B,KAAK,CAAC2B,YAAY,CAAC,MAAMhB,EAAE,CAACC,GAAG,CAACgB,CAAC,EAAE,CAAC,CAAC;QACjD,OAAO,CAACC,CAAC,EAAEC,CAAC,KAAKJ,GAAG,EAAE,CAACG,CAAC,EAAEC,CAAC,CAAC;MAC9B;IACA,KAAK,WAAW;MAAE;QAChB,MAAMC,QAAQ,GAAGnB,GAAG,CAACmB,QAAQ,CAACX,GAAG,CAAEY,OAAO,IAAKrB,EAAE,CAACqB,OAAO,CAACC,IAAI,CAAC,CAAC;QAChE,MAAMC,IAAI,GAAGtB,GAAG,CAACsB,IAAI,CAACd,GAAG,CAACT,EAAE,CAAC;QAC7B,OAAOhB,WAAW,CAACc,IAAI,CAAC,CAACoB,CAAC,EAAEC,CAAC,KAAI;UAC/B,MAAMK,GAAG,GAAGN,CAAC,CAACO,MAAM;UACpB,IAAID,GAAG,KAAKL,CAAC,CAACM,MAAM,EAAE;YACpB,OAAO,KAAK;UACd;UACA;UACA;UACA;UACA,IAAIC,CAAC,GAAG,CAAC;UACT,OAAOA,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACJ,GAAG,EAAEvB,GAAG,CAACmB,QAAQ,CAACK,MAAM,CAAC,EAAEC,CAAC,EAAE,EAAE;YAClD,IAAI,CAACN,QAAQ,CAACM,CAAC,CAAC,CAACR,CAAC,CAACQ,CAAC,CAAC,EAAEP,CAAC,CAACO,CAAC,CAAC,CAAC,EAAE;cAC5B,OAAO,KAAK;YACd;UACF;UACA;UACA;UACA;UACA,IAAI5C,GAAG,CAAC+C,uBAAuB,CAACN,IAAI,CAAC,EAAE;YACrC,MAAM,CAACO,IAAI,EAAE,GAAGC,IAAI,CAAC,GAAGR,IAAI;YAC5B,OAAOG,CAAC,GAAGF,GAAG,GAAGO,IAAI,CAACN,MAAM,EAAEC,CAAC,EAAE,EAAE;cACjC,IAAI,CAACI,IAAI,CAACZ,CAAC,CAACQ,CAAC,CAAC,EAAEP,CAAC,CAACO,CAAC,CAAC,CAAC,EAAE;gBACrB,OAAO,KAAK;cACd;YACF;YACA;YACA;YACA;YACA,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACN,MAAM,EAAEO,CAAC,EAAE,EAAE;cACpCN,CAAC,IAAIM,CAAC;cACN,IAAI,CAACD,IAAI,CAACC,CAAC,CAAC,CAACd,CAAC,CAACQ,CAAC,CAAC,EAAEP,CAAC,CAACO,CAAC,CAAC,CAAC,EAAE;gBACxB,OAAO,KAAK;cACd;YACF;UACF;UACA,OAAO,IAAI;QACb,CAAC,CAAC;MACJ;IACA,KAAK,aAAa;MAAE;QAClB,IAAIzB,GAAG,CAACgC,kBAAkB,CAACR,MAAM,KAAK,CAAC,IAAIxB,GAAG,CAACiC,eAAe,CAACT,MAAM,KAAK,CAAC,EAAE;UAC3E,OAAO1C,KAAK,CAAC+B,MAAM;QACrB;QACA,MAAMmB,kBAAkB,GAAGhC,GAAG,CAACgC,kBAAkB,CAACxB,GAAG,CAAE0B,EAAE,IAAKnC,EAAE,CAACmC,EAAE,CAACb,IAAI,CAAC,CAAC;QAC1E,MAAMY,eAAe,GAAGjC,GAAG,CAACiC,eAAe,CAACzB,GAAG,CAAE2B,EAAE,IAAKpC,EAAE,CAACoC,EAAE,CAACd,IAAI,CAAC,CAAC;QACpE,OAAOtC,WAAW,CAACc,IAAI,CAAC,CAACoB,CAAC,EAAEC,CAAC,KAAI;UAC/B,MAAMkB,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACrB,CAAC,CAAC;UAClC,MAAMsB,WAAW,GAAGF,MAAM,CAACG,qBAAqB,CAACvB,CAAC,CAAC;UACnD;UACA;UACA;UACA,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,kBAAkB,CAACR,MAAM,EAAEC,CAAC,EAAE,EAAE;YAClD,MAAMS,EAAE,GAAGlC,GAAG,CAACgC,kBAAkB,CAACP,CAAC,CAAC;YACpC,MAAMgB,IAAI,GAAGP,EAAE,CAACO,IAAI;YACpB,MAAMC,IAAI,GAAGL,MAAM,CAACM,SAAS,CAACC,cAAc,CAACC,IAAI,CAAC5B,CAAC,EAAEwB,IAAI,CAAC;YAC1D,MAAMK,IAAI,GAAGT,MAAM,CAACM,SAAS,CAACC,cAAc,CAACC,IAAI,CAAC3B,CAAC,EAAEuB,IAAI,CAAC;YAC1D,IAAIP,EAAE,CAACa,UAAU,EAAE;cACjB,IAAIL,IAAI,KAAKI,IAAI,EAAE;gBACjB,OAAO,KAAK;cACd;YACF;YACA,IAAIJ,IAAI,IAAII,IAAI,IAAI,CAACd,kBAAkB,CAACP,CAAC,CAAC,CAACR,CAAC,CAACwB,IAAI,CAAC,EAAEvB,CAAC,CAACuB,IAAI,CAAC,CAAC,EAAE;cAC5D,OAAO,KAAK;YACd;UACF;UACA;UACA;UACA;UACA,IAAIO,WAAsC;UAC1C,IAAIC,WAAsC;UAC1C,KAAK,IAAIxB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGQ,eAAe,CAACT,MAAM,EAAEC,CAAC,EAAE,EAAE;YAC/C,MAAMU,EAAE,GAAGnC,GAAG,CAACiC,eAAe,CAACR,CAAC,CAAC;YACjC,MAAMyB,IAAI,GAAGhE,GAAG,CAACiE,gBAAgB,CAAChB,EAAE,CAACiB,SAAS,CAAC;YAC/C,MAAMC,QAAQ,GAAGnE,GAAG,CAACoE,eAAe,CAACJ,IAAI,CAAC;YAC1C,IAAIG,QAAQ,EAAE;cACZL,WAAW,GAAGA,WAAW,IAAIX,MAAM,CAACG,qBAAqB,CAACtB,CAAC,CAAC;cAC5D,IAAIqB,WAAW,CAACf,MAAM,KAAKwB,WAAW,CAACxB,MAAM,EAAE;gBAC7C,OAAO,KAAK;cACd;YACF,CAAC,MAAM;cACLyB,WAAW,GAAGA,WAAW,IAAIZ,MAAM,CAACC,IAAI,CAACpB,CAAC,CAAC;cAC3C,IAAIkB,WAAW,CAACZ,MAAM,KAAKyB,WAAW,CAACzB,MAAM,EAAE;gBAC7C,OAAO,KAAK;cACd;YACF;YACA,MAAM+B,KAAK,GAAGF,QAAQ,GAAGd,WAAW,GAAGH,WAAW;YAClD,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwB,KAAK,CAAC/B,MAAM,EAAEO,CAAC,EAAE,EAAE;cACrC,MAAMyB,GAAG,GAAGD,KAAK,CAACxB,CAAC,CAAC;cACpB,IACE,CAACM,MAAM,CAACM,SAAS,CAACC,cAAc,CAACC,IAAI,CAAC3B,CAAC,EAAEsC,GAAG,CAAC,IAAI,CAACvB,eAAe,CAACR,CAAC,CAAC,CAACR,CAAC,CAACuC,GAAG,CAAC,EAAEtC,CAAC,CAACsC,GAAG,CAAC,CAAC,EACpF;gBACA,OAAO,KAAK;cACd;YACF;UACF;UACA,OAAO,IAAI;QACb,CAAC,CAAC;MACJ;IACA,KAAK,OAAO;MAAE;QACZ,MAAMC,UAAU,GAAGpE,WAAW,CAACqE,aAAa,CAAC1D,GAAG,CAAC2D,KAAK,EAAE,IAAI,CAAC;QAC7D,MAAMC,OAAO,GAAGxE,KAAK,CAACwE,OAAO,CAACH,UAAU,CAACnB,IAAI,CAAC;QAC9C,MAAMf,GAAG,GAAGqC,OAAO,CAACpC,MAAM;QAC1B,OAAOzC,WAAW,CAACc,IAAI,CAAC,CAACoB,CAAC,EAAEC,CAAC,KAAI;UAC/B,IAAI2C,UAAU,GAAmB,EAAE;UACnC,IAAItC,GAAG,GAAG,CAAC,IAAItC,SAAS,CAAC6E,QAAQ,CAAC7C,CAAC,CAAC,EAAE;YACpC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,EAAEE,CAAC,EAAE,EAAE;cAC5B,MAAMgB,IAAI,GAAGmB,OAAO,CAACnC,CAAC,CAAC;cACvB,MAAMsC,OAAO,GAAGN,UAAU,CAACnB,IAAI,CAACG,IAAI,CAAC,CAACsB,OAAO;cAC7C,IAAI1B,MAAM,CAACM,SAAS,CAACC,cAAc,CAACC,IAAI,CAAC5B,CAAC,EAAEwB,IAAI,CAAC,EAAE;gBACjD,MAAMuB,OAAO,GAAGC,MAAM,CAAChD,CAAC,CAACwB,IAAI,CAAC,CAAC;gBAC/B,IAAIJ,MAAM,CAACM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACkB,OAAO,EAAEC,OAAO,CAAC,EAAE;kBAC1DH,UAAU,GAAGA,UAAU,CAACK,MAAM,CAACH,OAAO,CAACC,OAAO,CAAC,CAAC;gBAClD;cACF;YACF;UACF;UACA,IAAIP,UAAU,CAACU,SAAS,CAAC3C,MAAM,GAAG,CAAC,EAAE;YACnCqC,UAAU,GAAGA,UAAU,CAACK,MAAM,CAACT,UAAU,CAACU,SAAS,CAAC;UACtD;UACA,MAAMC,MAAM,GAAGP,UAAU,CAACrD,GAAG,CAAER,GAAG,IAAK,CAACD,EAAE,CAACC,GAAG,CAAC,EAAEX,WAAW,CAAC8C,EAAE,CAAC;YAAEnC;UAAG,CAAS,CAAC,CAAU,CAAC;UAC1F,KAAK,IAAIyB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2C,MAAM,CAAC5C,MAAM,EAAEC,CAAC,EAAE,EAAE;YACtC,MAAM,CAAChC,WAAW,EAAE0C,EAAE,CAAC,GAAGiC,MAAM,CAAC3C,CAAC,CAAC;YACnC,IAAIU,EAAE,CAAClB,CAAC,CAAC,IAAIkB,EAAE,CAACjB,CAAC,CAAC,EAAE;cAClB,IAAIzB,WAAW,CAACwB,CAAC,EAAEC,CAAC,CAAC,EAAE;gBACrB,OAAO,IAAI;cACb;YACF;UACF;UACA,OAAO,KAAK;QACd,CAAC,CAAC;MACJ;EACF;AACF,CAAC","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"Equivalence.js","names":["Arr","Equal","Equivalence","Option","Predicate","AST","errors_","util_","ParseResult","EquivalenceHookId","Symbol","for","equivalence","handler","self","annotations","make","schema","go","ast","getHook","getAnnotation","getEquivalenceErrorMessage","message","path","getErrorMessageWithPath","hook","isSome","_tag","value","typeParameters","map","tp","from","Error","to","equals","get","memoizeThunk","f","a","b","elements","element","i","type","concat","rest","len","length","Math","min","isNonEmptyReadonlyArray","head","tail","j","propertySignatures","indexSignatures","ps","name","is","aStringKeys","Object","keys","aSymbolKeys","getOwnPropertySymbols","aHas","prototype","hasOwnProperty","call","bHas","isOptional","bSymbolKeys","bStringKeys","base","getParameterBase","parameter","isSymbol","isSymbolKeyword","aKeys","key","searchTree","getSearchTree","types","ownKeys","candidates","isRecord","buckets","literal","String","otherwise","tuples"],"sources":["../../src/Equivalence.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/esm/JSONSchema.js b/dist/esm/JSONSchema.js
index 8c0a9144f03a3d6691cce06916428b7c0d80e2f9..9dcdfe26253ac746f425303859d69ed61a7a55e6 100644
--- a/dist/esm/JSONSchema.js
+++ b/dist/esm/JSONSchema.js
@@ -5,13 +5,14 @@ import * as Option from "effect/Option";
 import * as Predicate from "effect/Predicate";
 import * as Record from "effect/Record";
 import * as AST from "./AST.js";
+import * as errors_ from "./internal/errors.js";
 /**
  * @category encoding
  * @since 1.0.0
  */
 export const make = schema => {
   const $defs = {};
-  const jsonSchema = go(schema.ast, $defs);
+  const jsonSchema = go(schema.ast, $defs, true, []);
   const out = {
     $schema,
     ...jsonSchema
@@ -50,7 +51,7 @@ const empty = () => ({
   }]
 });
 const $schema = "http://json-schema.org/draft-07/schema#";
-const getMeta = annotated => Record.getSomes({
+const getJsonSchemaAnnotations = annotated => Record.getSomes({
   description: AST.getDescriptionAnnotation(annotated),
   title: AST.getTitleAnnotation(annotated),
   examples: AST.getExamplesAnnotation(annotated),
@@ -63,44 +64,53 @@ const pruneUndefinedKeyword = ps => {
   }
   return type;
 };
-const getMissingAnnotationError = name => {
-  const out = new Error(`cannot build a JSON Schema for ${name} without a JSON Schema annotation`);
-  out.name = "MissingAnnotation";
-  return out;
-};
-const getUnsupportedIndexSignatureParameterErrorMessage = parameter => `Unsupported index signature parameter (${parameter})`;
+const getMissingAnnotationErrorMessage = (name, path) => errors_.getErrorMessageWithPath(`cannot build a JSON Schema for ${name} without a JSON Schema annotation`, path);
+const getUnsupportedIndexSignatureParameterErrorMessage = (parameter, path) => errors_.getErrorMessageWithPath(`unsupported index signature parameter (${parameter})`, path);
 /** @internal */
 export const DEFINITION_PREFIX = "#/$defs/";
 const get$ref = id => `${DEFINITION_PREFIX}${id}`;
-const go = (ast, $defs, handleIdentifier = true) => {
+const hasTransformation = ast => {
+  switch (ast.from._tag) {
+    case "Transformation":
+      return true;
+    case "Refinement":
+      return hasTransformation(ast.from);
+    case "Suspend":
+      {
+        const from = ast.from.f();
+        if (AST.isRefinement(from)) {
+          return hasTransformation(from);
+        }
+      }
+      break;
+  }
+  return false;
+};
+const go = (ast, $defs, handleIdentifier, path) => {
   const hook = AST.getJSONSchemaAnnotation(ast);
   if (Option.isSome(hook)) {
     const handler = hook.value;
-    switch (ast._tag) {
-      case "Refinement":
-        try {
-          return {
-            ...go(ast.from, $defs),
-            ...getMeta(ast),
-            ...handler
-          };
-        } catch (e) {
-          if (e instanceof Error && e.name === "MissingAnnotation") {
-            return {
-              ...getMeta(ast),
-              ...handler
-            };
-          }
-          throw e;
-        }
+    if (AST.isRefinement(ast) && !hasTransformation(ast)) {
+      try {
+        return {
+          ...go(ast.from, $defs, true, path),
+          ...getJsonSchemaAnnotations(ast),
+          ...handler
+        };
+      } catch (e) {
+        return {
+          ...getJsonSchemaAnnotations(ast),
+          ...handler
+        };
+      }
     }
     return handler;
   }
   const surrogate = AST.getSurrogateAnnotation(ast);
   if (Option.isSome(surrogate)) {
-    return go(surrogate.value, $defs, handleIdentifier);
+    return go(surrogate.value, $defs, handleIdentifier, path);
   }
-  if (handleIdentifier) {
+  if (handleIdentifier && !AST.isTransformation(ast)) {
     const identifier = AST.getJSONIdentifier(ast);
     if (Option.isSome(identifier)) {
       const id = identifier.value;
@@ -109,93 +119,93 @@ const go = (ast, $defs, handleIdentifier = true) => {
       };
       if (!Record.has($defs, id)) {
         $defs[id] = out;
-        $defs[id] = go(ast, $defs, false);
+        $defs[id] = go(ast, $defs, false, path);
       }
       return out;
     }
   }
   switch (ast._tag) {
     case "Declaration":
-      throw getMissingAnnotationError("a declaration");
+      throw new Error(getMissingAnnotationErrorMessage("a declaration", path));
     case "Literal":
       {
         const literal = ast.literal;
         if (literal === null) {
           return {
             const: null,
-            ...getMeta(ast)
+            ...getJsonSchemaAnnotations(ast)
           };
         } else if (Predicate.isString(literal)) {
           return {
             const: literal,
-            ...getMeta(ast)
+            ...getJsonSchemaAnnotations(ast)
           };
         } else if (Predicate.isNumber(literal)) {
           return {
             const: literal,
-            ...getMeta(ast)
+            ...getJsonSchemaAnnotations(ast)
           };
         } else if (Predicate.isBoolean(literal)) {
           return {
             const: literal,
-            ...getMeta(ast)
+            ...getJsonSchemaAnnotations(ast)
           };
         }
-        throw getMissingAnnotationError("a bigint literal");
+        throw new Error(getMissingAnnotationErrorMessage("a bigint literal", path));
       }
     case "UniqueSymbol":
-      throw getMissingAnnotationError("a unique symbol");
+      throw new Error(getMissingAnnotationErrorMessage("a unique symbol", path));
     case "UndefinedKeyword":
-      throw getMissingAnnotationError("`undefined`");
+      throw new Error(getMissingAnnotationErrorMessage("`undefined`", path));
     case "VoidKeyword":
-      throw getMissingAnnotationError("`void`");
+      throw new Error(getMissingAnnotationErrorMessage("`void`", path));
     case "NeverKeyword":
-      throw getMissingAnnotationError("`never`");
+      throw new Error(getMissingAnnotationErrorMessage("`never`", path));
     case "UnknownKeyword":
       return {
         ...unknownJsonSchema,
-        ...getMeta(ast)
+        ...getJsonSchemaAnnotations(ast)
       };
     case "AnyKeyword":
       return {
         ...anyJsonSchema,
-        ...getMeta(ast)
+        ...getJsonSchemaAnnotations(ast)
       };
     case "ObjectKeyword":
       return {
         ...objectJsonSchema,
-        ...getMeta(ast)
+        ...getJsonSchemaAnnotations(ast)
       };
     case "StringKeyword":
       return {
         type: "string",
-        ...getMeta(ast)
+        ...getJsonSchemaAnnotations(ast)
       };
     case "NumberKeyword":
       return {
         type: "number",
-        ...getMeta(ast)
+        ...getJsonSchemaAnnotations(ast)
       };
     case "BooleanKeyword":
       return {
         type: "boolean",
-        ...getMeta(ast)
+        ...getJsonSchemaAnnotations(ast)
       };
     case "BigIntKeyword":
-      throw getMissingAnnotationError("`bigint`");
+      throw new Error(getMissingAnnotationErrorMessage("`bigint`", path));
     case "SymbolKeyword":
-      throw getMissingAnnotationError("`symbol`");
+      throw new Error(getMissingAnnotationErrorMessage("`symbol`", path));
     case "TupleType":
       {
-        const elements = ast.elements.map(e => go(e.type, $defs));
-        const rest = ast.rest.map(ast => go(ast, $defs));
+        const len = ast.elements.length;
+        const elements = ast.elements.map((e, i) => go(e.type, $defs, true, path.concat(i)));
+        const rest = ast.rest.map(ast => go(ast, $defs, true, path));
         const output = {
           type: "array"
         };
         // ---------------------------------------------
         // handle elements
         // ---------------------------------------------
-        const len = elements.length;
         if (len > 0) {
           output.minItems = len - ast.elements.filter(element => element.isOptional).length;
           output.items = elements;
@@ -214,7 +224,7 @@ const go = (ast, $defs, handleIdentifier = true) => {
           // handle post rest elements
           // ---------------------------------------------
           if (rest.length > 1) {
-            throw new Error("Generating a JSON Schema for post-rest elements is not currently supported. You're welcome to contribute by submitting a Pull Request.");
+            throw new Error(errors_.getErrorMessageWithPath("Generating a JSON Schema for post-rest elements is not currently supported. You're welcome to contribute by submitting a Pull Request.", path));
           }
         } else {
           if (len > 0) {
@@ -225,7 +235,7 @@ const go = (ast, $defs, handleIdentifier = true) => {
         }
         return {
           ...output,
-          ...getMeta(ast)
+          ...getJsonSchemaAnnotations(ast)
         };
       }
     case "TypeLiteral":
@@ -233,7 +243,7 @@ const go = (ast, $defs, handleIdentifier = true) => {
         if (ast.propertySignatures.length === 0 && ast.indexSignatures.length === 0) {
           return {
             ...empty(),
-            ...getMeta(ast)
+            ...getJsonSchemaAnnotations(ast)
           };
         }
         let additionalProperties = undefined;
@@ -243,13 +253,13 @@ const go = (ast, $defs, handleIdentifier = true) => {
           switch (parameter._tag) {
             case "StringKeyword":
               {
-                additionalProperties = go(is.type, $defs);
+                additionalProperties = go(is.type, $defs, true, path);
                 break;
               }
             case "TemplateLiteral":
               {
                 patternProperties = {
-                  [AST.getTemplateLiteralRegExp(parameter).source]: go(is.type, $defs)
+                  [AST.getTemplateLiteralRegExp(parameter).source]: go(is.type, $defs, true, path)
                 };
                 break;
               }
@@ -258,20 +268,20 @@ const go = (ast, $defs, handleIdentifier = true) => {
                 const hook = AST.getJSONSchemaAnnotation(parameter);
                 if (Option.isSome(hook) && "pattern" in hook.value && Predicate.isString(hook.value.pattern)) {
                   patternProperties = {
-                    [hook.value.pattern]: go(is.type, $defs)
+                    [hook.value.pattern]: go(is.type, $defs, true, path)
                   };
                   break;
                 }
-                throw new Error(getUnsupportedIndexSignatureParameterErrorMessage(parameter));
+                throw new Error(getUnsupportedIndexSignatureParameterErrorMessage(parameter, path));
               }
             case "SymbolKeyword":
-              throw new Error(getUnsupportedIndexSignatureParameterErrorMessage(parameter));
+              throw new Error(getUnsupportedIndexSignatureParameterErrorMessage(parameter, path));
           }
         }
         const propertySignatures = ast.propertySignatures.map(ps => {
           return {
-            ...go(pruneUndefinedKeyword(ps), $defs),
-            ...getMeta(ps)
+            ...go(pruneUndefinedKeyword(ps), $defs, true, path.concat(ps.name)),
+            ...getJsonSchemaAnnotations(ps)
           };
         });
         const output = {
@@ -294,7 +304,7 @@ const go = (ast, $defs, handleIdentifier = true) => {
               output.required.push(name);
             }
           } else {
-            throw new Error(`cannot encode ${String(name)} key to JSON Schema`);
+            throw new Error(errors_.getErrorMessageWithPath(`cannot encode ${String(name)} key to JSON Schema`, path));
           }
         }
         // ---------------------------------------------
@@ -308,7 +318,7 @@ const go = (ast, $defs, handleIdentifier = true) => {
         }
         return {
           ...output,
-          ...getMeta(ast)
+          ...getJsonSchemaAnnotations(ast)
         };
       }
     case "Union":
@@ -316,7 +326,7 @@ const go = (ast, $defs, handleIdentifier = true) => {
         const enums = [];
         const anyOf = [];
         for (const type of ast.types) {
-          const schema = go(type, $defs);
+          const schema = go(type, $defs, true, path);
           if ("const" in schema) {
             if (Object.keys(schema).length > 1) {
               anyOf.push(schema);
@@ -331,12 +341,12 @@ const go = (ast, $defs, handleIdentifier = true) => {
           if (enums.length === 1) {
             return {
               const: enums[0],
-              ...getMeta(ast)
+              ...getJsonSchemaAnnotations(ast)
             };
           } else {
             return {
               enum: enums,
-              ...getMeta(ast)
+              ...getJsonSchemaAnnotations(ast)
             };
           }
         } else {
@@ -351,7 +361,7 @@ const go = (ast, $defs, handleIdentifier = true) => {
           }
           return {
             anyOf,
-            ...getMeta(ast)
+            ...getJsonSchemaAnnotations(ast)
           };
         }
       }
@@ -363,12 +373,12 @@ const go = (ast, $defs, handleIdentifier = true) => {
             title: e[0],
             const: e[1]
           })),
-          ...getMeta(ast)
+          ...getJsonSchemaAnnotations(ast)
         };
       }
     case "Refinement":
       {
-        throw new Error("cannot build a JSON Schema for a refinement without a JSON Schema annotation");
+        throw new Error(errors_.getErrorMessageWithPath("cannot build a JSON Schema for a refinement without a JSON Schema annotation", path));
       }
     case "TemplateLiteral":
       {
@@ -377,19 +387,19 @@ const go = (ast, $defs, handleIdentifier = true) => {
           type: "string",
           description: "a template literal",
           pattern: regex.source,
-          ...getMeta(ast)
+          ...getJsonSchemaAnnotations(ast)
         };
       }
     case "Suspend":
       {
         const identifier = Option.orElse(AST.getJSONIdentifier(ast), () => AST.getJSONIdentifier(ast.f()));
         if (Option.isNone(identifier)) {
-          throw new Error("Generating a JSON Schema for suspended schemas requires an identifier annotation");
+          throw new Error(errors_.getErrorMessageWithPath("Generating a JSON Schema for suspended schemas requires an identifier annotation", path));
         }
-        return go(ast.f(), $defs);
+        return go(ast.f(), $defs, true, path);
       }
     case "Transformation":
-      return go(ast.to, $defs);
+      return go(ast.from, $defs, true, path);
   }
 };
 //# sourceMappingURL=JSONSchema.js.map
\ No newline at end of file
diff --git a/dist/esm/JSONSchema.js.map b/dist/esm/JSONSchema.js.map
index eb357fa37c507bd05c6776a570a59ea1cadea461..58a663a051e9f755881c258b6f453202e006be1c 100644
--- a/dist/esm/JSONSchema.js.map
+++ b/dist/esm/JSONSchema.js.map
@@ -1 +1 @@
-{"version":3,"file":"JSONSchema.js","names":["Option","Predicate","Record","AST","make","schema","$defs","jsonSchema","go","ast","out","$schema","id","get$ref","isEmptyRecord","anyJsonSchema","$id","unknownJsonSchema","objectJsonSchema","empty","getMeta","annotated","getSomes","description","getDescriptionAnnotation","title","getTitleAnnotation","examples","getExamplesAnnotation","default","getDefaultAnnotation","pruneUndefinedKeyword","ps","type","isOptional","isUnion","isNone","getJSONSchemaAnnotation","Union","types","filter","isUndefinedKeyword","annotations","getMissingAnnotationError","name","Error","getUnsupportedIndexSignatureParameterErrorMessage","parameter","DEFINITION_PREFIX","handleIdentifier","hook","isSome","handler","value","_tag","from","e","surrogate","getSurrogateAnnotation","identifier","getJSONIdentifier","$ref","has","literal","const","isString","isNumber","isBoolean","elements","map","rest","output","len","length","minItems","element","items","head","additionalItems","maxItems","propertySignatures","indexSignatures","additionalProperties","undefined","patternProperties","is","getTemplateLiteralRegExp","source","pattern","required","properties","i","push","String","enums","anyOf","Object","keys","enum","$comment","oneOf","regex","orElse","f","to"],"sources":["../../src/JSONSchema.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"JSONSchema.js","names":["Option","Predicate","Record","AST","errors_","make","schema","$defs","jsonSchema","go","ast","out","$schema","id","get$ref","isEmptyRecord","anyJsonSchema","$id","unknownJsonSchema","objectJsonSchema","empty","getJsonSchemaAnnotations","annotated","getSomes","description","getDescriptionAnnotation","title","getTitleAnnotation","examples","getExamplesAnnotation","default","getDefaultAnnotation","pruneUndefinedKeyword","ps","type","isOptional","isUnion","isNone","getJSONSchemaAnnotation","Union","types","filter","isUndefinedKeyword","annotations","getMissingAnnotationErrorMessage","name","path","getErrorMessageWithPath","getUnsupportedIndexSignatureParameterErrorMessage","parameter","DEFINITION_PREFIX","hasTransformation","from","_tag","f","isRefinement","handleIdentifier","hook","isSome","handler","value","e","surrogate","getSurrogateAnnotation","isTransformation","identifier","getJSONIdentifier","$ref","has","Error","literal","const","isString","isNumber","isBoolean","len","elements","length","map","i","concat","rest","output","minItems","element","items","head","additionalItems","maxItems","propertySignatures","indexSignatures","additionalProperties","undefined","patternProperties","is","getTemplateLiteralRegExp","source","pattern","required","properties","push","String","enums","anyOf","Object","keys","enum","$comment","oneOf","regex","orElse"],"sources":["../../src/JSONSchema.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/esm/ParseResult.js b/dist/esm/ParseResult.js
index 5f8f828a30f401adbeb82354924bb50768a365ae..36675cef799d9480f2732d6482422c80a05cc20a 100644
--- a/dist/esm/ParseResult.js
+++ b/dist/esm/ParseResult.js
@@ -432,7 +432,9 @@ const getEither = (ast, isDecoding, options) => {
 };
 const getSync = (ast, isDecoding, options) => {
   const parser = getEither(ast, isDecoding, options);
-  return (input, overrideOptions) => Either.getOrThrowWith(parser(input, overrideOptions), e => new Error(TreeFormatter.formatIssueSync(e)));
+  return (input, overrideOptions) => Either.getOrThrowWith(parser(input, overrideOptions), issue => new Error(TreeFormatter.formatIssueSync(issue), {
+    cause: issue
+  }));
 };
 const getOption = (ast, isDecoding, options) => {
   const parser = getEither(ast, isDecoding, options);
diff --git a/dist/esm/ParseResult.js.map b/dist/esm/ParseResult.js.map
index 594323599c996c80cdbbb90ffa783cddb78d450f..0c5267c25a9d2822fb4409176eb383802fdfd0be 100644
--- a/dist/esm/ParseResult.js.map
+++ b/dist/esm/ParseResult.js.map
@@ -1 +1 @@
-{"version":3,"file":"ParseResult.js","names":["Arr","TaggedError","Effect","Either","dual","globalValue","Inspectable","Option","Predicate","AST","util_","TreeFormatter","Declaration","ast","actual","error","_tag","constructor","Refinement","kind","TupleType","errors","output","Index","index","TypeLiteral","Key","key","Unexpected","Transformation","Type","message","fromNullable","Forbidden","Missing","missing","Member","Union","ParseError","toString","formatIssueSync","toJSON","_id","NodeInspectSymbol","parseError","issue","succeed","right","fail","left","_try","try","fromOption","flatMap","self","f","s","map","mapError","eitherOrUndefined","mapBoth","options","onFailure","onSuccess","orElse","catchAll","mergeParseOptions","a","b","undefined","out","onExcessProperty","getEither","isDecoding","parser","goMemo","u","overrideOptions","getSync","input","getOrThrowWith","e","Error","getOption","getRight","getEffect","isEffectAllowed","decodeUnknownSync","schema","decodeUnknownOption","decodeUnknownEither","decodeUnknownPromise","decodeUnknown","runPromise","encodeUnknownSync","encodeUnknownOption","encodeUnknownEither","encodeUnknownPromise","encodeUnknown","decodeSync","decodeOption","decodeEither","decodePromise","decode","validateSync","typeAST","validateOption","validateEither","validatePromise","validate","is","isRight","isExact","asserts","result","isLeft","encodeSync","encodeOption","encodeEither","encodePromise","encode","decodeMemoMap","Symbol","for","WeakMap","encodeMemoMap","memoMap","memo","get","go","set","getConcurrency","getOrUndefined","getConcurrencyAnnotation","getBatching","getBatchingAnnotation","from","i","handleForbidden","match","filter","defaultParseOption","onNone","onSome","to","dropRightRefinement","transform","getFinalTransformation","transformation","i1","i2","parse","typeParameters","fromRefinement","literal","symbol","isUndefined","isNever","isString","isNumber","isBoolean","isBigInt","isSymbol","isObject","enums","some","_","value","regex","getTemplateLiteralRegExp","test","elements","type","rest","requiredLen","isOptional","length","expectedAST","make","Literal","concurrency","batching","isArray","allErrors","es","stepKey","len","push","queue","te","eu","sortByIndex","nk","either","t","void","isNonEmptyReadonlyArray","head","tail","j","computeResult","isNonEmptyArray","cqueue","suspend","state","copy","forEach","discard","propertySignatures","indexSignatures","isNotNullable","expectedKeys","ps","name","parameter","concat","ownKeys","UniqueSymbol","expected","isRecord","onExcessPropertyError","onExcessPropertyPreserve","hasKey","Object","prototype","hasOwnProperty","call","indexSignature","keys","getKeysForIndexSignature","keu","vpr","veu","tv","assign","searchTree","getSearchTree","types","Map","candidates","buckets","String","literals","PropertySignature","otherwise","candidate","pr","finalResult","neverKeyword","memoizeThunk","annotations","refinement","getLiterals","annotation","getSurrogateAnnotation","isSome","propertySignature","encodedAST","isLiteral","members","member","tags","hash","isRefinement","effect","runSync","sort","pst","propertySignatureTransformations","o","none"],"sources":["../../src/ParseResult.ts"],"sourcesContent":[null],"mappings":"AAAA;;;AAIA,OAAO,KAAKA,GAAG,MAAM,cAAc;AACnC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,MAAM,MAAM,eAAe;AAEvC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAO,KAAKC,WAAW,MAAM,oBAAoB;AACjD,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,SAAS,MAAM,kBAAkB;AAE7C,OAAO,KAAKC,GAAG,MAAM,UAAU;AAC/B,OAAO,KAAKC,KAAK,MAAM,oBAAoB;AAE3C,OAAO,KAAKC,aAAa,MAAM,oBAAoB;AAkBnD;;;;;;AAMA,OAAM,MAAOC,WAAW;EAKDC,GAAA;EAA+BC,MAAA;EAA0BC,KAAA;EAJ9E;;;EAGSC,IAAI,GAAG,aAAa;EAC7BC,YAAqBJ,GAAoB,EAAWC,MAAe,EAAWC,KAAiB;IAA1E,KAAAF,GAAG,GAAHA,GAAG;IAA4B,KAAAC,MAAM,GAANA,MAAM;IAAoB,KAAAC,KAAK,GAALA,KAAK;EAAe;;AAGpG;;;;;;AAMA,OAAM,MAAOG,UAAU;EAMVL,GAAA;EACAC,MAAA;EACAK,IAAA;EACAJ,KAAA;EARX;;;EAGSC,IAAI,GAAG,YAAY;EAC5BC,YACWJ,GAA4B,EAC5BC,MAAe,EACfK,IAA0B,EAC1BJ,KAAiB;IAHjB,KAAAF,GAAG,GAAHA,GAAG;IACH,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAK,IAAI,GAAJA,IAAI;IACJ,KAAAJ,KAAK,GAALA,KAAK;EACb;;AAGL;;;;;;AAMA,OAAM,MAAOK,SAAS;EAMTP,GAAA;EACAC,MAAA;EACAO,MAAA;EACAC,MAAA;EARX;;;EAGSN,IAAI,GAAG,WAAW;EAC3BC,YACWJ,GAAkB,EAClBC,MAAe,EACfO,MAAwC,EACxCC,MAAA,GAAiC,EAAE;IAHnC,KAAAT,GAAG,GAAHA,GAAG;IACH,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAO,MAAM,GAANA,MAAM;IACN,KAAAC,MAAM,GAANA,MAAM;EACd;;AAGL;;;;;;AAMA,OAAM,MAAOC,KAAK;EAKKC,KAAA;EAAwBT,KAAA;EAJ7C;;;EAGSC,IAAI,GAAG,OAAO;EACvBC,YAAqBO,KAAa,EAAWT,KAAwC;IAAhE,KAAAS,KAAK,GAALA,KAAK;IAAmB,KAAAT,KAAK,GAALA,KAAK;EAAsC;;AAG1F;;;;;;AAMA,OAAM,MAAOU,WAAW;EAMXZ,GAAA;EACAC,MAAA;EACAO,MAAA;EACAC,MAAA;EARX;;;EAGSN,IAAI,GAAG,aAAa;EAC7BC,YACWJ,GAAoB,EACpBC,MAAe,EACfO,MAAsC,EACtCC,MAAA,GAA4C,EAAE;IAH9C,KAAAT,GAAG,GAAHA,GAAG;IACH,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAO,MAAM,GAANA,MAAM;IACN,KAAAC,MAAM,GAANA,MAAM;EACd;;AAGL;;;;;;AAMA,OAAM,MAAOI,GAAG;EAKOC,GAAA;EAA2BZ,KAAA;EAJhD;;;EAGSC,IAAI,GAAG,KAAK;EACrBC,YAAqBU,GAAgB,EAAWZ,KAAwC;IAAnE,KAAAY,GAAG,GAAHA,GAAG;IAAwB,KAAAZ,KAAK,GAALA,KAAK;EAAsC;;AAG7F;;;;;;AAMA,OAAM,MAAOa,UAAU;EAKAf,GAAA;EAJrB;;;EAGSG,IAAI,GAAG,YAAY;EAC5BC,YAAqBJ,GAAY;IAAZ,KAAAA,GAAG,GAAHA,GAAG;EAAY;;AAGtC;;;;;;AAMA,OAAM,MAAOgB,cAAc;EAMdhB,GAAA;EACAC,MAAA;EACAK,IAAA;EACAJ,KAAA;EARX;;;EAGSC,IAAI,GAAG,gBAAgB;EAChCC,YACWJ,GAAuB,EACvBC,MAAe,EACfK,IAA2C,EAC3CJ,KAAiB;IAHjB,KAAAF,GAAG,GAAHA,GAAG;IACH,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAK,IAAI,GAAJA,IAAI;IACJ,KAAAJ,KAAK,GAALA,KAAK;EACb;;AAGL;;;;;;;AAOA,OAAM,MAAOe,IAAI;EASMjB,GAAA;EAAuBC,MAAA;EAR5C;;;EAGSE,IAAI,GAAG,MAAM;EACtB;;;EAGSe,OAAO;EAChBd,YAAqBJ,GAAY,EAAWC,MAAe,EAAEiB,OAAgB;IAAxD,KAAAlB,GAAG,GAAHA,GAAG;IAAoB,KAAAC,MAAM,GAANA,MAAM;IAChD,IAAI,CAACiB,OAAO,GAAGxB,MAAM,CAACyB,YAAY,CAACD,OAAO,CAAC;EAC7C;;AAGF;;;;;;AAMA,OAAM,MAAOE,SAAS;EASCpB,GAAA;EAAuBC,MAAA;EAR5C;;;EAGSE,IAAI,GAAG,WAAW;EAC3B;;;EAGSe,OAAO;EAChBd,YAAqBJ,GAAY,EAAWC,MAAe,EAAEiB,OAAgB;IAAxD,KAAAlB,GAAG,GAAHA,GAAG;IAAoB,KAAAC,MAAM,GAANA,MAAM;IAChD,IAAI,CAACiB,OAAO,GAAGxB,MAAM,CAACyB,YAAY,CAACD,OAAO,CAAC;EAC7C;;AAGF;;;;;;AAMA,OAAM,MAAOG,OAAO;EAClB;;;EAGSlB,IAAI,GAAG,SAAS;;AAG3B;;;;AAIA,OAAO,MAAMmB,OAAO,gBAAY,IAAID,OAAO,EAAE;AAE7C;;;;;;AAMA,OAAM,MAAOE,MAAM;EAKIvB,GAAA;EAAuBE,KAAA;EAJ5C;;;EAGSC,IAAI,GAAG,QAAQ;EACxBC,YAAqBJ,GAAY,EAAWE,KAAiB;IAAxC,KAAAF,GAAG,GAAHA,GAAG;IAAoB,KAAAE,KAAK,GAALA,KAAK;EAAe;;AAGlE;;;;;;AAMA,OAAM,MAAOsB,KAAK;EAMLxB,GAAA;EACAC,MAAA;EACAO,MAAA;EAPX;;;EAGSL,IAAI,GAAG,OAAO;EACvBC,YACWJ,GAAc,EACdC,MAAe,EACfO,MAA8D;IAF9D,KAAAR,GAAG,GAAHA,GAAG;IACH,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAO,MAAM,GAANA,MAAM;EACd;;AAGL;;;AAGA,OAAM,MAAOiB,UAAW,SAAQrC,WAAW,CAAC,YAAY,CAAiC;EACvF,IAAI8B,OAAOA,CAAA;IACT,OAAO,IAAI,CAACQ,QAAQ,EAAE;EACxB;EACA;;;EAGAA,QAAQA,CAAA;IACN,OAAO5B,aAAa,CAAC6B,eAAe,CAAC,IAAI,CAACzB,KAAK,CAAC;EAClD;EACA;;;EAGA0B,MAAMA,CAAA;IACJ,OAAO;MACLC,GAAG,EAAE,YAAY;MACjBX,OAAO,EAAE,IAAI,CAACQ,QAAQ;KACvB;EACH;EACA;;;EAGA,CAACjC,WAAW,CAACqC,iBAAiB,IAAC;IAC7B,OAAO,IAAI,CAACF,MAAM,EAAE;EACtB;;AAGF;;;;AAIA,OAAO,MAAMG,UAAU,GAAIC,KAAiB,IAAiB,IAAIP,UAAU,CAAC;EAAEvB,KAAK,EAAE8B;AAAK,CAAE,CAAC;AAE7F;;;;AAIA,OAAO,MAAMC,OAAO,GAA8C3C,MAAM,CAAC4C,KAAK;AAE9E;;;;AAIA,OAAO,MAAMC,IAAI,GAA4D7C,MAAM,CAAC8C,IAAI;AAExF,MAAMC,IAAI,GAG2B/C,MAAM,CAACgD,GAAG;AAE/C;AACE;;;;AAIAD,IAAI,IAAIC,GAAG;AAGb;;;;AAIA,OAAO,MAAMC,UAAU,GAGnBjD,MAAM,CAACiD,UAAU;AAErB;;;;AAIA,OAAO,MAAMC,OAAO,gBAQhBjD,IAAI,CAAC,CAAC,EAAE,CACVkD,IAA4B,EAC5BC,CAAqC,KACD;EACpC,MAAMC,CAAC,GAAQF,IAAI;EACnB,IAAIE,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;IACxB,OAAOA,CAAC;EACV;EACA,IAAIA,CAAC,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;IACzB,OAAOD,CAAC,CAACC,CAAC,CAACT,KAAK,CAAC;EACnB;EACA,OAAO7C,MAAM,CAACmD,OAAO,CAACC,IAAI,EAAEC,CAAC,CAAC;AAChC,CAAC,CAAC;AAEF;;;;AAIA,OAAO,MAAME,GAAG,gBAGZrD,IAAI,CAAC,CAAC,EAAE,CAAakD,IAA4B,EAAEC,CAAc,KAA4B;EAC/F,MAAMC,CAAC,GAAQF,IAAI;EACnB,IAAIE,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;IACxB,OAAOA,CAAC;EACV;EACA,IAAIA,CAAC,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;IACzB,OAAOrD,MAAM,CAAC4C,KAAK,CAACQ,CAAC,CAACC,CAAC,CAACT,KAAK,CAAC,CAAC;EACjC;EACA,OAAO7C,MAAM,CAACuD,GAAG,CAACH,IAAI,EAAEC,CAAC,CAAC;AAC5B,CAAC,CAAC;AAEF;;;;AAIA,OAAO,MAAMG,QAAQ,gBAGjBtD,IAAI,CAAC,CAAC,EAAE,CAAckD,IAA4B,EAAEC,CAAe,KAA6B;EAClG,MAAMC,CAAC,GAAQF,IAAI;EACnB,IAAIE,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;IACxB,OAAOrD,MAAM,CAAC8C,IAAI,CAACM,CAAC,CAACC,CAAC,CAACP,IAAI,CAAC,CAAC;EAC/B;EACA,IAAIO,CAAC,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;IACzB,OAAOA,CAAC;EACV;EACA,OAAOtD,MAAM,CAACwD,QAAQ,CAACJ,IAAI,EAAEC,CAAC,CAAC;AACjC,CAAC,CAAC;AAEF;;;;AAIA,OAAO,MAAMI,iBAAiB,GAC5BL,IAA4B,IACO;EACnC,MAAME,CAAC,GAAQF,IAAI;EACnB,IAAIE,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,IAAIA,CAAC,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;IACjD,OAAOA,CAAC;EACV;AACF,CAAC;AAED;;;;AAIA,OAAO,MAAMI,OAAO,gBAQhBxD,IAAI,CAAC,CAAC,EAAE,CACVkD,IAA4B,EAC5BO,OAA+E,KACnD;EAC5B,MAAML,CAAC,GAAQF,IAAI;EACnB,IAAIE,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;IACxB,OAAOrD,MAAM,CAAC8C,IAAI,CAACY,OAAO,CAACC,SAAS,CAACN,CAAC,CAACP,IAAI,CAAC,CAAC;EAC/C;EACA,IAAIO,CAAC,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;IACzB,OAAOrD,MAAM,CAAC4C,KAAK,CAACc,OAAO,CAACE,SAAS,CAACP,CAAC,CAACT,KAAK,CAAC,CAAC;EACjD;EACA,OAAO7C,MAAM,CAAC0D,OAAO,CAACN,IAAI,EAAEO,OAAO,CAAC;AACtC,CAAC,CAAC;AAEF;;;;AAIA,OAAO,MAAMG,MAAM,gBAQf5D,IAAI,CAAC,CAAC,EAAE,CACVkD,IAA4B,EAC5BC,CAAsC,KACD;EACrC,MAAMC,CAAC,GAAQF,IAAI;EACnB,IAAIE,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;IACxB,OAAOD,CAAC,CAACC,CAAC,CAACP,IAAI,CAAC;EAClB;EACA,IAAIO,CAAC,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;IACzB,OAAOA,CAAC;EACV;EACA,OAAOtD,MAAM,CAAC+D,QAAQ,CAACX,IAAI,EAAEC,CAAC,CAAC;AACjC,CAAC,CAAC;AAgBF;AACA,OAAO,MAAMW,iBAAiB,GAAGA,CAC/BC,CAA+B,EAC/BC,CAA+B,KACC;EAChC,IAAID,CAAC,KAAKE,SAAS,EAAE;IACnB,OAAOD,CAAC;EACV;EACA,IAAIA,CAAC,KAAKC,SAAS,EAAE;IACnB,OAAOF,CAAC;EACV;EACA,MAAMG,GAAG,GAA8B,EAAE;EACzCA,GAAG,CAACjD,MAAM,GAAG+C,CAAC,CAAC/C,MAAM,IAAI8C,CAAC,CAAC9C,MAAM;EACjCiD,GAAG,CAACC,gBAAgB,GAAGH,CAAC,CAACG,gBAAgB,IAAIJ,CAAC,CAACI,gBAAgB;EAC/D,OAAOD,GAAG;AACZ,CAAC;AAED,MAAME,SAAS,GAAGA,CAAC3D,GAAY,EAAE4D,UAAmB,EAAEZ,OAA0B,KAAI;EAClF,MAAMa,MAAM,GAAGC,MAAM,CAAC9D,GAAG,EAAE4D,UAAU,CAAC;EACtC,OAAO,CAACG,CAAU,EAAEC,eAAkC,KACpDH,MAAM,CAACE,CAAC,EAAEV,iBAAiB,CAACL,OAAO,EAAEgB,eAAe,CAAC,CAAQ;AACjE,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACjE,GAAY,EAAE4D,UAAmB,EAAEZ,OAA0B,KAAI;EAChF,MAAMa,MAAM,GAAGF,SAAS,CAAC3D,GAAG,EAAE4D,UAAU,EAAEZ,OAAO,CAAC;EAClD,OAAO,CAACkB,KAAc,EAAEF,eAAkC,KACxD1E,MAAM,CAAC6E,cAAc,CAACN,MAAM,CAACK,KAAK,EAAEF,eAAe,CAAC,EAAGI,CAAC,IAAK,IAAIC,KAAK,CAACvE,aAAa,CAAC6B,eAAe,CAACyC,CAAC,CAAC,CAAC,CAAC;AAC7G,CAAC;AAED,MAAME,SAAS,GAAGA,CAACtE,GAAY,EAAE4D,UAAmB,EAAEZ,OAA0B,KAAI;EAClF,MAAMa,MAAM,GAAGF,SAAS,CAAC3D,GAAG,EAAE4D,UAAU,EAAEZ,OAAO,CAAC;EAClD,OAAO,CAACkB,KAAc,EAAEF,eAAkC,KACxDtE,MAAM,CAAC6E,QAAQ,CAACV,MAAM,CAACK,KAAK,EAAEF,eAAe,CAAC,CAAC;AACnD,CAAC;AAED,MAAMQ,SAAS,GAAGA,CAAIxE,GAAY,EAAE4D,UAAmB,EAAEZ,OAA0B,KAAI;EACrF,MAAMa,MAAM,GAAGC,MAAM,CAAC9D,GAAG,EAAE4D,UAAU,CAAC;EACtC,OAAO,CAACM,KAAc,EAAEF,eAAkC,KACxDH,MAAM,CAACK,KAAK,EAAE;IAAE,GAAGb,iBAAiB,CAACL,OAAO,EAAEgB,eAAe,CAAC;IAAES,eAAe,EAAE;EAAI,CAAE,CAAC;AAC5F,CAAC;AAED;;;;AAIA,OAAO,MAAMC,iBAAiB,GAAGA,CAC/BC,MAAkC,EAClC3B,OAA0B,KACgCiB,OAAO,CAACU,MAAM,CAAC3E,GAAG,EAAE,IAAI,EAAEgD,OAAO,CAAC;AAE9F;;;;AAIA,OAAO,MAAM4B,mBAAmB,GAAGA,CACjCD,MAAkC,EAClC3B,OAA0B,KAC+CsB,SAAS,CAACK,MAAM,CAAC3E,GAAG,EAAE,IAAI,EAAEgD,OAAO,CAAC;AAE/G;;;;AAIA,OAAO,MAAM6B,mBAAmB,GAAGA,CACjCF,MAAkC,EAClC3B,OAA0B,KAE1BW,SAAS,CAACgB,MAAM,CAAC3E,GAAG,EAAE,IAAI,EAAEgD,OAAO,CAAC;AAEtC;;;;AAIA,OAAO,MAAM8B,oBAAoB,GAAGA,CAClCH,MAAkC,EAClC3B,OAA0B,KACxB;EACF,MAAMa,MAAM,GAAGkB,aAAa,CAACJ,MAAM,EAAE3B,OAAO,CAAC;EAC7C,OAAO,CAACe,CAAU,EAAEC,eAAkC,KAAiB3E,MAAM,CAAC2F,UAAU,CAACnB,MAAM,CAACE,CAAC,EAAEC,eAAe,CAAC,CAAC;AACtH,CAAC;AAED;;;;AAIA,OAAO,MAAMe,aAAa,GAAGA,CAC3BJ,MAA8B,EAC9B3B,OAA0B,KAE1BwB,SAAS,CAACG,MAAM,CAAC3E,GAAG,EAAE,IAAI,EAAEgD,OAAO,CAAC;AAEtC;;;;AAIA,OAAO,MAAMiC,iBAAiB,GAAGA,CAC/BN,MAAkC,EAClC3B,OAA0B,KACgCiB,OAAO,CAACU,MAAM,CAAC3E,GAAG,EAAE,KAAK,EAAEgD,OAAO,CAAC;AAE/F;;;;AAIA,OAAO,MAAMkC,mBAAmB,GAAGA,CACjCP,MAAkC,EAClC3B,OAA0B,KAC+CsB,SAAS,CAACK,MAAM,CAAC3E,GAAG,EAAE,KAAK,EAAEgD,OAAO,CAAC;AAEhH;;;;AAIA,OAAO,MAAMmC,mBAAmB,GAAGA,CACjCR,MAAkC,EAClC3B,OAA0B,KAE1BW,SAAS,CAACgB,MAAM,CAAC3E,GAAG,EAAE,KAAK,EAAEgD,OAAO,CAAC;AAEvC;;;;AAIA,OAAO,MAAMoC,oBAAoB,GAAGA,CAClCT,MAAkC,EAClC3B,OAA0B,KACxB;EACF,MAAMa,MAAM,GAAGwB,aAAa,CAACV,MAAM,EAAE3B,OAAO,CAAC;EAC7C,OAAO,CAACe,CAAU,EAAEC,eAAkC,KAAiB3E,MAAM,CAAC2F,UAAU,CAACnB,MAAM,CAACE,CAAC,EAAEC,eAAe,CAAC,CAAC;AACtH,CAAC;AAED;;;;AAIA,OAAO,MAAMqB,aAAa,GAAGA,CAC3BV,MAA8B,EAC9B3B,OAA0B,KAE1BwB,SAAS,CAACG,MAAM,CAAC3E,GAAG,EAAE,KAAK,EAAEgD,OAAO,CAAC;AAEvC;;;;AAIA,OAAO,MAAMsC,UAAU,GAGgCZ,iBAAiB;AAExE;;;;AAIA,OAAO,MAAMa,YAAY,GAG6CX,mBAAmB;AAEzF;;;;AAIA,OAAO,MAAMY,YAAY,GAGyDX,mBAAmB;AAErG;;;;AAIA,OAAO,MAAMY,aAAa,GAGsCX,oBAAoB;AAEpF;;;;AAIA,OAAO,MAAMY,MAAM,GAGkEX,aAAa;AAElG;;;;AAIA,OAAO,MAAMY,YAAY,GAAGA,CAC1BhB,MAA8B,EAC9B3B,OAA0B,KACgCiB,OAAO,CAACrE,GAAG,CAACgG,OAAO,CAACjB,MAAM,CAAC3E,GAAG,CAAC,EAAE,IAAI,EAAEgD,OAAO,CAAC;AAE3G;;;;AAIA,OAAO,MAAM6C,cAAc,GAAGA,CAC5BlB,MAA8B,EAC9B3B,OAA0B,KAE1BsB,SAAS,CAAC1E,GAAG,CAACgG,OAAO,CAACjB,MAAM,CAAC3E,GAAG,CAAC,EAAE,IAAI,EAAEgD,OAAO,CAAC;AAEnD;;;;AAIA,OAAO,MAAM8C,cAAc,GAAGA,CAC5BnB,MAA8B,EAC9B3B,OAA0B,KAE1BW,SAAS,CAAC/D,GAAG,CAACgG,OAAO,CAACjB,MAAM,CAAC3E,GAAG,CAAC,EAAE,IAAI,EAAEgD,OAAO,CAAC;AAEnD;;;;AAIA,OAAO,MAAM+C,eAAe,GAAGA,CAC7BpB,MAAkC,EAClC3B,OAA0B,KACxB;EACF,MAAMa,MAAM,GAAGmC,QAAQ,CAACrB,MAAM,EAAE3B,OAAO,CAAC;EACxC,OAAO,CAACe,CAAU,EAAEC,eAAkC,KAAiB3E,MAAM,CAAC2F,UAAU,CAACnB,MAAM,CAACE,CAAC,EAAEC,eAAe,CAAC,CAAC;AACtH,CAAC;AAED;;;;AAIA,OAAO,MAAMgC,QAAQ,GAAGA,CACtBrB,MAA8B,EAC9B3B,OAA0B,KAE1BwB,SAAS,CAAC5E,GAAG,CAACgG,OAAO,CAACjB,MAAM,CAAC3E,GAAG,CAAC,EAAE,IAAI,EAAEgD,OAAO,CAAC;AAEnD;;;;AAIA,OAAO,MAAMiD,EAAE,GAAGA,CAAUtB,MAA8B,EAAE3B,OAA0B,KAAI;EACxF,MAAMa,MAAM,GAAGC,MAAM,CAAClE,GAAG,CAACgG,OAAO,CAACjB,MAAM,CAAC3E,GAAG,CAAC,EAAE,IAAI,CAAC;EACpD,OAAO,CAAC+D,CAAU,EAAEC,eAAkC,KACpD1E,MAAM,CAAC4G,OAAO,CAACrC,MAAM,CAACE,CAAC,EAAE;IAAE,GAAGV,iBAAiB,CAACL,OAAO,EAAEgB,eAAe,CAAC;IAAEmC,OAAO,EAAE;EAAI,CAAE,CAAQ,CAAC;AACvG,CAAC;AAED;;;;AAIA,OAAO,MAAMC,OAAO,GAAGA,CAAUzB,MAA8B,EAAE3B,OAA0B,KAAI;EAC7F,MAAMa,MAAM,GAAGC,MAAM,CAAClE,GAAG,CAACgG,OAAO,CAACjB,MAAM,CAAC3E,GAAG,CAAC,EAAE,IAAI,CAAC;EACpD,OAAO,CAAC+D,CAAU,EAAEC,eAAkC,KAAoB;IACxE,MAAMqC,MAAM,GAAmCxC,MAAM,CAACE,CAAC,EAAE;MACvD,GAAGV,iBAAiB,CAACL,OAAO,EAAEgB,eAAe,CAAC;MAC9CmC,OAAO,EAAE;KACV,CAAQ;IACT,IAAI7G,MAAM,CAACgH,MAAM,CAACD,MAAM,CAAC,EAAE;MACzB,MAAM,IAAIhC,KAAK,CAACvE,aAAa,CAAC6B,eAAe,CAAC0E,MAAM,CAACjE,IAAI,CAAC,CAAC;IAC7D;EACF,CAAC;AACH,CAAC;AAED;;;;AAIA,OAAO,MAAMmE,UAAU,GAGgCtB,iBAAiB;AAExE;;;;AAIA,OAAO,MAAMuB,YAAY,GAGiDtB,mBAAmB;AAE7F;;;;AAIA,OAAO,MAAMuB,YAAY,GAGyDtB,mBAAmB;AAErG;;;;AAIA,OAAO,MAAMuB,aAAa,GAGsCtB,oBAAoB;AAEpF;;;;AAIA,OAAO,MAAMuB,MAAM,GAGkEtB,aAAa;AAYlG,MAAMuB,aAAa,gBAAGpH,WAAW,eAC/BqH,MAAM,CAACC,GAAG,CAAC,qCAAqC,CAAC,EACjD,MAAM,IAAIC,OAAO,EAAmB,CACrC;AACD,MAAMC,aAAa,gBAAGxH,WAAW,eAC/BqH,MAAM,CAACC,GAAG,CAAC,qCAAqC,CAAC,EACjD,MAAM,IAAIC,OAAO,EAAmB,CACrC;AAED,MAAMjD,MAAM,GAAGA,CAAC9D,GAAY,EAAE4D,UAAmB,KAAY;EAC3D,MAAMqD,OAAO,GAAGrD,UAAU,GAAGgD,aAAa,GAAGI,aAAa;EAC1D,MAAME,IAAI,GAAGD,OAAO,CAACE,GAAG,CAACnH,GAAG,CAAC;EAC7B,IAAIkH,IAAI,EAAE;IACR,OAAOA,IAAI;EACb;EACA,MAAMrD,MAAM,GAAGuD,EAAE,CAACpH,GAAG,EAAE4D,UAAU,CAAC;EAClCqD,OAAO,CAACI,GAAG,CAACrH,GAAG,EAAE6D,MAAM,CAAC;EACxB,OAAOA,MAAM;AACf,CAAC;AAED,MAAMyD,cAAc,GAAItH,GAAY,IAClCN,MAAM,CAAC6H,cAAc,CAAC3H,GAAG,CAAC4H,wBAAwB,CAACxH,GAAG,CAAC,CAAC;AAE1D,MAAMyH,WAAW,GAAIzH,GAAY,IAC/BN,MAAM,CAAC6H,cAAc,CAAC3H,GAAG,CAAC8H,qBAAqB,CAAC1H,GAAG,CAAC,CAAC;AAEvD,MAAMoH,EAAE,GAAGA,CAACpH,GAAY,EAAE4D,UAAmB,KAAY;EACvD,QAAQ5D,GAAG,CAACG,IAAI;IACd,KAAK,YAAY;MAAE;QACjB,IAAIyD,UAAU,EAAE;UACd,MAAM+D,IAAI,GAAG7D,MAAM,CAAC9D,GAAG,CAAC2H,IAAI,EAAE,IAAI,CAAC;UACnC,OAAO,CAACC,CAAC,EAAE5E,OAAO,KAChB6E,eAAe,CACbrF,OAAO,CACLK,QAAQ,CAAC8E,IAAI,CAACC,CAAC,EAAE5E,OAAO,CAAC,EAAGoB,CAAC,IAAK,IAAI/D,UAAU,CAACL,GAAG,EAAE4H,CAAC,EAAE,MAAM,EAAExD,CAAC,CAAC,CAAC,EACnEd,CAAC,IACA5D,MAAM,CAACoI,KAAK,CACV9H,GAAG,CAAC+H,MAAM,CAACzE,CAAC,EAAEN,OAAO,IAAIpD,GAAG,CAACoI,kBAAkB,EAAEhI,GAAG,CAAC,EACrD;YACEiI,MAAM,EAAEA,CAAA,KAAM3I,MAAM,CAAC4C,KAAK,CAACoB,CAAC,CAAC;YAC7B4E,MAAM,EAAG9D,CAAC,IAAK9E,MAAM,CAAC8C,IAAI,CAAC,IAAI/B,UAAU,CAACL,GAAG,EAAE4H,CAAC,EAAE,WAAW,EAAExD,CAAC,CAAC;WAClE,CACF,CACJ,EACDpE,GAAG,EACH4H,CAAC,EACD5E,OAAO,CACR;QACL,CAAC,MAAM;UACL,MAAM2E,IAAI,GAAG7D,MAAM,CAAClE,GAAG,CAACgG,OAAO,CAAC5F,GAAG,CAAC,EAAE,IAAI,CAAC;UAC3C,MAAMmI,EAAE,GAAGrE,MAAM,CAACsE,mBAAmB,CAACpI,GAAG,CAAC2H,IAAI,CAAC,EAAE,KAAK,CAAC;UACvD,OAAO,CAACC,CAAC,EAAE5E,OAAO,KAAK6E,eAAe,CAACrF,OAAO,CAACmF,IAAI,CAACC,CAAC,EAAE5E,OAAO,CAAC,EAAGM,CAAC,IAAK6E,EAAE,CAAC7E,CAAC,EAAEN,OAAO,CAAC,CAAC,EAAEhD,GAAG,EAAE4H,CAAC,EAAE5E,OAAO,CAAC;QAC3G;MACF;IACA,KAAK,gBAAgB;MAAE;QACrB,MAAMqF,SAAS,GAAGC,sBAAsB,CAACtI,GAAG,CAACuI,cAAc,EAAE3E,UAAU,CAAC;QACxE,MAAM+D,IAAI,GAAG/D,UAAU,GAAGE,MAAM,CAAC9D,GAAG,CAAC2H,IAAI,EAAE,IAAI,CAAC,GAAG7D,MAAM,CAAC9D,GAAG,CAACmI,EAAE,EAAE,KAAK,CAAC;QACxE,MAAMA,EAAE,GAAGvE,UAAU,GAAGE,MAAM,CAAC9D,GAAG,CAACmI,EAAE,EAAE,IAAI,CAAC,GAAGrE,MAAM,CAAC9D,GAAG,CAAC2H,IAAI,EAAE,KAAK,CAAC;QACtE,OAAO,CAACa,EAAE,EAAExF,OAAO,KACjB6E,eAAe,CACbrF,OAAO,CACLK,QAAQ,CACN8E,IAAI,CAACa,EAAE,EAAExF,OAAO,CAAC,EAChBoB,CAAC,IAAK,IAAIpD,cAAc,CAAChB,GAAG,EAAEwI,EAAE,EAAE5E,UAAU,GAAG,SAAS,GAAG,MAAM,EAAEQ,CAAC,CAAC,CACvE,EACAd,CAAC,IACAd,OAAO,CACLK,QAAQ,CACNwF,SAAS,CAAC/E,CAAC,EAAEN,OAAO,IAAIpD,GAAG,CAACoI,kBAAkB,EAAEhI,GAAG,CAAC,EACnDoE,CAAC,IAAK,IAAIpD,cAAc,CAAChB,GAAG,EAAEwI,EAAE,EAAE,gBAAgB,EAAEpE,CAAC,CAAC,CACxD,EACAqE,EAAE,IACD5F,QAAQ,CACNsF,EAAE,CAACM,EAAE,EAAEzF,OAAO,CAAC,EACdoB,CAAC,IAAK,IAAIpD,cAAc,CAAChB,GAAG,EAAEwI,EAAE,EAAE5E,UAAU,GAAG,MAAM,GAAG,SAAS,EAAEQ,CAAC,CAAC,CACvE,CACJ,CACJ,EACDpE,GAAG,EACHwI,EAAE,EACFxF,OAAO,CACR;MACL;IACA,KAAK,aAAa;MAAE;QAClB,MAAM0F,KAAK,GAAG9E,UAAU,GACpB5D,GAAG,CAAC+E,aAAa,CAAC,GAAG/E,GAAG,CAAC2I,cAAc,CAAC,GACxC3I,GAAG,CAACqF,aAAa,CAAC,GAAGrF,GAAG,CAAC2I,cAAc,CAAC;QAC5C,OAAO,CAACf,CAAC,EAAE5E,OAAO,KAChB6E,eAAe,CACbhF,QAAQ,CAAC6F,KAAK,CAACd,CAAC,EAAE5E,OAAO,IAAIpD,GAAG,CAACoI,kBAAkB,EAAEhI,GAAG,CAAC,EAAGoE,CAAC,IAAK,IAAIrE,WAAW,CAACC,GAAG,EAAE4H,CAAC,EAAExD,CAAC,CAAC,CAAC,EAC7FpE,GAAG,EACH4H,CAAC,EACD5E,OAAO,CACR;MACL;IACA,KAAK,SAAS;MACZ,OAAO4F,cAAc,CAAC5I,GAAG,EAAG+D,CAAC,IAA8BA,CAAC,KAAK/D,GAAG,CAAC6I,OAAO,CAAC;IAC/E,KAAK,cAAc;MACjB,OAAOD,cAAc,CAAC5I,GAAG,EAAG+D,CAAC,IAA6BA,CAAC,KAAK/D,GAAG,CAAC8I,MAAM,CAAC;IAC7E,KAAK,kBAAkB;MACrB,OAAOF,cAAc,CAAC5I,GAAG,EAAEL,SAAS,CAACoJ,WAAW,CAAC;IACnD,KAAK,aAAa;MAChB,OAAOH,cAAc,CAAC5I,GAAG,EAAEL,SAAS,CAACoJ,WAAW,CAAC;IACnD,KAAK,cAAc;MACjB,OAAOH,cAAc,CAAC5I,GAAG,EAAEL,SAAS,CAACqJ,OAAO,CAAC;IAC/C,KAAK,gBAAgB;IACrB,KAAK,YAAY;MACf,OAAO1J,MAAM,CAAC4C,KAAK;IACrB,KAAK,eAAe;MAClB,OAAO0G,cAAc,CAAC5I,GAAG,EAAEL,SAAS,CAACsJ,QAAQ,CAAC;IAChD,KAAK,eAAe;MAClB,OAAOL,cAAc,CAAC5I,GAAG,EAAEL,SAAS,CAACuJ,QAAQ,CAAC;IAChD,KAAK,gBAAgB;MACnB,OAAON,cAAc,CAAC5I,GAAG,EAAEL,SAAS,CAACwJ,SAAS,CAAC;IACjD,KAAK,eAAe;MAClB,OAAOP,cAAc,CAAC5I,GAAG,EAAEL,SAAS,CAACyJ,QAAQ,CAAC;IAChD,KAAK,eAAe;MAClB,OAAOR,cAAc,CAAC5I,GAAG,EAAEL,SAAS,CAAC0J,QAAQ,CAAC;IAChD,KAAK,eAAe;MAClB,OAAOT,cAAc,CAAC5I,GAAG,EAAEL,SAAS,CAAC2J,QAAQ,CAAC;IAChD,KAAK,OAAO;MACV,OAAOV,cAAc,CAAC5I,GAAG,EAAG+D,CAAC,IAAe/D,GAAG,CAACuJ,KAAK,CAACC,IAAI,CAAC,CAAC,CAACC,CAAC,EAAEC,KAAK,CAAC,KAAKA,KAAK,KAAK3F,CAAC,CAAC,CAAC;IAC1F,KAAK,iBAAiB;MAAE;QACtB,MAAM4F,KAAK,GAAG/J,GAAG,CAACgK,wBAAwB,CAAC5J,GAAG,CAAC;QAC/C,OAAO4I,cAAc,CAAC5I,GAAG,EAAG+D,CAAC,IAAepE,SAAS,CAACsJ,QAAQ,CAAClF,CAAC,CAAC,IAAI4F,KAAK,CAACE,IAAI,CAAC9F,CAAC,CAAC,CAAC;MACrF;IACA,KAAK,WAAW;MAAE;QAChB,MAAM+F,QAAQ,GAAG9J,GAAG,CAAC8J,QAAQ,CAAClH,GAAG,CAAEwB,CAAC,IAAKN,MAAM,CAACM,CAAC,CAAC2F,IAAI,EAAEnG,UAAU,CAAC,CAAC;QACpE,MAAMoG,IAAI,GAAGhK,GAAG,CAACgK,IAAI,CAACpH,GAAG,CAAE5C,GAAG,IAAK8D,MAAM,CAAC9D,GAAG,EAAE4D,UAAU,CAAC,CAAC;QAC3D,IAAIqG,WAAW,GAAGjK,GAAG,CAAC8J,QAAQ,CAAC/B,MAAM,CAAE3D,CAAC,IAAK,CAACA,CAAC,CAAC8F,UAAU,CAAC,CAACC,MAAM;QAClE,IAAInK,GAAG,CAACgK,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE;UACvBF,WAAW,IAAIjK,GAAG,CAACgK,IAAI,CAACG,MAAM,GAAG,CAAC;QACpC;QACA,MAAMC,WAAW,GAAGxK,GAAG,CAAC4B,KAAK,CAAC6I,IAAI,CAACrK,GAAG,CAAC8J,QAAQ,CAAClH,GAAG,CAAC,CAAC6G,CAAC,EAAE7B,CAAC,KAAK,IAAIhI,GAAG,CAAC0K,OAAO,CAAC1C,CAAC,CAAC,CAAC,CAAC;QAClF,MAAM2C,WAAW,GAAGjD,cAAc,CAACtH,GAAG,CAAC;QACvC,MAAMwK,QAAQ,GAAG/C,WAAW,CAACzH,GAAG,CAAC;QACjC,OAAO,CAACkE,KAAc,EAAElB,OAAO,KAAI;UACjC,IAAI,CAAC7D,GAAG,CAACsL,OAAO,CAACvG,KAAK,CAAC,EAAE;YACvB,OAAO5E,MAAM,CAAC8C,IAAI,CAAC,IAAInB,IAAI,CAACjB,GAAG,EAAEkE,KAAK,CAAC,CAAC;UAC1C;UACA,MAAMwG,SAAS,GAAG1H,OAAO,EAAExC,MAAM,KAAK,KAAK;UAC3C,MAAMmK,EAAE,GAA2B,EAAE;UACrC,IAAIC,OAAO,GAAG,CAAC;UACf;UACA;UACA;UACA,MAAMC,GAAG,GAAG3G,KAAK,CAACiG,MAAM;UACxB,KAAK,IAAIvC,CAAC,GAAGiD,GAAG,EAAEjD,CAAC,IAAIqC,WAAW,GAAG,CAAC,EAAErC,CAAC,EAAE,EAAE;YAC3C,MAAMxD,CAAC,GAAG,IAAI1D,KAAK,CAACkH,CAAC,EAAEtG,OAAO,CAAC;YAC/B,IAAIoJ,SAAS,EAAE;cACbC,EAAE,CAACG,IAAI,CAAC,CAACF,OAAO,EAAE,EAAExG,CAAC,CAAC,CAAC;cACvB;YACF,CAAC,MAAM;cACL,OAAO9E,MAAM,CAAC8C,IAAI,CAAC,IAAI7B,SAAS,CAACP,GAAG,EAAEkE,KAAK,EAAE,CAACE,CAAC,CAAC,CAAC,CAAC;YACpD;UACF;UAEA;UACA;UACA;UACA,IAAIpE,GAAG,CAACgK,IAAI,CAACG,MAAM,KAAK,CAAC,EAAE;YACzB,KAAK,IAAIvC,CAAC,GAAG5H,GAAG,CAAC8J,QAAQ,CAACK,MAAM,EAAEvC,CAAC,IAAIiD,GAAG,GAAG,CAAC,EAAEjD,CAAC,EAAE,EAAE;cACnD,MAAMxD,CAAC,GAAG,IAAI1D,KAAK,CAACkH,CAAC,EAAE,IAAI7G,UAAU,CAACqJ,WAAW,CAAC,CAAC;cACnD,IAAIM,SAAS,EAAE;gBACbC,EAAE,CAACG,IAAI,CAAC,CAACF,OAAO,EAAE,EAAExG,CAAC,CAAC,CAAC;gBACvB;cACF,CAAC,MAAM;gBACL,OAAO9E,MAAM,CAAC8C,IAAI,CAAC,IAAI7B,SAAS,CAACP,GAAG,EAAEkE,KAAK,EAAE,CAACE,CAAC,CAAC,CAAC,CAAC;cACpD;YACF;UACF;UAEA,MAAM3D,MAAM,GAAyB,EAAE;UACvC,IAAImH,CAAC,GAAG,CAAC;UAKT,IAAImD,KAAK,GAEOvH,SAAS;UAEzB;UACA;UACA;UACA,OAAOoE,CAAC,GAAGkC,QAAQ,CAACK,MAAM,EAAEvC,CAAC,EAAE,EAAE;YAC/B,IAAIiD,GAAG,GAAGjD,CAAC,GAAG,CAAC,EAAE;cACf,IAAI5H,GAAG,CAAC8J,QAAQ,CAAClC,CAAC,CAAC,CAACsC,UAAU,EAAE;gBAC9B;gBACA;cACF;YACF,CAAC,MAAM;cACL,MAAMrG,MAAM,GAAGiG,QAAQ,CAAClC,CAAC,CAAC;cAC1B,MAAMoD,EAAE,GAAGnH,MAAM,CAACK,KAAK,CAAC0D,CAAC,CAAC,EAAE5E,OAAO,CAAC;cACpC,MAAMiI,EAAE,GAAGnI,iBAAiB,CAACkI,EAAE,CAAC;cAChC,IAAIC,EAAE,EAAE;gBACN,IAAI3L,MAAM,CAACgH,MAAM,CAAC2E,EAAE,CAAC,EAAE;kBACrB;kBACA,MAAM7G,CAAC,GAAG,IAAI1D,KAAK,CAACkH,CAAC,EAAEqD,EAAE,CAAC7I,IAAI,CAAC;kBAC/B,IAAIsI,SAAS,EAAE;oBACbC,EAAE,CAACG,IAAI,CAAC,CAACF,OAAO,EAAE,EAAExG,CAAC,CAAC,CAAC;oBACvB;kBACF,CAAC,MAAM;oBACL,OAAO9E,MAAM,CAAC8C,IAAI,CAAC,IAAI7B,SAAS,CAACP,GAAG,EAAEkE,KAAK,EAAE,CAACE,CAAC,CAAC,EAAE8G,WAAW,CAACzK,MAAM,CAAC,CAAC,CAAC;kBACzE;gBACF;gBACAA,MAAM,CAACqK,IAAI,CAAC,CAACF,OAAO,EAAE,EAAEK,EAAE,CAAC/I,KAAK,CAAC,CAAC;cACpC,CAAC,MAAM;gBACL,MAAMiJ,EAAE,GAAGP,OAAO,EAAE;gBACpB,MAAMjK,KAAK,GAAGiH,CAAC;gBACf,IAAI,CAACmD,KAAK,EAAE;kBACVA,KAAK,GAAG,EAAE;gBACZ;gBACAA,KAAK,CAACD,IAAI,CAAC,CAAC;kBAAEH,EAAE;kBAAElK;gBAAM,CAAS,KAC/BpB,MAAM,CAACmD,OAAO,CAACnD,MAAM,CAAC+L,MAAM,CAACJ,EAAE,CAAC,EAAGK,CAAC,IAAI;kBACtC,IAAI/L,MAAM,CAACgH,MAAM,CAAC+E,CAAC,CAAC,EAAE;oBACpB;oBACA,MAAMjH,CAAC,GAAG,IAAI1D,KAAK,CAACC,KAAK,EAAE0K,CAAC,CAACjJ,IAAI,CAAC;oBAClC,IAAIsI,SAAS,EAAE;sBACbC,EAAE,CAACG,IAAI,CAAC,CAACK,EAAE,EAAE/G,CAAC,CAAC,CAAC;sBAChB,OAAO/E,MAAM,CAACiM,IAAI;oBACpB,CAAC,MAAM;sBACL,OAAOhM,MAAM,CAAC8C,IAAI,CAAC,IAAI7B,SAAS,CAACP,GAAG,EAAEkE,KAAK,EAAE,CAACE,CAAC,CAAC,EAAE8G,WAAW,CAACzK,MAAM,CAAC,CAAC,CAAC;oBACzE;kBACF;kBACAA,MAAM,CAACqK,IAAI,CAAC,CAACK,EAAE,EAAEE,CAAC,CAACnJ,KAAK,CAAC,CAAC;kBAC1B,OAAO7C,MAAM,CAACiM,IAAI;gBACpB,CAAC,CAAC,CACH;cACH;YACF;UACF;UACA;UACA;UACA;UACA,IAAInM,GAAG,CAACoM,uBAAuB,CAACvB,IAAI,CAAC,EAAE;YACrC,MAAM,CAACwB,IAAI,EAAE,GAAGC,IAAI,CAAC,GAAGzB,IAAI;YAC5B,OAAOpC,CAAC,GAAGiD,GAAG,GAAGY,IAAI,CAACtB,MAAM,EAAEvC,CAAC,EAAE,EAAE;cACjC,MAAMoD,EAAE,GAAGQ,IAAI,CAACtH,KAAK,CAAC0D,CAAC,CAAC,EAAE5E,OAAO,CAAC;cAClC,MAAMiI,EAAE,GAAGnI,iBAAiB,CAACkI,EAAE,CAAC;cAChC,IAAIC,EAAE,EAAE;gBACN,IAAI3L,MAAM,CAACgH,MAAM,CAAC2E,EAAE,CAAC,EAAE;kBACrB,MAAM7G,CAAC,GAAG,IAAI1D,KAAK,CAACkH,CAAC,EAAEqD,EAAE,CAAC7I,IAAI,CAAC;kBAC/B,IAAIsI,SAAS,EAAE;oBACbC,EAAE,CAACG,IAAI,CAAC,CAACF,OAAO,EAAE,EAAExG,CAAC,CAAC,CAAC;oBACvB;kBACF,CAAC,MAAM;oBACL,OAAO9E,MAAM,CAAC8C,IAAI,CAAC,IAAI7B,SAAS,CAACP,GAAG,EAAEkE,KAAK,EAAE,CAACE,CAAC,CAAC,EAAE8G,WAAW,CAACzK,MAAM,CAAC,CAAC,CAAC;kBACzE;gBACF,CAAC,MAAM;kBACLA,MAAM,CAACqK,IAAI,CAAC,CAACF,OAAO,EAAE,EAAEK,EAAE,CAAC/I,KAAK,CAAC,CAAC;gBACpC;cACF,CAAC,MAAM;gBACL,MAAMiJ,EAAE,GAAGP,OAAO,EAAE;gBACpB,MAAMjK,KAAK,GAAGiH,CAAC;gBACf,IAAI,CAACmD,KAAK,EAAE;kBACVA,KAAK,GAAG,EAAE;gBACZ;gBACAA,KAAK,CAACD,IAAI,CACR,CAAC;kBAAEH,EAAE;kBAAElK;gBAAM,CAAS,KACpBpB,MAAM,CAACmD,OAAO,CAACnD,MAAM,CAAC+L,MAAM,CAACJ,EAAE,CAAC,EAAGK,CAAC,IAAI;kBACtC,IAAI/L,MAAM,CAACgH,MAAM,CAAC+E,CAAC,CAAC,EAAE;oBACpB,MAAMjH,CAAC,GAAG,IAAI1D,KAAK,CAACC,KAAK,EAAE0K,CAAC,CAACjJ,IAAI,CAAC;oBAClC,IAAIsI,SAAS,EAAE;sBACbC,EAAE,CAACG,IAAI,CAAC,CAACK,EAAE,EAAE/G,CAAC,CAAC,CAAC;sBAChB,OAAO/E,MAAM,CAACiM,IAAI;oBACpB,CAAC,MAAM;sBACL,OAAOhM,MAAM,CAAC8C,IAAI,CAAC,IAAI7B,SAAS,CAACP,GAAG,EAAEkE,KAAK,EAAE,CAACE,CAAC,CAAC,EAAE8G,WAAW,CAACzK,MAAM,CAAC,CAAC,CAAC;oBACzE;kBACF,CAAC,MAAM;oBACLA,MAAM,CAACqK,IAAI,CAAC,CAACK,EAAE,EAAEE,CAAC,CAACnJ,KAAK,CAAC,CAAC;oBAC1B,OAAO7C,MAAM,CAACiM,IAAI;kBACpB;gBACF,CAAC,CAAC,CACL;cACH;YACF;YACA;YACA;YACA;YACA,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACtB,MAAM,EAAEuB,CAAC,EAAE,EAAE;cACpC9D,CAAC,IAAI8D,CAAC;cACN,IAAIb,GAAG,GAAGjD,CAAC,GAAG,CAAC,EAAE;gBACf;cACF,CAAC,MAAM;gBACL,MAAMoD,EAAE,GAAGS,IAAI,CAACC,CAAC,CAAC,CAACxH,KAAK,CAAC0D,CAAC,CAAC,EAAE5E,OAAO,CAAC;gBACrC,MAAMiI,EAAE,GAAGnI,iBAAiB,CAACkI,EAAE,CAAC;gBAChC,IAAIC,EAAE,EAAE;kBACN,IAAI3L,MAAM,CAACgH,MAAM,CAAC2E,EAAE,CAAC,EAAE;oBACrB;oBACA,MAAM7G,CAAC,GAAG,IAAI1D,KAAK,CAACkH,CAAC,EAAEqD,EAAE,CAAC7I,IAAI,CAAC;oBAC/B,IAAIsI,SAAS,EAAE;sBACbC,EAAE,CAACG,IAAI,CAAC,CAACF,OAAO,EAAE,EAAExG,CAAC,CAAC,CAAC;sBACvB;oBACF,CAAC,MAAM;sBACL,OAAO9E,MAAM,CAAC8C,IAAI,CAAC,IAAI7B,SAAS,CAACP,GAAG,EAAEkE,KAAK,EAAE,CAACE,CAAC,CAAC,EAAE8G,WAAW,CAACzK,MAAM,CAAC,CAAC,CAAC;oBACzE;kBACF;kBACAA,MAAM,CAACqK,IAAI,CAAC,CAACF,OAAO,EAAE,EAAEK,EAAE,CAAC/I,KAAK,CAAC,CAAC;gBACpC,CAAC,MAAM;kBACL,MAAMiJ,EAAE,GAAGP,OAAO,EAAE;kBACpB,MAAMjK,KAAK,GAAGiH,CAAC;kBACf,IAAI,CAACmD,KAAK,EAAE;oBACVA,KAAK,GAAG,EAAE;kBACZ;kBACAA,KAAK,CAACD,IAAI,CACR,CAAC;oBAAEH,EAAE;oBAAElK;kBAAM,CAAS,KACpBpB,MAAM,CAACmD,OAAO,CAACnD,MAAM,CAAC+L,MAAM,CAACJ,EAAE,CAAC,EAAGK,CAAC,IAAI;oBACtC,IAAI/L,MAAM,CAACgH,MAAM,CAAC+E,CAAC,CAAC,EAAE;sBACpB;sBACA,MAAMjH,CAAC,GAAG,IAAI1D,KAAK,CAACC,KAAK,EAAE0K,CAAC,CAACjJ,IAAI,CAAC;sBAClC,IAAIsI,SAAS,EAAE;wBACbC,EAAE,CAACG,IAAI,CAAC,CAACK,EAAE,EAAE/G,CAAC,CAAC,CAAC;wBAChB,OAAO/E,MAAM,CAACiM,IAAI;sBACpB,CAAC,MAAM;wBACL,OAAOhM,MAAM,CAAC8C,IAAI,CAAC,IAAI7B,SAAS,CAACP,GAAG,EAAEkE,KAAK,EAAE,CAACE,CAAC,CAAC,EAAE8G,WAAW,CAACzK,MAAM,CAAC,CAAC,CAAC;sBACzE;oBACF;oBACAA,MAAM,CAACqK,IAAI,CAAC,CAACK,EAAE,EAAEE,CAAC,CAACnJ,KAAK,CAAC,CAAC;oBAC1B,OAAO7C,MAAM,CAACiM,IAAI;kBACpB,CAAC,CAAC,CACL;gBACH;cACF;YACF;UACF;UAEA;UACA;UACA;UACA,MAAMK,aAAa,GAAGA,CAAC;YAAEhB,EAAE;YAAElK;UAAM,CAAS,KAC1CtB,GAAG,CAACyM,eAAe,CAACjB,EAAE,CAAC,GACrBrL,MAAM,CAAC8C,IAAI,CAAC,IAAI7B,SAAS,CAACP,GAAG,EAAEkE,KAAK,EAAEgH,WAAW,CAACP,EAAE,CAAC,EAAEO,WAAW,CAACzK,MAAM,CAAC,CAAC,CAAC,GAC5EnB,MAAM,CAAC4C,KAAK,CAACgJ,WAAW,CAACzK,MAAM,CAAC,CAAC;UACrC,IAAIsK,KAAK,IAAIA,KAAK,CAACZ,MAAM,GAAG,CAAC,EAAE;YAC7B,MAAM0B,MAAM,GAAGd,KAAK;YACpB,OAAO1L,MAAM,CAACyM,OAAO,CAAC,MAAK;cACzB,MAAMC,KAAK,GAAU;gBACnBpB,EAAE,EAAExL,GAAG,CAAC6M,IAAI,CAACrB,EAAE,CAAC;gBAChBlK,MAAM,EAAEtB,GAAG,CAAC6M,IAAI,CAACvL,MAAM;eACxB;cACD,OAAOpB,MAAM,CAACmD,OAAO,CACnBnD,MAAM,CAAC4M,OAAO,CAACJ,MAAM,EAAGnJ,CAAC,IAAKA,CAAC,CAACqJ,KAAK,CAAC,EAAE;gBAAExB,WAAW;gBAAEC,QAAQ;gBAAE0B,OAAO,EAAE;cAAI,CAAE,CAAC,EACjF,MAAMP,aAAa,CAACI,KAAK,CAAC,CAC3B;YACH,CAAC,CAAC;UACJ;UACA,OAAOJ,aAAa,CAAC;YAAElL,MAAM;YAAEkK;UAAE,CAAE,CAAC;QACtC,CAAC;MACH;IACA,KAAK,aAAa;MAAE;QAClB,IAAI3K,GAAG,CAACmM,kBAAkB,CAAChC,MAAM,KAAK,CAAC,IAAInK,GAAG,CAACoM,eAAe,CAACjC,MAAM,KAAK,CAAC,EAAE;UAC3E,OAAOvB,cAAc,CAAC5I,GAAG,EAAEL,SAAS,CAAC0M,aAAa,CAAC;QACrD;QAEA,MAAMF,kBAAkB,GAAoD,EAAE;QAC9E,MAAMG,YAAY,GAA8B,EAAE;QAClD,KAAK,MAAMC,EAAE,IAAIvM,GAAG,CAACmM,kBAAkB,EAAE;UACvCA,kBAAkB,CAACrB,IAAI,CAAC,CAAChH,MAAM,CAACyI,EAAE,CAACxC,IAAI,EAAEnG,UAAU,CAAC,EAAE2I,EAAE,CAAC,CAAC;UAC1DD,YAAY,CAACC,EAAE,CAACC,IAAI,CAAC,GAAG,IAAI;QAC9B;QAEA,MAAMJ,eAAe,GAAGpM,GAAG,CAACoM,eAAe,CAACxJ,GAAG,CAAEqD,EAAE,IACjD,CACEnC,MAAM,CAACmC,EAAE,CAACwG,SAAS,EAAE7I,UAAU,CAAC,EAChCE,MAAM,CAACmC,EAAE,CAAC8D,IAAI,EAAEnG,UAAU,CAAC,EAC3BqC,EAAE,CAACwG,SAAS,CACJ,CACX;QACD,MAAMrC,WAAW,GAAGxK,GAAG,CAAC4B,KAAK,CAAC6I,IAAI,CAChCrK,GAAG,CAACoM,eAAe,CAACxJ,GAAG,CAAEqD,EAAE,IAAcA,EAAE,CAACwG,SAAS,CAAC,CAACC,MAAM,CAC3D7M,KAAK,CAAC8M,OAAO,CAACL,YAAY,CAAC,CAAC1J,GAAG,CAAE9B,GAAG,IAClCnB,SAAS,CAAC0J,QAAQ,CAACvI,GAAG,CAAC,GAAG,IAAIlB,GAAG,CAACgN,YAAY,CAAC9L,GAAG,CAAC,GAAG,IAAIlB,GAAG,CAAC0K,OAAO,CAACxJ,GAAG,CAAC,CAC3E,CACF,CACF;QACD,MAAM+L,QAAQ,GAAG/I,MAAM,CAACsG,WAAW,EAAExG,UAAU,CAAC;QAChD,MAAM2G,WAAW,GAAGjD,cAAc,CAACtH,GAAG,CAAC;QACvC,MAAMwK,QAAQ,GAAG/C,WAAW,CAACzH,GAAG,CAAC;QACjC,OAAO,CAACkE,KAAc,EAAElB,OAAO,KAAI;UACjC,IAAI,CAACrD,SAAS,CAACmN,QAAQ,CAAC5I,KAAK,CAAC,EAAE;YAC9B,OAAO5E,MAAM,CAAC8C,IAAI,CAAC,IAAInB,IAAI,CAACjB,GAAG,EAAEkE,KAAK,CAAC,CAAC;UAC1C;UACA,MAAMwG,SAAS,GAAG1H,OAAO,EAAExC,MAAM,KAAK,KAAK;UAC3C,MAAMmK,EAAE,GAAyB,EAAE;UACnC,IAAIC,OAAO,GAAG,CAAC;UAEf;UACA;UACA;UACA,MAAMmC,qBAAqB,GAAG/J,OAAO,EAAEU,gBAAgB,KAAK,OAAO;UACnE,MAAMsJ,wBAAwB,GAAGhK,OAAO,EAAEU,gBAAgB,KAAK,UAAU;UACzE,MAAMjD,MAAM,GAAQ,EAAE;UACtB,IAAIsM,qBAAqB,IAAIC,wBAAwB,EAAE;YACrD,KAAK,MAAMlM,GAAG,IAAIjB,KAAK,CAAC8M,OAAO,CAACzI,KAAK,CAAC,EAAE;cACtC,MAAM+G,EAAE,GAAGnI,iBAAiB,CAAC+J,QAAQ,CAAC/L,GAAG,EAAEkC,OAAO,CAAC,CAAE;cACrD,IAAI1D,MAAM,CAACgH,MAAM,CAAC2E,EAAE,CAAC,EAAE;gBACrB;gBACA,IAAI8B,qBAAqB,EAAE;kBACzB,MAAM3I,CAAC,GAAG,IAAIvD,GAAG,CAACC,GAAG,EAAE,IAAIC,UAAU,CAACqJ,WAAW,CAAC,CAAC;kBACnD,IAAIM,SAAS,EAAE;oBACbC,EAAE,CAACG,IAAI,CAAC,CAACF,OAAO,EAAE,EAAExG,CAAC,CAAC,CAAC;oBACvB;kBACF,CAAC,MAAM;oBACL,OAAO9E,MAAM,CAAC8C,IAAI,CAAC,IAAIxB,WAAW,CAACZ,GAAG,EAAEkE,KAAK,EAAE,CAACE,CAAC,CAAC,EAAE3D,MAAM,CAAC,CAAC;kBAC9D;gBACF,CAAC,MAAM;kBACL;kBACAA,MAAM,CAACK,GAAG,CAAC,GAAGoD,KAAK,CAACpD,GAAG,CAAC;gBAC1B;cACF;YACF;UACF;UASA,IAAIiK,KAAK,GAEOvH,SAAS;UAEzB,MAAM2C,OAAO,GAAGnD,OAAO,EAAEmD,OAAO,KAAK,IAAI;UACzC,KAAK,IAAIyB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuE,kBAAkB,CAAChC,MAAM,EAAEvC,CAAC,EAAE,EAAE;YAClD,MAAM2E,EAAE,GAAGJ,kBAAkB,CAACvE,CAAC,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM4E,IAAI,GAAGD,EAAE,CAACC,IAAI;YACpB,MAAMS,MAAM,GAAGC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACnJ,KAAK,EAAEsI,IAAI,CAAC;YAChE,IAAI,CAACS,MAAM,EAAE;cACX,IAAIV,EAAE,CAACrC,UAAU,EAAE;gBACjB;cACF,CAAC,MAAM,IAAI/D,OAAO,EAAE;gBAClB,MAAM/B,CAAC,GAAG,IAAIvD,GAAG,CAAC2L,IAAI,EAAElL,OAAO,CAAC;gBAChC,IAAIoJ,SAAS,EAAE;kBACbC,EAAE,CAACG,IAAI,CAAC,CAACF,OAAO,EAAE,EAAExG,CAAC,CAAC,CAAC;kBACvB;gBACF,CAAC,MAAM;kBACL,OAAO9E,MAAM,CAAC8C,IAAI,CAAC,IAAIxB,WAAW,CAACZ,GAAG,EAAEkE,KAAK,EAAE,CAACE,CAAC,CAAC,EAAE3D,MAAM,CAAC,CAAC;gBAC9D;cACF;YACF;YACA,MAAMoD,MAAM,GAAGsI,kBAAkB,CAACvE,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,MAAMoD,EAAE,GAAGnH,MAAM,CAACK,KAAK,CAACsI,IAAI,CAAC,EAAExJ,OAAO,CAAC;YACvC,MAAMiI,EAAE,GAAGnI,iBAAiB,CAACkI,EAAE,CAAC;YAChC,IAAIC,EAAE,EAAE;cACN,IAAI3L,MAAM,CAACgH,MAAM,CAAC2E,EAAE,CAAC,EAAE;gBACrB,MAAM7G,CAAC,GAAG,IAAIvD,GAAG,CAAC2L,IAAI,EAAES,MAAM,GAAGhC,EAAE,CAAC7I,IAAI,GAAGd,OAAO,CAAC;gBACnD,IAAIoJ,SAAS,EAAE;kBACbC,EAAE,CAACG,IAAI,CAAC,CAACF,OAAO,EAAE,EAAExG,CAAC,CAAC,CAAC;kBACvB;gBACF,CAAC,MAAM;kBACL,OAAO9E,MAAM,CAAC8C,IAAI,CAAC,IAAIxB,WAAW,CAACZ,GAAG,EAAEkE,KAAK,EAAE,CAACE,CAAC,CAAC,EAAE3D,MAAM,CAAC,CAAC;gBAC9D;cACF;cACAA,MAAM,CAAC+L,IAAI,CAAC,GAAGvB,EAAE,CAAC/I,KAAK;YACzB,CAAC,MAAM;cACL,MAAMiJ,EAAE,GAAGP,OAAO,EAAE;cACpB,MAAMjK,KAAK,GAAG6L,IAAI;cAClB,IAAI,CAACzB,KAAK,EAAE;gBACVA,KAAK,GAAG,EAAE;cACZ;cACAA,KAAK,CAACD,IAAI,CACR,CAAC;gBAAEH,EAAE;gBAAElK;cAAM,CAAS,KACpBpB,MAAM,CAACmD,OAAO,CAACnD,MAAM,CAAC+L,MAAM,CAACJ,EAAE,CAAC,EAAGK,CAAC,IAAI;gBACtC,IAAI/L,MAAM,CAACgH,MAAM,CAAC+E,CAAC,CAAC,EAAE;kBACpB,MAAMjH,CAAC,GAAG,IAAIvD,GAAG,CAACF,KAAK,EAAEsM,MAAM,GAAG5B,CAAC,CAACjJ,IAAI,GAAGd,OAAO,CAAC;kBACnD,IAAIoJ,SAAS,EAAE;oBACbC,EAAE,CAACG,IAAI,CAAC,CAACK,EAAE,EAAE/G,CAAC,CAAC,CAAC;oBAChB,OAAO/E,MAAM,CAACiM,IAAI;kBACpB,CAAC,MAAM;oBACL,OAAOhM,MAAM,CAAC8C,IAAI,CAAC,IAAIxB,WAAW,CAACZ,GAAG,EAAEkE,KAAK,EAAE,CAACE,CAAC,CAAC,EAAE3D,MAAM,CAAC,CAAC;kBAC9D;gBACF;gBACAA,MAAM,CAACE,KAAK,CAAC,GAAG0K,CAAC,CAACnJ,KAAK;gBACvB,OAAO7C,MAAM,CAACiM,IAAI;cACpB,CAAC,CAAC,CACL;YACH;UACF;UAEA;UACA;UACA;UACA,KAAK,IAAI1D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwE,eAAe,CAACjC,MAAM,EAAEvC,CAAC,EAAE,EAAE;YAC/C,MAAM0F,cAAc,GAAGlB,eAAe,CAACxE,CAAC,CAAC;YACzC,MAAM6E,SAAS,GAAGa,cAAc,CAAC,CAAC,CAAC;YACnC,MAAMvD,IAAI,GAAGuD,cAAc,CAAC,CAAC,CAAC;YAC9B,MAAMC,IAAI,GAAG1N,KAAK,CAAC2N,wBAAwB,CAACtJ,KAAK,EAAEoJ,cAAc,CAAC,CAAC,CAAC,CAAC;YACrE,KAAK,MAAMxM,GAAG,IAAIyM,IAAI,EAAE;cACtB;cACA;cACA;cACA,MAAME,GAAG,GAAG3K,iBAAiB,CAAC2J,SAAS,CAAC3L,GAAG,EAAEkC,OAAO,CAAC,CAAC;cACtD,IAAIyK,GAAG,IAAInO,MAAM,CAAC4G,OAAO,CAACuH,GAAG,CAAC,EAAE;gBAC9B;gBACA;gBACA;gBACA,MAAMC,GAAG,GAAG3D,IAAI,CAAC7F,KAAK,CAACpD,GAAG,CAAC,EAAEkC,OAAO,CAAC;gBACrC,MAAM2K,GAAG,GAAG7K,iBAAiB,CAAC4K,GAAG,CAAC;gBAClC,IAAIC,GAAG,EAAE;kBACP,IAAIrO,MAAM,CAACgH,MAAM,CAACqH,GAAG,CAAC,EAAE;oBACtB,MAAMvJ,CAAC,GAAG,IAAIvD,GAAG,CAACC,GAAG,EAAE6M,GAAG,CAACvL,IAAI,CAAC;oBAChC,IAAIsI,SAAS,EAAE;sBACbC,EAAE,CAACG,IAAI,CAAC,CAACF,OAAO,EAAE,EAAExG,CAAC,CAAC,CAAC;sBACvB;oBACF,CAAC,MAAM;sBACL,OAAO9E,MAAM,CAAC8C,IAAI,CAAC,IAAIxB,WAAW,CAACZ,GAAG,EAAEkE,KAAK,EAAE,CAACE,CAAC,CAAC,EAAE3D,MAAM,CAAC,CAAC;oBAC9D;kBACF,CAAC,MAAM;oBACL,IAAI,CAACyM,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACf,YAAY,EAAExL,GAAG,CAAC,EAAE;sBAC5DL,MAAM,CAACK,GAAG,CAAC,GAAG6M,GAAG,CAACzL,KAAK;oBACzB;kBACF;gBACF,CAAC,MAAM;kBACL,MAAMiJ,EAAE,GAAGP,OAAO,EAAE;kBACpB,MAAMjK,KAAK,GAAGG,GAAG;kBACjB,IAAI,CAACiK,KAAK,EAAE;oBACVA,KAAK,GAAG,EAAE;kBACZ;kBACAA,KAAK,CAACD,IAAI,CACR,CAAC;oBAAEH,EAAE;oBAAElK;kBAAM,CAAS,KACpBpB,MAAM,CAACmD,OAAO,CACZnD,MAAM,CAAC+L,MAAM,CAACsC,GAAG,CAAC,EACjBE,EAAE,IAAI;oBACL,IAAItO,MAAM,CAACgH,MAAM,CAACsH,EAAE,CAAC,EAAE;sBACrB,MAAMxJ,CAAC,GAAG,IAAIvD,GAAG,CAACF,KAAK,EAAEiN,EAAE,CAACxL,IAAI,CAAC;sBACjC,IAAIsI,SAAS,EAAE;wBACbC,EAAE,CAACG,IAAI,CAAC,CAACK,EAAE,EAAE/G,CAAC,CAAC,CAAC;wBAChB,OAAO/E,MAAM,CAACiM,IAAI;sBACpB,CAAC,MAAM;wBACL,OAAOhM,MAAM,CAAC8C,IAAI,CAAC,IAAIxB,WAAW,CAACZ,GAAG,EAAEkE,KAAK,EAAE,CAACE,CAAC,CAAC,EAAE3D,MAAM,CAAC,CAAC;sBAC9D;oBACF,CAAC,MAAM;sBACL,IAAI,CAACyM,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACf,YAAY,EAAExL,GAAG,CAAC,EAAE;wBAC5DL,MAAM,CAACK,GAAG,CAAC,GAAG8M,EAAE,CAAC1L,KAAK;sBACxB;sBACA,OAAO7C,MAAM,CAACiM,IAAI;oBACpB;kBACF,CAAC,CACF,CACJ;gBACH;cACF;YACF;UACF;UACA;UACA;UACA;UACA,MAAMK,aAAa,GAAGA,CAAC;YAAEhB,EAAE;YAAElK;UAAM,CAAS,KAC1CtB,GAAG,CAACyM,eAAe,CAACjB,EAAE,CAAC,GACrBrL,MAAM,CAAC8C,IAAI,CAAC,IAAIxB,WAAW,CAACZ,GAAG,EAAEkE,KAAK,EAAEgH,WAAW,CAACP,EAAE,CAAC,EAAElK,MAAM,CAAC,CAAC,GACjEnB,MAAM,CAAC4C,KAAK,CAACzB,MAAM,CAAC;UACxB,IAAIsK,KAAK,IAAIA,KAAK,CAACZ,MAAM,GAAG,CAAC,EAAE;YAC7B,MAAM0B,MAAM,GAAGd,KAAK;YACpB,OAAO1L,MAAM,CAACyM,OAAO,CAAC,MAAK;cACzB,MAAMC,KAAK,GAAU;gBACnBpB,EAAE,EAAExL,GAAG,CAAC6M,IAAI,CAACrB,EAAE,CAAC;gBAChBlK,MAAM,EAAEyM,MAAM,CAACW,MAAM,CAAC,EAAE,EAAEpN,MAAM;eACjC;cACD,OAAOpB,MAAM,CAACmD,OAAO,CACnBnD,MAAM,CAAC4M,OAAO,CAACJ,MAAM,EAAGnJ,CAAC,IAAKA,CAAC,CAACqJ,KAAK,CAAC,EAAE;gBAAExB,WAAW;gBAAEC,QAAQ;gBAAE0B,OAAO,EAAE;cAAI,CAAE,CAAC,EACjF,MAAMP,aAAa,CAACI,KAAK,CAAC,CAC3B;YACH,CAAC,CAAC;UACJ;UACA,OAAOJ,aAAa,CAAC;YAAEhB,EAAE;YAAElK;UAAM,CAAE,CAAC;QACtC,CAAC;MACH;IACA,KAAK,OAAO;MAAE;QACZ,MAAMqN,UAAU,GAAGC,aAAa,CAAC/N,GAAG,CAACgO,KAAK,EAAEpK,UAAU,CAAC;QACvD,MAAM+I,OAAO,GAAG9M,KAAK,CAAC8M,OAAO,CAACmB,UAAU,CAACP,IAAI,CAAC;QAC9C,MAAM1C,GAAG,GAAG8B,OAAO,CAACxC,MAAM;QAC1B,MAAMvH,GAAG,GAAG,IAAIqL,GAAG,EAAe;QAClC,KAAK,IAAIrG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG5H,GAAG,CAACgO,KAAK,CAAC7D,MAAM,EAAEvC,CAAC,EAAE,EAAE;UACzChF,GAAG,CAACyE,GAAG,CAACrH,GAAG,CAACgO,KAAK,CAACpG,CAAC,CAAC,EAAE9D,MAAM,CAAC9D,GAAG,CAACgO,KAAK,CAACpG,CAAC,CAAC,EAAEhE,UAAU,CAAC,CAAC;QACzD;QACA,MAAM2G,WAAW,GAAGjD,cAAc,CAACtH,GAAG,CAAC,IAAI,CAAC;QAC5C,MAAMwK,QAAQ,GAAG/C,WAAW,CAACzH,GAAG,CAAC;QACjC,OAAO,CAACkE,KAAK,EAAElB,OAAO,KAAI;UACxB,MAAM2H,EAAE,GAAiD,EAAE;UAC3D,IAAIC,OAAO,GAAG,CAAC;UACf,IAAIsD,UAAU,GAAmB,EAAE;UACnC,IAAIrD,GAAG,GAAG,CAAC,EAAE;YACX;YACA,IAAIlL,SAAS,CAACmN,QAAQ,CAAC5I,KAAK,CAAC,EAAE;cAC7B,KAAK,IAAI0D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiD,GAAG,EAAEjD,CAAC,EAAE,EAAE;gBAC5B,MAAM4E,IAAI,GAAGG,OAAO,CAAC/E,CAAC,CAAC;gBACvB,MAAMuG,OAAO,GAAGL,UAAU,CAACP,IAAI,CAACf,IAAI,CAAC,CAAC2B,OAAO;gBAC7C;gBACA,IAAIjB,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACnJ,KAAK,EAAEsI,IAAI,CAAC,EAAE;kBACrD,MAAM3D,OAAO,GAAGuF,MAAM,CAAClK,KAAK,CAACsI,IAAI,CAAC,CAAC;kBACnC;kBACA,IAAIU,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACc,OAAO,EAAEtF,OAAO,CAAC,EAAE;oBAC1D;oBACAqF,UAAU,GAAGA,UAAU,CAACxB,MAAM,CAACyB,OAAO,CAACtF,OAAO,CAAC,CAAC;kBAClD,CAAC,MAAM;oBACL,MAAMwF,QAAQ,GAAGzO,GAAG,CAAC4B,KAAK,CAAC6I,IAAI,CAACyD,UAAU,CAACP,IAAI,CAACf,IAAI,CAAC,CAAC6B,QAAQ,CAAC;oBAC/D1D,EAAE,CAACG,IAAI,CAAC,CACNF,OAAO,EAAE,EACT,IAAIhK,WAAW,CACb,IAAIhB,GAAG,CAACgB,WAAW,CAAC,CAClB,IAAIhB,GAAG,CAAC0O,iBAAiB,CAAC9B,IAAI,EAAE6B,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,CACvD,EAAE,EAAE,CAAC,EACNnK,KAAK,EACL,CAAC,IAAIrD,GAAG,CAAC2L,IAAI,EAAE,IAAIvL,IAAI,CAACoN,QAAQ,EAAEnK,KAAK,CAACsI,IAAI,CAAC,CAAC,CAAC,CAAC,CACjD,CACF,CAAC;kBACJ;gBACF,CAAC,MAAM;kBACL,MAAM6B,QAAQ,GAAGzO,GAAG,CAAC4B,KAAK,CAAC6I,IAAI,CAACyD,UAAU,CAACP,IAAI,CAACf,IAAI,CAAC,CAAC6B,QAAQ,CAAC;kBAC/D1D,EAAE,CAACG,IAAI,CAAC,CACNF,OAAO,EAAE,EACT,IAAIhK,WAAW,CACb,IAAIhB,GAAG,CAACgB,WAAW,CAAC,CAClB,IAAIhB,GAAG,CAAC0O,iBAAiB,CAAC9B,IAAI,EAAE6B,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,CACvD,EAAE,EAAE,CAAC,EACNnK,KAAK,EACL,CAAC,IAAIrD,GAAG,CAAC2L,IAAI,EAAElL,OAAO,CAAC,CAAC,CACzB,CACF,CAAC;gBACJ;cACF;YACF,CAAC,MAAM;cACLqJ,EAAE,CAACG,IAAI,CAAC,CAACF,OAAO,EAAE,EAAE,IAAI3J,IAAI,CAACjB,GAAG,EAAEkE,KAAK,CAAC,CAAC,CAAC;YAC5C;UACF;UACA,IAAI4J,UAAU,CAACS,SAAS,CAACpE,MAAM,GAAG,CAAC,EAAE;YACnC+D,UAAU,GAAGA,UAAU,CAACxB,MAAM,CAACoB,UAAU,CAACS,SAAS,CAAC;UACtD;UAEA,IAAIxD,KAAK,GAEOvH,SAAS;UAOzB,KAAK,IAAIoE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsG,UAAU,CAAC/D,MAAM,EAAEvC,CAAC,EAAE,EAAE;YAC1C,MAAM4G,SAAS,GAAGN,UAAU,CAACtG,CAAC,CAAC;YAC/B,MAAM6G,EAAE,GAAG7L,GAAG,CAACuE,GAAG,CAACqH,SAAS,CAAE,CAACtK,KAAK,EAAElB,OAAO,CAAC;YAC9C;YACA;YACA;YACA,MAAMiI,EAAE,GAAG,CAACF,KAAK,IAAIA,KAAK,CAACZ,MAAM,KAAK,CAAC,GAAGrH,iBAAiB,CAAC2L,EAAE,CAAC,GAAGjL,SAAS;YAC3E,IAAIyH,EAAE,EAAE;cACN,IAAI3L,MAAM,CAAC4G,OAAO,CAAC+E,EAAE,CAAC,EAAE;gBACtB,OAAO3L,MAAM,CAAC4C,KAAK,CAAC+I,EAAE,CAAC/I,KAAK,CAAC;cAC/B,CAAC,MAAM;gBACLyI,EAAE,CAACG,IAAI,CAAC,CAACF,OAAO,EAAE,EAAE,IAAIrJ,MAAM,CAACiN,SAAS,EAAEvD,EAAE,CAAC7I,IAAI,CAAC,CAAC,CAAC;cACtD;YACF,CAAC,MAAM;cACL,MAAM+I,EAAE,GAAGP,OAAO,EAAE;cACpB,IAAI,CAACG,KAAK,EAAE;gBACVA,KAAK,GAAG,EAAE;cACZ;cACAA,KAAK,CAACD,IAAI,CACPiB,KAAK,IACJ1M,MAAM,CAACyM,OAAO,CAAC,MAAK;gBAClB,IAAI,aAAa,IAAIC,KAAK,EAAE;kBAC1B,OAAO1M,MAAM,CAACiM,IAAI;gBACpB,CAAC,MAAM;kBACL,OAAOjM,MAAM,CAACmD,OAAO,CAACnD,MAAM,CAAC+L,MAAM,CAACqD,EAAE,CAAC,EAAGpD,CAAC,IAAI;oBAC7C,IAAI/L,MAAM,CAAC4G,OAAO,CAACmF,CAAC,CAAC,EAAE;sBACrBU,KAAK,CAAC2C,WAAW,GAAGpP,MAAM,CAAC4C,KAAK,CAACmJ,CAAC,CAACnJ,KAAK,CAAC;oBAC3C,CAAC,MAAM;sBACL6J,KAAK,CAACpB,EAAE,CAACG,IAAI,CAAC,CAACK,EAAE,EAAE,IAAI5J,MAAM,CAACiN,SAAS,EAAEnD,CAAC,CAACjJ,IAAI,CAAC,CAAC,CAAC;oBACpD;oBACA,OAAO/C,MAAM,CAACiM,IAAI;kBACpB,CAAC,CAAC;gBACJ;cACF,CAAC,CAAC,CACL;YACH;UACF;UAEA;UACA;UACA;UACA,MAAMK,aAAa,GAAIhB,EAAe,IACpCxL,GAAG,CAACyM,eAAe,CAACjB,EAAE,CAAC,GACrBA,EAAE,CAACR,MAAM,KAAK,CAAC,IAAIQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACxK,IAAI,KAAK,MAAM,GACzCb,MAAM,CAAC8C,IAAI,CAACuI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GACrBrL,MAAM,CAAC8C,IAAI,CAAC,IAAIZ,KAAK,CAACxB,GAAG,EAAEkE,KAAK,EAAEgH,WAAW,CAACP,EAAE,CAAC,CAAC,CAAC;UACrD;UACArL,MAAM,CAAC8C,IAAI,CAAC,IAAInB,IAAI,CAACrB,GAAG,CAAC+O,YAAY,EAAEzK,KAAK,CAAC,CAAC;UAElD,IAAI6G,KAAK,IAAIA,KAAK,CAACZ,MAAM,GAAG,CAAC,EAAE;YAC7B,MAAM0B,MAAM,GAAGd,KAAK;YACpB,OAAO1L,MAAM,CAACyM,OAAO,CAAC,MAAK;cACzB,MAAMC,KAAK,GAAU;gBAAEpB,EAAE,EAAExL,GAAG,CAAC6M,IAAI,CAACrB,EAAE;cAAC,CAAE;cACzC,OAAOtL,MAAM,CAACmD,OAAO,CACnBnD,MAAM,CAAC4M,OAAO,CAACJ,MAAM,EAAGnJ,CAAC,IAAKA,CAAC,CAACqJ,KAAK,CAAC,EAAE;gBAAExB,WAAW;gBAAEC,QAAQ;gBAAE0B,OAAO,EAAE;cAAI,CAAE,CAAC,EACjF,MAAK;gBACH,IAAI,aAAa,IAAIH,KAAK,EAAE;kBAC1B,OAAOA,KAAK,CAAC2C,WAAW;gBAC1B;gBACA,OAAO/C,aAAa,CAACI,KAAK,CAACpB,EAAE,CAAC;cAChC,CAAC,CACF;YACH,CAAC,CAAC;UACJ;UACA,OAAOgB,aAAa,CAAChB,EAAE,CAAC;QAC1B,CAAC;MACH;IACA,KAAK,SAAS;MAAE;QACd,MAAMxD,GAAG,GAAGtH,KAAK,CAAC+O,YAAY,CAAC,MAAM9K,MAAM,CAAClE,GAAG,CAACiP,WAAW,CAAC7O,GAAG,CAAC0C,CAAC,EAAE,EAAE1C,GAAG,CAAC6O,WAAW,CAAC,EAAEjL,UAAU,CAAC,CAAC;QACnG,OAAO,CAACN,CAAC,EAAEN,OAAO,KAAKmE,GAAG,EAAE,CAAC7D,CAAC,EAAEN,OAAO,CAAC;MAC1C;EACF;AACF,CAAC;AAED,MAAM4F,cAAc,GAAGA,CAAI5I,GAAY,EAAE8O,UAAkC,KAAc/K,CAAC,IACxF+K,UAAU,CAAC/K,CAAC,CAAC,GAAGzE,MAAM,CAAC4C,KAAK,CAAC6B,CAAC,CAAC,GAAGzE,MAAM,CAAC8C,IAAI,CAAC,IAAInB,IAAI,CAACjB,GAAG,EAAE+D,CAAC,CAAC,CAAC;AAEjE;AACA,OAAO,MAAMgL,WAAW,GAAGA,CACzB/O,GAAY,EACZ4D,UAAmB,KAC0B;EAC7C,QAAQ5D,GAAG,CAACG,IAAI;IACd,KAAK,aAAa;MAAE;QAClB,MAAM6O,UAAU,GAAGpP,GAAG,CAACqP,sBAAsB,CAACjP,GAAG,CAAC;QAClD,IAAIN,MAAM,CAACwP,MAAM,CAACF,UAAU,CAAC,EAAE;UAC7B,OAAOD,WAAW,CAACC,UAAU,CAACtF,KAAK,EAAE9F,UAAU,CAAC;QAClD;QACA;MACF;IACA,KAAK,aAAa;MAAE;QAClB,MAAMH,GAAG,GAAsC,EAAE;QACjD,KAAK,IAAImE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG5H,GAAG,CAACmM,kBAAkB,CAAChC,MAAM,EAAEvC,CAAC,EAAE,EAAE;UACtD,MAAMuH,iBAAiB,GAAGnP,GAAG,CAACmM,kBAAkB,CAACvE,CAAC,CAAC;UACnD,MAAMmC,IAAI,GAAGnG,UAAU,GAAGhE,GAAG,CAACwP,UAAU,CAACD,iBAAiB,CAACpF,IAAI,CAAC,GAAGnK,GAAG,CAACgG,OAAO,CAACuJ,iBAAiB,CAACpF,IAAI,CAAC;UACtG,IAAInK,GAAG,CAACyP,SAAS,CAACtF,IAAI,CAAC,IAAI,CAACoF,iBAAiB,CAACjF,UAAU,EAAE;YACxDzG,GAAG,CAACqH,IAAI,CAAC,CAACqE,iBAAiB,CAAC3C,IAAI,EAAEzC,IAAI,CAAC,CAAC;UAC1C;QACF;QACA,OAAOtG,GAAG;MACZ;IACA,KAAK,YAAY;MACf,OAAOsL,WAAW,CAAC/O,GAAG,CAAC2H,IAAI,EAAE/D,UAAU,CAAC;IAC1C,KAAK,SAAS;MACZ,OAAOmL,WAAW,CAAC/O,GAAG,CAAC0C,CAAC,EAAE,EAAEkB,UAAU,CAAC;IACzC,KAAK,gBAAgB;MACnB,OAAOmL,WAAW,CAACnL,UAAU,GAAG5D,GAAG,CAAC2H,IAAI,GAAG3H,GAAG,CAACmI,EAAE,EAAEvE,UAAU,CAAC;EAClE;EACA,OAAO,EAAE;AACX,CAAC;AAED;;;;;;;;;;;;;;AAcA,OAAO,MAAMmK,aAAa,GAAGA,CAC3BuB,OAA+B,EAC/B1L,UAAmB,KASjB;EACF,MAAM2J,IAAI,GAKN,EAAE;EACN,MAAMgB,SAAS,GAAmB,EAAE;EACpC,KAAK,IAAI3G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0H,OAAO,CAACnF,MAAM,EAAEvC,CAAC,EAAE,EAAE;IACvC,MAAM2H,MAAM,GAAGD,OAAO,CAAC1H,CAAC,CAAC;IACzB,MAAM4H,IAAI,GAAGT,WAAW,CAACQ,MAAM,EAAE3L,UAAU,CAAC;IAC5C,IAAI4L,IAAI,CAACrF,MAAM,GAAG,CAAC,EAAE;MACnB,KAAK,IAAIuB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8D,IAAI,CAACrF,MAAM,EAAEuB,CAAC,EAAE,EAAE;QACpC,MAAM,CAAC5K,GAAG,EAAE+H,OAAO,CAAC,GAAG2G,IAAI,CAAC9D,CAAC,CAAC;QAC9B,MAAM+D,IAAI,GAAGrB,MAAM,CAACvF,OAAO,CAACA,OAAO,CAAC;QACpC0E,IAAI,CAACzM,GAAG,CAAC,GAAGyM,IAAI,CAACzM,GAAG,CAAC,IAAI;UAAEqN,OAAO,EAAE,EAAE;UAAEE,QAAQ,EAAE;QAAE,CAAE;QACtD,MAAMF,OAAO,GAAGZ,IAAI,CAACzM,GAAG,CAAC,CAACqN,OAAO;QACjC,IAAIjB,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACc,OAAO,EAAEsB,IAAI,CAAC,EAAE;UACvD,IAAI/D,CAAC,GAAG8D,IAAI,CAACrF,MAAM,GAAG,CAAC,EAAE;YACvB;UACF;UACAgE,OAAO,CAACsB,IAAI,CAAC,CAAC3E,IAAI,CAACyE,MAAM,CAAC;UAC1BhC,IAAI,CAACzM,GAAG,CAAC,CAACuN,QAAQ,CAACvD,IAAI,CAACjC,OAAO,CAAC;QAClC,CAAC,MAAM;UACLsF,OAAO,CAACsB,IAAI,CAAC,GAAG,CAACF,MAAM,CAAC;UACxBhC,IAAI,CAACzM,GAAG,CAAC,CAACuN,QAAQ,CAACvD,IAAI,CAACjC,OAAO,CAAC;UAChC;QACF;MACF;IACF,CAAC,MAAM;MACL0F,SAAS,CAACzD,IAAI,CAACyE,MAAM,CAAC;IACxB;EACF;EACA,OAAO;IAAEhC,IAAI;IAAEgB;EAAS,CAAE;AAC5B,CAAC;AAED,MAAMnG,mBAAmB,GAAIpI,GAAY,IAAcJ,GAAG,CAAC8P,YAAY,CAAC1P,GAAG,CAAC,GAAGoI,mBAAmB,CAACpI,GAAG,CAAC2H,IAAI,CAAC,GAAG3H,GAAG;AAElH,MAAM6H,eAAe,GAAGA,CACtB8H,MAAuC,EACvC3P,GAAY,EACZC,MAAe,EACf+C,OAAoC,KACD;EACnC,MAAMiI,EAAE,GAAGnI,iBAAiB,CAAC6M,MAAM,CAAC;EACpC,IAAI1E,EAAE,EAAE;IACN,OAAOA,EAAE;EACX;EACA,IAAIjI,OAAO,EAAEyB,eAAe,KAAK,IAAI,EAAE;IACrC,OAAOkL,MAAM;EACf;EACA,IAAI;IACF,OAAOtQ,MAAM,CAACuQ,OAAO,CAACvQ,MAAM,CAAC+L,MAAM,CAACuE,MAAsC,CAAC,CAAC;EAC9E,CAAC,CAAC,OAAOvL,CAAC,EAAE;IACV,OAAO9E,MAAM,CAAC8C,IAAI,CAChB,IAAIhB,SAAS,CACXpB,GAAG,EACHC,MAAM,EACN,4GAA4G,CAC7G,CACF;EACH;AACF,CAAC;AAMD,SAASiL,WAAWA,CAACP,EAAwB;EAC3C,OAAOA,EAAE,CAACkF,IAAI,CAAC,CAAC,CAACvM,CAAC,CAAC,EAAE,CAACC,CAAC,CAAC,KAAKD,CAAC,GAAGC,CAAC,GAAG,CAAC,GAAGD,CAAC,GAAGC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAACX,GAAG,CAAC,CAAC,CAAC6G,CAAC,EAAEnG,CAAC,CAAC,KAAKA,CAAC,CAAC;AAC7E;AAEA;AACA;AACA;AAEA;AACA,OAAO,MAAMgF,sBAAsB,GAAGA,CACpCC,cAAsC,EACtC3E,UAAmB,KAKsB;EACzC,QAAQ2E,cAAc,CAACpI,IAAI;IACzB,KAAK,qBAAqB;MACxB,OAAOyD,UAAU,GAAG2E,cAAc,CAAC7C,MAAM,GAAG6C,cAAc,CAAC5B,MAAM;IACnE,KAAK,uBAAuB;MAC1B,OAAOrH,MAAM,CAAC4C,KAAK;IACrB,KAAK,2BAA2B;MAC9B,OAAQgC,KAAK,IAAI;QACf,IAAIT,GAAG,GAAwCnE,MAAM,CAAC4C,KAAK,CAACgC,KAAK,CAAC;QAElE;QACA;QACA;QACA,KAAK,MAAM4L,GAAG,IAAIvH,cAAc,CAACwH,gCAAgC,EAAE;UACjE,MAAM,CAACpI,IAAI,EAAEQ,EAAE,CAAC,GAAGvE,UAAU,GAC3B,CAACkM,GAAG,CAACnI,IAAI,EAAEmI,GAAG,CAAC3H,EAAE,CAAC,GAClB,CAAC2H,GAAG,CAAC3H,EAAE,EAAE2H,GAAG,CAACnI,IAAI,CAAC;UACpB,MAAMY,cAAc,GAAG3E,UAAU,GAAGkM,GAAG,CAACpK,MAAM,GAAGoK,GAAG,CAACnJ,MAAM;UAC3D,MAAMjE,CAAC,GAAIwB,KAAU,IAAI;YACvB,MAAM8L,CAAC,GAAGzH,cAAc,CACtB2E,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACnJ,KAAK,EAAEyD,IAAI,CAAC,GAC/CjI,MAAM,CAAC8J,IAAI,CAACtF,KAAK,CAACyD,IAAI,CAAC,CAAC,GACxBjI,MAAM,CAACuQ,IAAI,EAAE,CAChB;YACD,OAAO/L,KAAK,CAACyD,IAAI,CAAC;YAClB,IAAIjI,MAAM,CAACwP,MAAM,CAACc,CAAC,CAAC,EAAE;cACpB9L,KAAK,CAACiE,EAAE,CAAC,GAAG6H,CAAC,CAACtG,KAAK;YACrB;YACA,OAAOxF,KAAK;UACd,CAAC;UACDT,GAAG,GAAGb,GAAG,CAACa,GAAG,EAAEf,CAAC,CAAC;QACnB;QACA,OAAOe,GAAG;MACZ,CAAC;EACL;AACF,CAAC","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"ParseResult.js","names":["Arr","TaggedError","Effect","Either","dual","globalValue","Inspectable","Option","Predicate","AST","util_","TreeFormatter","Declaration","ast","actual","error","_tag","constructor","Refinement","kind","TupleType","errors","output","Index","index","TypeLiteral","Key","key","Unexpected","Transformation","Type","message","fromNullable","Forbidden","Missing","missing","Member","Union","ParseError","toString","formatIssueSync","toJSON","_id","NodeInspectSymbol","parseError","issue","succeed","right","fail","left","_try","try","fromOption","flatMap","self","f","s","map","mapError","eitherOrUndefined","mapBoth","options","onFailure","onSuccess","orElse","catchAll","mergeParseOptions","a","b","undefined","out","onExcessProperty","getEither","isDecoding","parser","goMemo","u","overrideOptions","getSync","input","getOrThrowWith","Error","cause","getOption","getRight","getEffect","isEffectAllowed","decodeUnknownSync","schema","decodeUnknownOption","decodeUnknownEither","decodeUnknownPromise","decodeUnknown","runPromise","encodeUnknownSync","encodeUnknownOption","encodeUnknownEither","encodeUnknownPromise","encodeUnknown","decodeSync","decodeOption","decodeEither","decodePromise","decode","validateSync","typeAST","validateOption","validateEither","validatePromise","validate","is","isRight","isExact","asserts","result","isLeft","encodeSync","encodeOption","encodeEither","encodePromise","encode","decodeMemoMap","Symbol","for","WeakMap","encodeMemoMap","memoMap","memo","get","go","set","getConcurrency","getOrUndefined","getConcurrencyAnnotation","getBatching","getBatchingAnnotation","from","i","handleForbidden","e","match","filter","defaultParseOption","onNone","onSome","to","dropRightRefinement","transform","getFinalTransformation","transformation","i1","i2","parse","typeParameters","fromRefinement","literal","symbol","isUndefined","isNever","isString","isNumber","isBoolean","isBigInt","isSymbol","isObject","enums","some","_","value","regex","getTemplateLiteralRegExp","test","elements","type","rest","requiredLen","isOptional","length","expectedAST","make","Literal","concurrency","batching","isArray","allErrors","es","stepKey","len","push","queue","te","eu","sortByIndex","nk","either","t","void","isNonEmptyReadonlyArray","head","tail","j","computeResult","isNonEmptyArray","cqueue","suspend","state","copy","forEach","discard","propertySignatures","indexSignatures","isNotNullable","expectedKeys","ps","name","parameter","concat","ownKeys","UniqueSymbol","expected","isRecord","onExcessPropertyError","onExcessPropertyPreserve","hasKey","Object","prototype","hasOwnProperty","call","indexSignature","keys","getKeysForIndexSignature","keu","vpr","veu","tv","assign","searchTree","getSearchTree","types","Map","candidates","buckets","String","literals","PropertySignature","otherwise","candidate","pr","finalResult","neverKeyword","memoizeThunk","annotations","refinement","getLiterals","annotation","getSurrogateAnnotation","isSome","propertySignature","encodedAST","isLiteral","members","member","tags","hash","isRefinement","effect","runSync","sort","pst","propertySignatureTransformations","o","none"],"sources":["../../src/ParseResult.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/esm/Pretty.js b/dist/esm/Pretty.js
index 73974df9d3cdd7e8b3086393cb2187c780df3edc..7cd97bc706b757da2dbcf1e482ca6183c953e21e 100644
--- a/dist/esm/Pretty.js
+++ b/dist/esm/Pretty.js
@@ -23,7 +23,7 @@ export const pretty = handler => self => self.annotations({
  * @category prettify
  * @since 1.0.0
  */
-export const make = schema => compile(schema.ast);
+export const make = schema => compile(schema.ast, []);
 const getHook = /*#__PURE__*/AST.getAnnotation(PrettyHookId);
 const getMatcher = defaultPretty => ast => Option.match(getHook(ast), {
   onNone: () => defaultPretty,
@@ -32,16 +32,17 @@ const getMatcher = defaultPretty => ast => Option.match(getHook(ast), {
 const toString = /*#__PURE__*/getMatcher(a => String(a));
 const stringify = /*#__PURE__*/getMatcher(a => JSON.stringify(a));
 const formatUnknown = /*#__PURE__*/getMatcher(util_.formatUnknown);
+const getPrettyErrorMessage = (message, path) => errors_.getErrorMessageWithPath(`cannot build a Pretty for ${message}`, path);
 /**
  * @since 1.0.0
  */
 export const match = {
-  "Declaration": (ast, go) => {
+  "Declaration": (ast, go, path) => {
     const hook = getHook(ast);
     if (Option.isSome(hook)) {
-      return hook.value(...ast.typeParameters.map(go));
+      return hook.value(...ast.typeParameters.map(tp => go(tp, path)));
     }
-    throw new Error(errors_.getPrettyErrorMessage(`a declaration without annotations (${ast})`));
+    throw new Error(getPrettyErrorMessage(`a declaration without annotations (${ast})`, path));
   },
   "VoidKeyword": /*#__PURE__*/getMatcher(() => "void(0)"),
   "NeverKeyword": /*#__PURE__*/getMatcher(() => {
@@ -60,13 +61,13 @@ export const match = {
   "BooleanKeyword": toString,
   "BigIntKeyword": /*#__PURE__*/getMatcher(a => `${String(a)}n`),
   "Enums": stringify,
-  "TupleType": (ast, go) => {
+  "TupleType": (ast, go, path) => {
     const hook = getHook(ast);
     if (Option.isSome(hook)) {
       return hook.value();
     }
-    const elements = ast.elements.map(e => go(e.type));
-    const rest = ast.rest.map(go);
+    const elements = ast.elements.map((e, i) => go(e.type, path.concat(i)));
+    const rest = ast.rest.map(ast => go(ast, path));
     return input => {
       const output = [];
       let i = 0;
@@ -101,13 +102,13 @@ export const match = {
       return "[" + output.join(", ") + "]";
     };
   },
-  "TypeLiteral": (ast, go) => {
+  "TypeLiteral": (ast, go, path) => {
     const hook = getHook(ast);
     if (Option.isSome(hook)) {
       return hook.value();
     }
-    const propertySignaturesTypes = ast.propertySignatures.map(f => go(f.type));
-    const indexSignatureTypes = ast.indexSignatures.map(is => go(is.type));
+    const propertySignaturesTypes = ast.propertySignatures.map(ps => go(ps.type, path.concat(ps.name)));
+    const indexSignatureTypes = ast.indexSignatures.map(is => go(is.type, path));
     const expectedKeys = {};
     for (let i = 0; i < propertySignaturesTypes.length; i++) {
       expectedKeys[ast.propertySignatures[i].name] = null;
@@ -143,37 +144,37 @@ export const match = {
       return Arr.isNonEmptyReadonlyArray(output) ? "{ " + output.join(", ") + " }" : "{}";
     };
   },
-  "Union": (ast, go) => {
+  "Union": (ast, go, path) => {
     const hook = getHook(ast);
     if (Option.isSome(hook)) {
       return hook.value();
     }
     const types = ast.types.map(ast => [ParseResult.is({
       ast
-    }), go(ast)]);
+    }), go(ast, path)]);
     return a => {
       const index = types.findIndex(([is]) => is(a));
       return types[index][1](a);
     };
   },
-  "Suspend": (ast, go) => {
+  "Suspend": (ast, go, path) => {
     return Option.match(getHook(ast), {
       onNone: () => {
-        const get = util_.memoizeThunk(() => go(ast.f()));
+        const get = util_.memoizeThunk(() => go(ast.f(), path));
         return a => get()(a);
       },
       onSome: handler => handler()
     });
   },
-  "Refinement": (ast, go) => {
+  "Refinement": (ast, go, path) => {
     return Option.match(getHook(ast), {
-      onNone: () => go(ast.from),
+      onNone: () => go(ast.from, path),
       onSome: handler => handler()
     });
   },
-  "Transformation": (ast, go) => {
+  "Transformation": (ast, go, path) => {
     return Option.match(getHook(ast), {
-      onNone: () => go(ast.to),
+      onNone: () => go(ast.to, path),
       onSome: handler => handler()
     });
   }
diff --git a/dist/esm/Pretty.js.map b/dist/esm/Pretty.js.map
index 80e5f33cf4cd49790044a28ad52b86b1c62cca31..9f71ec636423080af520fec1cb716b975b74d93f 100644
--- a/dist/esm/Pretty.js.map
+++ b/dist/esm/Pretty.js.map
@@ -1 +1 @@
-{"version":3,"file":"Pretty.js","names":["Arr","Option","AST","errors_","util_","ParseResult","PrettyHookId","Symbol","for","pretty","handler","self","annotations","make","schema","compile","ast","getHook","getAnnotation","getMatcher","defaultPretty","match","onNone","onSome","toString","a","String","stringify","JSON","formatUnknown","Declaration","go","hook","isSome","value","typeParameters","map","Error","getPrettyErrorMessage","literal","TupleType","elements","e","type","rest","input","output","i","length","isOptional","push","isNonEmptyReadonlyArray","head","tail","j","join","TypeLiteral","propertySignaturesTypes","propertySignatures","f","indexSignatureTypes","indexSignatures","is","expectedKeys","name","ps","Object","prototype","hasOwnProperty","call","formatPropertyKey","keys","getKeysForIndexSignature","parameter","key","Union","types","index","findIndex","Suspend","get","memoizeThunk","Refinement","from","Transformation","to","getCompiler"],"sources":["../../src/Pretty.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"Pretty.js","names":["Arr","Option","AST","errors_","util_","ParseResult","PrettyHookId","Symbol","for","pretty","handler","self","annotations","make","schema","compile","ast","getHook","getAnnotation","getMatcher","defaultPretty","match","onNone","onSome","toString","a","String","stringify","JSON","formatUnknown","getPrettyErrorMessage","message","path","getErrorMessageWithPath","Declaration","go","hook","isSome","value","typeParameters","map","tp","Error","literal","TupleType","elements","e","i","type","concat","rest","input","output","length","isOptional","push","isNonEmptyReadonlyArray","head","tail","j","join","TypeLiteral","propertySignaturesTypes","propertySignatures","ps","name","indexSignatureTypes","indexSignatures","is","expectedKeys","Object","prototype","hasOwnProperty","call","formatPropertyKey","keys","getKeysForIndexSignature","parameter","key","Union","types","index","findIndex","Suspend","get","memoizeThunk","f","Refinement","from","Transformation","to","getCompiler"],"sources":["../../src/Pretty.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/esm/Schema.js b/dist/esm/Schema.js
index 5e4d0e49931256faeb533a9871d311c62b116102..747a669734caef1df4a03d8906602749003deb18 100644
--- a/dist/esm/Schema.js
+++ b/dist/esm/Schema.js
@@ -5,7 +5,6 @@ import * as array_ from "effect/Array";
 import * as bigDecimal_ from "effect/BigDecimal";
 import * as bigInt_ from "effect/BigInt";
 import * as boolean_ from "effect/Boolean";
-import * as brand_ from "effect/Brand";
 import * as cause_ from "effect/Cause";
 import * as chunk_ from "effect/Chunk";
 import * as data_ from "effect/Data";
@@ -38,12 +37,31 @@ import * as serializable_ from "./internal/serializable.js";
 import * as util_ from "./internal/util.js";
 import * as ParseResult from "./ParseResult.js";
 import * as pretty_ from "./Pretty.js";
-import * as TreeFormatter from "./TreeFormatter.js";
 /**
  * @since 1.0.0
  * @category symbol
  */
 export const TypeId = /*#__PURE__*/Symbol.for("@effect/schema/Schema");
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+export const make = ast => class SchemaClass {
+  [TypeId] = variance;
+  static Type;
+  static Encoded;
+  static [TypeId] = variance;
+  static ast = ast;
+  static annotations(annotations) {
+    return make(AST.annotations(this.ast, toASTAnnotations(annotations)));
+  }
+  static pipe() {
+    return pipeArguments(this, arguments);
+  }
+  static toString() {
+    return String(ast);
+  }
+};
 const variance = {
   /* c8 ignore next */
   _A: _ => _,
@@ -93,31 +111,10 @@ const toASTAnnotations = annotations => {
   move("parseIssueTitle", AST.ParseIssueTitleAnnotationId);
   return out;
 };
-class SchemaImpl {
-  ast;
-  [TypeId] = variance;
-  constructor(ast) {
-    this.ast = ast;
-  }
-  pipe() {
-    return pipeArguments(this, arguments);
-  }
-  annotations(annotations) {
-    return new SchemaImpl(AST.annotations(this.ast, toASTAnnotations(annotations)));
-  }
-  toString() {
-    return String(this.ast);
-  }
-}
 /**
  * @since 1.0.0
  */
 export const asSchema = schema => schema;
-/**
- * @category hashing
- * @since 1.0.0
- */
-export const hash = schema => AST.hash(schema.ast);
 /**
  * @category formatting
  * @since 1.0.0
@@ -303,26 +300,15 @@ export const validatePromise = (schema, options) => {
  * @since 1.0.0
  */
 export const isSchema = u => Predicate.hasProperty(u, TypeId) && Predicate.isObject(u[TypeId]);
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const make = ast => new SchemaImpl(ast);
-class LiteralImpl extends SchemaImpl {
-  static ast = literals => {
-    return AST.isMembers(literals) ? AST.Union.make(AST.mapMembers(literals, literal => new AST.Literal(literal))) : new AST.Literal(literals[0]);
-  };
-  literals;
-  constructor(literals, ast = LiteralImpl.ast(literals)) {
-    super(ast);
-    this.literals = [...literals];
-  }
-  annotations(annotations) {
-    return new LiteralImpl(this.literals, AST.annotations(this.ast, toASTAnnotations(annotations)));
+const getDefaultLiteralAST = literals => AST.isMembers(literals) ? AST.Union.make(AST.mapMembers(literals, literal => new AST.Literal(literal))) : new AST.Literal(literals[0]);
+const makeLiteralClass = (literals, ast = getDefaultLiteralAST(literals)) => class LiteralClass extends make(ast) {
+  static annotations(annotations) {
+    return makeLiteralClass(this.literals, AST.annotations(this.ast, toASTAnnotations(annotations)));
   }
-}
+  static literals = [...literals];
+};
 export function Literal(...literals) {
-  return array_.isNonEmptyReadonlyArray(literals) ? new LiteralImpl(literals) : Never;
+  return array_.isNonEmptyReadonlyArray(literals) ? makeLiteralClass(literals) : Never;
 }
 /**
  * Creates a new `Schema` from a literal schema.
@@ -346,24 +332,20 @@ export const pickLiteral = (...literals) => _schema => Literal(...literals);
  * @since 1.0.0
  */
 export const UniqueSymbolFromSelf = symbol => make(new AST.UniqueSymbol(symbol));
-class EnumsImpl extends SchemaImpl {
-  enums;
-  static ast = enums => {
-    return new AST.Enums(Object.keys(enums).filter(key => typeof enums[enums[key]] !== "number").map(key => [key, enums[key]]));
-  };
-  constructor(enums, ast = EnumsImpl.ast(enums)) {
-    super(ast);
-    this.enums = enums;
-  }
-  annotations(annotations) {
-    return new EnumsImpl(this.enums, AST.annotations(this.ast, toASTAnnotations(annotations)));
+const getDefaultEnumsAST = enums => new AST.Enums(Object.keys(enums).filter(key => typeof enums[enums[key]] !== "number").map(key => [key, enums[key]]));
+const makeEnumsClass = (enums, ast = getDefaultEnumsAST(enums)) => class EnumsClass extends make(ast) {
+  static annotations(annotations) {
+    return makeEnumsClass(this.enums, AST.annotations(this.ast, toASTAnnotations(annotations)));
   }
-}
+  static enums = {
+    ...enums
+  };
+};
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const Enums = enums => new EnumsImpl(enums);
+export const Enums = enums => makeEnumsClass(enums);
 /**
  * @category constructors
  * @since 1.0.0
@@ -430,7 +412,7 @@ export const BrandTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/Brand"
  * @category constructors
  * @since 1.0.0
  */
-export const fromBrand = (constructor, annotations) => self => make(new AST.Refinement(self.ast, (a, _, ast) => {
+export const fromBrand = (constructor, annotations) => self => makeBrandClass(new AST.Refinement(self.ast, function predicate(a, _, ast) {
   const either = constructor.either(a);
   return either_.isLeft(either) ? option_.some(new ParseResult.Type(ast, a, either.left.map(v => v.message).join(", "))) : option_.none();
 }, toASTAnnotations({
@@ -467,82 +449,104 @@ export const instanceOf = (constructor, annotations) => declare(u => u instanceo
  * @category primitives
  * @since 1.0.0
  */
-export const Undefined = /*#__PURE__*/make(AST.undefinedKeyword);
+export class Undefined extends make(AST.undefinedKeyword) {
+  static annotations = super.annotations;
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const Void = /*#__PURE__*/make(AST.voidKeyword);
+export class Void extends make(AST.voidKeyword) {
+  static annotations = super.annotations;
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const Null = /*#__PURE__*/make(AST.null);
+export class Null extends make(AST.null) {
+  static annotations = super.annotations;
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const Never = /*#__PURE__*/make(AST.neverKeyword);
+export class Never extends make(AST.neverKeyword) {
+  static annotations = super.annotations;
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const Unknown = /*#__PURE__*/make(AST.unknownKeyword);
+export class Unknown extends make(AST.unknownKeyword) {
+  static annotations = super.annotations;
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const Any = /*#__PURE__*/make(AST.anyKeyword);
-const $String = /*#__PURE__*/make(AST.stringKeyword);
-const $Number = /*#__PURE__*/make(AST.numberKeyword);
-const $Boolean = /*#__PURE__*/make(AST.booleanKeyword);
+export class Any extends make(AST.anyKeyword) {
+  static annotations = super.annotations;
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const BigIntFromSelf = /*#__PURE__*/make(AST.bigIntKeyword);
+export class BigIntFromSelf extends make(AST.bigIntKeyword) {
+  static annotations = super.annotations;
+}
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const SymbolFromSelf = /*#__PURE__*/make(AST.symbolKeyword);
-const $Object = /*#__PURE__*/make(AST.objectKeyword);
+export class SymbolFromSelf extends make(AST.symbolKeyword) {
+  static annotations = super.annotations;
+}
+/** @ignore */
+class String$ extends make(AST.stringKeyword) {
+  static annotations = super.annotations;
+}
+/** @ignore */
+class Number$ extends make(AST.numberKeyword) {
+  static annotations = super.annotations;
+}
+/** @ignore */
+class Boolean$ extends make(AST.booleanKeyword) {
+  static annotations = super.annotations;
+}
+/** @ignore */
+class Object$ extends make(AST.objectKeyword) {
+  static annotations = super.annotations;
+}
 export {
 /**
  * @category primitives
  * @since 1.0.0
  */
-$Boolean as Boolean,
+Boolean$ as Boolean,
 /**
  * @category primitives
  * @since 1.0.0
  */
-$Number as Number,
+Number$ as Number,
 /**
  * @category primitives
  * @since 1.0.0
  */
-$Object as Object,
+Object$ as Object,
 /**
  * @category primitives
  * @since 1.0.0
  */
-$String as String };
-class UnionImpl extends SchemaImpl {
-  static ast = members => {
-    return AST.Union.members(members.map(m => m.ast));
-  };
-  members;
-  constructor(members, ast = UnionImpl.ast(members)) {
-    super(ast);
-    this.members = [...members];
-  }
-  annotations(annotations) {
-    return new UnionImpl(this.members, AST.annotations(this.ast, toASTAnnotations(annotations)));
+String$ as String };
+const getDefaultUnionAST = members => AST.Union.members(members.map(m => m.ast));
+const makeUnionClass = (members, ast = getDefaultUnionAST(members)) => class UnionClass extends make(ast) {
+  static annotations(annotations) {
+    return makeUnionClass(this.members, AST.annotations(this.ast, toASTAnnotations(annotations)));
   }
-}
+  static members = [...members];
+};
 export function Union(...members) {
-  return AST.isMembers(members) ? new UnionImpl(members) : array_.isNonEmptyReadonlyArray(members) ? members[0] : Never;
+  return AST.isMembers(members) ? makeUnionClass(members) : array_.isNonEmptyReadonlyArray(members) ? members[0] : Never;
 }
 /**
  * @category combinators
@@ -578,56 +582,41 @@ class OptionalElementImpl {
     return `${this.optionalElement.ast}?`;
   }
 }
-class TupleTypeImpl extends SchemaImpl {
-  elements;
-  rest;
-  static ast = (elements, rest) => {
-    return new AST.TupleType(elements.map(schema => isSchema(schema) ? new AST.Element(schema.ast, false) : new AST.Element(schema.optionalElement.ast, true)), rest.map(e => e.ast), true);
-  };
-  constructor(elements, rest, ast = TupleTypeImpl.ast(elements, rest)) {
-    super(ast);
-    this.elements = elements;
-    this.rest = rest;
-  }
-  annotations(annotations) {
-    return new TupleTypeImpl(this.elements, this.rest, AST.annotations(this.ast, toASTAnnotations(annotations)));
+const getDefaultTupleTypeAST = (elements, rest) => new AST.TupleType(elements.map(schema => isSchema(schema) ? new AST.Element(schema.ast, false) : new AST.Element(schema.optionalElement.ast, true)), rest.map(e => e.ast), true);
+const makeTupleTypeClass = (elements, rest, ast = getDefaultTupleTypeAST(elements, rest)) => class TupleTypeClass extends make(ast) {
+  static annotations(annotations) {
+    return makeTupleTypeClass(this.elements, this.rest, AST.annotations(this.ast, toASTAnnotations(annotations)));
   }
-}
+  static elements = [...elements];
+  static rest = [...rest];
+};
 export function Tuple(...args) {
-  return Array.isArray(args[0]) ? new TupleTypeImpl(args[0], args.slice(1)) : new TupleTypeImpl(args, []);
+  return Array.isArray(args[0]) ? makeTupleTypeClass(args[0], args.slice(1)) : makeTupleTypeClass(args, []);
 }
-class $ArrayImpl extends TupleTypeImpl {
-  value;
-  constructor(value, ast) {
-    super([], [value], ast);
-    this.value = value;
+const makeArrayClass = (value, ast) => class ArrayClass extends makeTupleTypeClass([], [value], ast) {
+  static annotations(annotations) {
+    return makeArrayClass(this.value, AST.annotations(this.ast, toASTAnnotations(annotations)));
   }
-  annotations(annotations) {
-    return new $ArrayImpl(this.value, AST.annotations(this.ast, toASTAnnotations(annotations)));
-  }
-}
-const $Array = value => new $ArrayImpl(value);
+  static value = value;
+};
+const Array$ = value => makeArrayClass(value);
 export {
 /**
  * @category constructors
  * @since 1.0.0
  */
-$Array as Array };
-class NonEmptyArrayImpl extends TupleTypeImpl {
-  value;
-  constructor(value, ast) {
-    super([value], [value], ast);
-    this.value = value;
-  }
-  annotations(annotations) {
-    return new NonEmptyArrayImpl(this.value, AST.annotations(this.ast, toASTAnnotations(annotations)));
+Array$ as Array };
+const makeNonEmptyArrayClass = (value, ast) => class NonEmptyArrayClass extends makeTupleTypeClass([value], [value], ast) {
+  static annotations(annotations) {
+    return makeNonEmptyArrayClass(this.value, AST.annotations(this.ast, toASTAnnotations(annotations)));
   }
-}
+  static value = value;
+};
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const NonEmptyArray = value => new NonEmptyArrayImpl(value);
+export const NonEmptyArray = value => makeNonEmptyArrayClass(value);
 const formatToken = isOptional => isOptional ? "\"?:\"" : "\":\"";
 /**
  * @category PropertySignature
@@ -638,15 +627,17 @@ export class PropertySignatureDeclaration {
   isOptional;
   isReadonly;
   annotations;
+  defaultValue;
   /**
    * @since 1.0.0
    */
   _tag = "PropertySignatureDeclaration";
-  constructor(type, isOptional, isReadonly, annotations) {
+  constructor(type, isOptional, isReadonly, annotations, defaultValue) {
     this.type = type;
     this.isOptional = isOptional;
     this.isReadonly = isReadonly;
     this.annotations = annotations;
+    this.defaultValue = defaultValue;
   }
   /**
    * @since 1.0.0
@@ -684,11 +675,13 @@ export class ToPropertySignature {
   isOptional;
   isReadonly;
   annotations;
-  constructor(type, isOptional, isReadonly, annotations) {
+  defaultValue;
+  constructor(type, isOptional, isReadonly, annotations, defaultValue) {
     this.type = type;
     this.isOptional = isOptional;
     this.isReadonly = isReadonly;
     this.annotations = annotations;
+    this.defaultValue = defaultValue;
   }
 }
 const formatPropertyKey = p => {
@@ -738,14 +731,14 @@ const propertySignatureAnnotations_ = (ast, annotations) => {
         return new PropertySignatureDeclaration(ast.type, ast.isOptional, ast.isReadonly, {
           ...ast.annotations,
           ...annotations
-        });
+        }, ast.defaultValue);
       }
     case "PropertySignatureTransformation":
       {
         return new PropertySignatureTransformation(new FromPropertySignature(ast.from.type, ast.from.isOptional, ast.from.isReadonly, ast.from.annotations), new ToPropertySignature(ast.to.type, ast.to.isOptional, ast.to.isReadonly, {
           ...ast.to.annotations,
           ...annotations
-        }), ast.decode, ast.encode);
+        }, ast.to.defaultValue), ast.decode, ast.encode);
       }
   }
 };
@@ -754,9 +747,10 @@ export class PropertySignatureImpl {
   ast;
   [TypeId];
   [PropertySignatureTypeId] = null;
+  _TypeToken;
   _Key;
   _EncodedToken;
-  _TypeToken;
+  _HasDefault;
   constructor(ast) {
     this.ast = ast;
   }
@@ -771,11 +765,56 @@ export class PropertySignatureImpl {
   }
 }
 /**
+ * Lifts a `Schema` into a `PropertySignature`.
+ *
  * @category PropertySignature
  * @since 1.0.0
  */
-export const propertySignature = self => new PropertySignatureImpl(new PropertySignatureDeclaration(self.ast, false, true, {}));
+export const propertySignature = self => new PropertySignatureImpl(new PropertySignatureDeclaration(self.ast, false, true, {}, undefined));
 /**
+ * Enhances a property signature with a default constructor value.
+ *
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export const withConstructorDefault = /*#__PURE__*/dual(2, (self, defaultValue) => {
+  const ast = self.ast;
+  switch (ast._tag) {
+    case "PropertySignatureDeclaration":
+      return new PropertySignatureImpl(new PropertySignatureDeclaration(ast.type, ast.isOptional, ast.isReadonly, ast.annotations, defaultValue));
+    case "PropertySignatureTransformation":
+      return new PropertySignatureImpl(new PropertySignatureTransformation(ast.from, new ToPropertySignature(ast.to.type, ast.to.isOptional, ast.to.isReadonly, ast.to.annotations, defaultValue), ast.decode, ast.encode));
+  }
+});
+const applyDefaultValue = (o, defaultValue) => option_.match(o, {
+  onNone: () => option_.some(defaultValue()),
+  onSome: value => option_.some(value === undefined ? defaultValue() : value)
+});
+/**
+ * Enhances a property signature with a default decoding value.
+ *
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export const withDecodingDefault = /*#__PURE__*/dual(2, (self, defaultValue) => {
+  const ast = self.ast;
+  switch (ast._tag) {
+    case "PropertySignatureDeclaration":
+      return new PropertySignatureImpl(new PropertySignatureTransformation(ast, new ToPropertySignature(AST.typeAST(ast.type), false, true, {}, undefined), o => applyDefaultValue(o, defaultValue), identity));
+    case "PropertySignatureTransformation":
+      return new PropertySignatureImpl(new PropertySignatureTransformation(ast.from, new ToPropertySignature(ast.to.type, false, ast.to.isReadonly, ast.to.annotations, ast.to.defaultValue), o => applyDefaultValue(ast.decode(o), defaultValue), ast.encode));
+  }
+});
+/**
+ * Enhances a property signature with a default decoding value and a default constructor value.
+ *
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export const withDefaults = /*#__PURE__*/dual(2, (self, defaults) => self.pipe(withDecodingDefault(defaults.decoding), withConstructorDefault(defaults.constructor)));
+/**
+ * Enhances a property signature by specifying a different key for it in the Encoded type.
+ *
  * @category PropertySignature
  * @since 1.0.0
  */
@@ -784,32 +823,36 @@ export const fromKey = /*#__PURE__*/dual(2, (self, key) => {
   switch (ast._tag) {
     case "PropertySignatureDeclaration":
       {
-        return new PropertySignatureImpl(new PropertySignatureTransformation(new FromPropertySignature(ast.type, ast.isOptional, ast.isReadonly, ast.annotations, key), new ToPropertySignature(AST.typeAST(ast.type), ast.isOptional, ast.isReadonly, {}), identity, identity));
+        return new PropertySignatureImpl(new PropertySignatureTransformation(new FromPropertySignature(ast.type, ast.isOptional, ast.isReadonly, ast.annotations, key), new ToPropertySignature(AST.typeAST(ast.type), ast.isOptional, ast.isReadonly, {}, ast.defaultValue), identity, identity));
       }
     case "PropertySignatureTransformation":
       return new PropertySignatureImpl(new PropertySignatureTransformation(new FromPropertySignature(ast.from.type, ast.from.isOptional, ast.from.isReadonly, ast.from.annotations, key), ast.to, ast.decode, ast.encode));
   }
 });
 /**
- * - `decode`: `none` as argument means: the value is missing in the input
- * - `encode`: `none` as return value means: the value will be missing in the output
+ * Converts an optional property to a required one through a transformation `Option -> Option`.
+ *
+ * - `decode`: `none` as argument means the value is missing in the input.
+ * - `encode`: `none` as return value means the value will be missing in the output.
  *
  * @category PropertySignature
  * @since 1.0.0
  */
-export const optionalToRequired = (from, to, options) => new PropertySignatureImpl(new PropertySignatureTransformation(new FromPropertySignature(from.ast, true, true, {}, undefined), new ToPropertySignature(to.ast, false, true, {}), o => option_.some(options.decode(o)), option_.flatMap(options.encode)));
+export const optionalToRequired = (from, to, options) => new PropertySignatureImpl(new PropertySignatureTransformation(new FromPropertySignature(from.ast, true, true, {}, undefined), new ToPropertySignature(to.ast, false, true, {}, undefined), o => option_.some(options.decode(o)), option_.flatMap(options.encode)));
 /**
+ * Converts an optional property to another optional property through a transformation `Option -> Option`.
+ *
  * - `decode`:
- *   - `none` as argument means: the value is missing in the input
- *   - `none` as return value means: the value will be missing in the output
+ *   - `none` as argument means the value is missing in the input.
+ *   - `none` as return value means the value will be missing in the output.
  * - `encode`:
- *   - `none` as argument means: the value is missing in the input
- *   - `none` as return value means: the value will be missing in the output
+ *   - `none` as argument means the value is missing in the input.
+ *   - `none` as return value means the value will be missing in the output.
  *
  * @category PropertySignature
  * @since 1.0.0
  */
-export const optionalToOptional = (from, to, options) => new PropertySignatureImpl(new PropertySignatureTransformation(new FromPropertySignature(from.ast, true, true, {}, undefined), new ToPropertySignature(to.ast, true, true, {}), options.decode, options.encode));
+export const optionalToOptional = (from, to, options) => new PropertySignatureImpl(new PropertySignatureTransformation(new FromPropertySignature(from.ast, true, true, {}, undefined), new ToPropertySignature(to.ast, true, true, {}, undefined), options.decode, options.encode));
 /**
  * @category PropertySignature
  * @since 1.0.0
@@ -857,7 +900,7 @@ export const optional = /*#__PURE__*/dual(args => isSchema(args[0]), (schema, op
           encode: identity
         });
       } else {
-        return new PropertySignatureImpl(new PropertySignatureDeclaration(schema.ast, true, true, {}));
+        return new PropertySignatureImpl(new PropertySignatureDeclaration(schema.ast, true, true, {}, undefined));
       }
     }
   } else {
@@ -898,122 +941,133 @@ export const optional = /*#__PURE__*/dual(args => isSchema(args[0]), (schema, op
           encode: identity
         });
       } else {
-        return new PropertySignatureImpl(new PropertySignatureDeclaration(UndefinedOr(schema).ast, true, true, {}));
+        return new PropertySignatureImpl(new PropertySignatureDeclaration(UndefinedOr(schema).ast, true, true, {}, undefined));
       }
     }
   }
 });
 const isPropertySignature = u => Predicate.hasProperty(u, PropertySignatureTypeId);
-class TypeLiteralImpl extends SchemaImpl {
-  static ast = (fields, records) => {
-    const ownKeys = util_.ownKeys(fields);
-    const pss = [];
-    if (ownKeys.length > 0) {
-      const from = [];
-      const to = [];
-      const transformations = [];
-      for (let i = 0; i < ownKeys.length; i++) {
-        const key = ownKeys[i];
-        const field = fields[key];
-        if (isPropertySignature(field)) {
-          const ast = field.ast;
-          switch (ast._tag) {
-            case "PropertySignatureDeclaration":
-              {
-                const type = ast.type;
-                const isOptional = ast.isOptional;
-                const toAnnotations = ast.annotations;
-                from.push(new AST.PropertySignature(key, type, isOptional, true));
-                to.push(new AST.PropertySignature(key, AST.typeAST(type), isOptional, true, toAnnotations));
-                pss.push(new AST.PropertySignature(key, type, isOptional, true, toAnnotations));
-                break;
-              }
-            case "PropertySignatureTransformation":
-              {
-                const fromKey = ast.from.fromKey ?? key;
-                from.push(new AST.PropertySignature(fromKey, ast.from.type, ast.from.isOptional, true, ast.from.annotations));
-                to.push(new AST.PropertySignature(key, ast.to.type, ast.to.isOptional, true, ast.to.annotations));
-                transformations.push(new AST.PropertySignatureTransformation(fromKey, key, ast.decode, ast.encode));
-                break;
-              }
-          }
-        } else {
-          from.push(new AST.PropertySignature(key, field.ast, false, true));
-          to.push(new AST.PropertySignature(key, AST.typeAST(field.ast), false, true));
-          pss.push(new AST.PropertySignature(key, field.ast, false, true));
+const getDefaultTypeLiteralAST = (fields, records) => {
+  const ownKeys = util_.ownKeys(fields);
+  const pss = [];
+  if (ownKeys.length > 0) {
+    const from = [];
+    const to = [];
+    const transformations = [];
+    for (let i = 0; i < ownKeys.length; i++) {
+      const key = ownKeys[i];
+      const field = fields[key];
+      if (isPropertySignature(field)) {
+        const ast = field.ast;
+        switch (ast._tag) {
+          case "PropertySignatureDeclaration":
+            {
+              const type = ast.type;
+              const isOptional = ast.isOptional;
+              const toAnnotations = ast.annotations;
+              from.push(new AST.PropertySignature(key, type, isOptional, true));
+              to.push(new AST.PropertySignature(key, AST.typeAST(type), isOptional, true, toAnnotations));
+              pss.push(new AST.PropertySignature(key, type, isOptional, true, toAnnotations));
+              break;
+            }
+          case "PropertySignatureTransformation":
+            {
+              const fromKey = ast.from.fromKey ?? key;
+              from.push(new AST.PropertySignature(fromKey, ast.from.type, ast.from.isOptional, true, ast.from.annotations));
+              to.push(new AST.PropertySignature(key, ast.to.type, ast.to.isOptional, true, ast.to.annotations));
+              transformations.push(new AST.PropertySignatureTransformation(fromKey, key, ast.decode, ast.encode));
+              break;
+            }
         }
+      } else {
+        from.push(new AST.PropertySignature(key, field.ast, false, true));
+        to.push(new AST.PropertySignature(key, AST.typeAST(field.ast), false, true));
+        pss.push(new AST.PropertySignature(key, field.ast, false, true));
       }
-      if (array_.isNonEmptyReadonlyArray(transformations)) {
-        const issFrom = [];
-        const issTo = [];
-        for (const r of records) {
-          const {
-            indexSignatures,
-            propertySignatures
-          } = AST.record(r.key.ast, r.value.ast);
-          propertySignatures.forEach(ps => {
-            from.push(ps);
-            to.push(new AST.PropertySignature(ps.name, AST.typeAST(ps.type), ps.isOptional, ps.isReadonly, ps.annotations));
-          });
-          indexSignatures.forEach(is => {
-            issFrom.push(is);
-            issTo.push(new AST.IndexSignature(is.parameter, AST.typeAST(is.type), is.isReadonly));
-          });
-        }
-        return new AST.Transformation(new AST.TypeLiteral(from, issFrom, {
-          [AST.TitleAnnotationId]: "Struct (Encoded side)"
-        }), new AST.TypeLiteral(to, issTo, {
-          [AST.TitleAnnotationId]: "Struct (Type side)"
-        }), new AST.TypeLiteralTransformation(transformations));
+    }
+    if (array_.isNonEmptyReadonlyArray(transformations)) {
+      const issFrom = [];
+      const issTo = [];
+      for (const r of records) {
+        const {
+          indexSignatures,
+          propertySignatures
+        } = AST.record(r.key.ast, r.value.ast);
+        propertySignatures.forEach(ps => {
+          from.push(ps);
+          to.push(new AST.PropertySignature(ps.name, AST.typeAST(ps.type), ps.isOptional, ps.isReadonly, ps.annotations));
+        });
+        indexSignatures.forEach(is => {
+          issFrom.push(is);
+          issTo.push(new AST.IndexSignature(is.parameter, AST.typeAST(is.type), is.isReadonly));
+        });
       }
+      return new AST.Transformation(new AST.TypeLiteral(from, issFrom, {
+        [AST.TitleAnnotationId]: "Struct (Encoded side)"
+      }), new AST.TypeLiteral(to, issTo, {
+        [AST.TitleAnnotationId]: "Struct (Type side)"
+      }), new AST.TypeLiteralTransformation(transformations));
     }
-    const iss = [];
-    for (const r of records) {
-      const {
-        indexSignatures,
-        propertySignatures
-      } = AST.record(r.key.ast, r.value.ast);
-      propertySignatures.forEach(ps => pss.push(ps));
-      indexSignatures.forEach(is => iss.push(is));
+  }
+  const iss = [];
+  for (const r of records) {
+    const {
+      indexSignatures,
+      propertySignatures
+    } = AST.record(r.key.ast, r.value.ast);
+    propertySignatures.forEach(ps => pss.push(ps));
+    indexSignatures.forEach(is => iss.push(is));
+  }
+  return new AST.TypeLiteral(pss, iss);
+};
+const lazilyMergeDefaults = (fields, out) => {
+  const ownKeys = util_.ownKeys(fields);
+  for (const key of ownKeys) {
+    const field = fields[key];
+    if (out[key] === undefined && isPropertySignature(field)) {
+      const ast = field.ast;
+      const defaultValue = ast._tag === "PropertySignatureDeclaration" ? ast.defaultValue : ast.to.defaultValue;
+      if (defaultValue !== undefined) {
+        out[key] = defaultValue();
+      }
     }
-    return new AST.TypeLiteral(pss, iss);
-  };
-  fields;
-  records;
-  constructor(fields, records, ast = TypeLiteralImpl.ast(fields, records)) {
-    super(ast);
-    this.fields = {
+  }
+  return out;
+};
+const makeTypeLiteralClass = (fields, records, ast = getDefaultTypeLiteralAST(fields, records)) => {
+  return class TypeLiteralClass extends make(ast) {
+    static annotations(annotations) {
+      return makeTypeLiteralClass(this.fields, this.records, AST.annotations(this.ast, toASTAnnotations(annotations)));
+    }
+    static fields = {
       ...fields
     };
-    this.records = [...records];
-  }
-  annotations(annotations) {
-    return new TypeLiteralImpl(this.fields, this.records, AST.annotations(this.ast, toASTAnnotations(annotations)));
-  }
-}
+    static records = [...records];
+    static make(props) {
+      return ParseResult.validateSync(this)(lazilyMergeDefaults(fields, {
+        ...props
+      }));
+    }
+  };
+};
 export function Struct(fields, ...records) {
-  return new TypeLiteralImpl(fields, records);
+  return makeTypeLiteralClass(fields, records);
 }
-class $RecordImpl extends TypeLiteralImpl {
-  key;
-  value;
-  constructor(key, value, ast) {
-    super({}, [{
-      key,
-      value
-    }], ast);
-    this.key = key;
-    this.value = value;
-  }
-  annotations(annotations) {
-    return new $RecordImpl(this.key, this.value, AST.annotations(this.ast, toASTAnnotations(annotations)));
+const makeRecordClass = (key, value, ast) => class RecordClass extends makeTypeLiteralClass({}, [{
+  key,
+  value
+}], ast) {
+  static annotations(annotations) {
+    return makeRecordClass(key, value, AST.annotations(this.ast, toASTAnnotations(annotations)));
   }
-}
+  static key = key;
+  static value = value;
+};
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const Record = (key, value) => new $RecordImpl(key, value);
+export const Record = (key, value) => makeRecordClass(key, value);
 /**
  * @category struct transformations
  * @since 1.0.0
@@ -1062,28 +1116,14 @@ export const pluck = /*#__PURE__*/dual(2, (schema, key) => {
     }
   });
 });
-const makeBrandSchema = (self, annotations) => {
-  const ast = AST.annotations(self, toASTAnnotations(annotations));
-  const schema = make(ast);
-  const validateEither_ = validateEither(schema);
-  //     v-- function
-  const out = brand_.refined(unbranded => either_.match(validateEither_(unbranded), {
-    onLeft: e => option_.some(brand_.error(TreeFormatter.formatErrorSync(e), e)),
-    onRight: () => option_.none()
-  }));
-  // ----------------
-  // Schema interface
-  // ----------------
-  Object.setPrototypeOf(Object.assign(out, schema, {
-    annotations: a => makeBrandSchema(ast, a)
-  }), Object.getPrototypeOf(schema));
-  return out;
+const makeBrandClass = ast => class BrandClass extends make(ast) {
+  static annotations(annotations) {
+    return makeBrandClass(AST.annotations(this.ast, toASTAnnotations(annotations)));
+  }
+  static make(a) {
+    return ParseResult.validateSync(this)(a);
+  }
 };
-/**
- * @category branding
- * @since 1.0.0
- */
-export const asBrandSchema = schema => schema;
 /**
  * Returns a nominal branded schema by applying a brand to a given schema.
  *
@@ -1104,16 +1144,17 @@ export const asBrandSchema = schema => schema;
  * @since 1.0.0
  */
 export const brand = (brand, annotations) => self => {
-  const brandAnnotation = option_.match(AST.getBrandAnnotation(self.ast), {
+  const annotation = option_.match(AST.getBrandAnnotation(self.ast), {
     onNone: () => [brand],
     onSome: brands => [...brands, brand]
   });
-  return makeBrandSchema(self.ast, {
+  const ast = AST.annotations(self.ast, toASTAnnotations({
     // add a default title annotation containing the brand
     title: String(self.ast) + ` & Brand<${util_.formatUnknown(brand)}>`,
     ...annotations,
-    [AST.BrandAnnotationId]: brandAnnotation
-  });
+    [AST.BrandAnnotationId]: annotation
+  }));
+  return makeBrandClass(ast);
 };
 /**
  * @category combinators
@@ -1134,7 +1175,10 @@ export const required = self => make(AST.required(self.ast));
  * @since 1.0.0
  */
 export const mutable = schema => make(AST.mutable(schema.ast));
-const getExtendErrorMessage = (x, y, path) => errors_.getAPIErrorMessage("Extend", `cannot extend \`${x}\` with \`${y}\` (path [${path?.join(", ")}])`);
+const getExtendErrorMessage = (x, y, path) => {
+  const message = `unsupported schema or overlapping types, cannot extend ${x} with ${y}`;
+  return errors_.getErrorMessageWithPath(errors_.getErrorMessage("extend", message), path);
+};
 const intersectTypeLiterals = (x, y, path) => {
   if (AST.isTypeLiteral(x) && AST.isTypeLiteral(y)) {
     const propertySignatures = [...x.propertySignatures];
@@ -1148,37 +1192,98 @@ const intersectTypeLiterals = (x, y, path) => {
           isOptional,
           type
         } = propertySignatures[i];
-        path = [...path, util_.formatUnknown(name)];
-        propertySignatures[i] = new AST.PropertySignature(name, extendAST(type, ps.type, path), isOptional, true);
+        propertySignatures[i] = new AST.PropertySignature(name, extendAST(type, ps.type, path.concat(name)), isOptional, true);
       }
     }
     return new AST.TypeLiteral(propertySignatures, x.indexSignatures.concat(y.indexSignatures));
   }
   throw new Error(getExtendErrorMessage(x, y, path));
 };
+const addRefinementToMembers = (refinement, asts) => asts.map(ast => new AST.Refinement(ast, refinement.filter,
+// preserve message annotation
+option_.match(AST.getMessageAnnotation(refinement), {
+  onNone: () => undefined,
+  onSome: message => ({
+    [AST.MessageAnnotationId]: message
+  })
+})));
 const extendAST = (x, y, path) => AST.Union.make(intersectUnionMembers([x], [y], path));
+const getTypes = ast => AST.isUnion(ast) ? ast.types : [ast];
 const intersectUnionMembers = (xs, ys, path) => array_.flatMap(xs, x => array_.flatMap(ys, y => {
-  if (AST.isUnion(x)) {
-    return intersectUnionMembers(x.types, AST.isUnion(y) ? y.types : [y], path);
-  } else if (AST.isUnion(y)) {
-    return intersectUnionMembers([x], y.types, path);
-  }
-  if (AST.isTypeLiteral(x)) {
-    if (AST.isTypeLiteral(y)) {
-      return [intersectTypeLiterals(x, y, path)];
-    } else if (AST.isTransformation(y) && AST.isTypeLiteralTransformation(y.transformation)) {
-      return [new AST.Transformation(intersectTypeLiterals(x, y.from, path), intersectTypeLiterals(AST.typeAST(x), y.to, path), new AST.TypeLiteralTransformation(y.transformation.propertySignatureTransformations))];
-    }
-  } else if (AST.isTransformation(x) && AST.isTypeLiteralTransformation(x.transformation)) {
-    if (AST.isTypeLiteral(y)) {
-      return [new AST.Transformation(intersectTypeLiterals(x.from, y, path), intersectTypeLiterals(x.to, AST.typeAST(y), path), new AST.TypeLiteralTransformation(x.transformation.propertySignatureTransformations))];
-    } else if (AST.isTransformation(y) && AST.isTypeLiteralTransformation(y.transformation)) {
-      return [new AST.Transformation(intersectTypeLiterals(x.from, y.from, path), intersectTypeLiterals(x.to, y.to, path), new AST.TypeLiteralTransformation(x.transformation.propertySignatureTransformations.concat(y.transformation.propertySignatureTransformations)))];
-    }
+  switch (x._tag) {
+    case "Union":
+      return intersectUnionMembers(x.types, getTypes(y), path);
+    case "Suspend":
+      return [new AST.Suspend(() => extendAST(x.f(), y, path))];
+    case "Refinement":
+      return addRefinementToMembers(x, intersectUnionMembers(getTypes(x.from), getTypes(y), path));
+    case "TypeLiteral":
+      {
+        switch (y._tag) {
+          case "Union":
+            return intersectUnionMembers([x], y.types, path);
+          case "Suspend":
+            return [new AST.Suspend(() => extendAST(x, y.f(), path))];
+          case "Refinement":
+            return addRefinementToMembers(y, intersectUnionMembers([x], getTypes(y.from), path));
+          case "TypeLiteral":
+            return [intersectTypeLiterals(x, y, path)];
+          case "Transformation":
+            {
+              if (AST.isTypeLiteralTransformation(y.transformation)) {
+                return [new AST.Transformation(intersectTypeLiterals(x, y.from, path), intersectTypeLiterals(AST.typeAST(x), y.to, path), new AST.TypeLiteralTransformation(y.transformation.propertySignatureTransformations))];
+              }
+              break;
+            }
+        }
+        break;
+      }
+    case "Transformation":
+      {
+        if (AST.isTypeLiteralTransformation(x.transformation)) {
+          switch (y._tag) {
+            case "TypeLiteral":
+              return [new AST.Transformation(intersectTypeLiterals(x.from, y, path), intersectTypeLiterals(x.to, AST.typeAST(y), path), new AST.TypeLiteralTransformation(x.transformation.propertySignatureTransformations))];
+            case "Transformation":
+              {
+                if (AST.isTypeLiteralTransformation(y.transformation)) {
+                  return [new AST.Transformation(intersectTypeLiterals(x.from, y.from, path), intersectTypeLiterals(x.to, y.to, path), new AST.TypeLiteralTransformation(x.transformation.propertySignatureTransformations.concat(y.transformation.propertySignatureTransformations)))];
+                }
+              }
+              break;
+          }
+        }
+        break;
+      }
   }
   throw new Error(getExtendErrorMessage(x, y, path));
 }));
 /**
+ * Extends a schema by adding additional fields or index signatures.
+ *
+ * 1) It only supports **structs**, refinements of structs, unions of structs, suspensions of structs
+ * (informally `Supported = Struct | Refinement of Supported | Union of Supported | suspend(() => Supported)`)
+ * 2) The arguments must represent disjoint types (e.g., `extend(Struct({ a: String }), Struct({ a: String })))` raises an error)
+ *
+ * @example
+ * import * as Schema from "@effect/schema/Schema"
+ *
+ * const schema = Schema.Struct({
+ *   a: Schema.String,
+ *   b: Schema.String
+ * })
+ *
+ * // const extended: S.Schema<{
+ * //     readonly [x: string]: string;
+ * //     readonly a: string;
+ * //     readonly b: string;
+ * //     readonly c: string;
+ * // }>
+ * const extended = Schema.asSchema(schema.pipe(
+ *   Schema.extend(Schema.Struct({ c: Schema.String })), // <= you can add more fields
+ *   Schema.extend(Schema.Record(Schema.String, Schema.String)) // <= you can add index signatures
+ * ))
+ *
  * @category combinators
  * @since 1.0.0
  */
@@ -1193,27 +1298,39 @@ export const compose = /*#__PURE__*/dual(args => isSchema(args[1]), (from, to) =
  * @since 1.0.0
  */
 export const suspend = f => make(new AST.Suspend(() => f().ast));
+const makeRefineClass = (from, filter, ast) => class RefineClass extends make(ast) {
+  static annotations(annotations) {
+    return makeRefineClass(this.from, this.filter, AST.annotations(this.ast, toASTAnnotations(annotations)));
+  }
+  static from = from;
+  static filter = filter;
+  static make(a) {
+    return ParseResult.validateSync(this)(a);
+  }
+};
 export function filter(predicate, annotations) {
-  return self => make(new AST.Refinement(self.ast, (a, options, ast) => {
-    const out = predicate(a, options, ast);
-    if (Predicate.isBoolean(out)) {
-      return out ? option_.none() : option_.some(new ParseResult.Type(ast, a));
+  return self => {
+    function filter(a, options, ast) {
+      const out = predicate(a, options, ast);
+      if (Predicate.isBoolean(out)) {
+        return out ? option_.none() : option_.some(new ParseResult.Type(ast, a));
+      }
+      if (Predicate.isString(out)) {
+        return option_.some(new ParseResult.Type(ast, a, out));
+      }
+      return out === undefined ? option_.none() : option_.some(out);
     }
-    return out;
-  }, toASTAnnotations(annotations)));
+    const ast = new AST.Refinement(self.ast, filter, toASTAnnotations(annotations));
+    return makeRefineClass(self, filter, ast);
+  };
 }
-class transformOrFailImpl extends SchemaImpl {
-  from;
-  to;
-  constructor(from, to, ast) {
-    super(ast);
-    this.from = from;
-    this.to = to;
-  }
-  annotations(annotations) {
-    return new transformOrFailImpl(this.from, this.to, AST.annotations(this.ast, toASTAnnotations(annotations)));
+const makeTransformationClass = (from, to, ast) => class TransformationClass extends make(ast) {
+  static annotations(annotations) {
+    return makeTransformationClass(this.from, this.to, AST.annotations(this.ast, toASTAnnotations(annotations)));
   }
-}
+  static from = from;
+  static to = to;
+};
 /**
  * Create a new `Schema` by transforming the input and output of an existing `Schema`
  * using the provided decoding functions.
@@ -1221,7 +1338,7 @@ class transformOrFailImpl extends SchemaImpl {
  * @category combinators
  * @since 1.0.0
  */
-export const transformOrFail = /*#__PURE__*/dual(args => isSchema(args[0]) && isSchema(args[1]), (from, to, options) => new transformOrFailImpl(from, to, new AST.Transformation(from.ast, to.ast, new AST.FinalTransformation(options.decode, options.encode))));
+export const transformOrFail = /*#__PURE__*/dual(args => isSchema(args[0]) && isSchema(args[1]), (from, to, options) => makeTransformationClass(from, to, new AST.Transformation(from.ast, to.ast, new AST.FinalTransformation(options.decode, options.encode))));
 /**
  * Create a new `Schema` by transforming the input and output of an existing `Schema`
  * using the provided mapping functions.
@@ -1327,7 +1444,7 @@ export const description = description => self => self.annotations({
 export const examples = examples => self => self.annotations({
   [AST.ExamplesAnnotationId]: examples
 });
-const $default = value => self => self.annotations({
+const default$ = value => self => self.annotations({
   [AST.DefaultAnnotationId]: value
 });
 export {
@@ -1335,7 +1452,7 @@ export {
  * @category annotations
  * @since 1.0.0
  */
-$default as default };
+default$ as default };
 /**
  * @category annotations
  * @since 1.0.0
@@ -1386,9 +1503,7 @@ export const parseIssueTitle = f => self => self.annotations({
  * @category renaming
  * @since 1.0.0
  */
-export const rename = /*#__PURE__*/dual(2, (self, mapping) => {
-  return make(AST.rename(self.ast, mapping));
-});
+export const rename = /*#__PURE__*/dual(2, (self, mapping) => make(AST.rename(self.ast, mapping)));
 /**
  * @category type id
  * @since 1.0.0
@@ -1406,6 +1521,9 @@ export const TrimmedTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/Trim
 export const trimmed = annotations => self => self.pipe(filter(a => a === a.trim(), {
   typeId: TrimmedTypeId,
   description: "a string with no leading or trailing whitespace",
+  jsonSchema: {
+    pattern: "^.*[a-zA-Z0-9]+.*$"
+  },
   ...annotations
 }));
 /**
@@ -1558,10 +1676,12 @@ export const lowercased = annotations => self => self.pipe(filter(a => a === a.t
  * @category string constructors
  * @since 1.0.0
  */
-export const Lowercased = /*#__PURE__*/$String.pipe( /*#__PURE__*/lowercased({
+export class Lowercased extends String$.pipe(lowercased({
   identifier: "Lowercased",
   title: "Lowercased"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category type id
  * @since 1.0.0
@@ -1582,10 +1702,12 @@ export const uppercased = annotations => self => self.pipe(filter(a => a === a.t
  * @category string constructors
  * @since 1.0.0
  */
-export const Uppercased = /*#__PURE__*/$String.pipe( /*#__PURE__*/uppercased({
+export class Uppercased extends String$.pipe(uppercased({
   identifier: "Uppercased",
   title: "Uppercased"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category type id
  * @since 1.0.0
@@ -1625,9 +1747,11 @@ export const length = (length, annotations) => self => {
  * @category string constructors
  * @since 1.0.0
  */
-export const Char = /*#__PURE__*/$String.pipe( /*#__PURE__*/length(1, {
+export class Char extends String$.pipe(length(1, {
   identifier: "Char"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category string filters
  * @since 1.0.0
@@ -1642,55 +1766,63 @@ export const nonEmpty = annotations => minLength(1, {
  * @category string transformations
  * @since 1.0.0
  */
-export const Lowercase = /*#__PURE__*/transform($String, Lowercased, {
+export class Lowercase extends transform(String$, Lowercased, {
   decode: s => s.toLowerCase(),
   encode: identity
 }).annotations({
   identifier: "Lowercase"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * This schema converts a string to uppercase.
  *
  * @category string transformations
  * @since 1.0.0
  */
-export const Uppercase = /*#__PURE__*/transform($String, Uppercased, {
+export class Uppercase extends transform(String$, Uppercased, {
   decode: s => s.toUpperCase(),
   encode: identity
 }).annotations({
   identifier: "Uppercase"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * @category string constructors
  * @since 1.0.0
  */
-export const Trimmed = /*#__PURE__*/$String.pipe( /*#__PURE__*/trimmed({
+export class Trimmed extends String$.pipe(trimmed({
   identifier: "Trimmed",
   title: "Trimmed"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * This schema allows removing whitespaces from the beginning and end of a string.
  *
  * @category string transformations
  * @since 1.0.0
  */
-export const Trim = /*#__PURE__*/transform($String, Trimmed, {
+export class Trim extends transform(String$, Trimmed, {
   decode: s => s.trim(),
   encode: identity
 }).annotations({
   identifier: "Trim"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * Returns a schema that allows splitting a string into an array of strings.
  *
  * @category string transformations
  * @since 1.0.0
  */
-export const split = separator => transform($String, $Array($String), {
+export const split = separator => transform(String$, Array$(String$), {
   decode: string_.split(separator),
   encode: array_.join(separator)
 });
-const JsonString = /*#__PURE__*/$String.annotations({
+const JsonString = /*#__PURE__*/String$.annotations({
   [AST.IdentifierAnnotationId]: "JsonString",
   [AST.TitleAnnotationId]: "JsonString",
   [AST.DescriptionAnnotationId]: "a JSON string"
@@ -1732,16 +1864,18 @@ export const parseJson = (schema, o) => {
  * @category string constructors
  * @since 1.0.0
  */
-export const NonEmpty = /*#__PURE__*/$String.pipe( /*#__PURE__*/nonEmpty({
+export class NonEmpty extends String$.pipe(nonEmpty({
   identifier: "NonEmpty",
   title: "NonEmpty"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category type id
  * @since 1.0.0
  */
 export const UUIDTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/UUID");
-const uuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;
+const uuidRegexp = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;
 /**
  * Represents a Universally Unique Identifier (UUID).
  *
@@ -1750,19 +1884,21 @@ const uuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-
  * @category string constructors
  * @since 1.0.0
  */
-export const UUID = /*#__PURE__*/$String.pipe( /*#__PURE__*/pattern(uuidRegex, {
+export class UUID extends String$.pipe(pattern(uuidRegexp, {
   typeId: UUIDTypeId,
   identifier: "UUID",
   title: "UUID",
   description: "a Universally Unique Identifier",
   arbitrary: () => fc => fc.uuid()
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category type id
  * @since 1.0.0
  */
 export const ULIDTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/ULID");
-const ulidRegex = /^[0-7][0-9A-HJKMNP-TV-Z]{25}$/i;
+const ulidRegexp = /^[0-7][0-9A-HJKMNP-TV-Z]{25}$/i;
 /**
  * Represents a Universally Unique Lexicographically Sortable Identifier (ULID).
  *
@@ -1772,13 +1908,15 @@ const ulidRegex = /^[0-7][0-9A-HJKMNP-TV-Z]{25}$/i;
  * @category string constructors
  * @since 1.0.0
  */
-export const ULID = /*#__PURE__*/$String.pipe( /*#__PURE__*/pattern(ulidRegex, {
+export class ULID extends String$.pipe(pattern(ulidRegexp, {
   typeId: ULIDTypeId,
   identifier: "ULID",
   title: "ULID",
   description: "a Universally Unique Lexicographically Sortable Identifier",
   arbitrary: () => fc => fc.ulid()
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category type id
  * @since 1.0.0
@@ -1978,77 +2116,105 @@ export const clamp = (minimum, maximum) => self => transform(self, self.pipe(typ
   encode: identity
 });
 /**
- * This schema transforms a `string` into a `number` by parsing the string using the `Number` function.
+ * Transforms a `string` into a `number` by parsing the string using the `parse` function of the `effect/Number` module.
  *
  * It returns an error if the value can't be converted (for example when non-numeric characters are provided).
  *
  * The following special string values are supported: "NaN", "Infinity", "-Infinity".
  *
- * @category number constructors
+ * @category number transformations
  * @since 1.0.0
  */
-export const NumberFromString = /*#__PURE__*/transformOrFail($String, $Number, {
+export const parseNumber = self => transformOrFail(self, Number$, {
+  strict: false,
   decode: (s, _, ast) => ParseResult.fromOption(number_.parse(s), () => new ParseResult.Type(ast, s)),
   encode: n => ParseResult.succeed(String(n))
-}).annotations({
-  identifier: "NumberFromString"
 });
+/**
+ * This schema transforms a `string` into a `number` by parsing the string using the `parse` function of the `effect/Number` module.
+ *
+ * It returns an error if the value can't be converted (for example when non-numeric characters are provided).
+ *
+ * The following special string values are supported: "NaN", "Infinity", "-Infinity".
+ *
+ * @category number constructors
+ * @since 1.0.0
+ */
+export class NumberFromString extends parseNumber(String$).annotations({
+  identifier: "NumberFromString"
+}) {
+  static annotations = super.annotations;
+}
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const Finite = /*#__PURE__*/$Number.pipe( /*#__PURE__*/finite({
+export class Finite extends Number$.pipe(finite({
   identifier: "Finite",
   title: "Finite"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const Int = /*#__PURE__*/$Number.pipe( /*#__PURE__*/int({
+export class Int extends Number$.pipe(int({
   identifier: "Int",
   title: "Int"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const NonNaN = /*#__PURE__*/$Number.pipe( /*#__PURE__*/nonNaN({
+export class NonNaN extends Number$.pipe(nonNaN({
   identifier: "NonNaN",
   title: "NonNaN"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const Positive = /*#__PURE__*/$Number.pipe( /*#__PURE__*/positive({
+export class Positive extends Number$.pipe(positive({
   identifier: "Positive",
   title: "Positive"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const Negative = /*#__PURE__*/$Number.pipe( /*#__PURE__*/negative({
+export class Negative extends Number$.pipe(negative({
   identifier: "Negative",
   title: "Negative"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const NonPositive = /*#__PURE__*/$Number.pipe( /*#__PURE__*/nonPositive({
+export class NonPositive extends Number$.pipe(nonPositive({
   identifier: "NonPositive",
   title: "NonPositive"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const NonNegative = /*#__PURE__*/$Number.pipe( /*#__PURE__*/nonNegative({
+export class NonNegative extends Number$.pipe(nonNegative({
   identifier: "NonNegative",
   title: "NonNegative"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category type id
  * @since 1.0.0
@@ -2072,7 +2238,7 @@ export const JsonNumberTypeId = /*#__PURE__*/Symbol.for("@effect/schema/TypeId/J
  * @category number constructors
  * @since 1.0.0
  */
-export const JsonNumber = /*#__PURE__*/$Number.pipe( /*#__PURE__*/filter(n => !Number.isNaN(n) && Number.isFinite(n), {
+export class JsonNumber extends Number$.pipe(filter(n => !Number.isNaN(n) && Number.isFinite(n), {
   typeId: JsonNumberTypeId,
   identifier: "JsonNumber",
   title: "JSON-compatible number",
@@ -2080,22 +2246,29 @@ export const JsonNumber = /*#__PURE__*/$Number.pipe( /*#__PURE__*/filter(n => !N
   jsonSchema: {
     type: "number"
   }
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * @category boolean transformations
  * @since 1.0.0
  */
-export const Not = /*#__PURE__*/transform($Boolean, $Boolean, {
+export class Not extends transform(Boolean$, Boolean$, {
   decode: boolean_.not,
   encode: boolean_.not
-});
-const $Symbol = /*#__PURE__*/transform($String, SymbolFromSelf, {
+}) {
+  static annotations = super.annotations;
+}
+/** @ignore */
+class Symbol$ extends transform(String$, SymbolFromSelf, {
   strict: false,
   decode: s => Symbol.for(s),
   encode: sym => sym.description
 }).annotations({
   identifier: "symbol"
-});
+}) {
+  static annotations = super.annotations;
+}
 export {
 /**
  * This schema transforms a `string` into a `symbol`.
@@ -2103,7 +2276,7 @@ export {
  * @category symbol transformations
  * @since 1.0.0
  */
-$Symbol as Symbol };
+Symbol$ as Symbol };
 /**
  * @category type id
  * @since 1.0.0
@@ -2234,12 +2407,15 @@ export const clampBigInt = (minimum, maximum) => self => transform(self, self.pi
   }),
   encode: identity
 });
-const bigint = /*#__PURE__*/transformOrFail($String, BigIntFromSelf, {
+/** @ignore */
+class BigInt$ extends transformOrFail(String$, BigIntFromSelf, {
   decode: (s, _, ast) => ParseResult.fromOption(bigInt_.fromString(s), () => new ParseResult.Type(ast, s)),
   encode: n => ParseResult.succeed(String(n))
 }).annotations({
   identifier: "bigint"
-});
+}) {
+  static annotations = super.annotations;
+}
 export {
 /**
  * This schema transforms a `string` into a `bigint` by parsing the string using the `BigInt` function.
@@ -2249,7 +2425,7 @@ export {
  * @category bigint transformations
  * @since 1.0.0
  */
-bigint as BigInt };
+BigInt$ as BigInt };
 /**
  * @category bigint constructors
  * @since 1.0.0
@@ -2262,7 +2438,7 @@ export const PositiveBigIntFromSelf = /*#__PURE__*/BigIntFromSelf.pipe( /*#__PUR
  * @category bigint constructors
  * @since 1.0.0
  */
-export const PositiveBigInt = /*#__PURE__*/bigint.pipe( /*#__PURE__*/positiveBigInt({
+export const PositiveBigInt = /*#__PURE__*/BigInt$.pipe( /*#__PURE__*/positiveBigInt({
   identifier: "PositiveBigint",
   title: "PositiveBigint"
 }));
@@ -2278,7 +2454,7 @@ export const NegativeBigIntFromSelf = /*#__PURE__*/BigIntFromSelf.pipe( /*#__PUR
  * @category bigint constructors
  * @since 1.0.0
  */
-export const NegativeBigInt = /*#__PURE__*/bigint.pipe( /*#__PURE__*/negativeBigInt({
+export const NegativeBigInt = /*#__PURE__*/BigInt$.pipe( /*#__PURE__*/negativeBigInt({
   identifier: "NegativeBigint",
   title: "NegativeBigint"
 }));
@@ -2294,7 +2470,7 @@ export const NonPositiveBigIntFromSelf = /*#__PURE__*/BigIntFromSelf.pipe( /*#__
  * @category bigint constructors
  * @since 1.0.0
  */
-export const NonPositiveBigInt = /*#__PURE__*/bigint.pipe( /*#__PURE__*/nonPositiveBigInt({
+export const NonPositiveBigInt = /*#__PURE__*/BigInt$.pipe( /*#__PURE__*/nonPositiveBigInt({
   identifier: "NonPositiveBigint",
   title: "NonPositiveBigint"
 }));
@@ -2310,7 +2486,7 @@ export const NonNegativeBigIntFromSelf = /*#__PURE__*/BigIntFromSelf.pipe( /*#__
  * @category bigint constructors
  * @since 1.0.0
  */
-export const NonNegativeBigInt = /*#__PURE__*/bigint.pipe( /*#__PURE__*/nonNegativeBigInt({
+export const NonNegativeBigInt = /*#__PURE__*/BigInt$.pipe( /*#__PURE__*/nonNegativeBigInt({
   identifier: "NonNegativeBigint",
   title: "NonNegativeBigint"
 }));
@@ -2322,44 +2498,52 @@ export const NonNegativeBigInt = /*#__PURE__*/bigint.pipe( /*#__PURE__*/nonNegat
  * @category bigint transformations
  * @since 1.0.0
  */
-export const BigIntFromNumber = /*#__PURE__*/transformOrFail($Number, BigIntFromSelf, {
+export class BigIntFromNumber extends transformOrFail(Number$, BigIntFromSelf, {
   decode: (n, _, ast) => ParseResult.fromOption(bigInt_.fromNumber(n), () => new ParseResult.Type(ast, n)),
   encode: (b, _, ast) => ParseResult.fromOption(bigInt_.toNumber(b), () => new ParseResult.Type(ast, b))
 }).annotations({
   identifier: "BigintFromNumber"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * @category Secret constructors
  * @since 1.0.0
  */
-export const SecretFromSelf = /*#__PURE__*/declare(secret_.isSecret, {
+export class SecretFromSelf extends declare(secret_.isSecret, {
   identifier: "SecretFromSelf",
   pretty: () => secret => String(secret),
   arbitrary: () => fc => fc.string().map(_ => secret_.fromString(_))
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * A schema that transforms a `string` into a `Secret`.
  *
  * @category Secret transformations
  * @since 1.0.0
  */
-export const Secret = /*#__PURE__*/transform($String, SecretFromSelf, {
+export class Secret extends transform(String$, SecretFromSelf, {
   strict: false,
   decode: str => secret_.fromString(str),
   encode: secret => secret_.value(secret)
 }).annotations({
   identifier: "Secret"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * @category Duration constructors
  * @since 1.0.0
  */
-export const DurationFromSelf = /*#__PURE__*/declare(duration_.isDuration, {
+export class DurationFromSelf extends declare(duration_.isDuration, {
   identifier: "DurationFromSelf",
   pretty: () => String,
   arbitrary: () => fc => fc.oneof(fc.constant(duration_.infinity), fc.bigUint().map(_ => duration_.nanos(_)), fc.bigUint().map(_ => duration_.micros(_)), fc.maxSafeNat().map(_ => duration_.millis(_)), fc.maxSafeNat().map(_ => duration_.seconds(_)), fc.maxSafeNat().map(_ => duration_.minutes(_)), fc.maxSafeNat().map(_ => duration_.hours(_)), fc.maxSafeNat().map(_ => duration_.days(_)), fc.maxSafeNat().map(_ => duration_.weeks(_))),
   equivalence: () => duration_.Equivalence
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * A schema that transforms a `bigint` tuple into a `Duration`.
  * Treats the value as the number of nanoseconds.
@@ -2367,7 +2551,7 @@ export const DurationFromSelf = /*#__PURE__*/declare(duration_.isDuration, {
  * @category Duration transformations
  * @since 1.0.0
  */
-export const DurationFromNanos = /*#__PURE__*/transformOrFail(BigIntFromSelf, DurationFromSelf, {
+export class DurationFromNanos extends transformOrFail(BigIntFromSelf, DurationFromSelf, {
   decode: nanos => ParseResult.succeed(duration_.nanos(nanos)),
   encode: (duration, _, ast) => option_.match(duration_.toNanos(duration), {
     onNone: () => ParseResult.fail(new ParseResult.Type(ast, duration)),
@@ -2375,7 +2559,9 @@ export const DurationFromNanos = /*#__PURE__*/transformOrFail(BigIntFromSelf, Du
   })
 }).annotations({
   identifier: "DurationFromNanos"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * A schema that transforms a `number` tuple into a `Duration`.
  * Treats the value as the number of milliseconds.
@@ -2383,12 +2569,14 @@ export const DurationFromNanos = /*#__PURE__*/transformOrFail(BigIntFromSelf, Du
  * @category Duration transformations
  * @since 1.0.0
  */
-export const DurationFromMillis = /*#__PURE__*/transform($Number, DurationFromSelf, {
+export class DurationFromMillis extends transform(Number$, DurationFromSelf, {
   decode: ms => duration_.millis(ms),
   encode: n => duration_.toMillis(n)
 }).annotations({
   identifier: "DurationFromMillis"
-});
+}) {
+  static annotations = super.annotations;
+}
 const hrTime = /*#__PURE__*/Tuple( /*#__PURE__*/NonNegative.pipe( /*#__PURE__*/finite({
   [AST.TitleAnnotationId]: "seconds",
   [AST.DescriptionAnnotationId]: "seconds"
@@ -2402,12 +2590,14 @@ const hrTime = /*#__PURE__*/Tuple( /*#__PURE__*/NonNegative.pipe( /*#__PURE__*/f
  * @category Duration transformations
  * @since 1.0.0
  */
-export const Duration = /*#__PURE__*/transform(hrTime, DurationFromSelf, {
+export class Duration extends transform(hrTime, DurationFromSelf, {
   decode: ([seconds, nanos]) => duration_.nanos(BigInt(seconds) * BigInt(1e9) + BigInt(nanos)),
   encode: duration => duration_.toHrTime(duration)
 }).annotations({
   identifier: "Duration"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * Clamps a `Duration` between a minimum and a maximum value.
  *
@@ -2531,7 +2721,7 @@ export const Uint8ArrayFromSelf = /*#__PURE__*/declare(Predicate.isUint8Array, {
   arbitrary: () => fc => fc.uint8Array(),
   equivalence: () => array_.getEquivalence(Equal.equals)
 });
-const $Uint8Array = /*#__PURE__*/transform($Array($Number.pipe(between(0, 255, {
+const Uint8Array$ = /*#__PURE__*/transform(Array$(Number$.pipe(between(0, 255, {
   title: "8-bit unsigned integer",
   description: "a 8-bit unsigned integer"
 }))).annotations({
@@ -2549,9 +2739,8 @@ export {
  * @category Uint8Array transformations
  * @since 1.0.0
  */
-$Uint8Array as Uint8Array };
-const makeEncodingTransformation = (id, decode, encode) => transformOrFail($String, Uint8ArrayFromSelf, {
-  strict: false,
+Uint8Array$ as Uint8Array };
+const makeEncodingTransformation = (id, decode, encode) => transformOrFail(String$, Uint8ArrayFromSelf, {
   decode: (s, _, ast) => either_.mapLeft(decode(s), decodeException => new ParseResult.Type(ast, s, decodeException.message)),
   encode: u => ParseResult.succeed(encode(u))
 }).annotations({
@@ -2676,7 +2865,7 @@ export const validDate = annotations => self => self.pipe(filter(a => !Number.is
  * @category Date constructors
  * @since 1.0.0
  */
-export const DateFromSelf = /*#__PURE__*/declare(Predicate.isDate, {
+export class DateFromSelf extends declare(Predicate.isDate, {
   identifier: "DateFromSelf",
   description: "a potentially invalid Date instance",
   pretty: () => date => `new Date(${JSON.stringify(date)})`,
@@ -2684,32 +2873,41 @@ export const DateFromSelf = /*#__PURE__*/declare(Predicate.isDate, {
     noInvalidDate: false
   }),
   equivalence: () => Equivalence.Date
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * Represents a schema for handling only **valid** dates. For example, `new Date("Invalid Date")` is rejected, even though it is an instance of `Date`.
  *
  * @category Date constructors
  * @since 1.0.0
  */
-export const ValidDateFromSelf = /*#__PURE__*/DateFromSelf.pipe( /*#__PURE__*/validDate({
+export class ValidDateFromSelf extends DateFromSelf.pipe(validDate({
   identifier: "ValidDateFromSelf",
   description: "a valid Date instance"
-}));
+})) {
+  static annotations = super.annotations;
+}
 /**
  * Represents a schema that converts a `string` into a (potentially invalid) `Date` (e.g., `new Date("Invalid Date")` is not rejected).
  *
  * @category Date transformations
  * @since 1.0.0
  */
-export const DateFromString = /*#__PURE__*/transform($String, DateFromSelf, {
+export class DateFromString extends transform(String$, DateFromSelf, {
   decode: s => new Date(s),
-  encode: n => n.toISOString()
+  encode: d => d.toISOString()
 }).annotations({
   identifier: "DateFromString"
-});
-const $Date = /*#__PURE__*/DateFromString.pipe( /*#__PURE__*/validDate({
+}) {
+  static annotations = super.annotations;
+}
+/** @ignore */
+class Date$ extends DateFromString.pipe(validDate({
   identifier: "Date"
-}));
+})) {
+  static annotations = super.annotations;
+}
 export {
 /**
  * A schema that transforms a `string` into a **valid** `Date`, ensuring that invalid dates, such as `new Date("Invalid Date")`, are rejected.
@@ -2717,7 +2915,22 @@ export {
  * @category Date transformations
  * @since 1.0.0
  */
-$Date as Date };
+Date$ as Date };
+/**
+ * Represents a schema that converts a `number` into a (potentially invalid) `Date` (e.g., `NaN`, `Infinity` and `-Infinity` are not rejected).
+ * Encoding will return `NaN` for invalid dates.
+ *
+ * @category Date transformations
+ * @since 1.0.0
+ */
+export class DateFromNumber extends transform(Number$, DateFromSelf, {
+  decode: n => new Date(n),
+  encode: d => d.getTime()
+}).annotations({
+  identifier: "DateFromNumber"
+}) {
+  static annotations = super.annotations;
+}
 const OptionNoneEncoded = /*#__PURE__*/Struct({
   _tag: Literal("None")
 }).annotations({
@@ -2939,8 +3152,8 @@ const readonlyMapEquivalence = (key, value) => {
 };
 const readonlyMapParse = decodeUnknown => (u, options, ast) => Predicate.isMap(u) ? ParseResult.map(decodeUnknown(Array.from(u.entries()), options), as => new Map(as)) : ParseResult.fail(new ParseResult.Type(ast, u));
 const mapFromSelf_ = (key, value, description) => declare([key, value], {
-  decode: (Key, Value) => readonlyMapParse(ParseResult.decodeUnknown($Array(Tuple(Key, Value)))),
-  encode: (Key, Value) => readonlyMapParse(ParseResult.encodeUnknown($Array(Tuple(Key, Value))))
+  decode: (Key, Value) => readonlyMapParse(ParseResult.decodeUnknown(Array$(Tuple(Key, Value)))),
+  encode: (Key, Value) => readonlyMapParse(ParseResult.encodeUnknown(Array$(Tuple(Key, Value))))
 }, {
   description,
   pretty: readonlyMapPretty,
@@ -2973,7 +3186,7 @@ export const ReadonlyMap = ({
 }) => {
   const key_ = asSchema(key);
   const value_ = asSchema(value);
-  return transform($Array(Tuple(key_, value_)), ReadonlyMapFromSelf({
+  return transform(Array$(Tuple(key_, value_)), ReadonlyMapFromSelf({
     key: typeSchema(key_),
     value: typeSchema(value_)
   }), {
@@ -2987,7 +3200,7 @@ const map = ({
 }) => {
   const key_ = asSchema(key);
   const value_ = asSchema(value);
-  return transform($Array(Tuple(key_, value_)), MapFromSelf({
+  return transform(Array$(Tuple(key_, value_)), MapFromSelf({
     key: typeSchema(key_),
     value: typeSchema(value_)
   }), {
@@ -3009,8 +3222,8 @@ const readonlySetEquivalence = item => {
 };
 const readonlySetParse = decodeUnknown => (u, options, ast) => Predicate.isSet(u) ? ParseResult.map(decodeUnknown(Array.from(u.values()), options), as => new Set(as)) : ParseResult.fail(new ParseResult.Type(ast, u));
 const setFromSelf_ = (value, description) => declare([value], {
-  decode: item => readonlySetParse(ParseResult.decodeUnknown($Array(item))),
-  encode: item => readonlySetParse(ParseResult.encodeUnknown($Array(item)))
+  decode: item => readonlySetParse(ParseResult.decodeUnknown(Array$(item))),
+  encode: item => readonlySetParse(ParseResult.encodeUnknown(Array$(item)))
 }, {
   description,
   pretty: readonlySetPretty,
@@ -3033,14 +3246,14 @@ export const SetFromSelf = value => setFromSelf_(value, `Set<${format(value)}>`)
  */
 export const ReadonlySet = value => {
   const value_ = asSchema(value);
-  return transform($Array(value_), ReadonlySetFromSelf(typeSchema(value_)), {
+  return transform(Array$(value_), ReadonlySetFromSelf(typeSchema(value_)), {
     decode: as => new Set(as),
     encode: set => Array.from(set)
   });
 };
 const set = value => {
   const value_ = asSchema(value);
-  return transform($Array(value_), SetFromSelf(typeSchema(value_)), {
+  return transform(Array$(value_), SetFromSelf(typeSchema(value_)), {
     decode: as => new Set(as),
     encode: set => Array.from(set)
   });
@@ -3057,17 +3270,19 @@ const bigDecimalArbitrary = () => fc => fc.tuple(fc.bigInt(), fc.integer()).map(
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export const BigDecimalFromSelf = /*#__PURE__*/declare(bigDecimal_.isBigDecimal, {
+export class BigDecimalFromSelf extends declare(bigDecimal_.isBigDecimal, {
   identifier: "BigDecimalFromSelf",
   pretty: bigDecimalPretty,
   arbitrary: bigDecimalArbitrary,
   equivalence: () => bigDecimal_.Equivalence
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-export const BigDecimal = /*#__PURE__*/transformOrFail($String, BigDecimalFromSelf, {
+export class BigDecimal extends transformOrFail(String$, BigDecimalFromSelf, {
   decode: (num, _, ast) => bigDecimal_.fromString(num).pipe(option_.match({
     onNone: () => ParseResult.fail(new ParseResult.Type(ast, num)),
     onSome: val => ParseResult.succeed(bigDecimal_.normalize(val))
@@ -3075,7 +3290,9 @@ export const BigDecimal = /*#__PURE__*/transformOrFail($String, BigDecimalFromSe
   encode: val => ParseResult.succeed(bigDecimal_.format(bigDecimal_.normalize(val)))
 }).annotations({
   identifier: "BigDecimal"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * A schema that transforms a `number` into a `BigDecimal`.
  * When encoding, this Schema will produce incorrect results if the BigDecimal exceeds the 64-bit range of a number.
@@ -3083,12 +3300,14 @@ export const BigDecimal = /*#__PURE__*/transformOrFail($String, BigDecimalFromSe
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-export const BigDecimalFromNumber = /*#__PURE__*/transformOrFail($Number, BigDecimalFromSelf, {
+export class BigDecimalFromNumber extends transformOrFail(Number$, BigDecimalFromSelf, {
   decode: num => ParseResult.succeed(bigDecimal_.fromNumber(num)),
   encode: val => ParseResult.succeed(bigDecimal_.unsafeToNumber(val))
 }).annotations({
   identifier: "BigDecimalFromNumber"
-});
+}) {
+  static annotations = super.annotations;
+}
 /**
  * @category type id
  * @since 1.0.0
@@ -3311,8 +3530,8 @@ const chunkParse = decodeUnknown => (u, options, ast) => chunk_.isChunk(u) ? chu
  */
 export const ChunkFromSelf = value => {
   return declare([value], {
-    decode: item => chunkParse(ParseResult.decodeUnknown($Array(item))),
-    encode: item => chunkParse(ParseResult.encodeUnknown($Array(item)))
+    decode: item => chunkParse(ParseResult.decodeUnknown(Array$(item))),
+    encode: item => chunkParse(ParseResult.encodeUnknown(Array$(item)))
   }, {
     description: `Chunk<${format(value)}>`,
     pretty: chunkPretty,
@@ -3326,7 +3545,7 @@ export const ChunkFromSelf = value => {
  */
 export const Chunk = value => {
   const value_ = asSchema(value);
-  return transform($Array(value_), ChunkFromSelf(typeSchema(value_)), {
+  return transform(Array$(value_), ChunkFromSelf(typeSchema(value_)), {
     decode: as => as.length === 0 ? chunk_.empty() : chunk_.fromIterable(as),
     encode: chunk_.toReadonlyArray
   });
@@ -3339,16 +3558,14 @@ const dataParse = decodeUnknown => (u, options, ast) => Equal.isEqual(u) ? Parse
  * @category Data transformations
  * @since 1.0.0
  */
-export const DataFromSelf = item => {
-  return declare([item], {
-    decode: item => dataParse(ParseResult.decodeUnknown(item)),
-    encode: item => dataParse(ParseResult.encodeUnknown(item))
-  }, {
-    description: `Data<${format(item)}>`,
-    pretty: dataPretty,
-    arbitrary: dataArbitrary
-  });
-};
+export const DataFromSelf = item => declare([item], {
+  decode: item => dataParse(ParseResult.decodeUnknown(item)),
+  encode: item => dataParse(ParseResult.encodeUnknown(item))
+}, {
+  description: `Data<${format(item)}>`,
+  pretty: dataPretty,
+  arbitrary: dataArbitrary
+});
 /**
  * @category Data transformations
  * @since 1.0.0
@@ -3358,51 +3575,67 @@ export const Data = item => transform(item, DataFromSelf(typeSchema(item)), {
   decode: toData,
   encode: a => Array.isArray(a) ? Array.from(a) : Object.assign({}, a)
 });
+const isField = u => isSchema(u) || isPropertySignature(u);
+const isFields = fields => util_.ownKeys(fields).every(key => isField(fields[key]));
+const getFields = hasFields => "fields" in hasFields ? hasFields.fields : getFields(hasFields.from);
+const getSchemaFromFieldsOr = fieldsOr => isFields(fieldsOr) ? Struct(fieldsOr) : isSchema(fieldsOr) ? fieldsOr : Struct(getFields(fieldsOr));
+const getFieldsFromFieldsOr = fieldsOr => isFields(fieldsOr) ? fieldsOr : getFields(fieldsOr);
 /**
  * @category classes
  * @since 1.0.0
  */
-export const Class = identifier => (fields, annotations) => makeClass({
+export const Class = identifier => (fieldsOr, annotations) => makeClass({
   kind: "Class",
   identifier,
-  fields,
+  schema: getSchemaFromFieldsOr(fieldsOr),
+  fields: getFieldsFromFieldsOr(fieldsOr),
   Base: data_.Class,
   annotations
 });
+/** @internal */
+export const getClassTag = tag => withConstructorDefault(propertySignature(Literal(tag)), () => tag);
 /**
  * @category classes
  * @since 1.0.0
  */
-export const TaggedClass = identifier => (tag, fields, annotations) => makeClass({
-  kind: "TaggedClass",
-  identifier: identifier ?? tag,
-  fields: extendFields({
-    _tag: Literal(tag)
-  }, fields),
-  Base: data_.Class,
-  tag: {
-    _tag: tag
-  },
-  annotations
-});
+export const TaggedClass = identifier => (tag, fieldsOr, annotations) => {
+  const fields = getFieldsFromFieldsOr(fieldsOr);
+  const schema = getSchemaFromFieldsOr(fieldsOr);
+  const newFields = {
+    _tag: getClassTag(tag)
+  };
+  const taggedFields = extendFields(newFields, fields);
+  return class TaggedClass extends makeClass({
+    kind: "TaggedClass",
+    identifier: identifier ?? tag,
+    schema: extend(schema, Struct(newFields)),
+    fields: taggedFields,
+    Base: data_.Class,
+    annotations
+  }) {
+    static _tag = tag;
+  };
+};
 /**
  * @category classes
  * @since 1.0.0
  */
-export const TaggedError = identifier => (tag, fields, annotations) => {
+export const TaggedError = identifier => (tag, fieldsOr, annotations) => {
   class Base extends data_.Error {}
   ;
   Base.prototype.name = tag;
-  return makeClass({
+  const fields = getFieldsFromFieldsOr(fieldsOr);
+  const schema = getSchemaFromFieldsOr(fieldsOr);
+  const newFields = {
+    _tag: getClassTag(tag)
+  };
+  const taggedFields = extendFields(newFields, fields);
+  return class TaggedErrorClass extends makeClass({
     kind: "TaggedError",
     identifier: identifier ?? tag,
-    fields: extendFields({
-      _tag: Literal(tag)
-    }, fields),
+    schema: extend(schema, Struct(newFields)),
+    fields: taggedFields,
     Base,
-    tag: {
-      _tag: tag
-    },
     annotations,
     toStringOverride(self) {
       if (Predicate.isString(self.message) && self.message.length > 0) {
@@ -3413,7 +3646,9 @@ export const TaggedError = identifier => (tag, fields, annotations) => {
         return message;
       }
     }
-  });
+  }) {
+    static _tag = tag;
+  };
 };
 /**
  * @category classes
@@ -3431,18 +3666,19 @@ export const TaggedRequest = identifier => (tag, Failure, Success, fields, annot
       };
     }
   }
-  return makeClass({
+  const taggedFields = extendFields({
+    _tag: getClassTag(tag)
+  }, fields);
+  return class TaggedRequestClass extends makeClass({
     kind: "TaggedRequest",
     identifier: identifier ?? tag,
-    fields: extendFields({
-      _tag: Literal(tag)
-    }, fields),
+    schema: Struct(taggedFields),
+    fields: taggedFields,
     Base: SerializableRequest,
-    tag: {
-      _tag: tag
-    },
     annotations
-  });
+  }) {
+    static _tag = tag;
+  };
 };
 const extendFields = (a, b) => {
   const out = {
@@ -3456,34 +3692,37 @@ const extendFields = (a, b) => {
   }
   return out;
 };
+// does not overwrite existing title annotation
+const orElseTitleAnnotation = (schema, title) => {
+  const annotation = AST.getTitleAnnotation(schema.ast);
+  if (option_.isNone(annotation)) {
+    return schema.annotations({
+      title
+    });
+  }
+  return schema;
+};
 const makeClass = ({
   Base,
   annotations,
   fields,
-  fromSchema,
   identifier,
   kind,
-  tag,
+  schema,
   toStringOverride
 }) => {
-  const classSymbol = Symbol.for(`@effect/schema/${kind}/${identifier}`);
-  const schema = fromSchema ?? Struct(fields);
-  const from = option_.match(AST.getTitleAnnotation(schema.ast), {
-    onNone: () => schema.annotations({
-      title: `${identifier} (Encoded side)`
-    }),
-    onSome: () => schema
-  });
-  return class extends Base {
+  return class Class extends Base {
     constructor(props = {}, disableValidation = false) {
-      if (tag !== undefined) {
-        props = {
-          ...props,
-          ...tag
-        };
+      props = {
+        ...props
+      };
+      if (kind !== "Class") {
+        delete props["_tag"];
       }
+      props = lazilyMergeDefaults(fields, props);
       if (disableValidation !== true) {
-        props = ParseResult.validateSync(schema)(props);
+        // TODO: move once we adopt required identifier
+        props = ParseResult.validateSync(Class.validateSchema)(props);
       }
       super(props, true);
     }
@@ -3491,14 +3730,22 @@ const makeClass = ({
     // Schema interface
     // ----------------
     static [TypeId] = variance;
+    static get validateSchema() {
+      return orElseTitleAnnotation(schema, `${this.identifier} (Constructor)`);
+    }
+    static get encodedSide() {
+      return orElseTitleAnnotation(schema, `${this.identifier} (Encoded side)`);
+    }
     static get ast() {
-      const toSchema = typeSchema(schema);
-      const guard = ParseResult.is(toSchema);
-      const fallbackInstanceOf = u => Predicate.hasProperty(u, classSymbol) && guard(u);
-      const encode = ParseResult.encodeUnknown(toSchema);
-      const declaration = declare([toSchema], {
+      // TODO: can we cache this?
+      const identifier = this.identifier;
+      // TODO: move once we adopt required identifier
+      const typeSide = orElseTitleAnnotation(typeSchema(schema), `${identifier} (Type side)`);
+      const guard = ParseResult.is(typeSide);
+      const fallbackInstanceOf = u => Predicate.hasProperty(u, this.classSymbol) && guard(u);
+      const declaration = declare([typeSide], {
         decode: () => (input, _, ast) => input instanceof this || fallbackInstanceOf(input) ? ParseResult.succeed(input) : ParseResult.fail(new ParseResult.Type(ast, input)),
-        encode: () => (input, options) => input instanceof this ? ParseResult.succeed(input) : ParseResult.map(encode(input, options), props => new this(props, true))
+        encode: () => (input, options) => input instanceof this ? ParseResult.succeed(input) : ParseResult.map(ParseResult.encodeUnknown(typeSide)(input, options), props => new this(props, true))
       }, {
         identifier,
         title: identifier,
@@ -3506,10 +3753,10 @@ const makeClass = ({
         pretty: pretty => self => `${identifier}(${pretty(self)})`,
         arbitrary: arb => fc => arb(fc).map(props => new this(props)),
         equivalence: identity,
-        [AST.SurrogateAnnotationId]: toSchema.ast,
+        [AST.SurrogateAnnotationId]: typeSide.ast,
         ...annotations
       });
-      const transformation = transform(from, declaration, {
+      const transformation = transform(this.encodedSide, declaration, {
         decode: input => new this(input, true),
         encode: identity
       }).annotations({
@@ -3524,7 +3771,7 @@ const makeClass = ({
       return make(this.ast).annotations(annotations);
     }
     static toString() {
-      return `(${String(from)} <-> ${identifier})`;
+      return `(${String(this.encodedSide)} <-> ${this.identifier})`;
     }
     // ----------------
     // Class interface
@@ -3532,16 +3779,18 @@ const makeClass = ({
     static fields = {
       ...fields
     };
-    static identifier = identifier;
+    static customIdentifier;
     static extend(identifier) {
-      return (newFields, annotations) => {
+      return (newFieldsOr, annotations) => {
+        const newFields = getFieldsFromFieldsOr(newFieldsOr);
+        const newSchema = getSchemaFromFieldsOr(newFieldsOr);
         const extendedFields = extendFields(fields, newFields);
         return makeClass({
           kind,
           identifier,
+          schema: extend(schema, newSchema),
           fields: extendedFields,
           Base: this,
-          tag,
           annotations
         });
       };
@@ -3552,10 +3801,9 @@ const makeClass = ({
         return makeClass({
           kind,
           identifier,
-          fromSchema: transformOrFail(schema, typeSchema(Struct(transformedFields)), options),
+          schema: transformOrFail(schema, typeSchema(Struct(transformedFields)), options),
           fields: transformedFields,
           Base: this,
-          tag,
           annotations
         });
       };
@@ -3566,10 +3814,9 @@ const makeClass = ({
         return makeClass({
           kind,
           identifier,
-          fromSchema: transformOrFail(encodedSchema(schema), Struct(transformedFields), options),
+          schema: transformOrFail(encodedSchema(schema), Struct(transformedFields), options),
           fields: transformedFields,
           Base: this,
-          tag,
           annotations
         });
       };
@@ -3577,8 +3824,11 @@ const makeClass = ({
     // ----------------
     // other
     // ----------------
-    get [classSymbol]() {
-      return classSymbol;
+    static get identifier() {
+      return identifier || this.customIdentifier || this.name;
+    }
+    static get classSymbol() {
+      return Symbol.for(`@effect/schema/${kind}/${this.identifier}`);
     }
     toString() {
       if (toStringOverride !== undefined) {
@@ -3587,7 +3837,7 @@ const makeClass = ({
           return out;
         }
       }
-      return `${identifier}({ ${util_.ownKeys(fields).map(p => `${util_.formatPropertyKey(p)}: ${util_.formatUnknown(this[p])}`).join(", ")} })`;
+      return `${this.identifier}({ ${util_.ownKeys(fields).map(p => `${util_.formatPropertyKey(p)}: ${util_.formatUnknown(this[p])}`).join(", ")} })`;
     }
   };
 };
@@ -3649,11 +3899,13 @@ const fiberIdPretty = fiberId => {
  * @category FiberId constructors
  * @since 1.0.0
  */
-export const FiberIdFromSelf = /*#__PURE__*/declare(fiberId_.isFiberId, {
+export class FiberIdFromSelf extends declare(fiberId_.isFiberId, {
   identifier: "FiberIdFromSelf",
   pretty: () => fiberIdPretty,
   arbitrary: () => fiberIdArbitrary
-});
+}) {
+  static annotations = super.annotations;
+}
 const fiberIdDecode = input => {
   switch (input._tag) {
     case "None":
@@ -3688,12 +3940,14 @@ const fiberIdEncode = input => {
  * @category FiberId transformations
  * @since 1.0.0
  */
-export const FiberId = /*#__PURE__*/transform(FiberIdEncoded, FiberIdFromSelf, {
+export class FiberId extends transform(FiberIdEncoded, FiberIdFromSelf, {
   decode: fiberIdDecode,
   encode: fiberIdEncode
 }).annotations({
   identifier: "FiberId"
-});
+}) {
+  static annotations = super.annotations;
+}
 const causeDieEncoded = defect => Struct({
   _tag: Literal("Die"),
   defect
@@ -3983,8 +4237,8 @@ const hashSetParse = decodeUnknown => (u, options, ast) => hashSet_.isHashSet(u)
  */
 export const HashSetFromSelf = value => {
   return declare([value], {
-    decode: item => hashSetParse(ParseResult.decodeUnknown($Array(item))),
-    encode: item => hashSetParse(ParseResult.encodeUnknown($Array(item)))
+    decode: item => hashSetParse(ParseResult.decodeUnknown(Array$(item))),
+    encode: item => hashSetParse(ParseResult.encodeUnknown(Array$(item)))
   }, {
     description: `HashSet<${format(value)}>`,
     pretty: hashSetPretty,
@@ -3998,7 +4252,7 @@ export const HashSetFromSelf = value => {
  */
 export const HashSet = value => {
   const value_ = asSchema(value);
-  return transform($Array(value_), HashSetFromSelf(typeSchema(value_)), {
+  return transform(Array$(value_), HashSetFromSelf(typeSchema(value_)), {
     decode: as => hashSet_.fromIterable(as),
     encode: set => Array.from(set)
   });
@@ -4019,8 +4273,8 @@ export const HashMapFromSelf = ({
   value
 }) => {
   return declare([key, value], {
-    decode: (key, value) => hashMapParse(ParseResult.decodeUnknown($Array(Tuple(key, value)))),
-    encode: (key, value) => hashMapParse(ParseResult.encodeUnknown($Array(Tuple(key, value))))
+    decode: (key, value) => hashMapParse(ParseResult.decodeUnknown(Array$(Tuple(key, value)))),
+    encode: (key, value) => hashMapParse(ParseResult.encodeUnknown(Array$(Tuple(key, value))))
   }, {
     description: `HashMap<${format(key)}, ${format(value)}>`,
     pretty: hashMapPretty,
@@ -4038,7 +4292,7 @@ export const HashMap = ({
 }) => {
   const key_ = asSchema(key);
   const value_ = asSchema(value);
-  return transform($Array(Tuple(key_, value_)), HashMapFromSelf({
+  return transform(Array$(Tuple(key_, value_)), HashMapFromSelf({
     key: typeSchema(key_),
     value: typeSchema(value_)
   }), {
@@ -4059,8 +4313,8 @@ const listParse = decodeUnknown => (u, options, ast) => list_.isList(u) ? ParseR
  */
 export const ListFromSelf = value => {
   return declare([value], {
-    decode: item => listParse(ParseResult.decodeUnknown($Array(item))),
-    encode: item => listParse(ParseResult.encodeUnknown($Array(item)))
+    decode: item => listParse(ParseResult.decodeUnknown(Array$(item))),
+    encode: item => listParse(ParseResult.encodeUnknown(Array$(item)))
   }, {
     description: `List<${format(value)}>`,
     pretty: listPretty,
@@ -4074,7 +4328,7 @@ export const ListFromSelf = value => {
  */
 export const List = value => {
   const value_ = asSchema(value);
-  return transform($Array(value_), ListFromSelf(typeSchema(value_)), {
+  return transform(Array$(value_), ListFromSelf(typeSchema(value_)), {
     decode: as => list_.fromIterable(as),
     encode: set => Array.from(set)
   });
@@ -4088,8 +4342,8 @@ const sortedSetParse = (decodeUnknown, ord) => (u, options, ast) => sortedSet_.i
  */
 export const SortedSetFromSelf = (value, ordA, ordI) => {
   return declare([value], {
-    decode: item => sortedSetParse(ParseResult.decodeUnknown($Array(item)), ordA),
-    encode: item => sortedSetParse(ParseResult.encodeUnknown($Array(item)), ordI)
+    decode: item => sortedSetParse(ParseResult.decodeUnknown(Array$(item)), ordA),
+    encode: item => sortedSetParse(ParseResult.encodeUnknown(Array$(item)), ordI)
   }, {
     description: `SortedSet<${format(value)}>`,
     pretty: sortedSetPretty,
@@ -4104,7 +4358,7 @@ export const SortedSetFromSelf = (value, ordA, ordI) => {
 export const SortedSet = (value, ordA) => {
   const value_ = asSchema(value);
   const to = typeSchema(value_);
-  return transform($Array(value_), SortedSetFromSelf(to, ordA, ordA), {
+  return transform(Array$(value_), SortedSetFromSelf(to, ordA, ordA), {
     decode: as => sortedSet_.fromIterable(as, ordA),
     encode: set => Array.from(sortedSet_.values(set))
   });
@@ -4117,10 +4371,12 @@ export const SortedSet = (value, ordA) => {
  * @category boolean constructors
  * @since 1.0.0
  */
-export const BooleanFromUnknown = /*#__PURE__*/transform(Unknown, $Boolean, {
+export class BooleanFromUnknown extends transform(Unknown, Boolean$, {
   decode: Predicate.isTruthy,
   encode: identity
 }).annotations({
   identifier: "BooleanFromUnknown"
-});
+}) {
+  static annotations = super.annotations;
+}
 //# sourceMappingURL=Schema.js.map
\ No newline at end of file
diff --git a/dist/esm/Schema.js.map b/dist/esm/Schema.js.map
index 3334e719b93f075ecc9a019331f4b3836d4f7c73..d0af5b142ace83b6afd8c766b0e8d25fb755c20d 100644
--- a/dist/esm/Schema.js.map
+++ b/dist/esm/Schema.js.map
@@ -1 +1 @@
-{"version":3,"file":"Schema.js","names":["array_","bigDecimal_","bigInt_","boolean_","brand_","cause_","chunk_","data_","duration_","Effect","either_","Encoding","Equal","Equivalence","exit_","fiberId_","dual","identity","hashMap_","hashSet_","list_","number_","option_","pipeArguments","Predicate","Request","secret_","sortedSet_","string_","arbitrary_","AST","equivalence_","errors_","filters_","serializable_","util_","ParseResult","pretty_","TreeFormatter","TypeId","Symbol","for","variance","_A","_","_I","_R","toASTAnnotations","annotations","out","custom","Object","getOwnPropertySymbols","sym","typeId","undefined","TypeAnnotationId","id","annotation","move","from","to","MessageAnnotationId","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","DocumentationAnnotationId","JSONSchemaAnnotationId","ArbitraryHookId","PrettyHookId","EquivalenceHookId","ConcurrencyAnnotationId","BatchingAnnotationId","ParseIssueTitleAnnotationId","SchemaImpl","ast","constructor","pipe","arguments","toString","String","asSchema","schema","hash","format","encodedSchema","make","encodedAST","typeSchema","typeAST","asserts","decodeOption","decodeSync","decodeUnknownOption","decodeUnknownSync","encodeOption","encodeSync","encodeUnknownOption","encodeUnknownSync","is","validateOption","validateSync","encodeUnknown","options","u","overrideOptions","mapError","parseError","encodeUnknownEither","mapLeft","encodeUnknownPromise","parser","runPromise","encode","encodeEither","encodePromise","decodeUnknown","decodeUnknownEither","decodeUnknownPromise","decode","decodeEither","decodePromise","validate","validateEither","validatePromise","isSchema","hasProperty","isObject","LiteralImpl","literals","isMembers","Union","mapMembers","literal","Literal","isNonEmptyReadonlyArray","Never","pickLiteral","_schema","UniqueSymbolFromSelf","symbol","UniqueSymbol","EnumsImpl","enums","Enums","keys","filter","key","map","TemplateLiteral","head","tail","types","getTemplateLiterals","span","flatMap","a","b","combineTemplateLiterals","isLiteral","spans","modifyNonEmptyLast","TemplateLiteralSpan","type","appendAll","_tag","Error","declareConstructor","typeParameters","Declaration","tp","declarePrimitive","input","succeed","fail","Type","declare","Array","isArray","BrandTypeId","fromBrand","self","Refinement","either","isLeft","some","left","v","message","join","none","InstanceOfTypeId","instanceOf","title","name","description","pretty","Undefined","undefinedKeyword","Void","voidKeyword","Null","null","neverKeyword","Unknown","unknownKeyword","Any","anyKeyword","$String","stringKeyword","$Number","numberKeyword","$Boolean","booleanKeyword","BigIntFromSelf","bigIntKeyword","SymbolFromSelf","symbolKeyword","$Object","objectKeyword","Boolean","Number","UnionImpl","members","m","NullOr","UndefinedOr","NullishOr","keyof","optionalElement","OptionalElementImpl","TupleTypeImpl","elements","rest","TupleType","Element","e","Tuple","args","slice","$ArrayImpl","value","$Array","NonEmptyArrayImpl","NonEmptyArray","formatToken","isOptional","PropertySignatureDeclaration","isReadonly","token","FromPropertySignature","fromKey","ToPropertySignature","formatPropertyKey","p","isString","JSON","stringify","PropertySignatureTransformation","PropertySignatureTypeId","propertySignatureAnnotations_","PropertySignatureImpl","_Key","_EncodedToken","_TypeToken","propertySignature","optionalToRequired","o","optionalToOptional","optional","isExact","exact","defaultValue","default","isNullable","nullable","asOption","as","match","onNone","onSome","OptionFromSelf","isNotNull","isNotUndefined","isPropertySignature","TypeLiteralImpl","fields","records","ownKeys","pss","length","transformations","i","field","toAnnotations","push","PropertySignature","issFrom","issTo","r","indexSignatures","propertySignatures","record","forEach","ps","IndexSignature","parameter","Transformation","TypeLiteral","TypeLiteralTransformation","iss","Struct","$RecordImpl","Record","pick","omit","pluck","getPropertyKeyIndexedAccess","orUndefined","transform","ak","makeBrandSchema","validateEither_","refined","unbranded","onLeft","error","formatErrorSync","onRight","setPrototypeOf","assign","getPrototypeOf","asBrandSchema","brand","brandAnnotation","getBrandAnnotation","brands","formatUnknown","BrandAnnotationId","partial","required","mutable","getExtendErrorMessage","x","y","path","getAPIErrorMessage","intersectTypeLiterals","isTypeLiteral","findIndex","extendAST","concat","intersectUnionMembers","xs","ys","isUnion","isTransformation","isTypeLiteralTransformation","transformation","propertySignatureTransformations","extend","that","compose","suspend","f","Suspend","predicate","isBoolean","transformOrFailImpl","transformOrFail","FinalTransformation","fromA","toI","transformLiteral","transformLiterals","pairs","attachPropertySignature","attached","isSymbol","identifier","examples","$default","documentation","jsonSchema","equivalence","concurrency","batching","parseIssueTitle","rename","mapping","TrimmedTypeId","trimmed","trim","MaxLengthTypeId","maxLength","MinLengthTypeId","minLength","PatternTypeId","pattern","regex","source","lastIndex","test","arbitrary","fc","stringMatching","StartsWithTypeId","startsWith","EndsWithTypeId","endsWith","IncludesTypeId","includes","searchString","LowercasedTypeId","lowercased","toLowerCase","Lowercased","UppercasedTypeId","uppercased","toUpperCase","Uppercased","LengthTypeId","Math","max","floor","min","Char","nonEmpty","Lowercase","s","Uppercase","Trimmed","Trim","split","separator","JsonString","parseJson","try","parse","reviver","catch","replacer","space","NonEmpty","UUIDTypeId","uuidRegex","UUID","uuid","ULIDTypeId","ulidRegex","ULID","ulid","FiniteTypeId","finite","isFinite","GreaterThanTypeId","greaterThan","exclusiveMinimum","GreaterThanOrEqualToTypeId","greaterThanOrEqualTo","minimum","MultipleOfTypeId","multipleOf","divisor","remainder","abs","IntTypeId","int","isSafeInteger","LessThanTypeId","lessThan","exclusiveMaximum","LessThanOrEqualToTypeId","lessThanOrEqualTo","maximum","BetweenTypeId","between","NonNaNTypeId","nonNaN","isNaN","positive","negative","nonPositive","nonNegative","clamp","strict","NumberFromString","fromOption","n","Finite","Int","NonNaN","Positive","Negative","NonPositive","NonNegative","JsonNumberTypeId","JsonNumber","Not","not","$Symbol","GreaterThanBigIntTypeId","GreaterThanBigintTypeId","greaterThanBigInt","GreaterThanOrEqualToBigIntTypeId","greaterThanOrEqualToBigInt","LessThanBigIntTypeId","lessThanBigInt","LessThanOrEqualToBigIntTypeId","lessThanOrEqualToBigInt","BetweenBigIntTypeId","BetweenBigintTypeId","betweenBigInt","positiveBigInt","negativeBigInt","nonNegativeBigInt","nonPositiveBigInt","clampBigInt","bigint","fromString","BigInt","PositiveBigIntFromSelf","PositiveBigInt","NegativeBigIntFromSelf","NegativeBigInt","NonPositiveBigIntFromSelf","NonPositiveBigInt","NonNegativeBigIntFromSelf","NonNegativeBigInt","BigIntFromNumber","fromNumber","toNumber","SecretFromSelf","isSecret","secret","string","Secret","str","DurationFromSelf","isDuration","oneof","constant","infinity","bigUint","nanos","micros","maxSafeNat","millis","seconds","minutes","hours","days","weeks","DurationFromNanos","duration","toNanos","val","DurationFromMillis","ms","toMillis","hrTime","Duration","toHrTime","clampDuration","betweenDuration","LessThanDurationTypeId","lessThanDuration","LessThanOrEqualToDurationTypeId","lessThanOrEqualToDuration","GreaterThanDurationTypeId","greaterThanDuration","GreaterThanOrEqualToDurationTypeId","greaterThanOrEqualToDuration","BetweenDurationTypeId","Uint8ArrayFromSelf","isUint8Array","u8arr","uint8Array","getEquivalence","equals","$Uint8Array","numbers","Uint8Array","makeEncodingTransformation","decodeException","Base64","decodeBase64","encodeBase64","Base64Url","decodeBase64Url","encodeBase64Url","Hex","decodeHex","encodeHex","MinItemsTypeId","minItems","MaxItemsTypeId","maxItems","ItemsCountTypeId","itemsCount","getNumberIndexedAccess","of","headOrElse","fallback","ValidDateTypeId","validDate","getTime","DateFromSelf","isDate","date","noInvalidDate","Date","ValidDateFromSelf","DateFromString","toISOString","$Date","OptionNoneEncoded","optionSomeEncoded","optionEncoded","optionDecode","optionArbitrary","optionPretty","optionParse","isOption","isNone","makeNoneEncoded","makeSomeEncoded","Option","value_","OptionFromNullOr","fromNullable","getOrNull","OptionFromNullishOr","onNoneEncoding","getOrUndefined","OptionFromUndefinedOr","rightEncoded","right","leftEncoded","eitherEncoded","eitherDecode","eitherArbitrary","eitherPretty","eitherParse","parseRight","decodeUnknownLeft","isEither","EitherFromSelf","makeLeftEncoded","makeRightEncoded","Either","right_","left_","EitherFromUnion","toright","toleft","fromRight","fromLeft","l","mapArbitrary","array","tuple","Map","readonlyMapPretty","entries","k","readonlyMapEquivalence","arrayEquivalence","ka","va","kb","vb","readonlyMapParse","isMap","mapFromSelf_","Key","Value","ReadonlyMapFromSelf","MapFromSelf","ReadonlyMap","key_","setArbitrary","item","Set","readonlySetPretty","set","values","readonlySetEquivalence","readonlySetParse","isSet","setFromSelf_","ReadonlySetFromSelf","SetFromSelf","ReadonlySet","bigDecimalPretty","normalize","bigDecimalArbitrary","bigInt","integer","scale","BigDecimalFromSelf","isBigDecimal","BigDecimal","num","BigDecimalFromNumber","unsafeToNumber","GreaterThanBigDecimalTypeId","greaterThanBigDecimal","GreaterThanOrEqualToBigDecimalTypeId","greaterThanOrEqualToBigDecimal","LessThanBigDecimalTypeId","lessThanBigDecimal","LessThanOrEqualToBigDecimalTypeId","lessThanOrEqualToBigDecimal","PositiveBigDecimalTypeId","positiveBigDecimal","isPositive","PositiveBigDecimalFromSelf","NonNegativeBigDecimalTypeId","nonNegativeBigDecimal","NonNegativeBigDecimalFromSelf","NegativeBigDecimalTypeId","negativeBigDecimal","isNegative","NegativeBigDecimalFromSelf","NonPositiveBigDecimalTypeId","nonPositiveBigDecimal","NonPositiveBigDecimalFromSelf","BetweenBigDecimalTypeId","betweenBigDecimal","clampBigDecimal","chunkArbitrary","fromIterable","chunkPretty","c","toReadonlyArray","chunkParse","isChunk","isEmpty","empty","ChunkFromSelf","Chunk","toData","struct","dataArbitrary","dataPretty","d","dataParse","isEqual","DataFromSelf","Data","Class","makeClass","kind","Base","TaggedClass","tag","extendFields","TaggedError","prototype","toStringOverride","stack","TaggedRequest","Failure","Success","SerializableRequest","symbolResult","getDuplicatePropertySignatureErrorMessage","fromSchema","classSymbol","getTitleAnnotation","props","disableValidation","toSchema","guard","fallbackInstanceOf","declaration","arb","SurrogateAnnotationId","newFields","extendedFields","transformedFields","transformOrFailFrom","FiberIdNoneEncoded","FiberIdRuntimeEncoded","startTimeMillis","FiberIdCompositeEncoded","FiberIdEncoded","fiberIdArbitrary","letrec","tie","None","Runtime","Composite","FiberId","fiberIdDecode","fiberIdPretty","fiberId","FiberIdFromSelf","isFiberId","runtime","composite","fiberIdEncode","causeDieEncoded","defect","CauseEmptyEncoded","causeFailEncoded","CauseInterruptEncoded","causeParallelEncoded","causeEncoded","causeSequentialEncoded","recur","causeArbitrary","Empty","Fail","Die","Interrupt","Sequential","Parallel","Cause","causeDecode","causePretty","cause","causeParse","isCause","causeEncode","CauseFromSelf","die","interrupt","sequential","parallel","CauseDefectUnknown","err","error_","exitFailureEncoded","exitSuccessEncoded","exitEncoded","exitDecode","failCause","exitArbitrary","exitPretty","exit","exitParse","decodeUnknownValue","decodeUnknownCause","isExit","onFailure","onSuccess","ExitFromSelf","failure","success","Exit","success_","failure_","hashSetArbitrary","hashSetPretty","hashSetEquivalence","hashSetParse","isHashSet","HashSetFromSelf","HashSet","hashMapArbitrary","hashMapPretty","hashMapEquivalence","hashMapParse","isHashMap","HashMapFromSelf","HashMap","listArbitrary","listPretty","listEquivalence","listParse","isList","ListFromSelf","List","sortedSetArbitrary","ord","sortedSetPretty","sortedSetParse","isSortedSet","SortedSetFromSelf","ordA","ordI","SortedSet","BooleanFromUnknown","isTruthy"],"sources":["../../src/Schema.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"Schema.js","names":["array_","bigDecimal_","bigInt_","boolean_","cause_","chunk_","data_","duration_","Effect","either_","Encoding","Equal","Equivalence","exit_","fiberId_","dual","identity","hashMap_","hashSet_","list_","number_","option_","pipeArguments","Predicate","Request","secret_","sortedSet_","string_","arbitrary_","AST","equivalence_","errors_","filters_","serializable_","util_","ParseResult","pretty_","TypeId","Symbol","for","make","ast","SchemaClass","variance","Type","Encoded","annotations","toASTAnnotations","pipe","arguments","toString","String","_A","_","_I","_R","out","custom","Object","getOwnPropertySymbols","sym","typeId","undefined","TypeAnnotationId","id","annotation","move","from","to","MessageAnnotationId","IdentifierAnnotationId","TitleAnnotationId","DescriptionAnnotationId","ExamplesAnnotationId","DefaultAnnotationId","DocumentationAnnotationId","JSONSchemaAnnotationId","ArbitraryHookId","PrettyHookId","EquivalenceHookId","ConcurrencyAnnotationId","BatchingAnnotationId","ParseIssueTitleAnnotationId","asSchema","schema","format","encodedSchema","encodedAST","typeSchema","typeAST","asserts","decodeOption","decodeSync","decodeUnknownOption","decodeUnknownSync","encodeOption","encodeSync","encodeUnknownOption","encodeUnknownSync","is","validateOption","validateSync","encodeUnknown","options","u","overrideOptions","mapError","parseError","encodeUnknownEither","mapLeft","encodeUnknownPromise","parser","runPromise","encode","encodeEither","encodePromise","decodeUnknown","decodeUnknownEither","decodeUnknownPromise","decode","decodeEither","decodePromise","validate","validateEither","validatePromise","isSchema","hasProperty","isObject","getDefaultLiteralAST","literals","isMembers","Union","mapMembers","literal","Literal","makeLiteralClass","LiteralClass","isNonEmptyReadonlyArray","Never","pickLiteral","_schema","UniqueSymbolFromSelf","symbol","UniqueSymbol","getDefaultEnumsAST","enums","Enums","keys","filter","key","map","makeEnumsClass","EnumsClass","TemplateLiteral","head","tail","types","getTemplateLiterals","span","flatMap","a","b","combineTemplateLiterals","isLiteral","spans","modifyNonEmptyLast","TemplateLiteralSpan","type","appendAll","_tag","Error","declareConstructor","typeParameters","Declaration","tp","declarePrimitive","input","succeed","fail","declare","Array","isArray","BrandTypeId","fromBrand","constructor","self","makeBrandClass","Refinement","predicate","either","isLeft","some","left","v","message","join","none","InstanceOfTypeId","instanceOf","title","name","description","pretty","Undefined","undefinedKeyword","Void","voidKeyword","Null","null","neverKeyword","Unknown","unknownKeyword","Any","anyKeyword","BigIntFromSelf","bigIntKeyword","SymbolFromSelf","symbolKeyword","String$","stringKeyword","Number$","numberKeyword","Boolean$","booleanKeyword","Object$","objectKeyword","Boolean","Number","getDefaultUnionAST","members","m","makeUnionClass","UnionClass","NullOr","UndefinedOr","NullishOr","keyof","optionalElement","OptionalElementImpl","getDefaultTupleTypeAST","elements","rest","TupleType","Element","e","makeTupleTypeClass","TupleTypeClass","Tuple","args","slice","makeArrayClass","value","ArrayClass","Array$","makeNonEmptyArrayClass","NonEmptyArrayClass","NonEmptyArray","formatToken","isOptional","PropertySignatureDeclaration","isReadonly","defaultValue","token","FromPropertySignature","fromKey","ToPropertySignature","formatPropertyKey","p","isString","JSON","stringify","PropertySignatureTransformation","PropertySignatureTypeId","propertySignatureAnnotations_","PropertySignatureImpl","_TypeToken","_Key","_EncodedToken","_HasDefault","propertySignature","withConstructorDefault","applyDefaultValue","o","match","onNone","onSome","withDecodingDefault","withDefaults","defaults","decoding","optionalToRequired","optionalToOptional","optional","isExact","exact","default","isNullable","nullable","asOption","as","OptionFromSelf","isNotNull","isNotUndefined","isPropertySignature","getDefaultTypeLiteralAST","fields","records","ownKeys","pss","length","transformations","i","field","toAnnotations","push","PropertySignature","issFrom","issTo","r","indexSignatures","propertySignatures","record","forEach","ps","IndexSignature","parameter","Transformation","TypeLiteral","TypeLiteralTransformation","iss","lazilyMergeDefaults","makeTypeLiteralClass","TypeLiteralClass","props","Struct","makeRecordClass","RecordClass","Record","pick","omit","pluck","getPropertyKeyIndexedAccess","orUndefined","transform","ak","BrandClass","brand","getBrandAnnotation","brands","formatUnknown","BrandAnnotationId","partial","required","mutable","getExtendErrorMessage","x","y","path","getErrorMessageWithPath","getErrorMessage","intersectTypeLiterals","isTypeLiteral","findIndex","extendAST","concat","addRefinementToMembers","refinement","asts","getMessageAnnotation","intersectUnionMembers","getTypes","isUnion","xs","ys","Suspend","f","isTypeLiteralTransformation","transformation","propertySignatureTransformations","extend","that","compose","suspend","makeRefineClass","RefineClass","isBoolean","makeTransformationClass","TransformationClass","transformOrFail","FinalTransformation","fromA","toI","transformLiteral","transformLiterals","pairs","attachPropertySignature","attached","isSymbol","identifier","examples","default$","documentation","jsonSchema","equivalence","concurrency","batching","parseIssueTitle","rename","mapping","TrimmedTypeId","trimmed","trim","pattern","MaxLengthTypeId","maxLength","MinLengthTypeId","minLength","PatternTypeId","regex","source","lastIndex","test","arbitrary","fc","stringMatching","StartsWithTypeId","startsWith","EndsWithTypeId","endsWith","IncludesTypeId","includes","searchString","LowercasedTypeId","lowercased","toLowerCase","Lowercased","UppercasedTypeId","uppercased","toUpperCase","Uppercased","LengthTypeId","Math","max","floor","min","Char","nonEmpty","Lowercase","s","Uppercase","Trimmed","Trim","split","separator","JsonString","parseJson","try","parse","reviver","catch","replacer","space","NonEmpty","UUIDTypeId","uuidRegexp","UUID","uuid","ULIDTypeId","ulidRegexp","ULID","ulid","FiniteTypeId","finite","isFinite","GreaterThanTypeId","greaterThan","exclusiveMinimum","GreaterThanOrEqualToTypeId","greaterThanOrEqualTo","minimum","MultipleOfTypeId","multipleOf","divisor","remainder","abs","IntTypeId","int","isSafeInteger","LessThanTypeId","lessThan","exclusiveMaximum","LessThanOrEqualToTypeId","lessThanOrEqualTo","maximum","BetweenTypeId","between","NonNaNTypeId","nonNaN","isNaN","positive","negative","nonPositive","nonNegative","clamp","strict","parseNumber","fromOption","n","NumberFromString","Finite","Int","NonNaN","Positive","Negative","NonPositive","NonNegative","JsonNumberTypeId","JsonNumber","Not","not","Symbol$","GreaterThanBigIntTypeId","GreaterThanBigintTypeId","greaterThanBigInt","GreaterThanOrEqualToBigIntTypeId","greaterThanOrEqualToBigInt","LessThanBigIntTypeId","lessThanBigInt","LessThanOrEqualToBigIntTypeId","lessThanOrEqualToBigInt","BetweenBigIntTypeId","BetweenBigintTypeId","betweenBigInt","positiveBigInt","negativeBigInt","nonNegativeBigInt","nonPositiveBigInt","clampBigInt","BigInt$","fromString","BigInt","PositiveBigIntFromSelf","PositiveBigInt","NegativeBigIntFromSelf","NegativeBigInt","NonPositiveBigIntFromSelf","NonPositiveBigInt","NonNegativeBigIntFromSelf","NonNegativeBigInt","BigIntFromNumber","fromNumber","toNumber","SecretFromSelf","isSecret","secret","string","Secret","str","DurationFromSelf","isDuration","oneof","constant","infinity","bigUint","nanos","micros","maxSafeNat","millis","seconds","minutes","hours","days","weeks","DurationFromNanos","duration","toNanos","val","DurationFromMillis","ms","toMillis","hrTime","Duration","toHrTime","clampDuration","betweenDuration","LessThanDurationTypeId","lessThanDuration","LessThanOrEqualToDurationTypeId","lessThanOrEqualToDuration","GreaterThanDurationTypeId","greaterThanDuration","GreaterThanOrEqualToDurationTypeId","greaterThanOrEqualToDuration","BetweenDurationTypeId","Uint8ArrayFromSelf","isUint8Array","u8arr","uint8Array","getEquivalence","equals","Uint8Array$","numbers","Uint8Array","makeEncodingTransformation","decodeException","Base64","decodeBase64","encodeBase64","Base64Url","decodeBase64Url","encodeBase64Url","Hex","decodeHex","encodeHex","MinItemsTypeId","minItems","MaxItemsTypeId","maxItems","ItemsCountTypeId","itemsCount","getNumberIndexedAccess","of","headOrElse","fallback","ValidDateTypeId","validDate","getTime","DateFromSelf","isDate","date","noInvalidDate","Date","ValidDateFromSelf","DateFromString","d","toISOString","Date$","DateFromNumber","OptionNoneEncoded","optionSomeEncoded","optionEncoded","optionDecode","optionArbitrary","optionPretty","optionParse","isOption","isNone","makeNoneEncoded","makeSomeEncoded","Option","value_","OptionFromNullOr","fromNullable","getOrNull","OptionFromNullishOr","onNoneEncoding","getOrUndefined","OptionFromUndefinedOr","rightEncoded","right","leftEncoded","eitherEncoded","eitherDecode","eitherArbitrary","eitherPretty","onLeft","onRight","eitherParse","parseRight","decodeUnknownLeft","isEither","EitherFromSelf","makeLeftEncoded","makeRightEncoded","Either","right_","left_","EitherFromUnion","toright","toleft","fromRight","fromLeft","l","mapArbitrary","array","tuple","Map","readonlyMapPretty","entries","k","readonlyMapEquivalence","arrayEquivalence","ka","va","kb","vb","readonlyMapParse","isMap","mapFromSelf_","Key","Value","ReadonlyMapFromSelf","MapFromSelf","ReadonlyMap","key_","setArbitrary","item","Set","readonlySetPretty","set","values","readonlySetEquivalence","readonlySetParse","isSet","setFromSelf_","ReadonlySetFromSelf","SetFromSelf","ReadonlySet","bigDecimalPretty","normalize","bigDecimalArbitrary","bigInt","integer","scale","BigDecimalFromSelf","isBigDecimal","BigDecimal","num","BigDecimalFromNumber","unsafeToNumber","GreaterThanBigDecimalTypeId","greaterThanBigDecimal","GreaterThanOrEqualToBigDecimalTypeId","greaterThanOrEqualToBigDecimal","LessThanBigDecimalTypeId","lessThanBigDecimal","LessThanOrEqualToBigDecimalTypeId","lessThanOrEqualToBigDecimal","PositiveBigDecimalTypeId","positiveBigDecimal","isPositive","PositiveBigDecimalFromSelf","NonNegativeBigDecimalTypeId","nonNegativeBigDecimal","NonNegativeBigDecimalFromSelf","NegativeBigDecimalTypeId","negativeBigDecimal","isNegative","NegativeBigDecimalFromSelf","NonPositiveBigDecimalTypeId","nonPositiveBigDecimal","NonPositiveBigDecimalFromSelf","BetweenBigDecimalTypeId","betweenBigDecimal","clampBigDecimal","chunkArbitrary","fromIterable","chunkPretty","c","toReadonlyArray","chunkParse","isChunk","isEmpty","empty","ChunkFromSelf","Chunk","toData","struct","dataArbitrary","dataPretty","dataParse","isEqual","DataFromSelf","Data","assign","isField","isFields","every","getFields","hasFields","getSchemaFromFieldsOr","fieldsOr","getFieldsFromFieldsOr","Class","makeClass","kind","Base","getClassTag","tag","TaggedClass","newFields","taggedFields","extendFields","TaggedError","prototype","TaggedErrorClass","toStringOverride","stack","TaggedRequest","Failure","Success","SerializableRequest","symbolResult","TaggedRequestClass","getDuplicatePropertySignatureErrorMessage","orElseTitleAnnotation","getTitleAnnotation","disableValidation","validateSchema","encodedSide","typeSide","guard","fallbackInstanceOf","classSymbol","declaration","arb","SurrogateAnnotationId","customIdentifier","newFieldsOr","newSchema","extendedFields","transformedFields","transformOrFailFrom","FiberIdNoneEncoded","FiberIdRuntimeEncoded","startTimeMillis","FiberIdCompositeEncoded","FiberIdEncoded","fiberIdArbitrary","letrec","tie","None","Runtime","Composite","FiberId","fiberIdDecode","fiberIdPretty","fiberId","FiberIdFromSelf","isFiberId","runtime","composite","fiberIdEncode","causeDieEncoded","defect","CauseEmptyEncoded","causeFailEncoded","error","CauseInterruptEncoded","causeParallelEncoded","causeEncoded","causeSequentialEncoded","recur","causeArbitrary","Empty","Fail","Die","Interrupt","Sequential","Parallel","Cause","causeDecode","causePretty","cause","causeParse","isCause","causeEncode","CauseFromSelf","die","interrupt","sequential","parallel","CauseDefectUnknown","err","error_","exitFailureEncoded","exitSuccessEncoded","exitEncoded","exitDecode","failCause","exitArbitrary","exitPretty","exit","exitParse","decodeUnknownValue","decodeUnknownCause","isExit","onFailure","onSuccess","ExitFromSelf","failure","success","Exit","success_","failure_","hashSetArbitrary","hashSetPretty","hashSetEquivalence","hashSetParse","isHashSet","HashSetFromSelf","HashSet","hashMapArbitrary","hashMapPretty","hashMapEquivalence","hashMapParse","isHashMap","HashMapFromSelf","HashMap","listArbitrary","listPretty","listEquivalence","listParse","isList","ListFromSelf","List","sortedSetArbitrary","ord","sortedSetPretty","sortedSetParse","isSortedSet","SortedSetFromSelf","ordA","ordI","SortedSet","BooleanFromUnknown","isTruthy"],"sources":["../../src/Schema.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/esm/Serializable.js.map b/dist/esm/Serializable.js.map
index c27d46b70972a603833b5777a8c3a2d0c6ae435a..03369f89f132588bde8503c78ad2f692c1dbd414 100644
--- a/dist/esm/Serializable.js.map
+++ b/dist/esm/Serializable.js.map
@@ -1 +1 @@
-{"version":3,"file":"Serializable.js","names":["dual","globalValue","serializable_","Schema","symbol","selfSchema","self","symbolResult","failureSchema","Failure","successSchema","Success","exitSchemaCache","WeakMap","exitSchema","proto","Object","getPrototypeOf","Exit","failure","success","schema","get","undefined","set","serialize","encode","deserialize","value","decodeUnknown","serializeFailure","deserializeFailure","serializeSuccess","deserializeSuccess","serializeExit","deserializeExit"],"sources":["../../src/Serializable.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"Serializable.js","names":["dual","globalValue","serializable_","Schema","symbol","selfSchema","self","symbolResult","failureSchema","Failure","successSchema","Success","exitSchemaCache","WeakMap","exitSchema","proto","Object","getPrototypeOf","Exit","failure","success","schema","get","undefined","set","serialize","encode","deserialize","value","decodeUnknown","serializeFailure","deserializeFailure","serializeSuccess","deserializeSuccess","serializeExit","deserializeExit"],"sources":["../../src/Serializable.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/esm/TreeFormatter.js b/dist/esm/TreeFormatter.js
index 01d48f300d9eec3d0ae78d98ee4490c0270be1a1..f4b668e86e8331b55fc53b689377e41370bc8eeb 100644
--- a/dist/esm/TreeFormatter.js
+++ b/dist/esm/TreeFormatter.js
@@ -61,7 +61,7 @@ const formatRefinementKind = kind => {
       return "Predicate refinement failure";
   }
 };
-const getPrevMessage = issue => {
+const getInnerMessage = issue => {
   switch (issue._tag) {
     case "Refinement":
       {
@@ -71,16 +71,38 @@ const getPrevMessage = issue => {
         break;
       }
     case "Transformation":
-      return getMessage(issue.error);
+      {
+        return getMessage(issue.error);
+      }
   }
   return Option.none();
 };
 const getCurrentMessage = issue => AST.getMessageAnnotation(issue.ast).pipe(Effect.flatMap(annotation => {
   const out = annotation(issue);
-  return Predicate.isString(out) ? Effect.succeed(out) : out;
+  return Predicate.isString(out) ? Effect.succeed({
+    message: out,
+    override: false
+  }) : Effect.isEffect(out) ? Effect.map(out, message => ({
+    message,
+    override: false
+  })) : Predicate.isString(out.message) ? Effect.succeed({
+    message: out.message,
+    override: out.override
+  }) : Effect.map(out.message, message => ({
+    message,
+    override: out.override
+  }));
 }));
 /** @internal */
-export const getMessage = issue => Effect.catchAll(getPrevMessage(issue), () => getCurrentMessage(issue));
+export const getMessage = issue => {
+  const current = getCurrentMessage(issue);
+  return getInnerMessage(issue).pipe(Effect.flatMap(inner => Effect.map(current, current => current.override ? current.message : inner)), Effect.catchAll(() => Effect.flatMap(current, current => {
+    if (!current.override && (issue._tag === "Refinement" && issue.kind !== "Predicate" || issue._tag === "Transformation" && issue.kind !== "Transformation")) {
+      return Option.none();
+    }
+    return Effect.succeed(current.message);
+  })));
+};
 const getParseIssueTitleAnnotation = issue => Option.filterMap(AST.getParseIssueTitleAnnotation(issue.ast), annotation => Option.fromNullable(annotation(issue)));
 /** @internal */
 export const formatTypeMessage = e => getMessage(e).pipe(Effect.orElse(() => getParseIssueTitleAnnotation(e)), Effect.orElse(() => e.message), Effect.catchAll(() => Effect.succeed(`Expected ${e.ast.toString(true)}, actual ${util_.formatUnknown(e.actual)}`)));
@@ -111,9 +133,9 @@ const go = e => {
         }
       }), forest => make(getParseIssueTitle(e), forest)));
     case "TupleType":
-      return getTree(e, () => Effect.map(Effect.forEach(e.errors, index => Effect.map(go(index.error), tree => make(`[${index.index}]`, [tree]))), forest => make(getParseIssueTitle(e), forest)));
+      return getTree(e, () => Effect.map(Effect.forEach(e.errors, index => Effect.map(go(index.error), tree => make(`[${util_.formatPropertyKey(index.index)}]`, [tree]))), forest => make(getParseIssueTitle(e), forest)));
     case "TypeLiteral":
-      return getTree(e, () => Effect.map(Effect.forEach(e.errors, key => Effect.map(go(key.error), tree => make(`[${util_.formatUnknown(key.key)}]`, [tree]))), forest => make(getParseIssueTitle(e), forest)));
+      return getTree(e, () => Effect.map(Effect.forEach(e.errors, key => Effect.map(go(key.error), tree => make(`[${util_.formatPropertyKey(key.key)}]`, [tree]))), forest => make(getParseIssueTitle(e), forest)));
     case "Transformation":
       return getTree(e, () => Effect.map(go(e.error), tree => make(getParseIssueTitle(e), [make(formatTransformationKind(e.kind), [tree])])));
     case "Refinement":
diff --git a/dist/esm/TreeFormatter.js.map b/dist/esm/TreeFormatter.js.map
index b9b81d6f418dbf00ad47fa68c10378961e7b0023..ac28dff2e91350b05210219b149292c8edbcb2a8 100644
--- a/dist/esm/TreeFormatter.js.map
+++ b/dist/esm/TreeFormatter.js.map
@@ -1 +1 @@
-{"version":3,"file":"TreeFormatter.js","names":["Effect","Option","Predicate","AST","util_","make","value","forest","formatIssue","issue","map","go","tree","drawTree","formatIssueSync","runSync","formatError","error","formatErrorSync","draw","indentation","r","len","length","i","isLast","formatTransformationKind","kind","formatRefinementKind","getPrevMessage","_tag","getMessage","none","getCurrentMessage","getMessageAnnotation","ast","pipe","flatMap","annotation","out","isString","succeed","catchAll","getParseIssueTitleAnnotation","filterMap","fromNullable","formatTypeMessage","e","orElse","message","toString","formatUnknown","actual","getParseIssueTitle","getOrElse","String","formatForbiddenMessage","getTree","onFailure","matchEffect","onSuccess","forEach","errors","index","key","shouldSkipDefaultMessage"],"sources":["../../src/TreeFormatter.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"TreeFormatter.js","names":["Effect","Option","Predicate","AST","util_","make","value","forest","formatIssue","issue","map","go","tree","drawTree","formatIssueSync","runSync","formatError","error","formatErrorSync","draw","indentation","r","len","length","i","isLast","formatTransformationKind","kind","formatRefinementKind","getInnerMessage","_tag","getMessage","none","getCurrentMessage","getMessageAnnotation","ast","pipe","flatMap","annotation","out","isString","succeed","message","override","isEffect","current","inner","catchAll","getParseIssueTitleAnnotation","filterMap","fromNullable","formatTypeMessage","e","orElse","toString","formatUnknown","actual","getParseIssueTitle","getOrElse","String","formatForbiddenMessage","getTree","onFailure","matchEffect","onSuccess","forEach","errors","index","formatPropertyKey","key","shouldSkipDefaultMessage"],"sources":["../../src/TreeFormatter.ts"],"sourcesContent":[null],"mappings":"AAAA;;;AAKA,OAAO,KAAKA,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,SAAS,MAAM,kBAAkB;AAC7C,OAAO,KAAKC,GAAG,MAAM,UAAU;AAC/B,OAAO,KAAKC,KAAK,MAAM,oBAAoB;AAU3C,MAAMC,IAAI,GAAGA,CAAIC,KAAQ,EAAEC,MAAA,GAAoB,EAAE,MAAe;EAC9DD,KAAK;EACLC;CACD,CAAC;AAEF;;;;AAIA,OAAO,MAAMC,WAAW,GAAIC,KAA6B,IACvDT,MAAM,CAACU,GAAG,CAACC,EAAE,CAACF,KAAK,CAAC,EAAGG,IAAI,IAAKC,QAAQ,CAACD,IAAI,CAAC,CAAC;AAEjD;;;;AAIA,OAAO,MAAME,eAAe,GAAIL,KAA6B,IAAaT,MAAM,CAACe,OAAO,CAACP,WAAW,CAACC,KAAK,CAAC,CAAC;AAE5G;;;;AAIA,OAAO,MAAMO,WAAW,GAAIC,KAA6B,IAA4BT,WAAW,CAACS,KAAK,CAACA,KAAK,CAAC;AAE7G;;;;AAIA,OAAO,MAAMC,eAAe,GAAID,KAA6B,IAAaH,eAAe,CAACG,KAAK,CAACA,KAAK,CAAC;AAEtG,MAAMJ,QAAQ,GAAID,IAAkB,IAAaA,IAAI,CAACN,KAAK,GAAGa,IAAI,CAAC,IAAI,EAAEP,IAAI,CAACL,MAAM,CAAC;AAErF,MAAMY,IAAI,GAAGA,CAACC,WAAmB,EAAEb,MAAsB,KAAY;EACnE,IAAIc,CAAC,GAAG,EAAE;EACV,MAAMC,GAAG,GAAGf,MAAM,CAACgB,MAAM;EACzB,IAAIX,IAAkB;EACtB,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,EAAEE,CAAC,EAAE,EAAE;IAC5BZ,IAAI,GAAGL,MAAM,CAACiB,CAAC,CAAC;IAChB,MAAMC,MAAM,GAAGD,CAAC,KAAKF,GAAG,GAAG,CAAC;IAC5BD,CAAC,IAAID,WAAW,IAAIK,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI,GAAGb,IAAI,CAACN,KAAK;IAC3De,CAAC,IAAIF,IAAI,CAACC,WAAW,IAAIE,GAAG,GAAG,CAAC,IAAI,CAACG,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC,EAAEb,IAAI,CAACL,MAAM,CAAC;EAC5E;EACA,OAAOc,CAAC;AACV,CAAC;AAED,MAAMK,wBAAwB,GAAIC,IAAwC,IAAY;EACpF,QAAQA,IAAI;IACV,KAAK,SAAS;MACZ,OAAO,qCAAqC;IAC9C,KAAK,gBAAgB;MACnB,OAAO,gCAAgC;IACzC,KAAK,MAAM;MACT,OAAO,kCAAkC;EAC7C;AACF,CAAC;AAED,MAAMC,oBAAoB,GAAID,IAAoC,IAAY;EAC5E,QAAQA,IAAI;IACV,KAAK,MAAM;MACT,OAAO,8BAA8B;IACvC,KAAK,WAAW;MACd,OAAO,8BAA8B;EACzC;AACF,CAAC;AAED,MAAME,eAAe,GACnBpB,KAA6B,IAC0B;EACvD,QAAQA,KAAK,CAACqB,IAAI;IAChB,KAAK,YAAY;MAAE;QACjB,IAAIrB,KAAK,CAACkB,IAAI,KAAK,MAAM,EAAE;UACzB,OAAOI,UAAU,CAACtB,KAAK,CAACQ,KAAK,CAAC;QAChC;QACA;MACF;IACA,KAAK,gBAAgB;MAAE;QACrB,OAAOc,UAAU,CAACtB,KAAK,CAACQ,KAAK,CAAC;MAChC;EACF;EACA,OAAOhB,MAAM,CAAC+B,IAAI,EAAE;AACtB,CAAC;AAED,MAAMC,iBAAiB,GAGrBxB,KAA6B,IAE7BN,GAAG,CAAC+B,oBAAoB,CAACzB,KAAK,CAAC0B,GAAG,CAAC,CAACC,IAAI,CAACpC,MAAM,CAACqC,OAAO,CAAEC,UAAU,IAAI;EACrE,MAAMC,GAAG,GAAGD,UAAU,CAAC7B,KAAK,CAAC;EAC7B,OAAOP,SAAS,CAACsC,QAAQ,CAACD,GAAG,CAAC,GAC1BvC,MAAM,CAACyC,OAAO,CAAC;IAAEC,OAAO,EAAEH,GAAG;IAAEI,QAAQ,EAAE;EAAK,CAAE,CAAC,GACjD3C,MAAM,CAAC4C,QAAQ,CAACL,GAAG,CAAC,GACpBvC,MAAM,CAACU,GAAG,CAAC6B,GAAG,EAAGG,OAAO,KAAM;IAAEA,OAAO;IAAEC,QAAQ,EAAE;EAAK,CAAE,CAAC,CAAC,GAC5DzC,SAAS,CAACsC,QAAQ,CAACD,GAAG,CAACG,OAAO,CAAC,GAC/B1C,MAAM,CAACyC,OAAO,CAAC;IAAEC,OAAO,EAAEH,GAAG,CAACG,OAAO;IAAEC,QAAQ,EAAEJ,GAAG,CAACI;EAAQ,CAAE,CAAC,GAChE3C,MAAM,CAACU,GAAG,CAAC6B,GAAG,CAACG,OAAO,EAAGA,OAAO,KAAM;IAAEA,OAAO;IAAEC,QAAQ,EAAEJ,GAAG,CAACI;EAAQ,CAAE,CAAC,CAAC;AACjF,CAAC,CAAC,CAAC;AAEL;AACA,OAAO,MAAMZ,UAAU,GAEqCtB,KAA6B,IAAI;EAC3F,MAAMoC,OAAO,GAAGZ,iBAAiB,CAACxB,KAAK,CAAC;EACxC,OAAOoB,eAAe,CAACpB,KAAK,CAAC,CAAC2B,IAAI,CAChCpC,MAAM,CAACqC,OAAO,CAAES,KAAK,IAAK9C,MAAM,CAACU,GAAG,CAACmC,OAAO,EAAGA,OAAO,IAAKA,OAAO,CAACF,QAAQ,GAAGE,OAAO,CAACH,OAAO,GAAGI,KAAK,CAAC,CAAC,EACvG9C,MAAM,CAAC+C,QAAQ,CAAC,MACd/C,MAAM,CAACqC,OAAO,CAACQ,OAAO,EAAGA,OAAO,IAAI;IAClC,IACE,CAACA,OAAO,CAACF,QAAQ,KACdlC,KAAK,CAACqB,IAAI,KAAK,YAAY,IAAIrB,KAAK,CAACkB,IAAI,KAAK,WAAW,IACzDlB,KAAK,CAACqB,IAAI,KAAK,gBAAgB,IAAIrB,KAAK,CAACkB,IAAI,KAAK,gBAAiB,CACrE,EACD;MACA,OAAO1B,MAAM,CAAC+B,IAAI,EAAE;IACtB;IACA,OAAOhC,MAAM,CAACyC,OAAO,CAACI,OAAO,CAACH,OAAO,CAAC;EACxC,CAAC,CAAC,CACH,CACF;AACH,CAAC;AAED,MAAMM,4BAA4B,GAAIvC,KAA6B,IACjER,MAAM,CAACgD,SAAS,CACd9C,GAAG,CAAC6C,4BAA4B,CAACvC,KAAK,CAAC0B,GAAG,CAAC,EAC1CG,UAAU,IAAKrC,MAAM,CAACiD,YAAY,CAACZ,UAAU,CAAC7B,KAAK,CAAC,CAAC,CACvD;AAEH;AACA,OAAO,MAAM0C,iBAAiB,GAAIC,CAAmB,IACnDrB,UAAU,CAACqB,CAAC,CAAC,CAAChB,IAAI,CAChBpC,MAAM,CAACqD,MAAM,CAAC,MAAML,4BAA4B,CAACI,CAAC,CAAC,CAAC,EACpDpD,MAAM,CAACqD,MAAM,CAAC,MAAMD,CAAC,CAACV,OAAO,CAAC,EAC9B1C,MAAM,CAAC+C,QAAQ,CAAC,MAAM/C,MAAM,CAACyC,OAAO,CAAC,YAAYW,CAAC,CAACjB,GAAG,CAACmB,QAAQ,CAAC,IAAI,CAAC,YAAYlD,KAAK,CAACmD,aAAa,CAACH,CAAC,CAACI,MAAM,CAAC,EAAE,CAAC,CAAC,CACnH;AAEH,MAAMC,kBAAkB,GAAIhD,KAA6B,IACvDR,MAAM,CAACyD,SAAS,CAACV,4BAA4B,CAACvC,KAAK,CAAC,EAAE,MAAMkD,MAAM,CAAClD,KAAK,CAAC0B,GAAG,CAAC,CAAC;AAEhF;AACA,OAAO,MAAMyB,sBAAsB,GAAIR,CAAwB,IAC7DnD,MAAM,CAACyD,SAAS,CAACN,CAAC,CAACV,OAAO,EAAE,MAAM,cAAc,CAAC;AAEnD,MAAMmB,OAAO,GAAGA,CAACpD,KAA6B,EAAEqD,SAA4C,KAC1F9D,MAAM,CAAC+D,WAAW,CAAChC,UAAU,CAACtB,KAAK,CAAC,EAAE;EACpCqD,SAAS;EACTE,SAAS,EAAGtB,OAAO,IAAK1C,MAAM,CAACyC,OAAO,CAACpC,IAAI,CAACqC,OAAO,CAAC;CACrD,CAAC;AAEJ,MAAM/B,EAAE,GAAIyC,CAAwE,IAAiC;EACnH,QAAQA,CAAC,CAACtB,IAAI;IACZ,KAAK,MAAM;MACT,OAAO9B,MAAM,CAACU,GAAG,CAACyC,iBAAiB,CAACC,CAAC,CAAC,EAAE/C,IAAI,CAAC;IAC/C,KAAK,WAAW;MACd,OAAOL,MAAM,CAACyC,OAAO,CAACpC,IAAI,CAACoD,kBAAkB,CAACL,CAAC,CAAC,EAAE,CAAC/C,IAAI,CAACuD,sBAAsB,CAACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvF,KAAK,YAAY;MACf,OAAOpD,MAAM,CAACyC,OAAO,CAACpC,IAAI,CAAC,2BAA2B+C,CAAC,CAACjB,GAAG,CAACmB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAChF,KAAK,SAAS;MACZ,OAAOtD,MAAM,CAACyC,OAAO,CAACpC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC3C,KAAK,OAAO;MACV,OAAOwD,OAAO,CAACT,CAAC,EAAE,MAChBpD,MAAM,CAACU,GAAG,CACRV,MAAM,CAACiE,OAAO,CAACb,CAAC,CAACc,MAAM,EAAGd,CAAC,IAAI;QAC7B,QAAQA,CAAC,CAACtB,IAAI;UACZ,KAAK,QAAQ;YACX,OAAO9B,MAAM,CAACU,GAAG,CAACC,EAAE,CAACyC,CAAC,CAACnC,KAAK,CAAC,EAAGL,IAAI,IAAKP,IAAI,CAAC,cAAc,EAAE,CAACO,IAAI,CAAC,CAAC,CAAC;UACxE;YACE,OAAOD,EAAE,CAACyC,CAAC,CAAC;QAChB;MACF,CAAC,CAAC,EACD7C,MAAM,IAAKF,IAAI,CAACoD,kBAAkB,CAACL,CAAC,CAAC,EAAE7C,MAAM,CAAC,CAChD,CAAC;IACN,KAAK,WAAW;MACd,OAAOsD,OAAO,CAACT,CAAC,EAAE,MAChBpD,MAAM,CAACU,GAAG,CACRV,MAAM,CAACiE,OAAO,CACZb,CAAC,CAACc,MAAM,EACPC,KAAK,IAAKnE,MAAM,CAACU,GAAG,CAACC,EAAE,CAACwD,KAAK,CAAClD,KAAK,CAAC,EAAGL,IAAI,IAAKP,IAAI,CAAC,IAAID,KAAK,CAACgE,iBAAiB,CAACD,KAAK,CAACA,KAAK,CAAC,GAAG,EAAE,CAACvD,IAAI,CAAC,CAAC,CAAC,CAC5G,EACAL,MAAM,IAAKF,IAAI,CAACoD,kBAAkB,CAACL,CAAC,CAAC,EAAE7C,MAAM,CAAC,CAChD,CAAC;IACN,KAAK,aAAa;MAChB,OAAOsD,OAAO,CAACT,CAAC,EAAE,MAChBpD,MAAM,CAACU,GAAG,CACRV,MAAM,CAACiE,OAAO,CAACb,CAAC,CAACc,MAAM,EAAGG,GAAG,IAC3BrE,MAAM,CAACU,GAAG,CAACC,EAAE,CAAC0D,GAAG,CAACpD,KAAK,CAAC,EAAGL,IAAI,IAAKP,IAAI,CAAC,IAAID,KAAK,CAACgE,iBAAiB,CAACC,GAAG,CAACA,GAAG,CAAC,GAAG,EAAE,CAACzD,IAAI,CAAC,CAAC,CAAC,CAAC,EAC5FL,MAAM,IACLF,IAAI,CAACoD,kBAAkB,CAACL,CAAC,CAAC,EAAE7C,MAAM,CAAC,CACtC,CAAC;IACN,KAAK,gBAAgB;MACnB,OAAOsD,OAAO,CAACT,CAAC,EAAE,MAChBpD,MAAM,CAACU,GAAG,CACRC,EAAE,CAACyC,CAAC,CAACnC,KAAK,CAAC,EACVL,IAAI,IAAKP,IAAI,CAACoD,kBAAkB,CAACL,CAAC,CAAC,EAAE,CAAC/C,IAAI,CAACqB,wBAAwB,CAAC0B,CAAC,CAACzB,IAAI,CAAC,EAAE,CAACf,IAAI,CAAC,CAAC,CAAC,CAAC,CACxF,CAAC;IACN,KAAK,YAAY;MACf,OAAOiD,OAAO,CACZT,CAAC,EACD,MACEpD,MAAM,CAACU,GAAG,CAACC,EAAE,CAACyC,CAAC,CAACnC,KAAK,CAAC,EAAGL,IAAI,IAAKP,IAAI,CAACoD,kBAAkB,CAACL,CAAC,CAAC,EAAE,CAAC/C,IAAI,CAACuB,oBAAoB,CAACwB,CAAC,CAACzB,IAAI,CAAC,EAAE,CAACf,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAC/G;IACH,KAAK,aAAa;MAChB,OAAOiD,OAAO,CAACT,CAAC,EAAE,MAAK;QACrB,MAAMnC,KAAK,GAAGmC,CAAC,CAACnC,KAAK;QACrB,MAAMqD,wBAAwB,GAAGrD,KAAK,CAACa,IAAI,KAAK,MAAM,IAAIb,KAAK,CAACkB,GAAG,KAAKiB,CAAC,CAACjB,GAAG;QAC7E,OAAOmC,wBAAwB,GAC3B3D,EAAE,CAACM,KAAK,CAAC,GACTjB,MAAM,CAACU,GAAG,CAACC,EAAE,CAACM,KAAK,CAAC,EAAGL,IAAI,IAAKP,IAAI,CAACoD,kBAAkB,CAACL,CAAC,CAAC,EAAE,CAACxC,IAAI,CAAC,CAAC,CAAC;MAC1E,CAAC,CAAC;EACN;AACF,CAAC","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/esm/internal/errors.js b/dist/esm/internal/errors.js
index 3b9193838bfcc3ecaf07c5b320fed68c3b5c66f6..56a95ba4acc786a4ce404ad95e9c2e39f096bd99 100644
--- a/dist/esm/internal/errors.js
+++ b/dist/esm/internal/errors.js
@@ -2,19 +2,13 @@ import * as util_ from "./util.js";
 /** @internal */
 export const getDuplicatePropertySignatureErrorMessage = name => `Duplicate property signature ${util_.formatUnknown(name)}`;
 /** @internal */
-export const getDuplicateIndexSignatureErrorMessage = name => `Duplicate index signature for type \`${name}\``;
-/** @internal */
-export const getIndexSignatureParameterErrorMessage = "An index signature parameter type must be `string`, `symbol`, a template literal type or a refinement of the previous types";
-/** @internal */
-export const getRequiredElementFollowinAnOptionalElementErrorMessage = "A required element cannot follow an optional element. ts(1257)";
-/** @internal */
-export const getDuplicatePropertySignatureTransformationErrorMessage = name => `Duplicate property signature transformation ${util_.formatUnknown(name)}`;
-/** @internal */
-export const getArbitraryErrorMessage = message => `cannot build an Arbitrary for ${message}`;
-/** @internal */
-export const getPrettyErrorMessage = message => `cannot build a Pretty for ${message}`;
-/** @internal */
-export const getEquivalenceErrorMessage = message => `cannot build an Equivalence for ${message}`;
-/** @internal */
-export const getAPIErrorMessage = (api, message) => `${api}: ${message}`;
+export const getErrorMessage = (api, message) => `${api}: ${message}`;
+/** @internal */
+export const getErrorMessageWithPath = (message, path) => {
+  let out = message;
+  if (path.length > 0) {
+    out += ` (path [${path.map(util_.formatPropertyKey).join(", ")}])`;
+  }
+  return out;
+};
 //# sourceMappingURL=errors.js.map
\ No newline at end of file
diff --git a/dist/esm/internal/errors.js.map b/dist/esm/internal/errors.js.map
index f388a99d153196345770506c66e8185151b864c0..f8ef37932c4933e41c0687a3c0d751e4834eb68f 100644
--- a/dist/esm/internal/errors.js.map
+++ b/dist/esm/internal/errors.js.map
@@ -1 +1 @@
-{"version":3,"file":"errors.js","names":["util_","getDuplicatePropertySignatureErrorMessage","name","formatUnknown","getDuplicateIndexSignatureErrorMessage","getIndexSignatureParameterErrorMessage","getRequiredElementFollowinAnOptionalElementErrorMessage","getDuplicatePropertySignatureTransformationErrorMessage","getArbitraryErrorMessage","message","getPrettyErrorMessage","getEquivalenceErrorMessage","getAPIErrorMessage","api"],"sources":["../../../src/internal/errors.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,WAAW;AAElC;AACA,OAAO,MAAMC,yCAAyC,GAAIC,IAAiB,IACzE,gCAAgCF,KAAK,CAACG,aAAa,CAACD,IAAI,CAAC,EAAE;AAE7D;AACA,OAAO,MAAME,sCAAsC,GAAIF,IAAyB,IAC9E,wCAAwCA,IAAI,IAAI;AAElD;AACA,OAAO,MAAMG,sCAAsC,GACjD,6HAA6H;AAE/H;AACA,OAAO,MAAMC,uDAAuD,GAClE,gEAAgE;AAElE;AACA,OAAO,MAAMC,uDAAuD,GAAIL,IAAiB,IACvF,+CAA+CF,KAAK,CAACG,aAAa,CAACD,IAAI,CAAC,EAAE;AAE5E;AACA,OAAO,MAAMM,wBAAwB,GAAIC,OAAe,IAAK,iCAAiCA,OAAO,EAAE;AAEvG;AACA,OAAO,MAAMC,qBAAqB,GAAID,OAAe,IAAK,6BAA6BA,OAAO,EAAE;AAEhG;AACA,OAAO,MAAME,0BAA0B,GAAIF,OAAe,IAAK,mCAAmCA,OAAO,EAAE;AAE3G;AACA,OAAO,MAAMG,kBAAkB,GAAGA,CAACC,GAAW,EAAEJ,OAAe,KAAK,GAAGI,GAAG,KAAKJ,OAAO,EAAE","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"errors.js","names":["util_","getDuplicatePropertySignatureErrorMessage","name","formatUnknown","getErrorMessage","api","message","getErrorMessageWithPath","path","out","length","map","formatPropertyKey","join"],"sources":["../../../src/internal/errors.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,WAAW;AAElC;AACA,OAAO,MAAMC,yCAAyC,GAAIC,IAAiB,IACzE,gCAAgCF,KAAK,CAACG,aAAa,CAACD,IAAI,CAAC,EAAE;AAE7D;AACA,OAAO,MAAME,eAAe,GAAGA,CAACC,GAAW,EAAEC,OAAe,KAAK,GAAGD,GAAG,KAAKC,OAAO,EAAE;AAErF;AACA,OAAO,MAAMC,uBAAuB,GAAGA,CAACD,OAAe,EAAEE,IAAgC,KAAI;EAC3F,IAAIC,GAAG,GAAGH,OAAO;EACjB,IAAIE,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;IACnBD,GAAG,IAAI,WAAWD,IAAI,CAACG,GAAG,CAACX,KAAK,CAACY,iBAAiB,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,IAAI;EACpE;EACA,OAAOJ,GAAG;AACZ,CAAC","ignoreList":[]}
\ No newline at end of file
diff --git a/package.json b/package.json
index d98847c5a08dedc05b3e80811c0fd6beaa3b0d24..df660f2ffbf11f42310ab6af6a7d952925c9d0e2 100644
--- a/package.json
+++ b/package.json
@@ -9,8 +9,10 @@
     "directory": "packages/schema"
   },
   "sideEffects": [],
+  "dependencies": {
+    "fast-check": "^3.17.2"
+  },
   "peerDependencies": {
-    "fast-check": "^3.13.2",
     "effect": "^3.1.3"
   },
   "publishConfig": {
diff --git a/src/AST.ts b/src/AST.ts
index cca6fd35c4c47df5f79fef345792422dc0a94922..421f5f510e59c80eb53453af7c7edb900b789d37 100644
--- a/src/AST.ts
+++ b/src/AST.ts
@@ -6,7 +6,6 @@ import * as Arr from "effect/Array"
 import type { Effect } from "effect/Effect"
 import { dual, identity } from "effect/Function"
 import { globalValue } from "effect/GlobalValue"
-import * as Hash from "effect/Hash"
 import * as Number from "effect/Number"
 import * as Option from "effect/Option"
 import * as Order from "effect/Order"
@@ -79,7 +78,12 @@ export const TypeAnnotationId = Symbol.for("@effect/schema/annotation/Type")
  * @category annotations
  * @since 1.0.0
  */
-export type MessageAnnotation = (issue: ParseIssue) => string | Effect<string>
+export type MessageAnnotation = (
+  issue: ParseIssue
+) => string | Effect<string> | {
+  readonly message: string | Effect<string>
+  readonly override: boolean
+}
 
 /**
  * @category annotations
@@ -1094,7 +1098,7 @@ export class TupleType implements Annotated {
       }
     }
     if (hasIllegalRequiredElement || (hasOptionalElement && rest.length > 1)) {
-      throw new Error(errors_.getRequiredElementFollowinAnOptionalElementErrorMessage)
+      throw new Error(getRequiredElementFollowinAnOptionalElementErrorMessage)
     }
   }
   /**
@@ -1213,7 +1217,7 @@ export class IndexSignature {
     if (isParameter(parameter)) {
       this.parameter = parameter
     } else {
-      throw new Error(errors_.getIndexSignatureParameterErrorMessage)
+      throw new Error(getIndexSignatureParameterErrorMessage)
     }
   }
   /**
@@ -1268,12 +1272,12 @@ export class TypeLiteral implements Annotated {
       const parameter = getParameterBase(indexSignatures[i].parameter)
       if (isStringKeyword(parameter)) {
         if (parameters.string) {
-          throw new Error(errors_.getDuplicateIndexSignatureErrorMessage("string"))
+          throw new Error(getDuplicateIndexSignatureErrorMessage("string"))
         }
         parameters.string = true
       } else if (isSymbolKeyword(parameter)) {
         if (parameters.symbol) {
-          throw new Error(errors_.getDuplicateIndexSignatureErrorMessage("symbol"))
+          throw new Error(getDuplicateIndexSignatureErrorMessage("symbol"))
         }
         parameters.symbol = true
       }
@@ -1303,11 +1307,11 @@ export class TypeLiteral implements Annotated {
 
 const formatTypeLiteral = (ast: TypeLiteral): string => {
   const formattedPropertySignatures = ast.propertySignatures.map((ps) =>
-    String(ps.name) + (ps.isOptional ? "?" : "") + ": " + ps.type
+    (ps.isReadonly ? "readonly " : "") + String(ps.name) + (ps.isOptional ? "?" : "") + ": " + ps.type
   ).join("; ")
   if (ast.indexSignatures.length > 0) {
     const formattedIndexSignatures = ast.indexSignatures.map((is) =>
-      `[x: ${getParameterBase(is.parameter)}]: ${is.type}`
+      (is.isReadonly ? "readonly " : "") + `[x: ${getParameterBase(is.parameter)}]: ${is.type}`
     ).join("; ")
     if (ast.propertySignatures.length > 0) {
       return `{ ${formattedPropertySignatures}; ${formattedIndexSignatures} }`
@@ -1599,7 +1603,7 @@ export class Refinement<From extends AST = AST> implements Annotated {
    * @since 1.0.0
    */
   toString(verbose: boolean = false) {
-    return Option.getOrElse(getExpected(this, verbose), () => "<refinement schema>")
+    return Option.getOrElse(getExpected(this, verbose), () => `{ ${this.from} | filter }`)
   }
   /**
    * @since 1.0.0
@@ -1786,12 +1790,12 @@ export class TypeLiteralTransformation {
     for (const pst of propertySignatureTransformations) {
       const from = pst.from
       if (fromKeys[from]) {
-        throw new Error(errors_.getDuplicatePropertySignatureTransformationErrorMessage(from))
+        throw new Error(getDuplicatePropertySignatureTransformationErrorMessage(from))
       }
       fromKeys[from] = true
       const to = pst.to
       if (toKeys[to]) {
-        throw new Error(errors_.getDuplicatePropertySignatureTransformationErrorMessage(to))
+        throw new Error(getDuplicatePropertySignatureTransformationErrorMessage(to))
       }
       toKeys[to] = true
     }
@@ -1894,7 +1898,7 @@ export const getNumberIndexedAccess = (ast: AST): AST => {
     case "Suspend":
       return getNumberIndexedAccess(ast.f())
   }
-  throw new Error(errors_.getAPIErrorMessage("NumberIndexedAccess", `unsupported schema (${ast})`))
+  throw new Error(errors_.getErrorMessage("getNumberIndexedAccess", `unsupported schema (${ast})`))
 }
 
 /** @internal */
@@ -1919,19 +1923,19 @@ export const getPropertyKeyIndexedAccess = (ast: AST, name: PropertyKey): Proper
               case "TemplateLiteral": {
                 const regex = getTemplateLiteralRegExp(parameterBase)
                 if (regex.test(name)) {
-                  return new PropertySignature(name, is.type, false, false)
+                  return new PropertySignature(name, is.type, false, true)
                 }
                 break
               }
               case "StringKeyword":
-                return new PropertySignature(name, is.type, false, false)
+                return new PropertySignature(name, is.type, false, true)
             }
           }
         } else if (Predicate.isSymbol(name)) {
           for (const is of ast.indexSignatures) {
             const parameterBase = getParameterBase(is.parameter)
             if (isSymbolKeyword(parameterBase)) {
-              return new PropertySignature(name, is.type, false, false)
+              return new PropertySignature(name, is.type, false, true)
             }
           }
         }
@@ -1997,7 +2001,7 @@ export const record = (key: AST, value: AST): {
           propertySignatures.push(new PropertySignature(key.literal, value, false, true))
         } else {
           throw new Error(
-            errors_.getAPIErrorMessage("Record", `unsupported literal (${util_.formatUnknown(key.literal)})`)
+            errors_.getErrorMessage("record", `unsupported literal (${util_.formatUnknown(key.literal)})`)
           )
         }
         break
@@ -2008,7 +2012,7 @@ export const record = (key: AST, value: AST): {
         key.types.forEach(go)
         break
       default:
-        throw new Error(errors_.getAPIErrorMessage("Record", `unsupported key schema (${key})`))
+        throw new Error(errors_.getErrorMessage("record", `unsupported key schema (${key})`))
     }
   }
   go(key)
@@ -2054,7 +2058,7 @@ export const pick = (ast: AST, keys: ReadonlyArray<PropertyKey>): TypeLiteral |
         if (Option.isSome(annotation)) {
           return pick(annotation.value, keys)
         }
-        throw new Error(errors_.getAPIErrorMessage("Pick", "cannot handle this kind of transformation"))
+        throw new Error(errors_.getErrorMessage("pick", "cannot handle this kind of transformation"))
       }
     }
   }
@@ -2101,9 +2105,9 @@ export const partial = (ast: AST, options?: { readonly exact: true }): AST => {
     case "Suspend":
       return new Suspend(() => partial(ast.f(), options))
     case "Declaration":
-      throw new Error(errors_.getAPIErrorMessage("partial", "cannot handle declarations"))
+      throw new Error(errors_.getErrorMessage("partial", "cannot handle declarations"))
     case "Refinement":
-      throw new Error(errors_.getAPIErrorMessage("partial", "cannot handle refinements"))
+      throw new Error(errors_.getErrorMessage("partial", "cannot handle refinements"))
     case "Transformation": {
       if (
         isTypeLiteralTransformation(ast.transformation) &&
@@ -2111,7 +2115,7 @@ export const partial = (ast: AST, options?: { readonly exact: true }): AST => {
       ) {
         return new Transformation(partial(ast.from, options), partial(ast.to, options), ast.transformation)
       }
-      throw new Error(errors_.getAPIErrorMessage("partial", "cannot handle transformations"))
+      throw new Error(errors_.getErrorMessage("partial", "cannot handle transformations"))
     }
   }
   return ast
@@ -2140,9 +2144,9 @@ export const required = (ast: AST): AST => {
     case "Suspend":
       return new Suspend(() => required(ast.f()))
     case "Declaration":
-      throw new Error(errors_.getAPIErrorMessage("required", "cannot handle declarations"))
+      throw new Error(errors_.getErrorMessage("required", "cannot handle declarations"))
     case "Refinement":
-      throw new Error(errors_.getAPIErrorMessage("required", "cannot handle refinements"))
+      throw new Error(errors_.getErrorMessage("required", "cannot handle refinements"))
     case "Transformation": {
       if (
         isTypeLiteralTransformation(ast.transformation) &&
@@ -2150,7 +2154,7 @@ export const required = (ast: AST): AST => {
       ) {
         return new Transformation(required(ast.from), required(ast.to), ast.transformation)
       }
-      throw new Error(errors_.getAPIErrorMessage("required", "cannot handle transformations"))
+      throw new Error(errors_.getErrorMessage("required", "cannot handle transformations"))
     }
   }
   return ast
@@ -2209,20 +2213,20 @@ export const mutable = (ast: AST): AST => {
 /**
  * @since 1.0.0
  */
-export type Compiler<A> = (ast: AST) => A
+export type Compiler<A> = (ast: AST, path: ReadonlyArray<PropertyKey>) => A
 
 /**
  * @since 1.0.0
  */
 export type Match<A> = {
-  [K in AST["_tag"]]: (ast: Extract<AST, { _tag: K }>, compile: Compiler<A>) => A
+  [K in AST["_tag"]]: (ast: Extract<AST, { _tag: K }>, compile: Compiler<A>, path: ReadonlyArray<PropertyKey>) => A
 }
 
 /**
  * @since 1.0.0
  */
 export const getCompiler = <A>(match: Match<A>): Compiler<A> => {
-  const compile = (ast: AST): A => match[ast._tag](ast as any, compile)
+  const compile = (ast: AST, path: ReadonlyArray<PropertyKey>): A => match[ast._tag](ast as any, compile, path)
   return compile
 }
 
@@ -2372,11 +2376,6 @@ const toJSONAnnotations = (annotations: Annotations): object => {
   return out
 }
 
-/**
- * @since 1.0.0
- */
-export const hash = (ast: AST): number => Hash.string(JSON.stringify(ast, null, 2))
-
 /** @internal */
 export const getCardinality = (ast: AST): number => {
   switch (ast._tag) {
@@ -2554,7 +2553,7 @@ const _keyof = (ast: AST): Array<AST> => {
     case "Transformation":
       return _keyof(ast.to)
   }
-  throw new Error(errors_.getAPIErrorMessage("KeyOf", `unsupported schema (${ast})`))
+  throw new Error(errors_.getErrorMessage("keyof", `unsupported schema (${ast})`))
 }
 
 /** @internal */
@@ -2630,3 +2629,15 @@ const getExpected = (ast: AST, verbose: boolean): Option.Option<string> => {
     )
   }
 }
+
+const getDuplicateIndexSignatureErrorMessage = (name: "string" | "symbol"): string =>
+  `Duplicate index signature for type \`${name}\``
+
+const getIndexSignatureParameterErrorMessage =
+  "An index signature parameter type must be `string`, `symbol`, a template literal type or a refinement of the previous types"
+
+const getRequiredElementFollowinAnOptionalElementErrorMessage =
+  "A required element cannot follow an optional element. ts(1257)"
+
+const getDuplicatePropertySignatureTransformationErrorMessage = (name: PropertyKey): string =>
+  `Duplicate property signature transformation ${util_.formatUnknown(name)}`
diff --git a/src/Arbitrary.ts b/src/Arbitrary.ts
index 0fa165fa007687d435d498043e0caf07257d3c8f..083051eee69e7d3e11b53881801e7bdb674209ea 100644
--- a/src/Arbitrary.ts
+++ b/src/Arbitrary.ts
@@ -46,7 +46,7 @@ export const arbitrary =
  * @category arbitrary
  * @since 1.0.0
  */
-export const makeLazy = <A, I, R>(schema: Schema.Schema<A, I, R>): LazyArbitrary<A> => go(schema.ast, {})
+export const makeLazy = <A, I, R>(schema: Schema.Schema<A, I, R>): LazyArbitrary<A> => go(schema.ast, {}, [])
 
 /**
  * Returns a fast-check Arbitrary for the `A` type of the provided schema.
@@ -88,26 +88,29 @@ type Options = {
   readonly isSuspend?: boolean
 }
 
-const getRefinementFromArbitrary = (ast: AST.Refinement, options: Options) => {
+const getRefinementFromArbitrary = (ast: AST.Refinement, options: Options, path: ReadonlyArray<PropertyKey>) => {
   const constraints = combineConstraints(options.constraints, getConstraints(ast))
-  return go(ast.from, constraints ? { ...options, constraints } : options)
+  return go(ast.from, constraints ? { ...options, constraints } : options, path)
 }
 
-const go = (ast: AST.AST, options: Options): LazyArbitrary<any> => {
+const getArbitraryErrorMessage = (message: string, path: ReadonlyArray<PropertyKey>) =>
+  errors_.getErrorMessageWithPath(`cannot build an Arbitrary for ${message}`, path)
+
+const go = (ast: AST.AST, options: Options, path: ReadonlyArray<PropertyKey>): LazyArbitrary<any> => {
   const hook = getHook(ast)
   if (Option.isSome(hook)) {
     switch (ast._tag) {
       case "Declaration":
-        return hook.value(...ast.typeParameters.map((p) => go(p, options)))
+        return hook.value(...ast.typeParameters.map((p) => go(p, options, path)))
       case "Refinement":
-        return hook.value(getRefinementFromArbitrary(ast, options))
+        return hook.value(getRefinementFromArbitrary(ast, options, path))
       default:
         return hook.value()
     }
   }
   switch (ast._tag) {
     case "Declaration": {
-      throw new Error(errors_.getArbitraryErrorMessage(`a declaration without annotations (${ast})`))
+      throw new Error(getArbitraryErrorMessage(`a declaration without annotations (${ast})`, path))
     }
     case "Literal":
       return (fc) => fc.constant(ast.literal)
@@ -118,7 +121,7 @@ const go = (ast: AST.AST, options: Options): LazyArbitrary<any> => {
       return (fc) => fc.constant(undefined)
     case "NeverKeyword":
       return () => {
-        throw new Error(errors_.getArbitraryErrorMessage("`never`"))
+        throw new Error(getArbitraryErrorMessage("`never`", path))
       }
     case "UnknownKeyword":
     case "AnyKeyword":
@@ -180,13 +183,14 @@ const go = (ast: AST.AST, options: Options): LazyArbitrary<any> => {
     case "TupleType": {
       const elements: Array<LazyArbitrary<any>> = []
       let hasOptionals = false
+      let i = 0
       for (const element of ast.elements) {
-        elements.push(go(element.type, options))
+        elements.push(go(element.type, options, path.concat(i++)))
         if (element.isOptional) {
           hasOptionals = true
         }
       }
-      const rest = ast.rest.map((e) => go(e, options))
+      const rest = ast.rest.map((e) => go(e, options, path))
       return (fc) => {
         // ---------------------------------------------
         // handle elements
@@ -240,9 +244,9 @@ const go = (ast: AST.AST, options: Options): LazyArbitrary<any> => {
       }
     }
     case "TypeLiteral": {
-      const propertySignaturesTypes = ast.propertySignatures.map((f) => go(f.type, options))
+      const propertySignaturesTypes = ast.propertySignatures.map((ps) => go(ps.type, options, path.concat(ps.name)))
       const indexSignatures = ast.indexSignatures.map((is) =>
-        [go(is.parameter, options), go(is.type, options)] as const
+        [go(is.parameter, options, path), go(is.type, options, path)] as const
       )
       return (fc) => {
         const arbs: any = {}
@@ -274,25 +278,25 @@ const go = (ast: AST.AST, options: Options): LazyArbitrary<any> => {
       }
     }
     case "Union": {
-      const types = ast.types.map((t) => go(t, options))
+      const types = ast.types.map((t) => go(t, options, path))
       return (fc) => fc.oneof({ depthSize }, ...types.map((arb) => arb(fc)))
     }
     case "Enums": {
       if (ast.enums.length === 0) {
-        throw new Error(errors_.getArbitraryErrorMessage("an empty enum"))
+        throw new Error(getArbitraryErrorMessage("an empty enum", path))
       }
       return (fc) => fc.oneof(...ast.enums.map(([_, value]) => fc.constant(value)))
     }
     case "Refinement": {
-      const from = getRefinementFromArbitrary(ast, options)
+      const from = getRefinementFromArbitrary(ast, options, path)
       return (fc) => from(fc).filter((a) => Option.isNone(ast.filter(a, AST.defaultParseOption, ast)))
     }
     case "Suspend": {
-      const get = util_.memoizeThunk(() => go(ast.f(), { ...options, isSuspend: true }))
+      const get = util_.memoizeThunk(() => go(ast.f(), { ...options, isSuspend: true }, path))
       return (fc) => fc.constant(null).chain(() => get()(fc))
     }
     case "Transformation":
-      return go(ast.to, options)
+      return go(ast.to, options, path)
   }
 }
 
diff --git a/src/ArrayFormatter.ts b/src/ArrayFormatter.ts
index a7da7ffb74e59d4995cf07d50036c0a9a8ec5ef9..fd43fa226f4a810a8ca9db332e112e5bdf671268 100644
--- a/src/ArrayFormatter.ts
+++ b/src/ArrayFormatter.ts
@@ -12,7 +12,17 @@ import * as TreeFormatter from "./TreeFormatter.js"
  * @since 1.0.0
  */
 export interface Issue {
-  readonly _tag: ParseResult.ParseIssue["_tag"] | ParseResult.Missing["_tag"] | ParseResult.Unexpected["_tag"]
+  readonly _tag:
+    | "Transformation"
+    | "Type"
+    | "Declaration"
+    | "Refinement"
+    | "TupleType"
+    | "TypeLiteral"
+    | "Union"
+    | "Forbidden"
+    | "Missing"
+    | "Unexpected"
   readonly path: ReadonlyArray<PropertyKey>
   readonly message: string
 }
@@ -41,6 +51,8 @@ export const formatError = (error: ParseResult.ParseError): Effect.Effect<Array<
  */
 export const formatErrorSync = (error: ParseResult.ParseError): Array<Issue> => formatIssueSync(error.error)
 
+const succeed = (issue: Issue) => Effect.succeed([issue])
+
 const getArray = (
   issue: ParseResult.ParseIssue,
   path: ReadonlyArray<PropertyKey>,
@@ -48,9 +60,11 @@ const getArray = (
 ) =>
   Effect.matchEffect(TreeFormatter.getMessage(issue), {
     onFailure,
-    onSuccess: (message) => Effect.succeed<Array<Issue>>([{ _tag: issue._tag, path, message }])
+    onSuccess: (message) => succeed({ _tag: issue._tag, path, message })
   })
 
+const flatten = (eff: Effect.Effect<Array<Array<Issue>>>): Effect.Effect<Array<Issue>> => Effect.map(eff, Arr.flatten)
+
 const go = (
   e: ParseResult.ParseIssue | ParseResult.Missing | ParseResult.Unexpected,
   path: ReadonlyArray<PropertyKey> = []
@@ -60,14 +74,14 @@ const go = (
     case "Type":
       return Effect.map(TreeFormatter.formatTypeMessage(e), (message) => [{ _tag, path, message }])
     case "Forbidden":
-      return Effect.succeed([{ _tag, path, message: TreeFormatter.formatForbiddenMessage(e) }])
+      return succeed({ _tag, path, message: TreeFormatter.formatForbiddenMessage(e) })
     case "Unexpected":
-      return Effect.succeed([{ _tag, path, message: `is unexpected, expected ${e.ast.toString(true)}` }])
+      return succeed({ _tag, path, message: `is unexpected, expected ${e.ast.toString(true)}` })
     case "Missing":
-      return Effect.succeed([{ _tag, path, message: "is missing" }])
+      return succeed({ _tag, path, message: "is missing" })
     case "Union":
       return getArray(e, path, () =>
-        Effect.map(
+        flatten(
           Effect.forEach(e.errors, (e) => {
             switch (e._tag) {
               case "Member":
@@ -75,24 +89,23 @@ const go = (
               default:
                 return go(e, path)
             }
-          }),
-          Arr.flatten
+          })
         ))
     case "TupleType":
-      return getArray(e, path, () =>
-        Effect.map(
-          Effect.forEach(e.errors, (index) => go(index.error, [...path, index.index])),
-          Arr.flatten
-        ))
+      return getArray(
+        e,
+        path,
+        () => flatten(Effect.forEach(e.errors, (index) => go(index.error, path.concat(index.index))))
+      )
     case "TypeLiteral":
-      return getArray(e, path, () =>
-        Effect.map(
-          Effect.forEach(e.errors, (key) => go(key.error, [...path, key.key])),
-          Arr.flatten
-        ))
-    case "Transformation":
-    case "Refinement":
+      return getArray(
+        e,
+        path,
+        () => flatten(Effect.forEach(e.errors, (key) => go(key.error, path.concat(key.key))))
+      )
     case "Declaration":
+    case "Refinement":
+    case "Transformation":
       return getArray(e, path, () => go(e.error, path))
   }
 }
diff --git a/src/Equivalence.ts b/src/Equivalence.ts
index fa26cb1bae47d8d1e0475a2f9417acb70e97df1d..cb517e1fc363e18fefe791673ca7ebd91e97bcb7 100644
--- a/src/Equivalence.ts
+++ b/src/Equivalence.ts
@@ -37,7 +37,7 @@ export const equivalence =
  * @category Equivalence
  * @since 1.0.0
  */
-export const make = <A, I, R>(schema: Schema.Schema<A, I, R>): Equivalence.Equivalence<A> => go(schema.ast)
+export const make = <A, I, R>(schema: Schema.Schema<A, I, R>): Equivalence.Equivalence<A> => go(schema.ast, [])
 
 const getHook = AST.getAnnotation<
   (...args: ReadonlyArray<Equivalence.Equivalence<any>>) => Equivalence.Equivalence<any>
@@ -45,23 +45,26 @@ const getHook = AST.getAnnotation<
   EquivalenceHookId
 )
 
-const go = (ast: AST.AST): Equivalence.Equivalence<any> => {
+const getEquivalenceErrorMessage = (message: string, path: ReadonlyArray<PropertyKey>) =>
+  errors_.getErrorMessageWithPath(`cannot build an Equivalence for ${message}`, path)
+
+const go = (ast: AST.AST, path: ReadonlyArray<PropertyKey>): Equivalence.Equivalence<any> => {
   const hook = getHook(ast)
   if (Option.isSome(hook)) {
     switch (ast._tag) {
       case "Declaration":
-        return hook.value(...ast.typeParameters.map(go))
+        return hook.value(...ast.typeParameters.map((tp) => go(tp, path)))
       case "Refinement":
-        return hook.value(go(ast.from))
+        return hook.value(go(ast.from, path))
       default:
         return hook.value()
     }
   }
   switch (ast._tag) {
     case "NeverKeyword":
-      throw new Error(errors_.getEquivalenceErrorMessage("`never`"))
+      throw new Error(getEquivalenceErrorMessage("`never`", path))
     case "Transformation":
-      return go(ast.to)
+      return go(ast.to, path)
     case "Declaration":
     case "Literal":
     case "StringKeyword":
@@ -79,14 +82,14 @@ const go = (ast: AST.AST): Equivalence.Equivalence<any> => {
     case "ObjectKeyword":
       return Equal.equals
     case "Refinement":
-      return go(ast.from)
+      return go(ast.from, path)
     case "Suspend": {
-      const get = util_.memoizeThunk(() => go(ast.f()))
+      const get = util_.memoizeThunk(() => go(ast.f(), path))
       return (a, b) => get()(a, b)
     }
     case "TupleType": {
-      const elements = ast.elements.map((element) => go(element.type))
-      const rest = ast.rest.map(go)
+      const elements = ast.elements.map((element, i) => go(element.type, path.concat(i)))
+      const rest = ast.rest.map((ast) => go(ast, path))
       return Equivalence.make((a, b) => {
         const len = a.length
         if (len !== b.length) {
@@ -128,8 +131,8 @@ const go = (ast: AST.AST): Equivalence.Equivalence<any> => {
       if (ast.propertySignatures.length === 0 && ast.indexSignatures.length === 0) {
         return Equal.equals
       }
-      const propertySignatures = ast.propertySignatures.map((ps) => go(ps.type))
-      const indexSignatures = ast.indexSignatures.map((is) => go(is.type))
+      const propertySignatures = ast.propertySignatures.map((ps) => go(ps.type, path.concat(ps.name)))
+      const indexSignatures = ast.indexSignatures.map((is) => go(is.type, path))
       return Equivalence.make((a, b) => {
         const aStringKeys = Object.keys(a)
         const aSymbolKeys = Object.getOwnPropertySymbols(a)
@@ -204,7 +207,7 @@ const go = (ast: AST.AST): Equivalence.Equivalence<any> => {
         if (searchTree.otherwise.length > 0) {
           candidates = candidates.concat(searchTree.otherwise)
         }
-        const tuples = candidates.map((ast) => [go(ast), ParseResult.is({ ast } as any)] as const)
+        const tuples = candidates.map((ast) => [go(ast, path), ParseResult.is({ ast } as any)] as const)
         for (let i = 0; i < tuples.length; i++) {
           const [equivalence, is] = tuples[i]
           if (is(a) && is(b)) {
diff --git a/src/JSONSchema.ts b/src/JSONSchema.ts
index 530d32aeee53761e1a8b2af362c68b7de594f25e..3c5ebddb9384ed37faa4a746b1c5ae5c2d968e70 100644
--- a/src/JSONSchema.ts
+++ b/src/JSONSchema.ts
@@ -6,13 +6,25 @@ import * as Option from "effect/Option"
 import * as Predicate from "effect/Predicate"
 import * as Record from "effect/Record"
 import * as AST from "./AST.js"
+import * as errors_ from "./internal/errors.js"
 import type * as Schema from "./Schema.js"
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Any {
+export interface JsonSchemaAnnotations {
+  title?: string
+  description?: string
+  default?: unknown
+  examples?: Array<unknown>
+}
+
+/**
+ * @category model
+ * @since 1.0.0
+ */
+export interface JsonSchema7Any extends JsonSchemaAnnotations {
   $id: "/schemas/any"
 }
 
@@ -20,7 +32,7 @@ export interface JsonSchema7Any {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Unknown {
+export interface JsonSchema7Unknown extends JsonSchemaAnnotations {
   $id: "/schemas/unknown"
 }
 
@@ -28,7 +40,7 @@ export interface JsonSchema7Unknown {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7object {
+export interface JsonSchema7object extends JsonSchemaAnnotations {
   $id: "/schemas/object"
   oneOf: [
     { type: "object" },
@@ -40,7 +52,7 @@ export interface JsonSchema7object {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7empty {
+export interface JsonSchema7empty extends JsonSchemaAnnotations {
   $id: "/schemas/{}"
   oneOf: [
     { type: "object" },
@@ -52,7 +64,7 @@ export interface JsonSchema7empty {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Ref {
+export interface JsonSchema7Ref extends JsonSchemaAnnotations {
   $ref: string
 }
 
@@ -60,7 +72,7 @@ export interface JsonSchema7Ref {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Const {
+export interface JsonSchema7Const extends JsonSchemaAnnotations {
   const: AST.LiteralValue
 }
 
@@ -68,19 +80,18 @@ export interface JsonSchema7Const {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7String {
+export interface JsonSchema7String extends JsonSchemaAnnotations {
   type: "string"
   minLength?: number
   maxLength?: number
   pattern?: string
-  description?: string
 }
 
 /**
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Numeric {
+export interface JsonSchema7Numeric extends JsonSchemaAnnotations {
   minimum?: number
   exclusiveMinimum?: number
   maximum?: number
@@ -107,7 +118,7 @@ export interface JsonSchema7Integer extends JsonSchema7Numeric {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Boolean {
+export interface JsonSchema7Boolean extends JsonSchemaAnnotations {
   type: "boolean"
 }
 
@@ -115,7 +126,7 @@ export interface JsonSchema7Boolean {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Array {
+export interface JsonSchema7Array extends JsonSchemaAnnotations {
   type: "array"
   items?: JsonSchema7 | Array<JsonSchema7>
   minItems?: number
@@ -127,7 +138,7 @@ export interface JsonSchema7Array {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7OneOf {
+export interface JsonSchema7OneOf extends JsonSchemaAnnotations {
   oneOf: Array<JsonSchema7>
 }
 
@@ -135,7 +146,7 @@ export interface JsonSchema7OneOf {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Enum {
+export interface JsonSchema7Enum extends JsonSchemaAnnotations {
   enum: Array<AST.LiteralValue>
 }
 
@@ -143,7 +154,7 @@ export interface JsonSchema7Enum {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Enums {
+export interface JsonSchema7Enums extends JsonSchemaAnnotations {
   $comment: "/schemas/enums"
   oneOf: Array<{
     title: string
@@ -155,7 +166,7 @@ export interface JsonSchema7Enums {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7AnyOf {
+export interface JsonSchema7AnyOf extends JsonSchemaAnnotations {
   anyOf: Array<JsonSchema7>
 }
 
@@ -163,7 +174,7 @@ export interface JsonSchema7AnyOf {
  * @category model
  * @since 1.0.0
  */
-export interface JsonSchema7Object {
+export interface JsonSchema7Object extends JsonSchemaAnnotations {
   type: "object"
   required: Array<string>
   properties: Record<string, JsonSchema7>
@@ -208,7 +219,7 @@ export type JsonSchema7Root = JsonSchema7 & {
  */
 export const make = <A, I, R>(schema: Schema.Schema<A, I, R>): JsonSchema7Root => {
   const $defs: Record<string, any> = {}
-  const jsonSchema = go(schema.ast, $defs)
+  const jsonSchema = go(schema.ast, $defs, true, [])
   const out: JsonSchema7Root = {
     $schema,
     ...jsonSchema
@@ -247,7 +258,7 @@ const empty = (): JsonSchema7 => ({
 
 const $schema = "http://json-schema.org/draft-07/schema#"
 
-const getMeta = (annotated: AST.Annotated) =>
+const getJsonSchemaAnnotations = (annotated: AST.Annotated): JsonSchemaAnnotations =>
   Record.getSomes({
     description: AST.getDescriptionAnnotation(annotated),
     title: AST.getTitleAnnotation(annotated),
@@ -263,101 +274,119 @@ const pruneUndefinedKeyword = (ps: AST.PropertySignature): AST.AST => {
   return type
 }
 
-const getMissingAnnotationError = (name: string) => {
-  const out = new Error(`cannot build a JSON Schema for ${name} without a JSON Schema annotation`)
-  out.name = "MissingAnnotation"
-  return out
-}
+const getMissingAnnotationErrorMessage = (name: string, path: ReadonlyArray<PropertyKey>): string =>
+  errors_.getErrorMessageWithPath(`cannot build a JSON Schema for ${name} without a JSON Schema annotation`, path)
 
-const getUnsupportedIndexSignatureParameterErrorMessage = (parameter: AST.AST): string =>
-  `Unsupported index signature parameter (${parameter})`
+const getUnsupportedIndexSignatureParameterErrorMessage = (
+  parameter: AST.AST,
+  path: ReadonlyArray<PropertyKey>
+): string => errors_.getErrorMessageWithPath(`unsupported index signature parameter (${parameter})`, path)
 
 /** @internal */
 export const DEFINITION_PREFIX = "#/$defs/"
 
 const get$ref = (id: string): string => `${DEFINITION_PREFIX}${id}`
 
-const go = (ast: AST.AST, $defs: Record<string, JsonSchema7>, handleIdentifier: boolean = true): JsonSchema7 => {
+const hasTransformation = (ast: AST.Refinement): boolean => {
+  switch (ast.from._tag) {
+    case "Transformation":
+      return true
+    case "Refinement":
+      return hasTransformation(ast.from)
+    case "Suspend":
+      {
+        const from = ast.from.f()
+        if (AST.isRefinement(from)) {
+          return hasTransformation(from)
+        }
+      }
+      break
+  }
+  return false
+}
+
+const go = (
+  ast: AST.AST,
+  $defs: Record<string, JsonSchema7>,
+  handleIdentifier: boolean,
+  path: ReadonlyArray<PropertyKey>
+): JsonSchema7 => {
   const hook = AST.getJSONSchemaAnnotation(ast)
   if (Option.isSome(hook)) {
     const handler = hook.value as JsonSchema7
-    switch (ast._tag) {
-      case "Refinement":
-        try {
-          return { ...go(ast.from, $defs), ...getMeta(ast), ...handler }
-        } catch (e) {
-          if (e instanceof Error && e.name === "MissingAnnotation") {
-            return { ...getMeta(ast), ...handler }
-          }
-          throw e
-        }
+    if (AST.isRefinement(ast) && !hasTransformation(ast)) {
+      try {
+        return { ...go(ast.from, $defs, true, path), ...getJsonSchemaAnnotations(ast), ...handler }
+      } catch (e) {
+        return { ...getJsonSchemaAnnotations(ast), ...handler }
+      }
     }
     return handler
   }
   const surrogate = AST.getSurrogateAnnotation(ast)
   if (Option.isSome(surrogate)) {
-    return go(surrogate.value, $defs, handleIdentifier)
+    return go(surrogate.value, $defs, handleIdentifier, path)
   }
-  if (handleIdentifier) {
+  if (handleIdentifier && !AST.isTransformation(ast)) {
     const identifier = AST.getJSONIdentifier(ast)
     if (Option.isSome(identifier)) {
       const id = identifier.value
       const out = { $ref: get$ref(id) }
       if (!Record.has($defs, id)) {
         $defs[id] = out
-        $defs[id] = go(ast, $defs, false)
+        $defs[id] = go(ast, $defs, false, path)
       }
       return out
     }
   }
   switch (ast._tag) {
     case "Declaration":
-      throw getMissingAnnotationError("a declaration")
+      throw new Error(getMissingAnnotationErrorMessage("a declaration", path))
     case "Literal": {
       const literal = ast.literal
       if (literal === null) {
-        return { const: null, ...getMeta(ast) }
+        return { const: null, ...getJsonSchemaAnnotations(ast) }
       } else if (Predicate.isString(literal)) {
-        return { const: literal, ...getMeta(ast) }
+        return { const: literal, ...getJsonSchemaAnnotations(ast) }
       } else if (Predicate.isNumber(literal)) {
-        return { const: literal, ...getMeta(ast) }
+        return { const: literal, ...getJsonSchemaAnnotations(ast) }
       } else if (Predicate.isBoolean(literal)) {
-        return { const: literal, ...getMeta(ast) }
+        return { const: literal, ...getJsonSchemaAnnotations(ast) }
       }
-      throw getMissingAnnotationError("a bigint literal")
+      throw new Error(getMissingAnnotationErrorMessage("a bigint literal", path))
     }
     case "UniqueSymbol":
-      throw getMissingAnnotationError("a unique symbol")
+      throw new Error(getMissingAnnotationErrorMessage("a unique symbol", path))
     case "UndefinedKeyword":
-      throw getMissingAnnotationError("`undefined`")
+      throw new Error(getMissingAnnotationErrorMessage("`undefined`", path))
     case "VoidKeyword":
-      throw getMissingAnnotationError("`void`")
+      throw new Error(getMissingAnnotationErrorMessage("`void`", path))
     case "NeverKeyword":
-      throw getMissingAnnotationError("`never`")
+      throw new Error(getMissingAnnotationErrorMessage("`never`", path))
     case "UnknownKeyword":
-      return { ...unknownJsonSchema, ...getMeta(ast) }
+      return { ...unknownJsonSchema, ...getJsonSchemaAnnotations(ast) }
     case "AnyKeyword":
-      return { ...anyJsonSchema, ...getMeta(ast) }
+      return { ...anyJsonSchema, ...getJsonSchemaAnnotations(ast) }
     case "ObjectKeyword":
-      return { ...objectJsonSchema, ...getMeta(ast) }
+      return { ...objectJsonSchema, ...getJsonSchemaAnnotations(ast) }
     case "StringKeyword":
-      return { type: "string", ...getMeta(ast) }
+      return { type: "string", ...getJsonSchemaAnnotations(ast) }
     case "NumberKeyword":
-      return { type: "number", ...getMeta(ast) }
+      return { type: "number", ...getJsonSchemaAnnotations(ast) }
     case "BooleanKeyword":
-      return { type: "boolean", ...getMeta(ast) }
+      return { type: "boolean", ...getJsonSchemaAnnotations(ast) }
     case "BigIntKeyword":
-      throw getMissingAnnotationError("`bigint`")
+      throw new Error(getMissingAnnotationErrorMessage("`bigint`", path))
     case "SymbolKeyword":
-      throw getMissingAnnotationError("`symbol`")
+      throw new Error(getMissingAnnotationErrorMessage("`symbol`", path))
     case "TupleType": {
-      const elements = ast.elements.map((e) => go(e.type, $defs))
-      const rest = ast.rest.map((ast) => go(ast, $defs))
+      const len = ast.elements.length
+      const elements = ast.elements.map((e, i) => go(e.type, $defs, true, path.concat(i)))
+      const rest = ast.rest.map((ast) => go(ast, $defs, true, path))
       const output: JsonSchema7Array = { type: "array" }
       // ---------------------------------------------
       // handle elements
       // ---------------------------------------------
-      const len = elements.length
       if (len > 0) {
         output.minItems = len - ast.elements.filter((element) => element.isOptional).length
         output.items = elements
@@ -378,7 +407,10 @@ const go = (ast: AST.AST, $defs: Record<string, JsonSchema7>, handleIdentifier:
         // ---------------------------------------------
         if (rest.length > 1) {
           throw new Error(
-            "Generating a JSON Schema for post-rest elements is not currently supported. You're welcome to contribute by submitting a Pull Request."
+            errors_.getErrorMessageWithPath(
+              "Generating a JSON Schema for post-rest elements is not currently supported. You're welcome to contribute by submitting a Pull Request.",
+              path
+            )
           )
         }
       } else {
@@ -389,11 +421,11 @@ const go = (ast: AST.AST, $defs: Record<string, JsonSchema7>, handleIdentifier:
         }
       }
 
-      return { ...output, ...getMeta(ast) }
+      return { ...output, ...getJsonSchemaAnnotations(ast) }
     }
     case "TypeLiteral": {
       if (ast.propertySignatures.length === 0 && ast.indexSignatures.length === 0) {
-        return { ...empty(), ...getMeta(ast) }
+        return { ...empty(), ...getJsonSchemaAnnotations(ast) }
       }
       let additionalProperties: JsonSchema7 | undefined = undefined
       let patternProperties: Record<string, JsonSchema7> | undefined = undefined
@@ -401,15 +433,12 @@ const go = (ast: AST.AST, $defs: Record<string, JsonSchema7>, handleIdentifier:
         const parameter = is.parameter
         switch (parameter._tag) {
           case "StringKeyword": {
-            additionalProperties = go(is.type, $defs)
+            additionalProperties = go(is.type, $defs, true, path)
             break
           }
           case "TemplateLiteral": {
             patternProperties = {
-              [AST.getTemplateLiteralRegExp(parameter).source]: go(
-                is.type,
-                $defs
-              )
+              [AST.getTemplateLiteralRegExp(parameter).source]: go(is.type, $defs, true, path)
             }
             break
           }
@@ -420,21 +449,21 @@ const go = (ast: AST.AST, $defs: Record<string, JsonSchema7>, handleIdentifier:
               Predicate.isString(hook.value.pattern)
             ) {
               patternProperties = {
-                [hook.value.pattern]: go(
-                  is.type,
-                  $defs
-                )
+                [hook.value.pattern]: go(is.type, $defs, true, path)
               }
               break
             }
-            throw new Error(getUnsupportedIndexSignatureParameterErrorMessage(parameter))
+            throw new Error(getUnsupportedIndexSignatureParameterErrorMessage(parameter, path))
           }
           case "SymbolKeyword":
-            throw new Error(getUnsupportedIndexSignatureParameterErrorMessage(parameter))
+            throw new Error(getUnsupportedIndexSignatureParameterErrorMessage(parameter, path))
         }
       }
       const propertySignatures = ast.propertySignatures.map((ps) => {
-        return { ...go(pruneUndefinedKeyword(ps), $defs), ...getMeta(ps) }
+        return {
+          ...go(pruneUndefinedKeyword(ps), $defs, true, path.concat(ps.name)),
+          ...getJsonSchemaAnnotations(ps)
+        }
       })
       const output: JsonSchema7Object = {
         type: "object",
@@ -456,7 +485,7 @@ const go = (ast: AST.AST, $defs: Record<string, JsonSchema7>, handleIdentifier:
             output.required.push(name)
           }
         } else {
-          throw new Error(`cannot encode ${String(name)} key to JSON Schema`)
+          throw new Error(errors_.getErrorMessageWithPath(`cannot encode ${String(name)} key to JSON Schema`, path))
         }
       }
       // ---------------------------------------------
@@ -469,13 +498,13 @@ const go = (ast: AST.AST, $defs: Record<string, JsonSchema7>, handleIdentifier:
         output.patternProperties = patternProperties
       }
 
-      return { ...output, ...getMeta(ast) }
+      return { ...output, ...getJsonSchemaAnnotations(ast) }
     }
     case "Union": {
       const enums: Array<AST.LiteralValue> = []
       const anyOf: Array<JsonSchema7> = []
       for (const type of ast.types) {
-        const schema = go(type, $defs)
+        const schema = go(type, $defs, true, path)
         if ("const" in schema) {
           if (Object.keys(schema).length > 1) {
             anyOf.push(schema)
@@ -488,9 +517,9 @@ const go = (ast: AST.AST, $defs: Record<string, JsonSchema7>, handleIdentifier:
       }
       if (anyOf.length === 0) {
         if (enums.length === 1) {
-          return { const: enums[0], ...getMeta(ast) }
+          return { const: enums[0], ...getJsonSchemaAnnotations(ast) }
         } else {
-          return { enum: enums, ...getMeta(ast) }
+          return { enum: enums, ...getJsonSchemaAnnotations(ast) }
         }
       } else {
         if (enums.length === 1) {
@@ -498,18 +527,23 @@ const go = (ast: AST.AST, $defs: Record<string, JsonSchema7>, handleIdentifier:
         } else if (enums.length > 1) {
           anyOf.push({ enum: enums })
         }
-        return { anyOf, ...getMeta(ast) }
+        return { anyOf, ...getJsonSchemaAnnotations(ast) }
       }
     }
     case "Enums": {
       return {
         $comment: "/schemas/enums",
         oneOf: ast.enums.map((e) => ({ title: e[0], const: e[1] })),
-        ...getMeta(ast)
+        ...getJsonSchemaAnnotations(ast)
       }
     }
     case "Refinement": {
-      throw new Error("cannot build a JSON Schema for a refinement without a JSON Schema annotation")
+      throw new Error(
+        errors_.getErrorMessageWithPath(
+          "cannot build a JSON Schema for a refinement without a JSON Schema annotation",
+          path
+        )
+      )
     }
     case "TemplateLiteral": {
       const regex = AST.getTemplateLiteralRegExp(ast)
@@ -517,19 +551,22 @@ const go = (ast: AST.AST, $defs: Record<string, JsonSchema7>, handleIdentifier:
         type: "string",
         description: "a template literal",
         pattern: regex.source,
-        ...getMeta(ast)
+        ...getJsonSchemaAnnotations(ast)
       }
     }
     case "Suspend": {
       const identifier = Option.orElse(AST.getJSONIdentifier(ast), () => AST.getJSONIdentifier(ast.f()))
       if (Option.isNone(identifier)) {
         throw new Error(
-          "Generating a JSON Schema for suspended schemas requires an identifier annotation"
+          errors_.getErrorMessageWithPath(
+            "Generating a JSON Schema for suspended schemas requires an identifier annotation",
+            path
+          )
         )
       }
-      return go(ast.f(), $defs)
+      return go(ast.f(), $defs, true, path)
     }
     case "Transformation":
-      return go(ast.to, $defs)
+      return go(ast.from, $defs, true, path)
   }
 }
diff --git a/src/ParseResult.ts b/src/ParseResult.ts
index f4357902a1c202d4589971b4d3cac4e925640024..8d517df58109cf4b39d13d59dd78ceb3817d222f 100644
--- a/src/ParseResult.ts
+++ b/src/ParseResult.ts
@@ -495,7 +495,10 @@ const getEither = (ast: AST.AST, isDecoding: boolean, options?: AST.ParseOptions
 const getSync = (ast: AST.AST, isDecoding: boolean, options?: AST.ParseOptions) => {
   const parser = getEither(ast, isDecoding, options)
   return (input: unknown, overrideOptions?: AST.ParseOptions) =>
-    Either.getOrThrowWith(parser(input, overrideOptions), (e) => new Error(TreeFormatter.formatIssueSync(e)))
+    Either.getOrThrowWith(
+      parser(input, overrideOptions),
+      (issue) => new Error(TreeFormatter.formatIssueSync(issue), { cause: issue })
+    )
 }
 
 const getOption = (ast: AST.AST, isDecoding: boolean, options?: AST.ParseOptions) => {
diff --git a/src/Pretty.ts b/src/Pretty.ts
index a87ac878f1b77d4ec181ae472796a6bc381ca364..4b3f3910f6cab47fdfd0c26095b9d0eca5d13fae 100644
--- a/src/Pretty.ts
+++ b/src/Pretty.ts
@@ -41,7 +41,7 @@ export const pretty =
  * @category prettify
  * @since 1.0.0
  */
-export const make = <A, I, R>(schema: Schema.Schema<A, I, R>): (a: A) => string => compile(schema.ast)
+export const make = <A, I, R>(schema: Schema.Schema<A, I, R>): (a: A) => string => compile(schema.ast, [])
 
 const getHook = AST.getAnnotation<(...args: ReadonlyArray<Pretty<any>>) => Pretty<any>>(
   PrettyHookId
@@ -59,16 +59,19 @@ const stringify = getMatcher((a) => JSON.stringify(a))
 
 const formatUnknown = getMatcher(util_.formatUnknown)
 
+const getPrettyErrorMessage = (message: string, path: ReadonlyArray<PropertyKey>) =>
+  errors_.getErrorMessageWithPath(`cannot build a Pretty for ${message}`, path)
+
 /**
  * @since 1.0.0
  */
 export const match: AST.Match<Pretty<any>> = {
-  "Declaration": (ast, go) => {
+  "Declaration": (ast, go, path) => {
     const hook = getHook(ast)
     if (Option.isSome(hook)) {
-      return hook.value(...ast.typeParameters.map(go))
+      return hook.value(...ast.typeParameters.map((tp) => go(tp, path)))
     }
-    throw new Error(errors_.getPrettyErrorMessage(`a declaration without annotations (${ast})`))
+    throw new Error(getPrettyErrorMessage(`a declaration without annotations (${ast})`, path))
   },
   "VoidKeyword": getMatcher(() => "void(0)"),
   "NeverKeyword": getMatcher(() => {
@@ -91,13 +94,13 @@ export const match: AST.Match<Pretty<any>> = {
   "BooleanKeyword": toString,
   "BigIntKeyword": getMatcher((a) => `${String(a)}n`),
   "Enums": stringify,
-  "TupleType": (ast, go) => {
+  "TupleType": (ast, go, path) => {
     const hook = getHook(ast)
     if (Option.isSome(hook)) {
       return hook.value()
     }
-    const elements = ast.elements.map((e) => go(e.type))
-    const rest = ast.rest.map(go)
+    const elements = ast.elements.map((e, i) => go(e.type, path.concat(i)))
+    const rest = ast.rest.map((ast) => go(ast, path))
     return (input: ReadonlyArray<unknown>) => {
       const output: Array<string> = []
       let i = 0
@@ -133,13 +136,13 @@ export const match: AST.Match<Pretty<any>> = {
       return "[" + output.join(", ") + "]"
     }
   },
-  "TypeLiteral": (ast, go) => {
+  "TypeLiteral": (ast, go, path) => {
     const hook = getHook(ast)
     if (Option.isSome(hook)) {
       return hook.value()
     }
-    const propertySignaturesTypes = ast.propertySignatures.map((f) => go(f.type))
-    const indexSignatureTypes = ast.indexSignatures.map((is) => go(is.type))
+    const propertySignaturesTypes = ast.propertySignatures.map((ps) => go(ps.type, path.concat(ps.name)))
+    const indexSignatureTypes = ast.indexSignatures.map((is) => go(is.type, path))
     const expectedKeys: any = {}
     for (let i = 0; i < propertySignaturesTypes.length; i++) {
       expectedKeys[ast.propertySignatures[i].name] = null
@@ -178,35 +181,35 @@ export const match: AST.Match<Pretty<any>> = {
       return Arr.isNonEmptyReadonlyArray(output) ? "{ " + output.join(", ") + " }" : "{}"
     }
   },
-  "Union": (ast, go) => {
+  "Union": (ast, go, path) => {
     const hook = getHook(ast)
     if (Option.isSome(hook)) {
       return hook.value()
     }
-    const types = ast.types.map((ast) => [ParseResult.is({ ast } as any), go(ast)] as const)
+    const types = ast.types.map((ast) => [ParseResult.is({ ast } as any), go(ast, path)] as const)
     return (a) => {
       const index = types.findIndex(([is]) => is(a))
       return types[index][1](a)
     }
   },
-  "Suspend": (ast, go) => {
+  "Suspend": (ast, go, path) => {
     return Option.match(getHook(ast), {
       onNone: () => {
-        const get = util_.memoizeThunk(() => go(ast.f()))
+        const get = util_.memoizeThunk(() => go(ast.f(), path))
         return (a) => get()(a)
       },
       onSome: (handler) => handler()
     })
   },
-  "Refinement": (ast, go) => {
+  "Refinement": (ast, go, path) => {
     return Option.match(getHook(ast), {
-      onNone: () => go(ast.from),
+      onNone: () => go(ast.from, path),
       onSome: (handler) => handler()
     })
   },
-  "Transformation": (ast, go) => {
+  "Transformation": (ast, go, path) => {
     return Option.match(getHook(ast), {
-      onNone: () => go(ast.to),
+      onNone: () => go(ast.to, path),
       onSome: (handler) => handler()
     })
   }
diff --git a/src/Schema.ts b/src/Schema.ts
index f403a07094b27aed10129632de45a55e2ca0002a..63e43a685e0fa9947abf68fc3be15b6e619f0fd9 100644
--- a/src/Schema.ts
+++ b/src/Schema.ts
@@ -6,7 +6,7 @@ import * as array_ from "effect/Array"
 import * as bigDecimal_ from "effect/BigDecimal"
 import * as bigInt_ from "effect/BigInt"
 import * as boolean_ from "effect/Boolean"
-import * as brand_ from "effect/Brand"
+import type { Brand } from "effect/Brand"
 import * as cause_ from "effect/Cause"
 import * as chunk_ from "effect/Chunk"
 import * as data_ from "effect/Data"
@@ -47,7 +47,6 @@ import * as util_ from "./internal/util.js"
 import * as ParseResult from "./ParseResult.js"
 import * as pretty_ from "./Pretty.js"
 import type * as Serializable from "./Serializable.js"
-import * as TreeFormatter from "./TreeFormatter.js"
 
 /**
  * @since 1.0.0
@@ -73,10 +72,40 @@ export type TypeId = typeof TypeId
  * @since 1.0.0
  */
 export interface Schema<in out A, in out I = A, out R = never> extends Schema.Variance<A, I, R>, Pipeable {
+  readonly Type: A
+  readonly Encoded: I
   readonly ast: AST.AST
   annotations(annotations: Annotations.Schema<A>): Schema<A, I, R>
 }
 
+/**
+ * @category model
+ * @since 1.0.0
+ */
+export interface SchemaClass<A, I = A, R = never> extends AnnotableClass<SchemaClass<A, I, R>, A, I, R> {}
+
+/**
+ * @category constructors
+ * @since 1.0.0
+ */
+export const make = <A, I = A, R = never>(ast: AST.AST): SchemaClass<A, I, R> =>
+  class SchemaClass {
+    [TypeId] = variance
+    static Type: A
+    static Encoded: I
+    static [TypeId] = variance
+    static ast = ast
+    static annotations(annotations: Annotations.Schema<A>) {
+      return make<A, I, R>(AST.annotations(this.ast, toASTAnnotations(annotations)))
+    }
+    static pipe() {
+      return pipeArguments(this, arguments)
+    }
+    static toString() {
+      return String(ast)
+    }
+  }
+
 const variance = {
   /* c8 ignore next */
   _A: (_: any) => _,
@@ -133,20 +162,6 @@ const toASTAnnotations = (
   return out
 }
 
-class SchemaImpl<in out A, in out I = A, out R = never> implements Schema.Variance<A, I, R>, Pipeable {
-  readonly [TypeId] = variance
-  constructor(readonly ast: AST.AST) {}
-  pipe() {
-    return pipeArguments(this, arguments)
-  }
-  annotations(annotations: Annotations.Schema<A>): Schema<A, I, R> {
-    return new SchemaImpl(AST.annotations(this.ast, toASTAnnotations(annotations)))
-  }
-  toString() {
-    return String(this.ast)
-  }
-}
-
 /**
  * @category annotations
  * @since 1.0.0
@@ -181,17 +196,19 @@ export interface Annotable<Self extends Schema<A, I, R>, A, I = A, R = never> ex
 }
 
 /**
+ * @category annotations
  * @since 1.0.0
  */
-export const asSchema = <S extends Schema.All>(
-  schema: S
-): Schema<Schema.Type<S>, Schema.Encoded<S>, Schema.Context<S>> => schema as any
+export interface AnnotableClass<Self extends Schema<A, I, R>, A, I = A, R = never> extends Annotable<Self, A, I, R> {
+  new(_: never): Schema.Variance<A, I, R>
+}
 
 /**
- * @category hashing
  * @since 1.0.0
  */
-export const hash = <A, I, R>(schema: Schema<A, I, R>): number => AST.hash(schema.ast)
+export const asSchema = <S extends Schema.All>(
+  schema: S
+): Schema<Schema.Type<S>, Schema.Encoded<S>, Schema.Context<S>> => schema as any
 
 /**
  * @category formatting
@@ -261,17 +278,24 @@ export declare namespace Schema {
     | Schema<any, never, unknown>
     | Schema<never, any, unknown>
     | Schema<never, never, unknown>
+
+  /**
+   * Type-level counterpart of `Schema.asSchema` function.
+   *
+   * @since 1.0.0
+   */
+  export type AsSchema<S extends All> = Schema<Type<S>, Encoded<S>, Context<S>>
 }
 
 /**
  * @since 1.0.0
  */
-export const encodedSchema = <A, I, R>(schema: Schema<A, I, R>): Schema<I> => make(AST.encodedAST(schema.ast))
+export const encodedSchema = <A, I, R>(schema: Schema<A, I, R>): SchemaClass<I> => make(AST.encodedAST(schema.ast))
 
 /**
  * @since 1.0.0
  */
-export const typeSchema = <A, I, R>(schema: Schema<A, I, R>): Schema<A> => make(AST.typeAST(schema.ast))
+export const typeSchema = <A, I, R>(schema: Schema<A, I, R>): SchemaClass<A> => make(AST.typeAST(schema.ast))
 
 /* c8 ignore start */
 export {
@@ -515,41 +539,33 @@ export const validatePromise = <A, I>(
 export const isSchema = (u: unknown): u is Schema.Any =>
   Predicate.hasProperty(u, TypeId) && Predicate.isObject(u[TypeId])
 
-/**
- * @category constructors
- * @since 1.0.0
- */
-export const make = <A, I = A, R = never>(ast: AST.AST): Schema<A, I, R> => new SchemaImpl(ast)
-
 /**
  * @category api interface
  * @since 1.0.0
  */
 export interface Literal<Literals extends array_.NonEmptyReadonlyArray<AST.LiteralValue>>
-  extends Annotable<Literal<Literals>, Literals[number]>
+  extends AnnotableClass<Literal<Literals>, Literals[number]>
 {
   readonly literals: Readonly<Literals>
 }
 
-class LiteralImpl<Literals extends array_.NonEmptyReadonlyArray<AST.LiteralValue>> extends SchemaImpl<Literals[number]>
-  implements Literal<Literals>
-{
-  static ast = <Literals extends array_.NonEmptyReadonlyArray<AST.LiteralValue>>(
-    literals: Literals
-  ): AST.AST => {
-    return AST.isMembers(literals)
-      ? AST.Union.make(AST.mapMembers(literals, (literal) => new AST.Literal(literal)))
-      : new AST.Literal(literals[0])
-  }
-  readonly literals: Literals
-  constructor(literals: Literals, ast: AST.AST = LiteralImpl.ast(literals)) {
-    super(ast)
-    this.literals = [...literals]
-  }
-  annotations(annotations: Annotations.Schema<Literals[number]>) {
-    return new LiteralImpl(this.literals, AST.annotations(this.ast, toASTAnnotations(annotations)))
+const getDefaultLiteralAST = <Literals extends array_.NonEmptyReadonlyArray<AST.LiteralValue>>(
+  literals: Literals
+): AST.AST =>
+  AST.isMembers(literals)
+    ? AST.Union.make(AST.mapMembers(literals, (literal) => new AST.Literal(literal)))
+    : new AST.Literal(literals[0])
+
+const makeLiteralClass = <Literals extends array_.NonEmptyReadonlyArray<AST.LiteralValue>>(
+  literals: Literals,
+  ast: AST.AST = getDefaultLiteralAST(literals)
+): Literal<Literals> =>
+  class LiteralClass extends make<Literals[number]>(ast) {
+    static override annotations(annotations: Annotations.Schema<Literals[number]>): Literal<Literals> {
+      return makeLiteralClass(this.literals, AST.annotations(this.ast, toASTAnnotations(annotations)))
+    }
+    static literals = [...literals] as Literals
   }
-}
 
 /**
  * @category constructors
@@ -565,7 +581,7 @@ export function Literal<Literals extends ReadonlyArray<AST.LiteralValue>>(
 export function Literal<Literals extends ReadonlyArray<AST.LiteralValue>>(
   ...literals: Literals
 ): Schema<Literals[number]> | Never {
-  return array_.isNonEmptyReadonlyArray(literals) ? new LiteralImpl(literals) : Never
+  return array_.isNonEmptyReadonlyArray(literals) ? makeLiteralClass(literals) : Never
 }
 
 /**
@@ -592,37 +608,45 @@ export const pickLiteral =
  * @category constructors
  * @since 1.0.0
  */
-export const UniqueSymbolFromSelf = <S extends symbol>(symbol: S): Schema<S> => make(new AST.UniqueSymbol(symbol))
+export const UniqueSymbolFromSelf = <S extends symbol>(symbol: S): SchemaClass<S> => make(new AST.UniqueSymbol(symbol))
 
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface Enums<A extends { [x: string]: string | number }> extends Annotable<Enums<A>, A[keyof A]> {
+export interface Enums<A extends EnumsDefinition> extends AnnotableClass<Enums<A>, A[keyof A]> {
   readonly enums: A
 }
 
-class EnumsImpl<A extends { [x: string]: string | number }> extends SchemaImpl<A[keyof A]> implements Enums<A> {
-  static ast = <A extends { [x: string]: string | number }>(enums: A): AST.AST => {
-    return new AST.Enums(
-      Object.keys(enums).filter(
-        (key) => typeof enums[enums[key]] !== "number"
-      ).map((key) => [key, enums[key]])
-    )
-  }
-  constructor(readonly enums: A, ast: AST.AST = EnumsImpl.ast(enums)) {
-    super(ast)
-  }
-  annotations(annotations: Annotations.Schema<A[keyof A]>) {
-    return new EnumsImpl(this.enums, AST.annotations(this.ast, toASTAnnotations(annotations)))
+/**
+ * @since 1.0.0
+ */
+export type EnumsDefinition = { [x: string]: string | number }
+
+const getDefaultEnumsAST = <A extends EnumsDefinition>(enums: A): AST.AST =>
+  new AST.Enums(
+    Object.keys(enums).filter(
+      (key) => typeof enums[enums[key]] !== "number"
+    ).map((key) => [key, enums[key]])
+  )
+
+const makeEnumsClass = <A extends EnumsDefinition>(
+  enums: A,
+  ast: AST.AST = getDefaultEnumsAST(enums)
+): Enums<A> =>
+  class EnumsClass extends make<A[keyof A]>(ast) {
+    static override annotations(annotations: Annotations.Schema<A[keyof A]>) {
+      return makeEnumsClass(this.enums, AST.annotations(this.ast, toASTAnnotations(annotations)))
+    }
+
+    static enums = { ...enums }
   }
-}
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const Enums = <A extends { [x: string]: string | number }>(enums: A): Enums<A> => new EnumsImpl(enums)
+export const Enums = <A extends EnumsDefinition>(enums: A): Enums<A> => makeEnumsClass(enums)
 
 type Join<T> = T extends [infer Head, ...infer Tail]
   ? `${Head & (string | number | bigint | boolean | null | undefined)}${Tail extends [] ? ""
@@ -635,7 +659,7 @@ type Join<T> = T extends [infer Head, ...infer Tail]
  */
 export const TemplateLiteral = <T extends [Schema.AnyNoContext, ...Array<Schema.AnyNoContext>]>(
   ...[head, ...tail]: T
-): Schema<Join<{ [K in keyof T]: Schema.Type<T[K]> }>> => {
+): SchemaClass<Join<{ [K in keyof T]: Schema.Type<T[K]> }>> => {
   let types: ReadonlyArray<AST.TemplateLiteral | AST.Literal> = getTemplateLiterals(head.ast)
   for (const span of tail) {
     types = array_.flatMap(
@@ -727,7 +751,7 @@ const declareConstructor = <
     ) => Effect.Effect<I, ParseResult.ParseIssue, never>
   },
   annotations?: Annotations.Schema<A, TypeParameters>
-): Schema<A, I, Schema.Context<TypeParameters[number]>> =>
+): SchemaClass<A, I, Schema.Context<TypeParameters[number]>> =>
   make(
     new AST.Declaration(
       typeParameters.map((tp) => tp.ast),
@@ -740,7 +764,7 @@ const declareConstructor = <
 const declarePrimitive = <A>(
   is: (input: unknown) => input is A,
   annotations?: Annotations.Schema<A>
-): Schema<A> => {
+): SchemaClass<A> => {
   const decodeUnknown = () => (input: unknown, _: ParseOptions, ast: AST.Declaration) =>
     is(input) ? ParseResult.succeed(input) : ParseResult.fail(new ParseResult.Type(ast, input))
   const encodeUnknown = decodeUnknown
@@ -758,7 +782,7 @@ export const declare: {
   <A>(
     is: (input: unknown) => input is A,
     annotations?: Annotations.Schema<A>
-  ): Schema<A>
+  ): SchemaClass<A>
   <const P extends ReadonlyArray<Schema.Any>, I, A>(
     typeParameters: P,
     options: {
@@ -778,7 +802,7 @@ export const declare: {
       ) => Effect.Effect<I, ParseResult.ParseIssue, never>
     },
     annotations?: Annotations.Schema<A, { readonly [K in keyof P]: Schema.Type<P[K]> }>
-  ): Schema<A, I, Schema.Context<P[number]>>
+  ): SchemaClass<A, I, Schema.Context<P[number]>>
 } = function() {
   if (Array.isArray(arguments[0])) {
     const typeParameters = arguments[0]
@@ -801,15 +825,15 @@ export const BrandTypeId: unique symbol = Symbol.for("@effect/schema/TypeId/Bran
  * @category constructors
  * @since 1.0.0
  */
-export const fromBrand = <C extends brand_.Brand<string | symbol>>(
-  constructor: brand_.Brand.Constructor<C>,
-  annotations?: Annotations.Filter<brand_.Brand.Unbranded<C>>
+export const fromBrand = <C extends Brand<string | symbol>, A extends Brand.Unbranded<C>>(
+  constructor: Brand.Constructor<C>,
+  annotations?: Annotations.Filter<C, A>
 ) =>
-<R, I, A extends brand_.Brand.Unbranded<C>>(self: Schema<A, I, R>): Schema<A & C, I, R> =>
-  make(
+<I, R>(self: Schema<A, I, R>): BrandSchema<A & C, I, R> =>
+  makeBrandClass<Schema<A & C, I, R>, string | symbol>(
     new AST.Refinement(
       self.ast,
-      (a: A, _: ParseOptions, ast: AST.AST): option_.Option<ParseResult.ParseIssue> => {
+      function predicate(a: A, _: ParseOptions, ast: AST.AST): option_.Option<ParseResult.ParseIssue> {
         const either = constructor.either(a)
         return either_.isLeft(either) ?
           option_.some(new ParseResult.Type(ast, a, either.left.map((v) => v.message).join(", "))) :
@@ -829,7 +853,7 @@ export const InstanceOfTypeId: unique symbol = Symbol.for("@effect/schema/TypeId
  * @category api interface
  * @since 1.0.0
  */
-export interface instanceOf<A> extends Annotable<instanceOf<A>, A> {}
+export interface instanceOf<A> extends AnnotableClass<instanceOf<A>, A> {}
 
 /**
  * @category constructors
@@ -850,155 +874,111 @@ export const instanceOf = <A extends abstract new(...args: any) => any>(
     }
   )
 
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Undefined extends Annotable<Undefined, undefined> {}
-
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const Undefined: Undefined = make(AST.undefinedKeyword)
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Void extends Annotable<Void, void> {}
+export class Undefined extends make<undefined>(AST.undefinedKeyword) {
+  static override annotations: (annotations: Annotations.Schema<undefined>) => typeof Undefined = super.annotations
+}
 
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const Void: Void = make(AST.voidKeyword)
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Null extends Annotable<Null, null> {}
+export class Void extends make<void>(AST.voidKeyword) {
+  static override annotations: (annotations: Annotations.Schema<void>) => typeof Void = super.annotations
+}
 
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const Null: Null = make(AST.null)
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Never extends Annotable<Never, never> {}
+export class Null extends make<null>(AST.null) {
+  static override annotations: (annotations: Annotations.Schema<null>) => typeof Null = super.annotations
+}
 
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const Never: Never = make(AST.neverKeyword)
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Unknown extends Annotable<Unknown, unknown> {}
+export class Never extends make<never>(AST.neverKeyword) {
+  static override annotations: (annotations: Annotations.Schema<never>) => typeof Never = super.annotations
+}
 
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const Unknown: Unknown = make(AST.unknownKeyword)
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Any extends Annotable<Any, any> {}
+export class Unknown extends make<unknown>(AST.unknownKeyword) {
+  static override annotations: (annotations: Annotations.Schema<unknown>) => typeof Unknown = super.annotations
+}
 
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const Any: Any = make(AST.anyKeyword)
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface $String extends Annotable<$String, string> {}
-
-const $String: $String = make(AST.stringKeyword)
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface $Number extends Annotable<$Number, number> {}
-
-const $Number: $Number = make(AST.numberKeyword)
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface $Boolean extends Annotable<$Boolean, boolean> {}
-
-const $Boolean: $Boolean = make(AST.booleanKeyword)
+export class Any extends make<any>(AST.anyKeyword) {
+  static override annotations: (annotations: Annotations.Schema<any>) => typeof Any = super.annotations
+}
 
 /**
- * @category api interface
+ * @category primitives
  * @since 1.0.0
  */
-export interface BigIntFromSelf extends Annotable<BigIntFromSelf, bigint> {}
+export class BigIntFromSelf extends make<bigint>(AST.bigIntKeyword) {
+  static override annotations: (annotations: Annotations.Schema<bigint>) => typeof BigIntFromSelf = super.annotations
+}
 
 /**
  * @category primitives
  * @since 1.0.0
  */
-export const BigIntFromSelf: BigIntFromSelf = make(AST.bigIntKeyword)
+export class SymbolFromSelf extends make<symbol>(AST.symbolKeyword) {
+  static override annotations: (annotations: Annotations.Schema<symbol>) => typeof SymbolFromSelf = super.annotations
+}
 
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface SymbolFromSelf extends Annotable<SymbolFromSelf, symbol> {}
+/** @ignore */
+class String$ extends make<string>(AST.stringKeyword) {
+  static override annotations: (annotations: Annotations.Schema<string>) => typeof String$ = super.annotations
+}
 
-/**
- * @category primitives
- * @since 1.0.0
- */
-export const SymbolFromSelf: SymbolFromSelf = make(AST.symbolKeyword)
+/** @ignore */
+class Number$ extends make<number>(AST.numberKeyword) {
+  static override annotations: (annotations: Annotations.Schema<number>) => typeof Number$ = super.annotations
+}
 
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface $Object extends Annotable<$Object, object> {}
+/** @ignore */
+class Boolean$ extends make<boolean>(AST.booleanKeyword) {
+  static override annotations: (annotations: Annotations.Schema<boolean>) => typeof Boolean$ = super.annotations
+}
 
-const $Object: $Object = make(AST.objectKeyword)
+/** @ignore */
+class Object$ extends make<object>(AST.objectKeyword) {
+  static override annotations: (annotations: Annotations.Schema<object>) => typeof Object$ = super.annotations
+}
 
 export {
   /**
    * @category primitives
    * @since 1.0.0
    */
-  $Boolean as Boolean,
+  Boolean$ as Boolean,
   /**
    * @category primitives
    * @since 1.0.0
    */
-  $Number as Number,
+  Number$ as Number,
   /**
    * @category primitives
    * @since 1.0.0
    */
-  $Object as Object,
+  Object$ as Object,
   /**
    * @category primitives
    * @since 1.0.0
    */
-  $String as String
+  String$ as String
 }
 
 /**
@@ -1006,7 +986,8 @@ export {
  * @since 1.0.0
  */
 export interface Union<Members extends ReadonlyArray<Schema.Any>> extends
-  Schema<
+  AnnotableClass<
+    Union<Members>,
     Schema.Type<Members[number]>,
     Schema.Encoded<Members[number]>,
     Schema.Context<Members[number]>
@@ -1016,22 +997,22 @@ export interface Union<Members extends ReadonlyArray<Schema.Any>> extends
   annotations(annotations: Annotations.Schema<Schema.Type<Members[number]>>): Union<Members>
 }
 
-class UnionImpl<Members extends ReadonlyArray<Schema.Any>>
-  extends SchemaImpl<Schema.Type<Members[number]>, Schema.Encoded<Members[number]>, Schema.Context<Members[number]>>
-  implements Union<Members>
-{
-  static ast = <Members extends ReadonlyArray<Schema.Any>>(members: Members): AST.AST => {
-    return AST.Union.members(members.map((m) => m.ast))
-  }
-  readonly members: Readonly<Members>
-  constructor(members: Members, ast: AST.AST = UnionImpl.ast(members)) {
-    super(ast)
-    this.members = [...members] as any as Members
-  }
-  annotations(annotations: Annotations.Schema<Schema.Type<Members[number]>>) {
-    return new UnionImpl(this.members, AST.annotations(this.ast, toASTAnnotations(annotations)))
+const getDefaultUnionAST = <Members extends ReadonlyArray<Schema.Any>>(members: Members): AST.AST =>
+  AST.Union.members(members.map((m) => m.ast))
+
+const makeUnionClass = <Members extends ReadonlyArray<Schema.Any>>(
+  members: Members,
+  ast: AST.AST = getDefaultUnionAST(members)
+): Union<Members> =>
+  class UnionClass
+    extends make<Schema.Type<Members[number]>, Schema.Encoded<Members[number]>, Schema.Context<Members[number]>>(ast)
+  {
+    static override annotations(annotations: Annotations.Schema<Schema.Type<Members[number]>>): Union<Members> {
+      return makeUnionClass(this.members, AST.annotations(this.ast, toASTAnnotations(annotations)))
+    }
+
+    static members = [...members] as any as Members
   }
-}
 
 /**
  * @category combinators
@@ -1039,15 +1020,18 @@ class UnionImpl<Members extends ReadonlyArray<Schema.Any>>
  */
 export function Union<Members extends AST.Members<Schema.Any>>(...members: Members): Union<Members>
 export function Union<Member extends Schema.Any>(member: Member): Member
-export function Union(): Never
+export function Union(): typeof Never
 export function Union<Members extends ReadonlyArray<Schema.Any>>(
   ...members: Members
 ): Schema<Schema.Type<Members[number]>, Schema.Encoded<Members[number]>, Schema.Context<Members[number]>>
 export function Union<Members extends ReadonlyArray<Schema.Any>>(
   ...members: Members
-): Schema<Schema.Type<Members[number]>, Schema.Encoded<Members[number]>, Schema.Context<Members[number]>> | Never {
+):
+  | Schema<Schema.Type<Members[number]>, Schema.Encoded<Members[number]>, Schema.Context<Members[number]>>
+  | typeof Never
+{
   return AST.isMembers(members)
-    ? new UnionImpl(members)
+    ? makeUnionClass(members)
     : array_.isNonEmptyReadonlyArray(members)
     ? members[0] as any
     : Never
@@ -1057,7 +1041,7 @@ export function Union<Members extends ReadonlyArray<Schema.Any>>(
  * @category api interface
  * @since 1.0.0
  */
-export interface NullOr<S extends Schema.Any> extends Union<[S, Null]> {
+export interface NullOr<S extends Schema.Any> extends Union<[S, typeof Null]> {
   annotations(annotations: Annotations.Schema<Schema.Type<S> | null>): NullOr<S>
 }
 
@@ -1071,7 +1055,7 @@ export const NullOr = <S extends Schema.Any>(self: S): NullOr<S> => Union(self,
  * @category api interface
  * @since 1.0.0
  */
-export interface UndefinedOr<S extends Schema.Any> extends Union<[S, Undefined]> {
+export interface UndefinedOr<S extends Schema.Any> extends Union<[S, typeof Undefined]> {
   annotations(annotations: Annotations.Schema<Schema.Type<S> | undefined>): UndefinedOr<S>
 }
 
@@ -1085,7 +1069,7 @@ export const UndefinedOr = <S extends Schema.Any>(self: S): UndefinedOr<S> => Un
  * @category api interface
  * @since 1.0.0
  */
-export interface NullishOr<S extends Schema.Any> extends Union<[S, Null, Undefined]> {
+export interface NullishOr<S extends Schema.Any> extends Union<[S, typeof Null, typeof Undefined]> {
   annotations(annotations: Annotations.Schema<Schema.Type<S> | null | undefined>): NullishOr<S>
 }
 
@@ -1099,7 +1083,7 @@ export const NullishOr = <S extends Schema.Any>(self: S): NullishOr<S> => Union(
  * @category combinators
  * @since 1.0.0
  */
-export const keyof = <A, I, R>(self: Schema<A, I, R>): Schema<keyof A> => make<keyof A>(AST.keyof(self.ast))
+export const keyof = <A, I, R>(self: Schema<A, I, R>): SchemaClass<keyof A> => make<keyof A>(AST.keyof(self.ast))
 
 /**
  * @since 1.0.0
@@ -1188,7 +1172,8 @@ export interface TupleType<
   Elements extends TupleType.Elements,
   Rest extends ReadonlyArray<Schema.Any>
 > extends
-  Schema<
+  AnnotableClass<
+    TupleType<Elements, Rest>,
     TupleType.Type<Elements, Rest>,
     TupleType.Encoded<Elements, Rest>,
     Schema.Context<Elements[number]> | Schema.Context<Rest[number]>
@@ -1196,45 +1181,46 @@ export interface TupleType<
 {
   readonly elements: Readonly<Elements>
   readonly rest: Readonly<Rest>
-  annotations(annotations: Annotations.Schema<TupleType.Type<Elements, Rest>>): TupleType<Elements, Rest>
 }
 
-class TupleTypeImpl<
+const getDefaultTupleTypeAST = <
   Elements extends TupleType.Elements,
   Rest extends ReadonlyArray<Schema.Any>
-> extends SchemaImpl<
-  TupleType.Type<Elements, Rest>,
-  TupleType.Encoded<Elements, Rest>,
-  Schema.Context<Elements[number]> | Schema.Context<Rest[number]>
-> implements TupleType<Elements, Rest> {
-  static ast = <
-    Elements extends TupleType.Elements,
-    Rest extends ReadonlyArray<Schema.Any>
-  >(
-    elements: Elements,
-    rest: Rest
-  ): AST.AST => {
-    return new AST.TupleType(
-      elements.map((schema) =>
-        isSchema(schema) ? new AST.Element(schema.ast, false) : new AST.Element(schema.optionalElement.ast, true)
-      ),
-      rest.map((e) => e.ast),
-      true
-    )
-  }
-  constructor(
-    readonly elements: Elements,
-    readonly rest: Rest,
-    ast: AST.AST = TupleTypeImpl.ast(elements, rest)
-  ) {
-    super(ast)
-  }
-  annotations(
-    annotations: Annotations.Schema<TupleType.Type<Elements, Rest>>
-  ): TupleType<Elements, Rest> {
-    return new TupleTypeImpl(this.elements, this.rest, AST.annotations(this.ast, toASTAnnotations(annotations)))
+>(
+  elements: Elements,
+  rest: Rest
+): AST.AST =>
+  new AST.TupleType(
+    elements.map((schema) =>
+      isSchema(schema) ? new AST.Element(schema.ast, false) : new AST.Element(schema.optionalElement.ast, true)
+    ),
+    rest.map((e) => e.ast),
+    true
+  )
+
+const makeTupleTypeClass = <
+  Elements extends TupleType.Elements,
+  Rest extends ReadonlyArray<Schema.Any>
+>(
+  elements: Elements,
+  rest: Rest,
+  ast: AST.AST = getDefaultTupleTypeAST(elements, rest)
+) =>
+  class TupleTypeClass extends make<
+    TupleType.Type<Elements, Rest>,
+    TupleType.Encoded<Elements, Rest>,
+    Schema.Context<Elements[number]> | Schema.Context<Rest[number]>
+  >(ast) {
+    static override annotations(
+      annotations: Annotations.Schema<TupleType.Type<Elements, Rest>>
+    ): TupleType<Elements, Rest> {
+      return makeTupleTypeClass(this.elements, this.rest, AST.annotations(this.ast, toASTAnnotations(annotations)))
+    }
+
+    static elements = [...elements] as any as Elements
+
+    static rest = [...rest] as any as Rest
   }
-}
 
 /**
  * @category api interface
@@ -1255,36 +1241,36 @@ export function Tuple<
 export function Tuple<Elements extends TupleType.Elements>(...elements: Elements): Tuple<Elements>
 export function Tuple(...args: ReadonlyArray<any>): any {
   return Array.isArray(args[0])
-    ? new TupleTypeImpl(args[0], args.slice(1))
-    : new TupleTypeImpl(args, [])
+    ? makeTupleTypeClass(args[0], args.slice(1))
+    : makeTupleTypeClass(args, [])
 }
 
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface $Array<Value extends Schema.Any> extends TupleType<[], [Value]> {
+export interface Array$<Value extends Schema.Any> extends TupleType<[], [Value]> {
   readonly value: Value
-  annotations(annotations: Annotations.Schema<TupleType.Type<[], [Value]>>): $Array<Value>
+  annotations(annotations: Annotations.Schema<TupleType.Type<[], [Value]>>): Array$<Value>
 }
 
-class $ArrayImpl<Value extends Schema.Any> extends TupleTypeImpl<[], [Value]> implements $Array<Value> {
-  constructor(readonly value: Value, ast?: AST.AST) {
-    super([], [value], ast)
-  }
-  annotations(annotations: Annotations.Schema<TupleType.Type<[], [Value]>>) {
-    return new $ArrayImpl(this.value, AST.annotations(this.ast, toASTAnnotations(annotations)))
+const makeArrayClass = <Value extends Schema.Any>(value: Value, ast?: AST.AST): Array$<Value> =>
+  class ArrayClass extends makeTupleTypeClass<[], [Value]>([], [value], ast) {
+    static override annotations(annotations: Annotations.Schema<TupleType.Type<[], [Value]>>) {
+      return makeArrayClass(this.value, AST.annotations(this.ast, toASTAnnotations(annotations)))
+    }
+
+    static value = value
   }
-}
 
-const $Array = <Value extends Schema.Any>(value: Value): $Array<Value> => new $ArrayImpl(value)
+const Array$ = <Value extends Schema.Any>(value: Value): Array$<Value> => makeArrayClass(value)
 
 export {
   /**
    * @category constructors
    * @since 1.0.0
    */
-  $Array as Array
+  Array$ as Array
 }
 
 /**
@@ -1296,23 +1282,21 @@ export interface NonEmptyArray<Value extends Schema.Any> extends TupleType<[Valu
   annotations(annotations: Annotations.Schema<TupleType.Type<[Value], [Value]>>): NonEmptyArray<Value>
 }
 
-class NonEmptyArrayImpl<Value extends Schema.Any> extends TupleTypeImpl<[Value], [Value]>
-  implements NonEmptyArray<Value>
-{
-  constructor(readonly value: Value, ast?: AST.AST) {
-    super([value], [value], ast)
-  }
-  annotations(annotations: Annotations.Schema<TupleType.Type<[Value], [Value]>>) {
-    return new NonEmptyArrayImpl(this.value, AST.annotations(this.ast, toASTAnnotations(annotations)))
+const makeNonEmptyArrayClass = <Value extends Schema.Any>(value: Value, ast?: AST.AST): NonEmptyArray<Value> =>
+  class NonEmptyArrayClass extends makeTupleTypeClass<[Value], [Value]>([value], [value], ast) {
+    static override annotations(annotations: Annotations.Schema<TupleType.Type<[Value], [Value]>>) {
+      return makeNonEmptyArrayClass(this.value, AST.annotations(this.ast, toASTAnnotations(annotations)))
+    }
+
+    static value = value
   }
-}
 
 /**
  * @category constructors
  * @since 1.0.0
  */
 export const NonEmptyArray = <Value extends Schema.Any>(value: Value): NonEmptyArray<Value> =>
-  new NonEmptyArrayImpl(value)
+  makeNonEmptyArrayClass(value)
 
 /**
  * @since 1.0.0
@@ -1331,16 +1315,24 @@ export declare namespace PropertySignature {
   /**
    * @since 1.0.0
    */
-  export type Any<Key extends PropertyKey = PropertyKey> = PropertySignature<Token, any, Key, Token, any, unknown>
+  export type Any<Key extends PropertyKey = PropertyKey> = PropertySignature<
+    Token,
+    any,
+    Key,
+    Token,
+    any,
+    boolean,
+    unknown
+  >
 
   /**
    * @since 1.0.0
    */
   export type All<Key extends PropertyKey = PropertyKey> =
     | Any<Key>
-    | PropertySignature<Token, never, Key, Token, any, unknown>
-    | PropertySignature<Token, any, Key, Token, never, unknown>
-    | PropertySignature<Token, never, Key, Token, never, unknown>
+    | PropertySignature<Token, never, Key, Token, any, boolean, unknown>
+    | PropertySignature<Token, any, Key, Token, never, boolean, unknown>
+    | PropertySignature<Token, never, Key, Token, never, boolean, unknown>
 
   /**
    * @since 1.0.0
@@ -1370,7 +1362,8 @@ export class PropertySignatureDeclaration {
     readonly type: AST.AST,
     readonly isOptional: boolean,
     readonly isReadonly: boolean,
-    readonly annotations: AST.Annotations
+    readonly annotations: AST.Annotations,
+    readonly defaultValue: (() => unknown) | undefined
   ) {}
   /**
    * @since 1.0.0
@@ -1405,7 +1398,8 @@ export class ToPropertySignature implements AST.Annotated {
     readonly type: AST.AST,
     readonly isOptional: boolean,
     readonly isReadonly: boolean,
-    readonly annotations: AST.Annotations
+    readonly annotations: AST.Annotations,
+    readonly defaultValue: (() => unknown) | undefined
   ) {}
 }
 
@@ -1466,7 +1460,8 @@ const propertySignatureAnnotations_ = (
         ast.type,
         ast.isOptional,
         ast.isReadonly,
-        { ...ast.annotations, ...annotations }
+        { ...ast.annotations, ...annotations },
+        ast.defaultValue
       )
     }
     case "PropertySignatureTransformation": {
@@ -1480,7 +1475,7 @@ const propertySignatureAnnotations_ = (
         new ToPropertySignature(ast.to.type, ast.to.isOptional, ast.to.isReadonly, {
           ...ast.to.annotations,
           ...annotations
-        }),
+        }, ast.to.defaultValue),
         ast.decode,
         ast.encode
       )
@@ -1498,17 +1493,19 @@ export interface PropertySignature<
   Key extends PropertyKey,
   EncodedToken extends PropertySignature.Token,
   Encoded,
+  HasDefault extends boolean = false,
   R = never
 > extends Schema.Variance<Type, Encoded, R>, Pipeable {
   readonly [PropertySignatureTypeId]: null
-  readonly _EncodedToken: EncodedToken
   readonly _TypeToken: TypeToken
+  readonly _EncodedToken: EncodedToken
+  readonly _HasDefault: HasDefault
   readonly _Key: Key
   readonly ast: PropertySignature.AST
 
   annotations(
     annotations: PropertySignature.Annotations<Type>
-  ): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, R>
+  ): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R>
 }
 
 /** @internal */
@@ -1518,13 +1515,15 @@ export class PropertySignatureImpl<
   Key extends PropertyKey,
   EncodedToken extends PropertySignature.Token,
   Encoded,
+  HasDefault extends boolean = false,
   R = never
-> implements PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, R> {
+> implements PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R> {
   readonly [TypeId]!: Schema.Variance<Type, Encoded, R>[TypeId]
   readonly [PropertySignatureTypeId] = null
+  readonly _TypeToken!: TypeToken
   readonly _Key!: Key
   readonly _EncodedToken!: EncodedToken
-  readonly _TypeToken!: TypeToken
+  readonly _HasDefault!: HasDefault
 
   constructor(
     readonly ast: PropertySignature.AST
@@ -1536,7 +1535,7 @@ export class PropertySignatureImpl<
 
   annotations(
     annotations: PropertySignature.Annotations<Type>
-  ): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, R> {
+  ): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R> {
     return new PropertySignatureImpl(propertySignatureAnnotations_(this.ast, toASTAnnotations(annotations)))
   }
 
@@ -1546,50 +1545,219 @@ export class PropertySignatureImpl<
 }
 
 /**
+ * Lifts a `Schema` into a `PropertySignature`.
+ *
  * @category PropertySignature
  * @since 1.0.0
  */
 export const propertySignature = <A, I, R>(
   self: Schema<A, I, R>
-): PropertySignature<PropertySignature.GetToken<false>, A, never, PropertySignature.GetToken<false>, I, R> =>
-  new PropertySignatureImpl(new PropertySignatureDeclaration(self.ast, false, true, {}))
+): PropertySignature<PropertySignature.GetToken<false>, A, never, PropertySignature.GetToken<false>, I, false, R> =>
+  new PropertySignatureImpl(new PropertySignatureDeclaration(self.ast, false, true, {}, undefined))
+
+/**
+ * Enhances a property signature with a default constructor value.
+ *
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export const withConstructorDefault: {
+  <Type>(defaultValue: () => Types.NoInfer<Type>): <
+    TypeToken extends PropertySignature.Token,
+    Key extends PropertyKey,
+    EncodedToken extends PropertySignature.Token,
+    Encoded,
+    R
+  >(
+    self: PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, boolean, R>
+  ) => PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, true, R>
+  <
+    TypeToken extends PropertySignature.Token,
+    Type,
+    Key extends PropertyKey,
+    EncodedToken extends PropertySignature.Token,
+    Encoded,
+    R
+  >(
+    self: PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, boolean, R>,
+    defaultValue: () => Types.NoInfer<Type>
+  ): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, true, R>
+} = dual(2, <
+  TypeToken extends PropertySignature.Token,
+  Type,
+  Key extends PropertyKey,
+  EncodedToken extends PropertySignature.Token,
+  Encoded,
+  R
+>(
+  self: PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, boolean, R>,
+  defaultValue: () => Types.NoInfer<Type>
+): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, true, R> => {
+  const ast = self.ast
+  switch (ast._tag) {
+    case "PropertySignatureDeclaration":
+      return new PropertySignatureImpl(
+        new PropertySignatureDeclaration(ast.type, ast.isOptional, ast.isReadonly, ast.annotations, defaultValue)
+      )
+    case "PropertySignatureTransformation":
+      return new PropertySignatureImpl(
+        new PropertySignatureTransformation(
+          ast.from,
+          new ToPropertySignature(ast.to.type, ast.to.isOptional, ast.to.isReadonly, ast.to.annotations, defaultValue),
+          ast.decode,
+          ast.encode
+        )
+      )
+  }
+})
+
+const applyDefaultValue = <A>(o: option_.Option<A>, defaultValue: () => A) =>
+  option_.match(o, {
+    onNone: () => option_.some(defaultValue()),
+    onSome: (value) => option_.some(value === undefined ? defaultValue() : value)
+  })
+
+/**
+ * Enhances a property signature with a default decoding value.
+ *
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export const withDecodingDefault: {
+  <Type>(defaultValue: () => Types.NoInfer<Type>): <
+    Key extends PropertyKey,
+    Encoded,
+    HasDefault extends boolean,
+    R
+  >(
+    self: PropertySignature<"?:", Type, Key, "?:", Encoded, HasDefault, R>
+  ) => PropertySignature<":", Exclude<Type, undefined>, Key, "?:", Encoded, HasDefault, R>
+  <
+    Type,
+    Key extends PropertyKey,
+    Encoded,
+    HasDefault extends boolean,
+    R
+  >(
+    self: PropertySignature<"?:", Type, Key, "?:", Encoded, HasDefault, R>,
+    defaultValue: () => Types.NoInfer<Type>
+  ): PropertySignature<":", Exclude<Type, undefined>, Key, "?:", Encoded, HasDefault, R>
+} = dual(2, <
+  Type,
+  Key extends PropertyKey,
+  Encoded,
+  R
+>(
+  self: PropertySignature<"?:", Type, Key, "?:", Encoded, boolean, R>,
+  defaultValue: () => Types.NoInfer<Type>
+): PropertySignature<":", Exclude<Type, undefined>, Key, "?:", Encoded, true, R> => {
+  const ast = self.ast
+  switch (ast._tag) {
+    case "PropertySignatureDeclaration":
+      return new PropertySignatureImpl(
+        new PropertySignatureTransformation(
+          ast,
+          new ToPropertySignature(AST.typeAST(ast.type), false, true, {}, undefined),
+          (o) => applyDefaultValue(o, defaultValue),
+          identity
+        )
+      )
+    case "PropertySignatureTransformation":
+      return new PropertySignatureImpl(
+        new PropertySignatureTransformation(
+          ast.from,
+          new ToPropertySignature(ast.to.type, false, ast.to.isReadonly, ast.to.annotations, ast.to.defaultValue),
+          (o) => applyDefaultValue(ast.decode(o), defaultValue),
+          ast.encode
+        )
+      )
+  }
+})
+
+/**
+ * Enhances a property signature with a default decoding value and a default constructor value.
+ *
+ * @category PropertySignature
+ * @since 1.0.0
+ */
+export const withDefaults: {
+  <Type>(defaults: {
+    constructor: () => Types.NoInfer<Exclude<Type, undefined>>
+    decoding: () => Types.NoInfer<Type>
+  }): <
+    Key extends PropertyKey,
+    Encoded,
+    R
+  >(
+    self: PropertySignature<"?:", Type, Key, "?:", Encoded, boolean, R>
+  ) => PropertySignature<":", Exclude<Type, undefined>, Key, "?:", Encoded, true, R>
+  <
+    Type,
+    Key extends PropertyKey,
+    Encoded,
+    R
+  >(
+    self: PropertySignature<"?:", Type, Key, "?:", Encoded, boolean, R>,
+    defaults: {
+      constructor: () => Types.NoInfer<Exclude<Type, undefined>>
+      decoding: () => Types.NoInfer<Type>
+    }
+  ): PropertySignature<":", Exclude<Type, undefined>, Key, "?:", Encoded, true, R>
+} = dual(2, <
+  Type,
+  Key extends PropertyKey,
+  Encoded,
+  R
+>(
+  self: PropertySignature<"?:", Type, Key, "?:", Encoded, boolean, R>,
+  defaults: {
+    constructor: () => Types.NoInfer<Exclude<Type, undefined>>
+    decoding: () => Types.NoInfer<Type>
+  }
+): PropertySignature<":", Exclude<Type, undefined>, Key, "?:", Encoded, true, R> =>
+  self.pipe(withDecodingDefault(defaults.decoding), withConstructorDefault(defaults.constructor)))
 
 /**
+ * Enhances a property signature by specifying a different key for it in the Encoded type.
+ *
  * @category PropertySignature
  * @since 1.0.0
  */
 export const fromKey: {
   <Key extends PropertyKey>(key: Key): <
-    Type,
     TypeToken extends PropertySignature.Token,
-    Encoded,
+    Type,
     EncodedToken extends PropertySignature.Token,
+    Encoded,
+    HasDefault extends boolean,
     R
   >(
-    self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, R>
-  ) => PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, R>
+    self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, HasDefault, R>
+  ) => PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R>
   <
     Type,
     TypeToken extends PropertySignature.Token,
     Encoded,
     EncodedToken extends PropertySignature.Token,
+    HasDefault extends boolean,
     R,
     Key extends PropertyKey
   >(
-    self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, R>,
+    self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, HasDefault, R>,
     key: Key
-  ): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, R>
+  ): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R>
 } = dual(2, <
   Type,
   TypeToken extends PropertySignature.Token,
   Encoded,
   EncodedToken extends PropertySignature.Token,
+  HasDefault extends boolean,
   R,
   Key extends PropertyKey
 >(
-  self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, R>,
+  self: PropertySignature<TypeToken, Type, PropertyKey, EncodedToken, Encoded, HasDefault, R>,
   key: Key
-): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, R> => {
+): PropertySignature<TypeToken, Type, Key, EncodedToken, Encoded, HasDefault, R> => {
   const ast = self.ast
   switch (ast._tag) {
     case "PropertySignatureDeclaration": {
@@ -1602,7 +1770,7 @@ export const fromKey: {
             ast.annotations,
             key
           ),
-          new ToPropertySignature(AST.typeAST(ast.type), ast.isOptional, ast.isReadonly, {}),
+          new ToPropertySignature(AST.typeAST(ast.type), ast.isOptional, ast.isReadonly, {}, ast.defaultValue),
           identity,
           identity
         )
@@ -1627,8 +1795,10 @@ export const fromKey: {
 })
 
 /**
- * - `decode`: `none` as argument means: the value is missing in the input
- * - `encode`: `none` as return value means: the value will be missing in the output
+ * Converts an optional property to a required one through a transformation `Option -> Option`.
+ *
+ * - `decode`: `none` as argument means the value is missing in the input.
+ * - `encode`: `none` as return value means the value will be missing in the output.
  *
  * @category PropertySignature
  * @since 1.0.0
@@ -1640,23 +1810,25 @@ export const optionalToRequired = <FA, FI, FR, TA, TI, TR>(
     readonly decode: (o: option_.Option<FA>) => TI
     readonly encode: (ti: TI) => option_.Option<FA>
   }
-): PropertySignature<":", TA, never, "?:", FI, FR | TR> =>
+): PropertySignature<":", TA, never, "?:", FI, false, FR | TR> =>
   new PropertySignatureImpl(
     new PropertySignatureTransformation(
       new FromPropertySignature(from.ast, true, true, {}, undefined),
-      new ToPropertySignature(to.ast, false, true, {}),
+      new ToPropertySignature(to.ast, false, true, {}, undefined),
       (o) => option_.some(options.decode(o)),
       option_.flatMap(options.encode)
     )
   )
 
 /**
+ * Converts an optional property to another optional property through a transformation `Option -> Option`.
+ *
  * - `decode`:
- *   - `none` as argument means: the value is missing in the input
- *   - `none` as return value means: the value will be missing in the output
+ *   - `none` as argument means the value is missing in the input.
+ *   - `none` as return value means the value will be missing in the output.
  * - `encode`:
- *   - `none` as argument means: the value is missing in the input
- *   - `none` as return value means: the value will be missing in the output
+ *   - `none` as argument means the value is missing in the input.
+ *   - `none` as return value means the value will be missing in the output.
  *
  * @category PropertySignature
  * @since 1.0.0
@@ -1668,11 +1840,11 @@ export const optionalToOptional = <FA, FI, FR, TA, TI, TR>(
     readonly decode: (o: option_.Option<FA>) => option_.Option<TI>
     readonly encode: (o: option_.Option<TI>) => option_.Option<FA>
   }
-): PropertySignature<"?:", TA, never, "?:", FI, FR | TR> =>
+): PropertySignature<"?:", TA, never, "?:", FI, false, FR | TR> =>
   new PropertySignatureImpl(
     new PropertySignatureTransformation(
       new FromPropertySignature(from.ast, true, true, {}, undefined),
-      new ToPropertySignature(to.ast, true, true, {}),
+      new ToPropertySignature(to.ast, true, true, {}, undefined),
       options.decode,
       options.encode
     )
@@ -1709,6 +1881,7 @@ export const optional: {
       never,
       "?:",
       I | undefined,
+      false,
       R
     > :
     PropertySignature<
@@ -1720,6 +1893,7 @@ export const optional: {
       | I
       | (Types.Has<Options, "nullable"> extends true ? null : never)
       | (Types.Has<Options, "exact"> extends true ? never : undefined),
+      false,
       R
     >
   <
@@ -1751,6 +1925,7 @@ export const optional: {
       never,
       "?:",
       I | undefined,
+      false,
       R
     > :
     PropertySignature<
@@ -1762,6 +1937,7 @@ export const optional: {
       | I
       | (Types.Has<Options, "nullable"> extends true ? null : never)
       | (Types.Has<Options, "exact"> extends true ? never : undefined),
+      false,
       R
     >
 } = dual((args) => isSchema(args[0]), <A, I, R>(
@@ -1772,7 +1948,7 @@ export const optional: {
     readonly nullable?: true
     readonly as?: "Option"
   }
-): PropertySignature<any, any, never, any, any, any> => {
+): PropertySignature<any, any, never, any, any, boolean, any> => {
   const isExact = options?.exact
   const defaultValue = options?.default
   const isNullable = options?.nullable
@@ -1818,7 +1994,7 @@ export const optional: {
           { decode: option_.filter(Predicate.isNotNull<A | null>), encode: identity }
         )
       } else {
-        return new PropertySignatureImpl(new PropertySignatureDeclaration(schema.ast, true, true, {}))
+        return new PropertySignatureImpl(new PropertySignatureDeclaration(schema.ast, true, true, {}, undefined))
       }
     }
   } else {
@@ -1865,7 +2041,7 @@ export const optional: {
         )
       } else {
         return new PropertySignatureImpl(
-          new PropertySignatureDeclaration(UndefinedOr(schema).ast, true, true, {})
+          new PropertySignatureDeclaration(UndefinedOr(schema).ast, true, true, {}, undefined)
         )
       }
     }
@@ -1891,10 +2067,10 @@ export declare namespace Struct {
 
   type EncodedTokenKeys<Fields extends Struct.Fields> = {
     [K in keyof Fields]: Fields[K] extends
-      | PropertySignature<PropertySignature.Token, any, PropertyKey, "?:", any, unknown>
-      | PropertySignature<PropertySignature.Token, any, PropertyKey, "?:", never, unknown>
-      | PropertySignature<PropertySignature.Token, never, PropertyKey, "?:", any, unknown>
-      | PropertySignature<PropertySignature.Token, never, PropertyKey, "?:", never, unknown> ? K
+      | PropertySignature<PropertySignature.Token, any, PropertyKey, "?:", any, boolean, unknown>
+      | PropertySignature<PropertySignature.Token, any, PropertyKey, "?:", never, boolean, unknown>
+      | PropertySignature<PropertySignature.Token, never, PropertyKey, "?:", any, boolean, unknown>
+      | PropertySignature<PropertySignature.Token, never, PropertyKey, "?:", never, boolean, unknown> ? K
       : never
   }[keyof Fields]
 
@@ -1903,10 +2079,10 @@ export declare namespace Struct {
   }[keyof Fields]
 
   type OptionalPropertySignature =
-    | PropertySignature<"?:", any, PropertyKey, PropertySignature.Token, any, unknown>
-    | PropertySignature<"?:", any, PropertyKey, PropertySignature.Token, never, unknown>
-    | PropertySignature<"?:", never, PropertyKey, PropertySignature.Token, any, unknown>
-    | PropertySignature<"?:", never, PropertyKey, PropertySignature.Token, never, unknown>
+    | PropertySignature<"?:", any, PropertyKey, PropertySignature.Token, any, boolean, unknown>
+    | PropertySignature<"?:", any, PropertyKey, PropertySignature.Token, never, boolean, unknown>
+    | PropertySignature<"?:", never, PropertyKey, PropertySignature.Token, any, boolean, unknown>
+    | PropertySignature<"?:", never, PropertyKey, PropertySignature.Token, never, boolean, unknown>
 
   /**
    * @since 1.0.0
@@ -1929,6 +2105,23 @@ export declare namespace Struct {
    * @since 1.0.0
    */
   export type Context<F extends Fields> = Schema.Context<F[keyof F]>
+
+  type PropertySignatureWithDefault =
+    | PropertySignature<PropertySignature.Token, any, PropertyKey, PropertySignature.Token, any, true, unknown>
+    | PropertySignature<PropertySignature.Token, any, PropertyKey, PropertySignature.Token, never, true, unknown>
+    | PropertySignature<PropertySignature.Token, never, PropertyKey, PropertySignature.Token, any, true, unknown>
+    | PropertySignature<PropertySignature.Token, never, PropertyKey, PropertySignature.Token, never, true, unknown>
+
+  /**
+   * @since 1.0.0
+   */
+  export type Constructor<F extends Fields> = Types.UnionToIntersection<
+    {
+      [K in keyof F]: F[K] extends OptionalPropertySignature ? { readonly [H in K]?: Schema.Type<F[H]> } :
+        F[K] extends PropertySignatureWithDefault ? { readonly [H in K]?: Schema.Type<F[H]> } :
+        { readonly [h in K]: Schema.Type<F[h]> }
+    }[keyof F]
+  > extends infer Q ? Q : never
 }
 
 /**
@@ -2001,6 +2194,13 @@ export declare namespace TypeLiteral {
   export type Encoded<Fields extends Struct.Fields, Records extends IndexSignature.Records> =
     & Struct.Encoded<Fields>
     & IndexSignature.Encoded<Records>
+
+  /**
+   * @since 1.0.0
+   */
+  export type Constructor<Fields extends Struct.Fields, Records extends IndexSignature.Records> =
+    & Struct.Constructor<Fields>
+    & IndexSignature.Type<Records>
 }
 
 /**
@@ -2011,7 +2211,8 @@ export interface TypeLiteral<
   Fields extends Struct.Fields,
   Records extends IndexSignature.Records
 > extends
-  Schema<
+  AnnotableClass<
+    TypeLiteral<Fields, Records>,
     Types.Simplify<TypeLiteral.Type<Fields, Records>>,
     Types.Simplify<TypeLiteral.Encoded<Fields, Records>>,
     | Struct.Context<Fields>
@@ -2023,111 +2224,138 @@ export interface TypeLiteral<
   annotations(
     annotations: Annotations.Schema<Types.Simplify<TypeLiteral.Type<Fields, Records>>>
   ): TypeLiteral<Fields, Records>
+  make(
+    props: Types.Simplify<TypeLiteral.Constructor<Fields, Records>>
+  ): Types.Simplify<TypeLiteral.Type<Fields, Records>>
 }
 
 const isPropertySignature = (u: unknown): u is PropertySignature.All =>
   Predicate.hasProperty(u, PropertySignatureTypeId)
 
-class TypeLiteralImpl<
+const getDefaultTypeLiteralAST = <
   Fields extends Struct.Fields,
   const Records extends IndexSignature.Records
-> extends SchemaImpl<
-  Types.Simplify<TypeLiteral.Type<Fields, Records>>,
-  Types.Simplify<TypeLiteral.Encoded<Fields, Records>>,
-  | Struct.Context<Fields>
-  | IndexSignature.Context<Records>
-> implements TypeLiteral<Fields, Records> {
-  static ast = <
-    Fields extends Struct.Fields,
-    const Records extends IndexSignature.Records
-  >(fields: Fields, records: Records): AST.AST => {
-    const ownKeys = util_.ownKeys(fields)
-    const pss: Array<AST.PropertySignature> = []
-    if (ownKeys.length > 0) {
-      const from: Array<AST.PropertySignature> = []
-      const to: Array<AST.PropertySignature> = []
-      const transformations: Array<AST.PropertySignatureTransformation> = []
-      for (let i = 0; i < ownKeys.length; i++) {
-        const key = ownKeys[i]
-        const field = fields[key]
-        if (isPropertySignature(field)) {
-          const ast: PropertySignature.AST = field.ast
-          switch (ast._tag) {
-            case "PropertySignatureDeclaration": {
-              const type = ast.type
-              const isOptional = ast.isOptional
-              const toAnnotations = ast.annotations
-              from.push(new AST.PropertySignature(key, type, isOptional, true))
-              to.push(new AST.PropertySignature(key, AST.typeAST(type), isOptional, true, toAnnotations))
-              pss.push(
-                new AST.PropertySignature(key, type, isOptional, true, toAnnotations)
-              )
-              break
-            }
-            case "PropertySignatureTransformation": {
-              const fromKey = ast.from.fromKey ?? key
-              from.push(
-                new AST.PropertySignature(fromKey, ast.from.type, ast.from.isOptional, true, ast.from.annotations)
-              )
-              to.push(
-                new AST.PropertySignature(key, ast.to.type, ast.to.isOptional, true, ast.to.annotations)
-              )
-              transformations.push(new AST.PropertySignatureTransformation(fromKey, key, ast.decode, ast.encode))
-              break
-            }
+>(fields: Fields, records: Records): AST.AST => {
+  const ownKeys = util_.ownKeys(fields)
+  const pss: Array<AST.PropertySignature> = []
+  if (ownKeys.length > 0) {
+    const from: Array<AST.PropertySignature> = []
+    const to: Array<AST.PropertySignature> = []
+    const transformations: Array<AST.PropertySignatureTransformation> = []
+    for (let i = 0; i < ownKeys.length; i++) {
+      const key = ownKeys[i]
+      const field = fields[key]
+      if (isPropertySignature(field)) {
+        const ast: PropertySignature.AST = field.ast
+        switch (ast._tag) {
+          case "PropertySignatureDeclaration": {
+            const type = ast.type
+            const isOptional = ast.isOptional
+            const toAnnotations = ast.annotations
+            from.push(new AST.PropertySignature(key, type, isOptional, true))
+            to.push(new AST.PropertySignature(key, AST.typeAST(type), isOptional, true, toAnnotations))
+            pss.push(
+              new AST.PropertySignature(key, type, isOptional, true, toAnnotations)
+            )
+            break
           }
-        } else {
-          from.push(new AST.PropertySignature(key, field.ast, false, true))
-          to.push(new AST.PropertySignature(key, AST.typeAST(field.ast), false, true))
-          pss.push(new AST.PropertySignature(key, field.ast, false, true))
-        }
-      }
-      if (array_.isNonEmptyReadonlyArray(transformations)) {
-        const issFrom: Array<AST.IndexSignature> = []
-        const issTo: Array<AST.IndexSignature> = []
-        for (const r of records) {
-          const { indexSignatures, propertySignatures } = AST.record(r.key.ast, r.value.ast)
-          propertySignatures.forEach((ps) => {
-            from.push(ps)
+          case "PropertySignatureTransformation": {
+            const fromKey = ast.from.fromKey ?? key
+            from.push(
+              new AST.PropertySignature(fromKey, ast.from.type, ast.from.isOptional, true, ast.from.annotations)
+            )
             to.push(
-              new AST.PropertySignature(ps.name, AST.typeAST(ps.type), ps.isOptional, ps.isReadonly, ps.annotations)
+              new AST.PropertySignature(key, ast.to.type, ast.to.isOptional, true, ast.to.annotations)
             )
-          })
-          indexSignatures.forEach((is) => {
-            issFrom.push(is)
-            issTo.push(new AST.IndexSignature(is.parameter, AST.typeAST(is.type), is.isReadonly))
-          })
+            transformations.push(new AST.PropertySignatureTransformation(fromKey, key, ast.decode, ast.encode))
+            break
+          }
         }
-        return new AST.Transformation(
-          new AST.TypeLiteral(from, issFrom, { [AST.TitleAnnotationId]: "Struct (Encoded side)" }),
-          new AST.TypeLiteral(to, issTo, { [AST.TitleAnnotationId]: "Struct (Type side)" }),
-          new AST.TypeLiteralTransformation(transformations)
-        )
+      } else {
+        from.push(new AST.PropertySignature(key, field.ast, false, true))
+        to.push(new AST.PropertySignature(key, AST.typeAST(field.ast), false, true))
+        pss.push(new AST.PropertySignature(key, field.ast, false, true))
       }
     }
-    const iss: Array<AST.IndexSignature> = []
-    for (const r of records) {
-      const { indexSignatures, propertySignatures } = AST.record(r.key.ast, r.value.ast)
-      propertySignatures.forEach((ps) => pss.push(ps))
-      indexSignatures.forEach((is) => iss.push(is))
+    if (array_.isNonEmptyReadonlyArray(transformations)) {
+      const issFrom: Array<AST.IndexSignature> = []
+      const issTo: Array<AST.IndexSignature> = []
+      for (const r of records) {
+        const { indexSignatures, propertySignatures } = AST.record(r.key.ast, r.value.ast)
+        propertySignatures.forEach((ps) => {
+          from.push(ps)
+          to.push(
+            new AST.PropertySignature(ps.name, AST.typeAST(ps.type), ps.isOptional, ps.isReadonly, ps.annotations)
+          )
+        })
+        indexSignatures.forEach((is) => {
+          issFrom.push(is)
+          issTo.push(new AST.IndexSignature(is.parameter, AST.typeAST(is.type), is.isReadonly))
+        })
+      }
+      return new AST.Transformation(
+        new AST.TypeLiteral(from, issFrom, { [AST.TitleAnnotationId]: "Struct (Encoded side)" }),
+        new AST.TypeLiteral(to, issTo, { [AST.TitleAnnotationId]: "Struct (Type side)" }),
+        new AST.TypeLiteralTransformation(transformations)
+      )
     }
-    return new AST.TypeLiteral(pss, iss)
   }
-  readonly fields: { readonly [K in keyof Fields]: Fields[K] }
-  readonly records: Readonly<Records>
-  constructor(
-    fields: Fields,
-    records: Records,
-    ast: AST.AST = TypeLiteralImpl.ast(fields, records)
-  ) {
-    super(ast)
-    this.fields = { ...fields }
-    this.records = [...records] as Records
+  const iss: Array<AST.IndexSignature> = []
+  for (const r of records) {
+    const { indexSignatures, propertySignatures } = AST.record(r.key.ast, r.value.ast)
+    propertySignatures.forEach((ps) => pss.push(ps))
+    indexSignatures.forEach((is) => iss.push(is))
   }
-  annotations(
-    annotations: Annotations.Schema<Types.Simplify<TypeLiteral.Type<Fields, Records>>>
-  ): TypeLiteral<Fields, Records> {
-    return new TypeLiteralImpl(this.fields, this.records, AST.annotations(this.ast, toASTAnnotations(annotations)))
+  return new AST.TypeLiteral(pss, iss)
+}
+
+const lazilyMergeDefaults = (
+  fields: Struct.Fields,
+  out: Record<PropertyKey, unknown>
+): { [x: string | symbol]: unknown } => {
+  const ownKeys = util_.ownKeys(fields)
+  for (const key of ownKeys) {
+    const field = fields[key]
+    if (out[key] === undefined && isPropertySignature(field)) {
+      const ast = field.ast
+      const defaultValue = ast._tag === "PropertySignatureDeclaration" ? ast.defaultValue : ast.to.defaultValue
+      if (defaultValue !== undefined) {
+        out[key] = defaultValue()
+      }
+    }
+  }
+  return out
+}
+
+const makeTypeLiteralClass = <
+  Fields extends Struct.Fields,
+  const Records extends IndexSignature.Records
+>(
+  fields: Fields,
+  records: Records,
+  ast: AST.AST = getDefaultTypeLiteralAST(fields, records)
+): TypeLiteral<Fields, Records> => {
+  return class TypeLiteralClass extends make<
+    Types.Simplify<TypeLiteral.Type<Fields, Records>>,
+    Types.Simplify<TypeLiteral.Encoded<Fields, Records>>,
+    | Struct.Context<Fields>
+    | IndexSignature.Context<Records>
+  >(ast) {
+    static override annotations(
+      annotations: Annotations.Schema<Types.Simplify<TypeLiteral.Type<Fields, Records>>>
+    ): TypeLiteral<Fields, Records> {
+      return makeTypeLiteralClass(this.fields, this.records, AST.annotations(this.ast, toASTAnnotations(annotations)))
+    }
+
+    static fields = { ...fields }
+
+    static records = [...records] as Records
+
+    static make(
+      props: Types.Simplify<TypeLiteral.Constructor<Fields, Records>>
+    ): Types.Simplify<TypeLiteral.Type<Fields, Records>> {
+      return ParseResult.validateSync(this)(lazilyMergeDefaults(fields, { ...props as any }))
+    }
   }
 }
 
@@ -2152,39 +2380,40 @@ export function Struct<Fields extends Struct.Fields, const Records extends Index
   fields: Fields,
   ...records: Records
 ): TypeLiteral<Fields, Records> {
-  return new TypeLiteralImpl(fields, records)
+  return makeTypeLiteralClass(fields, records)
 }
 
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface $Record<K extends Schema.All, V extends Schema.All> extends TypeLiteral<{}, [{ key: K; value: V }]> {
+export interface Record$<K extends Schema.All, V extends Schema.All> extends TypeLiteral<{}, [{ key: K; value: V }]> {
   readonly key: K
   readonly value: V
   annotations(
     annotations: Annotations.Schema<Types.Simplify<TypeLiteral.Type<{}, [{ key: K; value: V }]>>>
-  ): $Record<K, V>
+  ): Record$<K, V>
 }
 
-class $RecordImpl<K extends Schema.All, V extends Schema.All> extends TypeLiteralImpl<
-  {},
-  [{ key: K; value: V }]
-> implements $Record<K, V> {
-  constructor(readonly key: K, readonly value: V, ast?: AST.AST) {
-    super({}, [{ key, value }], ast)
-  }
-  annotations(annotations: Annotations.Schema<Types.Simplify<TypeLiteral.Type<{}, [{ key: K; value: V }]>>>) {
-    return new $RecordImpl(this.key, this.value, AST.annotations(this.ast, toASTAnnotations(annotations)))
+const makeRecordClass = <K extends Schema.All, V extends Schema.All>(key: K, value: V, ast?: AST.AST): Record$<K, V> =>
+  class RecordClass extends makeTypeLiteralClass({}, [{ key, value }], ast) {
+    static override annotations(
+      annotations: Annotations.Schema<Types.Simplify<TypeLiteral.Type<{}, [{ key: K; value: V }]>>>
+    ) {
+      return makeRecordClass(key, value, AST.annotations(this.ast, toASTAnnotations(annotations)))
+    }
+
+    static key = key
+
+    static value = value
   }
-}
 
 /**
  * @category constructors
  * @since 1.0.0
  */
-export const Record = <K extends Schema.All, V extends Schema.All>(key: K, value: V): $Record<K, V> =>
-  new $RecordImpl(key, value)
+export const Record = <K extends Schema.All, V extends Schema.All>(key: K, value: V): Record$<K, V> =>
+  makeRecordClass(key, value)
 
 /**
  * @category struct transformations
@@ -2193,7 +2422,7 @@ export const Record = <K extends Schema.All, V extends Schema.All>(key: K, value
 export const pick = <A, I, Keys extends ReadonlyArray<keyof A & keyof I>>(...keys: Keys) =>
 <R>(
   self: Schema<A, I, R>
-): Schema<Types.Simplify<Pick<A, Keys[number]>>, Types.Simplify<Pick<I, Keys[number]>>, R> =>
+): SchemaClass<Types.Simplify<Pick<A, Keys[number]>>, Types.Simplify<Pick<I, Keys[number]>>, R> =>
   make(AST.pick(self.ast, keys))
 
 /**
@@ -2203,7 +2432,7 @@ export const pick = <A, I, Keys extends ReadonlyArray<keyof A & keyof I>>(...key
 export const omit = <A, I, Keys extends ReadonlyArray<keyof A & keyof I>>(...keys: Keys) =>
 <R>(
   self: Schema<A, I, R>
-): Schema<Types.Simplify<Omit<A, Keys[number]>>, Types.Simplify<Omit<I, Keys[number]>>, R> =>
+): SchemaClass<Types.Simplify<Omit<A, Keys[number]>>, Types.Simplify<Omit<I, Keys[number]>>, R> =>
   make(AST.omit(self.ast, keys))
 
 /**
@@ -2261,56 +2490,36 @@ export const pluck: {
   }
 )
 
-const makeBrandSchema = <S extends Schema.AnyNoContext, B extends string | symbol>(
-  self: AST.AST,
-  annotations: Annotations.Schema<Schema.Type<S> & brand_.Brand<B>>
-): brand<S, B> => {
-  const ast = AST.annotations(self, toASTAnnotations(annotations))
-  const schema = make(ast)
-  const validateEither_ = validateEither(schema)
-
-  //     v-- function
-  const out: any = brand_.refined((unbranded) =>
-    either_.match(validateEither_(unbranded), {
-      onLeft: (e) => option_.some(brand_.error(TreeFormatter.formatErrorSync(e), e)),
-      onRight: () => option_.none()
-    })
-  )
-  // ----------------
-  // Schema interface
-  // ----------------
-  Object.setPrototypeOf(
-    Object.assign(out, schema, {
-      annotations: (a: typeof annotations) => makeBrandSchema(ast, a)
-    }),
-    Object.getPrototypeOf(schema)
-  )
-  return out
-}
-
 /**
  * @category branding
  * @since 1.0.0
  */
-export interface BrandSchema<A extends brand_.Brand<any>, I>
-  extends Annotable<BrandSchema<A, I>, A, I>, brand_.Brand.Constructor<A>
-{}
+export interface BrandSchema<A extends Brand<any>, I = A, R = never>
+  extends AnnotableClass<BrandSchema<A, I, R>, A, I, R>
+{
+  make(a: Brand.Unbranded<A>): A
+}
 
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface brand<S extends Schema.AnyNoContext, B extends string | symbol>
-  extends BrandSchema<Schema.Type<S> & brand_.Brand<B>, Schema.Encoded<S>>
+export interface brand<S extends Schema.Any, B extends string | symbol>
+  extends BrandSchema<Schema.Type<S> & Brand<B>, Schema.Encoded<S>, Schema.Context<S>>
 {
-  annotations(annotations: Annotations.Schema<Schema.Type<S> & brand_.Brand<B>>): brand<S, B>
+  annotations(annotations: Annotations.Schema<Schema.Type<S> & Brand<B>>): brand<S, B>
 }
 
-/**
- * @category branding
- * @since 1.0.0
- */
-export const asBrandSchema = <A extends brand_.Brand<any>, I>(schema: BrandSchema<A, I>): BrandSchema<A, I> => schema
+const makeBrandClass = <S extends Schema.Any, B extends string | symbol>(ast: AST.AST): brand<S, B> =>
+  class BrandClass extends make<Schema.Type<S> & Brand<B>, Schema.Encoded<S>, Schema.Context<S>>(ast) {
+    static override annotations(annotations: Annotations.Schema<Schema.Type<S> & Brand<B>>): brand<S, B> {
+      return makeBrandClass(AST.annotations(this.ast, toASTAnnotations(annotations)))
+    }
+
+    static make(a: Brand.Unbranded<Schema.Type<S> & Brand<B>>): Schema.Type<S> & Brand<B> {
+      return ParseResult.validateSync(this)(a)
+    }
+  }
 
 /**
  * Returns a nominal branded schema by applying a brand to a given schema.
@@ -2333,19 +2542,23 @@ export const asBrandSchema = <A extends brand_.Brand<any>, I>(schema: BrandSchem
  */
 export const brand = <S extends Schema.AnyNoContext, B extends string | symbol>(
   brand: B,
-  annotations?: Annotations.Schema<Schema.Type<S> & brand_.Brand<B>>
+  annotations?: Annotations.Schema<Schema.Type<S> & Brand<B>>
 ) =>
 (self: S): brand<S, B> => {
-  const brandAnnotation: AST.BrandAnnotation = option_.match(AST.getBrandAnnotation(self.ast), {
+  const annotation: AST.BrandAnnotation = option_.match(AST.getBrandAnnotation(self.ast), {
     onNone: () => [brand],
     onSome: (brands) => [...brands, brand]
   })
-  return makeBrandSchema(self.ast, {
-    // add a default title annotation containing the brand
-    title: String(self.ast) + ` & Brand<${util_.formatUnknown(brand)}>`,
-    ...annotations,
-    [AST.BrandAnnotationId]: brandAnnotation
-  })
+  const ast = AST.annotations(
+    self.ast,
+    toASTAnnotations({
+      // add a default title annotation containing the brand
+      title: String(self.ast) + ` & Brand<${util_.formatUnknown(brand)}>`,
+      ...annotations,
+      [AST.BrandAnnotationId]: annotation
+    })
+  )
+  return makeBrandClass(ast)
 }
 
 /**
@@ -2357,7 +2570,7 @@ export const partial: {
     options?: Options
   ): <A, I, R>(
     self: Schema<A, I, R>
-  ) => Schema<
+  ) => SchemaClass<
     { [K in keyof A]?: A[K] | ([undefined] extends [Options] ? undefined : never) },
     { [K in keyof I]?: I[K] | ([undefined] extends [Options] ? undefined : never) },
     R
@@ -2365,7 +2578,7 @@ export const partial: {
   <A, I, R, const Options extends { readonly exact: true } | undefined>(
     self: Schema<A, I, R>,
     options?: Options
-  ): Schema<
+  ): SchemaClass<
     { [K in keyof A]?: A[K] | ([undefined] extends [Options] ? undefined : never) },
     { [K in keyof I]?: I[K] | ([undefined] extends [Options] ? undefined : never) },
     R
@@ -2373,7 +2586,7 @@ export const partial: {
 } = dual((args) => isSchema(args[0]), <A, I, R>(
   self: Schema<A, I, R>,
   options?: { readonly exact: true }
-): Schema<Partial<A>, Partial<I>, R> => make(AST.partial(self.ast, options)))
+): SchemaClass<Partial<A>, Partial<I>, R> => make(AST.partial(self.ast, options)))
 
 /**
  * @category combinators
@@ -2381,14 +2594,14 @@ export const partial: {
  */
 export const required = <A, I, R>(
   self: Schema<A, I, R>
-): Schema<{ [K in keyof A]-?: A[K] }, { [K in keyof I]-?: I[K] }, R> => make(AST.required(self.ast))
+): SchemaClass<{ [K in keyof A]-?: A[K] }, { [K in keyof I]-?: I[K] }, R> => make(AST.required(self.ast))
 
 /**
  * @category api interface
  * @since 1.0.0
  */
 export interface mutable<S extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     mutable<S>,
     SimplifyMutable<Schema.Type<S>>,
     SimplifyMutable<Schema.Encoded<S>>,
@@ -2406,10 +2619,16 @@ export interface mutable<S extends Schema.Any> extends
  */
 export const mutable = <S extends Schema.Any>(schema: S): mutable<S> => make(AST.mutable(schema.ast))
 
-const getExtendErrorMessage = (x: AST.AST, y: AST.AST, path: ReadonlyArray<string>) =>
-  errors_.getAPIErrorMessage("Extend", `cannot extend \`${x}\` with \`${y}\` (path [${path?.join(", ")}])`)
+const getExtendErrorMessage = (x: AST.AST, y: AST.AST, path: ReadonlyArray<PropertyKey>) => {
+  const message = `unsupported schema or overlapping types, cannot extend ${x} with ${y}`
+  return errors_.getErrorMessageWithPath(errors_.getErrorMessage("extend", message), path)
+}
 
-const intersectTypeLiterals = (x: AST.AST, y: AST.AST, path: ReadonlyArray<string>): AST.TypeLiteral => {
+const intersectTypeLiterals = (
+  x: AST.AST,
+  y: AST.AST,
+  path: ReadonlyArray<PropertyKey>
+): AST.TypeLiteral => {
   if (AST.isTypeLiteral(x) && AST.isTypeLiteral(y)) {
     const propertySignatures = [...x.propertySignatures]
     for (const ps of y.propertySignatures) {
@@ -2419,8 +2638,12 @@ const intersectTypeLiterals = (x: AST.AST, y: AST.AST, path: ReadonlyArray<strin
         propertySignatures.push(ps)
       } else {
         const { isOptional, type } = propertySignatures[i]
-        path = [...path, util_.formatUnknown(name)]
-        propertySignatures[i] = new AST.PropertySignature(name, extendAST(type, ps.type, path), isOptional, true)
+        propertySignatures[i] = new AST.PropertySignature(
+          name,
+          extendAST(type, ps.type, path.concat(name)),
+          isOptional,
+          true
+        )
       }
     }
     return new AST.TypeLiteral(
@@ -2431,65 +2654,101 @@ const intersectTypeLiterals = (x: AST.AST, y: AST.AST, path: ReadonlyArray<strin
   throw new Error(getExtendErrorMessage(x, y, path))
 }
 
-const extendAST = (x: AST.AST, y: AST.AST, path: ReadonlyArray<string>): AST.AST =>
-  AST.Union.make(intersectUnionMembers([x], [y], path))
+const addRefinementToMembers = (refinement: AST.Refinement, asts: ReadonlyArray<AST.AST>): Array<AST.Refinement> =>
+  asts.map((ast) =>
+    new AST.Refinement(
+      ast,
+      refinement.filter,
+      // preserve message annotation
+      option_.match(AST.getMessageAnnotation(refinement), {
+        onNone: () => undefined,
+        onSome: (message) => ({ [AST.MessageAnnotationId]: message })
+      })
+    )
+  )
+
+const extendAST = (
+  x: AST.AST,
+  y: AST.AST,
+  path: ReadonlyArray<PropertyKey>
+): AST.AST => AST.Union.make(intersectUnionMembers([x], [y], path))
+
+const getTypes = (ast: AST.AST): ReadonlyArray<AST.AST> => AST.isUnion(ast) ? ast.types : [ast]
 
 const intersectUnionMembers = (
   xs: ReadonlyArray<AST.AST>,
   ys: ReadonlyArray<AST.AST>,
-  path: ReadonlyArray<string>
+  path: ReadonlyArray<PropertyKey>
 ): Array<AST.AST> =>
   array_.flatMap(xs, (x) =>
     array_.flatMap(ys, (y) => {
-      if (AST.isUnion(x)) {
-        return intersectUnionMembers(x.types, AST.isUnion(y) ? y.types : [y], path)
-      } else if (AST.isUnion(y)) {
-        return intersectUnionMembers([x], y.types, path)
-      }
-
-      if (AST.isTypeLiteral(x)) {
-        if (AST.isTypeLiteral(y)) {
-          return [intersectTypeLiterals(x, y, path)]
-        } else if (
-          AST.isTransformation(y) && AST.isTypeLiteralTransformation(y.transformation)
-        ) {
-          return [
-            new AST.Transformation(
-              intersectTypeLiterals(x, y.from, path),
-              intersectTypeLiterals(AST.typeAST(x), y.to, path),
-              new AST.TypeLiteralTransformation(
-                y.transformation.propertySignatureTransformations
-              )
-            )
-          ]
+      switch (x._tag) {
+        case "Union":
+          return intersectUnionMembers(x.types, getTypes(y), path)
+        case "Suspend":
+          return [new AST.Suspend(() => extendAST(x.f(), y, path))]
+        case "Refinement":
+          return addRefinementToMembers(x, intersectUnionMembers(getTypes(x.from), getTypes(y), path))
+        case "TypeLiteral": {
+          switch (y._tag) {
+            case "Union":
+              return intersectUnionMembers([x], y.types, path)
+            case "Suspend":
+              return [new AST.Suspend(() => extendAST(x, y.f(), path))]
+            case "Refinement":
+              return addRefinementToMembers(y, intersectUnionMembers([x], getTypes(y.from), path))
+            case "TypeLiteral":
+              return [intersectTypeLiterals(x, y, path)]
+            case "Transformation": {
+              if (AST.isTypeLiteralTransformation(y.transformation)) {
+                return [
+                  new AST.Transformation(
+                    intersectTypeLiterals(x, y.from, path),
+                    intersectTypeLiterals(AST.typeAST(x), y.to, path),
+                    new AST.TypeLiteralTransformation(
+                      y.transformation.propertySignatureTransformations
+                    )
+                  )
+                ]
+              }
+              break
+            }
+          }
+          break
         }
-      } else if (
-        AST.isTransformation(x) && AST.isTypeLiteralTransformation(x.transformation)
-      ) {
-        if (AST.isTypeLiteral(y)) {
-          return [
-            new AST.Transformation(
-              intersectTypeLiterals(x.from, y, path),
-              intersectTypeLiterals(x.to, AST.typeAST(y), path),
-              new AST.TypeLiteralTransformation(
-                x.transformation.propertySignatureTransformations
-              )
-            )
-          ]
-        } else if (
-          AST.isTransformation(y) && AST.isTypeLiteralTransformation(y.transformation)
-        ) {
-          return [
-            new AST.Transformation(
-              intersectTypeLiterals(x.from, y.from, path),
-              intersectTypeLiterals(x.to, y.to, path),
-              new AST.TypeLiteralTransformation(
-                x.transformation.propertySignatureTransformations.concat(
-                  y.transformation.propertySignatureTransformations
-                )
-              )
-            )
-          ]
+        case "Transformation": {
+          if (AST.isTypeLiteralTransformation(x.transformation)) {
+            switch (y._tag) {
+              case "TypeLiteral":
+                return [
+                  new AST.Transformation(
+                    intersectTypeLiterals(x.from, y, path),
+                    intersectTypeLiterals(x.to, AST.typeAST(y), path),
+                    new AST.TypeLiteralTransformation(
+                      x.transformation.propertySignatureTransformations
+                    )
+                  )
+                ]
+              case "Transformation":
+                {
+                  if (AST.isTypeLiteralTransformation(y.transformation)) {
+                    return [
+                      new AST.Transformation(
+                        intersectTypeLiterals(x.from, y.from, path),
+                        intersectTypeLiterals(x.to, y.to, path),
+                        new AST.TypeLiteralTransformation(
+                          x.transformation.propertySignatureTransformations.concat(
+                            y.transformation.propertySignatureTransformations
+                          )
+                        )
+                      )
+                    ]
+                  }
+                }
+                break
+            }
+          }
+          break
         }
       }
       throw new Error(getExtendErrorMessage(x, y, path))
@@ -2500,7 +2759,8 @@ const intersectUnionMembers = (
  * @since 1.0.0
  */
 export interface extend<Self extends Schema.Any, That extends Schema.Any> extends
-  Schema<
+  AnnotableClass<
+    extend<Self, That>,
     Types.Simplify<Schema.Type<Self> & Schema.Type<That>>,
     Types.Simplify<Schema.Encoded<Self> & Schema.Encoded<That>>,
     Schema.Context<Self> | Schema.Context<That>
@@ -2508,6 +2768,31 @@ export interface extend<Self extends Schema.Any, That extends Schema.Any> extend
 {}
 
 /**
+ * Extends a schema by adding additional fields or index signatures.
+ *
+ * 1) It only supports **structs**, refinements of structs, unions of structs, suspensions of structs
+ * (informally `Supported = Struct | Refinement of Supported | Union of Supported | suspend(() => Supported)`)
+ * 2) The arguments must represent disjoint types (e.g., `extend(Struct({ a: String }), Struct({ a: String })))` raises an error)
+ *
+ * @example
+ * import * as Schema from "@effect/schema/Schema"
+ *
+ * const schema = Schema.Struct({
+ *   a: Schema.String,
+ *   b: Schema.String
+ * })
+ *
+ * // const extended: S.Schema<{
+ * //     readonly [x: string]: string;
+ * //     readonly a: string;
+ * //     readonly b: string;
+ * //     readonly c: string;
+ * // }>
+ * const extended = Schema.asSchema(schema.pipe(
+ *   Schema.extend(Schema.Struct({ c: Schema.String })), // <= you can add more fields
+ *   Schema.extend(Schema.Record(Schema.String, Schema.String)) // <= you can add index signatures
+ * ))
+ *
  * @category combinators
  * @since 1.0.0
  */
@@ -2534,40 +2819,40 @@ export const extend: {
 export const compose: {
   <D, C extends B, R2, B>(
     to: Schema<D, C, R2>
-  ): <A, R1>(from: Schema<B, A, R1>) => Schema<D, A, R1 | R2>
+  ): <A, R1>(from: Schema<B, A, R1>) => SchemaClass<D, A, R1 | R2>
   <D, C, R2>(
     to: Schema<D, C, R2>
-  ): <B extends C, A, R1>(from: Schema<B, A, R1>) => Schema<D, A, R1 | R2>
+  ): <B extends C, A, R1>(from: Schema<B, A, R1>) => SchemaClass<D, A, R1 | R2>
   <C, B, R2>(
     to: Schema<C, B, R2>,
     options?: { readonly strict: true }
-  ): <A, R1>(from: Schema<B, A, R1>) => Schema<C, A, R1 | R2>
+  ): <A, R1>(from: Schema<B, A, R1>) => SchemaClass<C, A, R1 | R2>
   <D, C, R2>(
     to: Schema<D, C, R2>,
     options: { readonly strict: false }
-  ): <B, A, R1>(from: Schema<B, A, R1>) => Schema<D, A, R1 | R2>
+  ): <B, A, R1>(from: Schema<B, A, R1>) => SchemaClass<D, A, R1 | R2>
 
   <B, A, R1, D, C extends B, R2>(
     from: Schema<B, A, R1>,
     to: Schema<D, C, R2>
-  ): Schema<D, A, R1 | R2>
+  ): SchemaClass<D, A, R1 | R2>
   <B extends C, A, R1, D, C, R2>(
     from: Schema<B, A, R1>,
     to: Schema<D, C, R2>
-  ): Schema<D, A, R1 | R2>
+  ): SchemaClass<D, A, R1 | R2>
   <B, A, R1, C, R2>(
     from: Schema<B, A, R1>,
     to: Schema<C, B, R2>,
     options?: { readonly strict: true }
-  ): Schema<C, A, R1 | R2>
+  ): SchemaClass<C, A, R1 | R2>
   <B, A, R1, D, C, R2>(
     from: Schema<B, A, R1>,
     to: Schema<D, C, R2>,
     options: { readonly strict: false }
-  ): Schema<D, A, R1 | R2>
+  ): SchemaClass<D, A, R1 | R2>
 } = dual(
   (args) => isSchema(args[1]),
-  <B, A, R1, D, C, R2>(from: Schema<B, A, R1>, to: Schema<D, C, R2>): Schema<D, A, R1 | R2> =>
+  <B, A, R1, D, C, R2>(from: Schema<B, A, R1>, to: Schema<D, C, R2>): SchemaClass<D, A, R1 | R2> =>
     make(AST.compose(from.ast, to.ast))
 )
 
@@ -2575,9 +2860,7 @@ export const compose: {
  * @category api interface
  * @since 1.0.0
  */
-export interface suspend<A, I, R> extends Schema<A, I, R> {
-  annotations(annotations: Annotations.Schema<A>): suspend<A, I, R>
-}
+export interface suspend<A, I, R> extends AnnotableClass<suspend<A, I, R>, A, I, R> {}
 
 /**
  * @category constructors
@@ -2585,50 +2868,103 @@ export interface suspend<A, I, R> extends Schema<A, I, R> {
  */
 export const suspend = <A, I, R>(f: () => Schema<A, I, R>): suspend<A, I, R> => make(new AST.Suspend(() => f().ast))
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface refine<A, From extends Schema.Any>
+  extends AnnotableClass<refine<A, From>, A, Schema.Encoded<From>, Schema.Context<From>>
+{
+  readonly from: From
+  readonly filter: (
+    a: Schema.Type<From>,
+    options: ParseOptions,
+    self: AST.Refinement
+  ) => option_.Option<ParseResult.ParseIssue>
+  make(a: Schema.Type<From>): A
+}
+
+const makeRefineClass = <From extends Schema.Any, A>(
+  from: From,
+  filter: (
+    a: Schema.Type<From>,
+    options: ParseOptions,
+    self: AST.Refinement
+  ) => option_.Option<ParseResult.ParseIssue>,
+  ast: AST.AST
+): refine<A, From> =>
+  class RefineClass extends make<A, Schema.Encoded<From>, Schema.Context<From>>(ast) {
+    static override annotations(annotations: Annotations.Schema<A>): refine<A, From> {
+      return makeRefineClass(this.from, this.filter, AST.annotations(this.ast, toASTAnnotations(annotations)))
+    }
+
+    static from = from
+
+    static filter = filter
+
+    static make(a: Schema.Type<From>): A {
+      return ParseResult.validateSync(this)(a)
+    }
+  }
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface filter<From extends Schema.Any> extends refine<Schema.Type<From>, From> {}
+
 /**
  * @category combinators
  * @since 1.0.0
  */
-export function filter<A>(
-  f: (a: A, options: ParseOptions, self: AST.Refinement) => option_.Option<ParseResult.ParseIssue>,
-  annotations?: Annotations.Filter<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>
 export function filter<C extends A, B extends A, A = C>(
-  refinement: Predicate.Refinement<A, B>,
-  annotations?: Annotations.Filter<A>
-): <I, R>(self: Schema<C, I, R>) => Schema<C & B, I, R>
+  refinement: (a: A, options: ParseOptions, self: AST.Refinement) => a is B,
+  annotations?: Annotations.Filter<C & B, C>
+): <I, R>(self: Schema<C, I, R>) => refine<C & B, Schema<A, I, R>>
+export function filter<S extends Schema.Any>(
+  predicate: (
+    a: Types.NoInfer<Schema.Type<S>>,
+    options: ParseOptions,
+    self: AST.Refinement
+  ) => undefined | boolean | string | ParseResult.ParseIssue,
+  annotations?: Annotations.Filter<Types.NoInfer<Schema.Type<S>>>
+): (self: S) => filter<S>
 export function filter<A>(
-  predicate: Predicate.Predicate<Types.NoInfer<A>>,
-  annotations?: Annotations.Filter<Types.NoInfer<A>>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R>
-export function filter<A>(
-  predicate: Predicate.Predicate<A> | AST.Refinement["filter"],
+  predicate: (
+    a: A,
+    options: ParseOptions,
+    self: AST.Refinement
+  ) => undefined | boolean | string | ParseResult.ParseIssue,
   annotations?: Annotations.Filter<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> {
-  return (self) =>
-    make(
-      new AST.Refinement(
-        self.ast,
-        (a, options, ast) => {
-          const out = predicate(a, options, ast)
-          if (Predicate.isBoolean(out)) {
-            return out
-              ? option_.none()
-              : option_.some(new ParseResult.Type(ast, a))
-          }
-          return out
-        },
-        toASTAnnotations(annotations)
-      )
+): <I, R>(self: Schema<A, I, R>) => refine<A, Schema<A, I, R>> {
+  return <I, R>(self: Schema<A, I, R>) => {
+    function filter(a: any, options: AST.ParseOptions, ast: AST.Refinement) {
+      const out = predicate(a, options, ast)
+      if (Predicate.isBoolean(out)) {
+        return out
+          ? option_.none()
+          : option_.some(new ParseResult.Type(ast, a))
+      }
+      if (Predicate.isString(out)) {
+        return option_.some(new ParseResult.Type(ast, a, out))
+      }
+      return out === undefined ? option_.none() : option_.some(out)
+    }
+    const ast = new AST.Refinement(
+      self.ast,
+      filter,
+      toASTAnnotations(annotations)
     )
+    return makeRefineClass(self, filter, ast)
+  }
 }
 
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface transformOrFail<From extends Schema.Any, To extends Schema.Any, R> extends
-  Annotable<
+export interface transformOrFail<From extends Schema.Any, To extends Schema.Any, R = never> extends
+  AnnotableClass<
     transformOrFail<From, To, R>,
     Schema.Type<To>,
     Schema.Encoded<From>,
@@ -2639,17 +2975,26 @@ export interface transformOrFail<From extends Schema.Any, To extends Schema.Any,
   readonly to: To
 }
 
-class transformOrFailImpl<From extends Schema.Any, To extends Schema.Any, R>
-  extends SchemaImpl<Schema.Type<To>, Schema.Encoded<From>, Schema.Context<From> | Schema.Context<To> | R>
-  implements transformOrFail<From, To, R>
-{
-  constructor(readonly from: From, readonly to: To, ast: AST.AST) {
-    super(ast)
-  }
-  annotations(annotations: Annotations.Schema<Schema.Type<To>>) {
-    return new transformOrFailImpl(this.from, this.to, AST.annotations(this.ast, toASTAnnotations(annotations)))
+const makeTransformationClass = <From extends Schema.Any, To extends Schema.Any, R>(
+  from: From,
+  to: To,
+  ast: AST.AST
+): transformOrFail<From, To, R> =>
+  class TransformationClass
+    extends make<Schema.Type<To>, Schema.Encoded<From>, Schema.Context<From> | Schema.Context<To> | R>(ast)
+  {
+    static override annotations(annotations: Annotations.Schema<Schema.Type<To>>) {
+      return makeTransformationClass<From, To, R>(
+        this.from,
+        this.to,
+        AST.annotations(this.ast, toASTAnnotations(annotations))
+      )
+    }
+
+    static from = from
+
+    static to = to
   }
-}
 
 /**
  * Create a new `Schema` by transforming the input and output of an existing `Schema`
@@ -2732,7 +3077,7 @@ export const transformOrFail: {
     ) => Effect.Effect<FromA, ParseResult.ParseIssue, RE>
   }
 ): Schema<ToA, FromI, FromR | ToR | RD | RE> =>
-  new transformOrFailImpl(
+  makeTransformationClass(
     from,
     to,
     new AST.Transformation(
@@ -2746,7 +3091,7 @@ export const transformOrFail: {
  * @category api interface
  * @since 1.0.0
  */
-export interface transform<From extends Schema.Any, To extends Schema.Any> extends transformOrFail<From, To, never> {
+export interface transform<From extends Schema.Any, To extends Schema.Any> extends transformOrFail<From, To> {
   annotations(annotations: Annotations.Schema<Schema.Type<To>>): transform<From, To>
 }
 
@@ -2893,14 +3238,14 @@ export const attachPropertySignature: {
     value: V,
     annotations?: Annotations.Schema<Types.Simplify<A & { readonly [k in K]: V }>>
   ): <I, R>(
-    schema: Schema<A, I, R>
+    schema: SchemaClass<A, I, R>
   ) => Schema<Types.Simplify<A & { readonly [k in K]: V }>, I, R>
   <A, I, R, K extends PropertyKey, V extends AST.LiteralValue | symbol>(
     schema: Schema<A, I, R>,
     key: K,
     value: V,
     annotations?: Annotations.Schema<Types.Simplify<A & { readonly [k in K]: V }>>
-  ): Schema<Types.Simplify<A & { readonly [k in K]: V }>, I, R>
+  ): SchemaClass<Types.Simplify<A & { readonly [k in K]: V }>, I, R>
 } = dual(
   (args) => isSchema(args[0]),
   <A, I, R, K extends PropertyKey, V extends AST.LiteralValue | symbol>(
@@ -2908,7 +3253,7 @@ export const attachPropertySignature: {
     key: K,
     value: V,
     annotations?: Annotations.Schema<Types.Simplify<A & { readonly [k in K]: V }>>
-  ): Schema<Types.Simplify<A & { readonly [k in K]: V }>, I, R> => {
+  ): SchemaClass<Types.Simplify<A & { readonly [k in K]: V }>, I, R> => {
     const attached = extend(
       typeSchema(schema),
       Struct({ [key]: Predicate.isSymbol(value) ? UniqueSymbolFromSelf(value) : Literal(value) })
@@ -2974,7 +3319,7 @@ export declare namespace Annotations {
   /**
    * @since 1.0.0
    */
-  export interface Filter<A> extends Schema<A, readonly [A]> {}
+  export interface Filter<A, P = A> extends Schema<A, readonly [P]> {}
 }
 
 /**
@@ -3027,7 +3372,7 @@ export const examples =
   <S extends Annotable.All>(examples: AST.ExamplesAnnotation<Schema.Type<S>>) => (self: S): Annotable.Self<S> =>
     self.annotations({ [AST.ExamplesAnnotationId]: examples })
 
-const $default = <S extends Annotable.All>(value: Schema.Type<S>) => (self: S): Annotable.Self<S> =>
+const default$ = <S extends Annotable.All>(value: Schema.Type<S>) => (self: S): Annotable.Self<S> =>
   self.annotations({ [AST.DefaultAnnotationId]: value })
 
 export {
@@ -3035,7 +3380,7 @@ export {
    * @category annotations
    * @since 1.0.0
    */
-  $default as default
+  default$ as default
 }
 
 /**
@@ -3109,7 +3454,7 @@ export const rename: {
       & { readonly [K in Exclude<keyof M, keyof A>]: never }
   >(
     mapping: M
-  ): <I, R>(self: Schema<A, I, R>) => Schema<Types.Simplify<Rename<A, M>>, I, R>
+  ): <I, R>(self: Schema<A, I, R>) => SchemaClass<Types.Simplify<Rename<A, M>>, I, R>
   <
     A,
     I,
@@ -3120,7 +3465,7 @@ export const rename: {
   >(
     self: Schema<A, I, R>,
     mapping: M
-  ): Schema<Types.Simplify<Rename<A, M>>, I, R>
+  ): SchemaClass<Types.Simplify<Rename<A, M>>, I, R>
 } = dual(
   2,
   <
@@ -3133,9 +3478,7 @@ export const rename: {
   >(
     self: Schema<A, I, R>,
     mapping: M
-  ): Schema<Types.Simplify<Rename<A, M>>, I, R> => {
-    return make(AST.rename(self.ast, mapping))
-  }
+  ): SchemaClass<Types.Simplify<Rename<A, M>>, I, R> => make(AST.rename(self.ast, mapping))
 )
 
 /**
@@ -3154,11 +3497,12 @@ export const TrimmedTypeId: unique symbol = Symbol.for("@effect/schema/TypeId/Tr
  * @since 1.0.0
  */
 export const trimmed =
-  <A extends string>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  <A extends string>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
     self.pipe(
-      filter((a): a is A => a === a.trim(), {
+      filter((a) => a === a.trim(), {
         typeId: TrimmedTypeId,
         description: "a string with no leading or trailing whitespace",
+        jsonSchema: { pattern: "^.*[a-zA-Z0-9]+.*$" },
         ...annotations
       })
     )
@@ -3183,10 +3527,10 @@ export const maxLength = <A extends string>(
   maxLength: number,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
     filter(
-      (a): a is A => a.length <= maxLength,
+      (a) => a.length <= maxLength,
       {
         typeId: MaxLengthTypeId,
         description: `a string at most ${maxLength} character(s) long`,
@@ -3216,10 +3560,10 @@ export const minLength = <A extends string>(
   minLength: number,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
     filter(
-      (a): a is A => a.length >= minLength,
+      (a) => a.length >= minLength,
       {
         typeId: MinLengthTypeId,
         description: `a string at least ${minLength} character(s) long`,
@@ -3243,7 +3587,7 @@ export const pattern = <A extends string>(
   regex: RegExp,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> => {
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> => {
   const pattern = regex.source
   return self.pipe(
     filter(
@@ -3277,10 +3621,10 @@ export const startsWith = <A extends string>(
   startsWith: string,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
     filter(
-      (a): a is A => a.startsWith(startsWith),
+      (a) => a.startsWith(startsWith),
       {
         typeId: { id: StartsWithTypeId, annotation: { startsWith } },
         description: `a string starting with ${JSON.stringify(startsWith)}`,
@@ -3304,10 +3648,10 @@ export const endsWith = <A extends string>(
   endsWith: string,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
     filter(
-      (a): a is A => a.endsWith(endsWith),
+      (a) => a.endsWith(endsWith),
       {
         typeId: { id: EndsWithTypeId, annotation: { endsWith } },
         description: `a string ending with ${JSON.stringify(endsWith)}`,
@@ -3331,10 +3675,10 @@ export const includes = <A extends string>(
   searchString: string,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
     filter(
-      (a): a is A => a.includes(searchString),
+      (a) => a.includes(searchString),
       {
         typeId: { id: IncludesTypeId, annotation: { includes: searchString } },
         description: `a string including ${JSON.stringify(searchString)}`,
@@ -3357,9 +3701,9 @@ export const LowercasedTypeId: unique symbol = Symbol.for("@effect/schema/TypeId
  * @since 1.0.0
  */
 export const lowercased =
-  <A extends string>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  <A extends string>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
     self.pipe(
-      filter((a): a is A => a === a.toLowerCase(), {
+      filter((a) => a === a.toLowerCase(), {
         typeId: LowercasedTypeId,
         description: "a lowercase string",
         ...annotations
@@ -3370,9 +3714,11 @@ export const lowercased =
  * @category string constructors
  * @since 1.0.0
  */
-export const Lowercased: $String = $String.pipe(
+export class Lowercased extends String$.pipe(
   lowercased({ identifier: "Lowercased", title: "Lowercased" })
-)
+) {
+  static override annotations: (annotations: Annotations.Schema<string>) => typeof Lowercased = super.annotations
+}
 
 /**
  * @category type id
@@ -3387,9 +3733,9 @@ export const UppercasedTypeId: unique symbol = Symbol.for("@effect/schema/TypeId
  * @since 1.0.0
  */
 export const uppercased =
-  <A extends string>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  <A extends string>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
     self.pipe(
-      filter((a): a is A => a === a.toUpperCase(), {
+      filter((a) => a === a.toUpperCase(), {
         typeId: UppercasedTypeId,
         description: "an uppercase string",
         ...annotations
@@ -3400,9 +3746,11 @@ export const uppercased =
  * @category string constructors
  * @since 1.0.0
  */
-export const Uppercased: $String = $String.pipe(
+export class Uppercased extends String$.pipe(
   uppercased({ identifier: "Uppercased", title: "Uppercased" })
-)
+) {
+  static override annotations: (annotations: Annotations.Schema<string>) => typeof Uppercased = super.annotations
+}
 
 /**
  * @category type id
@@ -3424,12 +3772,12 @@ export const length = <A extends string>(
   length: number | { readonly min: number; readonly max: number },
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> => {
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> => {
   const minLength = Predicate.isObject(length) ? Math.max(0, Math.floor(length.min)) : Math.max(0, Math.floor(length))
   const maxLength = Predicate.isObject(length) ? Math.max(minLength, Math.floor(length.max)) : minLength
   if (minLength !== maxLength) {
     return self.pipe(
-      filter((a): a is A => a.length >= minLength && a.length <= maxLength, {
+      filter((a) => a.length >= minLength && a.length <= maxLength, {
         typeId: LengthTypeId,
         description: `a string at least ${minLength} character(s) and at most ${maxLength} character(s) long`,
         jsonSchema: { minLength, maxLength },
@@ -3438,7 +3786,7 @@ export const length = <A extends string>(
     )
   }
   return self.pipe(
-    filter((a): a is A => a.length === minLength, {
+    filter((a) => a.length === minLength, {
       typeId: LengthTypeId,
       description: minLength === 1 ? `a single character` : `a string ${minLength} character(s) long`,
       jsonSchema: { minLength, maxLength: minLength },
@@ -3453,7 +3801,9 @@ export const length = <A extends string>(
  * @category string constructors
  * @since 1.0.0
  */
-export const Char = $String.pipe(length(1, { identifier: "Char" }))
+export class Char extends String$.pipe(length(1, { identifier: "Char" })) {
+  static override annotations: (annotations: Annotations.Schema<string>) => typeof Char = super.annotations
+}
 
 /**
  * @category string filters
@@ -3461,35 +3811,25 @@ export const Char = $String.pipe(length(1, { identifier: "Char" }))
  */
 export const nonEmpty = <A extends string>(
   annotations?: Annotations.Filter<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> =>
+): <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>> =>
   minLength(1, {
     description: "a non empty string",
     ...annotations
   })
 
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Lowercase extends Annotable<Lowercase, string> {}
-
 /**
  * This schema converts a string to lowercase.
  *
  * @category string transformations
  * @since 1.0.0
  */
-export const Lowercase: Lowercase = transform(
-  $String,
+export class Lowercase extends transform(
+  String$,
   Lowercased,
   { decode: (s) => s.toLowerCase(), encode: identity }
-).annotations({ identifier: "Lowercase" })
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Uppercase extends Annotable<Uppercase, string> {}
+).annotations({ identifier: "Lowercase" }) {
+  static override annotations: (annotations: Annotations.Schema<string>) => typeof Lowercase = super.annotations
+}
 
 /**
  * This schema converts a string to uppercase.
@@ -3497,25 +3837,23 @@ export interface Uppercase extends Annotable<Uppercase, string> {}
  * @category string transformations
  * @since 1.0.0
  */
-export const Uppercase: Uppercase = transform(
-  $String,
+export class Uppercase extends transform(
+  String$,
   Uppercased,
   { decode: (s) => s.toUpperCase(), encode: identity }
-).annotations({ identifier: "Uppercase" })
+).annotations({ identifier: "Uppercase" }) {
+  static override annotations: (annotations: Annotations.Schema<string>) => typeof Uppercase = super.annotations
+}
 
 /**
  * @category string constructors
  * @since 1.0.0
  */
-export const Trimmed: $String = $String.pipe(
+export class Trimmed extends String$.pipe(
   trimmed({ identifier: "Trimmed", title: "Trimmed" })
-)
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Trim extends Annotable<Trim, string> {}
+) {
+  static override annotations: (annotations: Annotations.Schema<string>) => typeof Trimmed = super.annotations
+}
 
 /**
  * This schema allows removing whitespaces from the beginning and end of a string.
@@ -3523,11 +3861,13 @@ export interface Trim extends Annotable<Trim, string> {}
  * @category string transformations
  * @since 1.0.0
  */
-export const Trim: Trim = transform(
-  $String,
+export class Trim extends transform(
+  String$,
   Trimmed,
   { decode: (s) => s.trim(), encode: identity }
-).annotations({ identifier: "Trim" })
+).annotations({ identifier: "Trim" }) {
+  static override annotations: (annotations: Annotations.Schema<string>) => typeof Trim = super.annotations
+}
 
 /**
  * Returns a schema that allows splitting a string into an array of strings.
@@ -3535,10 +3875,10 @@ export const Trim: Trim = transform(
  * @category string transformations
  * @since 1.0.0
  */
-export const split = (separator: string): Schema<ReadonlyArray<string>, string> =>
+export const split = (separator: string): transform<typeof String$, Array$<typeof String$>> =>
   transform(
-    $String,
-    $Array($String),
+    String$,
+    Array$(String$),
     { decode: string_.split(separator), encode: array_.join(separator) }
   )
 
@@ -3551,7 +3891,7 @@ export type ParseJsonOptions = {
   readonly space?: Parameters<typeof JSON.stringify>[2]
 }
 
-const JsonString = $String.annotations({
+const JsonString = String$.annotations({
   [AST.IdentifierAnnotationId]: "JsonString",
   [AST.TitleAnnotationId]: "JsonString",
   [AST.DescriptionAnnotationId]: "a JSON string"
@@ -3575,8 +3915,8 @@ const JsonString = $String.annotations({
  * @since 1.0.0
  */
 export const parseJson: {
-  <A, I, R>(schema: Schema<A, I, R>, options?: ParseJsonOptions): Schema<A, string, R>
-  (options?: ParseJsonOptions): Schema<unknown, string>
+  <A, I, R>(schema: Schema<A, I, R>, options?: ParseJsonOptions): SchemaClass<A, string, R>
+  (options?: ParseJsonOptions): SchemaClass<unknown, string>
 } = <A, I, R>(schema?: Schema<A, I, R> | ParseJsonOptions, o?: ParseJsonOptions) => {
   if (isSchema(schema)) {
     return compose(parseJson(o), schema as any) as any
@@ -3604,9 +3944,11 @@ export const parseJson: {
  * @category string constructors
  * @since 1.0.0
  */
-export const NonEmpty: $String = $String.pipe(
+export class NonEmpty extends String$.pipe(
   nonEmpty({ identifier: "NonEmpty", title: "NonEmpty" })
-)
+) {
+  static override annotations: (annotations: Annotations.Schema<string>) => typeof NonEmpty = super.annotations
+}
 
 /**
  * @category type id
@@ -3614,7 +3956,7 @@ export const NonEmpty: $String = $String.pipe(
  */
 export const UUIDTypeId: unique symbol = Symbol.for("@effect/schema/TypeId/UUID")
 
-const uuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i
+const uuidRegexp = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i
 
 /**
  * Represents a Universally Unique Identifier (UUID).
@@ -3624,15 +3966,17 @@ const uuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-
  * @category string constructors
  * @since 1.0.0
  */
-export const UUID: $String = $String.pipe(
-  pattern(uuidRegex, {
+export class UUID extends String$.pipe(
+  pattern(uuidRegexp, {
     typeId: UUIDTypeId,
     identifier: "UUID",
     title: "UUID",
     description: "a Universally Unique Identifier",
     arbitrary: (): LazyArbitrary<string> => (fc) => fc.uuid()
   })
-)
+) {
+  static override annotations: (annotations: Annotations.Schema<string>) => typeof UUID = super.annotations
+}
 
 /**
  * @category type id
@@ -3640,7 +3984,7 @@ export const UUID: $String = $String.pipe(
  */
 export const ULIDTypeId: unique symbol = Symbol.for("@effect/schema/TypeId/ULID")
 
-const ulidRegex = /^[0-7][0-9A-HJKMNP-TV-Z]{25}$/i
+const ulidRegexp = /^[0-7][0-9A-HJKMNP-TV-Z]{25}$/i
 
 /**
  * Represents a Universally Unique Lexicographically Sortable Identifier (ULID).
@@ -3651,15 +3995,17 @@ const ulidRegex = /^[0-7][0-9A-HJKMNP-TV-Z]{25}$/i
  * @category string constructors
  * @since 1.0.0
  */
-export const ULID: $String = $String.pipe(
-  pattern(ulidRegex, {
+export class ULID extends String$.pipe(
+  pattern(ulidRegexp, {
     typeId: ULIDTypeId,
     identifier: "ULID",
     title: "ULID",
     description: "a Universally Unique Lexicographically Sortable Identifier",
     arbitrary: (): LazyArbitrary<string> => (fc) => fc.ulid()
   })
-)
+) {
+  static override annotations: (annotations: Annotations.Schema<string>) => typeof ULID = super.annotations
+}
 
 /**
  * @category type id
@@ -3676,9 +4022,9 @@ export const FiniteTypeId: unique symbol = Symbol.for("@effect/schema/TypeId/Fin
  * @since 1.0.0
  */
 export const finite =
-  <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
     self.pipe(
-      filter((a): a is A => Number.isFinite(a), {
+      filter((a) => Number.isFinite(a), {
         typeId: FiniteTypeId,
         description: "a finite number",
         ...annotations
@@ -3707,9 +4053,9 @@ export const greaterThan = <A extends number>(
   min: number,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => a > min, {
+    filter((a) => a > min, {
       typeId: GreaterThanTypeId,
       description: min === 0 ? "a positive number" : `a number greater than ${min}`,
       jsonSchema: { exclusiveMinimum: min },
@@ -3739,9 +4085,9 @@ export const greaterThanOrEqualTo = <A extends number>(
   min: number,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => a >= min, {
+    filter((a) => a >= min, {
       typeId: GreaterThanOrEqualToTypeId,
       description: min === 0 ? "a non-negative number" : `a number greater than or equal to ${min}`,
       jsonSchema: { minimum: min },
@@ -3763,9 +4109,9 @@ export const multipleOf = <A extends number>(
   divisor: number,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => number_.remainder(a, divisor) === 0, {
+    filter((a) => number_.remainder(a, divisor) === 0, {
       typeId: MultipleOfTypeId,
       description: `a number divisible by ${divisor}`,
       jsonSchema: { multipleOf: Math.abs(divisor) }, // spec requires positive divisor
@@ -3790,9 +4136,9 @@ export type IntTypeId = typeof IntTypeId
  * @since 1.0.0
  */
 export const int =
-  <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
     self.pipe(
-      filter((a): a is A => Number.isSafeInteger(a), {
+      filter((a) => Number.isSafeInteger(a), {
         typeId: IntTypeId,
         title: "integer",
         description: "an integer",
@@ -3821,9 +4167,9 @@ export type LessThanTypeId = typeof LessThanTypeId
  */
 export const lessThan =
   <A extends number>(max: number, annotations?: Annotations.Filter<A>) =>
-  <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  <I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
     self.pipe(
-      filter((a): a is A => a < max, {
+      filter((a) => a < max, {
         typeId: LessThanTypeId,
         description: max === 0 ? "a negative number" : `a number less than ${max}`,
         jsonSchema: { exclusiveMaximum: max },
@@ -3853,9 +4199,9 @@ export const lessThanOrEqualTo = <A extends number>(
   max: number,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => a <= max, {
+    filter((a) => a <= max, {
       typeId: LessThanOrEqualToTypeId,
       description: max === 0 ? "a non-positive number" : `a number less than or equal to ${max}`,
       jsonSchema: { maximum: max },
@@ -3886,9 +4232,9 @@ export const between = <A extends number>(
   max: number,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => a >= min && a <= max, {
+    filter((a) => a >= min && a <= max, {
       typeId: BetweenTypeId,
       description: `a number between ${min} and ${max}`,
       jsonSchema: { maximum: max, minimum: min },
@@ -3907,9 +4253,9 @@ export const NonNaNTypeId: unique symbol = Symbol.for("@effect/schema/TypeId/Non
  * @since 1.0.0
  */
 export const nonNaN =
-  <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  <A extends number>(annotations?: Annotations.Filter<A>) => <I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
     self.pipe(
-      filter((a): a is A => !Number.isNaN(a), {
+      filter((a) => !Number.isNaN(a), {
         typeId: NonNaNTypeId,
         description: "a number excluding NaN",
         ...annotations
@@ -3922,7 +4268,7 @@ export const nonNaN =
  */
 export const positive = <A extends number>(
   annotations?: Annotations.Filter<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => greaterThan(0, annotations)
+): <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>> => greaterThan(0, annotations)
 
 /**
  * @category number filters
@@ -3930,7 +4276,7 @@ export const positive = <A extends number>(
  */
 export const negative = <A extends number>(
   annotations?: Annotations.Filter<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => lessThan(0, annotations)
+): <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>> => lessThan(0, annotations)
 
 /**
  * @category number filters
@@ -3938,7 +4284,7 @@ export const negative = <A extends number>(
  */
 export const nonPositive = <A extends number>(
   annotations?: Annotations.Filter<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => lessThanOrEqualTo(0, annotations)
+): <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>> => lessThanOrEqualTo(0, annotations)
 
 /**
  * @category number filters
@@ -3946,7 +4292,7 @@ export const nonPositive = <A extends number>(
  */
 export const nonNegative = <A extends number>(
   annotations?: Annotations.Filter<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => greaterThanOrEqualTo(0, annotations)
+): <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>> => greaterThanOrEqualTo(0, annotations)
 
 /**
  * Clamps a number between a minimum and a maximum value.
@@ -3955,7 +4301,8 @@ export const nonNegative = <A extends number>(
  * @since 1.0.0
  */
 export const clamp =
-  (minimum: number, maximum: number) => <R, I, A extends number>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  (minimum: number, maximum: number) =>
+  <A extends number, I, R>(self: Schema<A, I, R>): transform<Schema<A, I, R>, filter<Schema<A>>> =>
     transform(
       self,
       self.pipe(typeSchema, between(minimum, maximum)),
@@ -3963,13 +4310,30 @@ export const clamp =
     )
 
 /**
- * @category api interface
+ * Transforms a `string` into a `number` by parsing the string using the `parse` function of the `effect/Number` module.
+ *
+ * It returns an error if the value can't be converted (for example when non-numeric characters are provided).
+ *
+ * The following special string values are supported: "NaN", "Infinity", "-Infinity".
+ *
+ * @category number transformations
  * @since 1.0.0
  */
-export interface NumberFromString extends Annotable<NumberFromString, number, string> {}
+export const parseNumber = <A extends string, I, R>(
+  self: Schema<A, I, R>
+): transformOrFail<Schema<A, I, R>, typeof Number$> =>
+  transformOrFail(
+    self,
+    Number$,
+    {
+      strict: false,
+      decode: (s, _, ast) => ParseResult.fromOption(number_.parse(s), () => new ParseResult.Type(ast, s)),
+      encode: (n) => ParseResult.succeed(String(n))
+    }
+  )
 
 /**
- * This schema transforms a `string` into a `number` by parsing the string using the `Number` function.
+ * This schema transforms a `string` into a `number` by parsing the string using the `parse` function of the `effect/Number` module.
  *
  * It returns an error if the value can't be converted (for example when non-numeric characters are provided).
  *
@@ -3978,64 +4342,73 @@ export interface NumberFromString extends Annotable<NumberFromString, number, st
  * @category number constructors
  * @since 1.0.0
  */
-export const NumberFromString: NumberFromString = transformOrFail(
-  $String,
-  $Number,
-  {
-    decode: (s, _, ast) => ParseResult.fromOption(number_.parse(s), () => new ParseResult.Type(ast, s)),
-    encode: (n) => ParseResult.succeed(String(n))
-  }
-).annotations({ identifier: "NumberFromString" })
+export class NumberFromString extends parseNumber(String$).annotations({ identifier: "NumberFromString" }) {
+  static override annotations: (annotations: Annotations.Schema<number>) => typeof NumberFromString = super.annotations
+}
 
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const Finite: $Number = $Number.pipe(finite({ identifier: "Finite", title: "Finite" }))
+export class Finite extends Number$.pipe(finite({ identifier: "Finite", title: "Finite" })) {
+  static override annotations: (annotations: Annotations.Schema<number>) => typeof Finite = super.annotations
+}
 
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const Int: $Number = $Number.pipe(int({ identifier: "Int", title: "Int" }))
+export class Int extends Number$.pipe(int({ identifier: "Int", title: "Int" })) {
+  static override annotations: (annotations: Annotations.Schema<number>) => typeof Int = super.annotations
+}
 
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const NonNaN: $Number = $Number.pipe(nonNaN({ identifier: "NonNaN", title: "NonNaN" }))
+export class NonNaN extends Number$.pipe(nonNaN({ identifier: "NonNaN", title: "NonNaN" })) {
+  static override annotations: (annotations: Annotations.Schema<number>) => typeof NonNaN = super.annotations
+}
 
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const Positive: $Number = $Number.pipe(
+export class Positive extends Number$.pipe(
   positive({ identifier: "Positive", title: "Positive" })
-)
+) {
+  static override annotations: (annotations: Annotations.Schema<number>) => typeof Positive = super.annotations
+}
 
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const Negative: $Number = $Number.pipe(
+export class Negative extends Number$.pipe(
   negative({ identifier: "Negative", title: "Negative" })
-)
+) {
+  static override annotations: (annotations: Annotations.Schema<number>) => typeof Negative = super.annotations
+}
 
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const NonPositive: $Number = $Number.pipe(
+export class NonPositive extends Number$.pipe(
   nonPositive({ identifier: "NonPositive", title: "NonPositive" })
-)
+) {
+  static override annotations: (annotations: Annotations.Schema<number>) => typeof NonPositive = super.annotations
+}
 
 /**
  * @category number constructors
  * @since 1.0.0
  */
-export const NonNegative: $Number = $Number.pipe(
+export class NonNegative extends Number$.pipe(
   nonNegative({ identifier: "NonNegative", title: "NonNegative" })
-)
+) {
+  static override annotations: (annotations: Annotations.Schema<number>) => typeof NonNegative = super.annotations
+}
 
 /**
  * @category type id
@@ -4061,7 +4434,7 @@ export const JsonNumberTypeId: unique symbol = Symbol.for("@effect/schema/TypeId
  * @category number constructors
  * @since 1.0.0
  */
-export const JsonNumber: $Number = $Number.pipe(
+export class JsonNumber extends Number$.pipe(
   filter((n) => !Number.isNaN(n) && Number.isFinite(n), {
     typeId: JsonNumberTypeId,
     identifier: "JsonNumber",
@@ -4069,31 +4442,26 @@ export const JsonNumber: $Number = $Number.pipe(
     description: "a JSON-compatible number, excluding NaN, +Infinity, and -Infinity",
     jsonSchema: { type: "number" }
   })
-)
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Not extends Annotable<Not, boolean> {}
+) {
+  static override annotations: (annotations: Annotations.Schema<number>) => typeof JsonNumber = super.annotations
+}
 
 /**
  * @category boolean transformations
  * @since 1.0.0
  */
-export const Not: Not = transform($Boolean, $Boolean, { decode: boolean_.not, encode: boolean_.not })
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface $Symbol extends Annotable<$Symbol, symbol, string> {}
+export class Not extends transform(Boolean$, Boolean$, { decode: boolean_.not, encode: boolean_.not }) {
+  static override annotations: (annotations: Annotations.Schema<boolean>) => typeof Not = super.annotations
+}
 
-const $Symbol: $Symbol = transform(
-  $String,
+/** @ignore */
+class Symbol$ extends transform(
+  String$,
   SymbolFromSelf,
   { strict: false, decode: (s) => Symbol.for(s), encode: (sym) => sym.description }
-).annotations({ identifier: "symbol" })
+).annotations({ identifier: "symbol" }) {
+  static override annotations: (annotations: Annotations.Schema<symbol>) => typeof Symbol$ = super.annotations
+}
 
 export {
   /**
@@ -4102,7 +4470,7 @@ export {
    * @category symbol transformations
    * @since 1.0.0
    */
-  $Symbol as Symbol
+  Symbol$ as Symbol
 }
 
 /**
@@ -4125,9 +4493,9 @@ export const greaterThanBigInt = <A extends bigint>(
   min: bigint,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => a > min, {
+    filter((a) => a > min, {
       typeId: { id: GreaterThanBigIntTypeId, annotation: { min } },
       description: min === 0n ? "a positive bigint" : `a bigint greater than ${min}n`,
       ...annotations
@@ -4154,9 +4522,9 @@ export const greaterThanOrEqualToBigInt = <A extends bigint>(
   min: bigint,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => a >= min, {
+    filter((a) => a >= min, {
       typeId: { id: GreaterThanOrEqualToBigIntTypeId, annotation: { min } },
       description: min === 0n
         ? "a non-negative bigint"
@@ -4185,9 +4553,9 @@ export const lessThanBigInt = <A extends bigint>(
   max: bigint,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => a < max, {
+    filter((a) => a < max, {
       typeId: { id: LessThanBigIntTypeId, annotation: { max } },
       description: max === 0n ? "a negative bigint" : `a bigint less than ${max}n`,
       ...annotations
@@ -4214,9 +4582,9 @@ export const lessThanOrEqualToBigInt = <A extends bigint>(
   max: bigint,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => a <= max, {
+    filter((a) => a <= max, {
       typeId: { id: LessThanOrEqualToBigIntTypeId, annotation: { max } },
       description: max === 0n ? "a non-positive bigint" : `a bigint less than or equal to ${max}n`,
       ...annotations
@@ -4244,9 +4612,9 @@ export const betweenBigInt = <A extends bigint>(
   max: bigint,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => a >= min && a <= max, {
+    filter((a) => a >= min && a <= max, {
       typeId: { id: BetweenBigIntTypeId, annotation: { max, min } },
       description: `a bigint between ${min}n and ${max}n`,
       ...annotations
@@ -4259,7 +4627,7 @@ export const betweenBigInt = <A extends bigint>(
  */
 export const positiveBigInt = <A extends bigint>(
   annotations?: Annotations.Filter<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => greaterThanBigInt(0n, annotations)
+): <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>> => greaterThanBigInt(0n, annotations)
 
 /**
  * @category bigint filters
@@ -4267,7 +4635,7 @@ export const positiveBigInt = <A extends bigint>(
  */
 export const negativeBigInt = <A extends bigint>(
   annotations?: Annotations.Filter<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => lessThanBigInt(0n, annotations)
+): <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>> => lessThanBigInt(0n, annotations)
 
 /**
  * @category bigint filters
@@ -4275,7 +4643,7 @@ export const negativeBigInt = <A extends bigint>(
  */
 export const nonNegativeBigInt = <A extends bigint>(
   annotations?: Annotations.Filter<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => greaterThanOrEqualToBigInt(0n, annotations)
+): <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>> => greaterThanOrEqualToBigInt(0n, annotations)
 
 /**
  * @category bigint filters
@@ -4283,7 +4651,7 @@ export const nonNegativeBigInt = <A extends bigint>(
  */
 export const nonPositiveBigInt = <A extends bigint>(
   annotations?: Annotations.Filter<A>
-): <I, R>(self: Schema<A, I, R>) => Schema<A, I, R> => lessThanOrEqualToBigInt(0n, annotations)
+): <I, R>(self: Schema<A, I, R>) => filter<Schema<A, I, R>> => lessThanOrEqualToBigInt(0n, annotations)
 
 /**
  * Clamps a bigint between a minimum and a maximum value.
@@ -4292,27 +4660,25 @@ export const nonPositiveBigInt = <A extends bigint>(
  * @since 1.0.0
  */
 export const clampBigInt =
-  (minimum: bigint, maximum: bigint) => <R, I, A extends bigint>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  (minimum: bigint, maximum: bigint) =>
+  <A extends bigint, I, R>(self: Schema<A, I, R>): transform<Schema<A, I, R>, filter<Schema<A>>> =>
     transform(
       self,
       self.pipe(typeSchema, betweenBigInt(minimum, maximum)),
       { strict: false, decode: (self) => bigInt_.clamp(self, { minimum, maximum }), encode: identity }
     )
 
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface $BigInt extends Annotable<$BigInt, bigint, string> {}
-
-const bigint: $BigInt = transformOrFail(
-  $String,
+/** @ignore */
+class BigInt$ extends transformOrFail(
+  String$,
   BigIntFromSelf,
   {
     decode: (s, _, ast) => ParseResult.fromOption(bigInt_.fromString(s), () => new ParseResult.Type(ast, s)),
     encode: (n) => ParseResult.succeed(String(n))
   }
-).annotations({ identifier: "bigint" })
+).annotations({ identifier: "bigint" }) {
+  static override annotations: (annotations: Annotations.Schema<bigint>) => typeof BigInt$ = super.annotations
+}
 
 export {
   /**
@@ -4323,14 +4689,14 @@ export {
    * @category bigint transformations
    * @since 1.0.0
    */
-  bigint as BigInt
+  BigInt$ as BigInt
 }
 
 /**
  * @category bigint constructors
  * @since 1.0.0
  */
-export const PositiveBigIntFromSelf: Schema<bigint> = BigIntFromSelf.pipe(
+export const PositiveBigIntFromSelf: filter<Schema<bigint>> = BigIntFromSelf.pipe(
   positiveBigInt({ identifier: "PositiveBigintFromSelf", title: "PositiveBigintFromSelf" })
 )
 
@@ -4338,7 +4704,7 @@ export const PositiveBigIntFromSelf: Schema<bigint> = BigIntFromSelf.pipe(
  * @category bigint constructors
  * @since 1.0.0
  */
-export const PositiveBigInt: Schema<bigint, string> = bigint.pipe(
+export const PositiveBigInt: filter<Schema<bigint, string>> = BigInt$.pipe(
   positiveBigInt({ identifier: "PositiveBigint", title: "PositiveBigint" })
 )
 
@@ -4346,7 +4712,7 @@ export const PositiveBigInt: Schema<bigint, string> = bigint.pipe(
  * @category bigint constructors
  * @since 1.0.0
  */
-export const NegativeBigIntFromSelf: Schema<bigint> = BigIntFromSelf.pipe(
+export const NegativeBigIntFromSelf: filter<Schema<bigint>> = BigIntFromSelf.pipe(
   negativeBigInt({ identifier: "NegativeBigintFromSelf", title: "NegativeBigintFromSelf" })
 )
 
@@ -4354,7 +4720,7 @@ export const NegativeBigIntFromSelf: Schema<bigint> = BigIntFromSelf.pipe(
  * @category bigint constructors
  * @since 1.0.0
  */
-export const NegativeBigInt: Schema<bigint, string> = bigint.pipe(
+export const NegativeBigInt: filter<Schema<bigint, string>> = BigInt$.pipe(
   negativeBigInt({ identifier: "NegativeBigint", title: "NegativeBigint" })
 )
 
@@ -4362,7 +4728,7 @@ export const NegativeBigInt: Schema<bigint, string> = bigint.pipe(
  * @category bigint constructors
  * @since 1.0.0
  */
-export const NonPositiveBigIntFromSelf: Schema<bigint> = BigIntFromSelf.pipe(
+export const NonPositiveBigIntFromSelf: filter<Schema<bigint>> = BigIntFromSelf.pipe(
   nonPositiveBigInt({ identifier: "NonPositiveBigintFromSelf", title: "NonPositiveBigintFromSelf" })
 )
 
@@ -4370,7 +4736,7 @@ export const NonPositiveBigIntFromSelf: Schema<bigint> = BigIntFromSelf.pipe(
  * @category bigint constructors
  * @since 1.0.0
  */
-export const NonPositiveBigInt: Schema<bigint, string> = bigint.pipe(
+export const NonPositiveBigInt: filter<Schema<bigint, string>> = BigInt$.pipe(
   nonPositiveBigInt({ identifier: "NonPositiveBigint", title: "NonPositiveBigint" })
 )
 
@@ -4378,7 +4744,7 @@ export const NonPositiveBigInt: Schema<bigint, string> = bigint.pipe(
  * @category bigint constructors
  * @since 1.0.0
  */
-export const NonNegativeBigIntFromSelf: Schema<bigint> = BigIntFromSelf.pipe(
+export const NonNegativeBigIntFromSelf: filter<Schema<bigint>> = BigIntFromSelf.pipe(
   nonNegativeBigInt({ identifier: "NonNegativeBigintFromSelf", title: "NonNegativeBigintFromSelf" })
 )
 
@@ -4386,16 +4752,10 @@ export const NonNegativeBigIntFromSelf: Schema<bigint> = BigIntFromSelf.pipe(
  * @category bigint constructors
  * @since 1.0.0
  */
-export const NonNegativeBigInt: Schema<bigint, string> = bigint.pipe(
+export const NonNegativeBigInt: filter<Schema<bigint, string>> = BigInt$.pipe(
   nonNegativeBigInt({ identifier: "NonNegativeBigint", title: "NonNegativeBigint" })
 )
 
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface BigIntFromNumber extends Annotable<BigIntFromNumber, bigint, number> {}
-
 /**
  * This schema transforms a `number` into a `bigint` by parsing the number using the `BigInt` function.
  *
@@ -4404,8 +4764,8 @@ export interface BigIntFromNumber extends Annotable<BigIntFromNumber, bigint, nu
  * @category bigint transformations
  * @since 1.0.0
  */
-export const BigIntFromNumber: BigIntFromNumber = transformOrFail(
-  $Number,
+export class BigIntFromNumber extends transformOrFail(
+  Number$,
   BigIntFromSelf,
   {
     decode: (n, _, ast) =>
@@ -4415,32 +4775,25 @@ export const BigIntFromNumber: BigIntFromNumber = transformOrFail(
       ),
     encode: (b, _, ast) => ParseResult.fromOption(bigInt_.toNumber(b), () => new ParseResult.Type(ast, b))
   }
-).annotations({ identifier: "BigintFromNumber" })
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface SecretFromSelf extends Annotable<SecretFromSelf, secret_.Secret> {}
+).annotations({ identifier: "BigintFromNumber" }) {
+  static override annotations: (annotations: Annotations.Schema<bigint>) => typeof BigIntFromNumber = super.annotations
+}
 
 /**
  * @category Secret constructors
  * @since 1.0.0
  */
-export const SecretFromSelf: SecretFromSelf = declare(
+export class SecretFromSelf extends declare(
   secret_.isSecret,
   {
     identifier: "SecretFromSelf",
     pretty: (): pretty_.Pretty<secret_.Secret> => (secret) => String(secret),
     arbitrary: (): LazyArbitrary<secret_.Secret> => (fc) => fc.string().map((_) => secret_.fromString(_))
   }
-)
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Secret extends Annotable<Secret, secret_.Secret, string> {}
+) {
+  static override annotations: (annotations: Annotations.Schema<secret_.Secret>) => typeof SecretFromSelf = super
+    .annotations
+}
 
 /**
  * A schema that transforms a `string` into a `Secret`.
@@ -4448,23 +4801,19 @@ export interface Secret extends Annotable<Secret, secret_.Secret, string> {}
  * @category Secret transformations
  * @since 1.0.0
  */
-export const Secret: Secret = transform(
-  $String,
+export class Secret extends transform(
+  String$,
   SecretFromSelf,
   { strict: false, decode: (str) => secret_.fromString(str), encode: (secret) => secret_.value(secret) }
-).annotations({ identifier: "Secret" })
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface DurationFromSelf extends Annotable<DurationFromSelf, duration_.Duration> {}
+).annotations({ identifier: "Secret" }) {
+  static override annotations: (annotations: Annotations.Schema<secret_.Secret>) => typeof Secret = super.annotations
+}
 
 /**
  * @category Duration constructors
  * @since 1.0.0
  */
-export const DurationFromSelf: DurationFromSelf = declare(
+export class DurationFromSelf extends declare(
   duration_.isDuration,
   {
     identifier: "DurationFromSelf",
@@ -4483,13 +4832,10 @@ export const DurationFromSelf: DurationFromSelf = declare(
       ),
     equivalence: (): Equivalence.Equivalence<duration_.Duration> => duration_.Equivalence
   }
-)
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface DurationFromNanos extends Annotable<DurationFromNanos, duration_.Duration, bigint> {}
+) {
+  static override annotations: (annotations: Annotations.Schema<duration_.Duration>) => typeof DurationFromSelf = super
+    .annotations
+}
 
 /**
  * A schema that transforms a `bigint` tuple into a `Duration`.
@@ -4498,7 +4844,7 @@ export interface DurationFromNanos extends Annotable<DurationFromNanos, duration
  * @category Duration transformations
  * @since 1.0.0
  */
-export const DurationFromNanos: DurationFromNanos = transformOrFail(
+export class DurationFromNanos extends transformOrFail(
   BigIntFromSelf,
   DurationFromSelf,
   {
@@ -4509,13 +4855,10 @@ export const DurationFromNanos: DurationFromNanos = transformOrFail(
         onSome: (val) => ParseResult.succeed(val)
       })
   }
-).annotations({ identifier: "DurationFromNanos" })
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface DurationFromMillis extends Annotable<DurationFromMillis, duration_.Duration, number> {}
+).annotations({ identifier: "DurationFromNanos" }) {
+  static override annotations: (annotations: Annotations.Schema<duration_.Duration>) => typeof DurationFromNanos = super
+    .annotations
+}
 
 /**
  * A schema that transforms a `number` tuple into a `Duration`.
@@ -4524,11 +4867,14 @@ export interface DurationFromMillis extends Annotable<DurationFromMillis, durati
  * @category Duration transformations
  * @since 1.0.0
  */
-export const DurationFromMillis: DurationFromMillis = transform(
-  $Number,
+export class DurationFromMillis extends transform(
+  Number$,
   DurationFromSelf,
   { decode: (ms) => duration_.millis(ms), encode: (n) => duration_.toMillis(n) }
-).annotations({ identifier: "DurationFromMillis" })
+).annotations({ identifier: "DurationFromMillis" }) {
+  static override annotations: (annotations: Annotations.Schema<duration_.Duration>) => typeof DurationFromMillis =
+    super.annotations
+}
 
 const hrTime: Schema<readonly [seconds: number, nanos: number]> = Tuple(
   NonNegative.pipe(
@@ -4545,26 +4891,23 @@ const hrTime: Schema<readonly [seconds: number, nanos: number]> = Tuple(
   )
 )
 
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface Duration extends Annotable<Duration, duration_.Duration, readonly [seconds: number, nanos: number]> {}
-
 /**
  * A schema that transforms a `[number, number]` tuple into a `Duration`.
  *
  * @category Duration transformations
  * @since 1.0.0
  */
-export const Duration: Duration = transform(
+export class Duration extends transform(
   hrTime,
   DurationFromSelf,
   {
     decode: ([seconds, nanos]) => duration_.nanos(BigInt(seconds) * BigInt(1e9) + BigInt(nanos)),
     encode: (duration) => duration_.toHrTime(duration)
   }
-).annotations({ identifier: "Duration" })
+).annotations({ identifier: "Duration" }) {
+  static override annotations: (annotations: Annotations.Schema<duration_.Duration>) => typeof Duration = super
+    .annotations
+}
 
 /**
  * Clamps a `Duration` between a minimum and a maximum value.
@@ -4574,7 +4917,7 @@ export const Duration: Duration = transform(
  */
 export const clampDuration =
   (minimum: duration_.DurationInput, maximum: duration_.DurationInput) =>
-  <R, I, A extends duration_.Duration>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  <A extends duration_.Duration, I, R>(self: Schema<A, I, R>): transform<Schema<A, I, R>, filter<Schema<A>>> =>
     transform(
       self,
       self.pipe(typeSchema, betweenDuration(minimum, maximum)),
@@ -4595,9 +4938,9 @@ export const lessThanDuration = <A extends duration_.Duration>(
   max: duration_.DurationInput,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => duration_.lessThan(a, max), {
+    filter((a) => duration_.lessThan(a, max), {
       typeId: { id: LessThanDurationTypeId, annotation: { max } },
       description: `a Duration less than ${duration_.decode(max)}`,
       ...annotations
@@ -4620,9 +4963,9 @@ export const lessThanOrEqualToDuration = <A extends duration_.Duration>(
   max: duration_.DurationInput,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => duration_.lessThanOrEqualTo(a, max), {
+    filter((a) => duration_.lessThanOrEqualTo(a, max), {
       typeId: { id: LessThanDurationTypeId, annotation: { max } },
       description: `a Duration less than or equal to ${duration_.decode(max)}`,
       ...annotations
@@ -4643,9 +4986,9 @@ export const greaterThanDuration = <A extends duration_.Duration>(
   min: duration_.DurationInput,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => duration_.greaterThan(a, min), {
+    filter((a) => duration_.greaterThan(a, min), {
       typeId: { id: GreaterThanDurationTypeId, annotation: { min } },
       description: `a Duration greater than ${duration_.decode(min)}`,
       ...annotations
@@ -4668,9 +5011,9 @@ export const greaterThanOrEqualToDuration = <A extends duration_.Duration>(
   min: duration_.DurationInput,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => duration_.greaterThanOrEqualTo(a, min), {
+    filter((a) => duration_.greaterThanOrEqualTo(a, min), {
       typeId: { id: GreaterThanOrEqualToDurationTypeId, annotation: { min } },
       description: `a Duration greater than or equal to ${duration_.decode(min)}`,
       ...annotations
@@ -4692,9 +5035,9 @@ export const betweenDuration = <A extends duration_.Duration>(
   maximum: duration_.DurationInput,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => duration_.between(a, { minimum, maximum }), {
+    filter((a) => duration_.between(a, { minimum, maximum }), {
       typeId: { id: BetweenDurationTypeId, annotation: { maximum, minimum } },
       description: `a Duration between ${duration_.decode(minimum)} and ${duration_.decode(maximum)}`,
       ...annotations
@@ -4715,8 +5058,8 @@ export const Uint8ArrayFromSelf: Schema<Uint8Array> = declare(
   }
 )
 
-const $Uint8Array: Schema<Uint8Array, ReadonlyArray<number>> = transform(
-  $Array($Number.pipe(
+const Uint8Array$: Schema<Uint8Array, ReadonlyArray<number>> = transform(
+  Array$(Number$.pipe(
     between(0, 255, {
       title: "8-bit unsigned integer",
       description: "a 8-bit unsigned integer"
@@ -4733,7 +5076,7 @@ export {
    * @category Uint8Array transformations
    * @since 1.0.0
    */
-  $Uint8Array as Uint8Array
+  Uint8Array$ as Uint8Array
 }
 
 const makeEncodingTransformation = (
@@ -4742,10 +5085,9 @@ const makeEncodingTransformation = (
   encode: (u: Uint8Array) => string
 ): Schema<Uint8Array, string> =>
   transformOrFail(
-    $String,
+    String$,
     Uint8ArrayFromSelf,
     {
-      strict: false,
       decode: (s, _, ast) =>
         either_.mapLeft(
           decode(s),
@@ -4805,7 +5147,7 @@ export const minItems = <A>(
   n: number,
   annotations?: Annotations.Filter<ReadonlyArray<A>>
 ) =>
-<I, R>(self: Schema<ReadonlyArray<A>, I, R>): Schema<ReadonlyArray<A>, I, R> =>
+<I, R>(self: Schema<ReadonlyArray<A>, I, R>): filter<Schema<ReadonlyArray<A>, I, R>> =>
   self.pipe(
     filter((a): a is ReadonlyArray<A> => a.length >= n, {
       typeId: MinItemsTypeId,
@@ -4835,7 +5177,7 @@ export const maxItems = <A>(
   n: number,
   annotations?: Annotations.Filter<ReadonlyArray<A>>
 ) =>
-<I, R>(self: Schema<ReadonlyArray<A>, I, R>): Schema<ReadonlyArray<A>, I, R> =>
+<I, R>(self: Schema<ReadonlyArray<A>, I, R>): filter<Schema<ReadonlyArray<A>, I, R>> =>
   self.pipe(
     filter((a): a is ReadonlyArray<A> => a.length <= n, {
       typeId: MaxItemsTypeId,
@@ -4865,7 +5207,7 @@ export const itemsCount = <A>(
   n: number,
   annotations?: Annotations.Filter<ReadonlyArray<A>>
 ) =>
-<I, R>(self: Schema<ReadonlyArray<A>, I, R>): Schema<ReadonlyArray<A>, I, R> =>
+<I, R>(self: Schema<ReadonlyArray<A>, I, R>): filter<Schema<ReadonlyArray<A>, I, R>> =>
   self.pipe(
     filter((a): a is ReadonlyArray<A> => a.length === n, {
       typeId: ItemsCountTypeId,
@@ -4881,7 +5223,7 @@ export const itemsCount = <A>(
  */
 export const getNumberIndexedAccess = <A extends ReadonlyArray<any>, I extends ReadonlyArray<any>, R>(
   self: Schema<A, I, R>
-): Schema<A[number], I[number], R> => make(AST.getNumberIndexedAccess(self.ast))
+): SchemaClass<A[number], I[number], R> => make(AST.getNumberIndexedAccess(self.ast))
 
 /**
  * Get the first element of a `ReadonlyArray`, or `None` if the array is empty.
@@ -4889,7 +5231,7 @@ export const getNumberIndexedAccess = <A extends ReadonlyArray<any>, I extends R
  * @category ReadonlyArray transformations
  * @since 1.0.0
  */
-export const head = <A, I, R>(self: Schema<ReadonlyArray<A>, I, R>): Schema<option_.Option<A>, I, R> =>
+export const head = <A, I, R>(self: Schema<ReadonlyArray<A>, I, R>): SchemaClass<option_.Option<A>, I, R> =>
   transform(
     self,
     OptionFromSelf(getNumberIndexedAccess(typeSchema(self))),
@@ -4905,11 +5247,11 @@ export const head = <A, I, R>(self: Schema<ReadonlyArray<A>, I, R>): Schema<opti
  * @since 1.0.0
  */
 export const headOrElse: {
-  <A>(fallback?: LazyArg<A>): <I, R>(self: Schema<ReadonlyArray<A>, I, R>) => Schema<A, I, R>
-  <A, I, R>(self: Schema<ReadonlyArray<A>, I, R>, fallback?: LazyArg<A>): Schema<A, I, R>
+  <A>(fallback?: LazyArg<A>): <I, R>(self: Schema<ReadonlyArray<A>, I, R>) => SchemaClass<A, I, R>
+  <A, I, R>(self: Schema<ReadonlyArray<A>, I, R>, fallback?: LazyArg<A>): SchemaClass<A, I, R>
 } = dual(
   (args) => isSchema(args[0]),
-  <A, I, R>(self: Schema<ReadonlyArray<A>, I, R>, fallback?: LazyArg<A>): Schema<A, I, R> =>
+  <A, I, R>(self: Schema<ReadonlyArray<A>, I, R>, fallback?: LazyArg<A>): SchemaClass<A, I, R> =>
     transformOrFail(
       self,
       getNumberIndexedAccess(typeSchema(self)),
@@ -4938,7 +5280,7 @@ export const ValidDateTypeId: unique symbol = Symbol.for("@effect/schema/TypeId/
  * @since 1.0.0
  */
 export const validDate =
-  (annotations?: Annotations.Filter<Date>) => <I, R>(self: Schema<Date, I, R>): Schema<Date, I, R> =>
+  (annotations?: Annotations.Filter<Date>) => <I, R>(self: Schema<Date, I, R>): filter<Schema<Date, I, R>> =>
     self.pipe(
       filter((a) => !Number.isNaN(a.getTime()), {
         typeId: ValidDateTypeId,
@@ -4947,19 +5289,13 @@ export const validDate =
       })
     )
 
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface DateFromSelf extends Annotable<DateFromSelf, Date> {}
-
 /**
  * Represents a schema for handling potentially **invalid** `Date` instances (e.g., `new Date("Invalid Date")` is not rejected).
  *
  * @category Date constructors
  * @since 1.0.0
  */
-export const DateFromSelf: DateFromSelf = declare(
+export class DateFromSelf extends declare(
   Predicate.isDate,
   {
     identifier: "DateFromSelf",
@@ -4968,13 +5304,9 @@ export const DateFromSelf: DateFromSelf = declare(
     arbitrary: (): LazyArbitrary<Date> => (fc) => fc.date({ noInvalidDate: false }),
     equivalence: () => Equivalence.Date
   }
-)
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface ValidDateFromSelf extends Annotable<ValidDateFromSelf, Date> {}
+) {
+  static override annotations: (annotations: Annotations.Schema<Date>) => typeof DateFromSelf = super.annotations
+}
 
 /**
  * Represents a schema for handling only **valid** dates. For example, `new Date("Invalid Date")` is rejected, even though it is an instance of `Date`.
@@ -4982,18 +5314,14 @@ export interface ValidDateFromSelf extends Annotable<ValidDateFromSelf, Date> {}
  * @category Date constructors
  * @since 1.0.0
  */
-export const ValidDateFromSelf: ValidDateFromSelf = DateFromSelf.pipe(
+export class ValidDateFromSelf extends DateFromSelf.pipe(
   validDate({
     identifier: "ValidDateFromSelf",
     description: "a valid Date instance"
   })
-)
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface DateFromString extends Annotable<DateFromString, Date, string> {}
+) {
+  static override annotations: (annotations: Annotations.Schema<Date>) => typeof ValidDateFromSelf = super.annotations
+}
 
 /**
  * Represents a schema that converts a `string` into a (potentially invalid) `Date` (e.g., `new Date("Invalid Date")` is not rejected).
@@ -5001,21 +5329,20 @@ export interface DateFromString extends Annotable<DateFromString, Date, string>
  * @category Date transformations
  * @since 1.0.0
  */
-export const DateFromString: DateFromString = transform(
-  $String,
+export class DateFromString extends transform(
+  String$,
   DateFromSelf,
-  { decode: (s) => new Date(s), encode: (n) => n.toISOString() }
-).annotations({ identifier: "DateFromString" })
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface $Date extends Annotable<$Date, Date, string> {}
+  { decode: (s) => new Date(s), encode: (d) => d.toISOString() }
+).annotations({ identifier: "DateFromString" }) {
+  static override annotations: (annotations: Annotations.Schema<Date>) => typeof DateFromString = super.annotations
+}
 
-const $Date: $Date = DateFromString.pipe(
+/** @ignore */
+class Date$ extends DateFromString.pipe(
   validDate({ identifier: "Date" })
-)
+) {
+  static override annotations: (annotations: Annotations.Schema<Date>) => typeof Date$ = super.annotations
+}
 
 export {
   /**
@@ -5024,7 +5351,22 @@ export {
    * @category Date transformations
    * @since 1.0.0
    */
-  $Date as Date
+  Date$ as Date
+}
+
+/**
+ * Represents a schema that converts a `number` into a (potentially invalid) `Date` (e.g., `NaN`, `Infinity` and `-Infinity` are not rejected).
+ * Encoding will return `NaN` for invalid dates.
+ *
+ * @category Date transformations
+ * @since 1.0.0
+ */
+export class DateFromNumber extends transform(
+  Number$,
+  DateFromSelf,
+  { decode: (n) => new Date(n), encode: (d) => d.getTime() }
+).annotations({ identifier: "DateFromNumber" }) {
+  static override annotations: (annotations: Annotations.Schema<Date>) => typeof DateFromNumber = super.annotations
 }
 
 /**
@@ -5087,7 +5429,7 @@ const optionParse =
  * @since 1.0.0
  */
 export interface OptionFromSelf<Value extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     OptionFromSelf<Value>,
     option_.Option<Schema.Type<Value>>,
     option_.Option<Schema.Encoded<Value>>,
@@ -5130,7 +5472,7 @@ const makeSomeEncoded = <A>(value: A) => ({
  * @since 1.0.0
  */
 export interface Option<Value extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     Option<Value>,
     option_.Option<Schema.Type<Value>>,
     OptionEncoded<Schema.Encoded<Value>>,
@@ -5162,7 +5504,7 @@ export const Option = <Value extends Schema.Any>(value: Value): Option<Value> =>
  * @since 1.0.0
  */
 export interface OptionFromNullOr<Value extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     OptionFromNullOr<Value>,
     option_.Option<Schema.Type<Value>>,
     Schema.Encoded<Value> | null,
@@ -5189,7 +5531,7 @@ export const OptionFromNullOr = <Value extends Schema.Any>(
  * @since 1.0.0
  */
 export interface OptionFromNullishOr<Value extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     OptionFromNullishOr<Value>,
     option_.Option<Schema.Type<Value>>,
     Schema.Encoded<Value> | null | undefined,
@@ -5218,7 +5560,7 @@ export const OptionFromNullishOr = <Value extends Schema.Any>(
  * @since 1.0.0
  */
 export interface OptionFromUndefinedOr<Value extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     OptionFromUndefinedOr<Value>,
     option_.Option<Schema.Type<Value>>,
     Schema.Encoded<Value> | undefined,
@@ -5323,7 +5665,7 @@ const eitherParse = <RR, R, LR, L>(
  * @since 1.0.0
  */
 export interface EitherFromSelf<R extends Schema.Any, L extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     EitherFromSelf<R, L>,
     either_.Either<Schema.Type<R>, Schema.Type<L>>,
     either_.Either<Schema.Encoded<R>, Schema.Encoded<L>>,
@@ -5368,7 +5710,7 @@ const makeRightEncoded = <A>(right: A) => (({
  * @since 1.0.0
  */
 export interface Either<R extends Schema.Any, L extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     Either<R, L>,
     either_.Either<Schema.Type<R>, Schema.Type<L>>,
     EitherEncoded<Schema.Encoded<R>, Schema.Encoded<L>>,
@@ -5398,7 +5740,7 @@ export const Either = <R extends Schema.Any, L extends Schema.Any>({ left, right
  * @since 1.0.0
  */
 export interface EitherFromUnion<R extends Schema.Any, L extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     EitherFromUnion<R, L>,
     either_.Either<Schema.Type<R>, Schema.Type<L>>,
     Schema.Encoded<R> | Schema.Encoded<L>,
@@ -5476,7 +5818,7 @@ const readonlyMapParse = <R, K, V>(
  * @since 1.0.0
  */
 export interface ReadonlyMapFromSelf<K extends Schema.Any, V extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     ReadonlyMapFromSelf<K, V>,
     ReadonlyMap<Schema.Type<K>, Schema.Type<V>>,
     ReadonlyMap<Schema.Encoded<K>, Schema.Encoded<V>>,
@@ -5492,8 +5834,8 @@ const mapFromSelf_ = <K extends Schema.Any, V extends Schema.Any>(
   declare(
     [key, value],
     {
-      decode: (Key, Value) => readonlyMapParse(ParseResult.decodeUnknown($Array(Tuple(Key, Value)))),
-      encode: (Key, Value) => readonlyMapParse(ParseResult.encodeUnknown($Array(Tuple(Key, Value))))
+      decode: (Key, Value) => readonlyMapParse(ParseResult.decodeUnknown(Array$(Tuple(Key, Value)))),
+      encode: (Key, Value) => readonlyMapParse(ParseResult.encodeUnknown(Array$(Tuple(Key, Value))))
     },
     {
       description,
@@ -5517,7 +5859,7 @@ export const ReadonlyMapFromSelf = <K extends Schema.Any, V extends Schema.Any>(
  * @since 1.0.0
  */
 export interface MapFromSelf<K extends Schema.Any, V extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     MapFromSelf<K, V>,
     Map<Schema.Type<K>, Schema.Type<V>>,
     ReadonlyMap<Schema.Encoded<K>, Schema.Encoded<V>>,
@@ -5538,9 +5880,9 @@ export const MapFromSelf = <K extends Schema.Any, V extends Schema.Any>({ key, v
  * @category api interface
  * @since 1.0.0
  */
-export interface $ReadonlyMap<K extends Schema.Any, V extends Schema.Any> extends
-  Annotable<
-    $ReadonlyMap<K, V>,
+export interface ReadonlyMap$<K extends Schema.Any, V extends Schema.Any> extends
+  AnnotableClass<
+    ReadonlyMap$<K, V>,
     ReadonlyMap<Schema.Type<K>, Schema.Type<V>>,
     ReadonlyArray<readonly [Schema.Encoded<K>, Schema.Encoded<V>]>,
     Schema.Context<K> | Schema.Context<V>
@@ -5554,11 +5896,11 @@ export interface $ReadonlyMap<K extends Schema.Any, V extends Schema.Any> extend
 export const ReadonlyMap = <K extends Schema.Any, V extends Schema.Any>({ key, value }: {
   readonly key: K
   readonly value: V
-}): $ReadonlyMap<K, V> => {
+}): ReadonlyMap$<K, V> => {
   const key_ = asSchema(key)
   const value_ = asSchema(value)
   return transform(
-    $Array(Tuple(key_, value_)),
+    Array$(Tuple(key_, value_)),
     ReadonlyMapFromSelf({ key: typeSchema(key_), value: typeSchema(value_) }),
     { decode: (as) => new Map(as), encode: (map) => Array.from(map.entries()) }
   )
@@ -5568,9 +5910,9 @@ export const ReadonlyMap = <K extends Schema.Any, V extends Schema.Any>({ key, v
  * @category api interface
  * @since 1.0.0
  */
-export interface $Map<K extends Schema.Any, V extends Schema.Any> extends
-  Annotable<
-    $Map<K, V>,
+export interface Map$<K extends Schema.Any, V extends Schema.Any> extends
+  AnnotableClass<
+    Map$<K, V>,
     Map<Schema.Type<K>, Schema.Type<V>>,
     ReadonlyArray<readonly [Schema.Encoded<K>, Schema.Encoded<V>]>,
     Schema.Context<K> | Schema.Context<V>
@@ -5580,11 +5922,11 @@ export interface $Map<K extends Schema.Any, V extends Schema.Any> extends
 const map = <K extends Schema.Any, V extends Schema.Any>({ key, value }: {
   readonly key: K
   readonly value: V
-}): $Map<K, V> => {
+}): Map$<K, V> => {
   const key_ = asSchema(key)
   const value_ = asSchema(value)
   return transform(
-    $Array(Tuple(key_, value_)),
+    Array$(Tuple(key_, value_)),
     MapFromSelf({ key: typeSchema(key_), value: typeSchema(value_) }),
     { decode: (as) => new Map(as), encode: (map) => Array.from(map.entries()) }
   )
@@ -5624,7 +5966,7 @@ const readonlySetParse = <R, A>(
  * @since 1.0.0
  */
 export interface ReadonlySetFromSelf<Value extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     ReadonlySetFromSelf<Value>,
     ReadonlySet<Schema.Type<Value>>,
     ReadonlySet<Schema.Encoded<Value>>,
@@ -5636,8 +5978,8 @@ const setFromSelf_ = <Value extends Schema.Any>(value: Value, description: strin
   declare(
     [value],
     {
-      decode: (item) => readonlySetParse(ParseResult.decodeUnknown($Array(item))),
-      encode: (item) => readonlySetParse(ParseResult.encodeUnknown($Array(item)))
+      decode: (item) => readonlySetParse(ParseResult.decodeUnknown(Array$(item))),
+      encode: (item) => readonlySetParse(ParseResult.encodeUnknown(Array$(item)))
     },
     {
       description,
@@ -5659,7 +6001,7 @@ export const ReadonlySetFromSelf = <Value extends Schema.Any>(value: Value): Rea
  * @since 1.0.0
  */
 export interface SetFromSelf<Value extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     SetFromSelf<Value>,
     Set<Schema.Type<Value>>,
     ReadonlySet<Schema.Encoded<Value>>,
@@ -5678,9 +6020,9 @@ export const SetFromSelf = <Value extends Schema.Any>(value: Value): SetFromSelf
  * @category api interface
  * @since 1.0.0
  */
-export interface $ReadonlySet<Value extends Schema.Any> extends
-  Annotable<
-    $ReadonlySet<Value>,
+export interface ReadonlySet$<Value extends Schema.Any> extends
+  AnnotableClass<
+    ReadonlySet$<Value>,
     ReadonlySet<Schema.Type<Value>>,
     ReadonlyArray<Schema.Encoded<Value>>,
     Schema.Context<Value>
@@ -5691,10 +6033,10 @@ export interface $ReadonlySet<Value extends Schema.Any> extends
  * @category ReadonlySet transformations
  * @since 1.0.0
  */
-export const ReadonlySet = <Value extends Schema.Any>(value: Value): $ReadonlySet<Value> => {
+export const ReadonlySet = <Value extends Schema.Any>(value: Value): ReadonlySet$<Value> => {
   const value_ = asSchema(value)
   return transform(
-    $Array(value_),
+    Array$(value_),
     ReadonlySetFromSelf(typeSchema(value_)),
     { decode: (as) => new Set(as), encode: (set) => Array.from(set) }
   )
@@ -5704,19 +6046,19 @@ export const ReadonlySet = <Value extends Schema.Any>(value: Value): $ReadonlySe
  * @category api interface
  * @since 1.0.0
  */
-export interface $Set<Value extends Schema.Any> extends
-  Annotable<
-    $Set<Value>,
+export interface Set$<Value extends Schema.Any> extends
+  AnnotableClass<
+    Set$<Value>,
     Set<Schema.Type<Value>>,
     ReadonlyArray<Schema.Encoded<Value>>,
     Schema.Context<Value>
   >
 {}
 
-const set = <Value extends Schema.Any>(value: Value): $Set<Value> => {
+const set = <Value extends Schema.Any>(value: Value): Set$<Value> => {
   const value_ = asSchema(value)
   return transform(
-    $Array(value_),
+    Array$(value_),
     SetFromSelf(typeSchema(value_)),
     { decode: (as) => new Set(as), encode: (set) => Array.from(set) }
   )
@@ -5736,17 +6078,11 @@ const bigDecimalPretty = (): pretty_.Pretty<bigDecimal_.BigDecimal> => (val) =>
 const bigDecimalArbitrary = (): LazyArbitrary<bigDecimal_.BigDecimal> => (fc) =>
   fc.tuple(fc.bigInt(), fc.integer()).map(([value, scale]) => bigDecimal_.make(value, scale))
 
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface BigDecimalFromSelf extends Annotable<BigDecimalFromSelf, bigDecimal_.BigDecimal> {}
-
 /**
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export const BigDecimalFromSelf: BigDecimalFromSelf = declare(
+export class BigDecimalFromSelf extends declare(
   bigDecimal_.isBigDecimal,
   {
     identifier: "BigDecimalFromSelf",
@@ -5754,20 +6090,17 @@ export const BigDecimalFromSelf: BigDecimalFromSelf = declare(
     arbitrary: bigDecimalArbitrary,
     equivalence: () => bigDecimal_.Equivalence
   }
-)
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface BigDecimal extends Annotable<BigDecimal, bigDecimal_.BigDecimal, string> {}
+) {
+  static override annotations: (annotations: Annotations.Schema<bigDecimal_.BigDecimal>) => typeof BigDecimalFromSelf =
+    super.annotations
+}
 
 /**
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-export const BigDecimal: BigDecimal = transformOrFail(
-  $String,
+export class BigDecimal extends transformOrFail(
+  String$,
   BigDecimalFromSelf,
   {
     decode: (num, _, ast) =>
@@ -5777,13 +6110,10 @@ export const BigDecimal: BigDecimal = transformOrFail(
       })),
     encode: (val) => ParseResult.succeed(bigDecimal_.format(bigDecimal_.normalize(val)))
   }
-).annotations({ identifier: "BigDecimal" })
-
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface BigDecimalFromNumber extends Annotable<BigDecimalFromNumber, bigDecimal_.BigDecimal, number> {}
+).annotations({ identifier: "BigDecimal" }) {
+  static override annotations: (annotations: Annotations.Schema<bigDecimal_.BigDecimal>) => typeof BigDecimal = super
+    .annotations
+}
 
 /**
  * A schema that transforms a `number` into a `BigDecimal`.
@@ -5792,14 +6122,18 @@ export interface BigDecimalFromNumber extends Annotable<BigDecimalFromNumber, bi
  * @category BigDecimal transformations
  * @since 1.0.0
  */
-export const BigDecimalFromNumber: BigDecimalFromNumber = transformOrFail(
-  $Number,
+export class BigDecimalFromNumber extends transformOrFail(
+  Number$,
   BigDecimalFromSelf,
   {
     decode: (num) => ParseResult.succeed(bigDecimal_.fromNumber(num)),
     encode: (val) => ParseResult.succeed(bigDecimal_.unsafeToNumber(val))
   }
-).annotations({ identifier: "BigDecimalFromNumber" })
+).annotations({ identifier: "BigDecimalFromNumber" }) {
+  static override annotations: (
+    annotations: Annotations.Schema<bigDecimal_.BigDecimal>
+  ) => typeof BigDecimalFromNumber = super.annotations
+}
 
 /**
  * @category type id
@@ -5815,9 +6149,9 @@ export const greaterThanBigDecimal = <A extends bigDecimal_.BigDecimal>(
   min: bigDecimal_.BigDecimal,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => bigDecimal_.greaterThan(a, min), {
+    filter((a) => bigDecimal_.greaterThan(a, min), {
       typeId: { id: GreaterThanBigDecimalTypeId, annotation: { min } },
       description: `a BigDecimal greater than ${bigDecimal_.format(min)}`,
       ...annotations
@@ -5840,9 +6174,9 @@ export const greaterThanOrEqualToBigDecimal = <A extends bigDecimal_.BigDecimal>
   min: bigDecimal_.BigDecimal,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => bigDecimal_.greaterThanOrEqualTo(a, min), {
+    filter((a) => bigDecimal_.greaterThanOrEqualTo(a, min), {
       typeId: { id: GreaterThanOrEqualToBigDecimalTypeId, annotation: { min } },
       description: `a BigDecimal greater than or equal to ${bigDecimal_.format(min)}`,
       ...annotations
@@ -5863,9 +6197,9 @@ export const lessThanBigDecimal = <A extends bigDecimal_.BigDecimal>(
   max: bigDecimal_.BigDecimal,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => bigDecimal_.lessThan(a, max), {
+    filter((a) => bigDecimal_.lessThan(a, max), {
       typeId: { id: LessThanBigDecimalTypeId, annotation: { max } },
       description: `a BigDecimal less than ${bigDecimal_.format(max)}`,
       ...annotations
@@ -5888,9 +6222,9 @@ export const lessThanOrEqualToBigDecimal = <A extends bigDecimal_.BigDecimal>(
   max: bigDecimal_.BigDecimal,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => bigDecimal_.lessThanOrEqualTo(a, max), {
+    filter((a) => bigDecimal_.lessThanOrEqualTo(a, max), {
       typeId: { id: LessThanOrEqualToBigDecimalTypeId, annotation: { max } },
       description: `a BigDecimal less than or equal to ${bigDecimal_.format(max)}`,
       ...annotations
@@ -5912,9 +6246,9 @@ export const PositiveBigDecimalTypeId: unique symbol = Symbol.for(
 export const positiveBigDecimal = <A extends bigDecimal_.BigDecimal>(
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => bigDecimal_.isPositive(a), {
+    filter((a) => bigDecimal_.isPositive(a), {
       typeId: { id: PositiveBigDecimalTypeId, annotation: {} },
       description: `a positive BigDecimal`,
       ...annotations
@@ -5925,7 +6259,7 @@ export const positiveBigDecimal = <A extends bigDecimal_.BigDecimal>(
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export const PositiveBigDecimalFromSelf = BigDecimalFromSelf.pipe(
+export const PositiveBigDecimalFromSelf: filter<Schema<bigDecimal_.BigDecimal>> = BigDecimalFromSelf.pipe(
   positiveBigDecimal({
     identifier: "PositiveBigDecimalFromSelf",
     title: "PositiveBigDecimalFromSelf"
@@ -5947,9 +6281,9 @@ export const NonNegativeBigDecimalTypeId: unique symbol = Symbol.for(
 export const nonNegativeBigDecimal = <A extends bigDecimal_.BigDecimal>(
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => a.value >= 0n, {
+    filter((a) => a.value >= 0n, {
       typeId: { id: NonNegativeBigDecimalTypeId, annotation: {} },
       description: `a non-negative BigDecimal`,
       ...annotations
@@ -5960,7 +6294,7 @@ export const nonNegativeBigDecimal = <A extends bigDecimal_.BigDecimal>(
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export const NonNegativeBigDecimalFromSelf = BigDecimalFromSelf.pipe(
+export const NonNegativeBigDecimalFromSelf: filter<Schema<bigDecimal_.BigDecimal>> = BigDecimalFromSelf.pipe(
   nonNegativeBigDecimal({
     identifier: "NonNegativeBigDecimalFromSelf",
     title: "NonNegativeBigDecimalFromSelf"
@@ -5982,9 +6316,9 @@ export const NegativeBigDecimalTypeId: unique symbol = Symbol.for(
 export const negativeBigDecimal = <A extends bigDecimal_.BigDecimal>(
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => bigDecimal_.isNegative(a), {
+    filter((a) => bigDecimal_.isNegative(a), {
       typeId: { id: NegativeBigDecimalTypeId, annotation: {} },
       description: `a negative BigDecimal`,
       ...annotations
@@ -5995,7 +6329,7 @@ export const negativeBigDecimal = <A extends bigDecimal_.BigDecimal>(
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export const NegativeBigDecimalFromSelf = BigDecimalFromSelf.pipe(
+export const NegativeBigDecimalFromSelf: filter<Schema<bigDecimal_.BigDecimal>> = BigDecimalFromSelf.pipe(
   negativeBigDecimal({
     identifier: "NegativeBigDecimalFromSelf",
     title: "NegativeBigDecimalFromSelf"
@@ -6017,9 +6351,9 @@ export const NonPositiveBigDecimalTypeId: unique symbol = Symbol.for(
 export const nonPositiveBigDecimal = <A extends bigDecimal_.BigDecimal>(
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => a.value <= 0n, {
+    filter((a) => a.value <= 0n, {
       typeId: { id: NonPositiveBigDecimalTypeId, annotation: {} },
       description: `a non-positive BigDecimal`,
       ...annotations
@@ -6030,7 +6364,7 @@ export const nonPositiveBigDecimal = <A extends bigDecimal_.BigDecimal>(
  * @category BigDecimal constructors
  * @since 1.0.0
  */
-export const NonPositiveBigDecimalFromSelf = BigDecimalFromSelf.pipe(
+export const NonPositiveBigDecimalFromSelf: filter<Schema<bigDecimal_.BigDecimal>> = BigDecimalFromSelf.pipe(
   nonPositiveBigDecimal({
     identifier: "NonPositiveBigDecimalFromSelf",
     title: "NonPositiveBigDecimalFromSelf"
@@ -6052,9 +6386,9 @@ export const betweenBigDecimal = <A extends bigDecimal_.BigDecimal>(
   maximum: bigDecimal_.BigDecimal,
   annotations?: Annotations.Filter<A>
 ) =>
-<I, R>(self: Schema<A, I, R>): Schema<A, I, R> =>
+<I, R>(self: Schema<A, I, R>): filter<Schema<A, I, R>> =>
   self.pipe(
-    filter((a): a is A => bigDecimal_.between(a, { minimum, maximum }), {
+    filter((a) => bigDecimal_.between(a, { minimum, maximum }), {
       typeId: { id: BetweenBigDecimalTypeId, annotation: { maximum, minimum } },
       description: `a BigDecimal between ${bigDecimal_.format(minimum)} and ${bigDecimal_.format(maximum)}`,
       ...annotations
@@ -6069,7 +6403,7 @@ export const betweenBigDecimal = <A extends bigDecimal_.BigDecimal>(
  */
 export const clampBigDecimal =
   (minimum: bigDecimal_.BigDecimal, maximum: bigDecimal_.BigDecimal) =>
-  <R, I, A extends bigDecimal_.BigDecimal>(self: Schema<A, I, R>): Schema<A, I, R> =>
+  <A extends bigDecimal_.BigDecimal, I, R>(self: Schema<A, I, R>): transform<Schema<A, I, R>, filter<Schema<A>>> =>
     transform(
       self,
       self.pipe(typeSchema, betweenBigDecimal(minimum, maximum)),
@@ -6097,7 +6431,7 @@ const chunkParse = <R, A>(
  * @since 1.0.0
  */
 export interface ChunkFromSelf<Value extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     ChunkFromSelf<Value>,
     chunk_.Chunk<Schema.Type<Value>>,
     chunk_.Chunk<Schema.Encoded<Value>>,
@@ -6113,8 +6447,8 @@ export const ChunkFromSelf = <Value extends Schema.Any>(value: Value): ChunkFrom
   return declare(
     [value],
     {
-      decode: (item) => chunkParse(ParseResult.decodeUnknown($Array(item))),
-      encode: (item) => chunkParse(ParseResult.encodeUnknown($Array(item)))
+      decode: (item) => chunkParse(ParseResult.decodeUnknown(Array$(item))),
+      encode: (item) => chunkParse(ParseResult.encodeUnknown(Array$(item)))
     },
     {
       description: `Chunk<${format(value)}>`,
@@ -6130,7 +6464,7 @@ export const ChunkFromSelf = <Value extends Schema.Any>(value: Value): ChunkFrom
  * @since 1.0.0
  */
 export interface Chunk<Value extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     Chunk<Value>,
     chunk_.Chunk<Schema.Type<Value>>,
     ReadonlyArray<Schema.Encoded<Value>>,
@@ -6145,7 +6479,7 @@ export interface Chunk<Value extends Schema.Any> extends
 export const Chunk = <Value extends Schema.Any>(value: Value): Chunk<Value> => {
   const value_ = asSchema(value)
   return transform(
-    $Array(value_),
+    Array$(value_),
     ChunkFromSelf(typeSchema(value_)),
     { decode: (as) => as.length === 0 ? chunk_.empty() : chunk_.fromIterable(as), encode: chunk_.toReadonlyArray }
   )
@@ -6182,8 +6516,8 @@ export const DataFromSelf = <
   A extends Readonly<Record<string, any>> | ReadonlyArray<any>
 >(
   item: Schema<A, I, R>
-): Schema<A, I, R> => {
-  return declare(
+): SchemaClass<A, I, R> =>
+  declare(
     [item],
     {
       decode: (item) => dataParse(ParseResult.decodeUnknown(item)),
@@ -6195,7 +6529,6 @@ export const DataFromSelf = <
       arbitrary: dataArbitrary
     }
   )
-}
 
 /**
  * @category Data transformations
@@ -6207,7 +6540,7 @@ export const Data = <
   A extends Readonly<Record<string, any>> | ReadonlyArray<any>
 >(
   item: Schema<A, I, R>
-): Schema<A, I, R> =>
+): SchemaClass<A, I, R> =>
   transform(
     item,
     DataFromSelf(typeSchema(item)),
@@ -6217,36 +6550,43 @@ export const Data = <
 type MissingSelfGeneric<Usage extends string, Params extends string = ""> =
   `Missing \`Self\` generic - use \`class Self extends ${Usage}<Self>()(${Params}{ ... })\``
 
+type RequiredKeys<T> = {
+  [K in keyof T]-?: {} extends Pick<T, K> ? never : K
+}[keyof T]
+
 /**
  * @category api interface
  * @since 1.0.0
  */
-export interface Class<Self, Fields extends Struct.Fields, A, I, R, C, Inherited, Proto> extends Schema<Self, I, R> {
+export interface Class<Self, Fields extends Struct.Fields, I, R, C, Inherited, Proto>
+  extends Schema<Self, Types.Simplify<I>, R>
+{
   new(
-    props: keyof C extends never ? void | {} : C,
+    props: RequiredKeys<C> extends never ? void | {} : Types.Simplify<C>,
     disableValidation?: boolean | undefined
-  ): A & Omit<Inherited, keyof A> & Proto
+  ): Struct.Type<Fields> & Omit<Inherited, keyof Fields> & Proto
+
+  annotations(annotations: Annotations.Schema<Self>): SchemaClass<Self, Types.Simplify<I>, R>
 
   readonly fields: { readonly [K in keyof Fields]: Fields[K] }
 
   readonly identifier: string
 
-  readonly extend: <Extended = never>(identifier: string) => <newFields extends Struct.Fields>(
-    fields: newFields,
+  extend<Extended = never>(identifier?: string | undefined): <newFields extends Struct.Fields>(
+    fields: newFields | HasFields<newFields>,
     annotations?: Annotations.Schema<Extended>
   ) => [Extended] extends [never] ? MissingSelfGeneric<"Base.extend">
     : Class<
       Extended,
       Fields & newFields,
-      Types.Simplify<A & Struct.Type<newFields>>,
-      Types.Simplify<I & Struct.Encoded<newFields>>,
+      I & Struct.Encoded<newFields>,
       R | Struct.Context<newFields>,
-      Types.Simplify<C & Struct.Type<newFields>>,
+      C & Struct.Constructor<newFields>,
       Self,
       Proto
     >
 
-  readonly transformOrFail: <Transformed = never>(identifier: string) => <
+  transformOrFail<Transformed = never>(identifier?: string | undefined): <
     newFields extends Struct.Fields,
     R2,
     R3
@@ -6254,30 +6594,29 @@ export interface Class<Self, Fields extends Struct.Fields, A, I, R, C, Inherited
     fields: newFields,
     options: {
       readonly decode: (
-        input: A,
+        input: Types.Simplify<Struct.Type<Fields>>,
         options: ParseOptions,
         ast: AST.Transformation
-      ) => Effect.Effect<Types.Simplify<A & Struct.Type<newFields>>, ParseResult.ParseIssue, R2>
+      ) => Effect.Effect<Types.Simplify<Struct.Type<Fields & newFields>>, ParseResult.ParseIssue, R2>
       readonly encode: (
-        input: Types.Simplify<A & Struct.Type<newFields>>,
+        input: Types.Simplify<Struct.Type<Fields & newFields>>,
         options: ParseOptions,
         ast: AST.Transformation
-      ) => Effect.Effect<A, ParseResult.ParseIssue, R3>
+      ) => Effect.Effect<Struct.Type<Fields>, ParseResult.ParseIssue, R3>
     },
     annotations?: Annotations.Schema<Transformed>
   ) => [Transformed] extends [never] ? MissingSelfGeneric<"Base.transform">
     : Class<
       Transformed,
       Fields & newFields,
-      Types.Simplify<A & Struct.Type<newFields>>,
       I,
       R | Struct.Context<newFields> | R2 | R3,
-      Types.Simplify<C & Struct.Type<newFields>>,
+      C & Struct.Constructor<newFields>,
       Self,
       Proto
     >
 
-  readonly transformOrFailFrom: <Transformed = never>(identifier: string) => <
+  transformOrFailFrom<Transformed = never>(identifier?: string | undefined): <
     newFields extends Struct.Fields,
     R2,
     R3
@@ -6285,7 +6624,7 @@ export interface Class<Self, Fields extends Struct.Fields, A, I, R, C, Inherited
     fields: newFields,
     options: {
       readonly decode: (
-        input: I,
+        input: Types.Simplify<I>,
         options: ParseOptions,
         ast: AST.Transformation
       ) => Effect.Effect<Types.Simplify<I & Struct.Encoded<newFields>>, ParseResult.ParseIssue, R2>
@@ -6300,34 +6639,82 @@ export interface Class<Self, Fields extends Struct.Fields, A, I, R, C, Inherited
     : Class<
       Transformed,
       Fields & newFields,
-      Types.Simplify<A & Struct.Type<newFields>>,
       I,
       R | Struct.Context<newFields> | R2 | R3,
-      Types.Simplify<C & Struct.Type<newFields>>,
+      C & Struct.Constructor<newFields>,
       Self,
       Proto
     >
 }
 
+type HasFields<Fields extends Struct.Fields> = {
+  readonly fields: Fields
+} | {
+  readonly from: HasFields<Fields>
+}
+
+const isField = (u: unknown) => isSchema(u) || isPropertySignature(u)
+
+const isFields = <Fields extends Struct.Fields>(fields: object): fields is Fields =>
+  util_.ownKeys(fields).every((key) => isField((fields as any)[key]))
+
+const getFields = <Fields extends Struct.Fields>(hasFields: HasFields<Fields>): Fields =>
+  "fields" in hasFields ? hasFields.fields : getFields(hasFields.from)
+
+const getSchemaFromFieldsOr = <Fields extends Struct.Fields>(fieldsOr: Fields | HasFields<Fields>): Schema.Any =>
+  isFields(fieldsOr) ? Struct(fieldsOr) : isSchema(fieldsOr) ? fieldsOr : Struct(getFields(fieldsOr))
+
+const getFieldsFromFieldsOr = <Fields extends Struct.Fields>(fieldsOr: Fields | HasFields<Fields>): Fields =>
+  isFields(fieldsOr) ? fieldsOr : getFields(fieldsOr)
+
 /**
  * @category classes
  * @since 1.0.0
  */
-export const Class = <Self = never>(identifier: string) =>
+export const Class = <Self = never>(identifier?: string | undefined) =>
 <Fields extends Struct.Fields>(
-  fields: Fields,
+  fieldsOr: Fields | HasFields<Fields>,
   annotations?: Annotations.Schema<Self>
 ): [Self] extends [never] ? MissingSelfGeneric<"Class">
   : Class<
     Self,
     Fields,
-    Types.Simplify<Struct.Type<Fields>>,
-    Types.Simplify<Struct.Encoded<Fields>>,
+    Struct.Encoded<Fields>,
+    Struct.Context<Fields>,
+    Struct.Constructor<Fields>,
+    {},
+    {}
+  > =>
+  makeClass({
+    kind: "Class",
+    identifier,
+    schema: getSchemaFromFieldsOr(fieldsOr),
+    fields: getFieldsFromFieldsOr(fieldsOr),
+    Base: data_.Class,
+    annotations
+  })
+
+/** @internal */
+export const getClassTag = <Tag extends string>(tag: Tag) =>
+  withConstructorDefault(propertySignature(Literal(tag)), () => tag)
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface TaggedClass<Self, Tag extends string, Fields extends Struct.Fields> extends
+  Class<
+    Self,
+    Fields,
+    Struct.Encoded<Fields>,
     Struct.Context<Fields>,
-    Types.Simplify<Struct.Type<Fields>>,
+    Struct.Constructor<Omit<Fields, "_tag">>,
     {},
     {}
-  > => makeClass({ kind: "Class", identifier, fields, Base: data_.Class, annotations })
+  >
+{
+  readonly _tag: Tag
+}
 
 /**
  * @category classes
@@ -6336,27 +6723,44 @@ export const Class = <Self = never>(identifier: string) =>
 export const TaggedClass = <Self = never>(identifier?: string) =>
 <Tag extends string, Fields extends Struct.Fields>(
   tag: Tag,
-  fields: Fields,
+  fieldsOr: Fields | HasFields<Fields>,
   annotations?: Annotations.Schema<Self>
 ): [Self] extends [never] ? MissingSelfGeneric<"TaggedClass", `"Tag", `>
-  : Class<
-    Self,
-    { readonly _tag: Literal<[Tag]> } & Fields,
-    Types.Simplify<{ readonly _tag: Tag } & Struct.Type<Fields>>,
-    Types.Simplify<{ readonly _tag: Tag } & Struct.Encoded<Fields>>,
-    Struct.Context<Fields>,
-    Types.Simplify<Struct.Type<Fields>>,
-    {},
-    {}
-  > =>
-  makeClass({
+  : TaggedClass<Self, Tag, { readonly _tag: PropertySignature<":", Tag, never, ":", Tag, true, never> } & Fields> =>
+{
+  const fields = getFieldsFromFieldsOr(fieldsOr)
+  const schema = getSchemaFromFieldsOr(fieldsOr)
+  const newFields = { _tag: getClassTag(tag) }
+  const taggedFields = extendFields(newFields, fields)
+  return class TaggedClass extends makeClass({
     kind: "TaggedClass",
     identifier: identifier ?? tag,
-    fields: extendFields({ _tag: Literal(tag) }, fields),
+    schema: extend(schema, Struct(newFields)),
+    fields: taggedFields,
     Base: data_.Class,
-    tag: { _tag: tag },
     annotations
-  })
+  }) {
+    static _tag = tag
+  } as any
+}
+
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface TaggedErrorClass<Self, Tag extends string, Fields extends Struct.Fields> extends
+  Class<
+    Self,
+    Fields,
+    Struct.Encoded<Fields>,
+    Struct.Context<Fields>,
+    Struct.Constructor<Omit<Fields, "_tag">>,
+    {},
+    cause_.YieldableError
+  >
+{
+  readonly _tag: Tag
+}
 
 /**
  * @category classes
@@ -6365,28 +6769,27 @@ export const TaggedClass = <Self = never>(identifier?: string) =>
 export const TaggedError = <Self = never>(identifier?: string) =>
 <Tag extends string, Fields extends Struct.Fields>(
   tag: Tag,
-  fields: Fields,
+  fieldsOr: Fields | HasFields<Fields>,
   annotations?: Annotations.Schema<Self>
 ): [Self] extends [never] ? MissingSelfGeneric<"TaggedError", `"Tag", `>
-  : Class<
+  : TaggedErrorClass<
     Self,
-    { readonly _tag: Literal<[Tag]> } & Fields,
-    Types.Simplify<{ readonly _tag: Tag } & Struct.Type<Fields>>,
-    Types.Simplify<{ readonly _tag: Tag } & Struct.Encoded<Fields>>,
-    Struct.Context<Fields>,
-    Types.Simplify<Struct.Type<Fields>>,
-    {},
-    cause_.YieldableError
+    Tag,
+    { readonly _tag: PropertySignature<":", Tag, never, ":", Tag, true, never> } & Fields
   > =>
 {
   class Base extends data_.Error {}
   ;(Base.prototype as any).name = tag
-  return makeClass({
+  const fields = getFieldsFromFieldsOr(fieldsOr)
+  const schema = getSchemaFromFieldsOr(fieldsOr)
+  const newFields = { _tag: getClassTag(tag) }
+  const taggedFields = extendFields(newFields, fields)
+  return class TaggedErrorClass extends makeClass({
     kind: "TaggedError",
     identifier: identifier ?? tag,
-    fields: extendFields({ _tag: Literal(tag) }, fields),
+    schema: extend(schema, Struct(newFields)),
+    fields: taggedFields,
     Base,
-    tag: { _tag: tag },
     annotations,
     toStringOverride(self) {
       if ((Predicate.isString(self.message) && self.message.length > 0)) {
@@ -6397,15 +6800,37 @@ export const TaggedError = <Self = never>(identifier?: string) =>
         return message
       }
     }
-  })
+  }) {
+    static _tag = tag
+  } as any
 }
 
 /**
  * @category classes
  * @since 1.0.0
  */
-export interface TaggedRequest<Tag extends string, S, SI, SR, A, AI, E, EI, RR>
-  extends Request.Request<A, E>, Serializable.SerializableWithResult<S, SI, SR, A, AI, E, EI, RR>
+export interface TaggedRequest<
+  Tag extends string,
+  Self,
+  FieldsI,
+  FieldsR,
+  SuccessA,
+  SuccessI,
+  FailureA,
+  FailureI,
+  SuccessAndFailureR
+> extends
+  Request.Request<SuccessA, FailureA>,
+  Serializable.SerializableWithResult<
+    Self,
+    FieldsI,
+    FieldsR,
+    SuccessA,
+    SuccessI,
+    FailureA,
+    FailureI,
+    SuccessAndFailureR
+  >
 {
   readonly _tag: Tag
 }
@@ -6424,38 +6849,59 @@ export declare namespace TaggedRequest {
     | TaggedRequest<string, any, any, any, any, any, never, never, any>
 }
 
+/**
+ * @category api interface
+ * @since 1.0.0
+ */
+export interface TaggedRequestClass<
+  Self,
+  Tag extends string,
+  Fields extends Struct.Fields,
+  Failure extends Schema.All,
+  Success extends Schema.All
+> extends
+  Class<
+    Self,
+    Fields,
+    Struct.Encoded<Fields>,
+    Struct.Context<Fields>,
+    Struct.Constructor<Omit<Fields, "_tag">>,
+    TaggedRequest<
+      Tag,
+      Self,
+      Struct.Encoded<Fields>,
+      Struct.Context<Fields>,
+      Schema.Type<Success>,
+      Schema.Encoded<Success>,
+      Schema.Type<Failure>,
+      Schema.Encoded<Failure>,
+      Schema.Context<Success> | Schema.Context<Failure>
+    >,
+    {}
+  >
+{
+  readonly _tag: Tag
+}
+
 /**
  * @category classes
  * @since 1.0.0
  */
 export const TaggedRequest =
   <Self = never>(identifier?: string) =>
-  <Tag extends string, Fields extends Struct.Fields, EA, EI, ER, AA, AI, AR>(
+  <Tag extends string, Fields extends Struct.Fields, Failure extends Schema.All, Success extends Schema.All>(
     tag: Tag,
-    Failure: Schema<EA, EI, ER>,
-    Success: Schema<AA, AI, AR>,
+    Failure: Failure,
+    Success: Success,
     fields: Fields,
     annotations?: Annotations.Schema<Self>
   ): [Self] extends [never] ? MissingSelfGeneric<"TaggedRequest", `"Tag", SuccessSchema, FailureSchema, `>
-    : Class<
+    : TaggedRequestClass<
       Self,
-      { readonly _tag: Literal<[Tag]> } & Fields,
-      Types.Simplify<{ readonly _tag: Tag } & Struct.Type<Fields>>,
-      Types.Simplify<{ readonly _tag: Tag } & Struct.Encoded<Fields>>,
-      Struct.Context<Fields>,
-      Types.Simplify<Struct.Type<Fields>>,
-      TaggedRequest<
-        Tag,
-        Self,
-        { readonly _tag: Tag } & Struct.Encoded<Fields>,
-        Struct.Context<Fields>,
-        AA,
-        AI,
-        EA,
-        EI,
-        ER | AR
-      >,
-      {}
+      Tag,
+      { readonly _tag: PropertySignature<":", Tag, never, ":", Tag, true, never> } & Fields,
+      Failure,
+      Success
     > =>
   {
     class SerializableRequest extends Request.Class<any, any, { readonly _tag: string }> {
@@ -6466,14 +6912,17 @@ export const TaggedRequest =
         return { Failure, Success }
       }
     }
-    return makeClass({
+    const taggedFields = extendFields({ _tag: getClassTag(tag) }, fields)
+    return class TaggedRequestClass extends makeClass({
       kind: "TaggedRequest",
       identifier: identifier ?? tag,
-      fields: extendFields({ _tag: Literal(tag) }, fields),
+      schema: Struct(taggedFields),
+      fields: taggedFields,
       Base: SerializableRequest,
-      tag: { _tag: tag },
       annotations
-    })
+    }) {
+      static _tag = tag
+    } as any
   }
 
 const extendFields = (a: Struct.Fields, b: Struct.Fields): Struct.Fields => {
@@ -6487,33 +6936,37 @@ const extendFields = (a: Struct.Fields, b: Struct.Fields): Struct.Fields => {
   return out
 }
 
-const makeClass = ({ Base, annotations, fields, fromSchema, identifier, kind, tag, toStringOverride }: {
-  kind: string
-  identifier: string
+// does not overwrite existing title annotation
+const orElseTitleAnnotation = <A, I, R>(schema: Schema<A, I, R>, title: string): Schema<A, I, R> => {
+  const annotation = AST.getTitleAnnotation(schema.ast)
+  if (option_.isNone(annotation)) {
+    return schema.annotations({ title })
+  }
+  return schema
+}
+
+const makeClass = ({ Base, annotations, fields, identifier, kind, schema, toStringOverride }: {
+  kind: "Class" | "TaggedClass" | "TaggedError" | "TaggedRequest"
+  identifier: string | undefined
+  schema: Schema.Any
   fields: Struct.Fields
   Base: new(...args: ReadonlyArray<any>) => any
-  fromSchema?: Schema.Any | undefined
-  tag?: { _tag: AST.LiteralValue } | undefined
   annotations?: Annotations.Schema<any> | undefined
   toStringOverride?: (self: any) => string | undefined
 }): any => {
-  const classSymbol = Symbol.for(`@effect/schema/${kind}/${identifier}`)
-  const schema = fromSchema ?? Struct(fields)
-  const from = option_.match(AST.getTitleAnnotation(schema.ast), {
-    onNone: () => schema.annotations({ title: `${identifier} (Encoded side)` }),
-    onSome: () => schema
-  })
-
-  return class extends Base {
+  return class Class extends Base {
     constructor(
       props: { [x: string | symbol]: unknown } = {},
       disableValidation: boolean = false
     ) {
-      if (tag !== undefined) {
-        props = { ...props, ...tag }
+      props = { ...props }
+      if (kind !== "Class") {
+        delete props["_tag"]
       }
+      props = lazilyMergeDefaults(fields, props)
       if (disableValidation !== true) {
-        props = ParseResult.validateSync(schema)(props)
+        // TODO: move once we adopt required identifier
+        props = ParseResult.validateSync(Class.validateSchema)(props)
       }
       super(props, true)
     }
@@ -6524,13 +6977,24 @@ const makeClass = ({ Base, annotations, fields, fromSchema, identifier, kind, ta
 
     static [TypeId] = variance
 
+    static get validateSchema(): Schema.Any {
+      return orElseTitleAnnotation(schema, `${this.identifier} (Constructor)`)
+    }
+
+    static get encodedSide(): Schema.Any {
+      return orElseTitleAnnotation(schema, `${this.identifier} (Encoded side)`)
+    }
+
     static get ast() {
-      const toSchema = typeSchema(schema)
-      const guard = ParseResult.is(toSchema)
-      const fallbackInstanceOf = (u: unknown) => Predicate.hasProperty(u, classSymbol) && guard(u)
-      const encode = ParseResult.encodeUnknown(toSchema)
+      // TODO: can we cache this?
+      const identifier = this.identifier
+      // TODO: move once we adopt required identifier
+      const typeSide = orElseTitleAnnotation(typeSchema(schema), `${identifier} (Type side)`)
+      const guard = ParseResult.is(typeSide)
+      const fallbackInstanceOf = (u: unknown) => Predicate.hasProperty(u, this.classSymbol) && guard(u)
+
       const declaration: Schema.Any = declare(
-        [toSchema],
+        [typeSide],
         {
           decode: () => (input, _, ast) =>
             input instanceof this || fallbackInstanceOf(input)
@@ -6540,7 +7004,7 @@ const makeClass = ({ Base, annotations, fields, fromSchema, identifier, kind, ta
             input instanceof this
               ? ParseResult.succeed(input)
               : ParseResult.map(
-                encode(input, options),
+                ParseResult.encodeUnknown(typeSide)(input, options),
                 (props) => new this(props, true)
               )
         },
@@ -6551,12 +7015,12 @@ const makeClass = ({ Base, annotations, fields, fromSchema, identifier, kind, ta
           pretty: (pretty) => (self: any) => `${identifier}(${pretty(self)})`,
           arbitrary: (arb) => (fc: any) => arb(fc).map((props: any) => new this(props)),
           equivalence: identity,
-          [AST.SurrogateAnnotationId]: toSchema.ast,
+          [AST.SurrogateAnnotationId]: typeSide.ast,
           ...annotations
         }
       )
       const transformation = transform(
-        from,
+        this.encodedSide,
         declaration,
         { decode: (input) => new this(input, true), encode: identity }
       ).annotations({ [AST.SurrogateAnnotationId]: schema.ast })
@@ -6572,7 +7036,7 @@ const makeClass = ({ Base, annotations, fields, fromSchema, identifier, kind, ta
     }
 
     static toString() {
-      return `(${String(from)} <-> ${identifier})`
+      return `(${String(this.encodedSide)} <-> ${this.identifier})`
     }
 
     // ----------------
@@ -6581,55 +7045,58 @@ const makeClass = ({ Base, annotations, fields, fromSchema, identifier, kind, ta
 
     static fields = { ...fields }
 
-    static identifier = identifier
+    static customIdentifier?: string
 
-    static extend<Extended>(identifier: string) {
-      return (newFields: Struct.Fields, annotations?: Annotations.Schema<Extended>) => {
+    static extend<Extended>(identifier?: string | undefined) {
+      return (
+        newFieldsOr: Struct.Fields | HasFields<Struct.Fields>,
+        annotations?: Annotations.Schema<Extended>
+      ) => {
+        const newFields = getFieldsFromFieldsOr(newFieldsOr)
+        const newSchema = getSchemaFromFieldsOr(newFieldsOr)
         const extendedFields = extendFields(fields, newFields)
         return makeClass({
           kind,
           identifier,
+          schema: extend(schema, newSchema),
           fields: extendedFields,
           Base: this,
-          tag,
           annotations
         })
       }
     }
 
-    static transformOrFail<Transformed>(identifier: string) {
+    static transformOrFail<Transformed>(identifier?: string | undefined) {
       return (newFields: Struct.Fields, options: any, annotations?: Annotations.Schema<Transformed>) => {
         const transformedFields: Struct.Fields = extendFields(fields, newFields)
         return makeClass({
           kind,
           identifier,
-          fromSchema: transformOrFail(
+          schema: transformOrFail(
             schema,
             typeSchema(Struct(transformedFields)),
             options
           ),
           fields: transformedFields,
           Base: this,
-          tag,
           annotations
         })
       }
     }
 
-    static transformOrFailFrom<Transformed>(identifier: string) {
+    static transformOrFailFrom<Transformed>(identifier?: string | undefined) {
       return (newFields: Struct.Fields, options: any, annotations?: Annotations.Schema<Transformed>) => {
         const transformedFields: Struct.Fields = extendFields(fields, newFields)
         return makeClass({
           kind,
           identifier,
-          fromSchema: transformOrFail(
+          schema: transformOrFail(
             encodedSchema(schema),
             Struct(transformedFields),
             options
           ),
           fields: transformedFields,
           Base: this,
-          tag,
           annotations
         })
       }
@@ -6639,8 +7106,12 @@ const makeClass = ({ Base, annotations, fields, fromSchema, identifier, kind, ta
     // other
     // ----------------
 
-    get [classSymbol]() {
-      return classSymbol
+    static get identifier() {
+      return identifier || this.customIdentifier || this.name
+    }
+
+    static get classSymbol() {
+      return Symbol.for(`@effect/schema/${kind}/${this.identifier}`)
     }
 
     toString() {
@@ -6650,7 +7121,7 @@ const makeClass = ({ Base, annotations, fields, fromSchema, identifier, kind, ta
           return out
         }
       }
-      return `${identifier}({ ${
+      return `${this.identifier}({ ${
         util_.ownKeys(fields).map((p: any) => `${util_.formatPropertyKey(p)}: ${util_.formatUnknown(this[p])}`)
           .join(", ")
       } })`
@@ -6724,24 +7195,21 @@ const fiberIdPretty: pretty_.Pretty<fiberId_.FiberId> = (fiberId) => {
   }
 }
 
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface FiberIdFromSelf extends Annotable<FiberIdFromSelf, fiberId_.FiberId> {}
-
 /**
  * @category FiberId constructors
  * @since 1.0.0
  */
-export const FiberIdFromSelf: FiberIdFromSelf = declare(
+export class FiberIdFromSelf extends declare(
   fiberId_.isFiberId,
   {
     identifier: "FiberIdFromSelf",
     pretty: () => fiberIdPretty,
     arbitrary: () => fiberIdArbitrary
   }
-)
+) {
+  static override annotations: (annotations: Annotations.Schema<fiberId_.FiberId>) => typeof FiberIdFromSelf = super
+    .annotations
+}
 
 const fiberIdDecode = (input: FiberIdEncoded): fiberId_.FiberId => {
   switch (input._tag) {
@@ -6769,21 +7237,17 @@ const fiberIdEncode = (input: fiberId_.FiberId): FiberIdEncoded => {
   }
 }
 
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface FiberId extends Annotable<FiberId, fiberId_.FiberId, FiberIdEncoded> {}
-
 /**
  * @category FiberId transformations
  * @since 1.0.0
  */
-export const FiberId: FiberId = transform(
+export class FiberId extends transform(
   FiberIdEncoded,
   FiberIdFromSelf,
   { decode: fiberIdDecode, encode: fiberIdEncode }
-).annotations({ identifier: "FiberId" })
+).annotations({ identifier: "FiberId" }) {
+  static override annotations: (annotations: Annotations.Schema<fiberId_.FiberId>) => typeof FiberId = super.annotations
+}
 
 /**
  * @category Cause utils
@@ -6922,7 +7386,7 @@ const causeParse = <R, A>(
  * @since 1.0.0
  */
 export interface CauseFromSelf<E extends Schema.Any, DR> extends
-  Annotable<
+  AnnotableClass<
     CauseFromSelf<E, DR>,
     cause_.Cause<Schema.Type<E>>,
     cause_.Cause<Schema.Encoded<E>>,
@@ -6998,7 +7462,7 @@ function causeEncode<E>(cause: cause_.Cause<E>): CauseEncoded<E> {
  * @category Cause transformations
  * @since 1.0.0
  */
-export const CauseDefectUnknown: Unknown = transform(
+export const CauseDefectUnknown = transform(
   Unknown,
   Unknown,
   {
@@ -7030,7 +7494,7 @@ export const CauseDefectUnknown: Unknown = transform(
  * @since 1.0.0
  */
 export interface Cause<E extends Schema.All, DR> extends
-  Annotable<
+  AnnotableClass<
     Cause<E, DR>,
     cause_.Cause<Schema.Type<E>>,
     CauseEncoded<Schema.Encoded<E>>,
@@ -7140,7 +7604,7 @@ const exitParse = <A, R, E, ER>(
  * @since 1.0.0
  */
 export interface ExitFromSelf<A extends Schema.Any, E extends Schema.Any, DR> extends
-  Annotable<
+  AnnotableClass<
     ExitFromSelf<A, E, DR>,
     exit_.Exit<Schema.Type<A>, Schema.Type<E>>,
     exit_.Exit<Schema.Encoded<A>, Schema.Encoded<E>>,
@@ -7185,7 +7649,7 @@ export const ExitFromSelf = <A extends Schema.Any, E extends Schema.Any, DR = ne
  * @since 1.0.0
  */
 export interface Exit<A extends Schema.All, E extends Schema.All, DR> extends
-  Annotable<
+  AnnotableClass<
     Exit<A, E, DR>,
     exit_.Exit<Schema.Type<A>, Schema.Type<E>>,
     ExitEncoded<Schema.Encoded<A>, Schema.Encoded<E>>,
@@ -7248,7 +7712,7 @@ const hashSetParse = <R, A>(
  * @since 1.0.0
  */
 export interface HashSetFromSelf<Value extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     HashSetFromSelf<Value>,
     hashSet_.HashSet<Schema.Type<Value>>,
     hashSet_.HashSet<Schema.Encoded<Value>>,
@@ -7266,8 +7730,8 @@ export const HashSetFromSelf = <Value extends Schema.Any>(
   return declare(
     [value],
     {
-      decode: (item) => hashSetParse(ParseResult.decodeUnknown($Array(item))),
-      encode: (item) => hashSetParse(ParseResult.encodeUnknown($Array(item)))
+      decode: (item) => hashSetParse(ParseResult.decodeUnknown(Array$(item))),
+      encode: (item) => hashSetParse(ParseResult.encodeUnknown(Array$(item)))
     },
     {
       description: `HashSet<${format(value)}>`,
@@ -7283,7 +7747,7 @@ export const HashSetFromSelf = <Value extends Schema.Any>(
  * @since 1.0.0
  */
 export interface HashSet<Value extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     HashSet<Value>,
     hashSet_.HashSet<Schema.Type<Value>>,
     ReadonlyArray<Schema.Encoded<Value>>,
@@ -7298,7 +7762,7 @@ export interface HashSet<Value extends Schema.Any> extends
 export const HashSet = <Value extends Schema.Any>(value: Value): HashSet<Value> => {
   const value_ = asSchema(value)
   return transform(
-    $Array(value_),
+    Array$(value_),
     HashSetFromSelf(typeSchema(value_)),
     { decode: (as) => hashSet_.fromIterable(as), encode: (set) => Array.from(set) }
   )
@@ -7344,7 +7808,7 @@ const hashMapParse = <R, K, V>(
  * @since 1.0.0
  */
 export interface HashMapFromSelf<K extends Schema.Any, V extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     HashMapFromSelf<K, V>,
     hashMap_.HashMap<Schema.Type<K>, Schema.Type<V>>,
     hashMap_.HashMap<Schema.Encoded<K>, Schema.Encoded<V>>,
@@ -7363,8 +7827,8 @@ export const HashMapFromSelf = <K extends Schema.Any, V extends Schema.Any>({ ke
   return declare(
     [key, value],
     {
-      decode: (key, value) => hashMapParse(ParseResult.decodeUnknown($Array(Tuple(key, value)))),
-      encode: (key, value) => hashMapParse(ParseResult.encodeUnknown($Array(Tuple(key, value))))
+      decode: (key, value) => hashMapParse(ParseResult.decodeUnknown(Array$(Tuple(key, value)))),
+      encode: (key, value) => hashMapParse(ParseResult.encodeUnknown(Array$(Tuple(key, value))))
     },
     {
       description: `HashMap<${format(key)}, ${format(value)}>`,
@@ -7380,7 +7844,7 @@ export const HashMapFromSelf = <K extends Schema.Any, V extends Schema.Any>({ ke
  * @since 1.0.0
  */
 export interface HashMap<K extends Schema.Any, V extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     HashMap<K, V>,
     hashMap_.HashMap<Schema.Type<K>, Schema.Type<V>>,
     ReadonlyArray<readonly [Schema.Encoded<K>, Schema.Encoded<V>]>,
@@ -7399,7 +7863,7 @@ export const HashMap = <K extends Schema.Any, V extends Schema.Any>({ key, value
   const key_ = asSchema(key)
   const value_ = asSchema(value)
   return transform(
-    $Array(Tuple(key_, value_)),
+    Array$(Tuple(key_, value_)),
     HashMapFromSelf({ key: typeSchema(key_), value: typeSchema(value_) }),
     { decode: (as) => hashMap_.fromIterable(as), encode: (map) => Array.from(map) }
   )
@@ -7434,7 +7898,7 @@ const listParse = <R, A>(
  * @since 1.0.0
  */
 export interface ListFromSelf<Value extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     ListFromSelf<Value>,
     list_.List<Schema.Type<Value>>,
     list_.List<Schema.Encoded<Value>>,
@@ -7452,8 +7916,8 @@ export const ListFromSelf = <Value extends Schema.Any>(
   return declare(
     [value],
     {
-      decode: (item) => listParse(ParseResult.decodeUnknown($Array(item))),
-      encode: (item) => listParse(ParseResult.encodeUnknown($Array(item)))
+      decode: (item) => listParse(ParseResult.decodeUnknown(Array$(item))),
+      encode: (item) => listParse(ParseResult.encodeUnknown(Array$(item)))
     },
     {
       description: `List<${format(value)}>`,
@@ -7469,7 +7933,7 @@ export const ListFromSelf = <Value extends Schema.Any>(
  * @since 1.0.0
  */
 export interface List<Value extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     List<Value>,
     list_.List<Schema.Type<Value>>,
     ReadonlyArray<Schema.Encoded<Value>>,
@@ -7484,7 +7948,7 @@ export interface List<Value extends Schema.Any> extends
 export const List = <Value extends Schema.Any>(value: Value): List<Value> => {
   const value_ = asSchema(value)
   return transform(
-    $Array(value_),
+    Array$(value_),
     ListFromSelf(typeSchema(value_)),
     { decode: (as) => list_.fromIterable(as), encode: (set) => Array.from(set) }
   )
@@ -7512,7 +7976,7 @@ const sortedSetParse = <R, A>(
  * @since 1.0.0
  */
 export interface SortedSetFromSelf<Value extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     SortedSetFromSelf<Value>,
     sortedSet_.SortedSet<Schema.Type<Value>>,
     sortedSet_.SortedSet<Schema.Encoded<Value>>,
@@ -7532,8 +7996,8 @@ export const SortedSetFromSelf = <Value extends Schema.Any>(
   return declare(
     [value],
     {
-      decode: (item) => sortedSetParse(ParseResult.decodeUnknown($Array(item)), ordA),
-      encode: (item) => sortedSetParse(ParseResult.encodeUnknown($Array(item)), ordI)
+      decode: (item) => sortedSetParse(ParseResult.decodeUnknown(Array$(item)), ordA),
+      encode: (item) => sortedSetParse(ParseResult.encodeUnknown(Array$(item)), ordI)
     },
     {
       description: `SortedSet<${format(value)}>`,
@@ -7549,7 +8013,7 @@ export const SortedSetFromSelf = <Value extends Schema.Any>(
  * @since 1.0.0
  */
 export interface SortedSet<Value extends Schema.Any> extends
-  Annotable<
+  AnnotableClass<
     SortedSet<Value>,
     sortedSet_.SortedSet<Schema.Type<Value>>,
     ReadonlyArray<Schema.Encoded<Value>>,
@@ -7568,18 +8032,12 @@ export const SortedSet = <Value extends Schema.Any>(
   const value_ = asSchema(value)
   const to = typeSchema(value_)
   return transform(
-    $Array(value_),
+    Array$(value_),
     SortedSetFromSelf<typeof to>(to, ordA, ordA),
     { decode: (as) => sortedSet_.fromIterable(as, ordA), encode: (set) => Array.from(sortedSet_.values(set)) }
   )
 }
 
-/**
- * @category api interface
- * @since 1.0.0
- */
-export interface BooleanFromUnknown extends Annotable<BooleanFromUnknown, boolean, unknown> {}
-
 /**
  * Converts an arbitrary value to a `boolean` by testing whether it is truthy.
  * Uses `!!val` to coerce the value to a `boolean`.
@@ -7588,8 +8046,11 @@ export interface BooleanFromUnknown extends Annotable<BooleanFromUnknown, boolea
  * @category boolean constructors
  * @since 1.0.0
  */
-export const BooleanFromUnknown: BooleanFromUnknown = transform(
+export class BooleanFromUnknown extends transform(
   Unknown,
-  $Boolean,
+  Boolean$,
   { decode: Predicate.isTruthy, encode: identity }
-).annotations({ identifier: "BooleanFromUnknown" })
+).annotations({ identifier: "BooleanFromUnknown" }) {
+  static override annotations: (annotations: Annotations.Schema<boolean>) => typeof BooleanFromUnknown = super
+    .annotations
+}
diff --git a/src/Serializable.ts b/src/Serializable.ts
index d42e847918b6fbf050e6f71be9f74f0a08e20601..f60f523d807a91215f997defd8faa2b0226b70ae 100644
--- a/src/Serializable.ts
+++ b/src/Serializable.ts
@@ -52,10 +52,10 @@ export const symbolResult: unique symbol = serializable_.symbolResult as any
  * @since 1.0.0
  * @category model
  */
-export interface WithResult<A, I, E, EI, R> {
+export interface WithResult<SuccessA, SuccessI, FailureA, FailureI, SuccessAndFailureR> {
   readonly [symbolResult]: {
-    readonly Success: Schema.Schema<A, I, R>
-    readonly Failure: Schema.Schema<E, EI, R>
+    readonly Success: Schema.Schema<SuccessA, SuccessI, SuccessAndFailureR>
+    readonly Failure: Schema.Schema<FailureA, FailureI, SuccessAndFailureR>
   }
 }
 
@@ -114,8 +114,18 @@ export const exitSchema = <A, I, E, EI, R>(
  * @since 1.0.0
  * @category model
  */
-export interface SerializableWithResult<S, SI, SR, A, AI, E, EI, RR>
-  extends Serializable<S, SI, SR>, WithResult<A, AI, E, EI, RR>
+export interface SerializableWithResult<
+  Self,
+  FieldsI,
+  FieldsR,
+  SuccessA,
+  SuccessI,
+  FailureA,
+  FailureI,
+  SuccessAndFailureR
+> extends
+  Serializable<Self, FieldsI, FieldsR>,
+  WithResult<SuccessA, SuccessI, FailureA, FailureI, SuccessAndFailureR>
 {}
 
 /**
diff --git a/src/TreeFormatter.ts b/src/TreeFormatter.ts
index e2a383da3e0d4a10c00fa105118e8f9ee4555b40..c1df0b555d521a91d416f5777730e428007c05a9 100644
--- a/src/TreeFormatter.ts
+++ b/src/TreeFormatter.ts
@@ -82,7 +82,7 @@ const formatRefinementKind = (kind: ParseResult.Refinement["kind"]): string => {
   }
 }
 
-const getPrevMessage = (
+const getInnerMessage = (
   issue: ParseResult.ParseIssue
 ): Effect.Effect<string, Cause.NoSuchElementException> => {
   switch (issue._tag) {
@@ -92,25 +92,51 @@ const getPrevMessage = (
       }
       break
     }
-    case "Transformation":
+    case "Transformation": {
       return getMessage(issue.error)
+    }
   }
   return Option.none()
 }
 
 const getCurrentMessage: (
   issue: ParseResult.ParseIssue
-) => Effect.Effect<string, Cause.NoSuchElementException> = (issue: ParseResult.ParseIssue) =>
+) => Effect.Effect<{ message: string; override: boolean }, Cause.NoSuchElementException> = (
+  issue: ParseResult.ParseIssue
+) =>
   AST.getMessageAnnotation(issue.ast).pipe(Effect.flatMap((annotation) => {
     const out = annotation(issue)
-    return Predicate.isString(out) ? Effect.succeed(out) : out
+    return Predicate.isString(out)
+      ? Effect.succeed({ message: out, override: false })
+      : Effect.isEffect(out)
+      ? Effect.map(out, (message) => ({ message, override: false }))
+      : Predicate.isString(out.message)
+      ? Effect.succeed({ message: out.message, override: out.override })
+      : Effect.map(out.message, (message) => ({ message, override: out.override }))
   }))
 
 /** @internal */
 export const getMessage: (
   issue: ParseResult.ParseIssue
-) => Effect.Effect<string, Cause.NoSuchElementException> = (issue: ParseResult.ParseIssue) =>
-  Effect.catchAll(getPrevMessage(issue), () => getCurrentMessage(issue))
+) => Effect.Effect<string, Cause.NoSuchElementException> = (issue: ParseResult.ParseIssue) => {
+  const current = getCurrentMessage(issue)
+  return getInnerMessage(issue).pipe(
+    Effect.flatMap((inner) => Effect.map(current, (current) => current.override ? current.message : inner)),
+    Effect.catchAll(() =>
+      Effect.flatMap(current, (current) => {
+        if (
+          !current.override && (
+            (issue._tag === "Refinement" && issue.kind !== "Predicate") ||
+            (issue._tag === "Transformation" && issue.kind !== "Transformation")
+          )
+        ) {
+          return Option.none()
+        }
+        return Effect.succeed(current.message)
+      })
+    )
+  )
+}
 
 const getParseIssueTitleAnnotation = (issue: ParseResult.ParseIssue): Option.Option<string> =>
   Option.filterMap(
@@ -167,7 +193,7 @@ const go = (e: ParseResult.ParseIssue | ParseResult.Missing | ParseResult.Unexpe
         Effect.map(
           Effect.forEach(
             e.errors,
-            (index) => Effect.map(go(index.error), (tree) => make(`[${index.index}]`, [tree]))
+            (index) => Effect.map(go(index.error), (tree) => make(`[${util_.formatPropertyKey(index.index)}]`, [tree]))
           ),
           (forest) => make(getParseIssueTitle(e), forest)
         ))
@@ -175,7 +201,7 @@ const go = (e: ParseResult.ParseIssue | ParseResult.Missing | ParseResult.Unexpe
       return getTree(e, () =>
         Effect.map(
           Effect.forEach(e.errors, (key) =>
-            Effect.map(go(key.error), (tree) => make(`[${util_.formatUnknown(key.key)}]`, [tree]))),
+            Effect.map(go(key.error), (tree) => make(`[${util_.formatPropertyKey(key.key)}]`, [tree]))),
           (forest) =>
             make(getParseIssueTitle(e), forest)
         ))
diff --git a/src/internal/errors.ts b/src/internal/errors.ts
index c4e218da3eba22745f2d9bd5c6bbc0b141f0726f..a2c8acafd7c63cf14b918c3143cb6156291903f1 100644
--- a/src/internal/errors.ts
+++ b/src/internal/errors.ts
@@ -5,29 +5,13 @@ export const getDuplicatePropertySignatureErrorMessage = (name: PropertyKey): st
   `Duplicate property signature ${util_.formatUnknown(name)}`
 
 /** @internal */
-export const getDuplicateIndexSignatureErrorMessage = (name: "string" | "symbol"): string =>
-  `Duplicate index signature for type \`${name}\``
+export const getErrorMessage = (api: string, message: string) => `${api}: ${message}`
 
 /** @internal */
-export const getIndexSignatureParameterErrorMessage =
-  "An index signature parameter type must be `string`, `symbol`, a template literal type or a refinement of the previous types"
-
-/** @internal */
-export const getRequiredElementFollowinAnOptionalElementErrorMessage =
-  "A required element cannot follow an optional element. ts(1257)"
-
-/** @internal */
-export const getDuplicatePropertySignatureTransformationErrorMessage = (name: PropertyKey): string =>
-  `Duplicate property signature transformation ${util_.formatUnknown(name)}`
-
-/** @internal */
-export const getArbitraryErrorMessage = (message: string) => `cannot build an Arbitrary for ${message}`
-
-/** @internal */
-export const getPrettyErrorMessage = (message: string) => `cannot build a Pretty for ${message}`
-
-/** @internal */
-export const getEquivalenceErrorMessage = (message: string) => `cannot build an Equivalence for ${message}`
-
-/** @internal */
-export const getAPIErrorMessage = (api: string, message: string) => `${api}: ${message}`
+export const getErrorMessageWithPath = (message: string, path: ReadonlyArray<PropertyKey>) => {
+  let out = message
+  if (path.length > 0) {
+    out += ` (path [${path.map(util_.formatPropertyKey).join(", ")}])`
+  }
+  return out
+}
